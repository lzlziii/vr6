using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq.Expressions;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using CircularGravityForce.UnityStandardAssets.Characters.FirstPerson;
using CircularGravityForce.UnityStandardAssets.Utility;
using Crosstales.Radio;
using DigitalOpus.MB.Core;
using Dynamite3D.RealIvy;
using Il2CppDummyDll;
using Kalman;
using Moments;
using Moments.Encoder;
using Oculus.Platform;
using Oculus.Platform.Models;
using ParticlePlayground;
using Pico.Platform;
using Pico.Platform.Models;
using PlaygroundSplines;
using QFXToolKit;
using Sigtrap.VrTunnellingPro;
using Steamworks;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityStandardAssets.ImageEffects;
using UnityStandardAssets.Utility;
using Viveport;
using Viveport.Internal;
using uAudio;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class PlayerController : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IvyCaster ivyCaster;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform trIvy;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xCD8C54", Offset = "0xCD8C54", VA = "0xCD8C54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xCD8D10", Offset = "0xCD8D10", VA = "0xCD8D10")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000003")]
public class AR_UI_Selector : MonoBehaviour
{
	[Token(Token = "0x2000004")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5A9C", Offset = "0xAA5A9C")]
	private sealed class <cooldown>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AR_UI_Selector <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600000B")]
			[Address(RVA = "0xE8FA78", Offset = "0xE8FA78", VA = "0xE8FA78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600000D")]
			[Address(RVA = "0xE8FAC0", Offset = "0xE8FAC0", VA = "0xE8FAC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000008")]
		[Address(RVA = "0xE8F99C", Offset = "0xE8F99C", VA = "0xE8F99C")]
		[DebuggerHidden]
		public <cooldown>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000009")]
		[Address(RVA = "0xE8F9C8", Offset = "0xE8F9C8", VA = "0xE8F9C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600000A")]
		[Address(RVA = "0xE8F9CC", Offset = "0xE8F9CC", VA = "0xE8F9CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600000C")]
		[Address(RVA = "0xE8FA80", Offset = "0xE8FA80", VA = "0xE8FA80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip selectClip;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform UISelector;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform UIIndicator;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform UIFlatIndicator;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform thumbTip;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform indexTip;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform head;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float raycastDistance;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HandController handController;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 indicatorOrigScale;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 flatindicatorOrigScale;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool cooledDown;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool waitforopen;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x133B510", Offset = "0x133B510", VA = "0x133B510")]
	private void Start()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x133B660", Offset = "0x133B660", VA = "0x133B660")]
	private float map(float s, float a1, float a2, float b1, float b2)
	{
		return default(float);
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x133B67C", Offset = "0x133B67C", VA = "0x133B67C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB938C", Offset = "0xAB938C")]
	private IEnumerator cooldown()
	{
		return null;
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x133B6E8", Offset = "0x133B6E8", VA = "0x133B6E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x133BD4C", Offset = "0x133BD4C", VA = "0x133BD4C")]
	public AR_UI_Selector()
	{
	}
}
[Token(Token = "0x2000005")]
public class AccelerationPlate : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fogGO;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x133BD68", Offset = "0x133BD68", VA = "0x133BD68")]
	private void Start()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x133BDC4", Offset = "0x133BDC4", VA = "0x133BDC4")]
	public void setQuality(int qualitylevel)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x133BDF8", Offset = "0x133BDF8", VA = "0x133BDF8")]
	public AccelerationPlate()
	{
	}
}
[Token(Token = "0x2000006")]
public class AccelerationTube : MonoBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fogGO;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x133BE00", Offset = "0x133BE00", VA = "0x133BE00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x133BE5C", Offset = "0x133BE5C", VA = "0x133BE5C")]
	public void setQuality(int qualitylevel)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x133BE90", Offset = "0x133BE90", VA = "0x133BE90")]
	public AccelerationTube()
	{
	}
}
[Token(Token = "0x2000007")]
public class ActivatableButton : MonoBehaviour
{
	[Token(Token = "0x2000008")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5AAC", Offset = "0xAA5AAC")]
	private sealed class <KeepOn>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400001C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ActivatableButton <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600001C")]
			[Address(RVA = "0xE8FBDC", Offset = "0xE8FBDC", VA = "0xE8FBDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600001E")]
			[Address(RVA = "0xE8FC24", Offset = "0xE8FC24", VA = "0xE8FC24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000019")]
		[Address(RVA = "0xE8FAC8", Offset = "0xE8FAC8", VA = "0xE8FAC8")]
		[DebuggerHidden]
		public <KeepOn>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600001A")]
		[Address(RVA = "0xE8FAF4", Offset = "0xE8FAF4", VA = "0xE8FAF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600001B")]
		[Address(RVA = "0xE8FAF8", Offset = "0xE8FAF8", VA = "0xE8FAF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600001D")]
		[Address(RVA = "0xE8FBE4", Offset = "0xE8FBE4", VA = "0xE8FBE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isOn;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Switchable_Tube[] tubes;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float stayontime;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int numberofballs;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x133BE98", Offset = "0x133BE98", VA = "0x133BE98")]
	public void reset()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x133BF14", Offset = "0x133BF14", VA = "0x133BF14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB943C", Offset = "0xAB943C")]
	private IEnumerator KeepOn(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x133BF90", Offset = "0x133BF90", VA = "0x133BF90")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x133C0E0", Offset = "0x133C0E0", VA = "0x133C0E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x133C2AC", Offset = "0x133C2AC", VA = "0x133C2AC")]
	public ActivatableButton()
	{
	}
}
[Token(Token = "0x2000009")]
public class ActivateDesktopGeo : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject desktopGeo;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string desktopResource;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject mobileGeo;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform newParent;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int minimumRequiredQualityLevel;

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x133C2BC", Offset = "0x133C2BC", VA = "0x133C2BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x133C504", Offset = "0x133C504", VA = "0x133C504")]
	public ActivateDesktopGeo()
	{
	}
}
[Token(Token = "0x200000A")]
public class AdjustToOVRBoundary : MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject wallMarker;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform holder;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool setup;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x133CF94", Offset = "0x133CF94", VA = "0x133CF94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x133CF98", Offset = "0x133CF98", VA = "0x133CF98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x133D214", Offset = "0x133D214", VA = "0x133D214")]
	public AdjustToOVRBoundary()
	{
	}
}
[Token(Token = "0x200000B")]
public class INIParser
{
	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int error;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private object m_Lock;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_FileName;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_iniString;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_AutoFlush;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, Dictionary<string, string>> m_Sections;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, Dictionary<string, string>> m_Modified;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_CacheModified;

	[Token(Token = "0x17000005")]
	public string FileName
	{
		[Token(Token = "0x6000024")]
		[Address(RVA = "0x1227874", Offset = "0x1227874", VA = "0x1227874")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000006")]
	public string iniString
	{
		[Token(Token = "0x6000025")]
		[Address(RVA = "0x122787C", Offset = "0x122787C", VA = "0x122787C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1227884", Offset = "0x1227884", VA = "0x1227884")]
	public void Open(string path)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x122793C", Offset = "0x122793C", VA = "0x122793C")]
	public void Open(TextAsset name)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1227A48", Offset = "0x1227A48", VA = "0x1227A48")]
	public void OpenFromString(string str)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x1227A54", Offset = "0x1227A54", VA = "0x1227A54", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x122792C", Offset = "0x122792C", VA = "0x122792C")]
	private void Initialize(string iniString, bool AutoFlush)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1227D94", Offset = "0x1227D94", VA = "0x1227D94")]
	public void Close()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1228AA8", Offset = "0x1228AA8", VA = "0x1228AA8")]
	private string ParseSectionName(string Line)
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1228B5C", Offset = "0x1228B5C", VA = "0x1228B5C")]
	private bool ParseKeyValuePair(string Line, ref string Key, ref string Value)
	{
		return default(bool);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1228C58", Offset = "0x1228C58", VA = "0x1228C58")]
	private bool isComment(string Line)
	{
		return default(bool);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1227A5C", Offset = "0x1227A5C", VA = "0x1227A5C")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1227E5C", Offset = "0x1227E5C", VA = "0x1227E5C")]
	private void PerformFlush()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1228CA8", Offset = "0x1228CA8", VA = "0x1228CA8")]
	public bool IsSectionExists(string SectionName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x1228D0C", Offset = "0x1228D0C", VA = "0x1228D0C")]
	public bool IsKeyExists(string SectionName, string Key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1228DE8", Offset = "0x1228DE8", VA = "0x1228DE8")]
	public void SectionDelete(string SectionName)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x1228F40", Offset = "0x1228F40", VA = "0x1228F40")]
	public void KeyDelete(string SectionName, string Key)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x122910C", Offset = "0x122910C", VA = "0x122910C")]
	public string ReadValue(string SectionName, string Key, string DefaultValue)
	{
		return null;
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1229278", Offset = "0x1229278", VA = "0x1229278")]
	public void WriteValue(string SectionName, string Key, string Value)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x12295C8", Offset = "0x12295C8", VA = "0x12295C8")]
	private string EncodeByteArray(byte[] Value)
	{
		return null;
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x122976C", Offset = "0x122976C", VA = "0x122976C")]
	private byte[] DecodeByteArray(string Value)
	{
		return null;
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x12298B0", Offset = "0x12298B0", VA = "0x12298B0")]
	public bool ReadValue(string SectionName, string Key, bool DefaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1229988", Offset = "0x1229988", VA = "0x1229988")]
	public int ReadValue(string SectionName, string Key, int DefaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1229A68", Offset = "0x1229A68", VA = "0x1229A68")]
	public long ReadValue(string SectionName, string Key, long DefaultValue)
	{
		return default(long);
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1229B48", Offset = "0x1229B48", VA = "0x1229B48")]
	public double ReadValue(string SectionName, string Key, double DefaultValue)
	{
		return default(double);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1229C5C", Offset = "0x1229C5C", VA = "0x1229C5C")]
	public byte[] ReadValue(string SectionName, string Key, byte[] DefaultValue)
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1229D28", Offset = "0x1229D28", VA = "0x1229D28")]
	public DateTime ReadValue(string SectionName, string Key, DateTime DefaultValue)
	{
		return default(DateTime);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1229E3C", Offset = "0x1229E3C", VA = "0x1229E3C")]
	public void WriteValue(string SectionName, string Key, bool Value)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x1229ED0", Offset = "0x1229ED0", VA = "0x1229ED0")]
	public void WriteValue(string SectionName, string Key, int Value)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1229F74", Offset = "0x1229F74", VA = "0x1229F74")]
	public void WriteValue(string SectionName, string Key, long Value)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x122A018", Offset = "0x122A018", VA = "0x122A018")]
	public void WriteValue(string SectionName, string Key, double Value)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x122A0BC", Offset = "0x122A0BC", VA = "0x122A0BC")]
	public void WriteValue(string SectionName, string Key, byte[] Value)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x122A100", Offset = "0x122A100", VA = "0x122A100")]
	public void WriteValue(string SectionName, string Key, DateTime Value)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x122A1A4", Offset = "0x122A1A4", VA = "0x122A1A4")]
	public INIParser()
	{
	}
}
[Token(Token = "0x200000C")]
public class AirLockTutorial : MonoBehaviour
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool started;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource[] others;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x133D21C", Offset = "0x133D21C", VA = "0x133D21C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x133D31C", Offset = "0x133D31C", VA = "0x133D31C")]
	public AirLockTutorial()
	{
	}
}
[Token(Token = "0x200000D")]
public class AirlockController : MonoBehaviour
{
	[Token(Token = "0x200000E")]
	public enum AirlockState
	{
		[Token(Token = "0x400003D")]
		openLeft,
		[Token(Token = "0x400003E")]
		openRight,
		[Token(Token = "0x400003F")]
		closed
	}

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NewGameManager.LevelEnvironment leftSide;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public NewGameManager.LevelEnvironment rightSide;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VF_UIELement leftOutsideButton;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VF_UIELement leftInsideButton;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VF_UIELement rightOutsideButton;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VF_UIELement rightInsideButton;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DoorAnimator leftDoor1;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DoorAnimator leftDoor2;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DoorAnimator rightDoor1;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DoorAnimator rightDoor2;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NewGameManager gameManager;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AirlockState state;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x133D324", Offset = "0x133D324", VA = "0x133D324")]
	private void Start()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x133D39C", Offset = "0x133D39C", VA = "0x133D39C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x133D440", Offset = "0x133D440", VA = "0x133D440")]
	public void hideAllButons()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x133D49C", Offset = "0x133D49C", VA = "0x133D49C")]
	public void OpenLeftSideFromOutside()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x133D51C", Offset = "0x133D51C", VA = "0x133D51C")]
	public void OpenLeftSideFromInside()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x133D5D4", Offset = "0x133D5D4", VA = "0x133D5D4")]
	public void OpenRightSideFromOutside()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x133D658", Offset = "0x133D658", VA = "0x133D658")]
	public void OpenRightSideFromInside()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x133D714", Offset = "0x133D714", VA = "0x133D714")]
	public AirlockController()
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xAA5ABC", Offset = "0xAA5ABC")]
public class ShowIfAttribute : PropertyAttribute
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string EnumField;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public object EnumValue;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x10443C8", Offset = "0x10443C8", VA = "0x10443C8")]
	public ShowIfAttribute(string enumField, object enumValue)
	{
	}
}
[Token(Token = "0x2000010")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA5AF4", Offset = "0xAA5AF4")]
public class ValveLight : MonoBehaviour
{
	[Token(Token = "0x2000011")]
	public enum LightPreset
	{
		[Token(Token = "0x4000049")]
		NORMAL = 0,
		[Token(Token = "0x400004A")]
		FLICKER_A = 1,
		[Token(Token = "0x400004B")]
		FLICKER_B = 6,
		[Token(Token = "0x400004C")]
		FLUORESCENT_FLICKER = 10,
		[Token(Token = "0x400004D")]
		GENTLE_PULSE = 5,
		[Token(Token = "0x400004E")]
		SLOW_STRONG_PULSE = 2,
		[Token(Token = "0x400004F")]
		SLOW_PULSE_NOBLOCK = 11,
		[Token(Token = "0x4000050")]
		FAST_STROBE = 4,
		[Token(Token = "0x4000051")]
		SLOW_STROBE = 9,
		[Token(Token = "0x4000052")]
		CANDLE_A = 3,
		[Token(Token = "0x4000053")]
		CANDLE_B = 7,
		[Token(Token = "0x4000054")]
		CANDLE_C = 8,
		[Token(Token = "0x4000055")]
		CUSTOM_PATTERN = 64
	}

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA8E04", Offset = "0xAA8E04")]
	public LightPreset Preset;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xAA8E3C", Offset = "0xAA8E3C")]
	public string CustomPattern;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA8ECC", Offset = "0xAA8ECC")]
	public float MaxIntensity;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA8EE4", Offset = "0xAA8EE4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA8EE4", Offset = "0xAA8EE4")]
	public int FPS;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA8F38", Offset = "0xAA8F38")]
	public float TimeOffset;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Light Light;

	[Token(Token = "0x17000007")]
	private string Pattern
	{
		[Token(Token = "0x6000051")]
		[Address(RVA = "0xE80C38", Offset = "0xE80C38", VA = "0xE80C38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xE80DBC", Offset = "0xE80DBC", VA = "0xE80DBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xE80E10", Offset = "0xE80E10", VA = "0xE80E10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xE80F28", Offset = "0xE80F28", VA = "0xE80F28")]
	public ValveLight()
	{
	}
}
[Token(Token = "0x2000012")]
public class AllUIElements : MonoBehaviour
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VF_UIELement[] allUI;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x133D724", Offset = "0x133D724", VA = "0x133D724")]
	private void Start()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x133D7A0", Offset = "0x133D7A0", VA = "0x133D7A0")]
	public AllUIElements()
	{
	}
}
[Token(Token = "0x2000013")]
public class AnimatedRobotHand : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA8F50", Offset = "0xAA8F50")]
	public float[] fingerCurrentBends;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] fingerDistanceToSurface;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] finger1_Parts;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] finger2_Parts;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] finger3_Parts;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] finger4_Parts;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] finger5_Parts;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] finger1_MaxBends;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float[] finger2_MaxBends;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float[] finger3_MaxBends;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float[] finger4_MaxBends;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float[] finger5_MaxBends;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3[] finger1_Rests;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3[] finger2_Rests;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3[] finger3_Rests;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3[] finger4_Rests;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3[] finger5_Rests;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3[] finger1_Bends;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3[] finger2_Bends;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector3[] finger3_Bends;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3[] finger4_Bends;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3[] finger5_Bends;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private HandController handController;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool useFullAngleLerp;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool inGrabRange;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int uiLayer;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float updateTimer;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float updateInterval;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x13437C4", Offset = "0x13437C4", VA = "0x13437C4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x1343B00", Offset = "0x1343B00", VA = "0x1343B00")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1343C34", Offset = "0x1343C34", VA = "0x1343C34")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1343D2C", Offset = "0x1343D2C", VA = "0x1343D2C")]
	private void MyFixedUpdate()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1343D48", Offset = "0x1343D48", VA = "0x1343D48")]
	private void Update()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x1343DC0", Offset = "0x1343DC0", VA = "0x1343DC0")]
	public void setFingerBends()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x13448F4", Offset = "0x13448F4", VA = "0x13448F4")]
	public float getBend(float rest, float max, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1344908", Offset = "0x1344908", VA = "0x1344908")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xAB94EC", Offset = "0xAB94EC")]
	public void autoFillRests()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1344BD8", Offset = "0x1344BD8", VA = "0x1344BD8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xAB9524", Offset = "0xAB9524")]
	public void autoFillBends()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1344EA8", Offset = "0x1344EA8", VA = "0x1344EA8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xAB955C", Offset = "0xAB955C")]
	public void set0Bend()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1344F00", Offset = "0x1344F00", VA = "0x1344F00")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xAB9594", Offset = "0xAB9594")]
	public void setmaxBend()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1344F7C", Offset = "0x1344F7C", VA = "0x1344F7C")]
	private float wrapAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1344FA0", Offset = "0x1344FA0", VA = "0x1344FA0")]
	public AnimatedRobotHand()
	{
	}
}
[Token(Token = "0x2000014")]
public class BallCounter : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int balls;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x134A640", Offset = "0x134A640", VA = "0x134A640")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x134A6D0", Offset = "0x134A6D0", VA = "0x134A6D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x134A760", Offset = "0x134A760", VA = "0x134A760")]
	public BallCounter()
	{
	}
}
[Token(Token = "0x2000015")]
public class BallDestroyer : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject explosionPrefab;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandController hand;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x134A768", Offset = "0x134A768", VA = "0x134A768")]
	private void Start()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x134A7BC", Offset = "0x134A7BC", VA = "0x134A7BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x134A960", Offset = "0x134A960", VA = "0x134A960")]
	public BallDestroyer()
	{
	}
}
[Token(Token = "0x2000016")]
public class BallGravity : MonoBehaviour
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rB;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float localGravity;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float storedLocalGravity;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float weight;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timer;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distanceTraveled;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 prevPos;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GlobalGravityManager gAManager;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool weightless;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x134A968", Offset = "0x134A968", VA = "0x134A968")]
	private void Start()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x134AA24", Offset = "0x134AA24", VA = "0x134AA24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x134AB64", Offset = "0x134AB64", VA = "0x134AB64")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x134AC70", Offset = "0x134AC70", VA = "0x134AC70")]
	public BallGravity()
	{
	}
}
[Token(Token = "0x2000017")]
public class BallHitAudio : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audio;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] impactSounds;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float multiplier;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float pitchMultiplier;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x134AC90", Offset = "0x134AC90", VA = "0x134AC90")]
	private void Start()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x134ACE4", Offset = "0x134ACE4", VA = "0x134ACE4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x134AEC0", Offset = "0x134AEC0", VA = "0x134AEC0")]
	public BallHitAudio()
	{
	}
}
[Token(Token = "0x2000018")]
public class BallSpawnerManager : MonoBehaviour
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TubeBallSpawner[] tubes;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x134AED0", Offset = "0x134AED0", VA = "0x134AED0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x134AED4", Offset = "0x134AED4", VA = "0x134AED4")]
	public void updateGates()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x134AFB4", Offset = "0x134AFB4", VA = "0x134AFB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x134AFB8", Offset = "0x134AFB8", VA = "0x134AFB8")]
	public BallSpawnerManager()
	{
	}
}
[Token(Token = "0x2000019")]
public class AsteroidRotation : MonoBehaviour
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rot;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1348D88", Offset = "0x1348D88", VA = "0x1348D88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1348DF0", Offset = "0x1348DF0", VA = "0x1348DF0")]
	public AsteroidRotation()
	{
	}
}
[Token(Token = "0x200001A")]
public class AutoBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _transform;

	[Token(Token = "0x17000008")]
	protected new Transform transform
	{
		[Token(Token = "0x6000077")]
		[Address(RVA = "0x134A198", Offset = "0x134A198", VA = "0x134A198")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x134A1F4", Offset = "0x134A1F4", VA = "0x134A1F4")]
	public AutoBehaviour()
	{
	}
}
[Token(Token = "0x200001B")]
public class BlackHoleCamera : AutoBehaviour
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform BlackHoleTransform;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool EinsteinRadiusCompliance;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Radius;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera blackHoleCamera;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera newCamera;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BlackHoleRenderer blackHoleRenderer;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float farClip;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x134C488", Offset = "0x134C488", VA = "0x134C488")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x134C6B4", Offset = "0x134C6B4", VA = "0x134C6B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x134C870", Offset = "0x134C870", VA = "0x134C870")]
	public BlackHoleCamera()
	{
	}
}
[Token(Token = "0x200001C")]
[ExecuteInEditMode]
public class BlackHoleRenderer : AutoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float ratio;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float radius;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool EinsteinRadiusCompliance;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Transform BH;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader shader;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int outOfScreen;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _material;

	[Token(Token = "0x17000009")]
	protected Material material
	{
		[Token(Token = "0x600007C")]
		[Address(RVA = "0x134C878", Offset = "0x134C878", VA = "0x134C878")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x134C944", Offset = "0x134C944", VA = "0x134C944", Slot = "4")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x134C9F0", Offset = "0x134C9F0", VA = "0x134C9F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x134CA88", Offset = "0x134CA88", VA = "0x134CA88")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x134CEB8", Offset = "0x134CEB8", VA = "0x134CEB8")]
	private float Remap(float value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x134CED4", Offset = "0x134CED4", VA = "0x134CED4")]
	public BlackHoleRenderer()
	{
	}
}
[Token(Token = "0x200001D")]
[ExecuteInEditMode]
public class BlackHoleSphere : MonoBehaviour
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material mat;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_tansform;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xFFCA7C", Offset = "0xFFCA7C", VA = "0xFFCA7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xFFCAF0", Offset = "0xFFCAF0", VA = "0xFFCAF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xFFCBBC", Offset = "0xFFCBBC", VA = "0xFFCBBC")]
	public BlackHoleSphere()
	{
	}
}
[Token(Token = "0x200001E")]
public class LookAt : AutoBehaviour
{
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Target;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x24E72B4", Offset = "0x24E72B4", VA = "0x24E72B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x24E7300", Offset = "0x24E7300", VA = "0x24E7300")]
	public LookAt()
	{
	}
}
[Token(Token = "0x200001F")]
public class MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 rot;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xBEF480", Offset = "0xBEF480", VA = "0xBEF480")]
	private void Update()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xBEF5E0", Offset = "0xBEF5E0", VA = "0xBEF5E0")]
	public MouseOrbit()
	{
	}
}
[Token(Token = "0x2000020")]
public class BodyIKDemoScript : MonoBehaviour
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xFFE318", Offset = "0xFFE318", VA = "0xFFE318")]
	private void Update()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xFFE3B4", Offset = "0xFFE3B4", VA = "0xFFE3B4")]
	public BodyIKDemoScript()
	{
	}
}
[Token(Token = "0x2000021")]
public class BonusRing : MonoBehaviour
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int targetNumber;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int currentNumber;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro displayText;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ballImage;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject dodecahedronImage;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject octahedronImage;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip clip;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VF_UIELement selectionButton;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GrabbableObject grabbableObject;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VR_UI_ElementHolder increaseButtons;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VR_UI_ElementHolder ballButtons;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool countsBalls;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool countsDodecahedrons;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool countsOctahedrons;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	public bool isfull;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xFFEA3C", Offset = "0xFFEA3C", VA = "0xFFEA3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xFFEB3C", Offset = "0xFFEB3C", VA = "0xFFEB3C")]
	public void lockUIElement()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xFFEB34", Offset = "0xFFEB34", VA = "0xFFEB34")]
	public void resetCounter()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xFFECA8", Offset = "0xFFECA8", VA = "0xFFECA8")]
	public void ToggleBall(int i)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xFFECEC", Offset = "0xFFECEC", VA = "0xFFECEC")]
	public void IncreaseTarget()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xFFECFC", Offset = "0xFFECFC", VA = "0xFFECFC")]
	public void DecreaseTarget()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xFFEBA8", Offset = "0xFFEBA8", VA = "0xFFEBA8")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xFFED14", Offset = "0xFFED14", VA = "0xFFED14")]
	public void showOptionsButton()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xFFED30", Offset = "0xFFED30", VA = "0xFFED30")]
	public void hideOptionsButton()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xFFEE00", Offset = "0xFFEE00", VA = "0xFFEE00")]
	public void showMenu()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xFFEA64", Offset = "0xFFEA64", VA = "0xFFEA64")]
	public void disableMenu()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xFFEED0", Offset = "0xFFEED0", VA = "0xFFEED0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xFFEF74", Offset = "0xFFEF74", VA = "0xFFEF74")]
	public BonusRing()
	{
	}
}
[Token(Token = "0x2000022")]
public class Bounce : MonoBehaviour
{
	[Token(Token = "0x6000098")]
	[Address(RVA = "0xFFEF8C", Offset = "0xFFEF8C", VA = "0xFFEF8C")]
	public void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xFFF0B8", Offset = "0xFFF0B8", VA = "0xFFF0B8")]
	public Bounce()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA5B74", Offset = "0xAA5B74")]
public class BuildDate : MonoBehaviour
{
	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1002B78", Offset = "0x1002B78", VA = "0x1002B78")]
	private void Start()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1002BF0", Offset = "0x1002BF0", VA = "0x1002BF0")]
	public BuildDate()
	{
	}
}
[Token(Token = "0x2000024")]
public class BuildVersionText : MonoBehaviour
{
	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1002BF8", Offset = "0x1002BF8", VA = "0x1002BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1002BFC", Offset = "0x1002BFC", VA = "0x1002BFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1002C00", Offset = "0x1002C00", VA = "0x1002C00")]
	public BuildVersionText()
	{
	}
}
[Token(Token = "0x2000025")]
public class ButtonHighlight : MonoBehaviour
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool highlightTeleport;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool highlightWalk;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool highlightTrigger;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool highlightMenu;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material highlightMat;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material standardMat;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool turnOff;

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x10045BC", Offset = "0x10045BC", VA = "0x10045BC")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1004874", Offset = "0x1004874", VA = "0x1004874")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1004A5C", Offset = "0x1004A5C", VA = "0x1004A5C")]
	public ButtonHighlight()
	{
	}
}
[Token(Token = "0x2000026")]
public struct CameraPayload
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint protocolIdentifier;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float px;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float py;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float pz;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float qx;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float qy;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float qz;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float qw;

	[Token(Token = "0x40000B7")]
	public const int StructSize = 32;

	[Token(Token = "0x40000B8")]
	public const uint identifier = 13371337u;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x107F640", Offset = "0x107F640", VA = "0x107F640")]
	public static CameraPayload FromBytes(byte[] arr)
	{
		return default(CameraPayload);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x107F794", Offset = "0x107F794", VA = "0x107F794")]
	public OVRPose ToPose()
	{
		return default(OVRPose);
	}
}
[Token(Token = "0x2000027")]
public class CameraTestServer : MonoBehaviour
{
	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TcpListener tcpListener;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Thread tcpListenerThread;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TcpClient connectedTcpClient;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRPose? calibratedCameraPose;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRPose cameraPose;

	[Token(Token = "0x40000BE")]
	public const int MaxBufferLength = 65536;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x107F8CC", Offset = "0x107F8CC", VA = "0x107F8CC")]
	public void Start()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x107F99C", Offset = "0x107F99C", VA = "0x107F99C")]
	public void Update()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x107FBF0", Offset = "0x107FBF0", VA = "0x107FBF0")]
	private void ListenForIncomingRequests()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x10803DC", Offset = "0x10803DC", VA = "0x10803DC")]
	public CameraTestServer()
	{
	}
}
[Token(Token = "0x2000028")]
public class CharacterCOntrollerLocomotion : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 upVect;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1080438", Offset = "0x1080438", VA = "0x1080438")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x10804CC", Offset = "0x10804CC", VA = "0x10804CC")]
	public CharacterCOntrollerLocomotion()
	{
	}
}
[Token(Token = "0x2000029")]
public class CollectorTube : MonoBehaviour
{
	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject explosionPrefab;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool alwaysLocked;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int targetNumber;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int currentNumber;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro displayText;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ballImage;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject dodecahedronImage;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject octahedronImage;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isFull;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip clip;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VF_UIELement selectionButton;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GrabbableObject grabbableObject;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VR_UI_ElementHolder increaseButtons;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VR_UI_ElementHolder ballButtons;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Sprite originalSprite;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool countsBalls;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool countsDodecahedrons;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool countsOctahedrons;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite lockSprite;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x1082214", Offset = "0x1082214", VA = "0x1082214")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x10825B0", Offset = "0x10825B0", VA = "0x10825B0")]
	public void lockUIElement()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x108261C", Offset = "0x108261C", VA = "0x108261C")]
	public void unlockUIElement()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1082690", Offset = "0x1082690", VA = "0x1082690")]
	public void reset()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x108269C", Offset = "0x108269C", VA = "0x108269C")]
	public void ToggleBall(int i)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x10826E0", Offset = "0x10826E0", VA = "0x10826E0")]
	public void IncreaseTarget()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x10826F0", Offset = "0x10826F0", VA = "0x10826F0")]
	public void DecreaseTarget()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1082308", Offset = "0x1082308", VA = "0x1082308")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1082708", Offset = "0x1082708", VA = "0x1082708")]
	public void showOptionsButton()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1082724", Offset = "0x1082724", VA = "0x1082724")]
	public void hideOptionsButton()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x10827F4", Offset = "0x10827F4", VA = "0x10827F4")]
	public void showMenu()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1082238", Offset = "0x1082238", VA = "0x1082238")]
	public void disableMenu()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x10828C4", Offset = "0x10828C4", VA = "0x10828C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1082EF8", Offset = "0x1082EF8", VA = "0x1082EF8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1083174", Offset = "0x1083174", VA = "0x1083174")]
	public CollectorTube()
	{
	}
}
[Token(Token = "0x200002A")]
public class ContactBlock : MonoBehaviour
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SignalGenerator gen;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x1087744", Offset = "0x1087744", VA = "0x1087744")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x10877E8", Offset = "0x10877E8", VA = "0x10877E8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x108788C", Offset = "0x108788C", VA = "0x108788C")]
	public ContactBlock()
	{
	}
}
[Token(Token = "0x200002B")]
public class CopyPosAndRot : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x1087BC0", Offset = "0x1087BC0", VA = "0x1087BC0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x1087C40", Offset = "0x1087C40", VA = "0x1087C40")]
	public CopyPosAndRot()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA5BD4", Offset = "0xAA5BD4")]
public class MouseLookOmni : MonoBehaviour
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int speed;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool lockMouse;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode key;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xBEF324", Offset = "0xBEF324", VA = "0xBEF324", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xBEF35C", Offset = "0xBEF35C", VA = "0xBEF35C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xBEF44C", Offset = "0xBEF44C", VA = "0xBEF44C")]
	public MouseLookOmni()
	{
	}
}
[Serializable]
[Token(Token = "0x200002D")]
public class Move3D2 : MonoBehaviour
{
	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string AxisX;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string AxisY;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string AxisZ;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA8FA8", Offset = "0xAA8FA8")]
	public bool detectCollisions;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xBF1AE8", Offset = "0xBF1AE8", VA = "0xBF1AE8", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xBF1D34", Offset = "0xBF1D34", VA = "0xBF1D34")]
	public Move3D2()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public class WormholeDemo : MonoBehaviour
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fudge;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer wormhole;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material SkyboxA;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material SkyboxB;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Cubemap CubemapA;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Cubemap CubemapB;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xE8C550", Offset = "0xE8C550", VA = "0xE8C550")]
	public void Start()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xE8C5C0", Offset = "0xE8C5C0", VA = "0xE8C5C0", Slot = "4")]
	public virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xE8C780", Offset = "0xE8C780", VA = "0xE8C780")]
	public WormholeDemo()
	{
	}
}
[Token(Token = "0x200002F")]
public class DetectDeviceAndLoadNextScene : MonoBehaviour
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool loading;

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x108F7B8", Offset = "0x108F7B8", VA = "0x108F7B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x108F948", Offset = "0x108F948", VA = "0x108F948")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x108F9DC", Offset = "0x108F9DC", VA = "0x108F9DC")]
	public DetectDeviceAndLoadNextScene()
	{
	}
}
[Token(Token = "0x2000030")]
public class DisplayScript : MonoBehaviour
{
	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x108FDEC", Offset = "0x108FDEC", VA = "0x108FDEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1090118", Offset = "0x1090118", VA = "0x1090118")]
	public DisplayScript()
	{
	}
}
[Token(Token = "0x2000031")]
public class DoorAnimator : MonoBehaviour
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animation anim;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string animName;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1C2E228", Offset = "0x1C2E228", VA = "0x1C2E228")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x1C2E27C", Offset = "0x1C2E27C", VA = "0x1C2E27C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1C2E280", Offset = "0x1C2E280", VA = "0x1C2E280")]
	public void OpenDoor()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1C2E3C4", Offset = "0x1C2E3C4", VA = "0x1C2E3C4")]
	public void CloseDoor()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1C2E508", Offset = "0x1C2E508", VA = "0x1C2E508")]
	public DoorAnimator()
	{
	}
}
[Token(Token = "0x2000032")]
public class AES : MonoBehaviour
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte[] AES_Key;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private byte[] AES_IV;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int KEY_Size;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int IV_Size;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string KEY;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string IV;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string KEY64Str;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string IV64Str;

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x133AA40", Offset = "0x133AA40", VA = "0x133AA40")]
	public AES(string key, string iv)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x133AA80", Offset = "0x133AA80", VA = "0x133AA80")]
	public void Setting(string key, string iv)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x133AB84", Offset = "0x133AB84", VA = "0x133AB84")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x133AB8C", Offset = "0x133AB8C", VA = "0x133AB8C")]
	public string Encrypt(string text)
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x133AFF0", Offset = "0x133AFF0", VA = "0x133AFF0")]
	private string ReadByte(byte[] bytearray)
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x133B11C", Offset = "0x133B11C", VA = "0x133B11C")]
	public string Decrypt(string text)
	{
		return null;
	}
}
[Token(Token = "0x2000033")]
public class Demo : MonoBehaviour
{
	[Token(Token = "0x2000034")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5C0C", Offset = "0xAA5C0C")]
	private sealed class <WaitForRequest>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WWW www;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Demo <>4__this;

		[Token(Token = "0x1700000A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DF")]
			[Address(RVA = "0xCB81BC", Offset = "0xCB81BC", VA = "0xCB81BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0xCB8204", Offset = "0xCB8204", VA = "0xCB8204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0xCB7FEC", Offset = "0xCB7FEC", VA = "0xCB7FEC")]
		[DebuggerHidden]
		public <WaitForRequest>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0xCB8018", Offset = "0xCB8018", VA = "0xCB8018", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0xCB801C", Offset = "0xCB801C", VA = "0xCB801C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0xCB81C4", Offset = "0xCB81C4", VA = "0xCB81C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AES Aes;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string message;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string encryptedtext;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string wwwResponseText;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x108DA34", Offset = "0x108DA34", VA = "0x108DA34")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x108DAAC", Offset = "0x108DAAC", VA = "0x108DAAC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x108E494", Offset = "0x108E494", VA = "0x108E494")]
	private void SendData()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x108E5A8", Offset = "0x108E5A8", VA = "0x108E5A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB95CC", Offset = "0xAB95CC")]
	private IEnumerator WaitForRequest(WWW www)
	{
		return null;
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x108E620", Offset = "0x108E620", VA = "0x108E620")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x108E624", Offset = "0x108E624", VA = "0x108E624")]
	public Demo()
	{
	}
}
[Token(Token = "0x2000035")]
public class EffectTrigger : MonoBehaviour
{
	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform effectHolder;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject effectPrefab;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource myAudioSource;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] effectClips;

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x1C364E8", Offset = "0x1C364E8", VA = "0x1C364E8")]
	public void Start()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1C3653C", Offset = "0x1C3653C", VA = "0x1C3653C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x1C367C8", Offset = "0x1C367C8", VA = "0x1C367C8")]
	public EffectTrigger()
	{
	}
}
[Token(Token = "0x2000036")]
public class EnableDepthTexture : MonoBehaviour
{
	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x1C367D0", Offset = "0x1C367D0", VA = "0x1C367D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1C36830", Offset = "0x1C36830", VA = "0x1C36830")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1C36890", Offset = "0x1C36890", VA = "0x1C36890")]
	public EnableDepthTexture()
	{
	}
}
[Token(Token = "0x2000037")]
[ExecuteInEditMode]
public class EnergyBeam : MonoBehaviour
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform start;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform end;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer lr;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x1C36908", Offset = "0x1C36908", VA = "0x1C36908")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1C3690C", Offset = "0x1C3690C", VA = "0x1C3690C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1C369D8", Offset = "0x1C369D8", VA = "0x1C369D8")]
	public EnergyBeam()
	{
	}
}
[Token(Token = "0x2000038")]
public class EventDispatcher : MonoBehaviour, IDispatcher
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, List<EventHandlerFunction>> listners;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, List<DataEventHandlerFunction>> dataListners;

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1C37C8C", Offset = "0x1C37C8C", VA = "0x1C37C8C", Slot = "4")]
	public void addEventListener(string eventName, EventHandlerFunction handler)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1C37E1C", Offset = "0x1C37E1C", VA = "0x1C37E1C", Slot = "5")]
	public void addEventListener(int eventID, EventHandlerFunction handler)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1C37CD4", Offset = "0x1C37CD4", VA = "0x1C37CD4")]
	private void addEventListener(int eventID, EventHandlerFunction handler, string eventGraphName)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1C37E68", Offset = "0x1C37E68", VA = "0x1C37E68", Slot = "6")]
	public void addEventListener(string eventName, DataEventHandlerFunction handler)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1C37FF8", Offset = "0x1C37FF8", VA = "0x1C37FF8", Slot = "7")]
	public void addEventListener(int eventID, DataEventHandlerFunction handler)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1C37EB0", Offset = "0x1C37EB0", VA = "0x1C37EB0")]
	private void addEventListener(int eventID, DataEventHandlerFunction handler, string eventGraphName)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1C38044", Offset = "0x1C38044", VA = "0x1C38044", Slot = "8")]
	public void removeEventListener(string eventName, EventHandlerFunction handler)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1C38194", Offset = "0x1C38194", VA = "0x1C38194", Slot = "9")]
	public void removeEventListener(int eventID, EventHandlerFunction handler)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1C3808C", Offset = "0x1C3808C", VA = "0x1C3808C")]
	public void removeEventListener(int eventID, EventHandlerFunction handler, string eventGraphName)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1C381E0", Offset = "0x1C381E0", VA = "0x1C381E0", Slot = "10")]
	public void removeEventListener(string eventName, DataEventHandlerFunction handler)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1C38330", Offset = "0x1C38330", VA = "0x1C38330", Slot = "11")]
	public void removeEventListener(int eventID, DataEventHandlerFunction handler)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1C38228", Offset = "0x1C38228", VA = "0x1C38228")]
	public void removeEventListener(int eventID, DataEventHandlerFunction handler, string eventGraphName)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1C3837C", Offset = "0x1C3837C", VA = "0x1C3837C", Slot = "14")]
	public void dispatchEvent(string eventName)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1C38664", Offset = "0x1C38664", VA = "0x1C38664", Slot = "15")]
	public void dispatchEvent(string eventName, object data)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1C386B8", Offset = "0x1C386B8", VA = "0x1C386B8", Slot = "12")]
	public void dispatchEvent(int eventID)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1C38720", Offset = "0x1C38720", VA = "0x1C38720", Slot = "13")]
	public void dispatchEvent(int eventID, object data)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1C3878C", Offset = "0x1C3878C", VA = "0x1C3878C", Slot = "18")]
	public void dispatch(string eventName)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1C387D4", Offset = "0x1C387D4", VA = "0x1C387D4", Slot = "19")]
	public void dispatch(string eventName, object data)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1C38828", Offset = "0x1C38828", VA = "0x1C38828", Slot = "16")]
	public void dispatch(int eventID)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1C38890", Offset = "0x1C38890", VA = "0x1C38890", Slot = "17")]
	public void dispatch(int eventID, object data)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1C383C4", Offset = "0x1C383C4", VA = "0x1C383C4")]
	private void dispatch(int eventID, object data, string eventName)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1C38D18", Offset = "0x1C38D18", VA = "0x1C38D18", Slot = "20")]
	public void clearEvents()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1C38A04", Offset = "0x1C38A04", VA = "0x1C38A04")]
	private List<EventHandlerFunction> cloenArray(List<EventHandlerFunction> list)
	{
		return null;
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1C388FC", Offset = "0x1C388FC", VA = "0x1C388FC")]
	private List<DataEventHandlerFunction> cloenArray(List<DataEventHandlerFunction> list)
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1C38D90", Offset = "0x1C38D90", VA = "0x1C38D90", Slot = "21")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1C38D94", Offset = "0x1C38D94", VA = "0x1C38D94")]
	public EventDispatcher()
	{
	}
}
[Token(Token = "0x2000039")]
public class EventDispatcherBase : IDispatcher
{
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, List<EventHandlerFunction>> listners;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, List<DataEventHandlerFunction>> dataListners;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1C38E4C", Offset = "0x1C38E4C", VA = "0x1C38E4C", Slot = "4")]
	public void addEventListener(string eventName, EventHandlerFunction handler)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1C38FDC", Offset = "0x1C38FDC", VA = "0x1C38FDC", Slot = "5")]
	public void addEventListener(int eventID, EventHandlerFunction handler)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1C38E94", Offset = "0x1C38E94", VA = "0x1C38E94")]
	private void addEventListener(int eventID, EventHandlerFunction handler, string eventGraphName)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1C39028", Offset = "0x1C39028", VA = "0x1C39028", Slot = "6")]
	public void addEventListener(string eventName, DataEventHandlerFunction handler)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x1C391B8", Offset = "0x1C391B8", VA = "0x1C391B8", Slot = "7")]
	public void addEventListener(int eventID, DataEventHandlerFunction handler)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1C39070", Offset = "0x1C39070", VA = "0x1C39070")]
	private void addEventListener(int eventID, DataEventHandlerFunction handler, string eventGraphName)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1C39204", Offset = "0x1C39204", VA = "0x1C39204", Slot = "8")]
	public void removeEventListener(string eventName, EventHandlerFunction handler)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1C39354", Offset = "0x1C39354", VA = "0x1C39354", Slot = "9")]
	public void removeEventListener(int eventID, EventHandlerFunction handler)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1C3924C", Offset = "0x1C3924C", VA = "0x1C3924C")]
	public void removeEventListener(int eventID, EventHandlerFunction handler, string eventGraphName)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1C393A0", Offset = "0x1C393A0", VA = "0x1C393A0", Slot = "10")]
	public void removeEventListener(string eventName, DataEventHandlerFunction handler)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1C394F0", Offset = "0x1C394F0", VA = "0x1C394F0", Slot = "11")]
	public void removeEventListener(int eventID, DataEventHandlerFunction handler)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1C393E8", Offset = "0x1C393E8", VA = "0x1C393E8")]
	public void removeEventListener(int eventID, DataEventHandlerFunction handler, string eventGraphName)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1C3953C", Offset = "0x1C3953C", VA = "0x1C3953C", Slot = "14")]
	public void dispatchEvent(string eventName)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1C39824", Offset = "0x1C39824", VA = "0x1C39824", Slot = "15")]
	public void dispatchEvent(string eventName, object data)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1C39878", Offset = "0x1C39878", VA = "0x1C39878", Slot = "12")]
	public void dispatchEvent(int eventID)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1C398E0", Offset = "0x1C398E0", VA = "0x1C398E0", Slot = "13")]
	public void dispatchEvent(int eventID, object data)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1C3994C", Offset = "0x1C3994C", VA = "0x1C3994C", Slot = "18")]
	public void dispatch(string eventName)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1C39994", Offset = "0x1C39994", VA = "0x1C39994", Slot = "19")]
	public void dispatch(string eventName, object data)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1C399E8", Offset = "0x1C399E8", VA = "0x1C399E8", Slot = "16")]
	public void dispatch(int eventID)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1C39A50", Offset = "0x1C39A50", VA = "0x1C39A50", Slot = "17")]
	public void dispatch(int eventID, object data)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1C39584", Offset = "0x1C39584", VA = "0x1C39584")]
	private void dispatch(int eventID, object data, string eventName)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1C39CCC", Offset = "0x1C39CCC", VA = "0x1C39CCC", Slot = "20")]
	public void clearEvents()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1C39BC4", Offset = "0x1C39BC4", VA = "0x1C39BC4")]
	private List<EventHandlerFunction> cloenArray(List<EventHandlerFunction> list)
	{
		return null;
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1C39ABC", Offset = "0x1C39ABC", VA = "0x1C39ABC")]
	private List<DataEventHandlerFunction> cloenArray(List<DataEventHandlerFunction> list)
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1C39D44", Offset = "0x1C39D44", VA = "0x1C39D44", Slot = "21")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1C39D48", Offset = "0x1C39D48", VA = "0x1C39D48")]
	public EventDispatcherBase()
	{
	}
}
[Token(Token = "0x200003A")]
public class BaseEvent
{
	[Token(Token = "0x4000101")]
	public const string READY = "ready";

	[Token(Token = "0x4000102")]
	public const string LOADED = "loaded";

	[Token(Token = "0x4000103")]
	public const string FAILED = "failed";

	[Token(Token = "0x4000104")]
	public const string CHANGED = "changed";

	[Token(Token = "0x4000105")]
	public const string COMPLETE = "complete";

	[Token(Token = "0x4000106")]
	public const string INITIALIZED = "initialized";

	[Token(Token = "0x4000107")]
	public const string NO = "no";

	[Token(Token = "0x4000108")]
	public const string YES = "yes";

	[Token(Token = "0x4000109")]
	public const string OPEN = "open";

	[Token(Token = "0x400010A")]
	public const string CLOSED = "close";

	[Token(Token = "0x400010B")]
	public const string CLICK = "click";

	[Token(Token = "0x400010C")]
	public const string DOUBLE_CLICK = "double_click";

	[Token(Token = "0x400010D")]
	public const string ANIMATION_STARTED = "animation_started";

	[Token(Token = "0x400010E")]
	public const string ANIMATION_COMPLETE = "animation_complete";

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x134AFC0", Offset = "0x134AFC0", VA = "0x134AFC0")]
	public BaseEvent()
	{
	}
}
[Token(Token = "0x200003B")]
public class CEvent
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _id;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _name;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private object _data;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IDispatcher _dispatcher;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isStoped;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isLocked;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public object _currentTarget;

	[Token(Token = "0x1700000C")]
	public int id
	{
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x100CA6C", Offset = "0x100CA6C", VA = "0x100CA6C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700000D")]
	public string name
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x100CA74", Offset = "0x100CA74", VA = "0x100CA74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000E")]
	public object data
	{
		[Token(Token = "0x6000126")]
		[Address(RVA = "0x100CA7C", Offset = "0x100CA7C", VA = "0x100CA7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	public IDispatcher target
	{
		[Token(Token = "0x6000127")]
		[Address(RVA = "0x100CA84", Offset = "0x100CA84", VA = "0x100CA84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000010")]
	public IDispatcher dispatcher
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x100CA8C", Offset = "0x100CA8C", VA = "0x100CA8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000011")]
	public object currentTarget
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0x100CA94", Offset = "0x100CA94", VA = "0x100CA94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000012")]
	public bool isStoped
	{
		[Token(Token = "0x600012A")]
		[Address(RVA = "0x100CA9C", Offset = "0x100CA9C", VA = "0x100CA9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000013")]
	public bool isLocked
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0x100CAA4", Offset = "0x100CAA4", VA = "0x100CAA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x100C9D0", Offset = "0x100C9D0", VA = "0x100C9D0")]
	public CEvent(int id, string name, object data, IDispatcher dispatcher)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x100CA20", Offset = "0x100CA20", VA = "0x100CA20")]
	public void stopPropagation()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x100CA2C", Offset = "0x100CA2C", VA = "0x100CA2C")]
	public void stopImmediatePropagation()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x100CA38", Offset = "0x100CA38", VA = "0x100CA38")]
	public bool canBeDisptached(object val)
	{
		return default(bool);
	}
}
[Token(Token = "0x200003C")]
public delegate void EventHandlerFunction();
[Token(Token = "0x200003D")]
public delegate void DataEventHandlerFunction(CEvent e);
[Token(Token = "0x200003E")]
public interface IDispatcher
{
	[Token(Token = "0x6000134")]
	void addEventListener(string eventName, EventHandlerFunction handler);

	[Token(Token = "0x6000135")]
	void addEventListener(int eventID, EventHandlerFunction handler);

	[Token(Token = "0x6000136")]
	void addEventListener(string eventName, DataEventHandlerFunction handler);

	[Token(Token = "0x6000137")]
	void addEventListener(int eventID, DataEventHandlerFunction handler);

	[Token(Token = "0x6000138")]
	void removeEventListener(string eventName, EventHandlerFunction handler);

	[Token(Token = "0x6000139")]
	void removeEventListener(int eventID, EventHandlerFunction handler);

	[Token(Token = "0x600013A")]
	void removeEventListener(string eventName, DataEventHandlerFunction handler);

	[Token(Token = "0x600013B")]
	void removeEventListener(int eventID, DataEventHandlerFunction handler);

	[Token(Token = "0x600013C")]
	void dispatchEvent(int eventID);

	[Token(Token = "0x600013D")]
	void dispatchEvent(int eventID, object data);

	[Token(Token = "0x600013E")]
	void dispatchEvent(string eventName);

	[Token(Token = "0x600013F")]
	void dispatchEvent(string eventName, object data);

	[Token(Token = "0x6000140")]
	void dispatch(int eventID);

	[Token(Token = "0x6000141")]
	void dispatch(int eventID, object data);

	[Token(Token = "0x6000142")]
	void dispatch(string eventName);

	[Token(Token = "0x6000143")]
	void dispatch(string eventName, object data);

	[Token(Token = "0x6000144")]
	void clearEvents();
}
[Token(Token = "0x200003F")]
public class ClickExplode : MonoBehaviour
{
	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1081F10", Offset = "0x1081F10", VA = "0x1081F10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1082060", Offset = "0x1082060", VA = "0x1082060")]
	public ClickExplode()
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA5C2C", Offset = "0xAA5C2C")]
public class MouseOrbitImproved : MonoBehaviour
{
	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float distanceMin;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMax;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float x;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float y;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xBEFF0C", Offset = "0xBEFF0C", VA = "0xBEFF0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xBEFFF0", Offset = "0xBEFFF0", VA = "0xBEFFF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xBF026C", Offset = "0xBF026C", VA = "0xBF026C")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xBF029C", Offset = "0xBF029C", VA = "0xBF029C")]
	public MouseOrbitImproved()
	{
	}
}
[Token(Token = "0x2000041")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA5C64", Offset = "0xAA5C64")]
public class FaceExplosion : MonoBehaviour
{
	[Token(Token = "0x2000042")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5C9C", Offset = "0xAA5C9C")]
	private sealed class <LoadFaces>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FaceExplosion <>4__this;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Rigidbody> <faceRBS>5__2;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Renderer> <faceRenders>5__3;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<MeshFilter> <faceFilters>5__4;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject <fragmentParent>5__5;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__6;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000158")]
			[Address(RVA = "0xCBA700", Offset = "0xCBA700", VA = "0xCBA700", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015A")]
			[Address(RVA = "0xCBA748", Offset = "0xCBA748", VA = "0xCBA748", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000155")]
		[Address(RVA = "0xCB9680", Offset = "0xCB9680", VA = "0xCB9680")]
		[DebuggerHidden]
		public <LoadFaces>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0xCB96AC", Offset = "0xCB96AC", VA = "0xCB96AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0xCB96B0", Offset = "0xCB96B0", VA = "0xCB96B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0xCBA708", Offset = "0xCBA708", VA = "0xCBA708", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5CAC", Offset = "0xAA5CAC")]
	private sealed class <KillCo>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FaceExplosion <>4__this;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <done>5__2;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <tm>5__3;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <tScale>5__4;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015E")]
			[Address(RVA = "0xCB9630", Offset = "0xCB9630", VA = "0xCB9630", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000160")]
			[Address(RVA = "0xCB9678", Offset = "0xCB9678", VA = "0xCB9678", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0xCB920C", Offset = "0xCB920C", VA = "0xCB920C")]
		[DebuggerHidden]
		public <KillCo>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0xCB9238", Offset = "0xCB9238", VA = "0xCB9238", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0xCB923C", Offset = "0xCB923C", VA = "0xCB923C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0xCB9638", Offset = "0xCB9638", VA = "0xCB9638", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA8FE0", Offset = "0xAA8FE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA8FE0", Offset = "0xAA8FE0")]
	public bool preLoadFragments;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9040", Offset = "0xAA9040")]
	public bool destroyOriginalObject;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9078", Offset = "0xAA9078")]
	public bool inheritParentsProperties;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA90B0", Offset = "0xAA90B0")]
	public bool explodeOnAwake;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA90E8", Offset = "0xAA90E8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA90E8", Offset = "0xAA90E8")]
	public bool fragmentsHaveGravity;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9148", Offset = "0xAA9148")]
	public bool fragmentsHaveCollision;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9180", Offset = "0xAA9180")]
	public PhysicMaterial fragmentPhysMat;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA91B8", Offset = "0xAA91B8")]
	public float fragmentMass;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA91F0", Offset = "0xAA91F0")]
	public float fragmentDrag;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9228", Offset = "0xAA9228")]
	public float fragmentAngularDrag;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9260", Offset = "0xAA9260")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9260", Offset = "0xAA9260")]
	public float explosionForce;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA92C0", Offset = "0xAA92C0")]
	public float upExplosionForce;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA92F8", Offset = "0xAA92F8")]
	public float explosionRandomness;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9330", Offset = "0xAA9330")]
	public float fragmentAngularVelocity;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9368", Offset = "0xAA9368")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9368", Offset = "0xAA9368")]
	public float fragmentKillDelay;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA93C8", Offset = "0xAA93C8")]
	public float fragmentLimbo;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9400", Offset = "0xAA9400")]
	public bool fragmentsShrinkInLimbo;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9438", Offset = "0xAA9438")]
	public bool fragmentsFadeInLimbo;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool isSkinnedMesh;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool shouldExplode;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool canExplode;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool logdebug;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh eMesh;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public FaceExplosion FM;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public Renderer[] renderers;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public MeshFilter[] filters;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Rigidbody[] faceRBA;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Material[] mats;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1C3B84C", Offset = "0x1C3B84C", VA = "0x1C3B84C")]
	private void Start()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1C3BE94", Offset = "0x1C3BE94", VA = "0x1C3BE94")]
	private void Update()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1C3BE60", Offset = "0x1C3BE60", VA = "0x1C3BE60")]
	public void Explode()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1C3BEAC", Offset = "0x1C3BEAC", VA = "0x1C3BEAC")]
	private void ExplodeFaces()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1C3BDF4", Offset = "0x1C3BDF4", VA = "0x1C3BDF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB967C", Offset = "0xAB967C")]
	private IEnumerator LoadFaces()
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1C3C198", Offset = "0x1C3C198", VA = "0x1C3C198")]
	private void LoadFacesNonCo()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1C3D120", Offset = "0x1C3D120", VA = "0x1C3D120")]
	private float modVelocity()
	{
		return default(float);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1C3D17C", Offset = "0x1C3D17C", VA = "0x1C3D17C")]
	public void StartKill()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1C3D1A8", Offset = "0x1C3D1A8", VA = "0x1C3D1A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB96DC", Offset = "0xAB96DC")]
	private IEnumerator KillCo()
	{
		return null;
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1C3D214", Offset = "0x1C3D214", VA = "0x1C3D214")]
	public FaceExplosion()
	{
	}
}
[Token(Token = "0x2000044")]
public class FadeSphere : MonoBehaviour
{
	[Token(Token = "0x2000045")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5CBC", Offset = "0xAA5CBC")]
	private sealed class <WaitAndPrint2>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FadeSphere <>4__this;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600016A")]
			[Address(RVA = "0xCBA830", Offset = "0xCBA830", VA = "0xCBA830", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016C")]
			[Address(RVA = "0xCBA878", Offset = "0xCBA878", VA = "0xCBA878", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0xCBA750", Offset = "0xCBA750", VA = "0xCBA750")]
		[DebuggerHidden]
		public <WaitAndPrint2>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0xCBA77C", Offset = "0xCBA77C", VA = "0xCBA77C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0xCBA780", Offset = "0xCBA780", VA = "0xCBA780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0xCBA838", Offset = "0xCBA838", VA = "0xCBA838", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float targetAlpha;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float alpha;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool targetReached;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material mat;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer rend;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ReflectionProbe[] reflectionProbes;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x13BE9B0", Offset = "0x13BE9B0", VA = "0x13BE9B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x13BEA90", Offset = "0x13BEA90", VA = "0x13BEA90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB97DC", Offset = "0xAB97DC")]
	private IEnumerator WaitAndPrint2(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x13BEB0C", Offset = "0x13BEB0C", VA = "0x13BEB0C")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x13BEB68", Offset = "0x13BEB68", VA = "0x13BEB68")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x13BEBF8", Offset = "0x13BEBF8", VA = "0x13BEBF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x13BED2C", Offset = "0x13BED2C", VA = "0x13BED2C")]
	public FadeSphere()
	{
	}
}
[Token(Token = "0x2000046")]
public static class FindDeviceType
{
	[Token(Token = "0x2000047")]
	public enum InputDevice
	{
		[Token(Token = "0x4000155")]
		none,
		[Token(Token = "0x4000156")]
		Touch_Rift,
		[Token(Token = "0x4000157")]
		Touch_Quest,
		[Token(Token = "0x4000158")]
		Touch_Quest2,
		[Token(Token = "0x4000159")]
		ViveWands,
		[Token(Token = "0x400015A")]
		Knuckles,
		[Token(Token = "0x400015B")]
		WMRWands,
		[Token(Token = "0x400015C")]
		Hands_Quest,
		[Token(Token = "0x400015D")]
		Generic
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x13BED44", Offset = "0x13BED44", VA = "0x13BED44")]
	public static bool isLowPowerPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x13BED4C", Offset = "0x13BED4C", VA = "0x13BED4C")]
	public static int DeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x13BEE0C", Offset = "0x13BEE0C", VA = "0x13BEE0C")]
	public static InputDevice inputDevice()
	{
		return default(InputDevice);
	}
}
[Token(Token = "0x2000048")]
public class FindPerformanceLevel : MonoBehaviour
{
	[Token(Token = "0x2000049")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5CCC", Offset = "0xAA5CCC")]
	private sealed class <LoadYourAsyncScene>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FindPerformanceLevel <>4__this;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.AsyncOperation <async>5__2;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000178")]
			[Address(RVA = "0xCBAA84", Offset = "0xCBAA84", VA = "0xCBAA84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600017A")]
			[Address(RVA = "0xCBAACC", Offset = "0xCBAACC", VA = "0xCBAACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0xCBA880", Offset = "0xCBA880", VA = "0xCBA880")]
		[DebuggerHidden]
		public <LoadYourAsyncScene>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0xCBA8AC", Offset = "0xCBA8AC", VA = "0xCBA8AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0xCBA8B0", Offset = "0xCBA8B0", VA = "0xCBA8B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0xCBAA8C", Offset = "0xCBAA8C", VA = "0xCBAA8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] systems;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool loading;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text debugText;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.AsyncOperation async;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro percentageText;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float updateTimer;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float updateTimer2;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float updateInterval;

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x13BEE14", Offset = "0x13BEE14", VA = "0x13BEE14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x13BF73C", Offset = "0x13BF73C", VA = "0x13BF73C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x13BF7B0", Offset = "0x13BF7B0", VA = "0x13BF7B0")]
	private void MyFixedUpdate()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x13BF80C", Offset = "0x13BF80C", VA = "0x13BF80C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB988C", Offset = "0xAB988C")]
	private IEnumerator LoadYourAsyncScene()
	{
		return null;
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x13BF878", Offset = "0x13BF878", VA = "0x13BF878")]
	public FindPerformanceLevel()
	{
	}
}
[Token(Token = "0x200004A")]
public class FingerCollisionSensor : MonoBehaviour
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool triggered;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x13BF88C", Offset = "0x13BF88C", VA = "0x13BF88C")]
	private void Start()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x13BF890", Offset = "0x13BF890", VA = "0x13BF890")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x13BF9B4", Offset = "0x13BF9B4", VA = "0x13BF9B4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x13BFAD8", Offset = "0x13BFAD8", VA = "0x13BFAD8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x13BFBEC", Offset = "0x13BFBEC", VA = "0x13BFBEC")]
	public FingerCollisionSensor()
	{
	}
}
[Token(Token = "0x200004B")]
public class FloatinControllerLabel : MonoBehaviour
{
	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] pathNodes;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform endNormal;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform endAlternate;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool altControlScheme;

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x13C3630", Offset = "0x13C3630", VA = "0x13C3630")]
	private void Start()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x13C3684", Offset = "0x13C3684", VA = "0x13C3684")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x13C36E4", Offset = "0x13C36E4", VA = "0x13C36E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x13C37C8", Offset = "0x13C37C8", VA = "0x13C37C8")]
	public FloatinControllerLabel()
	{
	}
}
[Token(Token = "0x200004C")]
public class FloorMarker : MonoBehaviour
{
	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OculusGuiElement guiElement;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEngaged;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform marker;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x13C37D0", Offset = "0x13C37D0", VA = "0x13C37D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x13C37D4", Offset = "0x13C37D4", VA = "0x13C37D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x13C39D8", Offset = "0x13C39D8", VA = "0x13C39D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x13C3B10", Offset = "0x13C3B10", VA = "0x13C3B10")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x13C3B18", Offset = "0x13C3B18", VA = "0x13C3B18")]
	public FloorMarker()
	{
	}
}
[Token(Token = "0x200004D")]
public class FloorScaler : MonoBehaviour
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform playPlatform;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playPlatform2;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x13C3B20", Offset = "0x13C3B20", VA = "0x13C3B20")]
	private void Start()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x13C3B7C", Offset = "0x13C3B7C", VA = "0x13C3B7C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x13C3B74", Offset = "0x13C3B74", VA = "0x13C3B74")]
	public Vector3 GetPlayAreaSize()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x13C3B80", Offset = "0x13C3B80", VA = "0x13C3B80")]
	public FloorScaler()
	{
	}
}
[Token(Token = "0x200004E")]
public class FootRigidbody : MonoBehaviour
{
	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 velocity;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 lastpos;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x13C570C", Offset = "0x13C570C", VA = "0x13C570C")]
	public void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x13C57D8", Offset = "0x13C57D8", VA = "0x13C57D8")]
	public void Update()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x13C58D4", Offset = "0x13C58D4", VA = "0x13C58D4")]
	public FootRigidbody()
	{
	}
}
[Token(Token = "0x200004F")]
public class ForcePusher : MonoBehaviour
{
	[Token(Token = "0x2000050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5CDC", Offset = "0xAA5CDC")]
	private sealed class <OnTriggerStay>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider other;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ForcePusher <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000195")]
			[Address(RVA = "0xCBB480", Offset = "0xCBB480", VA = "0xCBB480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000197")]
			[Address(RVA = "0xCBB4C8", Offset = "0xCBB4C8", VA = "0xCBB4C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0xCBB2F0", Offset = "0xCBB2F0", VA = "0xCBB2F0")]
		[DebuggerHidden]
		public <OnTriggerStay>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0xCBB31C", Offset = "0xCBB31C", VA = "0xCBB31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0xCBB320", Offset = "0xCBB320", VA = "0xCBB320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0xCBB488", Offset = "0xCBB488", VA = "0xCBB488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool upward;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ForceMode forceMode;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 forward;

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x13C5908", Offset = "0x13C5908", VA = "0x13C5908")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB993C", Offset = "0xAB993C")]
	public IEnumerator OnTriggerStay(Collider other)
	{
		return null;
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x13C5980", Offset = "0x13C5980", VA = "0x13C5980")]
	public ForcePusher()
	{
	}
}
[Token(Token = "0x2000051")]
public class ForceWinHeadset : MonoBehaviour
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startPos;

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x13C5998", Offset = "0x13C5998", VA = "0x13C5998")]
	private void Start()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x13C59D4", Offset = "0x13C59D4", VA = "0x13C59D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x13C5B34", Offset = "0x13C5B34", VA = "0x13C5B34")]
	public ForceWinHeadset()
	{
	}
}
[Token(Token = "0x2000052")]
public class CameraGun : MonoBehaviour
{
	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject BallPrefab;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ParticlePrefab;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource[] ShieldHitSFX;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float curTime;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float FireRate;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float hitPower;

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x1BFF5C4", Offset = "0x1BFF5C4", VA = "0x1BFF5C4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1BFF6AC", Offset = "0x1BFF6AC", VA = "0x1BFF6AC")]
	private void OnMouse()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1BFFBE4", Offset = "0x1BFFBE4", VA = "0x1BFFBE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1BFFC64", Offset = "0x1BFFC64", VA = "0x1BFFC64")]
	public CameraGun()
	{
	}
}
[Token(Token = "0x2000053")]
public class CameraGun_Mobile : MonoBehaviour
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject BallPrefab;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource[] ShieldHitSFX;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float curTime;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FireRate;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float hitPower;

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1BFFC78", Offset = "0x1BFFC78", VA = "0x1BFFC78")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x1BFFD60", Offset = "0x1BFFD60", VA = "0x1BFFD60")]
	private void OnMouse()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1C001E8", Offset = "0x1C001E8", VA = "0x1C001E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1C00268", Offset = "0x1C00268", VA = "0x1C00268")]
	public CameraGun_Mobile()
	{
	}
}
[Token(Token = "0x2000054")]
public class PlaneRotation : MonoBehaviour
{
	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xCD8A0C", Offset = "0xCD8A0C", VA = "0xCD8A0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xCD8A58", Offset = "0xCD8A58", VA = "0xCD8A58")]
	public PlaneRotation()
	{
	}
}
[Token(Token = "0x2000055")]
public class RandomTorque : MonoBehaviour
{
	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x15197DC", Offset = "0x15197DC", VA = "0x15197DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1519918", Offset = "0x1519918", VA = "0x1519918")]
	public RandomTorque()
	{
	}
}
[Token(Token = "0x2000056")]
public class SimpleGun : MonoBehaviour
{
	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x10458DC", Offset = "0x10458DC", VA = "0x10458DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1045A48", Offset = "0x1045A48", VA = "0x1045A48")]
	public SimpleGun()
	{
	}
}
[Token(Token = "0x2000057")]
public class SphereHover : MonoBehaviour
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Offset;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xF00EF8", Offset = "0xF00EF8", VA = "0xF00EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xF00F94", Offset = "0xF00F94", VA = "0xF00F94")]
	public SphereHover()
	{
	}
}
[Token(Token = "0x2000058")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA5CEC", Offset = "0xAA5CEC")]
public class Forcefield : MonoBehaviour
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private new Transform transform;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mat;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshFilter mesh;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int interpolators;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] shaderPosID;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] shaderPowID;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector4[] shaderPos;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int curProp;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float curTime;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA94C0", Offset = "0xAA94C0")]
	public GameObject Field;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA94F8", Offset = "0xAA94F8")]
	public bool CollisionEnter;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool CollisionStay;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool CollisionExit;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9530", Offset = "0xAA9530")]
	public float DecaySpeed;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float ReactSpeed;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool FixNonUniformScale;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x13C5B3C", Offset = "0x13C5B3C", VA = "0x13C5B3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x13C5B90", Offset = "0x13C5B90", VA = "0x13C5B90")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x13C5D78", Offset = "0x13C5D78", VA = "0x13C5D78")]
	private void OnCollisionEnter(Collision collisionInfo)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x13C60D4", Offset = "0x13C60D4", VA = "0x13C60D4")]
	private void OnCollisionStay(Collision collisionInfo)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x13C61A8", Offset = "0x13C61A8", VA = "0x13C61A8")]
	private void OnCollisionExit(Collision collisionInfo)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x13C627C", Offset = "0x13C627C", VA = "0x13C627C")]
	public void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x13C5E4C", Offset = "0x13C5E4C", VA = "0x13C5E4C")]
	public void OnHit(Vector3 hitPoint, float hitPower = 0f, float hitAlpha = 1f)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x13C62C4", Offset = "0x13C62C4", VA = "0x13C62C4")]
	private void FadeMask()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x13C6420", Offset = "0x13C6420", VA = "0x13C6420")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x13C645C", Offset = "0x13C645C", VA = "0x13C645C")]
	public Forcefield()
	{
	}
}
[Token(Token = "0x2000059")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA5D24", Offset = "0xAA5D24")]
public class Forcefield_Mobile : MonoBehaviour
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material mat;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter mesh;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int interpolators;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int[] shaderPropsID;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector4[] shaderProps;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int curProp;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float curTime;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject shield;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9568", Offset = "0xAA9568")]
	public bool CollisionEnter;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA95A0", Offset = "0xAA95A0")]
	public float DecaySpeed;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float ReactSpeed;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool FixNonUniformScale;

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x13C6478", Offset = "0x13C6478", VA = "0x13C6478")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x13C6624", Offset = "0x13C6624", VA = "0x13C6624")]
	private void OnCollisionEnter(Collision collisionInfo)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x13C66F4", Offset = "0x13C66F4", VA = "0x13C66F4")]
	public void OnHit(Vector3 hitPoint, float hitAlpha = 1f)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x13C6978", Offset = "0x13C6978", VA = "0x13C6978")]
	private void FadeMask()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x13C6AD4", Offset = "0x13C6AD4", VA = "0x13C6AD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x13C6B10", Offset = "0x13C6B10", VA = "0x13C6B10")]
	public Forcefield_Mobile()
	{
	}
}
[Token(Token = "0x200005A")]
public class GameRestart : MonoBehaviour
{
	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x24CFA14", Offset = "0x24CFA14", VA = "0x24CFA14")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x24CFA18", Offset = "0x24CFA18", VA = "0x24CFA18")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x24CFAE8", Offset = "0x24CFAE8", VA = "0x24CFAE8")]
	public GameRestart()
	{
	}
}
[Token(Token = "0x200005B")]
public class Gate : Receiver
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public BoxCollider boxCollider;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public MeshRenderer laserMesh;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool inverted;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject invertIcon;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x24CFAF0", Offset = "0x24CFAF0", VA = "0x24CFAF0", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x24CFAF8", Offset = "0x24CFAF8", VA = "0x24CFAF8", Slot = "5")]
	public override void ReceiverFunction()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x24CFB80", Offset = "0x24CFB80", VA = "0x24CFB80")]
	public void setInverterStatus(bool i)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x24CFBC4", Offset = "0x24CFBC4", VA = "0x24CFBC4")]
	public Gate()
	{
	}
}
[Token(Token = "0x200005C")]
public class Glass : MonoBehaviour
{
	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x24D1628", Offset = "0x24D1628", VA = "0x24D1628")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x24D162C", Offset = "0x24D162C", VA = "0x24D162C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x24D1630", Offset = "0x24D1630", VA = "0x24D1630")]
	public Glass()
	{
	}
}
[Token(Token = "0x200005D")]
public class GlobalGravityManager : MonoBehaviour
{
	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 gravityDirection;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GravityAdjuster> gravityAdjusters;

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x24D1638", Offset = "0x24D1638", VA = "0x24D1638")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x24D163C", Offset = "0x24D163C", VA = "0x24D163C")]
	public void clearAdjusters()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x24D1868", Offset = "0x24D1868", VA = "0x24D1868")]
	public void addAdjuster(GravityAdjuster gA)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x24D16CC", Offset = "0x24D16CC", VA = "0x24D16CC")]
	public void disableAllAdjusters()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x24D183C", Offset = "0x24D183C", VA = "0x24D183C")]
	public void resetGravity()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x24D18CC", Offset = "0x24D18CC", VA = "0x24D18CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x24D1AB4", Offset = "0x24D1AB4", VA = "0x24D1AB4")]
	public GlobalGravityManager()
	{
	}
}
[Token(Token = "0x200005E")]
public class GlobalShaderSwap : MonoBehaviour
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] mats;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject terrain;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fakeTerrain;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x24D1AE8", Offset = "0x24D1AE8", VA = "0x24D1AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x24D1AEC", Offset = "0x24D1AEC", VA = "0x24D1AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x24D1B40", Offset = "0x24D1B40", VA = "0x24D1B40")]
	public void EnableLow()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x24D1B84", Offset = "0x24D1B84", VA = "0x24D1B84")]
	public void DisableLow()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x24D1BC8", Offset = "0x24D1BC8", VA = "0x24D1BC8")]
	public GlobalShaderSwap()
	{
	}
}
[Token(Token = "0x200005F")]
public class GpuWhitelist
{
	[Token(Token = "0x2000060")]
	public enum GPUVendor
	{
		[Token(Token = "0x40001BF")]
		Intel,
		[Token(Token = "0x40001C0")]
		NVIDIA,
		[Token(Token = "0x40001C1")]
		AMD,
		[Token(Token = "0x40001C2")]
		unknown
	}

	[Token(Token = "0x2000061")]
	public enum SystemPerformanceLevel
	{
		[Token(Token = "0x40001C4")]
		Mainstream,
		[Token(Token = "0x40001C5")]
		LowEndUltra,
		[Token(Token = "0x40001C6")]
		Ultra,
		[Token(Token = "0x40001C7")]
		HighEndUltra,
		[Token(Token = "0x40001C8")]
		Undefined
	}

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] MainstreamAMD;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string[] MainstreamNVIDIA;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string[] LowEndUltraAMD;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string[] LowEndUltraNVIDIA;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string[] UltraAMD;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string[] UltraNVIDIA;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string[] HighEndUltraAMD;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string[] HighEndUltraNVIDIA;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string GPUVendorName;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string GPUTypeName;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string PerformanceLevelString;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static SystemPerformanceLevel PerformanceLevel;

	[Token(Token = "0x1700001E")]
	public static bool IsPerformanceLevelFound
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x24D1BD0", Offset = "0x24D1BD0", VA = "0x24D1BD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x24D1C3C", Offset = "0x24D1C3C", VA = "0x24D1C3C")]
	public static SystemPerformanceLevel EnsurePerformanceLevelFound([Optional] uint? graphicsDeviceVendorID, [Optional] string graphicsDeviceName, [Optional] uint? graphicsMemorySize)
	{
		return default(SystemPerformanceLevel);
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x24D1D08", Offset = "0x24D1D08", VA = "0x24D1D08")]
	public static SystemPerformanceLevel FindPerformanceLevel([Optional] uint? graphicsDeviceVendorID, [Optional] string graphicsDeviceName, [Optional] uint? graphicsMemorySize)
	{
		return default(SystemPerformanceLevel);
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x24D29B4", Offset = "0x24D29B4", VA = "0x24D29B4")]
	public static GPUVendor GetGPUVendor([Optional] uint? graphicsDeviceVendorID)
	{
		return default(GPUVendor);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x24D2BD8", Offset = "0x24D2BD8", VA = "0x24D2BD8")]
	public static string LogSystemInfo()
	{
		return null;
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x24D37B0", Offset = "0x24D37B0", VA = "0x24D37B0")]
	public GpuWhitelist()
	{
	}
}
[Token(Token = "0x2000062")]
public class GrabbableObject : MonoBehaviour
{
	[Token(Token = "0x2000063")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5D5C", Offset = "0xAA5D5C")]
	private sealed class <unblock>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableObject <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E8")]
			[Address(RVA = "0xCBBFAC", Offset = "0xCBBFAC", VA = "0xCBBFAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EA")]
			[Address(RVA = "0xCBBFF4", Offset = "0xCBBFF4", VA = "0xCBBFF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xCBBEC8", Offset = "0xCBBEC8", VA = "0xCBBEC8")]
		[DebuggerHidden]
		public <unblock>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xCBBEF4", Offset = "0xCBBEF4", VA = "0xCBBEF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xCBBEF8", Offset = "0xCBBEF8", VA = "0xCBBEF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xCBBFB4", Offset = "0xCBBFB4", VA = "0xCBBFB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas[] childCanvases;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer[] highlightMeshrenderer;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody cachedRB;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useOutline;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool isLocked;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool isDragging;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool isCamera;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PartsSpawner parentSpawner;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool freshlySpawned;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NewGameManager gameManager;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SettingsManager settingsManager;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<HandController> hands;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color oldEmissionColor;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int framesSinceSpawn;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Receiver myReceiver;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool blocked;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Outline outline;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float restTimer;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float movementTimer;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GrabbableObject[] othergrabbableobjects;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool markedForGrabbing;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private HandController handControllerMarkedForGrabbing;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 dirBetweenHands_lastFrame;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x24D57C8", Offset = "0x24D57C8", VA = "0x24D57C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x24D5990", Offset = "0x24D5990", VA = "0x24D5990")]
	public void blockPickup()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x24D5A3C", Offset = "0x24D5A3C", VA = "0x24D5A3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB99EC", Offset = "0xAB99EC")]
	private IEnumerator unblock()
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x24D5AA8", Offset = "0x24D5AA8", VA = "0x24D5AA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x24D6E70", Offset = "0x24D6E70", VA = "0x24D6E70")]
	public void forceDrop()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x24D6F78", Offset = "0x24D6F78", VA = "0x24D6F78")]
	private void checkIfDragging()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x24D6754", Offset = "0x24D6754", VA = "0x24D6754")]
	private void unGrab(HandController handController)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x24D71EC", Offset = "0x24D71EC", VA = "0x24D71EC")]
	public void spawnOrMoveTimeClone()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x24D75E8", Offset = "0x24D75E8", VA = "0x24D75E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x24D7850", Offset = "0x24D7850", VA = "0x24D7850")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x24D6C34", Offset = "0x24D6C34", VA = "0x24D6C34")]
	private void Grab()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x24D7C00", Offset = "0x24D7C00", VA = "0x24D7C00")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x24D7D04", Offset = "0x24D7D04", VA = "0x24D7D04")]
	public GrabbableObject()
	{
	}
}
[Token(Token = "0x2000064")]
public class GravityAdjuster : MonoBehaviour
{
	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isOn;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GlobalGravityManager gAManager;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform directionObject;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject gravityEffect;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x24D8A00", Offset = "0x24D8A00", VA = "0x24D8A00")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x24D8A04", Offset = "0x24D8A04", VA = "0x24D8A04")]
	public void Update()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x24D8A94", Offset = "0x24D8A94", VA = "0x24D8A94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x24D8B14", Offset = "0x24D8B14", VA = "0x24D8B14")]
	public void activateAdjuster()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x24D8B48", Offset = "0x24D8B48", VA = "0x24D8B48")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x24D8BE0", Offset = "0x24D8BE0", VA = "0x24D8BE0")]
	public GravityAdjuster()
	{
	}
}
[Token(Token = "0x2000065")]
public class GravityModifier : MonoBehaviour
{
	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool alwaysLocked;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject flipImg;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject heavyImg;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject floatImg;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VF_UIELement selectionButton;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VF_UIELement button_flip;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VF_UIELement button_heavy;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VF_UIELement button_float;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GrabbableObject grabbableObject;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LevelManager levelManager;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PartsWatcher partsWatcher;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public NewGameManager gameManager;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VR_UI_ElementHolder effectButtons;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isFlipGravity;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool isHeavy;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool isFloat;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite lockSprite;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Sprite originalSprite;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x24D8BE8", Offset = "0x24D8BE8", VA = "0x24D8BE8")]
	public void lockUIElement()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x24D8C50", Offset = "0x24D8C50", VA = "0x24D8C50")]
	public void unlockUIElement()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x24D8CC4", Offset = "0x24D8CC4", VA = "0x24D8CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x24D909C", Offset = "0x24D909C", VA = "0x24D909C")]
	public void setFlip()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x24D90CC", Offset = "0x24D90CC", VA = "0x24D90CC")]
	public void setHeavy()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x24D90FC", Offset = "0x24D90FC", VA = "0x24D90FC")]
	public void setFloat()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x24D9044", Offset = "0x24D9044", VA = "0x24D9044")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x24D912C", Offset = "0x24D912C", VA = "0x24D912C")]
	public void showOptionsButton()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x24D9148", Offset = "0x24D9148", VA = "0x24D9148")]
	public void hideOptionsButton()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x24D91CC", Offset = "0x24D91CC", VA = "0x24D91CC")]
	public void showMenu()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x24D8FC4", Offset = "0x24D8FC4", VA = "0x24D8FC4")]
	public void disableMenu()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x24D924C", Offset = "0x24D924C", VA = "0x24D924C")]
	public void TriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x24D9404", Offset = "0x24D9404", VA = "0x24D9404")]
	public GravityModifier()
	{
	}
}
[Token(Token = "0x2000066")]
public class GravityWell : MonoBehaviour
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float strength;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x24D940C", Offset = "0x24D940C", VA = "0x24D940C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x24D9750", Offset = "0x24D9750", VA = "0x24D9750")]
	public GravityWell()
	{
	}
}
[Serializable]
[Token(Token = "0x2000067")]
public class HandController : MonoBehaviour
{
	[Token(Token = "0x2000068")]
	public enum Handedness
	{
		[Token(Token = "0x400021F")]
		Left,
		[Token(Token = "0x4000220")]
		Right
	}

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool noisy;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool oculusAR;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform smoothedAnchorPoint;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Handedness handedness;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA95D8", Offset = "0xAA95D8")]
	public bool triggerPressed;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool mainButtonPressed;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool secondaryButtonPressed;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool teleportButtonPressed;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool gripPressed;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 stick;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9610", Offset = "0xAA9610")]
	public float timeSinceStopping;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float timeSinceLastPress;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 velocity;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 localVelocity;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9648", Offset = "0xAA9648")]
	public Transform handGeo;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float[] fingerBends;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool pointyFinger;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9680", Offset = "0xAA9680")]
	public bool isHoldingItem;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform anchorpoint;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 lastHitPoint;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public HandController otherHand;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool leftHat;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	protected bool rightHat;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	protected bool forwardHat;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	protected bool backwardHat;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected SettingsManager settingsManager;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LocomotionManager locomotionManager;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 lastpos;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 locallastpos;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Quaternion lastRotation;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float magnitude;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 axis;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Quaternion deltaFromLastRotation;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 dirBetweenHands_lastFrame;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private NewGameManager gameManager;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private LevelManager levelManager;

	[Token(Token = "0x17000021")]
	public Vector3 angularVelocity
	{
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x24D71A0", Offset = "0x24D71A0", VA = "0x24D71A0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x24DADD8", Offset = "0x24DADD8", VA = "0x24DADD8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x24D7B04", Offset = "0x24D7B04", VA = "0x24D7B04")]
	public void hideHandModel()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x24D70A8", Offset = "0x24D70A8", VA = "0x24D70A8")]
	public void showHandModel()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x24DB060", Offset = "0x24DB060", VA = "0x24DB060")]
	public void CalculateVelocities()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x24DB348", Offset = "0x24DB348", VA = "0x24DB348")]
	private void Update()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x24DB9D0", Offset = "0x24DB9D0", VA = "0x24DB9D0", Slot = "4")]
	protected virtual void GetControllerValues()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x24DB9D4", Offset = "0x24DB9D4", VA = "0x24DB9D4", Slot = "5")]
	public virtual void vibrate(float s)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x24DB490", Offset = "0x24DB490", VA = "0x24DB490")]
	private void HandleInput()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x24DB9D8", Offset = "0x24DB9D8", VA = "0x24DB9D8")]
	private bool isPassThroughGrabbingReal()
	{
		return default(bool);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x24DBAF4", Offset = "0x24DBAF4", VA = "0x24DBAF4")]
	private bool isPassThroughGrabbingSimulated()
	{
		return default(bool);
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x24DBA68", Offset = "0x24DBA68", VA = "0x24DBA68")]
	private bool isPasshtroughReal()
	{
		return default(bool);
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x24DBB84", Offset = "0x24DBB84", VA = "0x24DBB84")]
	private bool isPasshtroughSimulated()
	{
		return default(bool);
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x24DBC10", Offset = "0x24DBC10", VA = "0x24DBC10")]
	protected void leftHatFired()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x24DBC88", Offset = "0x24DBC88", VA = "0x24DBC88")]
	protected void rightHatFired()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x24DBD00", Offset = "0x24DBD00", VA = "0x24DBD00")]
	protected void forwardHatFired()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x24DBD60", Offset = "0x24DBD60", VA = "0x24DBD60")]
	protected void backwardHatFired()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x24DBDC4", Offset = "0x24DBDC4", VA = "0x24DBDC4")]
	public HandController()
	{
	}
}
[Token(Token = "0x2000069")]
public class HandController_LeapMotion : HandController
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA96B8", Offset = "0xAA96B8")]
	public Transform head;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform palm;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform thumb;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform index;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x24DBE08", Offset = "0x24DBE08", VA = "0x24DBE08")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x24DBE6C", Offset = "0x24DBE6C", VA = "0x24DBE6C", Slot = "4")]
	protected override void GetControllerValues()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x24DC024", Offset = "0x24DC024", VA = "0x24DC024", Slot = "5")]
	public override void vibrate(float s)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x24DC028", Offset = "0x24DC028", VA = "0x24DC028")]
	private void deviceVibrate()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x24DC02C", Offset = "0x24DC02C", VA = "0x24DC02C")]
	public HandController_LeapMotion()
	{
	}
}
[Token(Token = "0x200006A")]
public class HandController_Oculus : HandController
{
	[Serializable]
	[Token(Token = "0x200006B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5D6C", Offset = "0xAA5D6C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<OVRBone, bool> <>9__12_0;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<OVRBone, bool> <>9__12_1;

		[Token(Token = "0x600021E")]
		[Address(RVA = "0xCBC1F8", Offset = "0xCBC1F8", VA = "0xCBC1F8")]
		public <>c()
		{
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0xCBC200", Offset = "0xCBC200", VA = "0xCBC200")]
		internal bool <UpdatePalm>b__12_0(OVRBone x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0xCBC220", Offset = "0xCBC220", VA = "0xCBC220")]
		internal bool <UpdatePalm>b__12_1(OVRBone x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200006C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5D7C", Offset = "0xAA5D7C")]
	private sealed class <InvokeMethod>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action method;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float interval;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HandController_Oculus <>4__this;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int invokeCount;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__2;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000224")]
			[Address(RVA = "0xCBC3A8", Offset = "0xCBC3A8", VA = "0xCBC3A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000226")]
			[Address(RVA = "0xCBC3F0", Offset = "0xCBC3F0", VA = "0xCBC3F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0xCBC240", Offset = "0xCBC240", VA = "0xCBC240")]
		[DebuggerHidden]
		public <InvokeMethod>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0xCBC26C", Offset = "0xCBC26C", VA = "0xCBC26C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0xCBC270", Offset = "0xCBC270", VA = "0xCBC270", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0xCBC3B0", Offset = "0xCBC3B0", VA = "0xCBC3B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA96F0", Offset = "0xAA96F0")]
	public OVRInput.Controller ovrHand;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public OVRInput.Controller ovrHand2;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform thumbTipTransform;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform indexTipTransform;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform head;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform debugCube;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public OVRHand ovrARHand;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public VF_UIELement oculushand_teleport_button;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Transform oculushand_teleport_positionTransform;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float hiddenTimer;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private LauncherFPS launcher;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x24DC030", Offset = "0x24DC030", VA = "0x24DC030", Slot = "4")]
	protected override void GetControllerValues()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x24DD340", Offset = "0x24DD340", VA = "0x24DD340")]
	private void UpdatePalm(IList<OVRBone> bones)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x24DD65C", Offset = "0x24DD65C", VA = "0x24DD65C", Slot = "5")]
	public override void vibrate(float s)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x24DD7B8", Offset = "0x24DD7B8", VA = "0x24DD7B8")]
	private void deviceVibrate()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x24DD724", Offset = "0x24DD724", VA = "0x24DD724")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9A9C", Offset = "0xAB9A9C")]
	public IEnumerator InvokeMethod(Action method, float interval, int invokeCount)
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x24DD84C", Offset = "0x24DD84C", VA = "0x24DD84C")]
	public HandController_Oculus()
	{
	}
}
[Token(Token = "0x200006D")]
public class HandController_OpenVR : HandController
{
	[Token(Token = "0x200006E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5D8C", Offset = "0xAA5D8C")]
	private sealed class <InvokeMethod>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action method;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float interval;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int invokeCount;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600022F")]
			[Address(RVA = "0xCBC4F8", Offset = "0xCBC4F8", VA = "0xCBC4F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000231")]
			[Address(RVA = "0xCBC540", Offset = "0xCBC540", VA = "0xCBC540", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0xCBC3F8", Offset = "0xCBC3F8", VA = "0xCBC3F8")]
		[DebuggerHidden]
		public <InvokeMethod>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0xCBC424", Offset = "0xCBC424", VA = "0xCBC424", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0xCBC428", Offset = "0xCBC428", VA = "0xCBC428", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0xCBC500", Offset = "0xCBC500", VA = "0xCBC500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x121D844", Offset = "0x121D844", VA = "0x121D844", Slot = "4")]
	protected override void GetControllerValues()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x121D848", Offset = "0x121D848", VA = "0x121D848", Slot = "5")]
	public override void vibrate(float s)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x121D84C", Offset = "0x121D84C", VA = "0x121D84C")]
	private void deviceVibrate()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x121D850", Offset = "0x121D850", VA = "0x121D850")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9B4C", Offset = "0xAB9B4C")]
	public IEnumerator InvokeMethod(Action method, float interval, int invokeCount)
	{
		return null;
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x121D8DC", Offset = "0x121D8DC", VA = "0x121D8DC")]
	public HandController_OpenVR()
	{
	}
}
[Token(Token = "0x200006F")]
public class HandController_Pancake : HandController
{
	[Token(Token = "0x6000232")]
	[Address(RVA = "0x121D8E4", Offset = "0x121D8E4", VA = "0x121D8E4")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x121D944", Offset = "0x121D944", VA = "0x121D944", Slot = "4")]
	protected override void GetControllerValues()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x121DAA4", Offset = "0x121DAA4", VA = "0x121DAA4", Slot = "5")]
	public override void vibrate(float s)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x121DAA8", Offset = "0x121DAA8", VA = "0x121DAA8")]
	private void deviceVibrate()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x121DAAC", Offset = "0x121DAAC", VA = "0x121DAAC")]
	public HandController_Pancake()
	{
	}
}
[Token(Token = "0x2000070")]
public class HandController_UnityXR : HandController
{
	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9728", Offset = "0xAA9728")]
	public XRHand xrHand;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x121DAB4", Offset = "0x121DAB4", VA = "0x121DAB4", Slot = "4")]
	protected override void GetControllerValues()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x121DE88", Offset = "0x121DE88", VA = "0x121DE88")]
	public new void vibrate(float s)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x121DE8C", Offset = "0x121DE8C", VA = "0x121DE8C")]
	public HandController_UnityXR()
	{
	}
}
[Token(Token = "0x2000071")]
public class HandUIController : MonoBehaviour
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool alwaysOn;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ui;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform handUIPos;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform handUIPos_OculusHands;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NewGameManager gameManager;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform cameraMain;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HandController hand;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float timeUIWasLastParented;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public bool showLevelFinishUI;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool helpUIsHidden;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool showUI;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	private bool prev_showUI;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject projectorGO;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IKalmanWrapper kalman;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private IKalmanWrapper kalman2;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HandUIController otherHand;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 uiPos;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 uiRot;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int frameSinceUiStart;

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1222288", Offset = "0x1222288", VA = "0x1222288")]
	private void Start()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x12223C0", Offset = "0x12223C0", VA = "0x12223C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1222EC4", Offset = "0x1222EC4", VA = "0x1222EC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1222ECC", Offset = "0x1222ECC", VA = "0x1222ECC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1222F4C", Offset = "0x1222F4C", VA = "0x1222F4C")]
	public HandUIController()
	{
	}
}
[Token(Token = "0x2000072")]
public class HapticFeedback : MonoBehaviour
{
	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1224634", Offset = "0x1224634", VA = "0x1224634")]
	private void Start()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1224638", Offset = "0x1224638", VA = "0x1224638")]
	private void Update()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x122463C", Offset = "0x122463C", VA = "0x122463C")]
	public HapticFeedback()
	{
	}
}
[Token(Token = "0x2000073")]
public class HelpSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] helpCards;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentPos;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float switchTime;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1225318", Offset = "0x1225318", VA = "0x1225318")]
	private void Update()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1225418", Offset = "0x1225418", VA = "0x1225418")]
	public HelpSwitcher()
	{
	}
}
[Token(Token = "0x2000074")]
public class HideInARMode : MonoBehaviour
{
	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1225428", Offset = "0x1225428", VA = "0x1225428")]
	private void Start()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x122547C", Offset = "0x122547C", VA = "0x122547C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x12254D0", Offset = "0x12254D0", VA = "0x12254D0")]
	public HideInARMode()
	{
	}
}
[Token(Token = "0x2000075")]
public class HideOnLowEndDevices : MonoBehaviour
{
	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int minimumRequiredQualityLevel;

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x12254D8", Offset = "0x12254D8", VA = "0x12254D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1225534", Offset = "0x1225534", VA = "0x1225534")]
	public void setQuality(int qualitylevel)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x122557C", Offset = "0x122557C", VA = "0x122557C")]
	public HideOnLowEndDevices()
	{
	}
}
[Token(Token = "0x2000076")]
public class HideOnOculus : MonoBehaviour
{
	[Token(Token = "0x600024A")]
	[Address(RVA = "0x122558C", Offset = "0x122558C", VA = "0x122558C")]
	private void Start()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1225590", Offset = "0x1225590", VA = "0x1225590")]
	public HideOnOculus()
	{
	}
}
[Token(Token = "0x2000077")]
public class HideOnPlatform : MonoBehaviour
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int targetPlatform;

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1225598", Offset = "0x1225598", VA = "0x1225598")]
	private void Start()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x12255F0", Offset = "0x12255F0", VA = "0x12255F0")]
	public HideOnPlatform()
	{
	}
}
[Token(Token = "0x2000078")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA5D9C", Offset = "0xAA5D9C")]
public class HighlightsPostEffect : MonoBehaviour
{
	[Token(Token = "0x2000079")]
	public enum HighlightType
	{
		[Token(Token = "0x400026A")]
		Glow,
		[Token(Token = "0x400026B")]
		Solid
	}

	[Token(Token = "0x200007A")]
	public enum SortingType
	{
		[Token(Token = "0x400026D")]
		Overlay = 3,
		[Token(Token = "0x400026E")]
		DepthFilter
	}

	[Token(Token = "0x200007B")]
	public enum FillType
	{
		[Token(Token = "0x4000270")]
		Fill,
		[Token(Token = "0x4000271")]
		Outline
	}

	[Token(Token = "0x200007C")]
	public enum RTResolution
	{
		[Token(Token = "0x4000273")]
		Quarter = 4,
		[Token(Token = "0x4000274")]
		Half = 2,
		[Token(Token = "0x4000275")]
		Full = 1
	}

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HighlightType m_selectionType;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SortingType m_sortingType;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FillType m_fillType;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public RTResolution m_resolution;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_occludeesTag;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_occludersTag;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color m_highlightColor;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader m_highlightShader;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BlurOptimized m_blur;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer[] highlightObjects;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer[] m_occluders;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material m_highlightMaterial;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CommandBuffer m_renderBuffer;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int m_RTWidth;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int m_RTHeight;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x12255F8", Offset = "0x12255F8", VA = "0x12255F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x12257A4", Offset = "0x12257A4", VA = "0x12257A4")]
	private void CreateBuffers()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1225A10", Offset = "0x1225A10", VA = "0x1225A10")]
	private void ClearCommandBuffers()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1225800", Offset = "0x1225800", VA = "0x1225800")]
	private void CreateMaterials()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x122586C", Offset = "0x122586C", VA = "0x122586C")]
	private void SetOccluderObjects()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1225A2C", Offset = "0x1225A2C", VA = "0x1225A2C")]
	private void RenderHighlights(RenderTexture rt)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x1225BE4", Offset = "0x1225BE4", VA = "0x1225BE4")]
	private void RenderOccluders(RenderTexture rt)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1225D5C", Offset = "0x1225D5C", VA = "0x1225D5C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1225FAC", Offset = "0x1225FAC", VA = "0x1225FAC")]
	public HighlightsPostEffect()
	{
	}
}
[Token(Token = "0x200007D")]
public class AutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool RotateOnX;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool RotateOnY;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool RotateOnZ;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x134A1FC", Offset = "0x134A1FC", VA = "0x134A1FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x134A2B4", Offset = "0x134A2B4", VA = "0x134A2B4")]
	public AutoRotate()
	{
	}
}
[Token(Token = "0x200007E")]
[ExecuteInEditMode]
public class SCG_Base_Controller : MonoBehaviour
{
	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9780", Offset = "0xAA9780")]
	public Color wallsColor;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color baseColor;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA97B8", Offset = "0xAA97B8")]
	public Color textColor;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string baseText;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA97F0", Offset = "0xAA97F0")]
	public Color lightColor;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float lightIntensity;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material mat01;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material mat02;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Text textEditor;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Light pointLight;

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xE7B1D0", Offset = "0xE7B1D0", VA = "0xE7B1D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xE7B3DC", Offset = "0xE7B3DC", VA = "0xE7B3DC")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xE7B3E0", Offset = "0xE7B3E0", VA = "0xE7B3E0")]
	public SCG_Base_Controller()
	{
	}
}
[Token(Token = "0x200007F")]
public class IngameMainUI : MonoBehaviour
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VF_UIELement[] partButtons;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VF_UIELement playButton;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VF_UIELement stopButton;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x122AA84", Offset = "0x122AA84", VA = "0x122AA84")]
	public void showEditUI()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x122AB0C", Offset = "0x122AB0C", VA = "0x122AB0C")]
	public void showProductionUI()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x122AB94", Offset = "0x122AB94", VA = "0x122AB94")]
	public IngameMainUI()
	{
	}
}
[Token(Token = "0x2000080")]
public class IniFile : MonoBehaviour
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string path;

	[PreserveSig]
	[Token(Token = "0x600025F")]
	[Address(RVA = "0x122AB9C", Offset = "0x122AB9C", VA = "0x122AB9C")]
	private static extern long WritePrivateProfileString(string section, string key, string val, string filePath);

	[PreserveSig]
	[Token(Token = "0x6000260")]
	[Address(RVA = "0x122AC9C", Offset = "0x122AC9C", VA = "0x122AC9C")]
	private static extern int GetPrivateProfileString(string section, string key, string def, StringBuilder retVal, int size, string filePath);

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x122ADD4", Offset = "0x122ADD4", VA = "0x122ADD4")]
	public static void IniWriteValue(string Section, string Key, string Value)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x122AE58", Offset = "0x122AE58", VA = "0x122AE58")]
	public static string IniReadValue(string Section, string Key)
	{
		return null;
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x122AF38", Offset = "0x122AF38", VA = "0x122AF38")]
	public IniFile()
	{
	}
}
[Token(Token = "0x2000081")]
public class InternetCheck : MonoBehaviour
{
	[Token(Token = "0x2000082")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5E0C", Offset = "0xAA5E0C")]
	private sealed class <CheckInternetConnection>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool> action;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026D")]
			[Address(RVA = "0xCC1084", Offset = "0xCC1084", VA = "0xCC1084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026F")]
			[Address(RVA = "0xCC10CC", Offset = "0xCC10CC", VA = "0xCC10CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0xCC0E64", Offset = "0xCC0E64", VA = "0xCC0E64")]
		[DebuggerHidden]
		public <CheckInternetConnection>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0xCC0E90", Offset = "0xCC0E90", VA = "0xCC0E90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0xCC0E94", Offset = "0xCC0E94", VA = "0xCC0E94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0xCC108C", Offset = "0xCC108C", VA = "0xCC108C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UserFriendsPoller userfriends;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isOnline;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x122D22C", Offset = "0x122D22C", VA = "0x122D22C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x122D2AC", Offset = "0x122D2AC", VA = "0x122D2AC")]
	public void checkInternet()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x122D34C", Offset = "0x122D34C", VA = "0x122D34C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9BFC", Offset = "0xAB9BFC")]
	private IEnumerator CheckInternetConnection(Action<bool> action, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x122D3C8", Offset = "0x122D3C8", VA = "0x122D3C8")]
	public InternetCheck()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x122D3D0", Offset = "0x122D3D0", VA = "0x122D3D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9C5C", Offset = "0xAB9C5C")]
	private void <checkInternet>b__3_0(bool isConnected)
	{
	}
}
[Token(Token = "0x2000083")]
public class IntroAudioPlayer : MonoBehaviour
{
	[Token(Token = "0x6000270")]
	[Address(RVA = "0x122D508", Offset = "0x122D508", VA = "0x122D508")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x122D5C4", Offset = "0x122D5C4", VA = "0x122D5C4")]
	public IntroAudioPlayer()
	{
	}
}
[Token(Token = "0x2000084")]
public class KeepHandsAlive : MonoBehaviour
{
	[Token(Token = "0x2000085")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5E1C", Offset = "0xAA5E1C")]
	private sealed class <activateHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeepHandsAlive <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000278")]
			[Address(RVA = "0xCC26CC", Offset = "0xCC26CC", VA = "0xCC26CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027A")]
			[Address(RVA = "0xCC2714", Offset = "0xCC2714", VA = "0xCC2714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0xCC25D8", Offset = "0xCC25D8", VA = "0xCC25D8")]
		[DebuggerHidden]
		public <activateHands>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0xCC2604", Offset = "0xCC2604", VA = "0xCC2604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000277")]
		[Address(RVA = "0xCC2608", Offset = "0xCC2608", VA = "0xCC2608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000279")]
		[Address(RVA = "0xCC26D4", Offset = "0xCC26D4", VA = "0xCC26D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xBD1F80", Offset = "0xBD1F80", VA = "0xBD1F80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xBD1FAC", Offset = "0xBD1FAC", VA = "0xBD1FAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9CBC", Offset = "0xAB9CBC")]
	private IEnumerator activateHands()
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xBD2018", Offset = "0xBD2018", VA = "0xBD2018")]
	public KeepHandsAlive()
	{
	}
}
[Token(Token = "0x2000086")]
public class KeppZRoation : MonoBehaviour
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 eulerRot;

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xBD2020", Offset = "0xBD2020", VA = "0xBD2020")]
	private void Update()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xBD2024", Offset = "0xBD2024", VA = "0xBD2024")]
	public KeppZRoation()
	{
	}
}
[Token(Token = "0x2000087")]
public class ME_DemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Character;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Model;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Current;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light Sun;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ReflectionProbe ReflectionProbe;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Light[] NightLights;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture HUETexture;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseMobileVersion;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject MobileCharacter;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Target;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color guiColor;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentNomber;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject characterInstance;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject modelInstance;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GUIStyle guiStyleHeaderMobile;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float dpiScale;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isDay;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float colorHUE;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float startSunIntensity;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion startSunRotation;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color startAmbientLight;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float startAmbientIntencity;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float startReflectionIntencity;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private LightShadows startLightShadows;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool isButtonPressed;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject instanceShieldProjectile;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x1A0DF5C", Offset = "0x1A0DF5C", VA = "0x1A0DF5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x1A0E3D0", Offset = "0x1A0E3D0", VA = "0x1A0E3D0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1A0E0D0", Offset = "0x1A0E0D0", VA = "0x1A0E0D0")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1A0EAF4", Offset = "0x1A0EAF4", VA = "0x1A0EAF4")]
	private void RemoveClones()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1A0EC1C", Offset = "0x1A0EC1C", VA = "0x1A0EC1C")]
	private void ReactivateEffect()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1A0EC88", Offset = "0x1A0EC88", VA = "0x1A0EC88")]
	public ME_DemoGUI()
	{
	}
}
[Token(Token = "0x2000088")]
public class ME_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1A0F094", Offset = "0x1A0F094", VA = "0x1A0F094")]
	private void Start()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1A0F0CC", Offset = "0x1A0F0CC", VA = "0x1A0F0CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1A0F514", Offset = "0x1A0F514", VA = "0x1A0F514")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1A0F544", Offset = "0x1A0F544", VA = "0x1A0F544")]
	public ME_MouseOrbit()
	{
	}
}
[Token(Token = "0x2000089")]
public class ME_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool CanUpdate;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1A113CC", Offset = "0x1A113CC", VA = "0x1A113CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1A1143C", Offset = "0x1A1143C", VA = "0x1A1143C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1A114D8", Offset = "0x1A114D8", VA = "0x1A114D8")]
	public ME_RealtimeReflection()
	{
	}
}
[Token(Token = "0x200008A")]
public class ME_AnimatorEvents : MonoBehaviour
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectPrefab;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SwordPrefab;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SwordPosition;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform StartSwordPosition;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject EffectInstance;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject SwordInstance;

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1A0ABE8", Offset = "0x1A0ABE8", VA = "0x1A0ABE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1A0AD7C", Offset = "0x1A0AD7C", VA = "0x1A0AD7C")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1A0AF94", Offset = "0x1A0AF94", VA = "0x1A0AF94")]
	public void ActivateSword()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1A0B05C", Offset = "0x1A0B05C", VA = "0x1A0B05C")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1A0B5FC", Offset = "0x1A0B5FC", VA = "0x1A0B5FC")]
	public ME_AnimatorEvents()
	{
	}
}
[Token(Token = "0x200008B")]
public static class ME_ColorHelper
{
	[Token(Token = "0x200008C")]
	public struct HSBColor
	{
		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float S;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float B;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float A;

		[Token(Token = "0x6000296")]
		[Address(RVA = "0xDAB698", Offset = "0xDAB698", VA = "0xDAB698")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x40002C3")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1A0B1D4", Offset = "0x1A0B1D4", VA = "0x1A0B1D4")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1A0B3BC", Offset = "0x1A0B3BC", VA = "0x1A0B3BC")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1A0B604", Offset = "0x1A0B604", VA = "0x1A0B604")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1A0B720", Offset = "0x1A0B720", VA = "0x1A0B720")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1A0C3BC", Offset = "0x1A0C3BC", VA = "0x1A0C3BC")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1A0C494", Offset = "0x1A0C494", VA = "0x1A0C494")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x200008D")]
public class ME_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color previousColor;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1A0ED40", Offset = "0x1A0ED40", VA = "0x1A0ED40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1A0ED44", Offset = "0x1A0ED44", VA = "0x1A0ED44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1A0ED8C", Offset = "0x1A0ED8C", VA = "0x1A0ED8C")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1A0EE34", Offset = "0x1A0EE34", VA = "0x1A0EE34")]
	public ME_EffectSettingColor()
	{
	}
}
[Token(Token = "0x200008E")]
[ExecuteInEditMode]
public class ME_CustomLight : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MaxLightsCount;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D PointLightAttenuation;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> sceneLights;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1A0C7F4", Offset = "0x1A0C7F4", VA = "0x1A0C7F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1A0CBB0", Offset = "0x1A0CBB0", VA = "0x1A0CBB0")]
	private void Update()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1A0DDCC", Offset = "0x1A0DDCC", VA = "0x1A0DDCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1A0CD8C", Offset = "0x1A0CD8C", VA = "0x1A0CD8C")]
	private List<Light> GetAllLights()
	{
		return null;
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1A0CF78", Offset = "0x1A0CF78", VA = "0x1A0CF78")]
	private int FillDirectionalLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1A0D4AC", Offset = "0x1A0D4AC", VA = "0x1A0D4AC")]
	private int FillPointLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1A0C970", Offset = "0x1A0C970", VA = "0x1A0C970")]
	private Vector4[] ListToArrayWithMaxCount(List<Vector4> list, int count)
	{
		return null;
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x1A0D1CC", Offset = "0x1A0D1CC", VA = "0x1A0D1CC")]
	private List<Light> SortPointLightsByDistance(List<Light> lights)
	{
		return null;
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1A0D744", Offset = "0x1A0D744", VA = "0x1A0D744")]
	public Color SampleLightProbesUp(Vector3 pos, float grayScaleFactor)
	{
		return default(Color);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1A0CA90", Offset = "0x1A0CA90", VA = "0x1A0CA90")]
	private Texture2D GeneratePointAttenuationTexture()
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1A0DF04", Offset = "0x1A0DF04", VA = "0x1A0DF04")]
	public ME_CustomLight()
	{
	}
}
[Token(Token = "0x200008F")]
public class ME_FixParticlesAligment : MonoBehaviour
{
	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1A0EE68", Offset = "0x1A0EE68", VA = "0x1A0EE68")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1A0EEE8", Offset = "0x1A0EEE8", VA = "0x1A0EEE8")]
	public ME_FixParticlesAligment()
	{
	}
}
[Token(Token = "0x2000090")]
public class ME_LightCurves : MonoBehaviour
{
	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1A0EEF0", Offset = "0x1A0EEF0", VA = "0x1A0EEF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1A0EF70", Offset = "0x1A0EF70", VA = "0x1A0EF70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1A0EFA0", Offset = "0x1A0EFA0", VA = "0x1A0EFA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1A0F044", Offset = "0x1A0F044", VA = "0x1A0F044")]
	public ME_LightCurves()
	{
	}
}
[Token(Token = "0x2000091")]
public class ME_MeshMaterialEffect : MonoBehaviour
{
	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsFirstMaterial;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1A0F08C", Offset = "0x1A0F08C", VA = "0x1A0F08C")]
	public ME_MeshMaterialEffect()
	{
	}
}
[Token(Token = "0x2000092")]
[ExecuteInEditMode]
public class ME_ParticleCollisionDecal : MonoBehaviour
{
	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem DecalParticles;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsBilboard;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool InstantiateWhenZeroSpeed;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxGroundAngleDeviation;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinDistanceBetweenDecals;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MinDistanceBetweenSurface;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> collidedGameObjects;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1A0F560", Offset = "0x1A0F560", VA = "0x1A0F560")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x1A0F690", Offset = "0x1A0F690", VA = "0x1A0F690")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1A0F6F4", Offset = "0x1A0F6F4", VA = "0x1A0F6F4")]
	private void CollisionDetect()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1A0F834", Offset = "0x1A0F834", VA = "0x1A0F834")]
	private void OnParticleCollisionManual(GameObject other, int aliveParticles = -1)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1A0FC98", Offset = "0x1A0FC98", VA = "0x1A0FC98")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1A0FD5C", Offset = "0x1A0FD5C", VA = "0x1A0FD5C")]
	public ME_ParticleCollisionDecal()
	{
	}
}
[Token(Token = "0x2000093")]
[ExecuteInEditMode]
public class ME_ParticleGravityPoint : MonoBehaviour
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DistanceRelative;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 prevPos;

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1A0FE2C", Offset = "0x1A0FE2C", VA = "0x1A0FE2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1A0FE94", Offset = "0x1A0FE94", VA = "0x1A0FE94")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1A10138", Offset = "0x1A10138", VA = "0x1A10138")]
	public ME_ParticleGravityPoint()
	{
	}
}
[Token(Token = "0x2000094")]
public class ME_ParticleTrails : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000095")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA5E5C", Offset = "0xAA5E5C")]
	private sealed class <>c
	{
		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<uint, GameObject>, bool> <>9__13_0;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<uint, GameObject>, uint> <>9__13_1;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValuePair<uint, GameObject>, GameObject> <>9__13_2;

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xDAB704", Offset = "0xDAB704", VA = "0xDAB704")]
		public <>c()
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xDAB70C", Offset = "0xDAB70C", VA = "0xDAB70C")]
		internal bool <ClearEmptyHashes>b__13_0(KeyValuePair<uint, GameObject> h)
		{
			return default(bool);
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xDAB780", Offset = "0xDAB780", VA = "0xDAB780")]
		internal uint <ClearEmptyHashes>b__13_1(KeyValuePair<uint, GameObject> h)
		{
			return default(uint);
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xDAB7C0", Offset = "0xDAB7C0", VA = "0xDAB7C0")]
		internal GameObject <ClearEmptyHashes>b__13_2(KeyValuePair<uint, GameObject> h)
		{
			return null;
		}
	}

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TrailPrefab;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<uint, GameObject> hashTrails;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<uint, GameObject> newHashTrails;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> currentGO;

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1A10148", Offset = "0x1A10148", VA = "0x1A10148")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1A101F0", Offset = "0x1A101F0", VA = "0x1A101F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1A10248", Offset = "0x1A10248", VA = "0x1A10248")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1A102A0", Offset = "0x1A102A0", VA = "0x1A102A0")]
	public void Clear()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1A10408", Offset = "0x1A10408", VA = "0x1A10408")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1A1040C", Offset = "0x1A1040C", VA = "0x1A1040C")]
	private void UpdateTrail()
	{
	}

	[Token(Token = "0x60002BD")]
	public void AddRange<T, S>(Dictionary<T, S> source, Dictionary<T, S> collection)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1A10BA0", Offset = "0x1A10BA0", VA = "0x1A10BA0")]
	private void ClearEmptyHashes()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1A10E5C", Offset = "0x1A10E5C", VA = "0x1A10E5C")]
	public ME_ParticleTrails()
	{
	}
}
[Token(Token = "0x2000096")]
public class ME_Reflection : MonoBehaviour
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture tex;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ReflectionProbe reflectionProbe;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Light> dirLight;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<float> lightIntencity;

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x1A114E8", Offset = "0x1A114E8", VA = "0x1A114E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1A117A0", Offset = "0x1A117A0", VA = "0x1A117A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1A1196C", Offset = "0x1A1196C", VA = "0x1A1196C")]
	public ME_Reflection()
	{
	}
}
[Token(Token = "0x2000097")]
public class ME_TrailRendererNoise : MonoBehaviour
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9828", Offset = "0xAA9828")]
	public float MinVertexDistance;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float VertexTime;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TotalLifeTime;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool SmoothCurves;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool IsRibbon;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool IsActive;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9844", Offset = "0xAA9844")]
	public float Frequency;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9860", Offset = "0xAA9860")]
	public float TimeScale;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA987C", Offset = "0xAA987C")]
	public float Amplitude;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Gravity;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TurbulenceStrength;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool AutodestructWhenNotActive;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform t;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 prevPos;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> points;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<float> lifeTimes;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> velocities;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomOffset;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int curveCount;

	[Token(Token = "0x400030B")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x400030C")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x400030D")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x1A11974", Offset = "0x1A11974", VA = "0x1A11974")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x1A11AB8", Offset = "0x1A11AB8", VA = "0x1A11AB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x1A11B40", Offset = "0x1A11B40", VA = "0x1A11B40")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x1A11C54", Offset = "0x1A11C54", VA = "0x1A11C54")]
	private void AddNewPoints()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x1A11E34", Offset = "0x1A11E34", VA = "0x1A11E34")]
	private void UpdatetPoints()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x1A12020", Offset = "0x1A12020", VA = "0x1A12020")]
	private void UpdateLineRendererBezier()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1A120F0", Offset = "0x1A120F0", VA = "0x1A120F0")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1A121A0", Offset = "0x1A121A0", VA = "0x1A121A0")]
	private void CalculateTurbuelence(Vector3 position, float speed, float scale, float height, float gravity, int index)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x1A1236C", Offset = "0x1A1236C", VA = "0x1A1236C")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1A1270C", Offset = "0x1A1270C", VA = "0x1A1270C")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1A12814", Offset = "0x1A12814", VA = "0x1A12814")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1A12AD8", Offset = "0x1A12AD8", VA = "0x1A12AD8")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1A12948", Offset = "0x1A12948", VA = "0x1A12948")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1A12D00", Offset = "0x1A12D00", VA = "0x1A12D00")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1A12D94", Offset = "0x1A12D94", VA = "0x1A12D94")]
	public ME_TrailRendererNoise()
	{
	}
}
[Token(Token = "0x2000098")]
[ExecuteInEditMode]
public class PSMeshRendererUpdater : MonoBehaviour
{
	[Token(Token = "0x2000099")]
	private class ParticleStartInfo
	{
		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem.MinMaxCurve StartSize;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem.MinMaxCurve StartSpeed;

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xDB4F5C", Offset = "0xDB4F5C", VA = "0xDB4F5C")]
		public ParticleStartInfo()
		{
		}
	}

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MeshObject;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartScaleMultiplier;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Color;

	[Token(Token = "0x4000311")]
	private const string materialName = "MeshEffect";

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material[]> rendererMaterials;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Material[]> skinnedMaterials;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsActive;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float FadeTime;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool currentActiveStatus;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool needUpdateAlpha;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color oldColor;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentAlphaTime;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] colorProperties;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float alpha;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float prevAlpha;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<string, float> startAlphaColors;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool previousActiveStatus;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool needUpdate;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool needLastUpdate;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<ParticleSystem, ParticleStartInfo> startParticleParameters;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x14A5354", Offset = "0x14A5354", VA = "0x14A5354")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x14A5364", Offset = "0x14A5364", VA = "0x14A5364")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x14A54F4", Offset = "0x14A54F4", VA = "0x14A54F4")]
	private void InitStartAlphaColors()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x14A6580", Offset = "0x14A6580", VA = "0x14A6580")]
	private void InitStartParticleParameters()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x14A5B80", Offset = "0x14A5B80", VA = "0x14A5B80")]
	private void UpdateVisibleStatus()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x14A6744", Offset = "0x14A6744", VA = "0x14A6744")]
	private void UpdateAlphaByProperties(string rendName, int materialNumber, Material mat, float alpha)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x14A63D8", Offset = "0x14A63D8", VA = "0x14A63D8")]
	private void GetStartAlphaByProperties(string rendName, int materialNumber, Material mat)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x14A62E4", Offset = "0x14A62E4", VA = "0x14A62E4")]
	public void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x14A68A4", Offset = "0x14A68A4", VA = "0x14A68A4")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x14A6970", Offset = "0x14A6970", VA = "0x14A6970")]
	public void UpdateMeshEffect()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x14A72DC", Offset = "0x14A72DC", VA = "0x14A72DC")]
	private void CheckScaleIncludedParticles()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x14A72E0", Offset = "0x14A72E0", VA = "0x14A72E0")]
	public void UpdateMeshEffect(GameObject go)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x14A6A8C", Offset = "0x14A6A8C", VA = "0x14A6A8C")]
	private void UpdatePSMesh(GameObject go)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x14A7404", Offset = "0x14A7404", VA = "0x14A7404")]
	private ParticleSystem.MinMaxCurve UpdateParticleParam(ParticleSystem.MinMaxCurve startParam, ParticleSystem.MinMaxCurve currentParam, float scale)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x14A70B8", Offset = "0x14A70B8", VA = "0x14A70B8")]
	private void AddMaterialToMesh(GameObject go)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x14A74C0", Offset = "0x14A74C0", VA = "0x14A74C0")]
	private Material[] AddToSharedMaterial(Material[] sharedMaterials, ME_MeshMaterialEffect meshMatEffect)
	{
		return null;
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x14A76A0", Offset = "0x14A76A0", VA = "0x14A76A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x14A7AE4", Offset = "0x14A7AE4", VA = "0x14A7AE4")]
	public PSMeshRendererUpdater()
	{
	}
}
[Token(Token = "0x200009A")]
public class ME_PerPlatformSettings : MonoBehaviour
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DisableOnMobiles;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RenderMobileDistortion;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9898", Offset = "0xAA9898")]
	public float ParticleBudgetForMobiles;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isMobile;

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1A10F34", Offset = "0x1A10F34", VA = "0x1A10F34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1A10FB8", Offset = "0x1A10FB8", VA = "0x1A10FB8")]
	private bool IsMobilePlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1A10FC0", Offset = "0x1A10FC0", VA = "0x1A10FC0")]
	private void ChangeParticlesBudget(float particlesMul)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1A113BC", Offset = "0x1A113BC", VA = "0x1A113BC")]
	public ME_PerPlatformSettings()
	{
	}
}
[Token(Token = "0x200009B")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA5E7C", Offset = "0xAA5E7C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA5E7C", Offset = "0xAA5E7C")]
public class RFX4_DistortionAndBloom : MonoBehaviour
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA98B4", Offset = "0xAA98B4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA98B4", Offset = "0xAA98B4")]
	public float RenderTextureResolutoinFactor;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool UseBloom;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA990C", Offset = "0xAA990C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA990C", Offset = "0xAA990C")]
	public float Threshold;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9964", Offset = "0xAA9964")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9964", Offset = "0xAA9964")]
	public float SoftKnee;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA99C8", Offset = "0xAA99C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA99C8", Offset = "0xAA99C8")]
	public float Radius;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9A1C", Offset = "0xAA9A1C")]
	public float Intensity;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9A54", Offset = "0xAA9A54")]
	public bool HighQuality;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9A8C", Offset = "0xAA9A8C")]
	public bool AntiFlicker;

	[Token(Token = "0x4000330")]
	private const string shaderName = "Hidden/KriptoFX/PostEffects/RFX4_Bloom";

	[Token(Token = "0x4000331")]
	private const string shaderAdditiveName = "Hidden/KriptoFX/PostEffects/RFX4_BloomAdditive";

	[Token(Token = "0x4000332")]
	private const string cameraName = "MobileCamera(Distort_Bloom_Depth)";

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture source;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture depth;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture destination;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int previuosFrameWidth;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int previuosFrameHeight;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float previousScale;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera addCamera;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject tempGO;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool HDRSupported;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material m_Material;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material m_MaterialAdditive;

	[Token(Token = "0x400033E")]
	private const int kMaxIterations = 16;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly RenderTexture[] m_blurBuffer1;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly RenderTexture[] m_blurBuffer2;

	[Token(Token = "0x1700002A")]
	public Material mat
	{
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x1625638", Offset = "0x1625638", VA = "0x1625638")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002B")]
	public Material matAdditive
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x16257B0", Offset = "0x16257B0", VA = "0x16257B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x16256DC", Offset = "0x16256DC", VA = "0x16256DC")]
	public static Material CheckShaderAndCreateMaterial(Shader s)
	{
		return null;
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1625864", Offset = "0x1625864", VA = "0x1625864")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x16259FC", Offset = "0x16259FC", VA = "0x16259FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1625BE4", Offset = "0x1625BE4", VA = "0x1625BE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x16267A8", Offset = "0x16267A8", VA = "0x16267A8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1625A00", Offset = "0x1625A00", VA = "0x1625A00")]
	private void InitializeRenderTarget()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1625FCC", Offset = "0x1625FCC", VA = "0x1625FCC")]
	private void UpdateBloom()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1625D98", Offset = "0x1625D98", VA = "0x1625D98")]
	private void GrabImage()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1626828", Offset = "0x1626828", VA = "0x1626828")]
	public RFX4_DistortionAndBloom()
	{
	}
}
[Token(Token = "0x200009C")]
public class RFX4_DemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] ReactivationTimes;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light Sun;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReflectionProbe ReflectionProbe;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light[] NightLights;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture HUETexture;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool UseMobileVersion;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RFX4_DistortionAndBloom RFX4_DistortionAndBloom;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int currentNomber;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject currentInstance;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GUIStyle guiStyleHeader;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GUIStyle guiStyleHeaderMobile;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float dpiScale;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isDay;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float colorHUE;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float startSunIntensity;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion startSunRotation;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color startAmbientLight;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float startAmbientIntencity;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float startReflectionIntencity;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LightShadows startLightShadows;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool isButtonPressed;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool isUsedMobileBloom;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1624474", Offset = "0x1624474", VA = "0x1624474")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x16247A0", Offset = "0x16247A0", VA = "0x16247A0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x16245C4", Offset = "0x16245C4", VA = "0x16245C4")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1625370", Offset = "0x1625370", VA = "0x1625370")]
	private void RemoveClones()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1625498", Offset = "0x1625498", VA = "0x1625498")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x16254DC", Offset = "0x16254DC", VA = "0x16254DC")]
	public RFX4_DemoGUI()
	{
	}
}
[Token(Token = "0x200009D")]
public class RFX4_FPS : MonoBehaviour
{
	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly GUIStyle guiStyleHeader;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeleft;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float fps;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1628540", Offset = "0x1628540", VA = "0x1628540")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x16285C4", Offset = "0x16285C4", VA = "0x16285C4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x16286C4", Offset = "0x16286C4", VA = "0x16286C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1628724", Offset = "0x1628724", VA = "0x1628724")]
	public RFX4_FPS()
	{
	}
}
[Token(Token = "0x200009E")]
public class RFX4_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1628B0C", Offset = "0x1628B0C", VA = "0x1628B0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1628B44", Offset = "0x1628B44", VA = "0x1628B44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1628F8C", Offset = "0x1628F8C", VA = "0x1628F8C")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1628FBC", Offset = "0x1628FBC", VA = "0x1628FBC")]
	public RFX4_MouseOrbit()
	{
	}
}
[Token(Token = "0x200009F")]
public class RFX4_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x150D178", Offset = "0x150D178", VA = "0x150D178")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x150D1E8", Offset = "0x150D1E8", VA = "0x150D1E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x150D268", Offset = "0x150D268", VA = "0x150D268")]
	public RFX4_RealtimeReflection()
	{
	}
}
[Token(Token = "0x20000A0")]
public class RFX4_AudioCurves : MonoBehaviour
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve AudioCurve;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsLoop;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool canUpdate;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startTime;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startVolume;

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1622AF8", Offset = "0x1622AF8", VA = "0x1622AF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1622B84", Offset = "0x1622B84", VA = "0x1622B84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1622BB4", Offset = "0x1622BB4", VA = "0x1622BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1622C58", Offset = "0x1622C58", VA = "0x1622C58")]
	public RFX4_AudioCurves()
	{
	}
}
[Token(Token = "0x20000A1")]
public class RFX4_LightCurves : MonoBehaviour
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1628788", Offset = "0x1628788", VA = "0x1628788")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1628808", Offset = "0x1628808", VA = "0x1628808")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1628838", Offset = "0x1628838", VA = "0x1628838")]
	private void Update()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x16288DC", Offset = "0x16288DC", VA = "0x16288DC")]
	public RFX4_LightCurves()
	{
	}
}
[Token(Token = "0x20000A2")]
public class RFX4_PhysicsForceCurves : MonoBehaviour
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ForceRadius;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ForceMultiplier;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve ForceCurve;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ForceMode ForceMode;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool IsLoop;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float DestoryDistance;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool UseDistanceScale;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve DistanceScaleCurve;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool UseUPVector;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve DragCurve;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float DragGraphTimeMultiplier;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float DragGraphIntensityMultiplier;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string AffectedName;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public float forceAdditionalMultiplier;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool canUpdate;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float startTime;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform t;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x162AC40", Offset = "0x162AC40", VA = "0x162AC40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x162AC68", Offset = "0x162AC68", VA = "0x162AC68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x162ACA0", Offset = "0x162ACA0", VA = "0x162ACA0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x162B130", Offset = "0x162B130", VA = "0x162B130")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x162B180", Offset = "0x162B180", VA = "0x162B180")]
	public RFX4_PhysicsForceCurves()
	{
	}
}
[Token(Token = "0x20000A3")]
public class RFX4_ScaleCurves : MonoBehaviour
{
	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform t;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int nameId;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Projector proj;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startScale;

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x150D7BC", Offset = "0x150D7BC", VA = "0x150D7BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x150D868", Offset = "0x150D868", VA = "0x150D868")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x150D8B4", Offset = "0x150D8B4", VA = "0x150D8B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x150D9E0", Offset = "0x150D9E0", VA = "0x150D9E0")]
	public RFX4_ScaleCurves()
	{
	}
}
[Token(Token = "0x20000A4")]
public class RFX4_ShaderColorGradient : MonoBehaviour
{
	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX4_ShaderProperties ShaderColorProperty;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient Color;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeMultiplier;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool UseSharedMaterial;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int propertyID;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float startTime;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color startColor;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isInitialized;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string shaderProperty;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x150DA28", Offset = "0x150DA28", VA = "0x150DA28")]
	private void Start()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x150DA2C", Offset = "0x150DA2C", VA = "0x150DA2C")]
	private void Init()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x150DD94", Offset = "0x150DD94", VA = "0x150DD94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x150DDCC", Offset = "0x150DDCC", VA = "0x150DDCC")]
	private void Update()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x150DFB4", Offset = "0x150DFB4", VA = "0x150DFB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x150E074", Offset = "0x150E074", VA = "0x150E074")]
	public RFX4_ShaderColorGradient()
	{
	}
}
[Token(Token = "0x20000A5")]
public class RFX4_ShaderFloatCurve : MonoBehaviour
{
	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX4_ShaderProperties ShaderFloatProperty;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsLoop;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool UseSharedMaterial;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool canUpdate;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startFloat;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int propertyID;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string shaderProperty;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInitialized;

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x150E0E8", Offset = "0x150E0E8", VA = "0x150E0E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x150E3C8", Offset = "0x150E3C8", VA = "0x150E3C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x150E43C", Offset = "0x150E43C", VA = "0x150E43C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x150E4E4", Offset = "0x150E4E4", VA = "0x150E4E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x150E518", Offset = "0x150E518", VA = "0x150E518")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x150E5C8", Offset = "0x150E5C8", VA = "0x150E5C8")]
	public RFX4_ShaderFloatCurve()
	{
	}
}
[Token(Token = "0x20000A6")]
public enum RFX4_ShaderProperties
{
	[Token(Token = "0x40003AD")]
	_TintColor,
	[Token(Token = "0x40003AE")]
	_Cutoff,
	[Token(Token = "0x40003AF")]
	_Color,
	[Token(Token = "0x40003B0")]
	_EmissionColor,
	[Token(Token = "0x40003B1")]
	_MaskPow,
	[Token(Token = "0x40003B2")]
	_Cutout,
	[Token(Token = "0x40003B3")]
	_Speed,
	[Token(Token = "0x40003B4")]
	_BumpAmt
}
[Token(Token = "0x20000A7")]
public class RFX4_WindCurves : MonoBehaviour
{
	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve WindCurve;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WindZone windZone;

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1512D88", Offset = "0x1512D88", VA = "0x1512D88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1512E08", Offset = "0x1512E08", VA = "0x1512E08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1512E38", Offset = "0x1512E38", VA = "0x1512E38")]
	private void Update()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1512EDC", Offset = "0x1512EDC", VA = "0x1512EDC")]
	public RFX4_WindCurves()
	{
	}
}
[Token(Token = "0x20000A8")]
public class RFX4_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color previousColor;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1626F38", Offset = "0x1626F38", VA = "0x1626F38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x16270C0", Offset = "0x16270C0", VA = "0x16270C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1626F3C", Offset = "0x1626F3C", VA = "0x1626F3C")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1627108", Offset = "0x1627108", VA = "0x1627108")]
	public RFX4_EffectSettingColor()
	{
	}
}
[Token(Token = "0x20000A9")]
public class RFX4_EffectSettingPhysxForce : MonoBehaviour
{
	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ForceMultiplier;

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x162713C", Offset = "0x162713C", VA = "0x162713C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1627140", Offset = "0x1627140", VA = "0x1627140")]
	private void Update()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x16273E8", Offset = "0x16273E8", VA = "0x16273E8")]
	public RFX4_EffectSettingPhysxForce()
	{
	}
}
[Token(Token = "0x20000AA")]
public class RFX4_EffectSettingProjectile : MonoBehaviour
{
	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FlyDistanceForProjectiles;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SpeedMultiplier;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask CollidesWith;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float startSpeed;

	[Token(Token = "0x40003C3")]
	private const string particlesAdditionalName = "Distance";

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x16273F8", Offset = "0x16273F8", VA = "0x16273F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x16274A4", Offset = "0x16274A4", VA = "0x16274A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x162770C", Offset = "0x162770C", VA = "0x162770C")]
	public RFX4_EffectSettingProjectile()
	{
	}
}
[Token(Token = "0x20000AB")]
public class RFX4_EffectSettingVisible : MonoBehaviour
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float FadeOutTime;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool previousActiveStatus;

	[Token(Token = "0x40003C7")]
	private const string rendererAdditionalName = "Loop";

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] colorProperties;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float alpha;

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x162774C", Offset = "0x162774C", VA = "0x162774C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1627750", Offset = "0x1627750", VA = "0x1627750")]
	private void Update()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1627E98", Offset = "0x1627E98", VA = "0x1627E98")]
	public RFX4_EffectSettingVisible()
	{
	}
}
[Token(Token = "0x20000AC")]
public class RFX4_EffectSettingsTimeScale : MonoBehaviour
{
	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Time;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float prevTime;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem[] particles;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x162812C", Offset = "0x162812C", VA = "0x162812C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1628180", Offset = "0x1628180", VA = "0x1628180")]
	private void Update()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1628218", Offset = "0x1628218", VA = "0x1628218")]
	private void UpdateTime()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1628530", Offset = "0x1628530", VA = "0x1628530")]
	public RFX4_EffectSettingsTimeScale()
	{
	}
}
[Token(Token = "0x20000AD")]
public class RFX4_CollisionPropertyDeactiavtion : MonoBehaviour
{
	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DeactivateTimeDelay;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTime;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WindZone windZone;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.CollisionModule collisionModule;

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1622EF4", Offset = "0x1622EF4", VA = "0x1622EF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1622F5C", Offset = "0x1622F5C", VA = "0x1622F5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1622F90", Offset = "0x1622F90", VA = "0x1622F90")]
	private void Update()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1622FDC", Offset = "0x1622FDC", VA = "0x1622FDC")]
	public RFX4_CollisionPropertyDeactiavtion()
	{
	}
}
[Token(Token = "0x20000AE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA5F10", Offset = "0xAA5F10")]
public class RFX4_ParticleCollisionHandler : MonoBehaviour
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] EffectsOnCollision;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Offset;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DestroyTimeDelay;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UseWorldSpacePosition;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem part;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem ps;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1629188", Offset = "0x1629188", VA = "0x1629188")]
	private void Start()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x16291DC", Offset = "0x16291DC", VA = "0x16291DC")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1629514", Offset = "0x1629514", VA = "0x1629514")]
	public RFX4_ParticleCollisionHandler()
	{
	}
}
[Token(Token = "0x20000AF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA5F70", Offset = "0xAA5F70")]
public class RFX4_ParticleLight : MonoBehaviour
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float LightIntencityMultiplayer;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LightShadows Shadows;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light[] lights;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int lightLimit;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1629594", Offset = "0x1629594", VA = "0x1629594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x16297F8", Offset = "0x16297F8", VA = "0x16297F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1629A74", Offset = "0x1629A74", VA = "0x1629A74")]
	public RFX4_ParticleLight()
	{
	}
}
[Token(Token = "0x20000B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA5FD0", Offset = "0xAA5FD0")]
public class RFX4_ParticleTrail : MonoBehaviour
{
	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 DefaultSizeMultiplayer;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float VertexLifeTime;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TrailLifeTime;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseShaderMaterial;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material TrailMaterial;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool UseColorOverLifeTime;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gradient ColorOverLifeTime;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ColorLifeTime;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool UseUvAnimation;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int TilesX;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int TilesY;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int FPS;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool IsLoop;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9B04", Offset = "0xAA9B04")]
	public float MinVertexDistance;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool GetVelocityFromParticleSystem;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float Gravity;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 Force;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float InheritVelocity;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float Drag;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9B20", Offset = "0xAA9B20")]
	public float Frequency;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9B3C", Offset = "0xAA9B3C")]
	public float OffsetSpeed;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool RandomTurbulenceOffset;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9B58", Offset = "0xAA9B58")]
	public float Amplitude;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float TurbulenceStrength;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool SmoothCurves;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, LineRenderer> dict;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ParticleSystem ps;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private TrailRenderer[] trails;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color psColor;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform targetT;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int layer;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool isLocalSpace;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform t;

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1629A8C", Offset = "0x1629A8C", VA = "0x1629A8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x162A434", Offset = "0x162A434", VA = "0x162A434")]
	private void ClearTrails()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1629C88", Offset = "0x1629C88", VA = "0x1629C88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x162A674", Offset = "0x162A674", VA = "0x162A674")]
	private void InitTrailRenderer(GameObject go)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x162A540", Offset = "0x162A540", VA = "0x162A540")]
	private void RemoveEmptyTrails()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x162A75C", Offset = "0x162A75C", VA = "0x162A75C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x162A938", Offset = "0x162A938", VA = "0x162A938")]
	public RFX4_ParticleTrail()
	{
	}
}
[Token(Token = "0x20000B1")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6030", Offset = "0xAA6030")]
public class RFX4_Turbulence : MonoBehaviour
{
	[Token(Token = "0x20000B2")]
	public enum MoveMethodEnum
	{
		[Token(Token = "0x4000422")]
		Position,
		[Token(Token = "0x4000423")]
		Velocity,
		[Token(Token = "0x4000424")]
		RelativePosition
	}

	[Token(Token = "0x20000B3")]
	public enum PerfomanceEnum
	{
		[Token(Token = "0x4000426")]
		High,
		[Token(Token = "0x4000427")]
		Low
	}

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TurbulenceStrenght;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool TurbulenceByTime;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeDelay;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve TurbulenceStrengthByTime;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 Frequency;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 OffsetSpeed;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 Amplitude;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 GlobalForce;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool UseGlobalOffset;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public MoveMethodEnum MoveMethod;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PerfomanceEnum Perfomance;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float ThreshholdSpeed;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float lastStopTime;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 currentOffset;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float deltaTime;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float deltaTimeLastUpdateOffset;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ParticleSystem particleSys;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float time;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int currentSplit;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float fpsTime;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int FPS;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int splitUpdate;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private PerfomanceEnum perfomanceOldSettings;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool skipFrame;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform t;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float currentDelay;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1511558", Offset = "0x1511558", VA = "0x1511558")]
	private void Start()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x15116EC", Offset = "0x15116EC", VA = "0x15116EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x15116F4", Offset = "0x15116F4", VA = "0x15116F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1511698", Offset = "0x1511698", VA = "0x1511698")]
	private void UpdatePerfomanceSettings()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1511914", Offset = "0x1511914", VA = "0x1511914")]
	private void UpdateTurbulence()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1511EB4", Offset = "0x1511EB4", VA = "0x1511EB4")]
	public RFX4_Turbulence()
	{
	}
}
[Token(Token = "0x20000B4")]
public class RFX4_CameraShake : MonoBehaviour
{
	[Token(Token = "0x20000B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA60A0", Offset = "0xAA60A0")]
	private sealed class <Shake>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RFX4_CameraShake <>4__this;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsed>5__2;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <camT>5__3;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <originalCamRotation>5__4;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <direction>5__5;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <time>5__6;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <randomStart>5__7;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <distanceDamper>5__8;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 <oldRotation>5__9;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600035B")]
			[Address(RVA = "0xE65744", Offset = "0xE65744", VA = "0xE65744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035D")]
			[Address(RVA = "0xE6578C", Offset = "0xE6578C", VA = "0xE6578C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0xE65290", Offset = "0xE65290", VA = "0xE65290")]
		[DebuggerHidden]
		public <Shake>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0xE652BC", Offset = "0xE652BC", VA = "0xE652BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0xE652C0", Offset = "0xE652C0", VA = "0xE652C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0xE6574C", Offset = "0xE6574C", VA = "0xE6574C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve ShakeCurve;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Duration;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Speed;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Magnitude;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float DistanceForce;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float RotationDamper;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool IsEnabled;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isPlaying;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1622CA0", Offset = "0x1622CA0", VA = "0x1622CA0")]
	private void PlayShake()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1622D44", Offset = "0x1622D44", VA = "0x1622D44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x1622D60", Offset = "0x1622D60", VA = "0x1622D60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x1622CD8", Offset = "0x1622CD8", VA = "0x1622CD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9D6C", Offset = "0xAB9D6C")]
	private IEnumerator Shake()
	{
		return null;
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x1622E98", Offset = "0x1622E98", VA = "0x1622E98")]
	public RFX4_CameraShake()
	{
	}
}
[Token(Token = "0x20000B6")]
public static class RFX4_ColorHelper
{
	[Token(Token = "0x20000B7")]
	public struct HSBColor
	{
		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float S;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float B;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float A;

		[Token(Token = "0x6000365")]
		[Address(RVA = "0xE65794", Offset = "0xE65794", VA = "0xE65794")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x400043C")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1622FEC", Offset = "0x1622FEC", VA = "0x1622FEC")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x16231D4", Offset = "0x16231D4", VA = "0x16231D4")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1623414", Offset = "0x1623414", VA = "0x1623414")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1623530", Offset = "0x1623530", VA = "0x1623530")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1623E7C", Offset = "0x1623E7C", VA = "0x1623E7C")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1623F54", Offset = "0x1623F54", VA = "0x1623F54")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x20000B8")]
public class RFX4_CopyPosition : MonoBehaviour
{
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CopiedTransform;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1624234", Offset = "0x1624234", VA = "0x1624234")]
	private void Start()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x162425C", Offset = "0x162425C", VA = "0x162425C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x162429C", Offset = "0x162429C", VA = "0x162429C")]
	public RFX4_CopyPosition()
	{
	}
}
[Token(Token = "0x20000B9")]
public class RFX4_DeactivateByTime : MonoBehaviour
{
	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DeactivateTime;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool canUpdateState;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x16242A4", Offset = "0x16242A4", VA = "0x16242A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x16242B0", Offset = "0x16242B0", VA = "0x16242B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x162431C", Offset = "0x162431C", VA = "0x162431C")]
	private void DeactivateThis()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1624344", Offset = "0x1624344", VA = "0x1624344")]
	public RFX4_DeactivateByTime()
	{
	}
}
[Token(Token = "0x20000BA")]
public class RFX4_DeactivateRigidbodyByTime : MonoBehaviour
{
	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelayToDeactivate;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1624354", Offset = "0x1624354", VA = "0x1624354")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x16243F0", Offset = "0x16243F0", VA = "0x16243F0")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1624464", Offset = "0x1624464", VA = "0x1624464")]
	public RFX4_DeactivateRigidbodyByTime()
	{
	}
}
[Token(Token = "0x20000BB")]
public class RFX4_DemoReactivation : MonoBehaviour
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ReactivationTime;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Effect;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x162558C", Offset = "0x162558C", VA = "0x162558C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x16255E4", Offset = "0x16255E4", VA = "0x16255E4")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1625628", Offset = "0x1625628", VA = "0x1625628")]
	public RFX4_DemoReactivation()
	{
	}
}
[Token(Token = "0x20000BC")]
public class RFX4_EffectEvent : MonoBehaviour
{
	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CharacterEffect;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform CharacterAttachPoint;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CharacterEffect2;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform CharacterAttachPoint2;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Effect;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform AttachPoint;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject AdditionalEffect;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform AdditionalEffectAttachPoint;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x16268B8", Offset = "0x16268B8", VA = "0x16268B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1626A24", Offset = "0x1626A24", VA = "0x1626A24")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1626AB8", Offset = "0x1626AB8", VA = "0x1626AB8")]
	public void ActivateAdditionalEffect()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1626B4C", Offset = "0x1626B4C", VA = "0x1626B4C")]
	public void ActivateCharacterEffect()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1626BE0", Offset = "0x1626BE0", VA = "0x1626BE0")]
	public void ActivateCharacterEffect2()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1626C74", Offset = "0x1626C74", VA = "0x1626C74")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1626F30", Offset = "0x1626F30", VA = "0x1626F30")]
	public RFX4_EffectEvent()
	{
	}
}
[Token(Token = "0x20000BD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA60B0", Offset = "0xAA60B0")]
[ExecuteInEditMode]
public class RFX4_MaterialQueue : MonoBehaviour
{
	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAA9B84", Offset = "0xAA9B84")]
	public int queue;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] queues;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1628924", Offset = "0x1628924", VA = "0x1628924")]
	private void Start()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1628AC0", Offset = "0x1628AC0", VA = "0x1628AC0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1628AC4", Offset = "0x1628AC4", VA = "0x1628AC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1628AFC", Offset = "0x1628AFC", VA = "0x1628AFC")]
	public RFX4_MaterialQueue()
	{
	}
}
[Token(Token = "0x20000BE")]
public class RFX4_OnEnableResetTransform : MonoBehaviour
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform t;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startPosition;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion startRotation;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 startScale;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInitialized;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1628FD8", Offset = "0x1628FD8", VA = "0x1628FD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x16290AC", Offset = "0x16290AC", VA = "0x16290AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1629180", Offset = "0x1629180", VA = "0x1629180")]
	public RFX4_OnEnableResetTransform()
	{
	}
}
[Token(Token = "0x20000BF")]
public class RFX4_PhysXSetImpulse : MonoBehaviour
{
	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Force;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ForceMode ForceMode;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rig;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform t;

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x162AA78", Offset = "0x162AA78", VA = "0x162AA78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x162AADC", Offset = "0x162AADC", VA = "0x162AADC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x162AB94", Offset = "0x162AB94", VA = "0x162AB94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x162AC30", Offset = "0x162AC30", VA = "0x162AC30")]
	public RFX4_PhysXSetImpulse()
	{
	}
}
[Token(Token = "0x20000C0")]
public class RFX4_RaycastCollision : MonoBehaviour
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RaycastDistance;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] Effects;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Offset;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TimeDelay;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DestroyTime;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool UsePivotPosition;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseNormalRotation;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool IsWorldSpace;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool RealTimeUpdateRaycast;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool DestroyAfterDisabling;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<GameObject> CollidedInstances;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInitialized;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool canUpdate;

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x150C82C", Offset = "0x150C82C", VA = "0x150C82C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x150CDFC", Offset = "0x150CDFC", VA = "0x150CDFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x150CEAC", Offset = "0x150CEAC", VA = "0x150CEAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x150CFF8", Offset = "0x150CFF8", VA = "0x150CFF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x150D008", Offset = "0x150D008", VA = "0x150D008")]
	private void LateEnable()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x150C8A8", Offset = "0x150C8A8", VA = "0x150C8A8")]
	private void UpdateRaycast()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x150D00C", Offset = "0x150D00C", VA = "0x150D00C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x150D0E0", Offset = "0x150D0E0", VA = "0x150D0E0")]
	public RFX4_RaycastCollision()
	{
	}
}
[Token(Token = "0x20000C1")]
public class RFX4_ReplaceMaterialByTime : MonoBehaviour
{
	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material ReplacementMaterial;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeDelay;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ChangeShadow;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool isInitialized;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mat;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer mshRend;

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x150D270", Offset = "0x150D270", VA = "0x150D270")]
	private void Start()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x150D304", Offset = "0x150D304", VA = "0x150D304")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x150D384", Offset = "0x150D384", VA = "0x150D384")]
	private void ReplaceObject()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x150D3A8", Offset = "0x150D3A8", VA = "0x150D3A8")]
	public RFX4_ReplaceMaterialByTime()
	{
	}
}
[Token(Token = "0x20000C2")]
public class RFX4_ReplaceModelOnCollision : MonoBehaviour
{
	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PhysicsObjects;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isCollided;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform t;

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x150D3C0", Offset = "0x150D3C0", VA = "0x150D3C0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x150D4E0", Offset = "0x150D4E0", VA = "0x150D4E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x150D5E8", Offset = "0x150D5E8", VA = "0x150D5E8")]
	public RFX4_ReplaceModelOnCollision()
	{
	}
}
[Token(Token = "0x20000C3")]
public class RFX4_RotateAround : MonoBehaviour
{
	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Offset;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 RotateVector;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float LifeTime;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform t;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentTime;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion rotation;

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x150D5F0", Offset = "0x150D5F0", VA = "0x150D5F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x150D630", Offset = "0x150D630", VA = "0x150D630")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x150D6CC", Offset = "0x150D6CC", VA = "0x150D6CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x150D770", Offset = "0x150D770", VA = "0x150D770")]
	public RFX4_RotateAround()
	{
	}
}
[Token(Token = "0x20000C4")]
public class RFX4_SimpleDecal : MonoBehaviour
{
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Offset;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool UseNormalRotation;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RaycastHit hit;

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x150E618", Offset = "0x150E618", VA = "0x150E618")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x150E784", Offset = "0x150E784", VA = "0x150E784")]
	public RFX4_SimpleDecal()
	{
	}
}
[Token(Token = "0x20000C5")]
public class RFX4_StartDelay : MonoBehaviour
{
	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ActivatedGameObject;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Delay;

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x150E798", Offset = "0x150E798", VA = "0x150E798")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x150E804", Offset = "0x150E804", VA = "0x150E804")]
	private void ActivateGO()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x150E824", Offset = "0x150E824", VA = "0x150E824")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x150E874", Offset = "0x150E874", VA = "0x150E874")]
	public RFX4_StartDelay()
	{
	}
}
[Token(Token = "0x20000C6")]
public enum RFX4_TextureShaderProperties
{
	[Token(Token = "0x4000480")]
	_MainTex,
	[Token(Token = "0x4000481")]
	_DistortTex,
	[Token(Token = "0x4000482")]
	_Mask,
	[Token(Token = "0x4000483")]
	_Cutout,
	[Token(Token = "0x4000484")]
	_CutoutTex,
	[Token(Token = "0x4000485")]
	_Bump,
	[Token(Token = "0x4000486")]
	_BumpTex,
	[Token(Token = "0x4000487")]
	_EmissionTex
}
[Token(Token = "0x20000C7")]
public class RFX4_TornadoParticles : MonoBehaviour
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material TornadoMaterial;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem particleSys;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light myLight;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector4 _twistScale;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int materialID;

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x150E884", Offset = "0x150E884", VA = "0x150E884")]
	private void Start()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x150EA70", Offset = "0x150EA70", VA = "0x150EA70")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x150ED24", Offset = "0x150ED24", VA = "0x150ED24")]
	public RFX4_TornadoParticles()
	{
	}
}
[Token(Token = "0x20000C8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6120", Offset = "0xAA6120")]
public class RFX4_TrailRenderer : MonoBehaviour
{
	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float VertexLifeTime;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TrailLifeTime;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9BDC", Offset = "0xAA9BDC")]
	public float MinVertexDistance;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Gravity;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 Force;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float InheritVelocity;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Drag;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9BF8", Offset = "0xAA9BF8")]
	public float Frequency;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9C14", Offset = "0xAA9C14")]
	public float OffsetSpeed;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool RandomTurbulenceOffset;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9C30", Offset = "0xAA9C30")]
	public float Amplitude;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float TurbulenceStrength;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool SmoothCurves;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> positions;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<float> currentTimes;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Vector3> velocities;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public float currentLifeTime;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform t;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 prevPosition;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 startPosition;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int curveCount;

	[Token(Token = "0x40004A7")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x40004A8")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x40004A9")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float currentVelocity;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float turbulenceRandomOffset;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool isInitialized;

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x150ED34", Offset = "0x150ED34", VA = "0x150ED34")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x150EF90", Offset = "0x150EF90", VA = "0x150EF90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x150ED5C", Offset = "0x150ED5C", VA = "0x150ED5C")]
	private void Init()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x150EFA0", Offset = "0x150EFA0", VA = "0x150EFA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x150FA7C", Offset = "0x150FA7C", VA = "0x150FA7C")]
	private int GetLastDeletedIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x150F0C4", Offset = "0x150F0C4", VA = "0x150F0C4")]
	private void UpdatePositionsCount()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1510180", Offset = "0x1510180", VA = "0x1510180")]
	private void AddInterpolatedPositions(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x150FB9C", Offset = "0x150FB9C", VA = "0x150FB9C")]
	private void RemovePositionsBeforeIndex(int lastDeletedIndex)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x150F224", Offset = "0x150F224", VA = "0x150F224")]
	private void UpdateForce()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x150F640", Offset = "0x150F640", VA = "0x150F640")]
	private void UpdateImpulse()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x150F804", Offset = "0x150F804", VA = "0x150F804")]
	private void UpdateVelocity()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x150FCD8", Offset = "0x150FCD8", VA = "0x150FCD8")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1510078", Offset = "0x1510078", VA = "0x1510078")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1510360", Offset = "0x1510360", VA = "0x1510360")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1510624", Offset = "0x1510624", VA = "0x1510624")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1510494", Offset = "0x1510494", VA = "0x1510494")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x151084C", Offset = "0x151084C", VA = "0x151084C")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x15108E0", Offset = "0x15108E0", VA = "0x15108E0")]
	public RFX4_TrailRenderer()
	{
	}
}
[Token(Token = "0x20000C9")]
public class RFX4_TransformMotion : MonoBehaviour
{
	[Token(Token = "0x20000CA")]
	public enum RFX4_SimulationSpace
	{
		[Token(Token = "0x40004C7")]
		Local,
		[Token(Token = "0x40004C8")]
		World
	}

	[Token(Token = "0x20000CB")]
	public class RFX4_CollisionInfo : EventArgs
	{
		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit Hit;

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xE657A0", Offset = "0xE657A0", VA = "0xE657A0")]
		public RFX4_CollisionInfo()
		{
		}
	}

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Distance;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Speed;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Dampeen;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MinSpeed;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeDelay;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask CollidesWith;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] EffectsOnCollision;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float CollisionOffset;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float DestroyTimeDelay;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool CollisionEffectInWorldSpace;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] DeactivatedObjectsOnCollision;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public List<GameObject> CollidedInstances;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 startPositionLocal;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform t;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 oldPos;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isCollided;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool isOutDistance;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion startQuaternion;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float currentSpeed;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float currentDelay;

	[Token(Token = "0x40004C2")]
	private const float RayCastTolerance = 0.3f;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isInitialized;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool dropFirstFrameForFixUnityBugWithParticles;

	[Token(Token = "0x14000001")]
	public event EventHandler<RFX4_CollisionInfo> CollisionEnter
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x15109B0", Offset = "0x15109B0", VA = "0x15109B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9E1C", Offset = "0xAB9E1C")]
		add
		{
		}
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x1510A50", Offset = "0x1510A50", VA = "0x1510A50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9E2C", Offset = "0xAB9E2C")]
		remove
		{
		}
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1510AF0", Offset = "0x1510AF0", VA = "0x1510AF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1510C00", Offset = "0x1510C00", VA = "0x1510C00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x1510C10", Offset = "0x1510C10", VA = "0x1510C10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1510B70", Offset = "0x1510B70", VA = "0x1510B70")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1510C9C", Offset = "0x1510C9C", VA = "0x1510C9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1510CB0", Offset = "0x1510CB0", VA = "0x1510CB0")]
	private void UpdateWorldPosition()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x151108C", Offset = "0x151108C", VA = "0x151108C")]
	private void OnCollisionBehaviour(RaycastHit hit)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1510C20", Offset = "0x1510C20", VA = "0x1510C20")]
	private void OnCollisionDeactivateBehaviour(bool active)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1511408", Offset = "0x1511408", VA = "0x1511408")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x15114F8", Offset = "0x15114F8", VA = "0x15114F8")]
	public RFX4_TransformMotion()
	{
	}
}
[Token(Token = "0x20000CC")]
public class RFX4_UVAnimation : MonoBehaviour
{
	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TilesX;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int TilesY;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FPS;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int StartFrameOffset;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float StartDelay;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsReverse;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RFX4_TextureShaderProperties[] TextureNames;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve FrameOverTime;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int count;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer currentRenderer;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Projector projector;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material instanceMaterial;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float animationStartTime;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool canUpdate;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int previousIndex;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int totalFrames;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float currentInterpolatedTime;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int currentIndex;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2 size;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isInitialized;

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1511F58", Offset = "0x1511F58", VA = "0x1511F58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x1512174", Offset = "0x1512174", VA = "0x1512174")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x151219C", Offset = "0x151219C", VA = "0x151219C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1511F68", Offset = "0x1511F68", VA = "0x1511F68")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x151278C", Offset = "0x151278C", VA = "0x151278C")]
	private void InitializeMaterial()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x15121E4", Offset = "0x15121E4", VA = "0x15121E4")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x15123A8", Offset = "0x15123A8", VA = "0x15123A8")]
	private void SetSpriteAnimation()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x151260C", Offset = "0x151260C", VA = "0x151260C")]
	private void SetSpriteAnimationIterpolated()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1512998", Offset = "0x1512998", VA = "0x1512998")]
	public RFX4_UVAnimation()
	{
	}
}
[Token(Token = "0x20000CD")]
public class RFX4_UVScroll : MonoBehaviour
{
	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 UvScrollMultiplier;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RFX4_TextureShaderProperties TextureName;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 uvOffset;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mat;

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x1512A28", Offset = "0x1512A28", VA = "0x1512A28")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1512C24", Offset = "0x1512C24", VA = "0x1512C24")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1512D4C", Offset = "0x1512D4C", VA = "0x1512D4C")]
	public RFX4_UVScroll()
	{
	}
}
[Token(Token = "0x20000CE")]
public class AspectUtility : MonoBehaviour
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _wantedAspectRatio;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float wantedAspectRatio;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Camera cam;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Camera backgroundCam;

	[Token(Token = "0x1700002E")]
	public static int screenHeight
	{
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x1348580", Offset = "0x1348580", VA = "0x1348580")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002F")]
	public static int screenWidth
	{
		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x1348630", Offset = "0x1348630", VA = "0x1348630")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000030")]
	public static int xOffset
	{
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x13486E0", Offset = "0x13486E0", VA = "0x13486E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000031")]
	public static int yOffset
	{
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x1348790", Offset = "0x1348790", VA = "0x1348790")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000032")]
	public static Rect screenRect
	{
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x1348840", Offset = "0x1348840", VA = "0x1348840")]
		get
		{
			return default(Rect);
		}
	}

	[Token(Token = "0x17000033")]
	public static Vector3 mousePosition
	{
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x13489D8", Offset = "0x13489D8", VA = "0x13489D8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000034")]
	public static Vector2 guiMousePosition
	{
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1348B20", Offset = "0x1348B20", VA = "0x1348B20")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1348008", Offset = "0x1348008", VA = "0x1348008")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x134817C", Offset = "0x134817C", VA = "0x134817C")]
	public static void SetCamera()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x1348D74", Offset = "0x1348D74", VA = "0x1348D74")]
	public AspectUtility()
	{
	}
}
[Token(Token = "0x20000CF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6180", Offset = "0xAA6180")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA6180", Offset = "0xAA6180")]
public class CTAAVR_SPS : MonoBehaviour
{
	[Token(Token = "0x40004E8")]
	private const RenderTextureFormat velocityFormat = RenderTextureFormat.RGFloat;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool CTAA_Enabled;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9C8C", Offset = "0xAA9C8C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9C8C", Offset = "0xAA9C8C")]
	public float TemporalEdgePower;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAA9CE0", Offset = "0xAA9CE0")]
	private float TemporalQuality;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int forwardMode;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mat_txaa;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material StereoMat;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture rtAccum0;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture rtAccum1;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture txaaOut;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera _camera;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool firstFrame;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool swap;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Shader velShader;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material velocityMaterial;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderTexture[] velBuffers;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool[] paramInitialized;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector4[] paramProjectionExtents;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Matrix4x4[] paramCurrV;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Matrix4x4[] paramCurrVP;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Matrix4x4[] paramPrevVP;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Matrix4x4[] paramPrevVP_NoFlip;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int activeEyeIndex;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int frameCounter;

	[Token(Token = "0x17000035")]
	public RenderTexture getCurrentVelocityBuffer
	{
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x1BF8944", Offset = "0x1BF8944", VA = "0x1BF8944")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x1BF8994", Offset = "0x1BF8994", VA = "0x1BF8994")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x1BF8AAC", Offset = "0x1BF8AAC", VA = "0x1BF8AAC")]
	private static Material CreateMaterial(string shadername)
	{
		return null;
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1BF8B4C", Offset = "0x1BF8B4C", VA = "0x1BF8B4C")]
	private static void DestroyMaterial(Material mat)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x1BF8BE8", Offset = "0x1BF8BE8", VA = "0x1BF8BE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x1BF8DA4", Offset = "0x1BF8DA4", VA = "0x1BF8DA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1BF8CB8", Offset = "0x1BF8CB8", VA = "0x1BF8CB8")]
	private void CreateMaterials()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1BF8E40", Offset = "0x1BF8E40", VA = "0x1BF8E40")]
	private void SetCTAA_Parameters()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1BF8E4C", Offset = "0x1BF8E4C", VA = "0x1BF8E4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1BF8F2C", Offset = "0x1BF8F2C", VA = "0x1BF8F2C")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1BF8F8C", Offset = "0x1BF8F8C", VA = "0x1BF8F8C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1BF9F60", Offset = "0x1BF9F60", VA = "0x1BF9F60")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1BF9E70", Offset = "0x1BF9E70", VA = "0x1BF9E70")]
	private Vector4 GetProjectionExtentsCTAA(Camera camera, Camera.StereoscopicEye eye)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1BFA6BC", Offset = "0x1BFA6BC", VA = "0x1BFA6BC")]
	private Vector4 GetProjectionExtentsCTAA(Camera camera, Camera.StereoscopicEye eye, float texelOffsetX, float texelOffsetY)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1BFA844", Offset = "0x1BFA844", VA = "0x1BFA844")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1BF8A10", Offset = "0x1BF8A10", VA = "0x1BF8A10")]
	private void Clear()
	{
	}

	[Token(Token = "0x60003E6")]
	private void EnsureArray<T>(ref T[] array, int size, [Optional] T initialValue)
	{
	}

	[Token(Token = "0x60003E7")]
	private void EnsureArray<T>(ref T[,] array, int size0, int size1, [Optional] T defaultValue)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1BF9AB4", Offset = "0x1BF9AB4", VA = "0x1BF9AB4")]
	private void EnsureMaterial(ref Material material, Shader shader)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1BF8F34", Offset = "0x1BF8F34", VA = "0x1BF8F34")]
	private void EnsureDepthTexture(Camera camera)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1BF9DF4", Offset = "0x1BF9DF4", VA = "0x1BF9DF4")]
	private void EnsureKeyword(Material material, string name, bool enabled)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1BF9C2C", Offset = "0x1BF9C2C", VA = "0x1BF9C2C")]
	private bool EnsureRenderTarget(ref RenderTexture rt, int width, int height, RenderTextureFormat format, FilterMode filterMode, int depthBits = 0, int antiAliasing = 1)
	{
		return default(bool);
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1BFA8AC", Offset = "0x1BFA8AC", VA = "0x1BFA8AC")]
	private void ReleaseRenderTarget(ref RenderTexture rt)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1BF9E7C", Offset = "0x1BF9E7C", VA = "0x1BF9E7C")]
	private void DrawFullscreenQuad()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1BFA930", Offset = "0x1BFA930", VA = "0x1BFA930")]
	public CTAAVR_SPS()
	{
	}
}
[Token(Token = "0x20000D0")]
public class DynamicObjectCTAASPS : MonoBehaviour
{
	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Vector3> temporaryVertexStorage;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<DynamicObjectCTAASPS> activeObjects;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _transform;

	[NonSerialized]
	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public SkinnedMeshRenderer meshSmr;

	[NonSerialized]
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool meshSmrActive;

	[NonSerialized]
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Matrix4x4 localToWorldPrev;

	[NonSerialized]
	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Matrix4x4 localToWorldCurr;

	[Token(Token = "0x4000508")]
	private const int framesNotRenderedSleepThreshold = 60;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int framesNotRendered;

	[Token(Token = "0x17000036")]
	public bool rendering
	{
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1C2EBD0", Offset = "0x1C2EBD0", VA = "0x1C2EBD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1C2EBE0", Offset = "0x1C2EBE0", VA = "0x1C2EBE0")]
	private void Reset()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x1C2ED9C", Offset = "0x1C2ED9C", VA = "0x1C2ED9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1C2EDA0", Offset = "0x1C2EDA0", VA = "0x1C2EDA0")]
	private void TagUpdate(bool restart)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x1C2EFEC", Offset = "0x1C2EFEC", VA = "0x1C2EFEC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1C2F00C", Offset = "0x1C2F00C", VA = "0x1C2F00C")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1C2F0BC", Offset = "0x1C2F0BC", VA = "0x1C2F0BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1C2F148", Offset = "0x1C2F148", VA = "0x1C2F148")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1C2F1E0", Offset = "0x1C2F1E0", VA = "0x1C2F1E0")]
	public DynamicObjectCTAASPS()
	{
	}
}
[Token(Token = "0x20000D1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6204", Offset = "0xAA6204")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6204", Offset = "0xAA6204")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA6204", Offset = "0xAA6204")]
public class CTAAVR_OCULUS : MonoBehaviour
{
	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool CTAA_Enabled;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9D44", Offset = "0xAA9D44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9D44", Offset = "0xAA9D44")]
	public float TemporalStability;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9D98", Offset = "0xAA9D98")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAA9D98", Offset = "0xAA9D98")]
	public float AdaptiveEnhance;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9DE0", Offset = "0xAA9DE0")]
	public float jitterScale;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera.StereoscopicEye VRCameraEYE;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool PreEnhanceEnabled;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float preEnhanceStrength;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float preEnhanceClamp;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float AdaptiveResolve;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float TemporalQuality;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int forwardMode;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CTAAVelocity_Oculus _velocity;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera _cam;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material mat_txaa;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material mat_enhance;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RenderTexture rtAccum0;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderTexture rtAccum1;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderTexture txaaOut;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RenderTexture afterPreEnhace;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool firstFrame;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool swap;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int frameCounter;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] x_jit;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] y_jit;

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1BF76F8", Offset = "0x1BF76F8", VA = "0x1BF76F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1BF7770", Offset = "0x1BF7770", VA = "0x1BF7770")]
	private static Material CreateMaterial(string shadername)
	{
		return null;
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1BF7810", Offset = "0x1BF7810", VA = "0x1BF7810")]
	private static void DestroyMaterial(Material mat)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1BF78AC", Offset = "0x1BF78AC", VA = "0x1BF78AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1BF7A1C", Offset = "0x1BF7A1C", VA = "0x1BF7A1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1BF7930", Offset = "0x1BF7930", VA = "0x1BF7930")]
	private void CreateMaterials()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1BF7AC8", Offset = "0x1BF7AC8", VA = "0x1BF7AC8")]
	private void SetCTAA_Parameters()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1BF7B54", Offset = "0x1BF7B54", VA = "0x1BF7B54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1BF7BE4", Offset = "0x1BF7BE4", VA = "0x1BF7BE4")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1BF7BE8", Offset = "0x1BF7BE8", VA = "0x1BF7BE8")]
	private void jitterCam()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1BF7DEC", Offset = "0x1BF7DEC", VA = "0x1BF7DEC")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1BF8858", Offset = "0x1BF8858", VA = "0x1BF8858")]
	public CTAAVR_OCULUS()
	{
	}
}
[Token(Token = "0x20000D2")]
public class CTAAVelocity_Oculus : MonoBehaviour
{
	[Token(Token = "0x4000522")]
	private const RenderTextureFormat velocityFormat = RenderTextureFormat.RGFloat;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera.StereoscopicEye VRCameraEYE;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material velocityMaterial;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4? velocityViewMatrix;

	[NonSerialized]
	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public RenderTexture velocityBuffer;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timeScaleNextFrame;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA9E0C", Offset = "0xAA9E0C")]
	private float <timeScale>k__BackingField;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Camera _camera;

	[Token(Token = "0x17000037")]
	public float timeScale
	{
		[Token(Token = "0x6000405")]
		[Address(RVA = "0x1BFCA68", Offset = "0x1BFCA68", VA = "0x1BFCA68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9E3C", Offset = "0xAB9E3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000406")]
		[Address(RVA = "0x1BFCA70", Offset = "0x1BFCA70", VA = "0x1BFCA70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9E4C", Offset = "0xAB9E4C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1BFCA78", Offset = "0x1BFCA78", VA = "0x1BFCA78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1BFCACC", Offset = "0x1BFCACC", VA = "0x1BFCACC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1BFCAF4", Offset = "0x1BFCAF4", VA = "0x1BFCAF4")]
	private void EnsureMaterial(ref Material material, Shader shader)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x1BFCCCC", Offset = "0x1BFCCCC", VA = "0x1BFCCCC")]
	private void EnsureKeyword(Material material, string name, bool enabled)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x1BFCD48", Offset = "0x1BFCD48", VA = "0x1BFCD48")]
	private void EnsureRenderTarget(ref RenderTexture rt, int width, int height, RenderTextureFormat format, FilterMode filterMode, int depthBits = 0)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x1BFCEE8", Offset = "0x1BFCEE8", VA = "0x1BFCEE8")]
	private void FullScreenQuad()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1BFCFCC", Offset = "0x1BFCFCC", VA = "0x1BFCFCC")]
	private Matrix4x4 GetPerspectiveProjection(float left, float right, float bottom, float top, float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1BFD1E0", Offset = "0x1BFD1E0", VA = "0x1BFD1E0")]
	private Matrix4x4 GetPerspectiveProjection(Camera camera)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1BFD224", Offset = "0x1BFD224", VA = "0x1BFD224")]
	private Matrix4x4 GetPerspectiveProjection(Camera camera, float tsOXp, float tsOYp)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1BFD3AC", Offset = "0x1BFD3AC", VA = "0x1BFD3AC")]
	private Vector4 GetPerspectiveProjectionCornerRay(Camera camera)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1BFD3B8", Offset = "0x1BFD3B8", VA = "0x1BFD3B8")]
	private Vector4 GetPerspectiveProjectionCornerRay(Camera camera, float tsOXp, float tsOYp)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1BFD4F8", Offset = "0x1BFD4F8", VA = "0x1BFD4F8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1BFDD14", Offset = "0x1BFDD14", VA = "0x1BFDD14")]
	public CTAAVelocity_Oculus()
	{
	}
}
[Token(Token = "0x20000D3")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA62BC", Offset = "0xAA62BC")]
public class CTAA_Dynamic_Tag : MonoBehaviour
{
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<CTAA_Dynamic_Tag> activeObjects;

	[NonSerialized]
	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Matrix4x4 localToWorldPrev;

	[NonSerialized]
	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Matrix4x4 localToWorldCurr;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SkinnedMeshRenderer skinnedMesh;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool useSkinnedMesh;

	[Token(Token = "0x4000530")]
	public const int framesNotRenderedThreshold = 60;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int framesNotRendered;

	[NonSerialized]
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool sleeping;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1BFDD1C", Offset = "0x1BFDD1C", VA = "0x1BFDD1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1BFDED4", Offset = "0x1BFDED4", VA = "0x1BFDED4")]
	private void VelocityUpdate()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1BFE0F8", Offset = "0x1BFE0F8", VA = "0x1BFE0F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1BFE11C", Offset = "0x1BFE11C", VA = "0x1BFE11C")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1BFE1C4", Offset = "0x1BFE1C4", VA = "0x1BFE1C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1BFE250", Offset = "0x1BFE250", VA = "0x1BFE250")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1BFE2DC", Offset = "0x1BFE2DC", VA = "0x1BFE2DC")]
	public CTAA_Dynamic_Tag()
	{
	}
}
[Token(Token = "0x20000D4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA62F4", Offset = "0xAA62F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA62F4", Offset = "0xAA62F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA62F4", Offset = "0xAA62F4")]
public class CTAAVR_VIVE : MonoBehaviour
{
	[Token(Token = "0x20000D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA63AC", Offset = "0xAA63AC")]
	private sealed class <fixCam>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CTAAVR_VIVE <>4__this;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera <_camera>5__2;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600042C")]
			[Address(RVA = "0xCB5EEC", Offset = "0xCB5EEC", VA = "0xCB5EEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600042E")]
			[Address(RVA = "0xCB5F34", Offset = "0xCB5F34", VA = "0xCB5F34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xCB5D88", Offset = "0xCB5D88", VA = "0xCB5D88")]
		[DebuggerHidden]
		public <fixCam>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xCB5DB4", Offset = "0xCB5DB4", VA = "0xCB5DB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0xCB5DB8", Offset = "0xCB5DB8", VA = "0xCB5DB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0xCB5EF4", Offset = "0xCB5EF4", VA = "0xCB5EF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool CTAA_Enabled;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9E4C", Offset = "0xAA9E4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9E4C", Offset = "0xAA9E4C")]
	public float TemporalEdgePower;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAA9EA0", Offset = "0xAA9EA0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9EA0", Offset = "0xAA9EA0")]
	public float TemporalJitterScale;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAA9EE4", Offset = "0xAA9EE4")]
	public Camera.StereoscopicEye VRCameraEYE;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TemporalQuality;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float jitterScale;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int forwardMode;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CTAAVR_Velocity_OPENVR _velocity;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material mat_txaa;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material mat_enhance;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture rtAccum0;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture rtAccum1;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RenderTexture txaaOut;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool firstFrame;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool swap;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int frameCounter;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] x_jit;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] y_jit;

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1BFA954", Offset = "0x1BFA954", VA = "0x1BFA954")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x1BFA9A8", Offset = "0x1BFA9A8", VA = "0x1BFA9A8")]
	private static Material CreateMaterial(string shadername)
	{
		return null;
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1BFAA48", Offset = "0x1BFAA48", VA = "0x1BFAA48")]
	private static void DestroyMaterial(Material mat)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1BFAAE4", Offset = "0x1BFAAE4", VA = "0x1BFAAE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1BFAC4C", Offset = "0x1BFAC4C", VA = "0x1BFAC4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1BFAB60", Offset = "0x1BFAB60", VA = "0x1BFAB60")]
	private void CreateMaterials()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1BFACE8", Offset = "0x1BFACE8", VA = "0x1BFACE8")]
	private void SetCTAA_Parameters()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1BFACF4", Offset = "0x1BFACF4", VA = "0x1BFACF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x1BFAD98", Offset = "0x1BFAD98", VA = "0x1BFAD98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9E5C", Offset = "0xAB9E5C")]
	private IEnumerator fixCam()
	{
		return null;
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1BFAE04", Offset = "0x1BFAE04", VA = "0x1BFAE04")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x1BFAE08", Offset = "0x1BFAE08", VA = "0x1BFAE08")]
	private void jitterCam()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1BFB00C", Offset = "0x1BFB00C", VA = "0x1BFB00C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1BFBEF8", Offset = "0x1BFBEF8", VA = "0x1BFBEF8")]
	public CTAAVR_VIVE()
	{
	}
}
[Token(Token = "0x20000D6")]
public class CTAAVR_Velocity_OPENVR : MonoBehaviour
{
	[Token(Token = "0x4000549")]
	private const RenderTextureFormat velocityFormat = RenderTextureFormat.RGFloat;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader velocityShader;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera.StereoscopicEye VRCameraEYE;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material velocityMaterial;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Matrix4x4? velocityViewMatrix;

	[NonSerialized]
	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public RenderTexture velocityBuffer;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timeScaleNextFrame;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA9F08", Offset = "0xAA9F08")]
	private float <timeScale>k__BackingField;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Camera _camera;

	[Token(Token = "0x1700003A")]
	public float timeScale
	{
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x1BFBFD0", Offset = "0x1BFBFD0", VA = "0x1BFBFD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9F0C", Offset = "0xAB9F0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x1BFBFD8", Offset = "0x1BFBFD8", VA = "0x1BFBFD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9F1C", Offset = "0xAB9F1C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1BFBFE0", Offset = "0x1BFBFE0", VA = "0x1BFBFE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1BFC034", Offset = "0x1BFC034", VA = "0x1BFC034")]
	private void Start()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1BFC05C", Offset = "0x1BFC05C", VA = "0x1BFC05C")]
	private void EnsureMaterial(ref Material material, Shader shader)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1BFC234", Offset = "0x1BFC234", VA = "0x1BFC234")]
	private void EnsureKeyword(Material material, string name, bool enabled)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1BFC2B0", Offset = "0x1BFC2B0", VA = "0x1BFC2B0")]
	private void EnsureRenderTarget(ref RenderTexture rt, int width, int height, RenderTextureFormat format, FilterMode filterMode, int depthBits = 0)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1BFC450", Offset = "0x1BFC450", VA = "0x1BFC450")]
	private void FullScreenQuad()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1BFC534", Offset = "0x1BFC534", VA = "0x1BFC534")]
	private Matrix4x4 GetPerspectiveProjection(float left, float right, float bottom, float top, float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1BFC748", Offset = "0x1BFC748", VA = "0x1BFC748")]
	private Matrix4x4 GetPerspectiveProjection(Camera camera)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1BFC78C", Offset = "0x1BFC78C", VA = "0x1BFC78C")]
	private Matrix4x4 GetPerspectiveProjection(Camera camera, float texelOffsetX, float texelOffsetY)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1BFC914", Offset = "0x1BFC914", VA = "0x1BFC914")]
	private Vector4 GetPerspectiveProjectionCornerRay(Camera camera)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1BFC920", Offset = "0x1BFC920", VA = "0x1BFC920")]
	private Vector4 GetPerspectiveProjectionCornerRay(Camera camera, float texelOffsetX, float texelOffsetY)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1BFB700", Offset = "0x1BFB700", VA = "0x1BFB700")]
	public void RenderVel()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1BFCA60", Offset = "0x1BFCA60", VA = "0x1BFCA60")]
	public CTAAVR_Velocity_OPENVR()
	{
	}
}
[Token(Token = "0x20000D7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA63BC", Offset = "0xAA63BC")]
public class DynamicObjectTag : MonoBehaviour
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<DynamicObjectTag> activeObjects;

	[NonSerialized]
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Matrix4x4 localToWorldPrev;

	[NonSerialized]
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Matrix4x4 localToWorldCurr;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SkinnedMeshRenderer skinnedMesh;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool useSkinnedMesh;

	[Token(Token = "0x4000558")]
	public const int framesNotRenderedThreshold = 60;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int framesNotRendered;

	[NonSerialized]
	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool sleeping;

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x1C2F2C8", Offset = "0x1C2F2C8", VA = "0x1C2F2C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1C2F480", Offset = "0x1C2F480", VA = "0x1C2F480")]
	private void VelocityUpdate()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1C2F6A4", Offset = "0x1C2F6A4", VA = "0x1C2F6A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1C2F6C8", Offset = "0x1C2F6C8", VA = "0x1C2F6C8")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1C2F770", Offset = "0x1C2F770", VA = "0x1C2F770")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1C2F7FC", Offset = "0x1C2F7FC", VA = "0x1C2F7FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x1C2F888", Offset = "0x1C2F888", VA = "0x1C2F888")]
	public DynamicObjectTag()
	{
	}
}
[Token(Token = "0x20000D8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA63F4", Offset = "0xAA63F4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA63F4", Offset = "0xAA63F4")]
public class CTAA_PC : MonoBehaviour
{
	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAA9F48", Offset = "0xAA9F48")]
	public bool CTAA_Enabled;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9F5C", Offset = "0xAA9F5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAA9F5C", Offset = "0xAA9F5C")]
	public int TemporalStability;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9FB0", Offset = "0xAA9FB0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAA9FB0", Offset = "0xAA9FB0")]
	public float HdrResponse;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAA9FF8", Offset = "0xAA9FF8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAA9FF8", Offset = "0xAA9FF8")]
	public float Sharpness;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAA03C", Offset = "0xAAA03C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAAA03C", Offset = "0xAAA03C")]
	public float AdaptiveEnhance;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAAA084", Offset = "0xAAA084")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAA084", Offset = "0xAAA084")]
	public float TemporalJitterScale;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAA0C8", Offset = "0xAAA0C8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAAA0C8", Offset = "0xAAA0C8")]
	public float MicroShimmerReduction;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAAA110", Offset = "0xAAA110")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAA110", Offset = "0xAAA110")]
	public float StaticStabilityPower;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool PreEnhanceEnabled;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float preEnhanceStrength;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float preEnhanceClamp;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float AdaptiveResolve;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float jitterScale;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material ctaaMat;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material mat_enhance;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RenderTexture rtAccum0;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RenderTexture rtAccum1;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderTexture txaaOut;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderTexture afterPreEnhace;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool firstFrame;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool swap;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int frameCounter;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float[] x_jit;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] y_jit;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1BFE378", Offset = "0x1BFE378", VA = "0x1BFE378")]
	private void SetCTAA_Parameters()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1BFE400", Offset = "0x1BFE400", VA = "0x1BFE400")]
	private static Material CreateMaterial(string shadername)
	{
		return null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x1BFE4A0", Offset = "0x1BFE4A0", VA = "0x1BFE4A0")]
	private static void DestroyMaterial(Material mat)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x1BFE53C", Offset = "0x1BFE53C", VA = "0x1BFE53C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1BFE638", Offset = "0x1BFE638", VA = "0x1BFE638")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1BFE7B0", Offset = "0x1BFE7B0", VA = "0x1BFE7B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1BFE860", Offset = "0x1BFE860", VA = "0x1BFE860")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1BFE870", Offset = "0x1BFE870", VA = "0x1BFE870")]
	private void jitterCam()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x1BFEB0C", Offset = "0x1BFEB0C", VA = "0x1BFEB0C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x1BFF4D0", Offset = "0x1BFF4D0", VA = "0x1BFF4D0")]
	public CTAA_PC()
	{
	}
}
[Token(Token = "0x20000D9")]
public class LabelFlip : MonoBehaviour
{
	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform upSenser;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 origRot;

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xBD202C", Offset = "0xBD202C", VA = "0xBD202C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xBD2088", Offset = "0xBD2088", VA = "0xBD2088")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xBD2130", Offset = "0xBD2130", VA = "0xBD2130")]
	public LabelFlip()
	{
	}
}
[Token(Token = "0x20000DA")]
public class LabelFollowController : MonoBehaviour
{
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform controllerToFollow;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xBD2138", Offset = "0xBD2138", VA = "0xBD2138")]
	private void Start()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xBD213C", Offset = "0xBD213C", VA = "0xBD213C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xBD2140", Offset = "0xBD2140", VA = "0xBD2140")]
	public LabelFollowController()
	{
	}
}
[Token(Token = "0x20000DB")]
public class LandarDoor : MonoBehaviour
{
	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animation anim;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool played;

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xBD2148", Offset = "0xBD2148", VA = "0xBD2148")]
	private void Start()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xBD219C", Offset = "0xBD219C", VA = "0xBD219C")]
	public void OpenDoor()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xBD2208", Offset = "0xBD2208", VA = "0xBD2208")]
	public LandarDoor()
	{
	}
}
[Token(Token = "0x20000DC")]
public class LevelAudioPlayer : MonoBehaviour
{
	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uAudioPlayer my_uAudioPlayer;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xBD4FA4", Offset = "0xBD4FA4", VA = "0xBD4FA4")]
	public void playAudio(string s)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xBD5000", Offset = "0xBD5000", VA = "0xBD5000")]
	public LevelAudioPlayer()
	{
	}
}
[Token(Token = "0x20000DD")]
public class LevelBoundary : MonoBehaviour
{
	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool attachToTransform;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isGeometryBoundary;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer mesh;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Forcefield forcefield;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject explosionPrefab;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject explosionPrefab2;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PartsWatcher partsWatcher;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PartsSpawner partsSpawner;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool shouldScan;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xBD5008", Offset = "0xBD5008", VA = "0xBD5008")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xBD52AC", Offset = "0xBD52AC", VA = "0xBD52AC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xBD52E8", Offset = "0xBD52E8", VA = "0xBD52E8")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xBD5144", Offset = "0xBD5144", VA = "0xBD5144")]
	public void setQuality(int qualitylevel)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xBD5938", Offset = "0xBD5938", VA = "0xBD5938")]
	public LevelBoundary()
	{
	}
}
[Token(Token = "0x20000DE")]
public class LevelDependentAudio : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000DF")]
	public class LevelAudioTuple
	{
		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string levelname;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip levelAudio;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int playRepetitions;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int timesPlayed;

		[Token(Token = "0x6000462")]
		[Address(RVA = "0xCC2C98", Offset = "0xCC2C98", VA = "0xCC2C98")]
		public LevelAudioTuple()
		{
		}
	}

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NewGameManager gameManager;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelAudioTuple[] levelaudios;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xBD5940", Offset = "0xBD5940", VA = "0xBD5940")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xBD5A6C", Offset = "0xBD5A6C", VA = "0xBD5A6C")]
	public LevelDependentAudio()
	{
	}
}
[Token(Token = "0x20000E0")]
public class LevelEditor : MonoBehaviour
{
	[Token(Token = "0x6000463")]
	[Address(RVA = "0xBD5A74", Offset = "0xBD5A74", VA = "0xBD5A74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xBD5A78", Offset = "0xBD5A78", VA = "0xBD5A78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xBD5A7C", Offset = "0xBD5A7C", VA = "0xBD5A7C")]
	public LevelEditor()
	{
	}
}
[Token(Token = "0x20000E1")]
public class LevelLockStatus : MonoBehaviour
{
	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int levelID;

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xBD5A84", Offset = "0xBD5A84", VA = "0xBD5A84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xBD5A88", Offset = "0xBD5A88", VA = "0xBD5A88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xBD5B6C", Offset = "0xBD5B6C", VA = "0xBD5B6C")]
	public LevelLockStatus()
	{
	}
}
[Token(Token = "0x20000E2")]
public class LevelManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000E3")]
	public class LevelProperties
	{
		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int worlditemcount;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int gameVersion;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int type;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string filename;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int version;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string desc;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string author;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string imagepath;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int targetTime;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int levelBonus;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public byte[] image;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string imagehash;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string creatorplatform;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int environment;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public HandItemProperties[] handItemProperties;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public HandItemProperties[] handItemPropertiesMedium;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HandItemProperties[] handItemPropertiesHard;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int dummy;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SavedItemProperties[] worldItems;

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xCC6C90", Offset = "0xCC6C90", VA = "0xCC6C90")]
		public LevelProperties()
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xCC7240", Offset = "0xCC7240", VA = "0xCC7240")]
		public LevelProperties(int i)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E4")]
	public class SavedItemProperties
	{
		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int worldID;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int type;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 worldPosition;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 worldEulerRotation;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int defaultColor;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool[] availableBalls;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int target;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int leftRatio;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int rightRatio;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int modifierEffect;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int roiSquared;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool locked;

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x1929D30", Offset = "0x1929D30", VA = "0x1929D30")]
		public SavedItemProperties()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E5")]
	public class HandItemProperties
	{
		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int maxNumber;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool[] availablecolors;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool[] availableBalls;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool[] leftRatios;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool[] rightRatios;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool[] modifierEffects;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool[] rois;

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xCC6DC8", Offset = "0xCC6DC8", VA = "0xCC6DC8")]
		public HandItemProperties()
		{
		}
	}

	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6478", Offset = "0xAA6478")]
	private sealed class <clearSaveProgressText>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004D1")]
			[Address(RVA = "0xCC3000", Offset = "0xCC3000", VA = "0xCC3000", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0xCC3048", Offset = "0xCC3048", VA = "0xCC3048", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xCC2F04", Offset = "0xCC2F04", VA = "0xCC2F04")]
		[DebuggerHidden]
		public <clearSaveProgressText>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xCC2F30", Offset = "0xCC2F30", VA = "0xCC2F30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xCC2F34", Offset = "0xCC2F34", VA = "0xCC2F34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xCC3008", Offset = "0xCC3008", VA = "0xCC3008", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6488", Offset = "0xAA6488")]
	private sealed class <loadStageLevel_delayed>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string filename;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004D7")]
			[Address(RVA = "0xCC70C8", Offset = "0xCC70C8", VA = "0xCC70C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004D9")]
			[Address(RVA = "0xCC7110", Offset = "0xCC7110", VA = "0xCC7110", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xCC6F7C", Offset = "0xCC6F7C", VA = "0xCC6F7C")]
		[DebuggerHidden]
		public <loadStageLevel_delayed>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xCC6FA8", Offset = "0xCC6FA8", VA = "0xCC6FA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xCC6FAC", Offset = "0xCC6FAC", VA = "0xCC6FAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xCC70D0", Offset = "0xCC70D0", VA = "0xCC70D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6498", Offset = "0xAA6498")]
	private sealed class <PlayClipCoroutine>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string translatedfile;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelManager <>4__this;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string file;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <request>5__2;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WWW <request2>5__3;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004DD")]
			[Address(RVA = "0xCC2EB4", Offset = "0xCC2EB4", VA = "0xCC2EB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004DF")]
			[Address(RVA = "0xCC2EFC", Offset = "0xCC2EFC", VA = "0xCC2EFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xCC2CA8", Offset = "0xCC2CA8", VA = "0xCC2CA8")]
		[DebuggerHidden]
		public <PlayClipCoroutine>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xCC2CD4", Offset = "0xCC2CD4", VA = "0xCC2CD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xCC2CD8", Offset = "0xCC2CD8", VA = "0xCC2CD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xCC2EBC", Offset = "0xCC2EBC", VA = "0xCC2EBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA64A8", Offset = "0xAA64A8")]
	private sealed class <loadLevelItems_delayed>d__141 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E3")]
			[Address(RVA = "0xCC6F2C", Offset = "0xCC6F2C", VA = "0xCC6F2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004E5")]
			[Address(RVA = "0xCC6F74", Offset = "0xCC6F74", VA = "0xCC6F74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xCC4290", Offset = "0xCC4290", VA = "0xCC4290")]
		[DebuggerHidden]
		public <loadLevelItems_delayed>d__141(int <>1__state)
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xCC42BC", Offset = "0xCC42BC", VA = "0xCC42BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xCC42C0", Offset = "0xCC42C0", VA = "0xCC42C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xCC6F34", Offset = "0xCC6F34", VA = "0xCC6F34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA64B8", Offset = "0xAA64B8")]
	private sealed class <hideallButtons>d__142 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0xCC4240", Offset = "0xCC4240", VA = "0xCC4240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0xCC4288", Offset = "0xCC4288", VA = "0xCC4288", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xCC4148", Offset = "0xCC4148", VA = "0xCC4148")]
		[DebuggerHidden]
		public <hideallButtons>d__142(int <>1__state)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xCC4174", Offset = "0xCC4174", VA = "0xCC4174", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xCC4178", Offset = "0xCC4178", VA = "0xCC4178", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xCC4248", Offset = "0xCC4248", VA = "0xCC4248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA64C8", Offset = "0xAA64C8")]
	private sealed class <getVersion>d__198 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string filename;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelManager <>4__this;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WWW GetTextWWW;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <filesaved>5__2;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004EF")]
			[Address(RVA = "0xCC40F8", Offset = "0xCC40F8", VA = "0xCC40F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004F1")]
			[Address(RVA = "0xCC4140", Offset = "0xCC4140", VA = "0xCC4140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xCC3B70", Offset = "0xCC3B70", VA = "0xCC3B70")]
		[DebuggerHidden]
		public <getVersion>d__198(int <>1__state)
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xCC3B9C", Offset = "0xCC3B9C", VA = "0xCC3B9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xCC3BA0", Offset = "0xCC3BA0", VA = "0xCC3BA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xCC4100", Offset = "0xCC4100", VA = "0xCC4100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA64D8", Offset = "0xAA64D8")]
	private sealed class <updatePageLabelsAndButtons_delayed>d__228 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004F5")]
			[Address(RVA = "0xCC71F0", Offset = "0xCC71F0", VA = "0xCC71F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004F7")]
			[Address(RVA = "0xCC7238", Offset = "0xCC7238", VA = "0xCC7238", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xCC7118", Offset = "0xCC7118", VA = "0xCC7118")]
		[DebuggerHidden]
		public <updatePageLabelsAndButtons_delayed>d__228(int <>1__state)
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xCC7144", Offset = "0xCC7144", VA = "0xCC7144", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xCC7148", Offset = "0xCC7148", VA = "0xCC7148", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xCC71F8", Offset = "0xCC71F8", VA = "0xCC71F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA64E8", Offset = "0xAA64E8")]
	private sealed class <getUCGLevels>d__243 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <GetTextWWW>5__2;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004FB")]
			[Address(RVA = "0xCC3B20", Offset = "0xCC3B20", VA = "0xCC3B20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004FD")]
			[Address(RVA = "0xCC3B68", Offset = "0xCC3B68", VA = "0xCC3B68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xCC32FC", Offset = "0xCC32FC", VA = "0xCC32FC")]
		[DebuggerHidden]
		public <getUCGLevels>d__243(int <>1__state)
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xCC3328", Offset = "0xCC3328", VA = "0xCC3328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xCC332C", Offset = "0xCC332C", VA = "0xCC332C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xCC3B28", Offset = "0xCC3B28", VA = "0xCC3B28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA64F8", Offset = "0xAA64F8")]
	private sealed class <getSpriteFromURL>d__245 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image target;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelManager <>4__this;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string url;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DownloadHandlerTexture <downloadHandler>5__2;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <uwr>5__3;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000501")]
			[Address(RVA = "0xCC32AC", Offset = "0xCC32AC", VA = "0xCC32AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000503")]
			[Address(RVA = "0xCC32F4", Offset = "0xCC32F4", VA = "0xCC32F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xCC3050", Offset = "0xCC3050", VA = "0xCC3050")]
		[DebuggerHidden]
		public <getSpriteFromURL>d__245(int <>1__state)
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xCC307C", Offset = "0xCC307C", VA = "0xCC307C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xCC3080", Offset = "0xCC3080", VA = "0xCC3080", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xCC32B4", Offset = "0xCC32B4", VA = "0xCC32B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 centerOfAllObjects;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool debug;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WorkshopHandler workshopHandler;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VF_UIELement board;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VF_UIELement tube;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VF_UIELement modifier;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VF_UIELement sensor;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VF_UIELement pump;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VF_UIELement scale;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VF_UIELement ratioscale;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VF_UIELement gate;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VF_UIELement sensormanager;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VF_UIELement bouncer;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VF_UIELement gravityAdjuster;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int currentStage;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int currentLevel;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public VF_UI loadLevelButtons;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public VF_UI loadEditorLevelButtons;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public VF_UI saveEditorLevelButtons;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text editor_roi;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LevelProperties levelProperties;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LevelProperties levelInfo;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RoundIndicator overview_board;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public RoundIndicator overview_tube;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public RoundIndicator overview_modifier;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RoundIndicator overview_sensor;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public RoundIndicator overview_pump;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public RoundIndicator overview_scale;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public RoundIndicator overview_ratio;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public RoundIndicator overview_gate;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public RoundIndicator overview_sensormanager;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public RoundIndicator overview_bouncer;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public RoundIndicator overview_gravityAdjuster;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public VF_UIELement sensor_red;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public VF_UIELement sensor_green;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public VF_UIELement sensor_blue;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public VF_UIELement sensor_white;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public VF_UIELement modifier_invert;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public VF_UIELement modifier_increase;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public VF_UIELement modifier_turnoff;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public VF_UIELement pump_red;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public VF_UIELement pump_green;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public VF_UIELement pump_blue;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public VF_UIELement pump_yellow;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public VF_UIELement pump_magenta;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public VF_UIELement pump_cyan;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public VF_UIELement pump_white;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public VF_UIELement gate_red;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public VF_UIELement gate_green;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public VF_UIELement gate_blue;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public VF_UIELement gate_yellow;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public VF_UIELement gate_magenta;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public VF_UIELement gate_cyan;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public VF_UIELement gate_white;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public VF_UIELement scale_red;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public VF_UIELement scale_green;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public VF_UIELement scale_blue;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public VF_UIELement scale_white;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public VF_UIELement ratioscale_red;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public VF_UIELement ratioscale_green;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public VF_UIELement ratioscale_blue;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public VF_UIELement ratioscale_white;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public VF_UIELement ratioscale_l1;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public VF_UIELement ratioscale_l2;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public VF_UIELement ratioscale_l3;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public VF_UIELement ratioscale_r1;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public VF_UIELement ratioscale_r2;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public VF_UIELement ratioscale_r3;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public VF_UIELement ratioscale_r4;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public VF_UIELement ratioscale_r5;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public VF_UIELement ratioscale_r6;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public VF_UIELement roi_1;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public VF_UIELement roi_3;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public VF_UIELement roi_6;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public VF_UIELement roi_9;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public VF_UIELement roi_12;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public VF_UIELement roi_15;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public VF_UIELement roi_20;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public HandItemProperties[] currentHandProperties;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public int difficultyMode;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public VF_UIELement publishWorkshopItemButton;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public VF_UIELement deleteWorkshopItemButton;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Text savelevelProgressPopupText;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private NewGameManager gameManager;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public PartsSpawner partsSpawner;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public AudioSource levelAudioPlayer;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Transform cameraHolder;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private bool isLevelNameInput;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C9")]
	private bool isDescInput;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CA")]
	private bool isTargetTimeInput;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public VR_UI_ElementHolder keyboard;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Renderer levelImageDisplay;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private string targettimetext;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public TextMeshPro levelnameText;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public TextMeshPro leveldescText;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public TextMeshPro levelTimeText;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public bool hasPassedEasyMode;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x301")]
	public bool hasPassedMediumMode;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x302")]
	public bool hasPassedHardMode;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x303")]
	public bool hasCreatedOrLoadedLevel;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	public bool hasSpawnedItems;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x305")]
	public bool hasSpawnedTargetBin;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public RoundIndicator createIndicator;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public RoundIndicator partsIndicator;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public RoundIndicator handIndicator;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public RoundIndicator infoIndicator;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public RoundIndicator saveIndicator;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public VF_UIELement createButton;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public VF_UIELement partsButton;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public VF_UIELement handButton;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public VF_UIELement infoButton;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public VF_UIELement saveButton;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public RoundIndicator levelcreationIndicator;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public RoundIndicator placingpartsIndicator;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public RoundIndicator handsettingsIndicator;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public RoundIndicator levelinfoIndicator;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public RoundIndicator savelevelIndicator;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public bool levelcreationChecked;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x381")]
	public bool placedBinChecked;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x382")]
	public bool placedGeneratorChecked;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x383")]
	public bool placedTubespawnerChecked;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
	public bool placedManagerChecked;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x385")]
	public bool handmediumVisited;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x386")]
	public bool handhardVisited;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x387")]
	public bool savelevelChecked;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public TextMeshPro currentVersion;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public TextMeshPro workshopVersion;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public GameObject savelevelbutton;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public Text workshoprefreshtext;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public Dictionary<string, Sprite> campaignSprites;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public Dictionary<string, Sprite> customSprites;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public string[] allLevels;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public int currentPage;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public VF_UIELement previousPageButton;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public VF_UIELement nextPageButton;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public VF_UIELement pageTextCard;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public TextMeshPro pageText;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public GameObject levelPageButtons;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public int currentPage_editor;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public VF_UIELement previousPageButton_editor;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public VF_UIELement nextPageButton_editor;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public VF_UIELement pageTextCard_editor;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public TextMeshPro pageText_editor;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public GameObject levelPageButtons_editor;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public int currentLevelType;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public VF_UIELement sortOrderButton;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public bool sortbydate;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public TextMeshPro sortordertext;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public VF_UIELement onlineButton;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public Sprite loadingSprite;

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xBD5B74", Offset = "0xBD5B74", VA = "0xBD5B74")]
	public void setDifficultyMode(int i)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xBD5B7C", Offset = "0xBD5B7C", VA = "0xBD5B7C")]
	public void updateCurrentHandProps(int i)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xBD6E54", Offset = "0xBD6E54", VA = "0xBD6E54")]
	public void publishItem()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xBD6EF0", Offset = "0xBD6EF0", VA = "0xBD6EF0")]
	public void publishItemCustom()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xBD7010", Offset = "0xBD7010", VA = "0xBD7010")]
	public void unpublishItem()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xBD70AC", Offset = "0xBD70AC", VA = "0xBD70AC")]
	public void unpublishItemCustom()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xBD719C", Offset = "0xBD719C", VA = "0xBD719C")]
	public void saveLevelItems()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xBD8454", Offset = "0xBD8454", VA = "0xBD8454")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9F2C", Offset = "0xAB9F2C")]
	private IEnumerator clearSaveProgressText()
	{
		return null;
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xBD84C0", Offset = "0xBD84C0", VA = "0xBD84C0")]
	public void saveLevel()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xBDCA10", Offset = "0xBDCA10", VA = "0xBDCA10")]
	public static string md5(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xBD5D94", Offset = "0xBD5D94", VA = "0xBD5D94")]
	public void updateDisplays()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xBDD390", Offset = "0xBDD390", VA = "0xBDD390")]
	public void toggle_leveleditor_roi_availability_1(int i)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xBDD3EC", Offset = "0xBDD3EC", VA = "0xBDD3EC")]
	public void toggle_leveleditor_roi_availability_3(int i)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xBDD44C", Offset = "0xBDD44C", VA = "0xBDD44C")]
	public void toggle_leveleditor_roi_availability_6(int i)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xBDD4AC", Offset = "0xBDD4AC", VA = "0xBDD4AC")]
	public void toggle_leveleditor_roi_availability_9(int i)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xBDD50C", Offset = "0xBDD50C", VA = "0xBDD50C")]
	public void toggle_leveleditor_roi_availability_12(int i)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xBDD56C", Offset = "0xBDD56C", VA = "0xBDD56C")]
	public void toggle_leveleditor_roi_availability_15(int i)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xBDD5CC", Offset = "0xBDD5CC", VA = "0xBDD5CC")]
	public void toggle_leveleditor_roi_availability_20(int i)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xBDD62C", Offset = "0xBDD62C", VA = "0xBDD62C")]
	public void increase_leveleditor_handitem_number(int i)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xBDD764", Offset = "0xBDD764", VA = "0xBDD764")]
	public void decrease_leveleditor_handitem_number(int i)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xBDD89C", Offset = "0xBDD89C", VA = "0xBDD89C")]
	public void toggle_leveleditor_modifier_flip(int i)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xBDD8F8", Offset = "0xBDD8F8", VA = "0xBDD8F8")]
	public void toggle_leveleditor_modifier_heavy(int i)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xBDD958", Offset = "0xBDD958", VA = "0xBDD958")]
	public void toggle_leveleditor_modifier_float(int i)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xBDD9B8", Offset = "0xBDD9B8", VA = "0xBDD9B8")]
	public void toggle_leveleditor_ratio_leftOne(int i)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xBDDA14", Offset = "0xBDDA14", VA = "0xBDDA14")]
	public void toggle_leveleditor_ratio_leftTwo(int i)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xBDDA74", Offset = "0xBDDA74", VA = "0xBDDA74")]
	public void toggle_leveleditor_ratio_leftThree(int i)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xBDDAD4", Offset = "0xBDDAD4", VA = "0xBDDAD4")]
	public void toggle_leveleditor_ratio_rightOne(int i)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xBDDB30", Offset = "0xBDDB30", VA = "0xBDDB30")]
	public void toggle_leveleditor_ratio_rightTwo(int i)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xBDDB90", Offset = "0xBDDB90", VA = "0xBDDB90")]
	public void toggle_leveleditor_ratio_rightThree(int i)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xBDDBF0", Offset = "0xBDDBF0", VA = "0xBDDBF0")]
	public void toggle_leveleditor_ratio_rightFour(int i)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xBDDC50", Offset = "0xBDDC50", VA = "0xBDDC50")]
	public void toggle_leveleditor_ratio_rightFive(int i)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xBDDCB0", Offset = "0xBDDCB0", VA = "0xBDDCB0")]
	public void toggle_leveleditor_ratio_rightSix(int i)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xBDDD10", Offset = "0xBDDD10", VA = "0xBDDD10")]
	public void toggle_leveleditor_handitem_ball_sphere(int i)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xBDDD6C", Offset = "0xBDDD6C", VA = "0xBDDD6C")]
	public void toggle_leveleditor_handitem_ball_dodecahedron(int i)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xBDDDCC", Offset = "0xBDDDCC", VA = "0xBDDDCC")]
	public void toggle_leveleditor_handitem_ball_octahedron(int i)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xBDDE2C", Offset = "0xBDDE2C", VA = "0xBDDE2C")]
	public void leveleditor_handitem_color_red(int i)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xBDDE88", Offset = "0xBDDE88", VA = "0xBDDE88")]
	public void leveleditor_handitem_color_green(int i)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xBDDEE8", Offset = "0xBDDEE8", VA = "0xBDDEE8")]
	public void leveleditor_handitem_color_blue(int i)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xBDDF48", Offset = "0xBDDF48", VA = "0xBDDF48")]
	public void leveleditor_handitem_color_magenta(int i)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xBDDFA8", Offset = "0xBDDFA8", VA = "0xBDDFA8")]
	public void leveleditor_handitem_color_yellow(int i)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xBDE008", Offset = "0xBDE008", VA = "0xBDE008")]
	public void leveleditor_handitem_color_cyan(int i)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xBDE068", Offset = "0xBDE068", VA = "0xBDE068")]
	public void leveleditor_handitem_color_white(int i)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xBDE0C8", Offset = "0xBDE0C8", VA = "0xBDE0C8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xBDE4F4", Offset = "0xBDE4F4", VA = "0xBDE4F4")]
	public void resetLevelEditor()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xBDED1C", Offset = "0xBDED1C", VA = "0xBDED1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9F8C", Offset = "0xAB9F8C")]
	private IEnumerator loadStageLevel_delayed(string filename, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xBDEDA8", Offset = "0xBDEDA8", VA = "0xBDEDA8")]
	public void loadStageLevelNow(string filename, bool resetEnvironment = true)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xBE2450", Offset = "0xBE2450", VA = "0xBE2450")]
	public void loadStageLevel(string filename, float delay = 0.25f)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xBE247C", Offset = "0xBE247C", VA = "0xBE247C")]
	public void PlayEndAudio(string filename)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xBDF764", Offset = "0xBDF764", VA = "0xBDF764")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9FEC", Offset = "0xAB9FEC")]
	private IEnumerator PlayClipCoroutine(string file, string translatedfile)
	{
		return null;
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xBE2594", Offset = "0xBE2594", VA = "0xBE2594")]
	public void loadEditorLevel(string s)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xBE2D0C", Offset = "0xBE2D0C", VA = "0xBE2D0C")]
	public bool doesProgressExistForLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xBE2F60", Offset = "0xBE2F60", VA = "0xBE2F60")]
	public void loadLevelItems()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xBE2F8C", Offset = "0xBE2F8C", VA = "0xBE2F8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA04C", Offset = "0xABA04C")]
	public IEnumerator loadLevelItems_delayed()
	{
		return null;
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xBE2FF8", Offset = "0xBE2FF8", VA = "0xBE2FF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA0AC", Offset = "0xABA0AC")]
	private IEnumerator hideallButtons()
	{
		return null;
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xBDF7E4", Offset = "0xBDF7E4", VA = "0xBDF7E4")]
	public void rebuildFromJson(bool editmode)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xBE3064", Offset = "0xBE3064", VA = "0xBE3064")]
	public void ui_moveUpDown(bool up)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xBE3248", Offset = "0xBE3248", VA = "0xBE3248")]
	public void ui_createEmptyLevel(int env)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xBE32C0", Offset = "0xBE32C0", VA = "0xBE32C0")]
	public void setName()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xBE32EC", Offset = "0xBE32EC", VA = "0xBE32EC")]
	public void setDesc()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xBE3318", Offset = "0xBE3318", VA = "0xBE3318")]
	public void setTime()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xBE3344", Offset = "0xBE3344", VA = "0xBE3344")]
	public static Texture2D LoadPNG(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xBE33E0", Offset = "0xBE33E0", VA = "0xBE33E0")]
	public void InputLetter(string s)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xBE363C", Offset = "0xBE363C", VA = "0xBE363C")]
	public void DeleteLetter()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xBDD23C", Offset = "0xBDD23C", VA = "0xBDD23C")]
	private void updateLevelInfoTexts()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xBE3708", Offset = "0xBE3708", VA = "0xBE3708")]
	public void aHandItem(int i)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xBDCC98", Offset = "0xBDCC98", VA = "0xBDCC98")]
	public void UpdateVersionDisplay()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xBE3720", Offset = "0xBE3720", VA = "0xBE3720")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA10C", Offset = "0xABA10C")]
	private IEnumerator getVersion(string filename, WWW GetTextWWW)
	{
		return null;
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xBE37A0", Offset = "0xBE37A0", VA = "0xBE37A0")]
	public bool checkForAllowedName(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xBDCABC", Offset = "0xBDCABC", VA = "0xBDCABC")]
	public void checkLevelEditorProgress()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xBDE2A4", Offset = "0xBDE2A4", VA = "0xBDE2A4")]
	public void getAllCampaignLevels()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xBDD028", Offset = "0xBDD028", VA = "0xBDD028")]
	public void getAllCustomLevels()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xBE42C8", Offset = "0xBE42C8", VA = "0xBE42C8")]
	public Sprite getSpriteFromLevelFile(string filename)
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xBE44C8", Offset = "0xBE44C8", VA = "0xBE44C8")]
	public Sprite getSpriteFromImageFile(string filename)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xBE2C5C", Offset = "0xBE2C5C", VA = "0xBE2C5C")]
	public void savedLevel(byte[] bytes)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xBE4650", Offset = "0xBE4650", VA = "0xBE4650")]
	public void loadLevel(string stringPayload)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xBE4680", Offset = "0xBE4680", VA = "0xBE4680")]
	public void getLevelInfo(string stringPayload)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xBE4988", Offset = "0xBE4988", VA = "0xBE4988")]
	public void getLevelInfo(string stringPayload, string stringPayload2)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xBDA424", Offset = "0xBDA424", VA = "0xBDA424")]
	public string[] getFolderFiles(string s)
	{
		return null;
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xBE4A60", Offset = "0xBE4A60", VA = "0xBE4A60")]
	public void showPreviousPage()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xBE4A80", Offset = "0xBE4A80", VA = "0xBE4A80")]
	public void showNextPage()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xBE4ABC", Offset = "0xBE4ABC", VA = "0xBE4ABC")]
	public void updatePageLabelsAndButtons_delayedCall()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xBE4AEC", Offset = "0xBE4AEC", VA = "0xBE4AEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA16C", Offset = "0xABA16C")]
	private IEnumerator updatePageLabelsAndButtons_delayed()
	{
		return null;
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xBE4B58", Offset = "0xBE4B58", VA = "0xBE4B58")]
	public void updatePageLabelsAndButtons()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xBE4A78", Offset = "0xBE4A78", VA = "0xBE4A78")]
	public void refreshLevelList()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xBE6FA0", Offset = "0xBE6FA0", VA = "0xBE6FA0")]
	public void showPreviousPage_editor()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xBE70E8", Offset = "0xBE70E8", VA = "0xBE70E8")]
	public void showNextPage_editor()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xBE714C", Offset = "0xBE714C", VA = "0xBE714C")]
	public void updatePageLabelsAndButtons_editor()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xBE70C4", Offset = "0xBE70C4", VA = "0xBE70C4")]
	public void refreshLevelList_editor()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xBE4E88", Offset = "0xBE4E88", VA = "0xBE4E88")]
	public void getStageButtonContent(int v)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xBE7AB4", Offset = "0xBE7AB4", VA = "0xBE7AB4")]
	public void toggleSortOrder()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xBE7B48", Offset = "0xBE7B48", VA = "0xBE7B48")]
	public void ShowOnlineLevels()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xBE7A48", Offset = "0xBE7A48", VA = "0xBE7A48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA1CC", Offset = "0xABA1CC")]
	private IEnumerator getUCGLevels()
	{
		return null;
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xBE7BC8", Offset = "0xBE7BC8", VA = "0xBE7BC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA22C", Offset = "0xABA22C")]
	private IEnumerator getSpriteFromURL(string url, Image target)
	{
		return null;
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xBE7C48", Offset = "0xBE7C48", VA = "0xBE7C48")]
	public void downloadFile(string filename)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xBE7F98", Offset = "0xBE7F98", VA = "0xBE7F98")]
	public void downloadFile2(string filename)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xBE72D0", Offset = "0xBE72D0", VA = "0xBE72D0")]
	public void loadLevelEditorButtons()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xBE8228", Offset = "0xBE8228", VA = "0xBE8228")]
	public LevelManager()
	{
	}
}
[Token(Token = "0x20000EF")]
public class LevelPreviewCamera : MonoBehaviour
{
	[Token(Token = "0x20000F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6508", Offset = "0xAA6508")]
	private sealed class <TakeScreenShot>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelPreviewCamera <>4__this;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050E")]
			[Address(RVA = "0x192A2C4", Offset = "0x192A2C4", VA = "0x192A2C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000510")]
			[Address(RVA = "0x192A30C", Offset = "0x192A30C", VA = "0x192A30C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x1929DF8", Offset = "0x1929DF8", VA = "0x1929DF8")]
		[DebuggerHidden]
		public <TakeScreenShot>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x1929E24", Offset = "0x1929E24", VA = "0x1929E24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x1929E28", Offset = "0x1929E28", VA = "0x1929E28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x192A2CC", Offset = "0x192A2CC", VA = "0x192A2CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture overviewTexture;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera OVcamera;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private byte[] bytes;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VR_UI_ElementHolder actionButtons;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VF_UIELement shutterbutton;

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x24DD850", Offset = "0x24DD850", VA = "0x24DD850")]
	private void Start()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x24DD8E0", Offset = "0x24DD8E0", VA = "0x24DD8E0")]
	public void Shutter()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x24DD978", Offset = "0x24DD978", VA = "0x24DD978")]
	public void restartCamera()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x24DD90C", Offset = "0x24DD90C", VA = "0x24DD90C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA55C", Offset = "0xABA55C")]
	public IEnumerator TakeScreenShot()
	{
		return null;
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x24DD9C0", Offset = "0x24DD9C0", VA = "0x24DD9C0")]
	public void saveFile()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x24DD89C", Offset = "0x24DD89C", VA = "0x24DD89C")]
	public void retakePicture()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x24DDBA0", Offset = "0x24DDBA0", VA = "0x24DDBA0")]
	public LevelPreviewCamera()
	{
	}
}
[Token(Token = "0x20000F1")]
public class LevelProgress : MonoBehaviour
{
	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VF_UIELement ui;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RoundIndicator indicator;

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x24DDBA8", Offset = "0x24DDBA8", VA = "0x24DDBA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x24DDC00", Offset = "0x24DDC00", VA = "0x24DDC00")]
	public void setProgress()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x24DE950", Offset = "0x24DE950", VA = "0x24DE950")]
	public LevelProgress()
	{
	}
}
[Token(Token = "0x20000F2")]
public class LevelRestart : MonoBehaviour
{
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6518", Offset = "0xAA6518")]
	private sealed class <ExecuteAfterTime>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600051C")]
			[Address(RVA = "0x192A400", Offset = "0x192A400", VA = "0x192A400", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600051E")]
			[Address(RVA = "0x192A448", Offset = "0x192A448", VA = "0x192A448", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x192A314", Offset = "0x192A314", VA = "0x192A314")]
		[DebuggerHidden]
		public <ExecuteAfterTime>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x192A340", Offset = "0x192A340", VA = "0x192A340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x192A344", Offset = "0x192A344", VA = "0x192A344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x192A408", Offset = "0x192A408", VA = "0x192A408", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FadeSphere[] fadespheres;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool fading;

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x24DE958", Offset = "0x24DE958", VA = "0x24DE958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x24DE95C", Offset = "0x24DE95C", VA = "0x24DE95C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA60C", Offset = "0xABA60C")]
	private IEnumerator ExecuteAfterTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x24DE9D0", Offset = "0x24DE9D0", VA = "0x24DE9D0")]
	public void Quit()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x24DE9D8", Offset = "0x24DE9D8", VA = "0x24DE9D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x24DE9DC", Offset = "0x24DE9DC", VA = "0x24DE9DC")]
	public LevelRestart()
	{
	}
}
[Token(Token = "0x20000F4")]
public class LevelScore : MonoBehaviour
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int levelID;

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x24DE9E4", Offset = "0x24DE9E4", VA = "0x24DE9E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x24DEAD8", Offset = "0x24DEAD8", VA = "0x24DEAD8")]
	public LevelScore()
	{
	}
}
[Token(Token = "0x20000F5")]
public class LoadPlayerName : MonoBehaviour
{
	[Token(Token = "0x6000521")]
	[Address(RVA = "0x24E2914", Offset = "0x24E2914", VA = "0x24E2914")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x24E2A04", Offset = "0x24E2A04", VA = "0x24E2A04")]
	public LoadPlayerName()
	{
	}
}
[Token(Token = "0x20000F6")]
public static class LocalizationAccessHelperExtensions
{
	[Token(Token = "0x6000523")]
	[Address(RVA = "0x24E2A78", Offset = "0x24E2A78", VA = "0x24E2A78")]
	public static string T(this string s)
	{
		return null;
	}
}
[Token(Token = "0x20000F7")]
public class LocomotionManager : MonoBehaviour
{
	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform mainCamera;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playSpace;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cameraHolder;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SettingsManager settingsManager;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NewGameManager gameManager;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LevelManager levelManager;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CharacterController characterController;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float floorTimer;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool isGrounded;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 floorNormal;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int clipViolation;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x24E2F78", Offset = "0x24E2F78", VA = "0x24E2F78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x24E3148", Offset = "0x24E3148", VA = "0x24E3148")]
	private void Update()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x24E34D0", Offset = "0x24E34D0", VA = "0x24E34D0")]
	public void HandleMovement(Vector3 dir)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x24E3700", Offset = "0x24E3700", VA = "0x24E3700")]
	public void HandleFreeMovement(Vector3 dir)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x24E3768", Offset = "0x24E3768", VA = "0x24E3768")]
	public void HandFreeRotation(Vector3 center, float dir)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x24E3888", Offset = "0x24E3888", VA = "0x24E3888")]
	public void HandleMovement(Vector2 dir, [Optional] Transform forwardtransform)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x24E3E64", Offset = "0x24E3E64", VA = "0x24E3E64")]
	private bool OnSlope()
	{
		return default(bool);
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x24E4010", Offset = "0x24E4010", VA = "0x24E4010")]
	public void cloudstep_ground()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x24E418C", Offset = "0x24E418C", VA = "0x24E418C")]
	public void HandleTurn(float dir)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x24E3CC4", Offset = "0x24E3CC4", VA = "0x24E3CC4")]
	public void cloudStep_vertical(int dir)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x24E4438", Offset = "0x24E4438", VA = "0x24E4438")]
	public void cloudStep_horizontal(int dir)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x24E45D8", Offset = "0x24E45D8", VA = "0x24E45D8")]
	public LocomotionManager()
	{
	}
}
[Token(Token = "0x20000F8")]
public class LookAtMainCam : MonoBehaviour
{
	[Token(Token = "0x6000530")]
	[Address(RVA = "0x24E7308", Offset = "0x24E7308", VA = "0x24E7308")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x24E7354", Offset = "0x24E7354", VA = "0x24E7354")]
	public LookAtMainCam()
	{
	}
}
[Token(Token = "0x20000F9")]
public class MRPuck : MonoBehaviour
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x1A12ED4", Offset = "0x1A12ED4", VA = "0x1A12ED4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x1A12F70", Offset = "0x1A12F70", VA = "0x1A12F70")]
	public MRPuck()
	{
	}
}
[Token(Token = "0x20000FA")]
public class ManualGCCollect : MonoBehaviour
{
	[Token(Token = "0x6000534")]
	[Address(RVA = "0x1A15B44", Offset = "0x1A15B44", VA = "0x1A15B44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x1A15B48", Offset = "0x1A15B48", VA = "0x1A15B48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x1A15BE0", Offset = "0x1A15BE0", VA = "0x1A15BE0")]
	public ManualGCCollect()
	{
	}
}
[Token(Token = "0x20000FB")]
public class MaterialOverride : MonoBehaviour
{
	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material protoMat;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer[] meshes;

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1A16C1C", Offset = "0x1A16C1C", VA = "0x1A16C1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1A16CAC", Offset = "0x1A16CAC", VA = "0x1A16CAC")]
	private void SetMaterialColor()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1A16D6C", Offset = "0x1A16D6C", VA = "0x1A16D6C")]
	public MaterialOverride()
	{
	}
}
[Token(Token = "0x20000FC")]
public class MaterialSwap : MonoBehaviour
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] renderers;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material simpleMat;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material normalMat;

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1A17440", Offset = "0x1A17440", VA = "0x1A17440")]
	private void Awake()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1A17444", Offset = "0x1A17444", VA = "0x1A17444")]
	public void ShowSimple()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1A1750C", Offset = "0x1A1750C", VA = "0x1A1750C")]
	public void ShowNormal()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1A175D4", Offset = "0x1A175D4", VA = "0x1A175D4")]
	public MaterialSwap()
	{
	}
}
[Token(Token = "0x20000FD")]
public class MaterialSwitcher : MonoBehaviour
{
	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1A175DC", Offset = "0x1A175DC", VA = "0x1A175DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1A175E0", Offset = "0x1A175E0", VA = "0x1A175E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1A175E4", Offset = "0x1A175E4", VA = "0x1A175E4")]
	public MaterialSwitcher()
	{
	}
}
[Token(Token = "0x20000FE")]
public class MenuHolder : MonoBehaviour
{
	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] items;

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xBE9818", Offset = "0xBE9818", VA = "0xBE9818")]
	public MenuHolder()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FF")]
public class MB_AtlasesAndRects
{
	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D[] atlases;

	[NonSerialized]
	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MB_MaterialAndUVRect> mat2rect_map;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] texPropertyNames;

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1AB68E8", Offset = "0x1AB68E8", VA = "0x1AB68E8")]
	public MB_AtlasesAndRects()
	{
	}
}
[Serializable]
[Token(Token = "0x2000100")]
public class MB_MultiMaterial
{
	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material combinedMaterial;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool considerMeshUVs;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> sourceMaterials;

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1AB6C24", Offset = "0x1AB6C24", VA = "0x1AB6C24")]
	public MB_MultiMaterial()
	{
	}
}
[Serializable]
[Token(Token = "0x2000101")]
public class MB_MaterialAndUVRect
{
	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material material;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect atlasRect;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string srcObjName;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool allPropsUseSameTiling;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAAA154", Offset = "0xAAA154")]
	public Rect allPropsUseSameTiling_sourceMaterialTiling;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAAA18C", Offset = "0xAAA18C")]
	public Rect allPropsUseSameTiling_samplingEncapsulatinRect;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Rect propsUseDifferntTiling_srcUVsamplingRect;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public MB_TextureTilingTreatment tilingTreatment;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x1AB68F0", Offset = "0x1AB68F0", VA = "0x1AB68F0")]
	public MB_MaterialAndUVRect(Material mat, Rect destRect, bool allPropsUseSameTiling, Rect sourceMaterialTiling, Rect samplingEncapsulatingRect, Rect srcUVsamplingRect, MB_TextureTilingTreatment treatment, string objName)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x1AB69D0", Offset = "0x1AB69D0", VA = "0x1AB69D0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x1AB6A30", Offset = "0x1AB6A30", VA = "0x1AB6A30", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x1AB6B78", Offset = "0x1AB6B78", VA = "0x1AB6B78")]
	public Rect GetEncapsulatingRect()
	{
		return default(Rect);
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x1AB6BB8", Offset = "0x1AB6BB8", VA = "0x1AB6BB8")]
	public Rect GetMaterialTilingRect()
	{
		return default(Rect);
	}
}
[Token(Token = "0x2000102")]
public class MB2_TextureBakeResults : ScriptableObject
{
	[Token(Token = "0x2000103")]
	public class Material2AtlasRectangleMapper
	{
		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MB2_TextureBakeResults tbr;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] numTimesMatAppearsInAtlas;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MB_MaterialAndUVRect[] matsAndSrcUVRect;

		[Token(Token = "0x6000551")]
		[Address(RVA = "0x192B2FC", Offset = "0x192B2FC", VA = "0x192B2FC")]
		public Material2AtlasRectangleMapper(MB2_TextureBakeResults res)
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x192B564", Offset = "0x192B564", VA = "0x192B564")]
		public bool TryMapMaterialToUVRect(Material mat, Mesh m, int submeshIdx, int idxInResultMats, MB3_MeshCombinerSingle.MeshChannelsCache meshChannelCache, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisCache, out MB_TextureTilingTreatment tilingTreatment, out Rect rectInAtlas, out Rect encapsulatingRectOut, out Rect sourceMaterialTilingOut, ref string errorMsg, MB2_LogLevel logLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x192BD78", Offset = "0x192BD78", VA = "0x192BD78")]
		private void UpgradeToCurrentVersion(MB2_TextureBakeResults tbr)
		{
		}
	}

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int version;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MB_MaterialAndUVRect[] materialsAndUVRects;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB_MultiMaterial[] resultMaterials;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool doMultiMaterial;

	[Token(Token = "0x17000051")]
	public static int VERSION
	{
		[Token(Token = "0x6000549")]
		[Address(RVA = "0x24E8DFC", Offset = "0x24E8DFC", VA = "0x24E8DFC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x24E8E04", Offset = "0x24E8E04", VA = "0x24E8E04")]
	public MB2_TextureBakeResults()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x24E8E30", Offset = "0x24E8E30", VA = "0x24E8E30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x24E8EA4", Offset = "0x24E8EA4", VA = "0x24E8EA4")]
	public static MB2_TextureBakeResults CreateForMaterialsOnRenderer(GameObject[] gos, List<Material> matsOnTargetRenderer)
	{
		return null;
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x24E9698", Offset = "0x24E9698", VA = "0x24E9698")]
	public bool DoAnyResultMatsUseConsiderMeshUVs()
	{
		return default(bool);
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x24E9704", Offset = "0x24E9704", VA = "0x24E9704")]
	public bool ContainsMaterial(Material m)
	{
		return default(bool);
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x24E97E0", Offset = "0x24E97E0", VA = "0x24E97E0")]
	public string GetDescription()
	{
		return null;
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x24E9BF8", Offset = "0x24E9BF8", VA = "0x24E9BF8")]
	public static bool IsMeshAndMaterialRectEnclosedByAtlasRect(MB_TextureTilingTreatment tilingTreatment, Rect uvR, Rect sourceMaterialTiling, Rect samplingEncapsulatinRect, MB2_LogLevel logLevel)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000104")]
public class MB2_UpdateSkinnedMeshBoundsFromBones : MonoBehaviour
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[] bones;

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1967418", Offset = "0x1967418", VA = "0x1967418")]
	private void Start()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x196755C", Offset = "0x196755C", VA = "0x196755C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1967824", Offset = "0x1967824", VA = "0x1967824")]
	public MB2_UpdateSkinnedMeshBoundsFromBones()
	{
	}
}
[Token(Token = "0x2000105")]
public class MB2_UpdateSkinnedMeshBoundsFromBounds : MonoBehaviour
{
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> objects;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x196782C", Offset = "0x196782C", VA = "0x196782C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x1967B44", Offset = "0x1967B44", VA = "0x1967B44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x1967D70", Offset = "0x1967D70", VA = "0x1967D70")]
	public MB2_UpdateSkinnedMeshBoundsFromBounds()
	{
	}
}
[Token(Token = "0x2000106")]
public class MB3_BatchPrefabBaker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000107")]
	public class MB3_PrefabBakerRow
	{
		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject sourcePrefab;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject resultPrefab;

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x192CAAC", Offset = "0x192CAAC", VA = "0x192CAAC")]
		public MB3_PrefabBakerRow()
		{
		}
	}

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_PrefabBakerRow[] prefabRows;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string outputPrefabFolder;

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x19696CC", Offset = "0x19696CC", VA = "0x19696CC")]
	public MB3_BatchPrefabBaker()
	{
	}
}
[Token(Token = "0x2000108")]
public class MB3_BoneWeightCopier : MonoBehaviour
{
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject inputGameObject;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject outputPrefab;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer seamMesh;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string outputFolder;

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x19696D4", Offset = "0x19696D4", VA = "0x19696D4")]
	public MB3_BoneWeightCopier()
	{
	}
}
[Token(Token = "0x2000109")]
public class MB3_DisableHiddenAnimations : MonoBehaviour
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Animation> animationsToCull;

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x196A098", Offset = "0x196A098", VA = "0x196A098")]
	private void Start()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x196A1C4", Offset = "0x196A1C4", VA = "0x196A1C4")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x196A2D8", Offset = "0x196A2D8", VA = "0x196A2D8")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x196A3EC", Offset = "0x196A3EC", VA = "0x196A3EC")]
	public MB3_DisableHiddenAnimations()
	{
	}
}
[Token(Token = "0x200010A")]
public class MB3_MeshBaker : MB3_MeshBakerCommon
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected MB3_MeshCombinerSingle _meshCombiner;

	[Token(Token = "0x17000052")]
	public override MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x196B248", Offset = "0x196B248", VA = "0x196B248", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x196B250", Offset = "0x196B250", VA = "0x196B250")]
	public void BuildSceneMeshObject()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x196B384", Offset = "0x196B384", VA = "0x196B384", Slot = "23")]
	public virtual bool ShowHide(GameObject[] gos, GameObject[] deleteGOs)
	{
		return default(bool);
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x196B4A0", Offset = "0x196B4A0", VA = "0x196B4A0", Slot = "24")]
	public virtual void ApplyShowHide()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x196B4C4", Offset = "0x196B4C4", VA = "0x196B4C4", Slot = "13")]
	public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x196B56C", Offset = "0x196B56C", VA = "0x196B56C", Slot = "14")]
	public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x196B614", Offset = "0x196B614", VA = "0x196B614")]
	public MB3_MeshBaker()
	{
	}
}
[Token(Token = "0x200010B")]
public abstract class MB3_MeshBakerCommon : MB3_MeshBakerRoot
{
	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> objsToMesh;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useObjsToMeshFromTexBaker;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool clearBuffersAfterBake;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string bakeAssetsInPlaceFolderPath;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject resultPrefab;

	[Token(Token = "0x17000053")]
	public abstract MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x6000568")]
		get;
	}

	[Token(Token = "0x17000054")]
	public override MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x196B9E8", Offset = "0x196B9E8", VA = "0x196B9E8", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x196BA14", Offset = "0x196BA14", VA = "0x196BA14", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x196BA54", Offset = "0x196BA54", VA = "0x196BA54", Slot = "6")]
	public override List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x196BC60", Offset = "0x196BC60", VA = "0x196BC60")]
	public void EnableDisableSourceObjectRenderers(bool show)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x196BF2C", Offset = "0x196BF2C", VA = "0x196BF2C", Slot = "8")]
	public virtual void ClearMesh()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x196BF5C", Offset = "0x196BF5C", VA = "0x196BF5C", Slot = "9")]
	public virtual void DestroyMesh()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x196BF8C", Offset = "0x196BF8C", VA = "0x196BF8C", Slot = "10")]
	public virtual void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x196BFD0", Offset = "0x196BFD0", VA = "0x196BFD0", Slot = "11")]
	public virtual int GetNumObjectsInCombined()
	{
		return default(int);
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x196C000", Offset = "0x196C000", VA = "0x196C000", Slot = "12")]
	public virtual int GetNumVerticesFor(GameObject go)
	{
		return default(int);
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x196C044", Offset = "0x196C044", VA = "0x196C044")]
	public MB3_TextureBaker GetTextureBaker()
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	public abstract bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true);

	[Token(Token = "0x6000574")]
	public abstract bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource = true);

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x196C164", Offset = "0x196C164", VA = "0x196C164", Slot = "15")]
	public virtual void Apply([Optional] MB3_MeshCombiner.GenerateUV2Delegate uv2GenerationMethod)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x196C210", Offset = "0x196C210", VA = "0x196C210", Slot = "16")]
	public virtual void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] MB3_MeshCombiner.GenerateUV2Delegate uv2GenerationMethod)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x196C354", Offset = "0x196C354", VA = "0x196C354", Slot = "17")]
	public virtual bool CombinedMeshContains(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x196C398", Offset = "0x196C398", VA = "0x196C398", Slot = "18")]
	public virtual void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV1 = false, bool updateUV2 = false, bool updateColors = false, bool updateSkinningInfo = false)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x196C4C4", Offset = "0x196C4C4", VA = "0x196C4C4", Slot = "19")]
	public virtual void UpdateSkinnedMeshApproximateBounds()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x196C524", Offset = "0x196C524", VA = "0x196C524", Slot = "20")]
	public virtual void UpdateSkinnedMeshApproximateBoundsFromBones()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x196C584", Offset = "0x196C584", VA = "0x196C584", Slot = "21")]
	public virtual void UpdateSkinnedMeshApproximateBoundsFromBounds()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x196C5E4", Offset = "0x196C5E4", VA = "0x196C5E4", Slot = "22")]
	protected virtual bool _ValidateForUpdateSkinnedMeshBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x196B97C", Offset = "0x196B97C", VA = "0x196B97C")]
	protected MB3_MeshBakerCommon()
	{
	}
}
[Token(Token = "0x200010C")]
public class MB3_MeshBakerGrouper : MonoBehaviour
{
	[Token(Token = "0x200010D")]
	public enum ClusterType
	{
		[Token(Token = "0x40006C1")]
		none,
		[Token(Token = "0x40006C2")]
		grid,
		[Token(Token = "0x40006C3")]
		pie,
		[Token(Token = "0x40006C4")]
		agglomerative
	}

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBakerGrouperCore grouper;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ClusterType clusterType;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrouperData data;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Bounds sourceObjectBounds;

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x196C7F8", Offset = "0x196C7F8", VA = "0x196C7F8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x196C8A8", Offset = "0x196C8A8", VA = "0x196C8A8")]
	public MB3_MeshBakerGrouperCore CreateGrouper(ClusterType t, GrouperData data)
	{
		return null;
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x196CB78", Offset = "0x196CB78", VA = "0x196CB78")]
	public MB3_MeshBakerGrouper()
	{
	}
}
[Token(Token = "0x200010E")]
public abstract class MB3_MeshBakerRoot : MonoBehaviour
{
	[Token(Token = "0x200010F")]
	public class ZSortObjects
	{
		[Token(Token = "0x2000110")]
		public class Item
		{
			[Token(Token = "0x40006C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x40006C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 point;

			[Token(Token = "0x6000589")]
			[Address(RVA = "0x249E078", Offset = "0x249E078", VA = "0x249E078")]
			public Item()
			{
			}
		}

		[Token(Token = "0x2000111")]
		public class ItemComparer : IComparer<Item>
		{
			[Token(Token = "0x600058A")]
			[Address(RVA = "0x249E080", Offset = "0x249E080", VA = "0x249E080", Slot = "4")]
			public int Compare(Item a, Item b)
			{
				return default(int);
			}

			[Token(Token = "0x600058B")]
			[Address(RVA = "0x249E0CC", Offset = "0x249E0CC", VA = "0x249E0CC")]
			public ItemComparer()
			{
			}
		}

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 sortAxis;

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x192CD54", Offset = "0x192CD54", VA = "0x192CD54")]
		public void SortByDistanceAlongAxis(List<GameObject> gos)
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x192D178", Offset = "0x192D178", VA = "0x192D178")]
		public ZSortObjects()
		{
		}
	}

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DO_INTEGRITY_CHECKS;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 sortAxis;

	[Token(Token = "0x17000055")]
	[HideInInspector]
	public abstract MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x6000581")]
		get;
		[Token(Token = "0x6000582")]
		set;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x1970B30", Offset = "0x1970B30", VA = "0x1970B30", Slot = "6")]
	public virtual List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x1970B38", Offset = "0x1970B38", VA = "0x1970B38")]
	public static bool DoCombinedValidate(MB3_MeshBakerRoot mom, MB_ObjsToCombineTypes objToCombineType, MB2_EditorMethodsInterface editorMethods, MB2_ValidationLevel validationLevel)
	{
		return default(bool);
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x196C7F0", Offset = "0x196C7F0", VA = "0x196C7F0")]
	protected MB3_MeshBakerRoot()
	{
	}
}
[Token(Token = "0x2000112")]
public class MB3_MultiMeshBaker : MB3_MeshBakerCommon
{
	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected MB3_MultiMeshCombiner _meshCombiner;

	[Token(Token = "0x17000056")]
	public override MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x600058C")]
		[Address(RVA = "0x1AA01C8", Offset = "0x1AA01C8", VA = "0x1AA01C8", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1AA01D0", Offset = "0x1AA01D0", VA = "0x1AA01D0", Slot = "13")]
	public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1AA0370", Offset = "0x1AA0370", VA = "0x1AA0370", Slot = "14")]
	public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1AA0510", Offset = "0x1AA0510", VA = "0x1AA0510")]
	public MB3_MultiMeshBaker()
	{
	}
}
[Token(Token = "0x2000113")]
public class MB3_TextureBaker : MB3_MeshBakerRoot
{
	[Token(Token = "0x2000114")]
	public delegate void OnCombinedTexturesCoroutineSuccess();

	[Token(Token = "0x2000115")]
	public delegate void OnCombinedTexturesCoroutineFail();

	[Token(Token = "0x2000116")]
	public class CreateAtlasesCoroutineResult
	{
		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool success;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isFinished;

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x193213C", Offset = "0x193213C", VA = "0x193213C")]
		public CreateAtlasesCoroutineResult()
		{
		}
	}

	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6538", Offset = "0xAA6538")]
	private sealed class <CreateAtlasesCoroutine>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreateAtlasesCoroutineResult coroutineResult;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MB3_TextureBaker <>4__this;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxTimePerFrame;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool saveAtlasesAsAssets;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ProgressUpdateDelegate progressInfo;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MB2_EditorMethodsInterface editorMethods;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MB3_TextureCombiner <combiner>5__2;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__3;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult <coroutineResult2>5__4;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005C7")]
			[Address(RVA = "0x19320EC", Offset = "0x19320EC", VA = "0x19320EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0x1932134", Offset = "0x1932134", VA = "0x1932134", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x19310D4", Offset = "0x19310D4", VA = "0x19310D4")]
		[DebuggerHidden]
		public <CreateAtlasesCoroutine>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x1931100", Offset = "0x1931100", VA = "0x1931100", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x1931104", Offset = "0x1931104", VA = "0x1931104", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x19320F4", Offset = "0x19320F4", VA = "0x19320F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected MB2_TextureBakeResults _textureBakeResults;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected int _atlasPadding;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected int _maxAtlasSize;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected bool _resizePowerOfTwoTextures;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	protected bool _fixOutOfBoundsUVs;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected int _maxTilingBakeSize;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected MB2_PackingAlgorithmEnum _packingAlgorithm;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected bool _meshBakerTexturePackerForcePowerOfTwo;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected List<ShaderTextureProperty> _customShaderProperties;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected List<string> _customShaderPropNames_Depricated;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected bool _doMultiMaterial;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[SerializeField]
	protected bool _doMultiMaterialSplitAtlasesIfTooBig;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[SerializeField]
	protected bool _doMultiMaterialSplitAtlasesIfOBUVs;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected Material _resultMaterial;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected bool _considerNonTextureProperties;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	protected bool _doSuggestTreatment;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CreateAtlasesCoroutineResult _coroutineResult;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MB_MultiMaterial[] resultMaterials;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<GameObject> objsToMesh;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public OnCombinedTexturesCoroutineSuccess onBuiltAtlasesSuccess;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public OnCombinedTexturesCoroutineFail onBuiltAtlasesFail;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MB_AtlasesAndRects[] OnCombinedTexturesCoroutineAtlasesAndRects;

	[Token(Token = "0x17000057")]
	public override MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x6000590")]
		[Address(RVA = "0x1AA5AA8", Offset = "0x1AA5AA8", VA = "0x1AA5AA8", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000591")]
		[Address(RVA = "0x1AA5AB0", Offset = "0x1AA5AB0", VA = "0x1AA5AB0", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public virtual int atlasPadding
	{
		[Token(Token = "0x6000592")]
		[Address(RVA = "0x1AA5AB8", Offset = "0x1AA5AB8", VA = "0x1AA5AB8", Slot = "7")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000593")]
		[Address(RVA = "0x1AA5AC0", Offset = "0x1AA5AC0", VA = "0x1AA5AC0", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public virtual int maxAtlasSize
	{
		[Token(Token = "0x6000594")]
		[Address(RVA = "0x1AA5AC8", Offset = "0x1AA5AC8", VA = "0x1AA5AC8", Slot = "9")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000595")]
		[Address(RVA = "0x1AA5AD0", Offset = "0x1AA5AD0", VA = "0x1AA5AD0", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public virtual bool resizePowerOfTwoTextures
	{
		[Token(Token = "0x6000596")]
		[Address(RVA = "0x1AA5AD8", Offset = "0x1AA5AD8", VA = "0x1AA5AD8", Slot = "11")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000597")]
		[Address(RVA = "0x1AA5AE0", Offset = "0x1AA5AE0", VA = "0x1AA5AE0", Slot = "12")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public virtual bool fixOutOfBoundsUVs
	{
		[Token(Token = "0x6000598")]
		[Address(RVA = "0x1AA5AEC", Offset = "0x1AA5AEC", VA = "0x1AA5AEC", Slot = "13")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000599")]
		[Address(RVA = "0x1AA5AF4", Offset = "0x1AA5AF4", VA = "0x1AA5AF4", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public virtual int maxTilingBakeSize
	{
		[Token(Token = "0x600059A")]
		[Address(RVA = "0x1AA5B00", Offset = "0x1AA5B00", VA = "0x1AA5B00", Slot = "15")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600059B")]
		[Address(RVA = "0x1AA5B08", Offset = "0x1AA5B08", VA = "0x1AA5B08", Slot = "16")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public virtual MB2_PackingAlgorithmEnum packingAlgorithm
	{
		[Token(Token = "0x600059C")]
		[Address(RVA = "0x1AA5B10", Offset = "0x1AA5B10", VA = "0x1AA5B10", Slot = "17")]
		get
		{
			return default(MB2_PackingAlgorithmEnum);
		}
		[Token(Token = "0x600059D")]
		[Address(RVA = "0x1AA5B18", Offset = "0x1AA5B18", VA = "0x1AA5B18", Slot = "18")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public bool meshBakerTexturePackerForcePowerOfTwo
	{
		[Token(Token = "0x600059E")]
		[Address(RVA = "0x1AA5B20", Offset = "0x1AA5B20", VA = "0x1AA5B20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1AA5B28", Offset = "0x1AA5B28", VA = "0x1AA5B28")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public virtual List<ShaderTextureProperty> customShaderProperties
	{
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1AA5B34", Offset = "0x1AA5B34", VA = "0x1AA5B34", Slot = "19")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1AA5B3C", Offset = "0x1AA5B3C", VA = "0x1AA5B3C", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public virtual List<string> customShaderPropNames
	{
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x1AA5B44", Offset = "0x1AA5B44", VA = "0x1AA5B44", Slot = "21")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x1AA5B4C", Offset = "0x1AA5B4C", VA = "0x1AA5B4C", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public virtual bool doMultiMaterial
	{
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x1AA5B54", Offset = "0x1AA5B54", VA = "0x1AA5B54", Slot = "23")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x1AA5B5C", Offset = "0x1AA5B5C", VA = "0x1AA5B5C", Slot = "24")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public virtual bool doMultiMaterialSplitAtlasesIfTooBig
	{
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x1AA5B68", Offset = "0x1AA5B68", VA = "0x1AA5B68", Slot = "25")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x1AA5B70", Offset = "0x1AA5B70", VA = "0x1AA5B70", Slot = "26")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public virtual bool doMultiMaterialSplitAtlasesIfOBUVs
	{
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x1AA5B7C", Offset = "0x1AA5B7C", VA = "0x1AA5B7C", Slot = "27")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x1AA5B84", Offset = "0x1AA5B84", VA = "0x1AA5B84", Slot = "28")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public virtual Material resultMaterial
	{
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x1AA5B90", Offset = "0x1AA5B90", VA = "0x1AA5B90", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x1AA5B98", Offset = "0x1AA5B98", VA = "0x1AA5B98", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public bool considerNonTextureProperties
	{
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x1AA5BA0", Offset = "0x1AA5BA0", VA = "0x1AA5BA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x1AA5BA8", Offset = "0x1AA5BA8", VA = "0x1AA5BA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public bool doSuggestTreatment
	{
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x1AA5BB4", Offset = "0x1AA5BB4", VA = "0x1AA5BB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x1AA5BBC", Offset = "0x1AA5BBC", VA = "0x1AA5BBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public CreateAtlasesCoroutineResult CoroutineResult
	{
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x1AA5BC8", Offset = "0x1AA5BC8", VA = "0x1AA5BC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1AA5BD0", Offset = "0x1AA5BD0", VA = "0x1AA5BD0", Slot = "6")]
	public override List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x1AA5C4C", Offset = "0x1AA5C4C", VA = "0x1AA5C4C")]
	public MB_AtlasesAndRects[] CreateAtlases()
	{
		return null;
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x1AA6058", Offset = "0x1AA6058", VA = "0x1AA6058")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA6CC", Offset = "0xABA6CC")]
	public IEnumerator CreateAtlasesCoroutine(ProgressUpdateDelegate progressInfo, CreateAtlasesCoroutineResult coroutineResult, bool saveAtlasesAsAssets = false, [Optional] MB2_EditorMethodsInterface editorMethods, float maxTimePerFrame = 0.01f)
	{
		return null;
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1AA5C5C", Offset = "0x1AA5C5C", VA = "0x1AA5C5C")]
	public MB_AtlasesAndRects[] CreateAtlases(ProgressUpdateDelegate progressInfo, bool saveAtlasesAsAssets = false, [Optional] MB2_EditorMethodsInterface editorMethods)
	{
		return null;
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1AA6430", Offset = "0x1AA6430", VA = "0x1AA6430")]
	private void unpackMat2RectMap(MB2_TextureBakeResults tbr)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x1AA66DC", Offset = "0x1AA66DC", VA = "0x1AA66DC")]
	public MB3_TextureCombiner CreateAndConfigureTextureCombiner()
	{
		return null;
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1AA6864", Offset = "0x1AA6864", VA = "0x1AA6864")]
	public static void ConfigureNewMaterialToMatchOld(Material newMat, Material original)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x1AA6B0C", Offset = "0x1AA6B0C", VA = "0x1AA6B0C")]
	private string PrintSet(HashSet<Material> s)
	{
		return null;
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1AA6CCC", Offset = "0x1AA6CCC", VA = "0x1AA6CCC")]
	private bool _ValidateResultMaterials()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x1AA756C", Offset = "0x1AA756C", VA = "0x1AA756C")]
	public MB3_TextureBaker()
	{
	}
}
[Token(Token = "0x2000118")]
public class MB2_TestShowHide : MonoBehaviour
{
	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker mb;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objs;

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x24E86B4", Offset = "0x24E86B4", VA = "0x24E86B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x24E880C", Offset = "0x24E880C", VA = "0x24E880C")]
	public MB2_TestShowHide()
	{
	}
}
[Token(Token = "0x2000119")]
public class MB2_TestUpdate : MonoBehaviour
{
	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MB3_MultiMeshBaker multiMeshBaker;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] objsToMove;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objWithChangingUVs;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] uvs;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mesh m;

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x24E8814", Offset = "0x24E8814", VA = "0x24E8814")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x24E8A44", Offset = "0x24E8A44", VA = "0x24E8A44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x24E8DF4", Offset = "0x24E8DF4", VA = "0x24E8DF4")]
	public MB2_TestUpdate()
	{
	}
}
[Token(Token = "0x200011A")]
public class MB3_TestAddingRemovingSkinnedMeshes : MonoBehaviour
{
	[Token(Token = "0x200011B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6548", Offset = "0xAA6548")]
	private sealed class <TestScript>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB3_TestAddingRemovingSkinnedMeshes <>4__this;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D5")]
			[Address(RVA = "0x1931084", Offset = "0x1931084", VA = "0x1931084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D7")]
			[Address(RVA = "0x19310CC", Offset = "0x19310CC", VA = "0x19310CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x1930700", Offset = "0x1930700", VA = "0x1930700")]
		[DebuggerHidden]
		public <TestScript>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x193072C", Offset = "0x193072C", VA = "0x193072C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x1930730", Offset = "0x1930730", VA = "0x1930730", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x193108C", Offset = "0x193108C", VA = "0x193108C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] g;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1AA4980", Offset = "0x1AA4980", VA = "0x1AA4980")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1AA49AC", Offset = "0x1AA49AC", VA = "0x1AA49AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA77C", Offset = "0xABA77C")]
	private IEnumerator TestScript()
	{
		return null;
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x1AA4A18", Offset = "0x1AA4A18", VA = "0x1AA4A18")]
	public MB3_TestAddingRemovingSkinnedMeshes()
	{
	}
}
[Token(Token = "0x200011C")]
public class MB3_TestBakeAllWithSameMaterial : MonoBehaviour
{
	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] listOfObjsToCombineGood;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] listOfObjsToCombineBad;

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x1AA4A20", Offset = "0x1AA4A20", VA = "0x1AA4A20")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x1AA4A24", Offset = "0x1AA4A24", VA = "0x1AA4A24")]
	private void testCombine()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x1AA4DE4", Offset = "0x1AA4DE4", VA = "0x1AA4DE4")]
	public MB3_TestBakeAllWithSameMaterial()
	{
	}
}
[Token(Token = "0x200011D")]
public class MB3_TestRenderTextureTestHarness : MonoBehaviour
{
	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D input;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool doColor;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color32 color;

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1AA4DEC", Offset = "0x1AA4DEC", VA = "0x1AA4DEC")]
	public Texture2D Create3x3Tex()
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1AA4F14", Offset = "0x1AA4F14", VA = "0x1AA4F14")]
	public Texture2D Create3x3Clone()
	{
		return null;
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1AA51AC", Offset = "0x1AA51AC", VA = "0x1AA51AC")]
	public static void TestRender(Texture2D input, Texture2D output)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1AA5AA0", Offset = "0x1AA5AA0", VA = "0x1AA5AA0")]
	public MB3_TestRenderTextureTestHarness()
	{
	}
}
[Token(Token = "0x200011E")]
public class MB3_KMeansClustering
{
	[Token(Token = "0x200011F")]
	private class DataPoint
	{
		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Cluster;

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x192CAB4", Offset = "0x192CAB4", VA = "0x192CAB4")]
		public DataPoint(GameObject go)
		{
		}
	}

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<DataPoint> _normalizedDataToCluster;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] _clusters;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _numberOfClusters;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x196A464", Offset = "0x196A464", VA = "0x196A464")]
	public MB3_KMeansClustering(List<GameObject> gos, int numClusters)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x196A7B4", Offset = "0x196A7B4", VA = "0x196A7B4")]
	private void InitializeCentroids()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x196A8B4", Offset = "0x196A8B4", VA = "0x196A8B4")]
	private bool UpdateDataPointMeans(bool force)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x196AB00", Offset = "0x196AB00", VA = "0x196AB00")]
	private bool AnyAreEmpty(List<DataPoint> data)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x196AC2C", Offset = "0x196AC2C", VA = "0x196AC2C")]
	private bool UpdateClusterMembership()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x196AE08", Offset = "0x196AE08", VA = "0x196AE08")]
	private float ElucidanDistance(DataPoint dataPoint, Vector3 mean)
	{
		return default(float);
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x196AE34", Offset = "0x196AE34", VA = "0x196AE34")]
	private int MinIndex(float[] distances)
	{
		return default(int);
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x196AEA4", Offset = "0x196AEA4", VA = "0x196AEA4")]
	public List<Renderer> GetCluster(int idx, out Vector3 mean, out float size)
	{
		return null;
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x196B1AC", Offset = "0x196B1AC", VA = "0x196B1AC")]
	public void Cluster()
	{
	}
}
[Token(Token = "0x2000120")]
public class MB_TextureCombinerRenderTexture
{
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material mat;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture _destinationTexture;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera myCamera;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _padding;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _isNormalMap;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool _fixOutOfBoundsUVs;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool _doRenderAtlas;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rect[] rs;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<MB_TexSet> textureSets;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int indexOfTexSetToRender;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ShaderTextureProperty _texPropertyName;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MB3_TextureCombinerNonTextureProperties _resultMaterialTextureBlender;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D targTex;

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x1A06A44", Offset = "0x1A06A44", VA = "0x1A06A44")]
	public Texture2D DoRenderAtlas(GameObject gameObject, int width, int height, int padding, Rect[] rss, List<MB_TexSet> textureSetss, int indexOfTexSetToRenders, ShaderTextureProperty texPropertyname, MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender, bool isNormalMap, bool fixOutOfBoundsUVs, bool considerNonTextureProperties, MB3_TextureCombiner texCombiner, MB2_LogLevel LOG_LEV)
	{
		return null;
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1A070C8", Offset = "0x1A070C8", VA = "0x1A070C8")]
	public void OnRenderObject()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x1A0909C", Offset = "0x1A0909C", VA = "0x1A0909C")]
	private Color32 ConvertNormalFormatFromUnity_ToStandard(Color32 c)
	{
		return default(Color32);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1A09174", Offset = "0x1A09174", VA = "0x1A09174")]
	private bool IsOpenGL()
	{
		return default(bool);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1A07D60", Offset = "0x1A07D60", VA = "0x1A07D60")]
	private void CopyScaledAndTiledToAtlas(MB_TexSet texSet, MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, Rect rec, ShaderTextureProperty texturePropertyName, MB3_TextureCombinerNonTextureProperties resultMatTexBlender)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1A08D84", Offset = "0x1A08D84", VA = "0x1A08D84")]
	private void _printTexture(Texture2D t)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1A091CC", Offset = "0x1A091CC", VA = "0x1A091CC")]
	public MB_TextureCombinerRenderTexture()
	{
	}
}
[Token(Token = "0x2000121")]
[ExecuteInEditMode]
public class MB3_AtlasPackerRenderTexture : MonoBehaviour
{
	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MB_TextureCombinerRenderTexture fastRenderer;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _doRenderAtlas;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int width;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int height;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int padding;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isNormalMap;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool fixOutOfBoundsUVs;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool considerNonTextureProperties;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rect[] rects;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D tex1;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MB_TexSet> textureSets;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int indexOfTexSetToRender;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ShaderTextureProperty texPropertyName;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D testTex;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material testMat;

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x19695A0", Offset = "0x19695A0", VA = "0x19695A0")]
	public Texture2D OnRenderAtlas(MB3_TextureCombiner combiner)
	{
		return null;
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1969680", Offset = "0x1969680", VA = "0x1969680")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x19696BC", Offset = "0x19696BC", VA = "0x19696BC")]
	public MB3_AtlasPackerRenderTexture()
	{
	}
}
[Token(Token = "0x2000122")]
public class MinatureScaler : MonoBehaviour
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 normalScale;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 miniatureScale;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 tabletopScale;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 arScale;

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xBEB6B8", Offset = "0xBEB6B8", VA = "0xBEB6B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xBEB77C", Offset = "0xBEB77C", VA = "0xBEB77C")]
	public MinatureScaler()
	{
	}
}
[Token(Token = "0x2000123")]
public class ClippingPlaneAdjuster : MonoBehaviour
{
	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform hmd;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isBackCamera;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera myCam;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x1082068", Offset = "0x1082068", VA = "0x1082068")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x1082134", Offset = "0x1082134", VA = "0x1082134")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x10821EC", Offset = "0x10821EC", VA = "0x10821EC")]
	private void SetDisplay()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x108220C", Offset = "0x108220C", VA = "0x108220C")]
	public ClippingPlaneAdjuster()
	{
	}
}
[Token(Token = "0x2000124")]
public class DelayCameraStart : MonoBehaviour
{
	[Token(Token = "0x2000125")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6568", Offset = "0xAA6568")]
	private sealed class <StartCam>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float t;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DelayCameraStart <>4__this;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000600")]
			[Address(RVA = "0xCB7F9C", Offset = "0xCB7F9C", VA = "0xCB7F9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000602")]
			[Address(RVA = "0xCB7FE4", Offset = "0xCB7FE4", VA = "0xCB7FE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xCB7E9C", Offset = "0xCB7E9C", VA = "0xCB7E9C")]
		[DebuggerHidden]
		public <StartCam>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xCB7EC8", Offset = "0xCB7EC8", VA = "0xCB7EC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xCB7ECC", Offset = "0xCB7ECC", VA = "0xCB7ECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xCB7FA4", Offset = "0xCB7FA4", VA = "0xCB7FA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cam1;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cam2;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject geo;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x108D94C", Offset = "0x108D94C", VA = "0x108D94C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x108DA28", Offset = "0x108DA28", VA = "0x108DA28")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x108D9AC", Offset = "0x108D9AC", VA = "0x108D9AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA82C", Offset = "0xABA82C")]
	private IEnumerator StartCam(float t)
	{
		return null;
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x108DA2C", Offset = "0x108DA2C", VA = "0x108DA2C")]
	public DelayCameraStart()
	{
	}
}
[Token(Token = "0x2000126")]
public class MixedRealityMover : MonoBehaviour
{
	[Token(Token = "0x2000127")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6578", Offset = "0xAA6578")]
	private sealed class <setup>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MixedRealityMover <>4__this;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000610")]
			[Address(RVA = "0xDABEEC", Offset = "0xDABEEC", VA = "0xDABEEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000612")]
			[Address(RVA = "0xDABF34", Offset = "0xDABF34", VA = "0xDABF34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xDAB980", Offset = "0xDAB980", VA = "0xDAB980")]
		[DebuggerHidden]
		public <setup>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xDAB9AC", Offset = "0xDAB9AC", VA = "0xDAB9AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xDAB9B0", Offset = "0xDAB9B0", VA = "0xDAB9B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0xDABEF4", Offset = "0xDABEF4", VA = "0xDABEF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoxCollider boxCollider;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 pos;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 eulerRot;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float vFOV_MR_Cam;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float vFOV_FPV_Cam;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool mrCamOn;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool fovCamOn;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform platformPos;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform handcamPos;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject cam1;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject cam2;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject geo;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform handL;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform handR;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Camera fpvCam;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Camera frontcam;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Camera backcam;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public KeyCode togglehandMRCamKey;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public KeyCode toggleControllerRenderingKey;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public KeyCode toggleFPVCamKey;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public KeyCode toggleActiveKey;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public KeyCode toggleMovementKey;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Camera headcam;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 localStoredPos;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Quaternion localStoredRot;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private INIParser ini;

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xBEB7E0", Offset = "0xBEB7E0", VA = "0xBEB7E0")]
	public void toggleHandMRCam()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xBEBA08", Offset = "0xBEBA08", VA = "0xBEBA08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xBEBA88", Offset = "0xBEBA88", VA = "0xBEBA88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA8DC", Offset = "0xABA8DC")]
	private IEnumerator setup(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xBEBB04", Offset = "0xBEBB04", VA = "0xBEBB04")]
	public void toggleFPVCam()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xBEBBDC", Offset = "0xBEBBDC", VA = "0xBEBBDC")]
	public void callMRCam()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xBEBCEC", Offset = "0xBEBCEC", VA = "0xBEBCEC")]
	public void saveMRCamPosition()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xBEC068", Offset = "0xBEC068", VA = "0xBEC068")]
	public void toggleMRCam()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xBEC144", Offset = "0xBEC144", VA = "0xBEC144")]
	public void toggleControllerVisibility()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xBEC254", Offset = "0xBEC254", VA = "0xBEC254")]
	private void Update()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xBEC2D8", Offset = "0xBEC2D8", VA = "0xBEC2D8")]
	public MixedRealityMover()
	{
	}
}
[Token(Token = "0x2000128")]
public class ModifierCollider : MonoBehaviour
{
	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GravityModifier modifier;

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xBECAEC", Offset = "0xBECAEC", VA = "0xBECAEC")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xBECB08", Offset = "0xBECB08", VA = "0xBECB08")]
	public ModifierCollider()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA6588", Offset = "0xAA6588")]
public class CubeKiller : MonoBehaviour
{
	[Token(Token = "0x6000615")]
	[Address(RVA = "0x1088DF4", Offset = "0x1088DF4", VA = "0x1088DF4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1088E74", Offset = "0x1088E74", VA = "0x1088E74")]
	public CubeKiller()
	{
	}
}
[Token(Token = "0x200012A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA65C0", Offset = "0xAA65C0")]
public class CubeSpawner : MonoBehaviour
{
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA65F8", Offset = "0xAA65F8")]
	private sealed class <SpawnCube>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubeSpawner <>4__this;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600061D")]
			[Address(RVA = "0xCB70F0", Offset = "0xCB70F0", VA = "0xCB70F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600061F")]
			[Address(RVA = "0xCB7138", Offset = "0xCB7138", VA = "0xCB7138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xCB6F4C", Offset = "0xCB6F4C", VA = "0xCB6F4C")]
		[DebuggerHidden]
		public <SpawnCube>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xCB6F78", Offset = "0xCB6F78", VA = "0xCB6F78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xCB6F7C", Offset = "0xCB6F7C", VA = "0xCB6F7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xCB70F8", Offset = "0xCB70F8", VA = "0xCB70F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CubePrefab;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Interval;

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1088E7C", Offset = "0x1088E7C", VA = "0x1088E7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1088F10", Offset = "0x1088F10", VA = "0x1088F10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA98C", Offset = "0xABA98C")]
	private IEnumerator SpawnCube()
	{
		return null;
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1088F7C", Offset = "0x1088F7C", VA = "0x1088F7C")]
	public CubeSpawner()
	{
	}
}
[Token(Token = "0x200012C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6608", Offset = "0xAA6608")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA6608", Offset = "0xAA6608")]
public class Record : MonoBehaviour
{
	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Recorder m_Recorder;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_Progress;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_LastFile;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_IsSaving;

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xE70908", Offset = "0xE70908", VA = "0xE70908")]
	private void Start()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xE70B1C", Offset = "0xE70B1C", VA = "0xE70B1C")]
	private void OnProcessingDone()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xE70B28", Offset = "0xE70B28", VA = "0xE70B28")]
	private void OnFileSaveProgress(int id, float percent)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xE70B3C", Offset = "0xE70B3C", VA = "0xE70B3C")]
	private void OnFileSaved(int id, string filepath)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xE70B60", Offset = "0xE70B60", VA = "0xE70B60")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xE70B64", Offset = "0xE70B64", VA = "0xE70B64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xE70BD8", Offset = "0xE70BD8", VA = "0xE70BD8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xE710F0", Offset = "0xE710F0", VA = "0xE710F0")]
	public Record()
	{
	}
}
[Token(Token = "0x200012D")]
public class MovableDoor : MonoBehaviour
{
	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject extraObjectToEnable;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool alwaysLocked;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool tempLocked;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool pumpEnabled;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform doorObject;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float currentDistance;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer[] lamps;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LevelManager levelManager;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PartsWatcher partsWatcher;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VF_UIELement selectionButton;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VF_UIELement button_Red;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VF_UIELement button_Green;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VF_UIELement button_Blue;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VF_UIELement button_Yellow;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VF_UIELement button_Magenta;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VF_UIELement button_Cyan;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public VF_UIELement button_White;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material redLampMap;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material greenLampMap;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material blueLampMap;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material yellowLampMap;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material magentaLampMap;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material cyanLampMap;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material whiteLampMap;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material redLampMap_off;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material greenLampMap_off;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material blueLampMap_off;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Material yellowLampMap_off;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Material magentaLampMap_off;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Material cyanLampMap_off;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Material whiteLampMap_off;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public VR_UI_ElementHolder colorButtons;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GrabbableObject grabbableObject;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public SensorManagerObject.LampColors lampColor;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Sprite lockSprite;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Sprite originalSprite;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 startPos;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float speed;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool wasEnabledOnce;

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xBF0868", Offset = "0xBF0868", VA = "0xBF0868")]
	public void lockUIElement()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xBF08D0", Offset = "0xBF08D0", VA = "0xBF08D0")]
	public void unlockUIElement()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xBF0944", Offset = "0xBF0944", VA = "0xBF0944")]
	public void setColorRed()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xBF0A3C", Offset = "0xBF0A3C", VA = "0xBF0A3C")]
	public void setColorGreen()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xBF0AB8", Offset = "0xBF0AB8", VA = "0xBF0AB8")]
	public void setColorBlue()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xBF0B34", Offset = "0xBF0B34", VA = "0xBF0B34")]
	public void setColorYellow()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xBF0BB0", Offset = "0xBF0BB0", VA = "0xBF0BB0")]
	public void setColorCyan()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xBF0C2C", Offset = "0xBF0C2C", VA = "0xBF0C2C")]
	public void setColorMagenta()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xBF0CA8", Offset = "0xBF0CA8", VA = "0xBF0CA8")]
	public void setColorWhite()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xBF0D24", Offset = "0xBF0D24", VA = "0xBF0D24")]
	public void setColorBlack()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xBF0DA0", Offset = "0xBF0DA0", VA = "0xBF0DA0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xBF0EC4", Offset = "0xBF0EC4", VA = "0xBF0EC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xBF13E4", Offset = "0xBF13E4", VA = "0xBF13E4")]
	public void changeColorBrightness(bool on)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xBF181C", Offset = "0xBF181C", VA = "0xBF181C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xBF18AC", Offset = "0xBF18AC", VA = "0xBF18AC")]
	public void receiveSignal(SensorManagerObject.LampColors color, bool onoffstate)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xBF19B0", Offset = "0xBF19B0", VA = "0xBF19B0")]
	public void showOptionsButton()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xBF19CC", Offset = "0xBF19CC", VA = "0xBF19CC")]
	public void hideOptionsButton()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xBF1A50", Offset = "0xBF1A50", VA = "0xBF1A50")]
	public void showMenu()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xBF09BC", Offset = "0xBF09BC", VA = "0xBF09BC")]
	public void disableMenu()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xBF1AD0", Offset = "0xBF1AD0", VA = "0xBF1AD0")]
	public MovableDoor()
	{
	}
}
[Token(Token = "0x200012E")]
public class MusicManager : MonoBehaviour
{
	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MusicManager _instance;

	[Token(Token = "0x17000072")]
	public static MusicManager instance
	{
		[Token(Token = "0x600063C")]
		[Address(RVA = "0xBF4B1C", Offset = "0xBF4B1C", VA = "0xBF4B1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xBF4C20", Offset = "0xBF4C20", VA = "0xBF4C20")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xBF4D68", Offset = "0xBF4D68", VA = "0xBF4D68")]
	public void Play()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xBF4D6C", Offset = "0xBF4D6C", VA = "0xBF4D6C")]
	public MusicManager()
	{
	}
}
[Token(Token = "0x200012F")]
public class NewGameManager : MonoBehaviour
{
	[Token(Token = "0x2000130")]
	public enum GameState
	{
		[Token(Token = "0x4000845")]
		intro,
		[Token(Token = "0x4000846")]
		mainmenu,
		[Token(Token = "0x4000847")]
		levelLoading,
		[Token(Token = "0x4000848")]
		workshop,
		[Token(Token = "0x4000849")]
		leveleditor,
		[Token(Token = "0x400084A")]
		playingLevel,
		[Token(Token = "0x400084B")]
		sandbox
	}

	[Token(Token = "0x2000131")]
	public enum MainMenuState
	{
		[Token(Token = "0x400084D")]
		mainmenu,
		[Token(Token = "0x400084E")]
		options
	}

	[Token(Token = "0x2000132")]
	public enum LevelLoadingState
	{
		[Token(Token = "0x4000850")]
		stage1,
		[Token(Token = "0x4000851")]
		stage2,
		[Token(Token = "0x4000852")]
		custom
	}

	[Token(Token = "0x2000133")]
	public enum LevelEditorState
	{
		[Token(Token = "0x4000854")]
		load,
		[Token(Token = "0x4000855")]
		create,
		[Token(Token = "0x4000856")]
		placeparts,
		[Token(Token = "0x4000857")]
		handsettings,
		[Token(Token = "0x4000858")]
		levelsettings,
		[Token(Token = "0x4000859")]
		save,
		[Token(Token = "0x400085A")]
		savedfile
	}

	[Token(Token = "0x2000134")]
	public enum HandSettingsObjectsState
	{
		[Token(Token = "0x400085C")]
		none,
		[Token(Token = "0x400085D")]
		board,
		[Token(Token = "0x400085E")]
		tube,
		[Token(Token = "0x400085F")]
		modifier,
		[Token(Token = "0x4000860")]
		sensor,
		[Token(Token = "0x4000861")]
		pump,
		[Token(Token = "0x4000862")]
		scale,
		[Token(Token = "0x4000863")]
		ratioscale,
		[Token(Token = "0x4000864")]
		gate,
		[Token(Token = "0x4000865")]
		sensormanager,
		[Token(Token = "0x4000866")]
		bouncer
	}

	[Token(Token = "0x2000135")]
	public enum PlayingLevelState
	{
		[Token(Token = "0x4000868")]
		holographic,
		[Token(Token = "0x4000869")]
		production,
		[Token(Token = "0x400086A")]
		won,
		[Token(Token = "0x400086B")]
		options
	}

	[Token(Token = "0x2000136")]
	public enum LevelEnvironment
	{
		[Token(Token = "0x400086D")]
		subway,
		[Token(Token = "0x400086E")]
		tutorial,
		[Token(Token = "0x400086F")]
		reception,
		[Token(Token = "0x4000870")]
		testroom1,
		[Token(Token = "0x4000871")]
		testroom2,
		[Token(Token = "0x4000872")]
		testroom3,
		[Token(Token = "0x4000873")]
		testroom4,
		[Token(Token = "0x4000874")]
		testroom5,
		[Token(Token = "0x4000875")]
		testroom6,
		[Token(Token = "0x4000876")]
		testroom_passthrough
	}

	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA668C", Offset = "0xAA668C")]
	private sealed class <setButtonsCampaign>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NewGameManager <>4__this;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006A3")]
			[Address(RVA = "0xDB1144", Offset = "0xDB1144", VA = "0xDB1144", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006A5")]
			[Address(RVA = "0xDB118C", Offset = "0xDB118C", VA = "0xDB118C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xDB0DE4", Offset = "0xDB0DE4", VA = "0xDB0DE4")]
		[DebuggerHidden]
		public <setButtonsCampaign>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xDB0E10", Offset = "0xDB0E10", VA = "0xDB0E10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xDB0E14", Offset = "0xDB0E14", VA = "0xDB0E14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xDB114C", Offset = "0xDB114C", VA = "0xDB114C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA669C", Offset = "0xAA669C")]
	private sealed class <showLevelInfoScreenWorkshop_delayed>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NewGameManager <>4__this;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006A9")]
			[Address(RVA = "0xDB169C", Offset = "0xDB169C", VA = "0xDB169C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006AB")]
			[Address(RVA = "0xDB16E4", Offset = "0xDB16E4", VA = "0xDB16E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xDB15C8", Offset = "0xDB15C8", VA = "0xDB15C8")]
		[DebuggerHidden]
		public <showLevelInfoScreenWorkshop_delayed>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xDB15F4", Offset = "0xDB15F4", VA = "0xDB15F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xDB15F8", Offset = "0xDB15F8", VA = "0xDB15F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xDB16A4", Offset = "0xDB16A4", VA = "0xDB16A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000139")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA66AC", Offset = "0xAA66AC")]
	private sealed class <setButtonsWorkshop>d__104 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NewGameManager <>4__this;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006AF")]
			[Address(RVA = "0xDB1578", Offset = "0xDB1578", VA = "0xDB1578", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006B1")]
			[Address(RVA = "0xDB15C0", Offset = "0xDB15C0", VA = "0xDB15C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xDB1194", Offset = "0xDB1194", VA = "0xDB1194")]
		[DebuggerHidden]
		public <setButtonsWorkshop>d__104(int <>1__state)
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xDB11C0", Offset = "0xDB11C0", VA = "0xDB11C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xDB11C4", Offset = "0xDB11C4", VA = "0xDB11C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xDB1580", Offset = "0xDB1580", VA = "0xDB1580", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA66BC", Offset = "0xAA66BC")]
	private sealed class <getSpriteFromURL>d__108 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image target;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NewGameManager <>4__this;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string url;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006B5")]
			[Address(RVA = "0xDB0D94", Offset = "0xDB0D94", VA = "0xDB0D94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006B7")]
			[Address(RVA = "0xDB0DDC", Offset = "0xDB0DDC", VA = "0xDB0DDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xDB0B64", Offset = "0xDB0B64", VA = "0xDB0B64")]
		[DebuggerHidden]
		public <getSpriteFromURL>d__108(int <>1__state)
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xDB0B90", Offset = "0xDB0B90", VA = "0xDB0B90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xDB0B94", Offset = "0xDB0B94", VA = "0xDB0B94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xDB0D9C", Offset = "0xDB0D9C", VA = "0xDB0D9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA66CC", Offset = "0xAA66CC")]
	private sealed class <teleportAfterFadeOut>d__156 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NewGameManager <>4__this;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelEnvironment environment;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool forceReposition;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006BB")]
			[Address(RVA = "0xDB3068", Offset = "0xDB3068", VA = "0xDB3068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006BD")]
			[Address(RVA = "0xDB30B0", Offset = "0xDB30B0", VA = "0xDB30B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xDB1968", Offset = "0xDB1968", VA = "0xDB1968")]
		[DebuggerHidden]
		public <teleportAfterFadeOut>d__156(int <>1__state)
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xDB1994", Offset = "0xDB1994", VA = "0xDB1994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xDB1998", Offset = "0xDB1998", VA = "0xDB1998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xDB3070", Offset = "0xDB3070", VA = "0xDB3070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA66DC", Offset = "0xAA66DC")]
	private sealed class <delayed_downloadButtonSetActiveFalse>d__162 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NewGameManager <>4__this;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C1")]
			[Address(RVA = "0xDB0B14", Offset = "0xDB0B14", VA = "0xDB0B14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C3")]
			[Address(RVA = "0xDB0B5C", Offset = "0xDB0B5C", VA = "0xDB0B5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xDB0A38", Offset = "0xDB0A38", VA = "0xDB0A38")]
		[DebuggerHidden]
		public <delayed_downloadButtonSetActiveFalse>d__162(int <>1__state)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xDB0A64", Offset = "0xDB0A64", VA = "0xDB0A64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xDB0A68", Offset = "0xDB0A68", VA = "0xDB0A68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xDB0B1C", Offset = "0xDB0B1C", VA = "0xDB0B1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA66EC", Offset = "0xAA66EC")]
	private sealed class <UpdateVersionDisplay_delayed>d__184 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NewGameManager <>4__this;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C7")]
			[Address(RVA = "0xDAFFE0", Offset = "0xDAFFE0", VA = "0xDAFFE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C9")]
			[Address(RVA = "0xDB0028", Offset = "0xDB0028", VA = "0xDB0028", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xDAFF00", Offset = "0xDAFF00", VA = "0xDAFF00")]
		[DebuggerHidden]
		public <UpdateVersionDisplay_delayed>d__184(int <>1__state)
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xDAFF2C", Offset = "0xDAFF2C", VA = "0xDAFF2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xDAFF30", Offset = "0xDAFF30", VA = "0xDAFF30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xDAFFE8", Offset = "0xDAFFE8", VA = "0xDAFFE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA66FC", Offset = "0xAA66FC")]
	private sealed class <shownextbutton_delayed>d__195 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NewGameManager <>4__this;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006CD")]
			[Address(RVA = "0xDB1918", Offset = "0xDB1918", VA = "0xDB1918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006CF")]
			[Address(RVA = "0xDB1960", Offset = "0xDB1960", VA = "0xDB1960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xDB16EC", Offset = "0xDB16EC", VA = "0xDB16EC")]
		[DebuggerHidden]
		public <shownextbutton_delayed>d__195(int <>1__state)
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xDB1718", Offset = "0xDB1718", VA = "0xDB1718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xDB171C", Offset = "0xDB171C", VA = "0xDB171C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xDB1920", Offset = "0xDB1920", VA = "0xDB1920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA670C", Offset = "0xAA670C")]
	private sealed class <WaitAndPrint>d__223 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NewGameManager <>4__this;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D3")]
			[Address(RVA = "0xDB0588", Offset = "0xDB0588", VA = "0xDB0588", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006D5")]
			[Address(RVA = "0xDB05D0", Offset = "0xDB05D0", VA = "0xDB05D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xDB017C", Offset = "0xDB017C", VA = "0xDB017C")]
		[DebuggerHidden]
		public <WaitAndPrint>d__223(int <>1__state)
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xDB01A8", Offset = "0xDB01A8", VA = "0xDB01A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xDB01AC", Offset = "0xDB01AC", VA = "0xDB01AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xDB0590", Offset = "0xDB0590", VA = "0xDB0590", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA671C", Offset = "0xAA671C")]
	private sealed class <WaitAndPrint2>d__225 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NewGameManager <>4__this;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0xDB012C", Offset = "0xDB012C", VA = "0xDB012C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0xDB0174", Offset = "0xDB0174", VA = "0xDB0174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xDB0030", Offset = "0xDB0030", VA = "0xDB0030")]
		[DebuggerHidden]
		public <WaitAndPrint2>d__225(int <>1__state)
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xDB005C", Offset = "0xDB005C", VA = "0xDB005C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xDB0060", Offset = "0xDB0060", VA = "0xDB0060", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xDB0134", Offset = "0xDB0134", VA = "0xDB0134", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA672C", Offset = "0xAA672C")]
	private sealed class <ui_ingame_won_delayed>d__248 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NewGameManager <>4__this;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006DF")]
			[Address(RVA = "0xDB31E4", Offset = "0xDB31E4", VA = "0xDB31E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0xDB322C", Offset = "0xDB322C", VA = "0xDB322C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xDB30B8", Offset = "0xDB30B8", VA = "0xDB30B8")]
		[DebuggerHidden]
		public <ui_ingame_won_delayed>d__248(int <>1__state)
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xDB30E4", Offset = "0xDB30E4", VA = "0xDB30E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xDB30E8", Offset = "0xDB30E8", VA = "0xDB30E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xDB31EC", Offset = "0xDB31EC", VA = "0xDB31EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000142")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA673C", Offset = "0xAA673C")]
	private sealed class <GetCloudScores>d__251 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WWW www;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NewGameManager <>4__this;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E5")]
			[Address(RVA = "0xDAF320", Offset = "0xDAF320", VA = "0xDAF320", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E7")]
			[Address(RVA = "0xDAF368", Offset = "0xDAF368", VA = "0xDAF368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xDADAE8", Offset = "0xDADAE8", VA = "0xDADAE8")]
		[DebuggerHidden]
		public <GetCloudScores>d__251(int <>1__state)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xDADB14", Offset = "0xDADB14", VA = "0xDADB14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xDADB18", Offset = "0xDADB18", VA = "0xDADB18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xDAF328", Offset = "0xDAF328", VA = "0xDAF328", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000143")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA674C", Offset = "0xAA674C")]
	private sealed class <GetScore>d__276 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WWWForm form;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NewGameManager <>4__this;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool friends;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700008B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006EC")]
			[Address(RVA = "0xDAFEB0", Offset = "0xDAFEB0", VA = "0xDAFEB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006EE")]
			[Address(RVA = "0xDAFEF8", Offset = "0xDAFEF8", VA = "0xDAFEF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xDAF370", Offset = "0xDAF370", VA = "0xDAF370")]
		[DebuggerHidden]
		public <GetScore>d__276(int <>1__state)
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xDAF39C", Offset = "0xDAF39C", VA = "0xDAF39C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xDAF484", Offset = "0xDAF484", VA = "0xDAF484", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xDAF3C8", Offset = "0xDAF3C8", VA = "0xDAF3C8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xDAFEB8", Offset = "0xDAFEB8", VA = "0xDAFEB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA675C", Offset = "0xAA675C")]
	private sealed class <WaitForRequest>d__280 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WWW www;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NewGameManager <>4__this;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0xDB09E8", Offset = "0xDB09E8", VA = "0xDB09E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F4")]
			[Address(RVA = "0xDB0A30", Offset = "0xDB0A30", VA = "0xDB0A30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xDB05D8", Offset = "0xDB05D8", VA = "0xDB05D8")]
		[DebuggerHidden]
		public <WaitForRequest>d__280(int <>1__state)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xDB0604", Offset = "0xDB0604", VA = "0xDB0604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xDB0608", Offset = "0xDB0608", VA = "0xDB0608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xDB09F0", Offset = "0xDB09F0", VA = "0xDB09F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA304", Offset = "0xAAA304")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] levelGeos;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA33C", Offset = "0xAAA33C")]
	public bool debug;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem teleportParticles;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro leveltimeText;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject finishedTutorial1Object;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject finishedTutorial2Object;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform CameraParent;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] cameraHolders;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LevelManager levelManager;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] clippingClips;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int globalBallTimeout;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public LevelLoadingState levelloadingState;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameState gameState;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public MainMenuState mainMenuState;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public HandSettingsObjectsState handSettingsObjectsState;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public LevelEditorState leveleditorState;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PlayingLevelState playinglevelState;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA374", Offset = "0xAAA374")]
	public VR_UI_ElementHolder startgame;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public VR_UI_ElementHolder mainMenu;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public VR_UI_ElementHolder optionsMenu;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public VR_UI_ElementHolder graphicsoptionsmenu;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public VR_UI_ElementHolder levelSelection_Menu;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public VR_UI_ElementHolder workshop_Menu;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public VR_UI_ElementHolder levelinfo;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public VF_UI levelSelection_levelgrid;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public VR_UI_ElementHolder leveleditor_StageButtons;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public VR_UI_ElementHolder levelPage_Buttons;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public VR_UI_ElementHolder levelPage_Buttons_editor;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public VF_UIELement leveleditor_LoadLevel;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public VF_UI leveleditor_LoadLevel_c;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public VR_UI_ElementHolder leveleditor_handsettings;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public VR_UI_ElementHolder leveleditor_levelsettings;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public VR_UI_ElementHolder leveleditor_handsettings_overview;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public VR_UI_ElementHolder leveleditor_handsettings_board;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public VR_UI_ElementHolder leveleditor_handsettings_tube;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public VR_UI_ElementHolder leveleditor_handsettings_sensor;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public VR_UI_ElementHolder leveleditor_handsettings_modifier;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public VR_UI_ElementHolder leveleditor_handsettings_pump;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public VR_UI_ElementHolder leveleditor_handsettings_gate;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public VR_UI_ElementHolder leveleditor_handsettings_scale;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public VR_UI_ElementHolder leveleditor_handsettings_ratioscale;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public VR_UI_ElementHolder leveleditor_handsettings_sensormanager;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public VR_UI_ElementHolder leveleditor_handsettings_bouncer;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public VR_UI_ElementHolder leveleditor_handsettings_gravityAdjuster;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public VR_UI_ElementHolder leveleditor_SaveLevel;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public VF_UIELement leveleditor_SavedFile;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public VF_UIELement leveleditor_NotSavedFile;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public VR_UI_ElementHolder ingameUI_holographic;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public VF_UIELement ingameUI_holographic_playbutton;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public VR_UI_ElementHolder ingameUI_holographic_normalbuttons;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public VR_UI_ElementHolder ingameUI_holographic_leveleditorbuttons;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public VR_UI_ElementHolder ingameUI_production;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public VR_UI_ElementHolder ingameUI_won;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public VR_UI_ElementHolder ingameUI_options;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public VF_UIELement nextLevelButton;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Transform lastTeleportTarget;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public AudioSource[] narrationSources;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA3AC", Offset = "0xAAA3AC")]
	public Image spriteLEvel;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Renderer leveninfopicture;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public VF_UIELement easyButton;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public VF_UIELement mediumButton;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public VF_UIELement hardButton;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public VF_UIELement creationButton;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public VF_UIELement easyWonButton;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public VF_UIELement mediumWonButton;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public VF_UIELement hardWonButton;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public RoundIndicator easyIndicator;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public RoundIndicator mediumIndicator;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public RoundIndicator hardIndicator;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public RoundIndicator easyWonIndicator;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public RoundIndicator mediumWonIndicator;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public RoundIndicator hardWonIndicator;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public bool easyUnlocked;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x249")]
	public bool mediumUnlocked;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24A")]
	public bool hardUnlocked;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject startButton;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject downloadButton;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject deleteButton;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject homeButton;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public string stringPayloadforWorkshop;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public bool currentLevelNeedsChecking;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA3E4", Offset = "0xAAA3E4")]
	public Camera ovrcam;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Camera vivecam;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public Terrain moonTerrain;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public TerrainCollider terrainCollider;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Material moonMaterial;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public Material wireframeMaterial;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Transform cameraHolder;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject subwayGeo;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject receptionGeo;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject testroom1Geo;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject testroom2Geo;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public GameObject testroom3Geo;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public GameObject testroom4Geo;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public GameObject airlock_tutorial_Geo;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public GameObject testroom5Geo;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public GameObject testroom6Geo;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public GameObject testroom_passthroughGeo;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public GameObject secretObject;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public GameObject airlock_1_Geo;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public GameObject airlock_2_Geo;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public GameObject airlock_3_Geo;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public Transform subwayStartPos;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public Transform receptionStartPos;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public Transform receptionGameRestartPos;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public Transform testroom1StartPos;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public Transform testroom2StartPos;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public Transform testroom3StartPos;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public Transform testroom4StartPos;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public Transform airlockStartPos;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public Transform testroom5StartPos;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public Transform testroom6StartPos;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public Transform testroom_passthroughStartPos;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public Transform subwayObjectsPos;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public Transform receptionObjectsPos;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public Transform testroom1ObjectsPos;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public Transform testroom2ObjectsPos;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public Transform testroom3ObjectsPos;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public Transform testroom4ObjectsPos;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public Transform airlockObjectsPos;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public Transform testroom5ObjectsPos;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public Transform testroom6ObjectsPos;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public Transform testroom_passthroughObjectPos;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public FollowTarget followTarget;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public LevelEnvironment currentEnvironment;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public FadeSphere[] fadespheres;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public VR_UI_ElementHolder leveleditor_newLevelEnvironmentButtons;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public VF_UIELement loadprogressbutton;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA41C", Offset = "0xAAA41C")]
	public HandUIController leftHand;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA454", Offset = "0xAAA454")]
	public HandUIController rightHand;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public HandUIController leftHandOVR;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public HandUIController rightHandOVR;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA48C", Offset = "0xAAA48C")]
	public int mode;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public string filename;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public string levelname;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public GameObject confetti;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA4C4", Offset = "0xAAA4C4")]
	private bool loadednextlevelinfoafterwin;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public TextMeshPro collisionTexts;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public GameObject[] level_cards;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public AudioClip winSound;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public AudioSource handAudio;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public bool forceWin;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public PartsWatcher partsWatcher;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public PartsSpawner partsSpawner;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public ReflectionProbe[] reflectionProbes;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public float leveltimer;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public VF_UIELement playlevelButton;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public int ringScore;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
	public int timeBonus;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public int partDeduction;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49C")]
	public int ballDeduction;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public TextMeshPro finishedLevel_Text;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public TextMeshPro finalScore_Text;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public TextMeshPro localScore_Text1;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public TextMeshPro localScore_Text2;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public TextMeshPro localScore_Text3;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	public TextMeshPro localScore_Text4;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public TextMeshPro localScore_Text5;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public bool levelwon;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public VF_UIELement finishTutorialButton;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public VF_UIELement winscreenButton1;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public VF_UIELement winscreenButton2;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	public VF_UIELement winscreenButton3;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public float updateTimer;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x504")]
	private float updateInterval;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public VF_UIELement levelnameTitleCard;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	public VF_UIELement campaign_titlecard;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	public VF_UIELement workshop_titlecard;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	public TextMeshPro levelnameText;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	public TextMeshPro leveldifficulty;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	public TextMeshPro leveldesc;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	public TextMeshPro leveldownloadslikes;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public TextMeshPro highscoreTextMainMenu;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	public TextMeshPro levelPreviewScoreNamesFriendsText;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	public TextMeshPro levelPreviewScoreScoresFriendsText;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	public TextMeshPro levelPreviewScoreNamesGlobalText;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public TextMeshPro levelPreviewScoreScoresGlobalText;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
	public TextMeshPro levelFinishScoreNamesFriendsText;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public TextMeshPro levelFinishScoreScoresFriendsText;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	public TextMeshPro levelFinishScoreNamesGlobalText;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	public TextMeshPro levelFinishScoreScoresGlobalText;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	public string wwwResponseText;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	public string tweetstring;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	private int segments_needed;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59C")]
	private int current_segment;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	private byte[] twitterdata;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
	public string mediaID;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	public bool mediaReady;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B4")]
	public int gameVersion;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xBF86E4", Offset = "0xBF86E4", VA = "0xBF86E4")]
	public void setGameState_mainmenu()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xBF86F0", Offset = "0xBF86F0", VA = "0xBF86F0")]
	public void ui_startGame()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xBF87A0", Offset = "0xBF87A0", VA = "0xBF87A0")]
	public void resetPlaySpacePosition()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xBF8998", Offset = "0xBF8998", VA = "0xBF8998")]
	public void resetPlaySpacePositionSame()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xBF8D98", Offset = "0xBF8D98", VA = "0xBF8D98")]
	public void resetPosition()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xBF8A78", Offset = "0xBF8A78", VA = "0xBF8A78")]
	public void resetPlaySpacePosition(Transform targetpos, bool force = false)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xBF8F38", Offset = "0xBF8F38", VA = "0xBF8F38")]
	public void ui_mainmenu_options()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xBF8F8C", Offset = "0xBF8F8C", VA = "0xBF8F8C")]
	public void ui_optionsmenu_back()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xBF9398", Offset = "0xBF9398", VA = "0xBF9398")]
	public void ui_mainmenu_sandbox()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xBF94F0", Offset = "0xBF94F0", VA = "0xBF94F0")]
	public void ui_mainmenu_levelselection()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xBF9580", Offset = "0xBF9580", VA = "0xBF9580")]
	public void ui_mainmenu_workshop()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xBF9610", Offset = "0xBF9610", VA = "0xBF9610")]
	public void showLevelInfoScreen()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xBFAE4C", Offset = "0xBFAE4C", VA = "0xBFAE4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAA3C", Offset = "0xABAA3C")]
	private IEnumerator setButtonsCampaign()
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xBFAEB8", Offset = "0xBFAEB8", VA = "0xBFAEB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAA9C", Offset = "0xABAA9C")]
	private IEnumerator showLevelInfoScreenWorkshop_delayed()
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xBFAF24", Offset = "0xBFAF24", VA = "0xBFAF24")]
	public void showLevelInfoScreenWorkshop_after1s()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xBFAF50", Offset = "0xBFAF50", VA = "0xBFAF50")]
	public void showLevelInfoScreenWorkshop()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xBFAF58", Offset = "0xBFAF58", VA = "0xBFAF58")]
	public void showLevelInfoScreenWorkshop(string stringPayload2)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xBFB6FC", Offset = "0xBFB6FC", VA = "0xBFB6FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAAFC", Offset = "0xABAAFC")]
	private IEnumerator setButtonsWorkshop()
	{
		return null;
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xBFB768", Offset = "0xBFB768", VA = "0xBFB768")]
	public void downloadLevel()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xBFB86C", Offset = "0xBFB86C", VA = "0xBFB86C")]
	public void deleteLevel()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xBFB67C", Offset = "0xBFB67C", VA = "0xBFB67C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAB5C", Offset = "0xABAB5C")]
	private IEnumerator getSpriteFromURL(string url, Image target)
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xBFBB68", Offset = "0xBFBB68", VA = "0xBFBB68")]
	public void ui_playselected_level()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xBF8DE8", Offset = "0xBF8DE8", VA = "0xBF8DE8")]
	public void ToggleARNonMiniatureFloor()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xBFBBFC", Offset = "0xBFBBFC", VA = "0xBFBBFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABABBC", Offset = "0xABABBC")]
	private IEnumerator teleportAfterFadeOut(LevelEnvironment environment, bool forceReposition = true)
	{
		return null;
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xBF882C", Offset = "0xBF882C", VA = "0xBF882C")]
	public void loadEnvironment(LevelEnvironment environment, bool forceReposition = true)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xBFBC84", Offset = "0xBFBC84", VA = "0xBFBC84")]
	public void ui_levelselection_back()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xBFBD78", Offset = "0xBFBD78", VA = "0xBFBD78")]
	public void ui_levelselection_stage(int stageid)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xBFBE34", Offset = "0xBFBE34", VA = "0xBFBE34")]
	public void ui_levelselection_custom()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xBFBF3C", Offset = "0xBFBF3C", VA = "0xBFBF3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAC1C", Offset = "0xABAC1C")]
	private IEnumerator delayed_downloadButtonSetActiveFalse()
	{
		return null;
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xBFBFA8", Offset = "0xBFBFA8", VA = "0xBFBFA8")]
	public void ui_mainmenu_leveleditor()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xBFC0CC", Offset = "0xBFC0CC", VA = "0xBFC0CC")]
	public void ui_leveleditor_back()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xBFC368", Offset = "0xBFC368", VA = "0xBFC368")]
	public void ui_leveleditor_empty()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xBFC57C", Offset = "0xBFC57C", VA = "0xBFC57C")]
	public void ui_leveleditor_load()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xBFC76C", Offset = "0xBFC76C", VA = "0xBFC76C")]
	public void ui_leveleditor_loadlevel(int stage, int id)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xBFC954", Offset = "0xBFC954", VA = "0xBFC954")]
	public void ui_leveleditor_placeparts()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xBFCB74", Offset = "0xBFCB74", VA = "0xBFCB74")]
	public void ui_leveleditor_handsettings()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xBFCD98", Offset = "0xBFCD98", VA = "0xBFCD98")]
	public void ui_leveleditor_levelsettings()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xBFCFBC", Offset = "0xBFCFBC", VA = "0xBFCFBC")]
	public void ui_leveleditor_handsettings_sensor()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xBFD090", Offset = "0xBFD090", VA = "0xBFD090")]
	public void ui_leveleditor_handsettings_sensormanager()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xBFD164", Offset = "0xBFD164", VA = "0xBFD164")]
	public void ui_leveleditor_handsettings_modifier()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xBFD238", Offset = "0xBFD238", VA = "0xBFD238")]
	public void ui_leveleditor_handsettings_board()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xBFD30C", Offset = "0xBFD30C", VA = "0xBFD30C")]
	public void ui_leveleditor_handsettings_bouncer()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xBFD3E0", Offset = "0xBFD3E0", VA = "0xBFD3E0")]
	public void ui_leveleditor_handsettings_gravityAdjuster()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xBFD4B4", Offset = "0xBFD4B4", VA = "0xBFD4B4")]
	public void ui_leveleditor_handsettings_tube()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xBFD588", Offset = "0xBFD588", VA = "0xBFD588")]
	public void ui_leveleditor_handsettings_pump()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xBFD64C", Offset = "0xBFD64C", VA = "0xBFD64C")]
	public void ui_leveleditor_handsettings_gate()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xBFD720", Offset = "0xBFD720", VA = "0xBFD720")]
	public void ui_leveleditor_handsettings_scale()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xBFD7F4", Offset = "0xBFD7F4", VA = "0xBFD7F4")]
	public void ui_leveleditor_handsettings_ratioscale()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xBFD8C8", Offset = "0xBFD8C8", VA = "0xBFD8C8")]
	public void ui_leveleditor_save()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xBFDB00", Offset = "0xBFDB00", VA = "0xBFDB00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAC7C", Offset = "0xABAC7C")]
	private IEnumerator UpdateVersionDisplay_delayed()
	{
		return null;
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xBFDB6C", Offset = "0xBFDB6C", VA = "0xBFDB6C")]
	public void ui_leveleditor_savedfile(int stage, int id)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xBFDD5C", Offset = "0xBFDD5C", VA = "0xBFDD5C")]
	public void ui_ingame_playbutton()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xBFE3CC", Offset = "0xBFE3CC", VA = "0xBFE3CC")]
	public void ui_ingame_pausebutton()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xBFE450", Offset = "0xBFE450", VA = "0xBFE450")]
	public void ui_ingame_optionsbutton()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xBFE4FC", Offset = "0xBFE4FC", VA = "0xBFE4FC")]
	public void ui_ingameoptions_back()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xBFE580", Offset = "0xBFE580", VA = "0xBFE580")]
	public void ui_ingameoptions_options()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xBFE5CC", Offset = "0xBFE5CC", VA = "0xBFE5CC")]
	public void ui_ingameoptions_restart()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xBFE5D0", Offset = "0xBFE5D0", VA = "0xBFE5D0")]
	public void ui_ingameoptions_home()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xBFE6AC", Offset = "0xBFE6AC", VA = "0xBFE6AC")]
	public void ui_ingame_won()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xBFEBC8", Offset = "0xBFEBC8", VA = "0xBFEBC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABACDC", Offset = "0xABACDC")]
	private IEnumerator shownextbutton_delayed()
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xBFEC34", Offset = "0xBFEC34", VA = "0xBFEC34")]
	public void displayUIonButtonDown()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xBFF018", Offset = "0xBFF018", VA = "0xBFF018")]
	public void hideUIonButtonUp()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xBF9068", Offset = "0xBF9068", VA = "0xBF9068")]
	public void hideAllUIItems()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xBFF01C", Offset = "0xBFF01C", VA = "0xBFF01C")]
	public void ui_replay_level()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xBFF0B8", Offset = "0xBFF0B8", VA = "0xBFF0B8")]
	public void ui_play_nextlevel()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xC00F3C", Offset = "0xC00F3C", VA = "0xC00F3C")]
	public void exitGame()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xC00F44", Offset = "0xC00F44", VA = "0xC00F44")]
	public void ToggleCollision()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xC010C0", Offset = "0xC010C0", VA = "0xC010C0")]
	public void playLevel()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xBFDDF8", Offset = "0xBFDDF8", VA = "0xBFDDF8")]
	public void toggleMode()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xC01398", Offset = "0xC01398", VA = "0xC01398")]
	public bool checkWinConditions()
	{
		return default(bool);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xC0140C", Offset = "0xC0140C", VA = "0xC0140C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xC01504", Offset = "0xC01504", VA = "0xC01504")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAD3C", Offset = "0xABAD3C")]
	private IEnumerator WaitAndPrint(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xC01580", Offset = "0xC01580", VA = "0xC01580")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAD9C", Offset = "0xABAD9C")]
	private IEnumerator WaitAndPrint2(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xC015FC", Offset = "0xC015FC", VA = "0xC015FC")]
	public void Update()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xC01658", Offset = "0xC01658", VA = "0xC01658")]
	private void MyFixedUpdate()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xC026C8", Offset = "0xC026C8", VA = "0xC026C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABADFC", Offset = "0xABADFC")]
	private IEnumerator ui_ingame_won_delayed()
	{
		return null;
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xBFA174", Offset = "0xBFA174", VA = "0xBFA174")]
	private bool isCampaignLevel(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xC02F88", Offset = "0xC02F88", VA = "0xC02F88")]
	public void CloudSync()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xC0313C", Offset = "0xC0313C", VA = "0xC0313C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAE5C", Offset = "0xABAE5C")]
	private IEnumerator GetCloudScores(WWW www)
	{
		return null;
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xBFA7B0", Offset = "0xBFA7B0", VA = "0xBFA7B0")]
	public void getGlobalScores(string level, int lvlversion)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xC03248", Offset = "0xC03248", VA = "0xC03248")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xABAEBC", Offset = "0xABAEBC")]
	public void getFriendScoresFake()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xBFA2A4", Offset = "0xBFA2A4", VA = "0xBFA2A4")]
	public void getFriendScores(string level, int lvlversion)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xC03788", Offset = "0xC03788", VA = "0xC03788")]
	public string Base64Encode(string plainText)
	{
		return null;
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xC03818", Offset = "0xC03818", VA = "0xC03818")]
	public string Base64Decode(string base64EncodedData)
	{
		return null;
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xC038A4", Offset = "0xC038A4", VA = "0xC038A4")]
	public bool IsBase64String(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xC0373C", Offset = "0xC0373C", VA = "0xC0373C")]
	public bool HasNonASCIIChars(string str)
	{
		return default(bool);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xC031B4", Offset = "0xC031B4", VA = "0xC031B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAEF4", Offset = "0xABAEF4")]
	private IEnumerator GetScore(string url, WWWForm form, bool friends)
	{
		return null;
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xC02734", Offset = "0xC02734", VA = "0xC02734")]
	private void SubmitScores(int score, string level, int lvlversion)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xC039D4", Offset = "0xC039D4", VA = "0xC039D4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xABAF54", Offset = "0xABAF54")]
	public void FakePicoScore()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xC0422C", Offset = "0xC0422C", VA = "0xC0422C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xABAF8C", Offset = "0xABAF8C")]
	public void FakePicoScoreEnglish()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xC0395C", Offset = "0xC0395C", VA = "0xC0395C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAFC4", Offset = "0xABAFC4")]
	private IEnumerator WaitForRequest(WWW www)
	{
		return null;
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xC04A84", Offset = "0xC04A84", VA = "0xC04A84")]
	public void Tweet(string s, byte[] data, bool ispicture)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xC04A88", Offset = "0xC04A88", VA = "0xC04A88")]
	private void OnPostTweet(bool success)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xC04B4C", Offset = "0xC04B4C", VA = "0xC04B4C")]
	private void OnMediaUpload(bool success, string text)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xC04BF4", Offset = "0xC04BF4", VA = "0xC04BF4")]
	private void OnChunkedInit(bool success, string text)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xC04E68", Offset = "0xC04E68", VA = "0xC04E68")]
	public NewGameManager()
	{
	}
}
[Token(Token = "0x2000145")]
public class OSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000146")]
	public enum OSP_Priority
	{
		[Token(Token = "0x40008C7")]
		PRI_Highest,
		[Token(Token = "0x40008C8")]
		PRI_1,
		[Token(Token = "0x40008C9")]
		PRI_2,
		[Token(Token = "0x40008CA")]
		PRI_3,
		[Token(Token = "0x40008CB")]
		PRI_4,
		[Token(Token = "0x40008CC")]
		PRI_5,
		[Token(Token = "0x40008CD")]
		PRI_6,
		[Token(Token = "0x40008CE")]
		PRI_7,
		[Token(Token = "0x40008CF")]
		PRI_8,
		[Token(Token = "0x40008D0")]
		PRI_Lowest
	}

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OSP_Priority priority;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool bypass;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	private bool playOnAwake;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int frequencyHint;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool useSimple;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	private bool disableReflections;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[SerializeField]
	private bool useInverseSquare;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float falloffNear;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float falloffFar;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioListener audioListener;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int context;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isPlaying;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float panLevel;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float spread;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool drain;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float drainTime;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 relPos;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 relVel;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float relPosTime;

	[Token(Token = "0x40008C2")]
	private const int sNoContext = -1;

	[Token(Token = "0x40008C3")]
	private const float sSetPanLevel = 1f;

	[Token(Token = "0x40008C4")]
	private const float sSetPanLevelInvSq = 0f;

	[Token(Token = "0x40008C5")]
	private const float sSetSpread = 180f;

	[Token(Token = "0x1700008F")]
	public OSP_Priority Priority
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x1152BB0", Offset = "0x1152BB0", VA = "0x1152BB0")]
		get
		{
			return default(OSP_Priority);
		}
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x1152BB8", Offset = "0x1152BB8", VA = "0x1152BB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public bool Bypass
	{
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x1152BD0", Offset = "0x1152BD0", VA = "0x1152BD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x1152BD8", Offset = "0x1152BD8", VA = "0x1152BD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public bool PlayOnAwake
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x1152BE4", Offset = "0x1152BE4", VA = "0x1152BE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x1152BEC", Offset = "0x1152BEC", VA = "0x1152BEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public int FrequencyHint
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x1152BF8", Offset = "0x1152BF8", VA = "0x1152BF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x1152C00", Offset = "0x1152C00", VA = "0x1152C00")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public bool UseSimple
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x1152C18", Offset = "0x1152C18", VA = "0x1152C18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x1152C20", Offset = "0x1152C20", VA = "0x1152C20")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public bool DisableReflections
	{
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x1152C2C", Offset = "0x1152C2C", VA = "0x1152C2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x1152C34", Offset = "0x1152C34", VA = "0x1152C34")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public bool UseInverseSquare
	{
		[Token(Token = "0x6000701")]
		[Address(RVA = "0x1152C40", Offset = "0x1152C40", VA = "0x1152C40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1152C48", Offset = "0x1152C48", VA = "0x1152C48")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public float FalloffNear
	{
		[Token(Token = "0x6000703")]
		[Address(RVA = "0x1152D98", Offset = "0x1152D98", VA = "0x1152D98")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000704")]
		[Address(RVA = "0x1152DA0", Offset = "0x1152DA0", VA = "0x1152DA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public float FalloffFar
	{
		[Token(Token = "0x6000705")]
		[Address(RVA = "0x1152DD8", Offset = "0x1152DD8", VA = "0x1152DD8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000706")]
		[Address(RVA = "0x1152DE0", Offset = "0x1152DE0", VA = "0x1152DE0")]
		set
		{
		}
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1152E18", Offset = "0x1152E18", VA = "0x1152E18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x1152F24", Offset = "0x1152F24", VA = "0x1152F24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1153220", Offset = "0x1153220", VA = "0x1153220")]
	private void Update()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1154040", Offset = "0x1154040", VA = "0x1154040")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x1154044", Offset = "0x1154044", VA = "0x1154044")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1154048", Offset = "0x1154048", VA = "0x1154048")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x11536E8", Offset = "0x11536E8", VA = "0x11536E8")]
	private void Aquire()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1153BEC", Offset = "0x1153BEC", VA = "0x1153BEC")]
	private void Release()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x11538A4", Offset = "0x11538A4", VA = "0x11538A4")]
	private void SetRelativeSoundPos(bool firstTime)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1153020", Offset = "0x1153020", VA = "0x1153020")]
	public void Play()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x11542FC", Offset = "0x11542FC", VA = "0x11542FC")]
	public void PlayDelayed(float delay)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x115450C", Offset = "0x115450C", VA = "0x115450C")]
	public void PlayScheduled(double time)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1153EC0", Offset = "0x1153EC0", VA = "0x1153EC0")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x115471C", Offset = "0x115471C", VA = "0x115471C")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x11547F0", Offset = "0x11547F0", VA = "0x11547F0")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x11542D4", Offset = "0x11542D4", VA = "0x11542D4")]
	private float GetTime(bool dspTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1152C54", Offset = "0x1152C54", VA = "0x1152C54")]
	private void UpdateLocalInvSq()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1154C3C", Offset = "0x1154C3C", VA = "0x1154C3C")]
	public OSPAudioSource()
	{
	}
}
[Token(Token = "0x2000147")]
public class OSPManager : MonoBehaviour
{
	[Token(Token = "0x2000148")]
	public struct RoomModel
	{
		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Enable;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int ReflectionOrder;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float DimensionX;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float DimensionY;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float DimensionZ;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Reflection_K0;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Reflection_K1;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Reflection_K2;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Reflection_K3;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Reflection_K4;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Reflection_K5;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ReverbOn;
	}

	[Token(Token = "0x40008D1")]
	public const string strOSP = "OculusSpatializerPlugin";

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int bufferSize;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int sampleRate;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool bypass;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool useSimple;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float globalScale;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool useInverseSquare;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float falloffNear;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float falloffFar;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool dirtyReflection;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool enableReflections;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[SerializeField]
	private bool enableReverb;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Vector3 dimensions;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector2 rK01;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Vector2 rK23;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector2 rK45;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool sOSPInit;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OSPManager sInstance;

	[Token(Token = "0x17000098")]
	public int BufferSize
	{
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x11557E4", Offset = "0x11557E4", VA = "0x11557E4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600072F")]
		[Address(RVA = "0x11557EC", Offset = "0x11557EC", VA = "0x11557EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public int SampleRate
	{
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x11557F4", Offset = "0x11557F4", VA = "0x11557F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000731")]
		[Address(RVA = "0x11557FC", Offset = "0x11557FC", VA = "0x11557FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public bool Bypass
	{
		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1155804", Offset = "0x1155804", VA = "0x1155804")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000733")]
		[Address(RVA = "0x115585C", Offset = "0x115585C", VA = "0x115585C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public bool UseSimple
	{
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x11558D0", Offset = "0x11558D0", VA = "0x11558D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x11558D8", Offset = "0x11558D8", VA = "0x11558D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public float GlobalScale
	{
		[Token(Token = "0x6000736")]
		[Address(RVA = "0x115594C", Offset = "0x115594C", VA = "0x115594C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x1155954", Offset = "0x1155954", VA = "0x1155954")]
		set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public float Gain
	{
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x11559E4", Offset = "0x11559E4", VA = "0x11559E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x11559EC", Offset = "0x11559EC", VA = "0x11559EC")]
		set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public bool UseInverseSquare
	{
		[Token(Token = "0x600073A")]
		[Address(RVA = "0x1155A74", Offset = "0x1155A74", VA = "0x1155A74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600073B")]
		[Address(RVA = "0x1155A7C", Offset = "0x1155A7C", VA = "0x1155A7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public float FalloffNear
	{
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x1155AF0", Offset = "0x1155AF0", VA = "0x1155AF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1155AF8", Offset = "0x1155AF8", VA = "0x1155AF8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public float FalloffFar
	{
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1155B8C", Offset = "0x1155B8C", VA = "0x1155B8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1155B94", Offset = "0x1155B94", VA = "0x1155B94")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public bool EnableReflections
	{
		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1155C28", Offset = "0x1155C28", VA = "0x1155C28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1155C30", Offset = "0x1155C30", VA = "0x1155C30")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public bool EnableReverb
	{
		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1155C44", Offset = "0x1155C44", VA = "0x1155C44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1155C4C", Offset = "0x1155C4C", VA = "0x1155C4C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public Vector3 Dimensions
	{
		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1155C60", Offset = "0x1155C60", VA = "0x1155C60")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x1155C6C", Offset = "0x1155C6C", VA = "0x1155C6C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public Vector2 RK01
	{
		[Token(Token = "0x6000747")]
		[Address(RVA = "0x1155CF8", Offset = "0x1155CF8", VA = "0x1155CF8")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000748")]
		[Address(RVA = "0x1155D00", Offset = "0x1155D00", VA = "0x1155D00")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public Vector2 RK23
	{
		[Token(Token = "0x6000749")]
		[Address(RVA = "0x1155D68", Offset = "0x1155D68", VA = "0x1155D68")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x600074A")]
		[Address(RVA = "0x1155D70", Offset = "0x1155D70", VA = "0x1155D70")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public Vector2 RK45
	{
		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1155DD8", Offset = "0x1155DD8", VA = "0x1155DD8")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x600074C")]
		[Address(RVA = "0x1155DE0", Offset = "0x1155DE0", VA = "0x1155DE0")]
		set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x6000719")]
	[Address(RVA = "0x1154C68", Offset = "0x1154C68", VA = "0x1154C68")]
	private static extern bool OSP_Init(int sample_rate, int buffer_size);

	[PreserveSig]
	[Token(Token = "0x600071A")]
	[Address(RVA = "0x1154CFC", Offset = "0x1154CFC", VA = "0x1154CFC")]
	private static extern bool OSP_Exit();

	[PreserveSig]
	[Token(Token = "0x600071B")]
	[Address(RVA = "0x1154D78", Offset = "0x1154D78", VA = "0x1154D78")]
	private static extern bool OSP_UpdateRoomModel(ref RoomModel rm);

	[PreserveSig]
	[Token(Token = "0x600071C")]
	[Address(RVA = "0x1154E4C", Offset = "0x1154E4C", VA = "0x1154E4C")]
	private static extern void OSP_SetReflectionsRangeMax(float range);

	[PreserveSig]
	[Token(Token = "0x600071D")]
	[Address(RVA = "0x1154ED0", Offset = "0x1154ED0", VA = "0x1154ED0")]
	private static extern int OSP_AquireContext();

	[PreserveSig]
	[Token(Token = "0x600071E")]
	[Address(RVA = "0x1154F44", Offset = "0x1154F44", VA = "0x1154F44")]
	private static extern void OSP_ReturnContext(int context);

	[PreserveSig]
	[Token(Token = "0x600071F")]
	[Address(RVA = "0x1154FC4", Offset = "0x1154FC4", VA = "0x1154FC4")]
	private static extern bool OSP_GetBypass();

	[PreserveSig]
	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1155040", Offset = "0x1155040", VA = "0x1155040")]
	private static extern void OSP_SetBypass(bool bypass);

	[PreserveSig]
	[Token(Token = "0x6000721")]
	[Address(RVA = "0x11550C0", Offset = "0x11550C0", VA = "0x11550C0")]
	private static extern bool OSP_GetUseSimple();

	[PreserveSig]
	[Token(Token = "0x6000722")]
	[Address(RVA = "0x115513C", Offset = "0x115513C", VA = "0x115513C")]
	private static extern void OSP_SetUseSimple(bool useSimple);

	[PreserveSig]
	[Token(Token = "0x6000723")]
	[Address(RVA = "0x11551BC", Offset = "0x11551BC", VA = "0x11551BC")]
	private static extern void OSP_SetGlobalScale(float globalScale);

	[PreserveSig]
	[Token(Token = "0x6000724")]
	[Address(RVA = "0x1155240", Offset = "0x1155240", VA = "0x1155240")]
	private static extern bool OSP_GetUseInverseSquareAttenuation();

	[PreserveSig]
	[Token(Token = "0x6000725")]
	[Address(RVA = "0x11552BC", Offset = "0x11552BC", VA = "0x11552BC")]
	private static extern void OSP_SetUseInverseSquareAttenuation(bool useInvSq);

	[PreserveSig]
	[Token(Token = "0x6000726")]
	[Address(RVA = "0x115533C", Offset = "0x115533C", VA = "0x115533C")]
	private static extern void OSP_SetFalloffRangeGlobal(float nearRange, float farRange);

	[PreserveSig]
	[Token(Token = "0x6000727")]
	[Address(RVA = "0x11553C8", Offset = "0x11553C8", VA = "0x11553C8")]
	private static extern void OSP_SetFalloffRangeLocal(int contextAndSound, float nearRange, float farRange);

	[PreserveSig]
	[Token(Token = "0x6000728")]
	[Address(RVA = "0x1155460", Offset = "0x1155460", VA = "0x1155460")]
	private static extern void OSP_SetGain(float gain);

	[PreserveSig]
	[Token(Token = "0x6000729")]
	[Address(RVA = "0x11554E4", Offset = "0x11554E4", VA = "0x11554E4")]
	private static extern void OSP_SetFrequencyHint(int context, int hint);

	[PreserveSig]
	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1155574", Offset = "0x1155574", VA = "0x1155574")]
	private static extern void OSP_SetDisableReflectionsOnSound(int contextAndSound, bool disable);

	[PreserveSig]
	[Token(Token = "0x600072B")]
	[Address(RVA = "0x1155604", Offset = "0x1155604", VA = "0x1155604")]
	private static extern float OSP_GetDrainTime(int context);

	[PreserveSig]
	[Token(Token = "0x600072C")]
	[Address(RVA = "0x1155684", Offset = "0x1155684", VA = "0x1155684")]
	private static extern void OSP_SetPositonRelXYZ(int context, float x, float y, float z);

	[PreserveSig]
	[Token(Token = "0x600072D")]
	[Address(RVA = "0x115572C", Offset = "0x115572C", VA = "0x115572C")]
	private static extern void OSP_Spatialize(int context, float[] ioBuf, bool useInvSq, float near, float far);

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x1154BB0", Offset = "0x1154BB0", VA = "0x1154BB0")]
	public void GetNearFarFalloffValues(ref float n, ref float f)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x1155E48", Offset = "0x1155E48", VA = "0x1155E48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x11562A8", Offset = "0x11562A8", VA = "0x11562A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x11562AC", Offset = "0x11562AC", VA = "0x11562AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x115637C", Offset = "0x115637C", VA = "0x115637C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x11563E0", Offset = "0x11563E0", VA = "0x11563E0")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x115421C", Offset = "0x115421C", VA = "0x115421C")]
	public static int AquireContext()
	{
		return default(int);
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x1154274", Offset = "0x1154274", VA = "0x1154274")]
	public static void ReleaseContext(int context)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x1153CD0", Offset = "0x1153CD0", VA = "0x1153CD0")]
	public static bool GetBypass()
	{
		return default(bool);
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x1154164", Offset = "0x1154164", VA = "0x1154164")]
	public static bool GetUseSimple()
	{
		return default(bool);
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x11541BC", Offset = "0x11541BC", VA = "0x11541BC")]
	public static void SetUseSimple(bool use)
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x1153D28", Offset = "0x1153D28", VA = "0x1153D28")]
	public static bool GetUseInverseSquareAttenuation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x1153D80", Offset = "0x1153D80", VA = "0x1153D80")]
	public static void SetFrequencyHint(int context, int hint)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1153DF0", Offset = "0x1153DF0", VA = "0x1153DF0")]
	public static void SetDisableReflectionsOnSound(int context, bool disable)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1153E60", Offset = "0x1153E60", VA = "0x1153E60")]
	public static float GetDrainTime(int context)
	{
		return default(float);
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x1154A28", Offset = "0x1154A28", VA = "0x1154A28")]
	public static void SetPositionRel(int context, float x, float y, float z)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x1154AE8", Offset = "0x1154AE8", VA = "0x1154AE8")]
	public static void Spatialize(int context, float[] ioBuf, bool useInvSq, float near, float far)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x1154BC4", Offset = "0x1154BC4", VA = "0x1154BC4")]
	public static void SetFalloffRangeLocal(int contextAndSound, float nearRange, float farRange)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1156444", Offset = "0x1156444", VA = "0x1156444")]
	public void AddActiveAudioSource(OSPAudioSource source)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x1156448", Offset = "0x1156448", VA = "0x1156448")]
	public void RemoveActiveAudioSource(OSPAudioSource source)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x11562D8", Offset = "0x11562D8", VA = "0x11562D8")]
	private void UpdateEarlyReflections()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x115644C", Offset = "0x115644C", VA = "0x115644C")]
	public OSPManager()
	{
	}
}
[Token(Token = "0x2000149")]
public class PlayTest : MonoBehaviour
{
	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToStart;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xCD8AD4", Offset = "0xCD8AD4", VA = "0xCD8AD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xCD8B68", Offset = "0xCD8B68", VA = "0xCD8B68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xCD8B6C", Offset = "0xCD8B6C", VA = "0xCD8B6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xCD8C4C", Offset = "0xCD8C4C", VA = "0xCD8C4C")]
	public PlayTest()
	{
	}
}
[Token(Token = "0x200014A")]
public class Pulse : MonoBehaviour
{
	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 scale;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float pulse;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int state;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeout;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float bpm;

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x1621F00", Offset = "0x1621F00", VA = "0x1621F00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x1621F3C", Offset = "0x1621F3C", VA = "0x1621F3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1622004", Offset = "0x1622004", VA = "0x1622004")]
	public Pulse()
	{
	}
}
[Token(Token = "0x200014B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA676C", Offset = "0xAA676C")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200014C")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000900")]
		MouseXAndY,
		[Token(Token = "0x4000901")]
		MouseX,
		[Token(Token = "0x4000902")]
		MouseY
	}

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xBEE850", Offset = "0xBEE850", VA = "0xBEE850")]
	private void Update()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xBEEA28", Offset = "0xBEEA28", VA = "0xBEEA28")]
	private void Start()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xBEEAF0", Offset = "0xBEEAF0", VA = "0xBEEAF0")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200014D")]
public class ObjectDrawer : MonoBehaviour
{
	[Token(Token = "0x200014E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA67A4", Offset = "0xAA67A4")]
	private sealed class <blockForOneSecond>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectDrawer <>4__this;

		[Token(Token = "0x170000A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000775")]
			[Address(RVA = "0xDB366C", Offset = "0xDB366C", VA = "0xDB366C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000777")]
			[Address(RVA = "0xDB36B4", Offset = "0xDB36B4", VA = "0xDB36B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xDB3580", Offset = "0xDB3580", VA = "0xDB3580")]
		[DebuggerHidden]
		public <blockForOneSecond>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xDB35AC", Offset = "0xDB35AC", VA = "0xDB35AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xDB35B0", Offset = "0xDB35B0", VA = "0xDB35B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xDB3674", Offset = "0xDB3674", VA = "0xDB3674", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ovrSceneManager;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform holder;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NewGameManager gameManager;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LevelManager levelManager;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SettingsManager settingsManager;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform rightHand;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandController hand;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject prefab;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform cam;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject currentObject;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 startPos;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 point2;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 point3;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 point4;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int currentStep;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool blocked;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x115D9A8", Offset = "0x115D9A8", VA = "0x115D9A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x115DA80", Offset = "0x115DA80", VA = "0x115DA80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB484", Offset = "0xABB484")]
	private IEnumerator blockForOneSecond()
	{
		return null;
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x115DAEC", Offset = "0x115DAEC", VA = "0x115DAEC")]
	private Vector3 GetClosestPointOnInfiniteLine(Vector3 point, Vector3 line_start, Vector3 line_end)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x115DB4C", Offset = "0x115DB4C", VA = "0x115DB4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x115E334", Offset = "0x115E334", VA = "0x115E334")]
	public ObjectDrawer()
	{
	}
}
[Token(Token = "0x200014F")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x14A2B04", Offset = "0x14A2B04", VA = "0x14A2B04")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x14A2C68", Offset = "0x14A2C68", VA = "0x14A2C68")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x14A3004", Offset = "0x14A3004", VA = "0x14A3004")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x14A31A8", Offset = "0x14A31A8", VA = "0x14A31A8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x14A31D4", Offset = "0x14A31D4", VA = "0x14A31D4")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000150")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x161DAF8", Offset = "0x161DAF8", VA = "0x161DAF8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x161DB80", Offset = "0x161DB80", VA = "0x161DB80")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x161DCF4", Offset = "0x161DCF4", VA = "0x161DCF4")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000151")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x170000A9")]
	public bool IsVisible
	{
		[Token(Token = "0x6000780")]
		[Address(RVA = "0x24CFF08", Offset = "0x24CFF08", VA = "0x24CFF08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000781")]
		[Address(RVA = "0x24CFF10", Offset = "0x24CFF10", VA = "0x24CFF10")]
		set
		{
		}
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x24D004C", Offset = "0x24D004C", VA = "0x24D004C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x24D0214", Offset = "0x24D0214", VA = "0x24D0214")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x24D021C", Offset = "0x24D021C", VA = "0x24D021C")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000152")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000153")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xE65DFC", Offset = "0xE65DFC", VA = "0xE65DFC")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000154")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAA66C", Offset = "0xAAA66C")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAA684", Offset = "0xAAA684")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAA69C", Offset = "0xAAA69C")]
		public float LatencyWeight;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAA6B4", Offset = "0xAAA6B4")]
		public int MaxSamples;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xE65E04", Offset = "0xE65E04", VA = "0xE65E04")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xE65F3C", Offset = "0xE65F3C", VA = "0xE65F3C")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xE725F0", Offset = "0xE725F0", VA = "0xE725F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xE72734", Offset = "0xE72734", VA = "0xE72734")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xE72B0C", Offset = "0xE72B0C", VA = "0xE72B0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xE72A64", Offset = "0xE72A64", VA = "0xE72A64")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xE72E3C", Offset = "0xE72E3C", VA = "0xE72E3C")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xE73124", Offset = "0xE73124", VA = "0xE73124")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000155")]
public class P2PManager
{
	[Token(Token = "0x2000156")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400092D")]
		Update = 1
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x14A3BE8", Offset = "0x14A3BE8", VA = "0x14A3BE8")]
	public P2PManager()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x14A3CC8", Offset = "0x14A3CC8", VA = "0x14A3CC8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x14A3DAC", Offset = "0x14A3DAC", VA = "0x14A3DAC")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x14A3E2C", Offset = "0x14A3E2C", VA = "0x14A3E2C")]
	private void PeerConnectRequestCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x14A3F9C", Offset = "0x14A3F9C", VA = "0x14A3F9C")]
	private void ConnectionStateChangedCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x14A41DC", Offset = "0x14A41DC", VA = "0x14A41DC")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x14A45CC", Offset = "0x14A45CC", VA = "0x14A45CC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x14A4888", Offset = "0x14A4888", VA = "0x14A4888")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x14A43A8", Offset = "0x14A43A8", VA = "0x14A43A8")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x14A47BC", Offset = "0x14A47BC", VA = "0x14A47BC")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x14A448C", Offset = "0x14A448C", VA = "0x14A448C")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x14A4AC0", Offset = "0x14A4AC0", VA = "0x14A4AC0")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x14A43F0", Offset = "0x14A43F0", VA = "0x14A43F0")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x14A4800", Offset = "0x14A4800", VA = "0x14A4800")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x14A4530", Offset = "0x14A4530", VA = "0x14A4530")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x14A4B48", Offset = "0x14A4B48", VA = "0x14A4B48")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000157")]
public class RemotePlayer
{
	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xE731C8", Offset = "0xE731C8", VA = "0xE731C8")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000158")]
public class RoomManager
{
	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xE75DBC", Offset = "0xE75DBC", VA = "0xE75DBC")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xE75EC0", Offset = "0xE75EC0", VA = "0xE75EC0")]
	private void AcceptingInviteCallback(Oculus.Platform.Message<string> msg)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xE76040", Offset = "0xE76040", VA = "0xE76040")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xE7617C", Offset = "0xE7617C", VA = "0xE7617C")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xE76250", Offset = "0xE76250", VA = "0xE76250")]
	private void CreateAndJoinPrivateRoomCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xE7638C", Offset = "0xE7638C", VA = "0xE7638C")]
	private void OnLaunchInviteWorkflowComplete(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xE76070", Offset = "0xE76070", VA = "0xE76070")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xE76414", Offset = "0xE76414", VA = "0xE76414")]
	private void JoinRoomCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xE76B6C", Offset = "0xE76B6C", VA = "0xE76B6C")]
	private void RoomUpdateCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xE76E6C", Offset = "0xE76E6C", VA = "0xE76E6C")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xE766F4", Offset = "0xE766F4", VA = "0xE766F4")]
	private void ProcessRoomData(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x2000159")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200015A")]
	public enum State
	{
		[Token(Token = "0x4000962")]
		INITIALIZING,
		[Token(Token = "0x4000963")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000964")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000965")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000966")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000967")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000968")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000969")]
		SHUTDOWN
	}

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x170000AA")]
	public static State CurrentState
	{
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xEF9300", Offset = "0xEF9300", VA = "0xEF9300")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x170000AB")]
	public static ulong MyID
	{
		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xEF9370", Offset = "0xEF9370", VA = "0xEF9370")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170000AC")]
	public static string MyOculusID
	{
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xEF9450", Offset = "0xEF9450", VA = "0xEF9450")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xEF7520", Offset = "0xEF7520", VA = "0xEF7520", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xEF78B0", Offset = "0xEF78B0", VA = "0xEF78B0", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xEF7FBC", Offset = "0xEF7FBC", VA = "0xEF7FBC")]
	private void InitCallback(Oculus.Platform.Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xEF82DC", Offset = "0xEF82DC", VA = "0xEF82DC", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xEF82E0", Offset = "0xEF82E0", VA = "0xEF82E0")]
	private void IsEntitledCallback(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xEF8400", Offset = "0xEF8400", VA = "0xEF8400")]
	private void GetLoggedInUserCallback(Oculus.Platform.Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xEF8B08", Offset = "0xEF8B08", VA = "0xEF8B08")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Oculus.Platform.Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xEF8EFC", Offset = "0xEF8EFC", VA = "0xEF8EFC")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xEF910C", Offset = "0xEF910C", VA = "0xEF910C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xEF9294", Offset = "0xEF9294", VA = "0xEF9294")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xEF7C48", Offset = "0xEF7C48", VA = "0xEF7C48")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xEF8164", Offset = "0xEF8164", VA = "0xEF8164")]
	public static void TerminateWithError(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xEF7CFC", Offset = "0xEF7CFC", VA = "0xEF7CFC")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xEF9578", Offset = "0xEF9578", VA = "0xEF9578")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xEF96F4", Offset = "0xEF96F4", VA = "0xEF96F4")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xEF97D8", Offset = "0xEF97D8", VA = "0xEF97D8")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xEF9934", Offset = "0xEF9934", VA = "0xEF9934")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xEF9A18", Offset = "0xEF9A18", VA = "0xEF9A18")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xEF821C", Offset = "0xEF821C", VA = "0xEF821C")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xEF9F60", Offset = "0xEF9F60", VA = "0xEF9F60")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xEF9FF4", Offset = "0xEF9FF4", VA = "0xEF9FF4")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xEF9D4C", Offset = "0xEF9D4C", VA = "0xEF9D4C")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xEFA1E4", Offset = "0xEFA1E4", VA = "0xEFA1E4")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xEF749C", Offset = "0xEF749C", VA = "0xEF749C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xABB534", Offset = "0xABB534")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xEFA328", Offset = "0xEFA328", VA = "0xEFA328")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xEFA404", Offset = "0xEFA404", VA = "0xEFA404")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200015B")]
public class VoipManager
{
	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xE875BC", Offset = "0xE875BC", VA = "0xE875BC")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xE8769C", Offset = "0xE8769C", VA = "0xE8769C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xE87780", Offset = "0xE87780", VA = "0xE87780")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xE87800", Offset = "0xE87800", VA = "0xE87800")]
	private void VoipConnectRequestCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xE87970", Offset = "0xE87970", VA = "0xE87970")]
	private void VoipStateChangedCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200015C")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x24CFBD4", Offset = "0x24CFBD4", VA = "0x24CFBD4")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x24CFC4C", Offset = "0x24CFC4C", VA = "0x24CFC4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x24CFDC0", Offset = "0x24CFDC0", VA = "0x24CFDC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x24CFE24", Offset = "0x24CFE24", VA = "0x24CFE24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x24CFC88", Offset = "0x24CFC88", VA = "0x24CFC88")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x24CFEE8", Offset = "0x24CFEE8", VA = "0x24CFEE8")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x24CFF00", Offset = "0x24CFF00", VA = "0x24CFF00")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200015D")]
public class AvatarLayer
{
	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x134A2D4", Offset = "0x134A2D4", VA = "0x134A2D4")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200015E")]
public class PacketRecordSettings
{
	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x14A7E38", Offset = "0x14A7E38", VA = "0x14A7E38")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200015F")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000160")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xDB3D50", Offset = "0xDB3D50", VA = "0xDB3D50")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000161")]
	public enum HandType
	{
		[Token(Token = "0x40009CB")]
		Right,
		[Token(Token = "0x40009CC")]
		Left,
		[Token(Token = "0x40009CD")]
		Max
	}

	[Token(Token = "0x2000162")]
	public enum HandJoint
	{
		[Token(Token = "0x40009CF")]
		HandBase,
		[Token(Token = "0x40009D0")]
		IndexBase,
		[Token(Token = "0x40009D1")]
		IndexTip,
		[Token(Token = "0x40009D2")]
		ThumbBase,
		[Token(Token = "0x40009D3")]
		ThumbTip,
		[Token(Token = "0x40009D4")]
		Max
	}

	[Token(Token = "0x2000163")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA67B4", Offset = "0xAA67B4")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600080E")]
			[Address(RVA = "0xDB3D00", Offset = "0xDB3D00", VA = "0xDB3D00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000810")]
			[Address(RVA = "0xDB3D48", Offset = "0xDB3D48", VA = "0xDB3D48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xDB3B30", Offset = "0xDB3B30", VA = "0xDB3B30")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xDB3B5C", Offset = "0xDB3B5C", VA = "0xDB3B5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xDB3B60", Offset = "0xDB3B60", VA = "0xDB3B60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xDB3D08", Offset = "0xDB3D08", VA = "0xDB3D08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA6CC", Offset = "0xAAA6CC")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA704", Offset = "0xAAA704")]
	public bool EnableBody;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA73C", Offset = "0xAAA73C")]
	public bool RecordPackets;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA774", Offset = "0xAAA774")]
	public bool StartWithControllers;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA7AC", Offset = "0xAAA7AC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAA7AC", Offset = "0xAAA7AC")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAA81C", Offset = "0xAAA81C")]
	private bool CombineMeshes;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAA854", Offset = "0xAAA854")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA88C", Offset = "0xAAA88C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAA8C4", Offset = "0xAAA8C4")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAA8FC", Offset = "0xAAA8FC")]
	public bool EnableLaughter;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40009AB")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40009AD")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40009AE")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40009AF")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40009B0")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40009B1")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x116348C", Offset = "0x116348C", VA = "0x116348C")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x1163878", Offset = "0x1163878", VA = "0x1163878")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x116390C", Offset = "0x116390C", VA = "0x116390C")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x1163974", Offset = "0x1163974", VA = "0x1163974")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x1163AA4", Offset = "0x1163AA4", VA = "0x1163AA4")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x1163B84", Offset = "0x1163B84", VA = "0x1163B84")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x1163C60", Offset = "0x1163C60", VA = "0x1163C60")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x1163E44", Offset = "0x1163E44", VA = "0x1163E44")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x1163F20", Offset = "0x1163F20", VA = "0x1163F20")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1163F98", Offset = "0x1163F98", VA = "0x1163F98")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x1164080", Offset = "0x1164080", VA = "0x1164080")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x116410C", Offset = "0x116410C", VA = "0x116410C")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1164194", Offset = "0x1164194", VA = "0x1164194")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x11641AC", Offset = "0x11641AC", VA = "0x11641AC")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60007E4")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x116465C", Offset = "0x116465C", VA = "0x116465C")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x11649DC", Offset = "0x11649DC", VA = "0x11649DC")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x1164B84", Offset = "0x1164B84", VA = "0x1164B84")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1164DD0", Offset = "0x1164DD0", VA = "0x1164DD0")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x1164EC4", Offset = "0x1164EC4", VA = "0x1164EC4")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x11652CC", Offset = "0x11652CC", VA = "0x11652CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x11655F8", Offset = "0x11655F8", VA = "0x11655F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x116601C", Offset = "0x116601C", VA = "0x116601C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x1166070", Offset = "0x1166070", VA = "0x1166070")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x1165184", Offset = "0x1165184", VA = "0x1165184")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1165228", Offset = "0x1165228", VA = "0x1165228")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x11660A0", Offset = "0x11660A0", VA = "0x11660A0")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x11659D0", Offset = "0x11659D0", VA = "0x11659D0")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1166314", Offset = "0x1166314", VA = "0x1166314")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1166104", Offset = "0x1166104", VA = "0x1166104")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x11665C4", Offset = "0x11665C4", VA = "0x11665C4")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1166A40", Offset = "0x1166A40", VA = "0x1166A40")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1166CD8", Offset = "0x1166CD8", VA = "0x1166CD8")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1166E2C", Offset = "0x1166E2C", VA = "0x1166E2C")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x1167010", Offset = "0x1167010", VA = "0x1167010")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x1165B9C", Offset = "0x1165B9C", VA = "0x1165B9C")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x11670E4", Offset = "0x11670E4", VA = "0x11670E4")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x11659E0", Offset = "0x11659E0", VA = "0x11659E0")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x11671D4", Offset = "0x11671D4", VA = "0x11671D4")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x116782C", Offset = "0x116782C", VA = "0x116782C")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x1167D10", Offset = "0x1167D10", VA = "0x1167D10")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x1167D38", Offset = "0x1167D38", VA = "0x1167D38")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1167D60", Offset = "0x1167D60", VA = "0x1167D60")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x1165EA8", Offset = "0x1165EA8", VA = "0x1165EA8")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x1167298", Offset = "0x1167298", VA = "0x1167298")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x1168180", Offset = "0x1168180", VA = "0x1168180")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB594", Offset = "0xABB594")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x11681EC", Offset = "0x11681EC", VA = "0x11681EC")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x1168040", Offset = "0x1168040", VA = "0x1168040")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x11682B0", Offset = "0x11682B0", VA = "0x11682B0")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x1168398", Offset = "0x1168398", VA = "0x1168398")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x1167D9C", Offset = "0x1167D9C", VA = "0x1167D9C")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x1168480", Offset = "0x1168480", VA = "0x1168480")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000164")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x14961F0", Offset = "0x14961F0", VA = "0x14961F0")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000165")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x14962B4", Offset = "0x14962B4", VA = "0x14962B4")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1497538", Offset = "0x1497538", VA = "0x1497538")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x149710C", Offset = "0x149710C", VA = "0x149710C")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x1496E9C", Offset = "0x1496E9C", VA = "0x1496E9C")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x1496F78", Offset = "0x1496F78", VA = "0x1496F78")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x14977C8", Offset = "0x14977C8", VA = "0x14977C8")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000166")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40009DD")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1497D50", Offset = "0x1497D50", VA = "0x1497D50")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000167")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x1497FBC", Offset = "0x1497FBC", VA = "0x1497FBC")]
	private void Update()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1498408", Offset = "0x1498408", VA = "0x1498408")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000168")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1498520", Offset = "0x1498520", VA = "0x1498520")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x1498690", Offset = "0x1498690", VA = "0x1498690")]
	private void Update()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x14987B4", Offset = "0x14987B4", VA = "0x14987B4")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000169")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x1498814", Offset = "0x1498814", VA = "0x1498814")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x14980E0", Offset = "0x14980E0", VA = "0x14980E0")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1498E64", Offset = "0x1498E64", VA = "0x1498E64")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1498EC4", Offset = "0x1498EC4", VA = "0x1498EC4")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x1499678", Offset = "0x1499678", VA = "0x1499678")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1498468", Offset = "0x1498468", VA = "0x1498468")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200016A")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200016B")]
	public enum PacketMode
	{
		[Token(Token = "0x40009F1")]
		SDK,
		[Token(Token = "0x40009F2")]
		Unity
	}

	[Token(Token = "0x200016C")]
	public struct ControllerPose
	{
		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xDB3DC8", Offset = "0xDB3DC8", VA = "0xDB3DC8")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x200016D")]
	public struct PoseFrame
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xDB3EA4", Offset = "0xDB3EA4", VA = "0xDB3EA4")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x149AD24", Offset = "0x149AD24", VA = "0x149AD24")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000826")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x149AD34", Offset = "0x149AD34", VA = "0x149AD34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x149ADBC", Offset = "0x149ADBC", VA = "0x149ADBC")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x149B038", Offset = "0x149B038", VA = "0x149B038")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x149B040", Offset = "0x149B040", VA = "0x149B040")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200016E")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x149B050", Offset = "0x149B050", VA = "0x149B050")]
	private void Update()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x149B1B4", Offset = "0x149B1B4", VA = "0x149B1B4")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200016F")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x149B21C", Offset = "0x149B21C", VA = "0x149B21C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x149B380", Offset = "0x149B380", VA = "0x149B380")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x149B71C", Offset = "0x149B71C", VA = "0x149B71C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x149B940", Offset = "0x149B940", VA = "0x149B940", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x149B96C", Offset = "0x149B96C", VA = "0x149B96C")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000170")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000171")]
	public enum TextureType
	{
		[Token(Token = "0x4000A28")]
		DiffuseTextures,
		[Token(Token = "0x4000A29")]
		NormalMaps,
		[Token(Token = "0x4000A2A")]
		RoughnessMaps,
		[Token(Token = "0x4000A2B")]
		Count
	}

	[Token(Token = "0x2000172")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000173")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000174")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000175")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xDB48A0", Offset = "0xDB48A0", VA = "0xDB48A0")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA67C4", Offset = "0xAA67C4")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000847")]
			[Address(RVA = "0xDB4850", Offset = "0xDB4850", VA = "0xDB4850", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000849")]
			[Address(RVA = "0xDB4898", Offset = "0xDB4898", VA = "0xDB4898", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xDB41A8", Offset = "0xDB41A8", VA = "0xDB41A8")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xDB41D4", Offset = "0xDB41D4", VA = "0xDB41D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xDB41D8", Offset = "0xDB41D8", VA = "0xDB41D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xDB4858", Offset = "0xDB4858", VA = "0xDB4858", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000A23")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000A24")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000A25")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000A26")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x149B9B8", Offset = "0x149B9B8", VA = "0x149B9B8")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x149BB44", Offset = "0x149BB44", VA = "0x149BB44")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x149BB6C", Offset = "0x149BB6C", VA = "0x149BB6C")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x149C2C8", Offset = "0x149C2C8", VA = "0x149C2C8")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x149C5B0", Offset = "0x149C5B0", VA = "0x149C5B0")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x149BC08", Offset = "0x149BC08", VA = "0x149BC08")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x149C69C", Offset = "0x149C69C", VA = "0x149C69C")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x149C040", Offset = "0x149C040", VA = "0x149C040")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x149C92C", Offset = "0x149C92C", VA = "0x149C92C")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x149CBD0", Offset = "0x149CBD0", VA = "0x149CBD0")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x149CCF8", Offset = "0x149CCF8", VA = "0x149CCF8")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x149CD30", Offset = "0x149CD30", VA = "0x149CD30")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x149C250", Offset = "0x149C250", VA = "0x149C250")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB644", Offset = "0xABB644")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x149DBA8", Offset = "0x149DBA8", VA = "0x149DBA8")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000177")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x170000B1")]
	public float Duration
	{
		[Token(Token = "0x600084A")]
		[Address(RVA = "0x149E0EC", Offset = "0x149E0EC", VA = "0x149E0EC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B2")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600084B")]
		[Address(RVA = "0x149E160", Offset = "0x149E160", VA = "0x149E160")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x149E1F0", Offset = "0x149E1F0", VA = "0x149E1F0")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x149E2F8", Offset = "0x149E2F8", VA = "0x149E2F8")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x149E494", Offset = "0x149E494", VA = "0x149E494")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x149E5B4", Offset = "0x149E5B4", VA = "0x149E5B4")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x149E68C", Offset = "0x149E68C", VA = "0x149E68C")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x149E8BC", Offset = "0x149E8BC", VA = "0x149E8BC")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x149EB98", Offset = "0x149EB98", VA = "0x149EB98")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000178")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000853")]
	[Address(RVA = "0x134C174", Offset = "0x134C174", VA = "0x134C174")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x134C288", Offset = "0x134C288", VA = "0x134C288")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x134C434", Offset = "0x134C434", VA = "0x134C434")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x134C2F8", Offset = "0x134C2F8", VA = "0x134C2F8")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x134C38C", Offset = "0x134C38C", VA = "0x134C38C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000179")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000858")]
	[Address(RVA = "0x134BD74", Offset = "0x134BD74", VA = "0x134BD74")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x134C118", Offset = "0x134C118", VA = "0x134C118")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x134BF14", Offset = "0x134BF14", VA = "0x134BF14")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x134BF8C", Offset = "0x134BF8C", VA = "0x134BF8C")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x134C028", Offset = "0x134C028", VA = "0x134C028")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200017A")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000A4D")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000A4E")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x149EDC0", Offset = "0x149EDC0", VA = "0x149EDC0")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x149EE48", Offset = "0x149EE48", VA = "0x149EE48", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x149EE64", Offset = "0x149EE64", VA = "0x149EE64")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x149F008", Offset = "0x149F008", VA = "0x149F008")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x149F1B8", Offset = "0x149F1B8", VA = "0x149F1B8")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200017B")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x149F24C", Offset = "0x149F24C", VA = "0x149F24C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x149F330", Offset = "0x149F330", VA = "0x149F330")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x149F524", Offset = "0x149F524", VA = "0x149F524")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x149F8E4", Offset = "0x149F8E4", VA = "0x149F8E4")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x149F9F0", Offset = "0x149F9F0", VA = "0x149F9F0")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200017C")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000A57")]
	Body = 1,
	[Token(Token = "0x4000A58")]
	Hands = 2,
	[Token(Token = "0x4000A59")]
	Base = 4,
	[Token(Token = "0x4000A5A")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000A5B")]
	Expressive = 0x20,
	[Token(Token = "0x4000A5C")]
	All = -1
}
[Token(Token = "0x200017D")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000A5E")]
	AvatarSpecification,
	[Token(Token = "0x4000A5F")]
	AssetLoaded,
	[Token(Token = "0x4000A60")]
	Count
}
[Token(Token = "0x200017E")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200017F")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000180")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000A66")]
	Mesh,
	[Token(Token = "0x4000A67")]
	Texture,
	[Token(Token = "0x4000A68")]
	Pose,
	[Token(Token = "0x4000A69")]
	Material,
	[Token(Token = "0x4000A6A")]
	CombinedMesh,
	[Token(Token = "0x4000A6B")]
	PBSMaterial,
	[Token(Token = "0x4000A6C")]
	FailedLoad,
	[Token(Token = "0x4000A6D")]
	Count
}
[Token(Token = "0x2000181")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000182")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000183")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000184")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000185")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000186")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000AA2")]
	RGB24,
	[Token(Token = "0x4000AA3")]
	DXT1,
	[Token(Token = "0x4000AA4")]
	DXT5,
	[Token(Token = "0x4000AA5")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000AA6")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000AA7")]
	Count
}
[Token(Token = "0x2000187")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000188")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000AAF")]
	SkinnedMeshRender,
	[Token(Token = "0x4000AB0")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000AB1")]
	ProjectorRender,
	[Token(Token = "0x4000AB2")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000AB3")]
	Count
}
[Token(Token = "0x2000189")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000AB5")]
	Unknown,
	[Token(Token = "0x4000AB6")]
	Default,
	[Token(Token = "0x4000AB7")]
	Verbose,
	[Token(Token = "0x4000AB8")]
	Debug,
	[Token(Token = "0x4000AB9")]
	Info,
	[Token(Token = "0x4000ABA")]
	Warn,
	[Token(Token = "0x4000ABB")]
	Error,
	[Token(Token = "0x4000ABC")]
	Fatal,
	[Token(Token = "0x4000ABD")]
	Silent
}
[Token(Token = "0x200018A")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200018B")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000AC2")]
	One = 1,
	[Token(Token = "0x4000AC3")]
	Two = 2,
	[Token(Token = "0x4000AC4")]
	Three = 4,
	[Token(Token = "0x4000AC5")]
	Joystick = 8
}
[Token(Token = "0x200018C")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000AC7")]
	One = 1,
	[Token(Token = "0x4000AC8")]
	Two = 2,
	[Token(Token = "0x4000AC9")]
	Joystick = 4,
	[Token(Token = "0x4000ACA")]
	ThumbRest = 8,
	[Token(Token = "0x4000ACB")]
	Index = 0x10,
	[Token(Token = "0x4000ACC")]
	Pointing = 0x40,
	[Token(Token = "0x4000ACD")]
	ThumbUp = 0x80
}
[Token(Token = "0x200018D")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200018E")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200018F")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000190")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000191")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000192")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000193")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000194")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000195")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000AED")]
	Add,
	[Token(Token = "0x4000AEE")]
	Multiply,
	[Token(Token = "0x4000AEF")]
	Count
}
[Token(Token = "0x2000196")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000AF1")]
	Color,
	[Token(Token = "0x4000AF2")]
	Texture,
	[Token(Token = "0x4000AF3")]
	TextureSingleChannel,
	[Token(Token = "0x4000AF4")]
	Parallax,
	[Token(Token = "0x4000AF5")]
	Count
}
[Token(Token = "0x2000197")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000AF7")]
	None,
	[Token(Token = "0x4000AF8")]
	Positional,
	[Token(Token = "0x4000AF9")]
	ViewReflection,
	[Token(Token = "0x4000AFA")]
	Fresnel,
	[Token(Token = "0x4000AFB")]
	Pulse,
	[Token(Token = "0x4000AFC")]
	Count
}
[Token(Token = "0x2000198")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000AFE")]
	Touch,
	[Token(Token = "0x4000AFF")]
	Malibu,
	[Token(Token = "0x4000B00")]
	Go,
	[Token(Token = "0x4000B01")]
	Quest,
	[Token(Token = "0x4000B02")]
	Count
}
[Token(Token = "0x2000199")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000B04")]
	Lowest = 1,
	[Token(Token = "0x4000B05")]
	Medium = 3,
	[Token(Token = "0x4000B06")]
	Highest = 5
}
[Token(Token = "0x200019A")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000B08")]
	Unknown = -1,
	[Token(Token = "0x4000B09")]
	One,
	[Token(Token = "0x4000B0A")]
	Two
}
[Token(Token = "0x200019B")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xE8E974", Offset = "0xE8E974", VA = "0xE8E974")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xE8E9A4", Offset = "0xE8E9A4", VA = "0xE8E9A4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xE8EBC0", Offset = "0xE8EBC0", VA = "0xE8EBC0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200019C")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xE8ECA4", Offset = "0xE8ECA4", VA = "0xE8ECA4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xE8ECD4", Offset = "0xE8ECD4", VA = "0xE8ECD4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xE8F070", Offset = "0xE8F070", VA = "0xE8F070", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200019D")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xE8DF04", Offset = "0xE8DF04", VA = "0xE8DF04")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xE8DF34", Offset = "0xE8DF34", VA = "0xE8DF34", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xE8E1C4", Offset = "0xE8E1C4", VA = "0xE8E1C4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200019E")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xE8F1D8", Offset = "0xE8F1D8", VA = "0xE8F1D8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xE8F208", Offset = "0xE8F208", VA = "0xE8F208", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xE8F3F8", Offset = "0xE8F3F8", VA = "0xE8F3F8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200019F")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x14961F8", Offset = "0x14961F8", VA = "0x14961F8")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20001A0")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20001A1")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000B3F")]
	FirstPerson = 1,
	[Token(Token = "0x4000B40")]
	ThirdPerson = 2,
	[Token(Token = "0x4000B41")]
	SelfOccluding = 4
}
[Token(Token = "0x20001A2")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20001A3")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20001A4")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20001A5")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20001A6")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000B57")]
	Default,
	[Token(Token = "0x4000B58")]
	GripSphere,
	[Token(Token = "0x4000B59")]
	GripCube,
	[Token(Token = "0x4000B5A")]
	Count
}
[Token(Token = "0x20001A7")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000B5C")]
	Body,
	[Token(Token = "0x4000B5D")]
	Clothing,
	[Token(Token = "0x4000B5E")]
	Eyewear,
	[Token(Token = "0x4000B5F")]
	Hair,
	[Token(Token = "0x4000B60")]
	Beard,
	[Token(Token = "0x4000B61")]
	Count
}
[Token(Token = "0x20001A8")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20001A9")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20001AA")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20001AB")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20001AC")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000B6B")]
	AvatarHead,
	[Token(Token = "0x4000B6C")]
	AvatarHand,
	[Token(Token = "0x4000B6D")]
	Object,
	[Token(Token = "0x4000B6E")]
	ObjectStatic,
	[Token(Token = "0x4000B6F")]
	Count
}
[Token(Token = "0x20001AD")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20001AE")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20001AF")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20001B0")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20001B1")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000B7B")]
	Point,
	[Token(Token = "0x4000B7C")]
	Direction,
	[Token(Token = "0x4000B7D")]
	Spot,
	[Token(Token = "0x4000B7E")]
	Count
}
[Token(Token = "0x20001B2")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20001B3")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20001B4")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20001B5")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20001B6")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000B94")]
	None = 0u,
	[Token(Token = "0x4000B95")]
	GazeTarget = 1u,
	[Token(Token = "0x4000B96")]
	Any = uint.MaxValue
}
[Token(Token = "0x20001B7")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20001B8")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20001B9")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20001BA")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20001BB")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20001BC")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20001BD")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xDB48A8", Offset = "0xDB48A8", VA = "0xDB48A8")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000BAB")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x170000B3")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000888")]
		[Address(RVA = "0x1499708", Offset = "0x1499708", VA = "0x1499708")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x149FA00", Offset = "0x149FA00", VA = "0x149FA00")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x149FD08", Offset = "0x149FD08", VA = "0x149FD08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x149FD78", Offset = "0x149FD78", VA = "0x149FD78")]
	private void Update()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x14A0748", Offset = "0x14A0748", VA = "0x14A0748")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x14A079C", Offset = "0x14A079C", VA = "0x14A079C")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x14A07F0", Offset = "0x14A07F0", VA = "0x14A07F0")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x14A0854", Offset = "0x14A0854", VA = "0x14A0854")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x14A08B8", Offset = "0x14A08B8", VA = "0x14A08B8")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x14A0548", Offset = "0x14A0548", VA = "0x14A0548")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x14A0994", Offset = "0x14A0994", VA = "0x14A0994")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x14A0AE8", Offset = "0x14A0AE8", VA = "0x14A0AE8")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x14998DC", Offset = "0x14998DC", VA = "0x14998DC")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x14A0BDC", Offset = "0x14A0BDC", VA = "0x14A0BDC")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x149FCBC", Offset = "0x149FCBC", VA = "0x149FCBC")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x149C328", Offset = "0x149C328", VA = "0x149C328")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x14A0CBC", Offset = "0x14A0CBC", VA = "0x14A0CBC")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20001BE")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x170000B4")]
	public static string AppID
	{
		[Token(Token = "0x600089A")]
		[Address(RVA = "0x14A0C7C", Offset = "0x14A0C7C", VA = "0x14A0C7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600089B")]
		[Address(RVA = "0x14A0E14", Offset = "0x14A0E14", VA = "0x14A0E14")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public static string MobileAppID
	{
		[Token(Token = "0x600089C")]
		[Address(RVA = "0x14A0C9C", Offset = "0x14A0C9C", VA = "0x14A0C9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600089D")]
		[Address(RVA = "0x14A0E40", Offset = "0x14A0E40", VA = "0x14A0E40")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600089E")]
		[Address(RVA = "0x14A0CD4", Offset = "0x14A0CD4", VA = "0x14A0CD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600089F")]
		[Address(RVA = "0x14A0E6C", Offset = "0x14A0E6C", VA = "0x14A0E6C")]
		set
		{
		}
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x14A0EBC", Offset = "0x14A0EBC", VA = "0x14A0EBC")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20001BF")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x14A26E0", Offset = "0x14A26E0", VA = "0x14A26E0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x149881C", Offset = "0x149881C", VA = "0x149881C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x14A2838", Offset = "0x14A2838", VA = "0x14A2838")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x14A29A0", Offset = "0x14A29A0", VA = "0x14A29A0")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20001C0")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x14A29B0", Offset = "0x14A29B0", VA = "0x14A29B0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1498A58", Offset = "0x1498A58", VA = "0x1498A58")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x14A2AF4", Offset = "0x14A2AF4", VA = "0x14A2AF4")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20001C1")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000BC2")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000BC3")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000BC4")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x14A0F10", Offset = "0x14A0F10", VA = "0x14A0F10")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1498C28", Offset = "0x1498C28", VA = "0x1498C28")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x14A1E64", Offset = "0x14A1E64", VA = "0x14A1E64")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x14A15D8", Offset = "0x14A15D8", VA = "0x14A15D8")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x14A12FC", Offset = "0x14A12FC", VA = "0x14A12FC")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x14A1460", Offset = "0x14A1460", VA = "0x14A1460")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x14A26D0", Offset = "0x14A26D0", VA = "0x14A26D0")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20001C2")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001C3")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20001C4")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xDB4F3C", Offset = "0xDB4F3C", VA = "0xDB4F3C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20001C5")]
	public struct TextureSet
	{
		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xDB4F4C", Offset = "0xDB4F4C", VA = "0xDB4F4C")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20001C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6844", Offset = "0xAA6844")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008BE")]
			[Address(RVA = "0xDB4EEC", Offset = "0xDB4EEC", VA = "0xDB4EEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C0")]
			[Address(RVA = "0xDB4F34", Offset = "0xDB4F34", VA = "0xDB4F34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xDB48D4", Offset = "0xDB48D4", VA = "0xDB48D4")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xDB4900", Offset = "0xDB4900", VA = "0xDB4900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xDB4904", Offset = "0xDB4904", VA = "0xDB4904", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xDB4EF4", Offset = "0xDB4EF4", VA = "0xDB4EF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000BC8")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000BC9")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000BCC")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000BCD")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000BCE")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000BCF")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000BD0")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000BD1")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000BD2")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x14A3220", Offset = "0x14A3220", VA = "0x14A3220")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x14A3608", Offset = "0x14A3608", VA = "0x14A3608")]
	public void Update()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x14A3808", Offset = "0x14A3808", VA = "0x14A3808")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x149C780", Offset = "0x149C780", VA = "0x149C780")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x14A377C", Offset = "0x14A377C", VA = "0x14A377C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x149C3A8", Offset = "0x149C3A8", VA = "0x149C3A8")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x149C5F8", Offset = "0x149C5F8", VA = "0x149C5F8")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x14A3854", Offset = "0x14A3854", VA = "0x14A3854")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB794", Offset = "0xABB794")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x14A0948", Offset = "0x14A0948", VA = "0x14A0948")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x14A38E4", Offset = "0x14A38E4", VA = "0x14A38E4")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20001C7")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x14A3A1C", Offset = "0x14A3A1C", VA = "0x14A3A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x14A3B80", Offset = "0x14A3B80", VA = "0x14A3B80")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20001C8")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20001C9")]
	public delegate void OnClick();

	[Token(Token = "0x20001CA")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20001CB")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20001CC")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6854", Offset = "0xAA6854")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xCB7140", Offset = "0xCB7140", VA = "0xCB7140")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xCB7148", Offset = "0xCB7148", VA = "0xCB7148")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6864", Offset = "0xAA6864")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xCB736C", Offset = "0xCB736C", VA = "0xCB736C")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xCB7374", Offset = "0xCB7374", VA = "0xCB7374")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6874", Offset = "0xAA6874")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xCB75C0", Offset = "0xCB75C0", VA = "0xCB75C0")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xCB75C8", Offset = "0xCB75C8", VA = "0xCB75C8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6884", Offset = "0xAA6884")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xCB7960", Offset = "0xCB7960", VA = "0xCB7960")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xCB7968", Offset = "0xCB7968", VA = "0xCB7968")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6894", Offset = "0xAA6894")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xCB7988", Offset = "0xCB7988", VA = "0xCB7988")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xCB7990", Offset = "0xCB7990", VA = "0xCB7990")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000BE4")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000BE5")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000BE6")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x108AB0C", Offset = "0x108AB0C", VA = "0x108AB0C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x108AFC4", Offset = "0x108AFC4", VA = "0x108AFC4")]
	public void Show()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x108B378", Offset = "0x108B378", VA = "0x108B378")]
	public void Hide()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x108B534", Offset = "0x108B534", VA = "0x108B534")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x108B774", Offset = "0x108B774", VA = "0x108B774")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x108B368", Offset = "0x108B368", VA = "0x108B368")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x108BAA4", Offset = "0x108BAA4", VA = "0x108BAA4")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x108BD7C", Offset = "0x108BD7C", VA = "0x108BD7C")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x108C134", Offset = "0x108C134", VA = "0x108C134")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x108C238", Offset = "0x108C238", VA = "0x108C238")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x108C410", Offset = "0x108C410", VA = "0x108C410")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x108C4B4", Offset = "0x108C4B4", VA = "0x108C4B4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x108C684", Offset = "0x108C684", VA = "0x108C684")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x108C86C", Offset = "0x108C86C", VA = "0x108C86C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x108CB54", Offset = "0x108CB54", VA = "0x108CB54")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x108CC50", Offset = "0x108CC50", VA = "0x108CC50")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x108CCFC", Offset = "0x108CCFC", VA = "0x108CCFC")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20001D2")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x1222F54", Offset = "0x1222F54", VA = "0x1222F54")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x1222FF0", Offset = "0x1222FF0", VA = "0x1222FF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x12230B0", Offset = "0x12230B0", VA = "0x12230B0")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x12230EC", Offset = "0x12230EC", VA = "0x12230EC")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20001D3")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20001D4")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000C16")]
		On,
		[Token(Token = "0x4000C17")]
		Off,
		[Token(Token = "0x4000C18")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x170000B9")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xBD2254", Offset = "0xBD2254", VA = "0xBD2254")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xBD2210", Offset = "0xBD2210", VA = "0xBD2210")]
		set
		{
		}
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xBD225C", Offset = "0xBD225C", VA = "0xBD225C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xBD22B0", Offset = "0xBD22B0", VA = "0xBD22B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xBD23F4", Offset = "0xBD23F4", VA = "0xBD23F4", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xBD2410", Offset = "0xBD2410", VA = "0xBD2410", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xBD2464", Offset = "0xBD2464", VA = "0xBD2464")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xBD2620", Offset = "0xBD2620", VA = "0xBD2620")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xBD2734", Offset = "0xBD2734", VA = "0xBD2734")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xBD27C4", Offset = "0xBD27C4", VA = "0xBD27C4")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xBD2890", Offset = "0xBD2890", VA = "0xBD2890")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xBD2944", Offset = "0xBD2944", VA = "0xBD2944")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xBD2A30", Offset = "0xBD2A30", VA = "0xBD2A30")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20001D5")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000C19")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000C1A")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000C1B")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAA14", Offset = "0xAAAA14")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAA4C", Offset = "0xAAAA4C")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAA84", Offset = "0xAAAA84")]
	public float HeightOffset;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAABC", Offset = "0xAAAABC")]
	public float MinimumHeight;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAAF4", Offset = "0xAAAAF4")]
	public float MaximumHeight;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x10804D4", Offset = "0x10804D4", VA = "0x10804D4")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x10804DC", Offset = "0x10804DC", VA = "0x10804DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x1080554", Offset = "0x1080554", VA = "0x1080554")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x10805E8", Offset = "0x10805E8", VA = "0x10805E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x108067C", Offset = "0x108067C", VA = "0x108067C")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x10809A8", Offset = "0x10809A8", VA = "0x10809A8")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1080BD8", Offset = "0x1080BD8", VA = "0x1080BD8")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001D6")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x24E2EBC", Offset = "0x24E2EBC", VA = "0x24E2EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x24E2F70", Offset = "0x24E2F70", VA = "0x24E2F70")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20001D7")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20001D8")]
	public enum States
	{
		[Token(Token = "0x4000C49")]
		Ready,
		[Token(Token = "0x4000C4A")]
		Aim,
		[Token(Token = "0x4000C4B")]
		CancelAim,
		[Token(Token = "0x4000C4C")]
		PreTeleport,
		[Token(Token = "0x4000C4D")]
		CancelTeleport,
		[Token(Token = "0x4000C4E")]
		Teleporting,
		[Token(Token = "0x4000C4F")]
		PostTeleport
	}

	[Token(Token = "0x20001D9")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000C51")]
		None,
		[Token(Token = "0x4000C52")]
		Aim,
		[Token(Token = "0x4000C53")]
		PreTeleport,
		[Token(Token = "0x4000C54")]
		Teleport
	}

	[Token(Token = "0x20001DA")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000C56")]
		Point,
		[Token(Token = "0x4000C57")]
		Sphere,
		[Token(Token = "0x4000C58")]
		Capsule
	}

	[Token(Token = "0x20001DB")]
	public class AimData
	{
		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAAF0C", Offset = "0xAAAF0C")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000BD")]
		public List<Vector3> Points
		{
			[Token(Token = "0x600093D")]
			[Address(RVA = "0x192B28C", Offset = "0x192B28C", VA = "0x192B28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBCBC", Offset = "0xABBCBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600093E")]
			[Address(RVA = "0x192B294", Offset = "0x192B294", VA = "0x192B294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBCCC", Offset = "0xABBCCC")]
			private set
			{
			}
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x192B210", Offset = "0x192B210", VA = "0x192B210")]
		public AimData()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x192B29C", Offset = "0x192B29C", VA = "0x192B29C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA68A4", Offset = "0xAA68A4")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0x192B068", Offset = "0x192B068", VA = "0x192B068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0x192B0B0", Offset = "0x192B0B0", VA = "0x192B0B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x192AF4C", Offset = "0x192AF4C", VA = "0x192AF4C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x192AF78", Offset = "0x192AF78", VA = "0x192AF78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x192AF7C", Offset = "0x192AF7C", VA = "0x192AF7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x192B070", Offset = "0x192B070", VA = "0x192B070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA68B4", Offset = "0xAA68B4")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0x192A9F4", Offset = "0x192A9F4", VA = "0x192A9F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0x192AA3C", Offset = "0x192AA3C", VA = "0x192AA3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x192A884", Offset = "0x192A884", VA = "0x192A884")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x192A8B0", Offset = "0x192A8B0", VA = "0x192A8B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x192A8B4", Offset = "0x192A8B4", VA = "0x192A8B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x192A9FC", Offset = "0x192A9FC", VA = "0x192A9FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA68C4", Offset = "0xAA68C4")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0x192AB14", Offset = "0x192AB14", VA = "0x192AB14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x192AB5C", Offset = "0x192AB5C", VA = "0x192AB5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x192AA44", Offset = "0x192AA44", VA = "0x192AA44")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x192AA70", Offset = "0x192AA70", VA = "0x192AA70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x192AA74", Offset = "0x192AA74", VA = "0x192AA74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x192AB1C", Offset = "0x192AB1C", VA = "0x192AB1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA68D4", Offset = "0xAA68D4")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x192AEFC", Offset = "0x192AEFC", VA = "0x192AEFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x192AF44", Offset = "0x192AF44", VA = "0x192AF44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x192ADEC", Offset = "0x192ADEC", VA = "0x192ADEC")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x192AE18", Offset = "0x192AE18", VA = "0x192AE18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x192AE1C", Offset = "0x192AE1C", VA = "0x192AE1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x192AF04", Offset = "0x192AF04", VA = "0x192AF04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA68E4", Offset = "0xAA68E4")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x192AC34", Offset = "0x192AC34", VA = "0x192AC34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600095D")]
			[Address(RVA = "0x192AC7C", Offset = "0x192AC7C", VA = "0x192AC7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x192AB64", Offset = "0x192AB64", VA = "0x192AB64")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x192AB90", Offset = "0x192AB90", VA = "0x192AB90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x192AB94", Offset = "0x192AB94", VA = "0x192AB94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x192AC3C", Offset = "0x192AC3C", VA = "0x192AC3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA68F4", Offset = "0xAA68F4")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000961")]
			[Address(RVA = "0x192B1C0", Offset = "0x192B1C0", VA = "0x192B1C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x192B208", Offset = "0x192B208", VA = "0x192B208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x192B0B8", Offset = "0x192B0B8", VA = "0x192B0B8")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x192B0E4", Offset = "0x192B0E4", VA = "0x192B0E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x192B0E8", Offset = "0x192B0E8", VA = "0x192B0E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x192B1C8", Offset = "0x192B1C8", VA = "0x192B1C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6904", Offset = "0xAA6904")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x192AD9C", Offset = "0x192AD9C", VA = "0x192AD9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x192ADE4", Offset = "0x192ADE4", VA = "0x192ADE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x192AC84", Offset = "0x192AC84", VA = "0x192AC84")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x192ACB0", Offset = "0x192ACB0", VA = "0x192ACB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x192ACB4", Offset = "0x192ACB4", VA = "0x192ACB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x192ADA4", Offset = "0x192ADA4", VA = "0x192ADA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAB2C", Offset = "0xAAAB2C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAB64", Offset = "0xAAAB64")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAB9C", Offset = "0xAAAB9C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAABD4", Offset = "0xAAABD4")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAC0C", Offset = "0xAAAC0C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAC44", Offset = "0xAAAC44")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAC7C", Offset = "0xAAAC7C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAACB4", Offset = "0xAAACB4")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAACEC", Offset = "0xAAACEC")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAACFC", Offset = "0xAAACFC")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAD34", Offset = "0xAAAD34")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAAD7C", Offset = "0xAAAD7C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAD8C", Offset = "0xAAAD8C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAADC4", Offset = "0xAAADC4")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAADFC", Offset = "0xAAADFC")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAE34", Offset = "0xAAAE34")]
	public float AimCollisionHeight;

	[Token(Token = "0x170000BA")]
	public States CurrentState
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x24E50C8", Offset = "0x24E50C8", VA = "0x24E50C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB844", Offset = "0xABB844")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x24E50D0", Offset = "0x24E50D0", VA = "0x24E50D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB854", Offset = "0xABB854")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600090F")]
		[Address(RVA = "0x24E52F4", Offset = "0x24E52F4", VA = "0x24E52F4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170000BC")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000910")]
		[Address(RVA = "0x24E531C", Offset = "0x24E531C", VA = "0x24E531C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB884", Offset = "0xABB884")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000911")]
		[Address(RVA = "0x24E5324", Offset = "0x24E5324", VA = "0x24E5324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB894", Offset = "0xABB894")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x24E50D8", Offset = "0x24E50D8", VA = "0x24E50D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB864", Offset = "0xABB864")]
		add
		{
		}
		[Token(Token = "0x600090D")]
		[Address(RVA = "0x24E5178", Offset = "0x24E5178", VA = "0x24E5178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB874", Offset = "0xABB874")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600091B")]
		[Address(RVA = "0x24E591C", Offset = "0x24E591C", VA = "0x24E591C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB8DC", Offset = "0xABB8DC")]
		add
		{
		}
		[Token(Token = "0x600091C")]
		[Address(RVA = "0x24E59BC", Offset = "0x24E59BC", VA = "0x24E59BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB8EC", Offset = "0xABB8EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600091E")]
		[Address(RVA = "0x24E5A5C", Offset = "0x24E5A5C", VA = "0x24E5A5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB95C", Offset = "0xABB95C")]
		add
		{
		}
		[Token(Token = "0x600091F")]
		[Address(RVA = "0x24E5AFC", Offset = "0x24E5AFC", VA = "0x24E5AFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB96C", Offset = "0xABB96C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000920")]
		[Address(RVA = "0x24E5B9C", Offset = "0x24E5B9C", VA = "0x24E5B9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB97C", Offset = "0xABB97C")]
		add
		{
		}
		[Token(Token = "0x6000921")]
		[Address(RVA = "0x24E5C3C", Offset = "0x24E5C3C", VA = "0x24E5C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB98C", Offset = "0xABB98C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000923")]
		[Address(RVA = "0x24E5D4C", Offset = "0x24E5D4C", VA = "0x24E5D4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB99C", Offset = "0xABB99C")]
		add
		{
		}
		[Token(Token = "0x6000924")]
		[Address(RVA = "0x24E5DEC", Offset = "0x24E5DEC", VA = "0x24E5DEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB9AC", Offset = "0xABB9AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000926")]
		[Address(RVA = "0x24E5EF8", Offset = "0x24E5EF8", VA = "0x24E5EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBA1C", Offset = "0xABBA1C")]
		add
		{
		}
		[Token(Token = "0x6000927")]
		[Address(RVA = "0x24E5F98", Offset = "0x24E5F98", VA = "0x24E5F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBA2C", Offset = "0xABBA2C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000929")]
		[Address(RVA = "0x24E60A4", Offset = "0x24E60A4", VA = "0x24E60A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBA9C", Offset = "0xABBA9C")]
		add
		{
		}
		[Token(Token = "0x600092A")]
		[Address(RVA = "0x24E6144", Offset = "0x24E6144", VA = "0x24E6144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBAAC", Offset = "0xABBAAC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600092C")]
		[Address(RVA = "0x24E6250", Offset = "0x24E6250", VA = "0x24E6250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBB1C", Offset = "0xABBB1C")]
		add
		{
		}
		[Token(Token = "0x600092D")]
		[Address(RVA = "0x24E62F0", Offset = "0x24E62F0", VA = "0x24E62F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBB2C", Offset = "0xABBB2C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600092F")]
		[Address(RVA = "0x24E63FC", Offset = "0x24E63FC", VA = "0x24E63FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBB9C", Offset = "0xABBB9C")]
		add
		{
		}
		[Token(Token = "0x6000930")]
		[Address(RVA = "0x24E649C", Offset = "0x24E649C", VA = "0x24E649C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBBAC", Offset = "0xABBBAC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000932")]
		[Address(RVA = "0x24E65A8", Offset = "0x24E65A8", VA = "0x24E65A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBC1C", Offset = "0xABBC1C")]
		add
		{
		}
		[Token(Token = "0x6000933")]
		[Address(RVA = "0x24E6648", Offset = "0x24E6648", VA = "0x24E6648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBC2C", Offset = "0xABBC2C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000935")]
		[Address(RVA = "0x24E6754", Offset = "0x24E6754", VA = "0x24E6754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBC9C", Offset = "0xABBC9C")]
		add
		{
		}
		[Token(Token = "0x6000936")]
		[Address(RVA = "0x24E67F4", Offset = "0x24E67F4", VA = "0x24E67F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBCAC", Offset = "0xABBCAC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x24E4D74", Offset = "0x24E4D74", VA = "0x24E4D74")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x24E4D98", Offset = "0x24E4D98", VA = "0x24E4D98")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x24E5218", Offset = "0x24E5218", VA = "0x24E5218")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x24E532C", Offset = "0x24E532C", VA = "0x24E532C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x24E5578", Offset = "0x24E5578", VA = "0x24E5578")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xABB8A4", Offset = "0xABB8A4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x24E562C", Offset = "0x24E562C", VA = "0x24E562C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x24E56FC", Offset = "0x24E56FC", VA = "0x24E56FC")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x24E5718", Offset = "0x24E5718", VA = "0x24E5718")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x24E57DC", Offset = "0x24E57DC", VA = "0x24E57DC")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x24E5820", Offset = "0x24E5820", VA = "0x24E5820")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x24E5878", Offset = "0x24E5878", VA = "0x24E5878", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x24E5914", Offset = "0x24E5914", VA = "0x24E5914", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x24E58A8", Offset = "0x24E58A8", VA = "0x24E58A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB8FC", Offset = "0xABB8FC")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x24E5CDC", Offset = "0x24E5CDC", VA = "0x24E5CDC")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x24E5E8C", Offset = "0x24E5E8C", VA = "0x24E5E8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB9BC", Offset = "0xABB9BC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x24E6038", Offset = "0x24E6038", VA = "0x24E6038")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBA3C", Offset = "0xABBA3C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x24E61E4", Offset = "0x24E61E4", VA = "0x24E61E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBABC", Offset = "0xABBABC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x24E6390", Offset = "0x24E6390", VA = "0x24E6390")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBB3C", Offset = "0xABBB3C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x24E653C", Offset = "0x24E653C", VA = "0x24E653C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBBBC", Offset = "0xABBBBC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x24E66E8", Offset = "0x24E66E8", VA = "0x24E66E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBC3C", Offset = "0xABBC3C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x24E6894", Offset = "0x24E6894", VA = "0x24E6894")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x24E69D4", Offset = "0x24E69D4", VA = "0x24E69D4")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x24E6A08", Offset = "0x24E6A08", VA = "0x24E6A08")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x24E6AD0", Offset = "0x24E6AD0", VA = "0x24E6AD0")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x24E6BC8", Offset = "0x24E6BC8", VA = "0x24E6BC8")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20001E3")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600096A")]
		[Address(RVA = "0x1044B3C", Offset = "0x1044B3C", VA = "0x1044B3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBF0C", Offset = "0xABBF0C")]
		add
		{
		}
		[Token(Token = "0x600096B")]
		[Address(RVA = "0x1044BDC", Offset = "0x1044BDC", VA = "0x1044BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBF1C", Offset = "0xABBF1C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600096C")]
		[Address(RVA = "0x1044C7C", Offset = "0x1044C7C", VA = "0x1044C7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBF2C", Offset = "0xABBF2C")]
		add
		{
		}
		[Token(Token = "0x600096D")]
		[Address(RVA = "0x1044D1C", Offset = "0x1044D1C", VA = "0x1044D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBF3C", Offset = "0xABBF3C")]
		remove
		{
		}
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x1044DBC", Offset = "0x1044DBC", VA = "0x1044DBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1044E78", Offset = "0x1044E78", VA = "0x1044E78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1044E7C", Offset = "0x1044E7C", VA = "0x1044E7C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x1044EF0", Offset = "0x1044EF0", VA = "0x1044EF0")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x1045014", Offset = "0x1045014", VA = "0x1045014")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x10451FC", Offset = "0x10451FC", VA = "0x10451FC")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x1045404", Offset = "0x1045404", VA = "0x1045404")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20001E4")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000975")]
	[Address(RVA = "0xF04A3C", Offset = "0xF04A3C", VA = "0xF04A3C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xF04ACC", Offset = "0xF04ACC", VA = "0xF04ACC", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000977")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xF04B98", Offset = "0xF04B98", VA = "0xF04B98")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20001E5")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAF3C", Offset = "0xAAAF3C")]
	public float Range;

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xF04BA8", Offset = "0xF04BA8", VA = "0xF04BA8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xF04CA4", Offset = "0xF04CA4", VA = "0xF04CA4")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20001E6")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAF74", Offset = "0xAAAF74")]
	public float Range;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAFAC", Offset = "0xAAAFAC")]
	public float MinimumElevation;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAAFE4", Offset = "0xAAAFE4")]
	public float Gravity;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB01C", Offset = "0xAAB01C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAB01C", Offset = "0xAAB01C")]
	public float AimVelocity;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB078", Offset = "0xAAB078")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAB078", Offset = "0xAAB078")]
	public float AimStep;

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xF04CB4", Offset = "0xF04CB4", VA = "0xF04CB4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xF04E44", Offset = "0xF04E44", VA = "0xF04E44")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20001E7")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB0D0", Offset = "0xAAB0D0")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xF04E58", Offset = "0xF04E58", VA = "0xF04E58")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xF04F74", Offset = "0xF04F74", VA = "0xF04F74")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xF04FA4", Offset = "0xF04FA4", VA = "0xF04FA4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xF04FD4", Offset = "0xF04FD4", VA = "0xF04FD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xF0507C", Offset = "0xF0507C", VA = "0xF0507C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xF050E8", Offset = "0xF050E8", VA = "0xF050E8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xF05150", Offset = "0xF05150", VA = "0xF05150")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20001E8")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAB108", Offset = "0xAAB108")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB118", Offset = "0xAAB118")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB150", Offset = "0xAAB150")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB188", Offset = "0xAAB188")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x170000CC")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000984")]
		[Address(RVA = "0xF05274", Offset = "0xF05274", VA = "0xF05274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBF4C", Offset = "0xABBF4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000985")]
		[Address(RVA = "0xF0527C", Offset = "0xF0527C", VA = "0xF0527C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBF5C", Offset = "0xABBF5C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600098A")]
		[Address(RVA = "0xF05430", Offset = "0xF05430", VA = "0xF05430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBF6C", Offset = "0xABBF6C")]
		add
		{
		}
		[Token(Token = "0x600098B")]
		[Address(RVA = "0xF054D0", Offset = "0xF054D0", VA = "0xF054D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBF7C", Offset = "0xABBF7C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xF05288", Offset = "0xF05288", VA = "0xF05288")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xF05318", Offset = "0xF05318", VA = "0xF05318")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xF053EC", Offset = "0xF053EC", VA = "0xF053EC")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xF0542C", Offset = "0xF0542C", VA = "0xF0542C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xF05570", Offset = "0xF05570", VA = "0xF05570")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xF055D4", Offset = "0xF055D4", VA = "0xF055D4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xF055F4", Offset = "0xF055F4", VA = "0xF055F4", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20001E9")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6914", Offset = "0xAA6914")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0xE69BE0", Offset = "0xE69BE0", VA = "0xE69BE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0xE69C28", Offset = "0xE69C28", VA = "0xE69C28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xE69B24", Offset = "0xE69B24", VA = "0xE69B24")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0xE69B50", Offset = "0xE69B50", VA = "0xE69B50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0xE69B54", Offset = "0xE69B54", VA = "0xE69B54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xE69BE8", Offset = "0xE69BE8", VA = "0xE69BE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6924", Offset = "0xAA6924")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009A1")]
			[Address(RVA = "0xE69AD4", Offset = "0xE69AD4", VA = "0xE69AD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009A3")]
			[Address(RVA = "0xE69B1C", Offset = "0xE69B1C", VA = "0xE69B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0xE69A14", Offset = "0xE69A14", VA = "0xE69A14")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xE69A40", Offset = "0xE69A40", VA = "0xE69A40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xE69A44", Offset = "0xE69A44", VA = "0xE69A44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xE69ADC", Offset = "0xE69ADC", VA = "0xE69ADC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xF05800", Offset = "0xF05800", VA = "0xF05800")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xF058C0", Offset = "0xF058C0", VA = "0xF058C0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xF05918", Offset = "0xF05918", VA = "0xF05918", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xF059D0", Offset = "0xF059D0", VA = "0xF059D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBF8C", Offset = "0xABBF8C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xF05A3C", Offset = "0xF05A3C", VA = "0xF05A3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBFEC", Offset = "0xABBFEC")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000994")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000995")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xF05AA8", Offset = "0xF05AA8", VA = "0xF05AA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC04C", Offset = "0xABC04C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xF05AD4", Offset = "0xF05AD4", VA = "0xF05AD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC05C", Offset = "0xABC05C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20001EC")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAB1D0", Offset = "0xAAB1D0")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB1E0", Offset = "0xAAB1E0")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB218", Offset = "0xAAB218")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB250", Offset = "0xAAB250")]
	public bool FastTeleport;

	[Token(Token = "0x170000D1")]
	public Transform Pointer
	{
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xF05B00", Offset = "0xF05B00", VA = "0xF05B00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC10C", Offset = "0xABC10C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xF05B08", Offset = "0xF05B08", VA = "0xF05B08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC11C", Offset = "0xABC11C")]
		private set
		{
		}
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xF05B10", Offset = "0xF05B10", VA = "0xF05B10", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xF05C68", Offset = "0xF05C68", VA = "0xF05C68", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xF05D20", Offset = "0xF05D20", VA = "0xF05D20")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20001ED")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20001EE")]
	public enum InputModes
	{
		[Token(Token = "0x4000CA9")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000CAA")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000CAB")]
		ThumbstickTeleport,
		[Token(Token = "0x4000CAC")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20001EF")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000CAE")]
		A,
		[Token(Token = "0x4000CAF")]
		B,
		[Token(Token = "0x4000CB0")]
		LeftTrigger,
		[Token(Token = "0x4000CB1")]
		LeftThumbstick,
		[Token(Token = "0x4000CB2")]
		RightTrigger,
		[Token(Token = "0x4000CB3")]
		RightThumbstick,
		[Token(Token = "0x4000CB4")]
		X,
		[Token(Token = "0x4000CB5")]
		Y
	}

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB288", Offset = "0xAAB288")]
	public InputModes InputMode;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB2C0", Offset = "0xAAB2C0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB2F8", Offset = "0xAAB2F8")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB330", Offset = "0xAAB330")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xF05D24", Offset = "0xF05D24", VA = "0xF05D24")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xF05D28", Offset = "0xF05D28", VA = "0xF05D28", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xF06110", Offset = "0xF06110", VA = "0xF06110", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xF061D0", Offset = "0xF061D0", VA = "0xF061D0")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20001F0")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20001F1")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000CBA")]
		HeadRelative,
		[Token(Token = "0x4000CBB")]
		ForwardFacing
	}

	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6934", Offset = "0xAA6934")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170000D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0xE69D04", Offset = "0xE69D04", VA = "0xE69D04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0xE69D4C", Offset = "0xE69D4C", VA = "0xE69D4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xE69C30", Offset = "0xE69C30", VA = "0xE69C30")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xE69C5C", Offset = "0xE69C5C", VA = "0xE69C5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xE69C60", Offset = "0xE69C60", VA = "0xE69C60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xE69D0C", Offset = "0xE69D0C", VA = "0xE69D0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xF0629C", Offset = "0xF0629C", VA = "0xF0629C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xF0637C", Offset = "0xF0637C", VA = "0xF0637C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xF06384", Offset = "0xF06384", VA = "0xF06384", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xF063D0", Offset = "0xF063D0", VA = "0xF063D0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xF06418", Offset = "0xF06418", VA = "0xF06418")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABC12C", Offset = "0xABC12C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009B2")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60009B3")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xF06484", Offset = "0xF06484", VA = "0xF06484")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xF06540", Offset = "0xF06540", VA = "0xF06540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC18C", Offset = "0xABC18C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20001F3")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xF0656C", Offset = "0xF0656C", VA = "0xF0656C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xF06570", Offset = "0xF06570", VA = "0xF06570", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xF065EC", Offset = "0xF065EC", VA = "0xF065EC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20001F4")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB368", Offset = "0xAAB368")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB3A0", Offset = "0xAAB3A0")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB3D8", Offset = "0xAAB3D8")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB410", Offset = "0xAAB410")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xF065F0", Offset = "0xF065F0", VA = "0xF065F0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xF0661C", Offset = "0xF0661C", VA = "0xF0661C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xF069CC", Offset = "0xF069CC", VA = "0xF069CC")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20001F5")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB448", Offset = "0xAAB448")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB480", Offset = "0xAAB480")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB4B8", Offset = "0xAAB4B8")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xF069D0", Offset = "0xF069D0", VA = "0xF069D0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xF06A14", Offset = "0xF06A14", VA = "0xF06A14", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xF06DBC", Offset = "0xF06DBC", VA = "0xF06DBC")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20001F6")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xF06DCC", Offset = "0xF06DCC", VA = "0xF06DCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xF06DD0", Offset = "0xF06DD0", VA = "0xF06DD0")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xF06DD8", Offset = "0xF06DD8", VA = "0xF06DD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xF06E94", Offset = "0xF06E94", VA = "0xF06E94")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xF06EBC", Offset = "0xF06EBC", VA = "0xF06EBC")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20001F7")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAB4F0", Offset = "0xAAB4F0")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x170000D4")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xF06ED4", Offset = "0xF06ED4", VA = "0xF06ED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC1EC", Offset = "0xABC1EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xF06EDC", Offset = "0xF06EDC", VA = "0xF06EDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC1FC", Offset = "0xABC1FC")]
		private set
		{
		}
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xF04A6C", Offset = "0xF04A6C", VA = "0xF04A6C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xF04B6C", Offset = "0xF04B6C", VA = "0xF04B6C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xF06EE4", Offset = "0xF06EE4", VA = "0xF06EE4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xABC20C", Offset = "0xABC20C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xF050DC", Offset = "0xF050DC", VA = "0xF050DC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xF05148", Offset = "0xF05148", VA = "0xF05148", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xF04BA0", Offset = "0xF04BA0", VA = "0xF04BA0")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20001F8")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6944", Offset = "0xAA6944")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0xE6A018", Offset = "0xE6A018", VA = "0xE6A018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0xE6A060", Offset = "0xE6A060", VA = "0xE6A060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xE69D54", Offset = "0xE69D54", VA = "0xE69D54")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xE69D80", Offset = "0xE69D80", VA = "0xE69D80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xE69D84", Offset = "0xE69D84", VA = "0xE69D84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xE6A020", Offset = "0xE6A020", VA = "0xE6A020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB500", Offset = "0xAAB500")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000CD5")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xF06FC0", Offset = "0xF06FC0", VA = "0xF06FC0")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xF070B0", Offset = "0xF070B0", VA = "0xF070B0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xF070DC", Offset = "0xF070DC", VA = "0xF070DC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xF07104", Offset = "0xF07104", VA = "0xF07104")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABC244", Offset = "0xABC244")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xF07170", Offset = "0xF07170", VA = "0xF07170", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60009D7")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xF0718C", Offset = "0xF0718C", VA = "0xF0718C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xF072AC", Offset = "0xF072AC", VA = "0xF072AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC2A4", Offset = "0xABC2A4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20001FA")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xF072D8", Offset = "0xF072D8", VA = "0xF072D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xF07334", Offset = "0xF07334", VA = "0xF07334", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xF0742C", Offset = "0xF0742C", VA = "0xF0742C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xF07524", Offset = "0xF07524", VA = "0xF07524")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xABC304", Offset = "0xABC304")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xF07528", Offset = "0xF07528", VA = "0xF07528")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20001FB")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB538", Offset = "0xAAB538")]
	public float LOSOffset;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB570", Offset = "0xAAB570")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xF07534", Offset = "0xF07534", VA = "0xF07534", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xF07740", Offset = "0xF07740", VA = "0xF07740")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20001FC")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xF0774C", Offset = "0xF0774C", VA = "0xF0774C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xF07844", Offset = "0xF07844", VA = "0xF07844")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20001FD")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xF07848", Offset = "0xF07848", VA = "0xF07848", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xF078DC", Offset = "0xF078DC", VA = "0xF078DC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60009EB")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xF0796C", Offset = "0xF0796C", VA = "0xF0796C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20001FE")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6954", Offset = "0xAA6954")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0xE6A194", Offset = "0xE6A194", VA = "0xE6A194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0xE6A1DC", Offset = "0xE6A1DC", VA = "0xE6A1DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xE6A068", Offset = "0xE6A068", VA = "0xE6A068")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xE6A094", Offset = "0xE6A094", VA = "0xE6A094", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xE6A098", Offset = "0xE6A098", VA = "0xE6A098", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xE6A19C", Offset = "0xE6A19C", VA = "0xE6A19C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB5A8", Offset = "0xAAB5A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAB5A8", Offset = "0xAAB5A8")]
	public float TransitionDuration;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB600", Offset = "0xAAB600")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAB600", Offset = "0xAAB600")]
	public float TeleportDelay;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB654", Offset = "0xAAB654")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xF07974", Offset = "0xF07974", VA = "0xF07974", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xF079A0", Offset = "0xF079A0", VA = "0xF079A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABC33C", Offset = "0xABC33C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xF07A0C", Offset = "0xF07A0C", VA = "0xF07A0C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000200")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xF07BAC", Offset = "0xF07BAC", VA = "0xF07BAC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xF07BC8", Offset = "0xF07BC8", VA = "0xF07BC8")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000201")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6964", Offset = "0xAA6964")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0xE6A344", Offset = "0xE6A344", VA = "0xE6A344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0xE6A38C", Offset = "0xE6A38C", VA = "0xE6A38C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xE6A1E4", Offset = "0xE6A1E4", VA = "0xE6A1E4")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xE6A210", Offset = "0xE6A210", VA = "0xE6A210", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xE6A214", Offset = "0xE6A214", VA = "0xE6A214", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xE6A34C", Offset = "0xE6A34C", VA = "0xE6A34C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB68C", Offset = "0xAAB68C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAB68C", Offset = "0xAAB68C")]
	public float TransitionDuration;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xF07BD0", Offset = "0xF07BD0", VA = "0xF07BD0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xF07BFC", Offset = "0xF07BFC", VA = "0xF07BFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABC3EC", Offset = "0xABC3EC")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xF07C68", Offset = "0xF07C68", VA = "0xF07C68")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000203")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000204")]
	public enum PlabackState
	{
		[Token(Token = "0x4000D05")]
		Idle = 1,
		[Token(Token = "0x4000D06")]
		Preparing,
		[Token(Token = "0x4000D07")]
		Buffering,
		[Token(Token = "0x4000D08")]
		Ready,
		[Token(Token = "0x4000D09")]
		Ended
	}

	[Token(Token = "0x2000205")]
	public enum StereoMode
	{
		[Token(Token = "0x4000D0B")]
		Unknown = -1,
		[Token(Token = "0x4000D0C")]
		Mono,
		[Token(Token = "0x4000D0D")]
		TopBottom,
		[Token(Token = "0x4000D0E")]
		LeftRight,
		[Token(Token = "0x4000D0F")]
		Mesh
	}

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x170000DB")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xBF60FC", Offset = "0xBF60FC", VA = "0xBF60FC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000DC")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xBF642C", Offset = "0xBF642C", VA = "0xBF642C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000DD")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xBF2074", Offset = "0xBF2074", VA = "0xBF2074")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DE")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xBF3804", Offset = "0xBF3804", VA = "0xBF3804")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DF")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xBF66FC", Offset = "0xBF66FC", VA = "0xBF66FC")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x170000E0")]
	public static long Duration
	{
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xBF3A28", Offset = "0xBF3A28", VA = "0xBF3A28")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170000E1")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xBF269C", Offset = "0xBF269C", VA = "0xBF269C")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x170000E2")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xBF2474", Offset = "0xBF2474", VA = "0xBF2474")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E3")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xBF2588", Offset = "0xBF2588", VA = "0xBF2588")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E4")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xBF3914", Offset = "0xBF3914", VA = "0xBF3914")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xBF2F04", Offset = "0xBF2F04", VA = "0xBF2F04")]
		set
		{
		}
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xBF6810", Offset = "0xBF6810", VA = "0xBF6810")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xBF3DF0", Offset = "0xBF3DF0", VA = "0xBF3DF0")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xBF2B50", Offset = "0xBF2B50", VA = "0xBF2B50")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xBF2CF0", Offset = "0xBF2CF0", VA = "0xBF2CF0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xBF3BF0", Offset = "0xBF3BF0", VA = "0xBF3BF0")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xBF6A30", Offset = "0xBF6A30", VA = "0xBF6A30")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xBF361C", Offset = "0xBF361C", VA = "0xBF361C")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000206")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1004460", Offset = "0x1004460", VA = "0x1004460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC49C", Offset = "0xABC49C")]
		add
		{
		}
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1004500", Offset = "0x1004500", VA = "0x1004500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC4AC", Offset = "0xABC4AC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x10045A0", Offset = "0x10045A0", VA = "0x10045A0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x10045B4", Offset = "0x10045B4", VA = "0x10045B4")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000207")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000208")]
	public enum ButtonType
	{
		[Token(Token = "0x4000D13")]
		Play,
		[Token(Token = "0x4000D14")]
		Pause,
		[Token(Token = "0x4000D15")]
		FastForward,
		[Token(Token = "0x4000D16")]
		Rewind,
		[Token(Token = "0x4000D17")]
		SkipForward,
		[Token(Token = "0x4000D18")]
		SkipBack,
		[Token(Token = "0x4000D19")]
		Stop
	}

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x170000E5")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xBE82F0", Offset = "0xBE82F0", VA = "0xBE82F0")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xBE82F8", Offset = "0xBE82F8", VA = "0xBE82F8")]
		set
		{
		}
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xBE831C", Offset = "0xBE831C", VA = "0xBE831C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xBE97B4", Offset = "0xBE97B4", VA = "0xBE97B4")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000209")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200020A")]
	public enum VideoShape
	{
		[Token(Token = "0x4000D2E")]
		_360,
		[Token(Token = "0x4000D2F")]
		_180,
		[Token(Token = "0x4000D30")]
		Quad
	}

	[Token(Token = "0x200020B")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000D32")]
		Mono,
		[Token(Token = "0x4000D33")]
		TopBottom,
		[Token(Token = "0x4000D34")]
		LeftRight,
		[Token(Token = "0x4000D35")]
		BottomTop
	}

	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6974", Offset = "0xAA6974")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0xDAD920", Offset = "0xDAD920", VA = "0xDAD920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0xDAD968", Offset = "0xDAD968", VA = "0xDAD968", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xDAD738", Offset = "0xDAD738", VA = "0xDAD738")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xDAD764", Offset = "0xDAD764", VA = "0xDAD764", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xDAD768", Offset = "0xDAD768", VA = "0xDAD768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xDAD928", Offset = "0xDAD928", VA = "0xDAD928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6984", Offset = "0xAA6984")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xDAD640", Offset = "0xDAD640", VA = "0xDAD640")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xDAD648", Offset = "0xDAD648", VA = "0xDAD648")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAB714", Offset = "0xAAB714")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAB724", Offset = "0xAAB724")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAB734", Offset = "0xAAB734")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x170000E6")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xBF1DCC", Offset = "0xBF1DCC", VA = "0xBF1DCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC4BC", Offset = "0xABC4BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xBF1DD4", Offset = "0xBF1DD4", VA = "0xBF1DD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC4CC", Offset = "0xABC4CC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public long Duration
	{
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xBF1DE0", Offset = "0xBF1DE0", VA = "0xBF1DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC4DC", Offset = "0xABC4DC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xBF1DE8", Offset = "0xBF1DE8", VA = "0xBF1DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC4EC", Offset = "0xABC4EC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xBF1DF0", Offset = "0xBF1DF0", VA = "0xBF1DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC4FC", Offset = "0xABC4FC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xBF1DF8", Offset = "0xBF1DF8", VA = "0xBF1DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC50C", Offset = "0xABC50C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xBF1E00", Offset = "0xBF1E00", VA = "0xBF1E00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xBF20E4", Offset = "0xBF20E4", VA = "0xBF20E4")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xBF2148", Offset = "0xBF2148", VA = "0xBF2148")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xBF27B0", Offset = "0xBF27B0", VA = "0xBF27B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABC51C", Offset = "0xABC51C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xBF281C", Offset = "0xBF281C", VA = "0xBF281C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xBF2AC0", Offset = "0xBF2AC0", VA = "0xBF2AC0")]
	public void Play()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xBF2C64", Offset = "0xBF2C64", VA = "0xBF2C64")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xBF2E04", Offset = "0xBF2E04", VA = "0xBF2E04")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xBF3070", Offset = "0xBF3070", VA = "0xBF3070")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xBF3B3C", Offset = "0xBF3B3C", VA = "0xBF3B3C")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xBF3D64", Offset = "0xBF3D64", VA = "0xBF3D64")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xBF3F04", Offset = "0xBF3F04", VA = "0xBF3F04")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xBF3FF0", Offset = "0xBF3FF0", VA = "0xBF3FF0")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200020E")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200020F")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000D52")]
		Playing,
		[Token(Token = "0x4000D53")]
		Paused,
		[Token(Token = "0x4000D54")]
		Rewinding,
		[Token(Token = "0x4000D55")]
		FastForwarding
	}

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xBF4000", Offset = "0xBF4000", VA = "0xBF4000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xBF4354", Offset = "0xBF4354", VA = "0xBF4354")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xBF4530", Offset = "0xBF4530", VA = "0xBF4530")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xBF4664", Offset = "0xBF4664", VA = "0xBF4664")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xBF476C", Offset = "0xBF476C", VA = "0xBF476C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xBF4638", Offset = "0xBF4638", VA = "0xBF4638")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xBF47CC", Offset = "0xBF47CC", VA = "0xBF47CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xBF4240", Offset = "0xBF4240", VA = "0xBF4240")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xBF4B0C", Offset = "0xBF4B0C", VA = "0xBF4B0C")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000210")]
public static class VectorUtil
{
	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xE819A8", Offset = "0xE819A8", VA = "0xE819A8")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000211")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000D56")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000D57")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x13463EC", Offset = "0x13463EC", VA = "0x13463EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x13467AC", Offset = "0x13467AC", VA = "0x13467AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x1346A38", Offset = "0x1346A38", VA = "0x1346A38")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x1346BA0", Offset = "0x1346BA0", VA = "0x1346BA0")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x1346D0C", Offset = "0x1346D0C", VA = "0x1346D0C")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x1346E9C", Offset = "0x1346E9C", VA = "0x1346E9C")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x2000212")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000D60")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x108975C", Offset = "0x108975C", VA = "0x108975C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x10897AC", Offset = "0x10897AC", VA = "0x10897AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x10897B0", Offset = "0x10897B0", VA = "0x10897B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x10897B4", Offset = "0x10897B4", VA = "0x10897B4")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x1089A10", Offset = "0x1089A10", VA = "0x1089A10")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x1089C40", Offset = "0x1089C40", VA = "0x1089C40")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x2000213")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x108CD84", Offset = "0x108CD84", VA = "0x108CD84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x108D290", Offset = "0x108D290", VA = "0x108D290")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x108D350", Offset = "0x108D350", VA = "0x108D350")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x108D57C", Offset = "0x108D57C", VA = "0x108D57C")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x108D65C", Offset = "0x108D65C", VA = "0x108D65C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x108D740", Offset = "0x108D740", VA = "0x108D740")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x108D7B4", Offset = "0x108D7B4", VA = "0x108D7B4")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x108D7BC", Offset = "0x108D7BC", VA = "0x108D7BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC5DC", Offset = "0xABC5DC")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x108D820", Offset = "0x108D820", VA = "0x108D820")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC5EC", Offset = "0xABC5EC")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x108D884", Offset = "0x108D884", VA = "0x108D884")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC5FC", Offset = "0xABC5FC")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x108D8E8", Offset = "0x108D8E8", VA = "0x108D8E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABC60C", Offset = "0xABC60C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000214")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x13406CC", Offset = "0x13406CC", VA = "0x13406CC")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x2000215")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xE7D3D4", Offset = "0xE7D3D4", VA = "0xE7D3D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xE7D478", Offset = "0xE7D478", VA = "0xE7D478")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xE7D564", Offset = "0xE7D564", VA = "0xE7D564")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xE7D5C4", Offset = "0xE7D5C4", VA = "0xE7D5C4")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000216")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xF01A84", Offset = "0xF01A84", VA = "0xF01A84")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000217")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000218")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA69A4", Offset = "0xAA69A4")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170000EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0xCBC698", Offset = "0xCBC698", VA = "0xCBC698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0xCBC6E0", Offset = "0xCBC6E0", VA = "0xCBC6E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xCBC548", Offset = "0xCBC548", VA = "0xCBC548")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xCBC574", Offset = "0xCBC574", VA = "0xCBC574", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xCBC578", Offset = "0xCBC578", VA = "0xCBC578", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xCBC6A0", Offset = "0xCBC6A0", VA = "0xCBC6A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x12230F4", Offset = "0x12230F4", VA = "0x12230F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x12231F8", Offset = "0x12231F8", VA = "0x12231F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x122318C", Offset = "0x122318C", VA = "0x122318C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABC61C", Offset = "0xABC61C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x12233A4", Offset = "0x12233A4", VA = "0x12233A4")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000219")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAB764", Offset = "0xAAB764")]
	public int SubdivisionsU;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAB780", Offset = "0xAAB780")]
	public int SubdivisionsV;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x10810A4", Offset = "0x10810A4", VA = "0x10810A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x1081AB0", Offset = "0x1081AB0", VA = "0x1081AB0")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200021A")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x170000ED")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x24E45E0", Offset = "0x24E45E0", VA = "0x24E45E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x24E4634", Offset = "0x24E4634", VA = "0x24E4634")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x24E4A50", Offset = "0x24E4A50", VA = "0x24E4A50")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x24E4B3C", Offset = "0x24E4B3C", VA = "0x24E4B3C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xABC6CC", Offset = "0xABC6CC")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000A6E")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000A6F")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000A70")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000A71")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000A72")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000A73")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000A74")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000A75")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x24E4BA0", Offset = "0x24E4BA0", VA = "0x24E4BA0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x24E4BDC", Offset = "0x24E4BDC", VA = "0x24E4BDC")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x24E4C4C", Offset = "0x24E4C4C", VA = "0x24E4C4C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x24E4DBC", Offset = "0x24E4DBC", VA = "0x24E4DBC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x24E4E98", Offset = "0x24E4E98", VA = "0x24E4E98")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x24E4948", Offset = "0x24E4948", VA = "0x24E4948")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x24E4F60", Offset = "0x24E4F60", VA = "0x24E4F60")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x24E4FC8", Offset = "0x24E4FC8", VA = "0x24E4FC8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x24E50C0", Offset = "0x24E50C0", VA = "0x24E50C0")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200021B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA69C4", Offset = "0xAA69C4")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200021C")]
	public enum DrawMode
	{
		[Token(Token = "0x4000D8F")]
		Opaque,
		[Token(Token = "0x4000D90")]
		OpaqueWithClip,
		[Token(Token = "0x4000D91")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000D92")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x170000EE")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x1159A0C", Offset = "0x1159A0C", VA = "0x1159A0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x1159A9C", Offset = "0x1159A9C", VA = "0x1159A9C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x1158544", Offset = "0x1158544", VA = "0x1158544")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x1159078", Offset = "0x1159078", VA = "0x1159078")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x11590F8", Offset = "0x11590F8", VA = "0x11590F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x11591E8", Offset = "0x11591E8", VA = "0x11591E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x11592D8", Offset = "0x11592D8", VA = "0x11592D8", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x11594E4", Offset = "0x11594E4", VA = "0x11594E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x1159B68", Offset = "0x1159B68", VA = "0x1159B68")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200021D")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x1349248", Offset = "0x1349248", VA = "0x1349248")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x13493FC", Offset = "0x13493FC", VA = "0x13493FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x1349584", Offset = "0x1349584", VA = "0x1349584")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x134958C", Offset = "0x134958C", VA = "0x134958C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x1349574", Offset = "0x1349574", VA = "0x1349574")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x1349594", Offset = "0x1349594", VA = "0x1349594")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x200021E")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6A24", Offset = "0xAA6A24")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xE90F78", Offset = "0xE90F78", VA = "0xE90F78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0xE90FC0", Offset = "0xE90FC0", VA = "0xE90FC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xE90E54", Offset = "0xE90E54", VA = "0xE90E54")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xE90E80", Offset = "0xE90E80", VA = "0xE90E80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xE90E84", Offset = "0xE90E84", VA = "0xE90E84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xE90F80", Offset = "0xE90F80", VA = "0xE90F80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6A34", Offset = "0xAA6A34")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0xE91174", Offset = "0xE91174", VA = "0xE91174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0xE911BC", Offset = "0xE911BC", VA = "0xE911BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xE90FC8", Offset = "0xE90FC8", VA = "0xE90FC8")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xE90FF4", Offset = "0xE90FF4", VA = "0xE90FF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xE90FF8", Offset = "0xE90FF8", VA = "0xE90FF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xE9117C", Offset = "0xE9117C", VA = "0xE9117C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x10025BC", Offset = "0x10025BC", VA = "0x10025BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x1002850", Offset = "0x1002850", VA = "0x1002850")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x10028AC", Offset = "0x10028AC", VA = "0x10028AC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x1002A10", Offset = "0x1002A10", VA = "0x1002A10")]
	public void Release()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x1002AD4", Offset = "0x1002AD4", VA = "0x1002AD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABC704", Offset = "0xABC704")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x1002958", Offset = "0x1002958", VA = "0x1002958")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABC764", Offset = "0xABC764")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1002B70", Offset = "0x1002B70", VA = "0x1002B70")]
	public BrushController()
	{
	}
}
[Token(Token = "0x2000221")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x1C36898", Offset = "0x1C36898", VA = "0x1C36898")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x1C368F8", Offset = "0x1C368F8", VA = "0x1C368F8")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x2000222")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x13C2370", Offset = "0x13C2370", VA = "0x13C2370")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x13C24A4", Offset = "0x13C24A4", VA = "0x13C24A4")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x13C2538", Offset = "0x13C2538", VA = "0x13C2538")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x13C25A0", Offset = "0x13C25A0", VA = "0x13C25A0")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x2000223")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x2000224")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6A44", Offset = "0xAA6A44")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0xCBB138", Offset = "0xCBB138", VA = "0xCBB138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0xCBB180", Offset = "0xCBB180", VA = "0xCBB180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xCBAF38", Offset = "0xCBAF38", VA = "0xCBAF38")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xCBAF64", Offset = "0xCBAF64", VA = "0xCBAF64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xCBAF68", Offset = "0xCBAF68", VA = "0xCBAF68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xCBB140", Offset = "0xCBB140", VA = "0xCBB140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x13C25A8", Offset = "0x13C25A8", VA = "0x13C25A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x13C2834", Offset = "0x13C2834", VA = "0x13C2834")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x13C2B84", Offset = "0x13C2B84", VA = "0x13C2B84")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x13C2EB0", Offset = "0x13C2EB0", VA = "0x13C2EB0")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x13C31B4", Offset = "0x13C31B4", VA = "0x13C31B4")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x13C32A8", Offset = "0x13C32A8", VA = "0x13C32A8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x13C3468", Offset = "0x13C3468", VA = "0x13C3468")]
	public void Release()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x13C33C0", Offset = "0x13C33C0", VA = "0x13C33C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABC864", Offset = "0xABC864")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x13C3550", Offset = "0x13C3550", VA = "0x13C3550")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x2000225")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000226")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000DC7")]
		Default,
		[Token(Token = "0x4000DC8")]
		ForcedHand,
		[Token(Token = "0x4000DC9")]
		DollyHand,
		[Token(Token = "0x4000DCA")]
		DollyAttached,
		[Token(Token = "0x4000DCB")]
		HorizontalScaled,
		[Token(Token = "0x4000DCC")]
		VerticalScaled,
		[Token(Token = "0x4000DCD")]
		Menu
	}

	[Token(Token = "0x2000227")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000228")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000229")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xAAB80C", Offset = "0xAAB80C")]
	public string ObjectName;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xAAB81C", Offset = "0xAAB81C")]
	public string ObjectInstructions;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x24D55C0", Offset = "0x24D55C0", VA = "0x24D55C0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x24D561C", Offset = "0x24D561C", VA = "0x24D561C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x24D5630", Offset = "0x24D5630", VA = "0x24D5630")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x24D5644", Offset = "0x24D5644", VA = "0x24D5644")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x200022A")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB83C", Offset = "0xAAB83C")]
	public int radialDivisions;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB874", Offset = "0xAAB874")]
	public float borderSize;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB8AC", Offset = "0xAAB8AC")]
	public float fingerTaper;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB8E4", Offset = "0xAAB8E4")]
	public float fingerTipLength;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB91C", Offset = "0xAAB91C")]
	public float webOffset;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x121DE94", Offset = "0x121DE94", VA = "0x121DE94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x121E06C", Offset = "0x121E06C", VA = "0x121E06C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x121E278", Offset = "0x121E278", VA = "0x121E278")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x121E8B4", Offset = "0x121E8B4", VA = "0x121E8B4")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x121EEE4", Offset = "0x121EEE4", VA = "0x121EEE4")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x1221560", Offset = "0x1221560", VA = "0x1221560")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x122161C", Offset = "0x122161C", VA = "0x122161C")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x200022B")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x1221640", Offset = "0x1221640", VA = "0x1221640")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x1221978", Offset = "0x1221978", VA = "0x1221978")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x12216E8", Offset = "0x12216E8", VA = "0x12216E8")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x1221D68", Offset = "0x1221D68", VA = "0x1221D68")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x1222258", Offset = "0x1222258", VA = "0x1222258")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x200022C")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6A54", Offset = "0xAA6A54")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0xDB3980", Offset = "0xDB3980", VA = "0xDB3980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0xDB39C8", Offset = "0xDB39C8", VA = "0xDB39C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xDB36BC", Offset = "0xDB36BC", VA = "0xDB36BC")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xDB36E8", Offset = "0xDB36E8", VA = "0xDB36E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xDB36EC", Offset = "0xDB36EC", VA = "0xDB36EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xDB3988", Offset = "0xDB3988", VA = "0xDB3988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x115E694", Offset = "0x115E694", VA = "0x115E694")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x115E8C0", Offset = "0x115E8C0", VA = "0x115E8C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x115F4D8", Offset = "0x115F4D8", VA = "0x115F4D8")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x11600E0", Offset = "0x11600E0", VA = "0x11600E0")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x115E854", Offset = "0x115E854", VA = "0x115E854")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABC914", Offset = "0xABC914")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x115EB24", Offset = "0x115EB24", VA = "0x115EB24")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x115F79C", Offset = "0x115F79C", VA = "0x115F79C")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x1160398", Offset = "0x1160398", VA = "0x1160398")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x1160424", Offset = "0x1160424", VA = "0x1160424")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x1160454", Offset = "0x1160454", VA = "0x1160454")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x1160260", Offset = "0x1160260", VA = "0x1160260")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x1160578", Offset = "0x1160578", VA = "0x1160578")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x200022E")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x1163230", Offset = "0x1163230", VA = "0x1163230")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x11633BC", Offset = "0x11633BC", VA = "0x11633BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x1163484", Offset = "0x1163484", VA = "0x1163484")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x200022F")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x2000230")]
	public enum BrushState
	{
		[Token(Token = "0x4000E0A")]
		Idle,
		[Token(Token = "0x4000E0B")]
		Inking
	}

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xCD0624", Offset = "0xCD0624", VA = "0xCD0624")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xCD062C", Offset = "0xCD062C", VA = "0xCD062C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xCD0914", Offset = "0xCD0914", VA = "0xCD0914")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xCD0AF0", Offset = "0xCD0AF0", VA = "0xCD0AF0")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xCD0C98", Offset = "0xCD0C98", VA = "0xCD0C98")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xCD0820", Offset = "0xCD0820", VA = "0xCD0820")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xCD0D74", Offset = "0xCD0D74", VA = "0xCD0D74")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x2000231")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xCD0E00", Offset = "0xCD0E00", VA = "0xCD0E00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xCD0F8C", Offset = "0xCD0F8C", VA = "0xCD0F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xCD10F4", Offset = "0xCD10F4", VA = "0xCD10F4")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000232")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xCD1108", Offset = "0xCD1108", VA = "0xCD1108")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xCD12FC", Offset = "0xCD12FC", VA = "0xCD12FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xCD14CC", Offset = "0xCD14CC", VA = "0xCD14CC")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000233")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6A64", Offset = "0xAA6A64")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x170000F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0xDB626C", Offset = "0xDB626C", VA = "0xDB626C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0xDB62B4", Offset = "0xDB62B4", VA = "0xDB62B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xDB6094", Offset = "0xDB6094", VA = "0xDB6094")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xDB60C0", Offset = "0xDB60C0", VA = "0xDB60C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xDB60C4", Offset = "0xDB60C4", VA = "0xDB60C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xDB6274", Offset = "0xDB6274", VA = "0xDB6274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6A74", Offset = "0xAA6A74")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0xDB64D4", Offset = "0xDB64D4", VA = "0xDB64D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0xDB651C", Offset = "0xDB651C", VA = "0xDB651C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xDB62BC", Offset = "0xDB62BC", VA = "0xDB62BC")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xDB62E8", Offset = "0xDB62E8", VA = "0xDB62E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xDB62EC", Offset = "0xDB62EC", VA = "0xDB62EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xDB64DC", Offset = "0xDB64DC", VA = "0xDB64DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xCD16CC", Offset = "0xCD16CC", VA = "0xCD16CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xCD19D0", Offset = "0xCD19D0", VA = "0xCD19D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xCD1C28", Offset = "0xCD1C28", VA = "0xCD1C28")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xCD1D90", Offset = "0xCD1D90", VA = "0xCD1D90")]
	public void Release()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xCD1D14", Offset = "0xCD1D14", VA = "0xCD1D14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABC9C4", Offset = "0xABC9C4")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xCD1E70", Offset = "0xCD1E70", VA = "0xCD1E70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABCA24", Offset = "0xABCA24")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xCD1EEC", Offset = "0xCD1EEC", VA = "0xCD1EEC")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xCD1F0C", Offset = "0xCD1F0C", VA = "0xCD1F0C")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xCD1F2C", Offset = "0xCD1F2C", VA = "0xCD1F2C")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xCD1F4C", Offset = "0xCD1F4C", VA = "0xCD1F4C")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xCD1954", Offset = "0xCD1954", VA = "0xCD1954")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xCD1FB0", Offset = "0xCD1FB0", VA = "0xCD1FB0")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xCD1FBC", Offset = "0xCD1FBC", VA = "0xCD1FBC")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xCD19E8", Offset = "0xCD19E8", VA = "0xCD19E8")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xCD1FC8", Offset = "0xCD1FC8", VA = "0xCD1FC8")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000236")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xCD200C", Offset = "0xCD200C", VA = "0xCD200C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xCD20CC", Offset = "0xCD20CC", VA = "0xCD20CC")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000237")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xE7B4C8", Offset = "0xE7B4C8", VA = "0xE7B4C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xE7B6D0", Offset = "0xE7B6D0", VA = "0xE7B6D0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xE7B728", Offset = "0xE7B728", VA = "0xE7B728")]
	public void Release()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xE7B774", Offset = "0xE7B774", VA = "0xE7B774")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000238")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xE7E0F0", Offset = "0xE7E0F0", VA = "0xE7E0F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xE7E168", Offset = "0xE7E168", VA = "0xE7E168")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xE7E48C", Offset = "0xE7E48C", VA = "0xE7E48C")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000239")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x1038A10", Offset = "0x1038A10", VA = "0x1038A10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x1038E98", Offset = "0x1038E98", VA = "0x1038E98")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x200023A")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6A84", Offset = "0xAA6A84")]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0xE90E04", Offset = "0xE90E04", VA = "0xE90E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0xE90E4C", Offset = "0xE90E4C", VA = "0xE90E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xE90CE4", Offset = "0xE90CE4", VA = "0xE90CE4")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xE90D10", Offset = "0xE90D10", VA = "0xE90D10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xE90D14", Offset = "0xE90D14", VA = "0xE90D14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xE90E0C", Offset = "0xE90E0C", VA = "0xE90E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xFFF0C0", Offset = "0xFFF0C0", VA = "0xFFF0C0")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xFFF0E4", Offset = "0xFFF0E4", VA = "0xFFF0E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xFFF1F0", Offset = "0xFFF1F0", VA = "0xFFF1F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xFFF2A4", Offset = "0xFFF2A4", VA = "0xFFF2A4")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xFFF4C4", Offset = "0xFFF4C4", VA = "0xFFF4C4")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xFFF57C", Offset = "0xFFF57C", VA = "0xFFF57C")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xFFF448", Offset = "0xFFF448", VA = "0xFFF448")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABCB24", Offset = "0xABCB24")]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xFFF69C", Offset = "0xFFF69C", VA = "0xFFF69C")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x200023C")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xFFF6B4", Offset = "0xFFF6B4", VA = "0xFFF6B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xFFF9BC", Offset = "0xFFF9BC", VA = "0xFFF9BC")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x200023D")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xAA6A94", Offset = "0xAA6A94")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6A94", Offset = "0xAA6A94")]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAB9F4", Offset = "0xAAB9F4")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x13C7080", Offset = "0x13C7080", VA = "0x13C7080")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x13C7284", Offset = "0x13C7284", VA = "0x13C7284")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x13C76E4", Offset = "0x13C76E4", VA = "0x13C76E4")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x13C7104", Offset = "0x13C7104", VA = "0x13C7104")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x13C78C8", Offset = "0x13C78C8", VA = "0x13C78C8")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x13C79BC", Offset = "0x13C79BC", VA = "0x13C79BC")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x200023E")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6B08", Offset = "0xAA6B08")]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0xDADA98", Offset = "0xDADA98", VA = "0xDADA98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0xDADAE0", Offset = "0xDADAE0", VA = "0xDADAE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xDAD970", Offset = "0xDAD970", VA = "0xDAD970")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xDAD99C", Offset = "0xDAD99C", VA = "0xDAD99C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xDAD9A0", Offset = "0xDAD9A0", VA = "0xDAD9A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xDADAA0", Offset = "0xDADAA0", VA = "0xDADAA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xBF4D74", Offset = "0xBF4D74", VA = "0xBF4D74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABCBD4", Offset = "0xABCBD4")]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xBF4DE0", Offset = "0xBF4DE0", VA = "0xBF4DE0", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xBF4E0C", Offset = "0xBF4E0C", VA = "0xBF4E0C", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xBF4E80", Offset = "0xBF4E80", VA = "0xBF4E80")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x2000240")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6B18", Offset = "0xAA6B18")]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xCD10FC", Offset = "0xCD10FC", VA = "0xCD10FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xCD1100", Offset = "0xCD1100", VA = "0xCD1100")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x2000241")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xE73C0C", Offset = "0xE73C0C", VA = "0xE73C0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xE73C88", Offset = "0xE73C88", VA = "0xE73C88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xE73D18", Offset = "0xE73D18", VA = "0xE73D18")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x2000242")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x2000243")]
	public enum Method
	{
		[Token(Token = "0x4000E6A")]
		Adapt,
		[Token(Token = "0x4000E6B")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x4000E6C")]
		Scale,
		[Token(Token = "0x4000E6D")]
		None
	}

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAABA2C", Offset = "0xAABA2C")]
	public Method ScalingX;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAABA40", Offset = "0xAABA40")]
	public float PaddingX;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAABA58", Offset = "0xAABA58")]
	public float PaddingXMax;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAABA70", Offset = "0xAABA70")]
	public Method ScalingY;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAABA84", Offset = "0xAABA84")]
	public float PaddingY;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAABA9C", Offset = "0xAABA9C")]
	public float PaddingYMax;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAABAB4", Offset = "0xAABAB4")]
	public Method ScalingZ;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAABAC8", Offset = "0xAABAC8")]
	public float PaddingZ;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAABAE0", Offset = "0xAABAE0")]
	public float PaddingZMax;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAABAF8", Offset = "0xAABAF8")]
	private Vector3 <NewSize>k__BackingField;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAABB08", Offset = "0xAABB08")]
	private Vector3 <DefaultSize>k__BackingField;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAABB18", Offset = "0xAABB18")]
	private Mesh <Mesh>k__BackingField;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x170000FF")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1045FEC", Offset = "0x1045FEC", VA = "0x1045FEC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000100")]
	public Vector3 NewSize
	{
		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x1046008", Offset = "0x1046008", VA = "0x1046008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCC84", Offset = "0xABCC84")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1046014", Offset = "0x1046014", VA = "0x1046014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCC94", Offset = "0xABCC94")]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x1046020", Offset = "0x1046020", VA = "0x1046020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCCA4", Offset = "0xABCCA4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x104602C", Offset = "0x104602C", VA = "0x104602C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCCB4", Offset = "0xABCCB4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public Mesh Mesh
	{
		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x1046038", Offset = "0x1046038", VA = "0x1046038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCCC4", Offset = "0xABCCC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x1046040", Offset = "0x1046040", VA = "0x1046040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCCD4", Offset = "0xABCCD4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x1046048", Offset = "0x1046048", VA = "0x1046048")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x1046164", Offset = "0x1046164", VA = "0x1046164")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x2000244")]
public class SimpleResizer
{
	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x104616C", Offset = "0x104616C", VA = "0x104616C")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x1046478", Offset = "0x1046478", VA = "0x1046478")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x1046710", Offset = "0x1046710", VA = "0x1046710")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x10467EC", Offset = "0x10467EC", VA = "0x10467EC")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000245")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xEFBC50", Offset = "0xEFBC50", VA = "0xEFBC50", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xEFBC54", Offset = "0xEFBC54", VA = "0xEFBC54", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xEFC0B8", Offset = "0xEFC0B8", VA = "0xEFC0B8")]
	public Spawnable()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xEFBDC4", Offset = "0xEFBDC4", VA = "0xEFBDC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCCE4", Offset = "0xABCCE4")]
	internal static int <OnAfterDeserialize>g__IndexOf|4_0(string label, IEnumerable<string> collection)
	{
		return default(int);
	}
}
[Token(Token = "0x2000246")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6B88", Offset = "0xAA6B88")]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000247")]
	public enum GeometryType
	{
		[Token(Token = "0x4000E75")]
		Plane,
		[Token(Token = "0x4000E76")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x2000248")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xE87BB0", Offset = "0xE87BB0", VA = "0xE87BB0")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xE87FB0", Offset = "0xE87FB0", VA = "0xE87FB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xE88854", Offset = "0xE88854", VA = "0xE88854")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xE88758", Offset = "0xE88758", VA = "0xE88758")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xE888D8", Offset = "0xE888D8", VA = "0xE888D8")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x2000249")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6BE8", Offset = "0xAA6BE8")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6C48", Offset = "0xAA6C48")]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x17000104")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0xE8FFF4", Offset = "0xE8FFF4", VA = "0xE8FFF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0xE9003C", Offset = "0xE9003C", VA = "0xE9003C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xE8FE3C", Offset = "0xE8FE3C", VA = "0xE8FE3C")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xE8FE68", Offset = "0xE8FE68", VA = "0xE8FE68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xE8FE6C", Offset = "0xE8FE6C", VA = "0xE8FE6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xE8FFFC", Offset = "0xE8FFFC", VA = "0xE8FFFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E79")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABB48", Offset = "0xAABB48")]
	private Canvas _canvas;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABB94", Offset = "0xAABB94")]
	[SerializeField]
	private Transform _pivot;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABBE0", Offset = "0xAABBE0")]
	private GameObject _anchorMenu;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABC2C", Offset = "0xAABC2C")]
	[SerializeField]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABC78", Offset = "0xAABC78")]
	[SerializeField]
	private GameObject _saveIcon;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABCC4", Offset = "0xAABCC4")]
	[SerializeField]
	private Image _labelImage;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABD10", Offset = "0xAABD10")]
	private Color _labelBaseColor;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABD5C", Offset = "0xAABD5C")]
	[SerializeField]
	private Color _labelHighlightColor;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABDA8", Offset = "0xAABDA8")]
	[SerializeField]
	private Color _labelSelectedColor;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABDF4", Offset = "0xAABDF4")]
	[SerializeField]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABE40", Offset = "0xAABE40")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABE8C", Offset = "0xAABE8C")]
	private List<Button> _buttonList;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x17000103")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x1340D70", Offset = "0x1340D70", VA = "0x1340D70")]
		set
		{
		}
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x13406D4", Offset = "0x13406D4", VA = "0x13406D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x134081C", Offset = "0x134081C", VA = "0x134081C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABCCF4", Offset = "0xABCCF4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x1340888", Offset = "0x1340888", VA = "0x1340888")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x1340B08", Offset = "0x1340B08", VA = "0x1340B08")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x1340C00", Offset = "0x1340C00", VA = "0x1340C00")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x1340C78", Offset = "0x1340C78", VA = "0x1340C78")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x1340D90", Offset = "0x1340D90", VA = "0x1340D90")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x1340E98", Offset = "0x1340E98", VA = "0x1340E98")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x1340FB8", Offset = "0x1340FB8", VA = "0x1340FB8")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x13408E4", Offset = "0x13408E4", VA = "0x13408E4")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x13409F8", Offset = "0x13409F8", VA = "0x13409F8")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x134107C", Offset = "0x134107C", VA = "0x134107C")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x13411C4", Offset = "0x13411C4", VA = "0x13411C4")]
	public Anchor()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x13411CC", Offset = "0x13411CC", VA = "0x13411CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCD54", Offset = "0xABCD54")]
	private void <OnSaveLocalButtonPressed>b__22_0(OVRSpatialAnchor anchor, bool success)
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x13412F4", Offset = "0x13412F4", VA = "0x13412F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCD64", Offset = "0xABCD64")]
	private void <OnEraseButtonPressed>b__24_0(OVRSpatialAnchor anchor, bool success)
	{
	}
}
[Token(Token = "0x200024B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6C58", Offset = "0xAA6C58")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x200024C")]
	public enum AnchorMode
	{
		[Token(Token = "0x4000EA2")]
		Create,
		[Token(Token = "0x4000EA3")]
		Select
	}

	[Token(Token = "0x200024D")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABED8", Offset = "0xAABED8")]
	private GameObject _createModeButton;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABF24", Offset = "0xAABF24")]
	private GameObject _selectModeButton;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABF70", Offset = "0xAABF70")]
	private Transform _trackedDevice;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAABFBC", Offset = "0xAABFBC")]
	[SerializeField]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAAC008", Offset = "0xAAC008")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAAC064", Offset = "0xAAC064")]
	[SerializeField]
	private GameObject _placementPreview;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xAAC0B0", Offset = "0xAAC0B0")]
	[SerializeField]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x17000106")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x134131C", Offset = "0x134131C", VA = "0x134131C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x1341324", Offset = "0x1341324", VA = "0x1341324")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x13413F8", Offset = "0x13413F8", VA = "0x13413F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x1341544", Offset = "0x1341544", VA = "0x1341544")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x134199C", Offset = "0x134199C", VA = "0x134199C")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x1341A0C", Offset = "0x1341A0C", VA = "0x1341A0C")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x13414E4", Offset = "0x13414E4", VA = "0x13414E4")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x1341A8C", Offset = "0x1341A8C", VA = "0x1341A8C")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x1341B0C", Offset = "0x1341B0C", VA = "0x1341B0C")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x1341B30", Offset = "0x1341B30", VA = "0x1341B30")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x1341A68", Offset = "0x1341A68", VA = "0x1341A68")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x134188C", Offset = "0x134188C", VA = "0x134188C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x1341C64", Offset = "0x1341C64", VA = "0x1341C64")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x1341BB0", Offset = "0x1341BB0", VA = "0x1341BB0")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x1341BD0", Offset = "0x1341BD0", VA = "0x1341BD0")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x1341D6C", Offset = "0x1341D6C", VA = "0x1341D6C")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x1341BF0", Offset = "0x1341BF0", VA = "0x1341BF0")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x1341C2C", Offset = "0x1341C2C", VA = "0x1341C2C")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x1341650", Offset = "0x1341650", VA = "0x1341650")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x1341E64", Offset = "0x1341E64", VA = "0x1341E64")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x1341E80", Offset = "0x1341E80", VA = "0x1341E80")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x1341F08", Offset = "0x1341F08", VA = "0x1341F08")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x134205C", Offset = "0x134205C", VA = "0x134205C")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x200024E")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly HashSet<ulong> _locateAnchorRequest;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ulong _queryRequestId;

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xEFA660", Offset = "0xEFA660", VA = "0xEFA660")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xEFA780", Offset = "0xEFA780", VA = "0xEFA780")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xEFA8A0", Offset = "0xEFA8A0", VA = "0xEFA8A0")]
	private void SetComponentEnabled(ulong requestId, bool result, OVRSpace space, Guid uuid, OVRPlugin.SpaceComponentType componentType, bool enabled)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xEFAB0C", Offset = "0xEFAB0C", VA = "0xEFAB0C")]
	private void QueryComplete(ulong requestId, bool result)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xEFAD3C", Offset = "0xEFAD3C", VA = "0xEFAD3C")]
	private void TryEnableComponent(ulong anchorHandle, OVRPlugin.SpaceComponentType type)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xEFB0F4", Offset = "0xEFB0F4", VA = "0xEFB0F4")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xEFB380", Offset = "0xEFB380", VA = "0xEFB380")]
	public void LoadAllLocalAnchors()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xEFAA7C", Offset = "0xEFAA7C", VA = "0xEFAA7C")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xEFB4C8", Offset = "0xEFB4C8", VA = "0xEFB4C8")]
	public SpatialAnchorLoader()
	{
	}
}
[Token(Token = "0x200024F")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6CB8", Offset = "0xAA6CB8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xE694E4", Offset = "0xE694E4", VA = "0xE694E4")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xE694EC", Offset = "0xE694EC", VA = "0xE694EC")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xF01A8C", Offset = "0xF01A8C", VA = "0xF01A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xF01C98", Offset = "0xF01C98", VA = "0xF01C98")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xF01DA8", Offset = "0xF01DA8", VA = "0xF01DA8")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000251")]
public class VoiceModDemo_Logic : MonoBehaviour
{
	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRVoiceModContext[] contexts;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] xfrms;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VoiceModEnableSwitch SwitchTarget;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int targetSet;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 scale;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float scaleMax;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentPreset;

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xE86AF4", Offset = "0xE86AF4", VA = "0xE86AF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xE86D3C", Offset = "0xE86D3C", VA = "0xE86D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xE870D8", Offset = "0xE870D8", VA = "0xE870D8")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xE871E4", Offset = "0xE871E4", VA = "0xE871E4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xE87000", Offset = "0xE87000", VA = "0xE87000")]
	private void UpdateModelScale()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xE875A0", Offset = "0xE875A0", VA = "0xE875A0")]
	public VoiceModDemo_Logic()
	{
	}
}
[Token(Token = "0x2000252")]
public class VoiceModEnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000B9B")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xE86C78", Offset = "0xE86C78", VA = "0xE86C78")]
	public bool SetActive(int target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xE875B4", Offset = "0xE875B4", VA = "0xE875B4")]
	public VoiceModEnableSwitch()
	{
	}
}
[Token(Token = "0x2000253")]
public class OVRDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRDebugConsole s_Instance;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000107")]
	public static OVRDebugConsole instance
	{
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x1156730", Offset = "0x1156730", VA = "0x1156730")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x1156A2C", Offset = "0x1156A2C", VA = "0x1156A2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x1156B84", Offset = "0x1156B84", VA = "0x1156B84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x1156A98", Offset = "0x1156A98", VA = "0x1156A98")]
	public void Init()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x1156C7C", Offset = "0x1156C7C", VA = "0x1156C7C")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x1156DE4", Offset = "0x1156DE4", VA = "0x1156DE4")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x1156C18", Offset = "0x1156C18", VA = "0x1156C18")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x1156EBC", Offset = "0x1156EBC", VA = "0x1156EBC")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x1156CF8", Offset = "0x1156CF8", VA = "0x1156CF8")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x1156E80", Offset = "0x1156E80", VA = "0x1156E80")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x1156F38", Offset = "0x1156F38", VA = "0x1156F38")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x115714C", Offset = "0x115714C", VA = "0x115714C")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x1156F48", Offset = "0x1156F48", VA = "0x1156F48")]
	private void Display()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x11571FC", Offset = "0x11571FC", VA = "0x11571FC")]
	public OVRDebugConsole()
	{
	}
}
[Token(Token = "0x2000254")]
public delegate void OVRCallback();
[Token(Token = "0x2000255")]
public delegate void OVRCallback<T>(T arg1);
[Token(Token = "0x2000256")]
public delegate void OVRCallback<T, U>(T arg1, U arg2);
[Token(Token = "0x2000257")]
public delegate void OVRCallback<T, U, V>(T arg1, U arg2, V arg3);
[Token(Token = "0x2000258")]
internal static class OVRMessenger
{
	[Token(Token = "0x2000259")]
	public class BroadcastException : Exception
	{
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xDB3234", Offset = "0xDB3234", VA = "0xDB3234")]
		public BroadcastException(string msg)
		{
		}
	}

	[Token(Token = "0x200025A")]
	public class ListenerException : Exception
	{
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xDB32A8", Offset = "0xDB32A8", VA = "0xDB32A8")]
		public ListenerException(string msg)
		{
		}
	}

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MessengerHelper messengerHelper;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, Delegate> eventTable;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<string> permanentMessages;

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x115726C", Offset = "0x115726C", VA = "0x115726C")]
	public static void MarkAsPermanent(string eventType)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x11572F8", Offset = "0x11572F8", VA = "0x11572F8")]
	public static void Cleanup()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x11577D0", Offset = "0x11577D0", VA = "0x11577D0")]
	public static void PrintEventTable()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x1157A68", Offset = "0x1157A68", VA = "0x1157A68")]
	public static void OnListenerAdding(string eventType, Delegate listenerBeingAdded)
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x1157CCC", Offset = "0x1157CCC", VA = "0x1157CCC")]
	public static void OnListenerRemoving(string eventType, Delegate listenerBeingRemoved)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x1157F0C", Offset = "0x1157F0C", VA = "0x1157F0C")]
	public static void OnListenerRemoved(string eventType)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x1157FF0", Offset = "0x1157FF0", VA = "0x1157FF0")]
	public static void OnBroadcasting(string eventType)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x1157FF4", Offset = "0x1157FF4", VA = "0x1157FF4")]
	public static BroadcastException CreateBroadcastSignatureException(string eventType)
	{
		return null;
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x1158080", Offset = "0x1158080", VA = "0x1158080")]
	public static void AddListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x6000BC6")]
	public static void AddListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x6000BC7")]
	public static void AddListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x6000BC8")]
	public static void AddListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x11581A4", Offset = "0x11581A4", VA = "0x11581A4")]
	public static void RemoveListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x6000BCA")]
	public static void RemoveListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x6000BCB")]
	public static void RemoveListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x6000BCC")]
	public static void RemoveListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x11582D0", Offset = "0x11582D0", VA = "0x11582D0")]
	public static void Broadcast(string eventType)
	{
	}

	[Token(Token = "0x6000BCE")]
	public static void Broadcast<T>(string eventType, T arg1)
	{
	}

	[Token(Token = "0x6000BCF")]
	public static void Broadcast<T, U>(string eventType, T arg1, U arg2)
	{
	}

	[Token(Token = "0x6000BD0")]
	public static void Broadcast<T, U, V>(string eventType, T arg1, U arg2, V arg3)
	{
	}
}
[Token(Token = "0x200025B")]
public sealed class MessengerHelper : MonoBehaviour
{
	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xBEB540", Offset = "0xBEB540", VA = "0xBEB540")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xBEB5B8", Offset = "0xBEB5B8", VA = "0xBEB5B8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xBEB614", Offset = "0xBEB614", VA = "0xBEB614")]
	public MessengerHelper()
	{
	}
}
[Token(Token = "0x200025C")]
public class OVRVoiceMod : MonoBehaviour
{
	[Token(Token = "0x200025D")]
	public enum ovrVoiceModError
	{
		[Token(Token = "0x4000EC3")]
		Unknown = -2250,
		[Token(Token = "0x4000EC4")]
		CannotCreateContext = -2251,
		[Token(Token = "0x4000EC5")]
		InvalidParam = -2252,
		[Token(Token = "0x4000EC6")]
		BadSampleRate = -2253,
		[Token(Token = "0x4000EC7")]
		MissingDLL = -2254,
		[Token(Token = "0x4000EC8")]
		BadVersion = -2255,
		[Token(Token = "0x4000EC9")]
		UndefinedFunction = -2256
	}

	[Token(Token = "0x200025E")]
	public enum ovrViceModFlag
	{
		[Token(Token = "0x4000ECB")]
		None
	}

	[Token(Token = "0x4000EBE")]
	public const int ovrVoiceModSuccess = 0;

	[Token(Token = "0x4000EBF")]
	public const string strOVRLS = "OVRVoiceMod";

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sOVRVoiceModInit;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OVRVoiceMod sInstance;

	[PreserveSig]
	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x115B03C", Offset = "0x115B03C", VA = "0x115B03C")]
	private static extern int ovrVoiceModDll_Initialize(int SampleRate, int BufferSize);

	[PreserveSig]
	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x115B0CC", Offset = "0x115B0CC", VA = "0x115B0CC")]
	private static extern void ovrVoiceModDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x115B13C", Offset = "0x115B13C", VA = "0x115B13C")]
	private static extern IntPtr ovrVoicemodDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x115B1D4", Offset = "0x115B1D4", VA = "0x115B1D4")]
	private static extern int ovrVoiceModDll_CreateContext(ref uint Context);

	[PreserveSig]
	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x115B254", Offset = "0x115B254", VA = "0x115B254")]
	private static extern int ovrVoiceModDll_DestroyContext(uint Context);

	[PreserveSig]
	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x115B2D4", Offset = "0x115B2D4", VA = "0x115B2D4")]
	private static extern int ovrVoiceModDll_SendParameter(uint Context, int Parameter, int Value);

	[PreserveSig]
	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x115B36C", Offset = "0x115B36C", VA = "0x115B36C")]
	private static extern int ovrVoiceModDll_ProcessFrame(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x115B40C", Offset = "0x115B40C", VA = "0x115B40C")]
	private static extern int ovrVoiceModDll_ProcessFrameInterleaved(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x115B4AC", Offset = "0x115B4AC", VA = "0x115B4AC")]
	private static extern int ovrVoiceModDll_GetAverageAbsVolume(uint Context, ref float Volume);

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x115B53C", Offset = "0x115B53C", VA = "0x115B53C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x115B924", Offset = "0x115B924", VA = "0x115B924")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x115B928", Offset = "0x115B928", VA = "0x115B928")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x115B92C", Offset = "0x115B92C", VA = "0x115B92C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x115BA58", Offset = "0x115BA58", VA = "0x115BA58")]
	public static int IsInitialized()
	{
		return default(int);
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x115BABC", Offset = "0x115BABC", VA = "0x115BABC")]
	public static int CreateContext(ref uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x115BB94", Offset = "0x115BB94", VA = "0x115BB94")]
	public static int DestroyContext(uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x115BC6C", Offset = "0x115BC6C", VA = "0x115BC6C")]
	public static int SendParameter(uint context, int parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x115BD60", Offset = "0x115BD60", VA = "0x115BD60")]
	public static int ProcessFrame(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x115BE44", Offset = "0x115BE44", VA = "0x115BE44")]
	public static int ProcessFrameInterleaved(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x115BF28", Offset = "0x115BF28", VA = "0x115BF28")]
	public static float GetAverageAbsVolume(uint context)
	{
		return default(float);
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x115C004", Offset = "0x115C004", VA = "0x115C004")]
	public OVRVoiceMod()
	{
	}
}
[Token(Token = "0x200025F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6CC8", Offset = "0xAA6CC8")]
public class OVRVoiceModContext : MonoBehaviour
{
	[Token(Token = "0x2000260")]
	public enum ovrVoiceModParams
	{
		[Token(Token = "0x4000EE6")]
		MixInputAudio,
		[Token(Token = "0x4000EE7")]
		PitchInputAudio,
		[Token(Token = "0x4000EE8")]
		SetBands,
		[Token(Token = "0x4000EE9")]
		FormantCorrection,
		[Token(Token = "0x4000EEA")]
		Carrier1_TrackPitch,
		[Token(Token = "0x4000EEB")]
		Carrier1_Type,
		[Token(Token = "0x4000EEC")]
		Carrier1_Gain,
		[Token(Token = "0x4000EED")]
		Carrier1_Frequency,
		[Token(Token = "0x4000EEE")]
		Carrier1_Note,
		[Token(Token = "0x4000EEF")]
		Carrier1_PulseWidth,
		[Token(Token = "0x4000EF0")]
		Carrier1_CycledNoiseSize,
		[Token(Token = "0x4000EF1")]
		Carrier2_TrackPitch,
		[Token(Token = "0x4000EF2")]
		Carrier2_Type,
		[Token(Token = "0x4000EF3")]
		Carrier2_Gain,
		[Token(Token = "0x4000EF4")]
		Carrier2_Frequency,
		[Token(Token = "0x4000EF5")]
		Carrier2_Note,
		[Token(Token = "0x4000EF6")]
		Carrier2_PulseWidth,
		[Token(Token = "0x4000EF7")]
		Carrier2_CycledNoiseSize,
		[Token(Token = "0x4000EF8")]
		Count
	}

	[Token(Token = "0x2000261")]
	public struct VMPreset
	{
		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string info;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mix;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pitch;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bands;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int formant;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int c1PTrack;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int c1Type;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float c1Gain;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float c1Freq;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int c1Note;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float c1PW;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int c1CNS;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int c2PTrack;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int c2Type;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float c2Gain;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float c2Freq;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int c2Note;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float c2PW;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int c2CNS;
	}

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gain;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool audioMute;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode loopback;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VMPreset[] VMPresets;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VM_MixAudio;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float VM_Pitch;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int VM_Bands;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int VM_FormantCorrect;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int VM_C1_TrackPitch;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VM_C1_Type;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float VM_C1_Gain;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VM_C1_Freq;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int VM_C1_Note;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float VM_C1_PulseWidth;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int VM_C1_CycledNoiseSize;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int VM_C2_TrackPitch;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VM_C2_Type;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float VM_C2_Gain;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VM_C2_Freq;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int VM_C2_Note;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VM_C2_PulseWidth;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int VM_C2_CycledNoiseSize;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint context;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float prevVol;

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x115C068", Offset = "0x115C068", VA = "0x115C068")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x115C130", Offset = "0x115C130", VA = "0x115C130")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x115C76C", Offset = "0x115C76C", VA = "0x115C76C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x115C9CC", Offset = "0x115C9CC", VA = "0x115C9CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x115CB30", Offset = "0x115CB30", VA = "0x115CB30")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x115CD8C", Offset = "0x115CD8C", VA = "0x115CD8C")]
	public int SendParameter(ovrVoiceModParams parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x115CE84", Offset = "0x115CE84", VA = "0x115CE84")]
	public bool SetPreset(int preset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x115D150", Offset = "0x115D150", VA = "0x115D150")]
	public int GetNumPresets()
	{
		return default(int);
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x115D16C", Offset = "0x115D16C", VA = "0x115D16C")]
	public Color GetPresetColor(int preset)
	{
		return default(Color);
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x115D1C4", Offset = "0x115D1C4", VA = "0x115D1C4")]
	public float GetAverageAbsVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x115D264", Offset = "0x115D264", VA = "0x115D264")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x115C928", Offset = "0x115C928", VA = "0x115C928")]
	private void UpdateVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x115C378", Offset = "0x115C378", VA = "0x115C378")]
	private void SendVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x115D358", Offset = "0x115D358", VA = "0x115D358")]
	public OVRVoiceModContext()
	{
	}
}
[Token(Token = "0x2000262")]
public class OculusGuiElement : MonoBehaviour
{
	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool interactable;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lookedAt;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider coll;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool finishedTransition;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float transitionDuration;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float t;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OculusGuiElement[] otherelements;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 collOrigSize;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 CollLookedAtSize;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool changeColor;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color normalColor;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color highlightColor;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Image image;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isEmpty;

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x1160708", Offset = "0x1160708", VA = "0x1160708")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x116097C", Offset = "0x116097C", VA = "0x116097C")]
	public void activate()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x1160878", Offset = "0x1160878", VA = "0x1160878")]
	public void deactivate()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x1160A14", Offset = "0x1160A14", VA = "0x1160A14")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x1160AAC", Offset = "0x1160AAC", VA = "0x1160AAC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x1160AB0", Offset = "0x1160AB0", VA = "0x1160AB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x1160B6C", Offset = "0x1160B6C", VA = "0x1160B6C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x1160BA0", Offset = "0x1160BA0", VA = "0x1160BA0")]
	public OculusGuiElement()
	{
	}
}
[Token(Token = "0x2000263")]
public class OculusHandtracking : MonoBehaviour
{
	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x1160BC0", Offset = "0x1160BC0", VA = "0x1160BC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x1160BC4", Offset = "0x1160BC4", VA = "0x1160BC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x1160BC8", Offset = "0x1160BC8", VA = "0x1160BC8")]
	public OculusHandtracking()
	{
	}
}
[Token(Token = "0x2000264")]
public class OrbitObject : MonoBehaviour
{
	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speedMod;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 point;

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x116120C", Offset = "0x116120C", VA = "0x116120C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x1161260", Offset = "0x1161260", VA = "0x1161260")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x11612E0", Offset = "0x11612E0", VA = "0x11612E0")]
	public OrbitObject()
	{
	}
}
[Token(Token = "0x2000265")]
public class PartID : MonoBehaviour
{
	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int worldID;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int id;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GravityModifier modifier;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sensor sensor;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Switchable_Tube pump;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SensorManagerObject sensormanager;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RatioSensor ratiosensor;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ScaleSensor scale;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Gate gate;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TubeBallSpawner spawnertube;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CollectorTube bin;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SignalGenerator signalgenerator;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BonusRing bonusring;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MovableDoor door;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Spinner spinner;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isLevelItem;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool isTimeClone;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool isInFuture;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PartID timeClone;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] normalGOs;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] brokenGOs;

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xCC8C08", Offset = "0xCC8C08", VA = "0xCC8C08")]
	public void makeRusty()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xCC904C", Offset = "0xCC904C", VA = "0xCC904C")]
	public void checkIfInFuture()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xCC9180", Offset = "0xCC9180", VA = "0xCC9180")]
	public void syncTimeClone()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xCC9800", Offset = "0xCC9800", VA = "0xCC9800")]
	public PartID()
	{
	}
}
[Token(Token = "0x2000266")]
public class PlaygroundSineOverflow : MonoBehaviour
{
	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float amount;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initialOverflow;

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x1619AD0", Offset = "0x1619AD0", VA = "0x1619AD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x1619B3C", Offset = "0x1619B3C", VA = "0x1619B3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x1619BE4", Offset = "0x1619BE4", VA = "0x1619BE4")]
	public PlaygroundSineOverflow()
	{
	}
}
[Token(Token = "0x2000267")]
public class PlaygroundSineRotation : MonoBehaviour
{
	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform thisTransform;

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x1619BF8", Offset = "0x1619BF8", VA = "0x1619BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x1619C20", Offset = "0x1619C20", VA = "0x1619C20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x1619C8C", Offset = "0x1619C8C", VA = "0x1619C8C")]
	public PlaygroundSineRotation()
	{
	}
}
[Token(Token = "0x2000268")]
public class PlaygroundBrushPresetC : MonoBehaviour
{
	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string presetName;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D texture;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scale;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public BRUSHDETAILC detail;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distance;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float spacing;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool exceedMaxStopsPaint;

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xCD8FCC", Offset = "0xCD8FCC", VA = "0xCD8FCC")]
	public PlaygroundBrushPresetC()
	{
	}
}
[Token(Token = "0x2000269")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6D28", Offset = "0xAA6D28")]
public class PlaygroundPresetCircleShotC : MonoBehaviour
{
	[Token(Token = "0x200026A")]
	public enum WhenDoneCircleShot
	{
		[Token(Token = "0x4000F4D")]
		Nothing,
		[Token(Token = "0x4000F4E")]
		Inactivate,
		[Token(Token = "0x4000F4F")]
		Destroy
	}

	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6D98", Offset = "0xAA6D98")]
	private sealed class <Shoot>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaygroundPresetCircleShotC <>4__this;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <rotationSpeed>5__2;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timeDone>5__3;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <c>5__4;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <p>5__5;

		[Token(Token = "0x17000108")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0xE64770", Offset = "0xE64770", VA = "0xE64770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0xE647B8", Offset = "0xE647B8", VA = "0xE647B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xE6424C", Offset = "0xE6424C", VA = "0xE6424C")]
		[DebuggerHidden]
		public <Shoot>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xE64278", Offset = "0xE64278", VA = "0xE64278", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xE6427C", Offset = "0xE6427C", VA = "0xE6427C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xE64778", Offset = "0xE64778", VA = "0xE64778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numberOfParticles;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float force;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int cycles;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotationNormal;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minimumLifetime;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maximumLifetime;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color color;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float yieldBeforeEmission;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float yieldBetweenShots;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float yieldBetweenCycles;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public WhenDoneCircleShot whenDone;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform thisTransform;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isSameLifetime;

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x1619210", Offset = "0x1619210", VA = "0x1619210")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x1619298", Offset = "0x1619298", VA = "0x1619298")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABCDC4", Offset = "0xABCDC4")]
	private IEnumerator Shoot()
	{
		return null;
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1619304", Offset = "0x1619304", VA = "0x1619304")]
	public PlaygroundPresetCircleShotC()
	{
	}
}
[Token(Token = "0x200026C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA6DA8", Offset = "0xAA6DA8")]
public class PlaygroundPresetLaserC : MonoBehaviour
{
	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float laserMaxDistance;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient laserColor;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int particleCount;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask collisionLayer;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int previousParticleCount;

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x1619360", Offset = "0x1619360", VA = "0x1619360")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x16193CC", Offset = "0x16193CC", VA = "0x16193CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x16195B4", Offset = "0x16195B4", VA = "0x16195B4")]
	public PlaygroundPresetLaserC()
	{
	}
}
[Token(Token = "0x200026D")]
public class PartsSpawner : MonoBehaviour
{
	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isInteractive;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform portalPresent;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform portalFuture;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform holder;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform partsSelector;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject board;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject tube;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject modifier;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject sensor;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject fan;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject scale;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ratioScale;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject gate;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject spawnerTube;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject receivingBin;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject signalGenerator;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject glass;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject bonusring;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject sensormanager;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject ingamecamera;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject levelpreviewcamera;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject door;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject geometrybox;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject spinner;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject radio;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject bouncer;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject tube1;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject tube2;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject tube3;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject gravityAdjuster;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public VF_UIELement boardUI;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public VF_UIELement tubeUI;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public VF_UIELement modifierUI;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public VF_UIELement sensorUI;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public VF_UIELement pumpUI;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public VF_UIELement scaleUI;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public VF_UIELement ratioscaleUI;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public VF_UIELement gateUI;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public VF_UIELement sensormanagerUI;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public VF_UIELement bouncerUI;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public VF_UIELement gravityAdjusterUI;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public NewGameManager gameManager;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public LevelManager levelManager;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public SettingsManager settingsManager;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public RoundIndicator overview_board;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public RoundIndicator overview_tube;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public RoundIndicator overview_modifier;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public RoundIndicator overview_sensor;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public RoundIndicator overview_pump;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public RoundIndicator overview_scale;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public RoundIndicator overview_ratio;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public RoundIndicator overview_gate;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public RoundIndicator overview_sensormanager;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public RoundIndicator overview_bouncer;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public RoundIndicator overview_gravityAdjuster;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool shouldScan;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public int totalNumberOfItems;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public int boardNumber;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public int tubeNumber;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public int modifierNumber;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public int sensorNumber;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public int fanNumber;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public int scaleNumber;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public int ratioScaleNumber;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public int gateNumber;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public int sensormanagerNumber;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public int bouncerNumber;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public int gravityAdjusterNumber;

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xCCC874", Offset = "0xCCC874", VA = "0xCCC874")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xCCC95C", Offset = "0xCCC95C", VA = "0xCCC95C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xCCC97C", Offset = "0xCCC97C", VA = "0xCCC97C")]
	public void scanForObjects()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xCCC988", Offset = "0xCCC988", VA = "0xCCC988")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xCCC99C", Offset = "0xCCC99C", VA = "0xCCC99C")]
	public void scanForSpawnedItems()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xCCCBE4", Offset = "0xCCCBE4", VA = "0xCCCBE4")]
	public void updateHandItemCounts()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xCCD470", Offset = "0xCCD470", VA = "0xCCD470")]
	public void SpawnPart(int spawnID, GameObject lastEnteredController, HandController lastEnteredControllerScript, [Optional] Vector3 overridePos, [Optional] Quaternion overrideRot, bool isTimeClone = false, [Optional] PartID origPartID, bool locked = false)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xCCE824", Offset = "0xCCE824", VA = "0xCCE824")]
	public PartsSpawner()
	{
	}
}
[Token(Token = "0x200026E")]
public class PartsWatcher : MonoBehaviour
{
	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PartsSpawner partsSpawner;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GravityModifier[] modifiers;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AccelerationTube[] acctubes;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AccelerationPlate[] accplates;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sensor[] sensors;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ScaleSensor[] scales;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RatioSensor[] ratioSensors;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SignalGenerator[] generators;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Receiver[] receivers;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TubeBallSpawner[] tubes;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MovableDoor[] doors;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CollectorTube[] bins;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BonusRing[] bonusRings;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SensorManagerObject[] sensorManagerObjects;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Bounce[] bouncers;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool shouldScan;

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xCCE82C", Offset = "0xCCE82C", VA = "0xCCE82C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xCCE8A4", Offset = "0xCCE8A4", VA = "0xCCE8A4")]
	public void resetAllArrays()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xCCEACC", Offset = "0xCCEACC", VA = "0xCCEACC")]
	public void scanNow()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xCCEF38", Offset = "0xCCEF38", VA = "0xCCEF38")]
	public void scanForObjects()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xCCEF44", Offset = "0xCCEF44", VA = "0xCCEF44")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xCCF3F4", Offset = "0xCCF3F4", VA = "0xCCF3F4")]
	public void disableMenu()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xCCFAB4", Offset = "0xCCFAB4", VA = "0xCCFAB4")]
	public void hideButtons()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xCD00F4", Offset = "0xCD00F4", VA = "0xCD00F4")]
	public void showButtons()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xCD061C", Offset = "0xCD061C", VA = "0xCD061C")]
	public PartsWatcher()
	{
	}
}
[Token(Token = "0x200026F")]
public class PassthroughRing : MonoBehaviour
{
	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int targetNumber;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int currentNumber;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isFull;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string tagString;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string tagString2;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip clip;

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xCD14D4", Offset = "0xCD14D4", VA = "0xCD14D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xCD14D8", Offset = "0xCD14D8", VA = "0xCD14D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xCD15E0", Offset = "0xCD15E0", VA = "0xCD15E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xCD16C4", Offset = "0xCD16C4", VA = "0xCD16C4")]
	public PassthroughRing()
	{
	}
}
[Token(Token = "0x2000270")]
public class PerformanceDependentGeometry : MonoBehaviour
{
	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject low;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject high;

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xCD21E0", Offset = "0xCD21E0", VA = "0xCD21E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xCD223C", Offset = "0xCD223C", VA = "0xCD223C")]
	public void setQuality(int qualitylevel)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xCD22A8", Offset = "0xCD22A8", VA = "0xCD22A8")]
	public PerformanceDependentGeometry()
	{
	}
}
[Token(Token = "0x2000271")]
public class DropObject : MonoBehaviour
{
	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Objects;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform DropLocation;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RandomForce;

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x1C2E55C", Offset = "0x1C2E55C", VA = "0x1C2E55C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x1C2E7DC", Offset = "0x1C2E7DC", VA = "0x1C2E7DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x1C2E624", Offset = "0x1C2E624", VA = "0x1C2E624")]
	private void drop(int obj)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x1C2E8A8", Offset = "0x1C2E8A8", VA = "0x1C2E8A8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x1C2EBC8", Offset = "0x1C2EBC8", VA = "0x1C2EBC8")]
	public DropObject()
	{
	}
}
[Serializable]
[Token(Token = "0x2000272")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xAA6E18", Offset = "0xAA6E18")]
public class FoldoutList
{
	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public List<bool> foldouts;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public bool mainFoldout;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public Vector2 scrollPos;

	[Token(Token = "0x1700010A")]
	public bool Item
	{
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x13C41E0", Offset = "0x13C41E0", VA = "0x13C41E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x13C4254", Offset = "0x13C4254", VA = "0x13C4254")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public int Count
	{
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x13C42C0", Offset = "0x13C42C0", VA = "0x13C42C0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x13C430C", Offset = "0x13C430C", VA = "0x13C430C")]
	public void Add(bool value)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x13C4370", Offset = "0x13C4370", VA = "0x13C4370")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x13C43D4", Offset = "0x13C43D4", VA = "0x13C43D4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x13C4464", Offset = "0x13C4464", VA = "0x13C4464")]
	public void Update(int count, bool defaultValue)
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x13C453C", Offset = "0x13C453C", VA = "0x13C453C")]
	public void Isolate(int index)
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x13C45E4", Offset = "0x13C45E4", VA = "0x13C45E4")]
	public FoldoutList()
	{
	}
}
[Serializable]
[Token(Token = "0x2000273")]
public struct Range
{
	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Min;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float Max;

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x1519920", Offset = "0x1519920", VA = "0x1519920")]
	public Range(float min, float max)
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x1519928", Offset = "0x1519928", VA = "0x1519928")]
	public bool isWithinRange(float f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x151994C", Offset = "0x151994C", VA = "0x151994C")]
	public float Clamp(float f)
	{
		return default(float);
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x1519958", Offset = "0x1519958", VA = "0x1519958")]
	public float RandomInRange()
	{
		return default(float);
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x1519964", Offset = "0x1519964", VA = "0x1519964")]
	public int RandomInRangeInteger()
	{
		return default(int);
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x15199A4", Offset = "0x15199A4", VA = "0x15199A4")]
	public float Lerp(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x15199B8", Offset = "0x15199B8", VA = "0x15199B8")]
	public float Normalize(float val)
	{
		return default(float);
	}
}
[Token(Token = "0x2000274")]
public class PipePlopAudio : MonoBehaviour
{
	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audio;

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xCD878C", Offset = "0xCD878C", VA = "0xCD878C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xCD87E0", Offset = "0xCD87E0", VA = "0xCD87E0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xCD88C0", Offset = "0xCD88C0", VA = "0xCD88C0")]
	public PipePlopAudio()
	{
	}
}
[Token(Token = "0x2000275")]
public class PlatformSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6E50", Offset = "0xAA6E50")]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlatformSwitcher <>4__this;

		[Token(Token = "0x1700010C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0xDB6B20", Offset = "0xDB6B20", VA = "0xDB6B20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0xDB6B68", Offset = "0xDB6B68", VA = "0xDB6B68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xDB6A00", Offset = "0xDB6A00", VA = "0xDB6A00")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xDB6A2C", Offset = "0xDB6A2C", VA = "0xDB6A2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xDB6A30", Offset = "0xDB6A30", VA = "0xDB6A30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xDB6B28", Offset = "0xDB6B28", VA = "0xDB6B28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ovrObject;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject steamVRObject;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject psvrObject;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject unifiedObject;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject northstarZedObject;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FloorScaler floorScaler;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Light[] roomLight;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool forceUnified;

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xCD8A60", Offset = "0xCD8A60", VA = "0xCD8A60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABCE74", Offset = "0xABCE74")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xCD8ACC", Offset = "0xCD8ACC", VA = "0xCD8ACC")]
	public PlatformSwitcher()
	{
	}
}
[Token(Token = "0x2000277")]
public class PlayerTimeZoneTracker : MonoBehaviour
{
	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isInFuture;

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xCD8D18", Offset = "0xCD8D18", VA = "0xCD8D18")]
	public PlayerTimeZoneTracker()
	{
	}
}
[Token(Token = "0x2000278")]
public class PortalPlane : MonoBehaviour
{
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6E60", Offset = "0xAA6E60")]
	private sealed class <removeColldierFromList>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PortalPlane <>4__this;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collider col;

		[Token(Token = "0x1700010E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0xE649D8", Offset = "0xE649D8", VA = "0xE649D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0xE64A20", Offset = "0xE64A20", VA = "0xE64A20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xE648E4", Offset = "0xE648E4", VA = "0xE648E4")]
		[DebuggerHidden]
		public <removeColldierFromList>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xE64910", Offset = "0xE64910", VA = "0xE64910", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xE64914", Offset = "0xE64914", VA = "0xE64914", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xE649E0", Offset = "0xE649E0", VA = "0xE649E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform destinationPortal;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PortalPlane otherPortal;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Collider> blockedColliders;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject fakeSkybox;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isInFuture;

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x161D670", Offset = "0x161D670", VA = "0x161D670")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x161D6E0", Offset = "0x161D6E0", VA = "0x161D6E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x161D6E4", Offset = "0x161D6E4", VA = "0x161D6E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABCF24", Offset = "0xABCF24")]
	private IEnumerator removeColldierFromList(Collider col)
	{
		return null;
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x161D75C", Offset = "0x161D75C", VA = "0x161D75C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x161DA3C", Offset = "0x161DA3C", VA = "0x161DA3C")]
	public PortalPlane()
	{
	}
}
[Token(Token = "0x200027A")]
public interface IReceivable
{
	[Token(Token = "0x6000C64")]
	void receiveSignal(SensorManagerObject.LampColors color, bool onoffstate);
}
[Token(Token = "0x200027B")]
public class ProtoCube : MonoBehaviour
{
	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x1621DF0", Offset = "0x1621DF0", VA = "0x1621DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x1621DF4", Offset = "0x1621DF4", VA = "0x1621DF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x1621DF8", Offset = "0x1621DF8", VA = "0x1621DF8")]
	public ProtoCube()
	{
	}
}
[Token(Token = "0x200027C")]
public class PullTextFromURL : MonoBehaviour
{
	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6E70", Offset = "0xAA6E70")]
	private sealed class <GetText>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PullTextFromURL <>4__this;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WWW www;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0xE64BF8", Offset = "0xE64BF8", VA = "0xE64BF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0xE64C40", Offset = "0xE64C40", VA = "0xE64C40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xE64A28", Offset = "0xE64A28", VA = "0xE64A28")]
		[DebuggerHidden]
		public <GetText>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xE64A54", Offset = "0xE64A54", VA = "0xE64A54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xE64A58", Offset = "0xE64A58", VA = "0xE64A58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xE64C00", Offset = "0xE64C00", VA = "0xE64C00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string url;

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x1621E00", Offset = "0x1621E00", VA = "0x1621E00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x1621E80", Offset = "0x1621E80", VA = "0x1621E80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABCFD4", Offset = "0xABCFD4")]
	private IEnumerator GetText(WWW www)
	{
		return null;
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x1621EF8", Offset = "0x1621EF8", VA = "0x1621EF8")]
	public PullTextFromURL()
	{
	}
}
[Token(Token = "0x200027E")]
public class QT_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6E80", Offset = "0xAA6E80")]
	private sealed class <Flicker>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QT_LightFlicker <>4__this;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0xE64D68", Offset = "0xE64D68", VA = "0xE64D68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0xE64DB0", Offset = "0xE64DB0", VA = "0xE64DB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xE64C48", Offset = "0xE64C48", VA = "0xE64C48")]
		[DebuggerHidden]
		public <Flicker>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xE64C74", Offset = "0xE64C74", VA = "0xE64C74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xE64C78", Offset = "0xE64C78", VA = "0xE64C78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xE64D70", Offset = "0xE64D70", VA = "0xE64D70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minFlickerSpeed;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxFlickerSpeed;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minLightIntensity;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxLightIntensity;

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x1622020", Offset = "0x1622020", VA = "0x1622020")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x162204C", Offset = "0x162204C", VA = "0x162204C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD084", Offset = "0xABD084")]
	private IEnumerator Flicker()
	{
		return null;
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x16220B8", Offset = "0x16220B8", VA = "0x16220B8")]
	public QT_LightFlicker()
	{
	}
}
[Token(Token = "0x2000280")]
[ExecuteInEditMode]
public class QT_RenderBaseMap : MonoBehaviour
{
	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x16220CC", Offset = "0x16220CC", VA = "0x16220CC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x16220D0", Offset = "0x16220D0", VA = "0x16220D0")]
	public QT_RenderBaseMap()
	{
	}
}
[Token(Token = "0x2000281")]
public class QT_SurfaceNoise : MonoBehaviour
{
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6EA0", Offset = "0xAA6EA0")]
	private sealed class <DoWave>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QT_SurfaceNoise <>4__this;

		[Token(Token = "0x17000114")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C82")]
			[Address(RVA = "0xE64FB8", Offset = "0xE64FB8", VA = "0xE64FB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0xE65000", Offset = "0xE65000", VA = "0xE65000", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xE64DB8", Offset = "0xE64DB8", VA = "0xE64DB8")]
		[DebuggerHidden]
		public <DoWave>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xE64DE4", Offset = "0xE64DE4", VA = "0xE64DE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xE64DE8", Offset = "0xE64DE8", VA = "0xE64DE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xE64FC0", Offset = "0xE64FC0", VA = "0xE64FC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scale;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float noiseStrength;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float UpdateFrequency;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshFilter mf;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] baseHeight;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] newVerts;

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x16220D8", Offset = "0x16220D8", VA = "0x16220D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x162218C", Offset = "0x162218C", VA = "0x162218C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD134", Offset = "0xABD134")]
	private IEnumerator DoWave()
	{
		return null;
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x16221F8", Offset = "0x16221F8", VA = "0x16221F8")]
	public QT_SurfaceNoise()
	{
	}
}
[Token(Token = "0x2000283")]
[DisallowMultipleComponent]
public class Outline : MonoBehaviour
{
	[Token(Token = "0x2000284")]
	public enum Mode
	{
		[Token(Token = "0x4000FFA")]
		OutlineAll,
		[Token(Token = "0x4000FFB")]
		OutlineVisible,
		[Token(Token = "0x4000FFC")]
		OutlineHidden,
		[Token(Token = "0x4000FFD")]
		OutlineAndSilhouette,
		[Token(Token = "0x4000FFE")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x2000285")]
	private class ListVector3
	{
		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xDB3B28", Offset = "0xDB3B28", VA = "0xDB3B28")]
		public ListVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6EC0", Offset = "0xAA6EC0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__30_0;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__30_1;

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xDB3A30", Offset = "0xDB3A30", VA = "0xDB3A30")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xDB3A38", Offset = "0xDB3A38", VA = "0xDB3A38")]
		internal KeyValuePair<Vector3, int> <SmoothNormals>b__30_0(Vector3 vertex, int index)
		{
			return default(KeyValuePair<Vector3, int>);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xDB3AC4", Offset = "0xDB3AC4", VA = "0xDB3AC4")]
		internal Vector3 <SmoothNormals>b__30_1(KeyValuePair<Vector3, int> pair)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAC15C", Offset = "0xAAC15C")]
	private float outlineWidth;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC19C", Offset = "0xAAC19C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAC19C", Offset = "0xAAC19C")]
	private bool precomputeOutline;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] renderers;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x17000116")]
	public Mode OutlineMode
	{
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x116174C", Offset = "0x116174C", VA = "0x116174C")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1161754", Offset = "0x1161754", VA = "0x1161754")]
		set
		{
		}
	}

	[Token(Token = "0x17000117")]
	public Color OutlineColor
	{
		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1161764", Offset = "0x1161764", VA = "0x1161764")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1161770", Offset = "0x1161770", VA = "0x1161770")]
		set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public float OutlineWidth
	{
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1161784", Offset = "0x1161784", VA = "0x1161784")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x116178C", Offset = "0x116178C", VA = "0x116178C")]
		set
		{
		}
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x116179C", Offset = "0x116179C", VA = "0x116179C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x1161EA4", Offset = "0x1161EA4", VA = "0x1161EA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x1161FC8", Offset = "0x1161FC8", VA = "0x1161FC8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x116229C", Offset = "0x116229C", VA = "0x116229C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x116247C", Offset = "0x116247C", VA = "0x116247C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x11625A0", Offset = "0x11625A0", VA = "0x11625A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x11620C0", Offset = "0x11620C0", VA = "0x11620C0")]
	private void Bake()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x1161B04", Offset = "0x1161B04", VA = "0x1161B04")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x1162614", Offset = "0x1162614", VA = "0x1162614")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x11622B0", Offset = "0x11622B0", VA = "0x11622B0")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x11630D8", Offset = "0x11630D8", VA = "0x11630D8")]
	public Outline()
	{
	}
}
[Token(Token = "0x2000287")]
public class RadtioSensorSide : MonoBehaviour
{
	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int count;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RatioSensor sensor;

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x1518ECC", Offset = "0x1518ECC", VA = "0x1518ECC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x1519348", Offset = "0x1519348", VA = "0x1519348")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x15193F0", Offset = "0x15193F0", VA = "0x15193F0")]
	public RadtioSensorSide()
	{
	}
}
[Token(Token = "0x2000288")]
public class RandomPitch : MonoBehaviour
{
	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x151951C", Offset = "0x151951C", VA = "0x151951C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x1519598", Offset = "0x1519598", VA = "0x1519598")]
	public RandomPitch()
	{
	}
}
[Token(Token = "0x2000289")]
public class RatioSensor : Sender
{
	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public RadtioSensorSide left;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public RadtioSensorSide right;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public TextMeshPro currentRatioText;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public TextMeshPro targetRatioText;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int leftRatio;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public int rightRatio;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float currentRatio;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public bool currentlyActivated;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public LevelManager levelManager;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public VR_UI_ElementHolder ratioButtons;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Sprite originalSprite;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public VF_UIELement lr_1;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public VF_UIELement lr_2;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public VF_UIELement lr_3;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public VF_UIELement rr_1;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public VF_UIELement rr_2;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public VF_UIELement rr_3;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public VF_UIELement rr_4;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public VF_UIELement rr_5;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public VF_UIELement rr_6;

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x15199F0", Offset = "0x15199F0", VA = "0x15199F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x151A2BC", Offset = "0x151A2BC", VA = "0x151A2BC")]
	public void resetScale()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x151A30C", Offset = "0x151A30C", VA = "0x151A30C")]
	public new void showOptionsButton()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x151A328", Offset = "0x151A328", VA = "0x151A328")]
	public new void hideOptionsButton()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x151A3F8", Offset = "0x151A3F8", VA = "0x151A3F8")]
	public new void showMenu()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x151A1EC", Offset = "0x151A1EC", VA = "0x151A1EC")]
	public new void disableMenu()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x151A4C8", Offset = "0x151A4C8", VA = "0x151A4C8")]
	public void setLeftRatio(int r)
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x151A4D0", Offset = "0x151A4D0", VA = "0x151A4D0")]
	public void setRightRatio(int r)
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x1518F74", Offset = "0x1518F74", VA = "0x1518F74")]
	public void UpdateRatio()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x151A4D8", Offset = "0x151A4D8", VA = "0x151A4D8")]
	public RatioSensor()
	{
	}
}
[Token(Token = "0x200028A")]
public class MyGui : MonoBehaviour
{
	[Token(Token = "0x200028B")]
	public enum GuiStat
	{
		[Token(Token = "0x400103B")]
		Ball,
		[Token(Token = "0x400103C")]
		Bottom,
		[Token(Token = "0x400103D")]
		Middle,
		[Token(Token = "0x400103E")]
		Top
	}

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool UseGui;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int CurrentPrefabNomber;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float UpdateInterval;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light DirLight;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Target;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject TopPosition;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject MiddlePosition;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject BottomPosition;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Plane1;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Plane2;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material[] PlaneMaterials;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GuiStat[] GuiStats;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float[] Times;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float oldLightIntensity;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color oldAmbientColor;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject currentGo;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject defaultBall;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isDay;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool isHomingMove;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool isDefaultPlaneTexture;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int current;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Animator anim;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float prefabSpeed;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private EffectSettings defaultBallEffectSettings;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isReadyEffect;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool isReadyDefaulBall;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float accum;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int frames;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float timeleft;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float fps;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xBF4E88", Offset = "0xBF4E88", VA = "0xBF4E88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xBF50E8", Offset = "0xBF50E8", VA = "0xBF50E8")]
	private void InstanceEffect(Vector3 pos)
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xBF52EC", Offset = "0xBF52EC", VA = "0xBF52EC")]
	private void InstanceDefaulBall()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xBF54F8", Offset = "0xBF54F8", VA = "0xBF54F8")]
	private void defaultBall_EffectDeactivated(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xBF555C", Offset = "0xBF555C", VA = "0xBF555C")]
	private void effectSettings_EffectDeactivated(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xBF5650", Offset = "0xBF5650", VA = "0xBF5650")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xBF5F30", Offset = "0xBF5F30", VA = "0xBF5F30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xBF503C", Offset = "0xBF503C", VA = "0xBF503C")]
	private void InstanceCurrent(GuiStat stat)
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xBF55DC", Offset = "0xBF55DC", VA = "0xBF55DC")]
	private Vector3 GetInstancePosition(GuiStat stat)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xBF5C98", Offset = "0xBF5C98", VA = "0xBF5C98")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xBF6080", Offset = "0xBF6080", VA = "0xBF6080")]
	public MyGui()
	{
	}
}
[Token(Token = "0x200028C")]
public class AddMaterialOnHit : MonoBehaviour
{
	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RemoveAfterTime;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool RemoveWhenDisable;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EffectSettings EffectSettings;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material Material;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UsePointMatrixTransform;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 TransformScale;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FadeInOutShaderColor[] fadeInOutShaderColor;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FadeInOutShaderFloat[] fadeInOutShaderFloat;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UVTextureAnimator uvTextureAnimator;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer renderParent;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material instanceMat;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int materialQueue;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool waitRemove;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeToDelete;

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x133C514", Offset = "0x133C514", VA = "0x133C514")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x133C61C", Offset = "0x133C61C", VA = "0x133C61C")]
	public void UpdateMaterial(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x133CAB0", Offset = "0x133CAB0", VA = "0x133CAB0")]
	public void UpdateMaterial(Transform transformTarget)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x133CE20", Offset = "0x133CE20", VA = "0x133CE20")]
	public void SetMaterialQueue(int matlQueue)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x133CE28", Offset = "0x133CE28", VA = "0x133CE28")]
	public int GetDefaultMaterialQueue()
	{
		return default(int);
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x133CE44", Offset = "0x133CE44", VA = "0x133CE44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x133CF50", Offset = "0x133CF50", VA = "0x133CF50")]
	public AddMaterialOnHit()
	{
	}
}
[Token(Token = "0x200028D")]
public class LazyLoad : MonoBehaviour
{
	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GO;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeDelay;

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xBD4148", Offset = "0xBD4148", VA = "0xBD4148")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xBD4168", Offset = "0xBD4168", VA = "0xBD4168")]
	private void LazyEnable()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xBD4188", Offset = "0xBD4188", VA = "0xBD4188")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xBD41DC", Offset = "0xBD41DC", VA = "0xBD41DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xBD4244", Offset = "0xBD4244", VA = "0xBD4244")]
	public LazyLoad()
	{
	}
}
[Token(Token = "0x200028E")]
public enum RandomMoveCoordinates
{
	[Token(Token = "0x4001050")]
	None,
	[Token(Token = "0x4001051")]
	XY,
	[Token(Token = "0x4001052")]
	XZ,
	[Token(Token = "0x4001053")]
	YZ,
	[Token(Token = "0x4001054")]
	XYZ
}
[Token(Token = "0x200028F")]
public class ProjectileCollisionBehaviour : MonoBehaviour
{
	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RandomMoveRadius;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RandomMoveSpeed;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RandomRange;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public RandomMoveCoordinates RandomMoveCoordinates;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject EffectOnHitObject;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject GoLight;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve Acceleration;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float AcceleraionTime;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool IsCenterLightPosition;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool IsLookAt;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool AttachAfterCollision;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	public bool IsRootMove;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsLocalSpaceRandomMove;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool IsDeviation;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool SendCollisionMessage;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool ResetParentPositionOnDisable;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform tRoot;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform tTarget;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform t;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform tLight;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 forwardDirection;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 startPosition;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 startParentPosition;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private RaycastHit hit;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 smootRandomPos;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 oldSmootRandomPos;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float deltaSpeed;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float startTime;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float randomSpeed;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float randomRadiusX;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float randomRadiusY;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int randomDirection1;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int randomDirection2;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int randomDirection3;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool onCollision;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool isInitializedOnStart;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 randomTargetOffsetXZVector;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool frameDroped;

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x16208A4", Offset = "0x16208A4", VA = "0x16208A4")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x16209B0", Offset = "0x16209B0", VA = "0x16209B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x1620E2C", Offset = "0x1620E2C", VA = "0x1620E2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x1620E3C", Offset = "0x1620E3C", VA = "0x1620E3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x1620B20", Offset = "0x1620B20", VA = "0x1620B20")]
	private void InitializeDefault()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x162118C", Offset = "0x162118C", VA = "0x162118C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x162167C", Offset = "0x162167C", VA = "0x162167C")]
	private void CollisionEnter()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x1621068", Offset = "0x1621068", VA = "0x1621068")]
	private void InitRandomVariables()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x1620EA8", Offset = "0x1620EA8", VA = "0x1620EA8")]
	private void GetTargetHit()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x16219C8", Offset = "0x16219C8", VA = "0x16219C8")]
	private void UpdateSmootRandomhPos()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x1621BC8", Offset = "0x1621BC8", VA = "0x1621BC8")]
	public ProjectileCollisionBehaviour()
	{
	}
}
[Token(Token = "0x2000290")]
public class ShieldCollisionBehaviour : MonoBehaviour
{
	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectOnHit;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ExplosionOnHit;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsWaterInstance;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ScaleWave;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool CreateMechInstanceOnHit;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 AngleFix;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int currentQueue;

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x1043A64", Offset = "0x1043A64", VA = "0x1043A64")]
	public void ShieldCollisionEnter(CollisionInfo e)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x1043F7C", Offset = "0x1043F7C", VA = "0x1043F7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x1043F80", Offset = "0x1043F80", VA = "0x1043F80")]
	public ShieldCollisionBehaviour()
	{
	}
}
[Token(Token = "0x2000291")]
public class WaterUvAnimation : MonoBehaviour
{
	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsReverse;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Speed;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialNomber;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mat;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float deltaFps;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isVisible;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isCorutineStarted;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float offset;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float delta;

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xE888E0", Offset = "0xE888E0", VA = "0xE888E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xE8896C", Offset = "0xE8896C", VA = "0xE8896C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xE88A54", Offset = "0xE88A54", VA = "0xE88A54")]
	public WaterUvAnimation()
	{
	}
}
[Token(Token = "0x2000292")]
public class WaterWaveUvAnimation : MonoBehaviour
{
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6ED0", Offset = "0xAA6ED0")]
	private sealed class <updateTiling>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterWaveUvAnimation <>4__this;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0xE6E1D4", Offset = "0xE6E1D4", VA = "0xE6E1D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0xE6E21C", Offset = "0xE6E21C", VA = "0xE6E21C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xE6DF6C", Offset = "0xE6DF6C", VA = "0xE6DF6C")]
		[DebuggerHidden]
		public <updateTiling>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xE6DF98", Offset = "0xE6DF98", VA = "0xE6DF98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xE6DF9C", Offset = "0xE6DF9C", VA = "0xE6DF9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xE6E1DC", Offset = "0xE6E1DC", VA = "0xE6E1DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int fps;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mat;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float offset;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float offsetHeight;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float delta;

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xE88A64", Offset = "0xE88A64", VA = "0xE88A64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xE88AF4", Offset = "0xE88AF4", VA = "0xE88AF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD1E4", Offset = "0xABD1E4")]
	private IEnumerator updateTiling()
	{
		return null;
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xE88B60", Offset = "0xE88B60", VA = "0xE88B60")]
	public WaterWaveUvAnimation()
	{
	}
}
[Token(Token = "0x2000294")]
public class LineRendererBehaviour : MonoBehaviour
{
	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsVertical;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float LightHeightOffset;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ParticlesHeightOffset;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float TimeDestroyLightAfterCollision;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeDestroyThisAfterCollision;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TimeDestroyRootAfterCollision;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject EffectOnHitObject;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Explosion;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject StartGlow;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject HitGlow;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Particles;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject GoLight;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EffectSettings effectSettings;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform tRoot;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform tTarget;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isInitializedOnStart;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LineRenderer line;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int currentShaderIndex;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private RaycastHit hit;

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x24E1914", Offset = "0x24E1914", VA = "0x24E1914")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x24E1A20", Offset = "0x24E1A20", VA = "0x24E1A20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x24E1B44", Offset = "0x24E1B44", VA = "0x24E1B44")]
	private void InitializeDefault()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x24E2588", Offset = "0x24E2588", VA = "0x24E2588")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x24E2598", Offset = "0x24E2598", VA = "0x24E2598")]
	public LineRendererBehaviour()
	{
	}
}
[Token(Token = "0x2000295")]
public class CollisionActiveBehaviour : MonoBehaviour
{
	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsReverse;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TimeDelay;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsLookAt;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EffectSettings effectSettings;

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x1083514", Offset = "0x1083514", VA = "0x1083514")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x108374C", Offset = "0x108374C", VA = "0x108374C")]
	private void effectSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x1083640", Offset = "0x1083640", VA = "0x1083640")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x10837E0", Offset = "0x10837E0", VA = "0x10837E0")]
	public CollisionActiveBehaviour()
	{
	}
}
[Token(Token = "0x2000296")]
public class DeadTime : MonoBehaviour
{
	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float deadTime;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool destroyRoot;

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x108AA50", Offset = "0x108AA50", VA = "0x108AA50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x108AAFC", Offset = "0x108AAFC", VA = "0x108AAFC")]
	public DeadTime()
	{
	}
}
[Token(Token = "0x2000297")]
public class DistortionMobile : MonoBehaviour
{
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6EE0", Offset = "0xAA6EE0")]
	private sealed class <RepeatCameraMove>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DistortionMobile <>4__this;

		[Token(Token = "0x1700011B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0xCB8764", Offset = "0xCB8764", VA = "0xCB8764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0xCB87AC", Offset = "0xCB87AC", VA = "0xCB87AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xCB86DC", Offset = "0xCB86DC", VA = "0xCB86DC")]
		[DebuggerHidden]
		public <RepeatCameraMove>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xCB8708", Offset = "0xCB8708", VA = "0xCB8708", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xCB870C", Offset = "0xCB870C", VA = "0xCB870C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xCB876C", Offset = "0xCB876C", VA = "0xCB876C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6EF0", Offset = "0xAA6EF0")]
	private sealed class <RepeatCameraStatic>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DistortionMobile <>4__this;

		[Token(Token = "0x1700011D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0xCB883C", Offset = "0xCB883C", VA = "0xCB883C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0xCB8884", Offset = "0xCB8884", VA = "0xCB8884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xCB87B4", Offset = "0xCB87B4", VA = "0xCB87B4")]
		[DebuggerHidden]
		public <RepeatCameraStatic>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xCB87E0", Offset = "0xCB87E0", VA = "0xCB87E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xCB87E4", Offset = "0xCB87E4", VA = "0xCB87E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xCB8844", Offset = "0xCB8844", VA = "0xCB8844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TextureScale;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureFormat RenderTextureFormat;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FilterMode FilterMode;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CullingMask;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderingPath RenderingPath;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int FPSWhenMoveCamera;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int FPSWhenStaticCamera;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture renderTexture;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera cameraInstance;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject goCamera;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 oldPosition;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion oldRotation;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform instanceCameraTransform;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool canUpdateCamera;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool isStaticUpdate;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds fpsMove;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WaitForSeconds fpsStatic;

	[Token(Token = "0x40010C0")]
	private const int dropedFrames = 50;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int frameCountWhenCameraIsStatic;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isInitialized;

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x1C2D5F4", Offset = "0x1C2D5F4", VA = "0x1C2D5F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x1C2D694", Offset = "0x1C2D694", VA = "0x1C2D694")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x1C2DA80", Offset = "0x1C2DA80", VA = "0x1C2DA80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD294", Offset = "0xABD294")]
	private IEnumerator RepeatCameraMove()
	{
		return null;
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x1C2DAEC", Offset = "0x1C2DAEC", VA = "0x1C2DAEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD2F4", Offset = "0xABD2F4")]
	private IEnumerator RepeatCameraStatic()
	{
		return null;
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x1C2DB58", Offset = "0x1C2DB58", VA = "0x1C2DB58")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x1C2DBEC", Offset = "0x1C2DBEC", VA = "0x1C2DBEC")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x1C2D804", Offset = "0x1C2D804", VA = "0x1C2D804")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x1C2DC80", Offset = "0x1C2DC80", VA = "0x1C2DC80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x1C2DD80", Offset = "0x1C2DD80", VA = "0x1C2DD80")]
	public DistortionMobile()
	{
	}
}
[Token(Token = "0x200029A")]
public class EffectSettings : MonoBehaviour
{
	[Token(Token = "0x200029B")]
	public enum EffectTypeEnum
	{
		[Token(Token = "0x40010E3")]
		Projectile,
		[Token(Token = "0x40010E4")]
		AOE,
		[Token(Token = "0x40010E5")]
		Other
	}

	[Token(Token = "0x200029C")]
	public enum DeactivationEnum
	{
		[Token(Token = "0x40010E7")]
		Deactivate,
		[Token(Token = "0x40010E8")]
		DestroyAfterCollision,
		[Token(Token = "0x40010E9")]
		DestroyAfterTime,
		[Token(Token = "0x40010EA")]
		Nothing
	}

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC27C", Offset = "0xAAC27C")]
	public EffectTypeEnum EffectType;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC2B4", Offset = "0xAAC2B4")]
	public float ColliderRadius;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC2EC", Offset = "0xAAC2EC")]
	public float EffectRadius;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC324", Offset = "0xAAC324")]
	public bool UseMoveVector;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC35C", Offset = "0xAAC35C")]
	public GameObject Target;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC394", Offset = "0xAAC394")]
	public Vector3 MoveVector;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC3CC", Offset = "0xAAC3CC")]
	public float MoveSpeed;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC404", Offset = "0xAAC404")]
	public bool IsHomingMove;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC43C", Offset = "0xAAC43C")]
	public float MoveDistance;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC474", Offset = "0xAAC474")]
	public bool IsVisible;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC4AC", Offset = "0xAAC4AC")]
	public DeactivationEnum InstanceBehaviour;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC4E4", Offset = "0xAAC4E4")]
	public float DeactivateTimeDelay;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC51C", Offset = "0xAAC51C")]
	public float DestroyTimeDelay;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC554", Offset = "0xAAC554")]
	public LayerMask LayerMask;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject[] active_key;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] active_value;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject[] inactive_Key;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float[] inactive_value;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int lastActiveIndex;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int lastInactiveIndex;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int currentActiveGo;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int currentInactiveGo;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool deactivatedIsWait;

	[Token(Token = "0x14000011")]
	public event EventHandler<CollisionInfo> CollisionEnter
	{
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1C35A48", Offset = "0x1C35A48", VA = "0x1C35A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABD3F4", Offset = "0xABD3F4")]
		add
		{
		}
		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x1C35AE8", Offset = "0x1C35AE8", VA = "0x1C35AE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABD404", Offset = "0xABD404")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event EventHandler EffectDeactivated
	{
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1C35B88", Offset = "0x1C35B88", VA = "0x1C35B88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABD414", Offset = "0xABD414")]
		add
		{
		}
		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x1C35C28", Offset = "0x1C35C28", VA = "0x1C35C28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABD424", Offset = "0xABD424")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x1C35CC8", Offset = "0x1C35CC8", VA = "0x1C35CC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x1C35D6C", Offset = "0x1C35D6C", VA = "0x1C35D6C")]
	public void OnCollisionHandler(CollisionInfo e)
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x1C35F60", Offset = "0x1C35F60", VA = "0x1C35F60")]
	public void OnEffectDeactivatedHandler()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x1C35FF4", Offset = "0x1C35FF4", VA = "0x1C35FF4")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x1C36030", Offset = "0x1C36030", VA = "0x1C36030")]
	private void SetGoActive()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x1C360A4", Offset = "0x1C360A4", VA = "0x1C360A4")]
	private void SetGoInactive()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x1C36118", Offset = "0x1C36118", VA = "0x1C36118")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x1C361E0", Offset = "0x1C361E0", VA = "0x1C361E0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x1C36280", Offset = "0x1C36280", VA = "0x1C36280")]
	public void RegistreActiveElement(GameObject go, float time)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x1C36334", Offset = "0x1C36334", VA = "0x1C36334")]
	public void RegistreInactiveElement(GameObject go, float time)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x1C363E8", Offset = "0x1C363E8", VA = "0x1C363E8")]
	public EffectSettings()
	{
	}
}
[Token(Token = "0x200029D")]
public class CollisionInfo : EventArgs
{
	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RaycastHit Hit;

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x10843AC", Offset = "0x10843AC", VA = "0x10843AC")]
	public CollisionInfo()
	{
	}
}
[Token(Token = "0x200029E")]
public class FadeInOutLight : MonoBehaviour
{
	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartDelay;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float FadeInSpeed;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FadeOutDelay;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FadeOutSpeed;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool FadeOutAfterCollision;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool UseHideStatus;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light goLight;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float oldIntensity;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentIntensity;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startIntensity;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool canStart;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool canStartFadeOut;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool fadeInComplited;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	private bool fadeOutComplited;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isCollisionEnter;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool allComplited;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool isStartDelay;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool isIn;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isOut;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isInitialized;

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x1C3D240", Offset = "0x1C3D240", VA = "0x1C3D240")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x1C3D34C", Offset = "0x1C3D34C", VA = "0x1C3D34C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x1C3D4CC", Offset = "0x1C3D4CC", VA = "0x1C3D4CC")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x1C3D5AC", Offset = "0x1C3D5AC", VA = "0x1C3D5AC")]
	private void prefabSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x1C3D624", Offset = "0x1C3D624", VA = "0x1C3D624")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x1C3D634", Offset = "0x1C3D634", VA = "0x1C3D634")]
	private void SetupStartDelay()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x1C3D640", Offset = "0x1C3D640", VA = "0x1C3D640")]
	private void SetupFadeOutDelay()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x1C3D64C", Offset = "0x1C3D64C", VA = "0x1C3D64C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x1C3D7F4", Offset = "0x1C3D7F4", VA = "0x1C3D7F4")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x1C3D8B8", Offset = "0x1C3D8B8", VA = "0x1C3D8B8")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x1C3D938", Offset = "0x1C3D938", VA = "0x1C3D938")]
	public FadeInOutLight()
	{
	}
}
[Token(Token = "0x200029F")]
public class FadeInOutParticles : MonoBehaviour
{
	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem[] particles;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool oldVisibleStat;

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x1C3D940", Offset = "0x1C3D940", VA = "0x1C3D940")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x1C3DA4C", Offset = "0x1C3DA4C", VA = "0x1C3DA4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x1C3DAD0", Offset = "0x1C3DAD0", VA = "0x1C3DAD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x1C3DC20", Offset = "0x1C3DC20", VA = "0x1C3DC20")]
	public FadeInOutParticles()
	{
	}
}
[Token(Token = "0x20002A0")]
public class FadeInOutScale : MonoBehaviour
{
	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FadeInOutStatus FadeInOutStatus;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Speed;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxScale;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 oldScale;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float oldSin;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool updateTime;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool canUpdate;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform t;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EffectSettings effectSettings;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInitialized;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isCollisionEnter;

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x1C3DC28", Offset = "0x1C3DC28", VA = "0x1C3DC28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x1C3DD64", Offset = "0x1C3DD64", VA = "0x1C3DD64")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x1C3DE70", Offset = "0x1C3DE70", VA = "0x1C3DE70")]
	public void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x1C3DEF0", Offset = "0x1C3DEF0", VA = "0x1C3DEF0")]
	private void prefabSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x1C3DF00", Offset = "0x1C3DF00", VA = "0x1C3DF00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x1C3DF10", Offset = "0x1C3DF10", VA = "0x1C3DF10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x1C3E0D0", Offset = "0x1C3E0D0", VA = "0x1C3E0D0")]
	public FadeInOutScale()
	{
	}
}
[Token(Token = "0x20002A1")]
public class FadeInOutShaderColor : MonoBehaviour
{
	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderColorName;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartDelay;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FadeInSpeed;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeOutDelay;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FadeOutSpeed;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSharedMaterial;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool FadeOutAfterCollision;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool UseHideStatus;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color oldColor;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color currentColor;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float oldAlpha;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float alpha;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool canStart;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool canStartFadeOut;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool fadeInComplited;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	private bool fadeOutComplited;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isCollisionEnter;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool isStartDelay;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	private bool isIn;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	private bool isOut;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isInitialized;

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x1C3E0EC", Offset = "0x1C3E0EC", VA = "0x1C3E0EC")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x1C3E1F8", Offset = "0x1C3E1F8", VA = "0x1C3E1F8")]
	public void UpdateMaterial(Material instanceMaterial)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x1C3E518", Offset = "0x1C3E518", VA = "0x1C3E518")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x1C3E200", Offset = "0x1C3E200", VA = "0x1C3E200")]
	private void InitMaterial()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x1C3E620", Offset = "0x1C3E620", VA = "0x1C3E620")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x1C3E71C", Offset = "0x1C3E71C", VA = "0x1C3E71C")]
	private void prefabSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x1C3E794", Offset = "0x1C3E794", VA = "0x1C3E794")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x1C3E7A4", Offset = "0x1C3E7A4", VA = "0x1C3E7A4")]
	private void SetupStartDelay()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x1C3E7B0", Offset = "0x1C3E7B0", VA = "0x1C3E7B0")]
	private void SetupFadeOutDelay()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x1C3E7BC", Offset = "0x1C3E7BC", VA = "0x1C3E7BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x1C3E9A0", Offset = "0x1C3E9A0", VA = "0x1C3E9A0")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x1C3EA64", Offset = "0x1C3EA64", VA = "0x1C3EA64")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x1C3EAE8", Offset = "0x1C3EAE8", VA = "0x1C3EAE8")]
	public FadeInOutShaderColor()
	{
	}
}
[Token(Token = "0x20002A2")]
public class FadeInOutShaderFloat : MonoBehaviour
{
	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PropertyName;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxFloat;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float StartDelay;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeInSpeed;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FadeOutDelay;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float FadeOutSpeed;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool FadeOutAfterCollision;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseHideStatus;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material OwnMaterial;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material mat;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float oldFloat;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float currentFloat;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool canStart;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool canStartFadeOut;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool fadeInComplited;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool fadeOutComplited;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool previousFrameVisibleStatus;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool isCollisionEnter;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	private bool isStartDelay;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	private bool isIn;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isOut;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EffectSettings effectSettings;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isInitialized;

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x13BDF9C", Offset = "0x13BDF9C", VA = "0x13BDF9C")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x13BE0A8", Offset = "0x13BE0A8", VA = "0x13BE0A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x13BE4A4", Offset = "0x13BE4A4", VA = "0x13BE4A4")]
	public void UpdateMaterial(Material instanceMaterial)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x13BE1B4", Offset = "0x13BE1B4", VA = "0x13BE1B4")]
	private void InitMaterial()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x13BE4AC", Offset = "0x13BE4AC", VA = "0x13BE4AC")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x13BE594", Offset = "0x13BE594", VA = "0x13BE594")]
	private void prefabSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x13BE60C", Offset = "0x13BE60C", VA = "0x13BE60C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x13BE61C", Offset = "0x13BE61C", VA = "0x13BE61C")]
	private void SetupStartDelay()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x13BE628", Offset = "0x13BE628", VA = "0x13BE628")]
	private void SetupFadeOutDelay()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x13BE634", Offset = "0x13BE634", VA = "0x13BE634")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x13BE818", Offset = "0x13BE818", VA = "0x13BE818")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x13BE8D4", Offset = "0x13BE8D4", VA = "0x13BE8D4")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x13BE954", Offset = "0x13BE954", VA = "0x13BE954")]
	public FadeInOutShaderFloat()
	{
	}
}
[Token(Token = "0x20002A3")]
public enum FadeInOutStatus
{
	[Token(Token = "0x400113F")]
	In,
	[Token(Token = "0x4001140")]
	Out,
	[Token(Token = "0x4001141")]
	InOut,
	[Token(Token = "0x4001142")]
	In_OutAfterCollision,
	[Token(Token = "0x4001143")]
	InAfterCollision,
	[Token(Token = "0x4001144")]
	OutAfterCollision,
	[Token(Token = "0x4001145")]
	InOutAfterCollision
}
[Token(Token = "0x20002A4")]
public class FixShaderQueue : MonoBehaviour
{
	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int AddQueue;

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x13C21C8", Offset = "0x13C21C8", VA = "0x13C21C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x13C22DC", Offset = "0x13C22DC", VA = "0x13C22DC")]
	private void SetProjectorQueue()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x13C235C", Offset = "0x13C235C", VA = "0x13C235C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x13C2360", Offset = "0x13C2360", VA = "0x13C2360")]
	public FixShaderQueue()
	{
	}
}
[Token(Token = "0x20002A5")]
public class OnStartSendCollision : MonoBehaviour
{
	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isInitialized;

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x1160FD8", Offset = "0x1160FD8", VA = "0x1160FD8")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x11610E4", Offset = "0x11610E4", VA = "0x11610E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x1161180", Offset = "0x1161180", VA = "0x1161180")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x1161204", Offset = "0x1161204", VA = "0x1161204")]
	public OnStartSendCollision()
	{
	}
}
[Token(Token = "0x20002A6")]
public class QueueUvAnimation : MonoBehaviour
{
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6F00", Offset = "0xAA6F00")]
	private sealed class <UpdateTiling>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QueueUvAnimation <>4__this;

		[Token(Token = "0x1700011F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0xE65240", Offset = "0xE65240", VA = "0xE65240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0xE65288", Offset = "0xE65288", VA = "0xE65288", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xE65008", Offset = "0xE65008", VA = "0xE65008")]
		[DebuggerHidden]
		public <UpdateTiling>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xE65034", Offset = "0xE65034", VA = "0xE65034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xE65038", Offset = "0xE65038", VA = "0xE65038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xE65248", Offset = "0xE65248", VA = "0xE65248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int RowsFadeIn;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int ColumnsFadeIn;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RowsLoop;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int ColumnsLoop;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Fps;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsBump;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material NextMaterial;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int index;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int count;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int allCount;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float deltaTime;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isVisible;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool isFadeHandle;

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x16228F8", Offset = "0x16228F8", VA = "0x16228F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x1622910", Offset = "0x1622910", VA = "0x1622910")]
	private void InitDefaultTex(int rows, int colums)
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x1622A38", Offset = "0x1622A38", VA = "0x1622A38")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x1622AD8", Offset = "0x1622AD8", VA = "0x1622AD8")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x1622A6C", Offset = "0x1622A6C", VA = "0x1622A6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD434", Offset = "0xABD434")]
	private IEnumerator UpdateTiling()
	{
		return null;
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x1622AE0", Offset = "0x1622AE0", VA = "0x1622AE0")]
	public QueueUvAnimation()
	{
	}
}
[Token(Token = "0x20002A8")]
public class RandomRotate : MonoBehaviour
{
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6F10", Offset = "0xAA6F10")]
	private sealed class <UpdateRotation>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RandomRotate <>4__this;

		[Token(Token = "0x17000121")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xE659B0", Offset = "0xE659B0", VA = "0xE659B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0xE659F8", Offset = "0xE659F8", VA = "0xE659F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xE65804", Offset = "0xE65804", VA = "0xE65804")]
		[DebuggerHidden]
		public <UpdateRotation>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xE65830", Offset = "0xE65830", VA = "0xE65830", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xE65834", Offset = "0xE65834", VA = "0xE65834", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xE659B8", Offset = "0xE659B8", VA = "0xE659B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isRotate;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int fps;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int x;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int y;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int z;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rangeX;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rangeY;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rangeZ;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float deltaTime;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isVisible;

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x15196A0", Offset = "0x15196A0", VA = "0x15196A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x1519718", Offset = "0x1519718", VA = "0x1519718")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x15197B8", Offset = "0x15197B8", VA = "0x15197B8")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x151974C", Offset = "0x151974C", VA = "0x151974C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD4E4", Offset = "0xABD4E4")]
	private IEnumerator UpdateRotation()
	{
		return null;
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x15197C0", Offset = "0x15197C0", VA = "0x15197C0")]
	public RandomRotate()
	{
	}
}
[Token(Token = "0x20002AA")]
internal class UVTextureAnimator : MonoBehaviour
{
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6F20", Offset = "0xAA6F20")]
	private sealed class <UpdateCorutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UVTextureAnimator <>4__this;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0xE6CC88", Offset = "0xE6CC88", VA = "0xE6CC88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0xE6CCD0", Offset = "0xE6CCD0", VA = "0xE6CCD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xE6CB58", Offset = "0xE6CB58", VA = "0xE6CB58")]
		[DebuggerHidden]
		public <UpdateCorutine>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xE6CB84", Offset = "0xE6CB84", VA = "0xE6CB84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xE6CB88", Offset = "0xE6CB88", VA = "0xE6CB88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xE6CC90", Offset = "0xE6CC90", VA = "0xE6CC90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] AnimatedMaterialsNotInstance;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Rows;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Columns;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Fps;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int OffsetMat;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 SelfTiling;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsLoop;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool IsReverse;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool IsRandomOffsetForInctance;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool IsBump;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool IsHeight;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool IsCutOut;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool isInizialised;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int index;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int count;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int allCount;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float deltaFps;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isVisible;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isCorutineStarted;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer currentRenderer;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material instanceMaterial;

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x12B8F04", Offset = "0x12B8F04", VA = "0x12B8F04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x12B977C", Offset = "0x12B977C", VA = "0x12B977C")]
	public void SetInstanceMaterial(Material mat, Vector2 offsetMat)
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x12B9148", Offset = "0x12B9148", VA = "0x12B9148")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x12B8F4C", Offset = "0x12B8F4C", VA = "0x12B8F4C")]
	private void InitMaterial()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x12B9784", Offset = "0x12B9784", VA = "0x12B9784")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x12B97DC", Offset = "0x12B97DC", VA = "0x12B97DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x12B97E8", Offset = "0x12B97E8", VA = "0x12B97E8")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x12B9830", Offset = "0x12B9830", VA = "0x12B9830")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x12B9710", Offset = "0x12B9710", VA = "0x12B9710")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD594", Offset = "0xABD594")]
	private IEnumerator UpdateCorutine()
	{
		return null;
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x12B9838", Offset = "0x12B9838", VA = "0x12B9838")]
	private void UpdateCorutineFrame()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x12B9D30", Offset = "0x12B9D30", VA = "0x12B9D30")]
	public UVTextureAnimator()
	{
	}
}
[Token(Token = "0x20002AC")]
public class RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xE6F2C8", Offset = "0xE6F2C8", VA = "0xE6F2C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xE6F31C", Offset = "0xE6F31C", VA = "0xE6F31C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xE6F338", Offset = "0xE6F338", VA = "0xE6F338")]
	public RealtimeReflection()
	{
	}
}
[Token(Token = "0x20002AD")]
public class Receiver : MonoBehaviour
{
	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] dockedItems;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool alwaysLocked;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool signalAvailable;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer[] lamps;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material redLampMap;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material greenLampMap;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material blueLampMap;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material yellowLampMap;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material magentaLampMap;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material cyanLampMap;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material whiteLampMap;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material redLampMap_off;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material greenLampMap_off;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material blueLampMap_off;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material yellowLampMap_off;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material magentaLampMap_off;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material cyanLampMap_off;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material whiteLampMap_off;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public VF_UIELement button_Red;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public VF_UIELement button_Green;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public VF_UIELement button_Blue;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public VF_UIELement button_Yellow;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public VF_UIELement button_Magenta;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public VF_UIELement button_Cyan;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public VF_UIELement button_White;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public VF_UIELement selectionButton;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public VR_UI_ElementHolder colorButtons;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public VR_UI_ElementHolder ballButtons;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GrabbableObject grabbableObject;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SensorManagerObject.LampColors lampColor;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public LevelManager levelManager;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public PartsWatcher partsWatcher;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Sprite lockSprite;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Sprite originalSprite;

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xE6F340", Offset = "0xE6F340", VA = "0xE6F340")]
	public void lockUIElement()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xE6F3A8", Offset = "0xE6F3A8", VA = "0xE6F3A8")]
	public void unlockUIElement()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xE6F408", Offset = "0xE6F408", VA = "0xE6F408")]
	public void setColorRed()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xE6F664", Offset = "0xE6F664", VA = "0xE6F664")]
	public void setColorGreen()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xE6F6E4", Offset = "0xE6F6E4", VA = "0xE6F6E4")]
	public void setColorBlue()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xE6F764", Offset = "0xE6F764", VA = "0xE6F764")]
	public void setColorYellow()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xE6F7E4", Offset = "0xE6F7E4", VA = "0xE6F7E4")]
	public void setColorCyan()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xE6F864", Offset = "0xE6F864", VA = "0xE6F864")]
	public void setColorMagenta()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xE6F8E4", Offset = "0xE6F8E4", VA = "0xE6F8E4")]
	public void setColorWhite()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xE6F964", Offset = "0xE6F964", VA = "0xE6F964")]
	public void setColorBlack()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xE6F9E4", Offset = "0xE6F9E4", VA = "0xE6F9E4", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xE6FEC0", Offset = "0xE6FEC0", VA = "0xE6FEC0")]
	public void changeColorBrightness(bool on)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xE702F8", Offset = "0xE702F8", VA = "0xE702F8")]
	public void receiveSignal(SensorManagerObject.LampColors color, bool onoffstate)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xE7031C", Offset = "0xE7031C", VA = "0xE7031C", Slot = "5")]
	public virtual void ReceiverFunction()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xE70324", Offset = "0xE70324", VA = "0xE70324")]
	public void CheckifReceivingAnySignal()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xE7061C", Offset = "0xE7061C", VA = "0xE7061C")]
	public void showOptionsButton()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xE70638", Offset = "0xE70638", VA = "0xE70638")]
	public void hideOptionsButton()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xE70798", Offset = "0xE70798", VA = "0xE70798")]
	public void showMenu()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xE6F484", Offset = "0xE6F484", VA = "0xE6F484")]
	public void disableMenu()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xE708F8", Offset = "0xE708F8", VA = "0xE708F8")]
	public Receiver()
	{
	}
}
[Token(Token = "0x20002AE")]
public class RefreshParts : MonoBehaviour
{
	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PartsSpawner partsSpawner;

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xE7239C", Offset = "0xE7239C", VA = "0xE7239C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xE723B8", Offset = "0xE723B8", VA = "0xE723B8")]
	public RefreshParts()
	{
	}
}
[Token(Token = "0x20002AF")]
public class RemoteBoundary : MonoBehaviour
{
	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject explosionPrefab;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosionPrefab2;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PartsWatcher partsWatcher;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PartsSpawner partsSpawner;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool shouldScan;

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xE723C0", Offset = "0xE723C0", VA = "0xE723C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xE7247C", Offset = "0xE7247C", VA = "0xE7247C")]
	public void DestroyLevelObject(GameObject other)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xE725AC", Offset = "0xE725AC", VA = "0xE725AC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xE725E8", Offset = "0xE725E8", VA = "0xE725E8")]
	public RemoteBoundary()
	{
	}
}
[Token(Token = "0x20002B0")]
public class ReplaceTextWithPersistentdatapath : MonoBehaviour
{
	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro t;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string addition;

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xE73AB8", Offset = "0xE73AB8", VA = "0xE73AB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xE73BB8", Offset = "0xE73BB8", VA = "0xE73BB8")]
	public ReplaceTextWithPersistentdatapath()
	{
	}
}
[Token(Token = "0x20002B1")]
public class ScrollTexture : MonoBehaviour
{
	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeed;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int materialNumber;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rend;

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x10381B8", Offset = "0x10381B8", VA = "0x10381B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x103820C", Offset = "0x103820C", VA = "0x103820C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x10382B8", Offset = "0x10382B8", VA = "0x10382B8")]
	public ScrollTexture()
	{
	}
}
[Token(Token = "0x20002B2")]
public class ResetPlayerOnEnter : MonoBehaviour
{
	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool allowDuringLeveleditor;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NewGameManager gameManager;

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xE73D28", Offset = "0xE73D28", VA = "0xE73D28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xE73DA0", Offset = "0xE73DA0", VA = "0xE73DA0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xE73E9C", Offset = "0xE73E9C", VA = "0xE73E9C")]
	public ResetPlayerOnEnter()
	{
	}
}
[Token(Token = "0x20002B3")]
public static class Rot13
{
	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xE76EE4", Offset = "0xE76EE4", VA = "0xE76EE4")]
	public static string Transform(string value)
	{
		return null;
	}
}
[Token(Token = "0x20002B4")]
public class RoundIndicator : MonoBehaviour
{
	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material blueMat;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material greenMat;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material redMat;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer buttonRenderer;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isLocked;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isInfinity;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool isNumber;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool isCheckMark;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int number;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro numberText;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject numberTextGO;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject lockedImageGO;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject infinityImageGO;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject checkmarkImageGO;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VF_UIELement uiButton;

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xE77704", Offset = "0xE77704", VA = "0xE77704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xE77708", Offset = "0xE77708", VA = "0xE77708")]
	public void setLevelEditorNumber(int newnumber)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xE77858", Offset = "0xE77858", VA = "0xE77858")]
	public void setNumber(int newnumber, int maxnumber)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xE77B6C", Offset = "0xE77B6C", VA = "0xE77B6C")]
	public void setEmpty()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xE77998", Offset = "0xE77998", VA = "0xE77998")]
	public void setInfinity()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xE77C4C", Offset = "0xE77C4C", VA = "0xE77C4C")]
	public void setCheckMark()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xE77A80", Offset = "0xE77A80", VA = "0xE77A80")]
	public void setLocked()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xE777F4", Offset = "0xE777F4", VA = "0xE777F4")]
	public void setColor(int color)
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xE77D34", Offset = "0xE77D34", VA = "0xE77D34")]
	public RoundIndicator()
	{
	}
}
[Token(Token = "0x20002B5")]
public class AlleyDemoControl : MonoBehaviour
{
	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAC5AC", Offset = "0xAAC5AC")]
	public float width;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float height;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float depth;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAC5E4", Offset = "0xAAC5E4")]
	public int maxBlocks;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxPebbles;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxWires;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int maxSigns;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAC61C", Offset = "0xAAC61C")]
	public Color fogColor;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material blockMaterial;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material pebbleMaterial;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material wireMaterial;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SSFSGenerator ssfsGenerator;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Light sun;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform[] leftblocks;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform[] rightblocks;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform[] pebbles;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform[] signs;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<Transform> wires;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int maxWireVerts;

	[Token(Token = "0x17000125")]
	private Vector3 tunnelMovement
	{
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x133D7A8", Offset = "0x133D7A8", VA = "0x133D7A8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x133D84C", Offset = "0x133D84C", VA = "0x133D84C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x133E480", Offset = "0x133E480", VA = "0x133E480")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x133D9AC", Offset = "0x133D9AC", VA = "0x133D9AC")]
	private void CreateSun()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x133EE34", Offset = "0x133EE34", VA = "0x133EE34")]
	private void RandColor(ref Transform block, float minValue = 0.2f, float valueRange = 0.4f)
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x133DB3C", Offset = "0x133DB3C", VA = "0x133DB3C")]
	private void CreateWall(Vector3 up, Vector3 pos, Vector3 scl, bool noshadow = false)
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x133DC80", Offset = "0x133DC80", VA = "0x133DC80")]
	private void PopulateBlockList(ref Transform[] blocks, float side)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x133E28C", Offset = "0x133E28C", VA = "0x133E28C")]
	private void PopulatePebbles()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x133EF40", Offset = "0x133EF40", VA = "0x133EF40")]
	private void ScaleBlock(ref Transform block, bool bridge)
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x133F010", Offset = "0x133F010", VA = "0x133F010")]
	private void PositionBlock(ref Transform block, float xpos, bool bridge)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x133F1A8", Offset = "0x133F1A8", VA = "0x133F1A8")]
	private void TripBlock(ref Transform block, float side)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x133DF54", Offset = "0x133DF54", VA = "0x133DF54")]
	private void PopulateSigns()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x133F64C", Offset = "0x133F64C", VA = "0x133F64C")]
	private Vector3 NewSignPosition(bool atEnd = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x133E72C", Offset = "0x133E72C", VA = "0x133E72C")]
	private void UpdateBlocks(ref Transform[] blocks, float side)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x133F090", Offset = "0x133F090", VA = "0x133F090")]
	private void NewPebblePos(ref Transform pebble, bool randomDepth = false)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x133E878", Offset = "0x133E878", VA = "0x133E878")]
	private void UpdateDetail()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x133F36C", Offset = "0x133F36C", VA = "0x133F36C")]
	private void CreateWire(Vector3 p1, Vector3 p2)
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x133F7D8", Offset = "0x133F7D8", VA = "0x133F7D8")]
	public AlleyDemoControl()
	{
	}
}
[Token(Token = "0x20002B6")]
public class Demo_SignSwitcher : MonoBehaviour
{
	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6F30", Offset = "0xAA6F30")]
	private sealed class <GoToMaterial>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Demo_SignSwitcher <>4__this;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material <nextMat>5__2;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0xCB843C", Offset = "0xCB843C", VA = "0xCB843C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0xCB8484", Offset = "0xCB8484", VA = "0xCB8484", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xCB820C", Offset = "0xCB820C", VA = "0xCB820C")]
		[DebuggerHidden]
		public <GoToMaterial>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xCB8238", Offset = "0xCB8238", VA = "0xCB8238", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xCB823C", Offset = "0xCB823C", VA = "0xCB823C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xCB8444", Offset = "0xCB8444", VA = "0xCB8444", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoswitch;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float transitionTime;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode nextKey;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode prevKey;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isswitching;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentId;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float cphase;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer r;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float t;

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x108E958", Offset = "0x108E958", VA = "0x108E958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x108E9C8", Offset = "0x108E9C8", VA = "0x108E9C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD644", Offset = "0xABD644")]
	public IEnumerator GoToMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x108EA34", Offset = "0x108EA34", VA = "0x108EA34")]
	private void ShiftMaterial(int offset)
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x108EAAC", Offset = "0x108EAAC", VA = "0x108EAAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x108EBAC", Offset = "0x108EBAC", VA = "0x108EBAC")]
	public Demo_SignSwitcher()
	{
	}
}
[Token(Token = "0x20002B8")]
[ExecuteInEditMode]
internal class LightColorFromTexture : MonoBehaviour
{
	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer r;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAC654", Offset = "0xAAC654")]
	public float colorIntensity;

	[NonSerialized]
	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light _l;

	[NonSerialized]
	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m;

	[NonSerialized]
	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D t1;

	[NonSerialized]
	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D t2;

	[NonSerialized]
	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color c1;

	[NonSerialized]
	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color c2;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<Texture, Color> cachedEvaluations;

	[Token(Token = "0x17000128")]
	private Light l
	{
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x24E0EEC", Offset = "0x24E0EEC", VA = "0x24E0EEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000129")]
	private bool hasSwap
	{
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x24E0F8C", Offset = "0x24E0F8C", VA = "0x24E0F8C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x24E0FF8", Offset = "0x24E0FF8", VA = "0x24E0FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x24E1488", Offset = "0x24E1488", VA = "0x24E1488")]
	public bool FindTexture(string propertyName, ref Texture2D texture)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x24E122C", Offset = "0x24E122C", VA = "0x24E122C")]
	public bool CheckUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x24E13F8", Offset = "0x24E13F8", VA = "0x24E13F8")]
	public void Intensify(ref Color c)
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x24E15AC", Offset = "0x24E15AC", VA = "0x24E15AC")]
	public Color EvaluateColor(Texture2D texture)
	{
		return default(Color);
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x24E1894", Offset = "0x24E1894", VA = "0x24E1894")]
	public LightColorFromTexture()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B9")]
public class MaterialParameter
{
	[Token(Token = "0x20002BA")]
	public enum MaterialParamType
	{
		[Token(Token = "0x40011FA")]
		number,
		[Token(Token = "0x40011FB")]
		color,
		[Token(Token = "0x40011FC")]
		texture,
		[Token(Token = "0x40011FD")]
		vector
	}

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string parameterName;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string displayName;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int repeat;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MaterialParamType type;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float min;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float max;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string label_x;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string label_y;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string label_z;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string label_w;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 min4;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 max4;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Texture> textures;

	[NonSerialized]
	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float value;

	[NonSerialized]
	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color valueC;

	[NonSerialized]
	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 value4;

	[Token(Token = "0x1700012A")]
	public int texID
	{
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1A16D74", Offset = "0x1A16D74", VA = "0x1A16D74")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x1A16DD8", Offset = "0x1A16DD8", VA = "0x1A16DD8")]
	public MaterialParameter()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x1A16F98", Offset = "0x1A16F98", VA = "0x1A16F98")]
	public MaterialParameter(MaterialParameter other)
	{
	}
}
[Token(Token = "0x20002BB")]
public class ParameterFiddler : MonoBehaviour
{
	[Token(Token = "0x20002BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6F50", Offset = "0xAA6F50")]
	private sealed class <FiddleFloat>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParameterFiddler <>4__this;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialParameter p;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <o>5__2;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <i>5__3;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0xDB5864", Offset = "0xDB5864", VA = "0xDB5864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0xDB58AC", Offset = "0xDB58AC", VA = "0xDB58AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xDB553C", Offset = "0xDB553C", VA = "0xDB553C")]
		[DebuggerHidden]
		public <FiddleFloat>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xDB5568", Offset = "0xDB5568", VA = "0xDB5568", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xDB556C", Offset = "0xDB556C", VA = "0xDB556C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xDB586C", Offset = "0xDB586C", VA = "0xDB586C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6F60", Offset = "0xAA6F60")]
	private sealed class <FiddleColor>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParameterFiddler <>4__this;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialParameter param;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <o>5__2;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <c>5__3;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <i>5__4;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0xDB54EC", Offset = "0xDB54EC", VA = "0xDB54EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0xDB5534", Offset = "0xDB5534", VA = "0xDB5534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xDB5190", Offset = "0xDB5190", VA = "0xDB5190")]
		[DebuggerHidden]
		public <FiddleColor>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xDB51BC", Offset = "0xDB51BC", VA = "0xDB51BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xDB51C0", Offset = "0xDB51C0", VA = "0xDB51C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xDB54F4", Offset = "0xDB54F4", VA = "0xDB54F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6F70", Offset = "0xAA6F70")]
	private sealed class <FiddleTexture>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParameterFiddler <>4__this;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialParameter param;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture <o>5__2;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0xDB5ACC", Offset = "0xDB5ACC", VA = "0xDB5ACC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0xDB5B14", Offset = "0xDB5B14", VA = "0xDB5B14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xDB58B4", Offset = "0xDB58B4", VA = "0xDB58B4")]
		[DebuggerHidden]
		public <FiddleTexture>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xDB58E0", Offset = "0xDB58E0", VA = "0xDB58E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xDB58E4", Offset = "0xDB58E4", VA = "0xDB58E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xDB5AD4", Offset = "0xDB5AD4", VA = "0xDB5AD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6F80", Offset = "0xAA6F80")]
	private sealed class <FiddleVector>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParameterFiddler <>4__this;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialParameter param;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector4 <o>5__2;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0xDB5D14", Offset = "0xDB5D14", VA = "0xDB5D14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xDB5D5C", Offset = "0xDB5D5C", VA = "0xDB5D5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xDB5B1C", Offset = "0xDB5B1C", VA = "0xDB5B1C")]
		[DebuggerHidden]
		public <FiddleVector>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xDB5B48", Offset = "0xDB5B48", VA = "0xDB5B48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xDB5B4C", Offset = "0xDB5B4C", VA = "0xDB5B4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xDB5D1C", Offset = "0xDB5D1C", VA = "0xDB5D1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA6F90", Offset = "0xAA6F90")]
	private sealed class <Unfiddle>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParameterFiddler <>4__this;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0xDB5E4C", Offset = "0xDB5E4C", VA = "0xDB5E4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0xDB5E94", Offset = "0xDB5E94", VA = "0xDB5E94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xDB5D64", Offset = "0xDB5D64", VA = "0xDB5D64")]
		[DebuggerHidden]
		public <Unfiddle>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xDB5D90", Offset = "0xDB5D90", VA = "0xDB5D90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xDB5D94", Offset = "0xDB5D94", VA = "0xDB5D94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xDB5E54", Offset = "0xDB5E54", VA = "0xDB5E54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material sourceMaterial;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material material;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool automatic;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool showMenu;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float menuVis;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAC66C", Offset = "0xAAC66C")]
	public float fiddleTime;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<MaterialParameter> parameters;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture sliderBar;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture sliderThumb;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GUIStyle sliderStyle;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GUIStyle sliderThumbStyle;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentParameterIndex;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float t;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool fiddling;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GUIStyle nameStyle;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GUIStyle nameStyle2;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GUIStyle buttonStyle;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GUIStyle scrollStyle;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GUIStyle boxStyle;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color baseGUIColor;

	[Token(Token = "0x1700012B")]
	private float tf
	{
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x14A9344", Offset = "0x14A9344", VA = "0x14A9344")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x14A9354", Offset = "0x14A9354", VA = "0x14A9354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x14A95A8", Offset = "0x14A95A8", VA = "0x14A95A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x14A94A4", Offset = "0x14A94A4", VA = "0x14A94A4")]
	public void ManualRead()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x14A9804", Offset = "0x14A9804", VA = "0x14A9804")]
	public void ManualFiddle()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x14A99B0", Offset = "0x14A99B0", VA = "0x14A99B0")]
	public void FiddleParameter()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x14A9B28", Offset = "0x14A9B28", VA = "0x14A9B28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD6F4", Offset = "0xABD6F4")]
	public IEnumerator FiddleFloat(MaterialParameter p)
	{
		return null;
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x14A9BA0", Offset = "0x14A9BA0", VA = "0x14A9BA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD754", Offset = "0xABD754")]
	public IEnumerator FiddleColor(MaterialParameter param)
	{
		return null;
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x14A9C18", Offset = "0x14A9C18", VA = "0x14A9C18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD7B4", Offset = "0xABD7B4")]
	public IEnumerator FiddleTexture(MaterialParameter param)
	{
		return null;
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x14A9C90", Offset = "0x14A9C90", VA = "0x14A9C90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD814", Offset = "0xABD814")]
	public IEnumerator FiddleVector(MaterialParameter param)
	{
		return null;
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x14A9438", Offset = "0x14A9438", VA = "0x14A9438")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABD874", Offset = "0xABD874")]
	private IEnumerator Unfiddle()
	{
		return null;
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x14A9D08", Offset = "0x14A9D08", VA = "0x14A9D08")]
	public void SetupGUIStyles()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x14AA47C", Offset = "0x14AA47C", VA = "0x14AA47C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x14AB538", Offset = "0x14AB538", VA = "0x14AB538")]
	public void Slider(Color color)
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x14ABAB4", Offset = "0x14ABAB4", VA = "0x14ABAB4")]
	public void Slider(ref Color color)
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x14AB41C", Offset = "0x14AB41C", VA = "0x14AB41C")]
	public void Slider(Vector4 v, Vector4 min4, Vector4 max4)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x14AB974", Offset = "0x14AB974", VA = "0x14AB974")]
	public void Slider(ref Vector4 v, Vector4 min4, Vector4 max4, string xLabel = "X", string yLabel = "Y", string zLabel = "Z", string wLabel = "W")
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x14AB1DC", Offset = "0x14AB1DC", VA = "0x14AB1DC")]
	public void Slider(string label, float v, float min = 0f, float max = 1f)
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x14AB724", Offset = "0x14AB724", VA = "0x14AB724")]
	public void Slider(string label, ref float v, float min = 0f, float max = 1f)
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x14ABC98", Offset = "0x14ABC98", VA = "0x14ABC98")]
	public ParameterFiddler()
	{
	}
}
[Token(Token = "0x20002C1")]
public class AppCoreControl : MonoBehaviour
{
	[Token(Token = "0x20002C2")]
	public enum AASetting
	{
		[Token(Token = "0x4001233")]
		None,
		[Token(Token = "0x4001234")]
		x2,
		[Token(Token = "0x4001235")]
		x4,
		[Token(Token = "0x4001236")]
		x8
	}

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int frameRateLimit;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showFps;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool enableVsync;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxQueuedFrames;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool pauseOnFocusLoss;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AASetting antialiasing;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x1346190", Offset = "0x1346190", VA = "0x1346190")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xABDA64", Offset = "0xABDA64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x13461FC", Offset = "0x13461FC", VA = "0x13461FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x1346228", Offset = "0x1346228", VA = "0x1346228")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x13463D0", Offset = "0x13463D0", VA = "0x13463D0")]
	public AppCoreControl()
	{
	}
}
[Token(Token = "0x20002C3")]
public class CameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lerpSpeed;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scrollSpeed;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minDist;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDist;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool raycastedDistance;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float wdist;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float cdist;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 wrot;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 crot;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 worigin;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 corigin;

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x107F0BC", Offset = "0x107F0BC", VA = "0x107F0BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x107F148", Offset = "0x107F148", VA = "0x107F148")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x107F528", Offset = "0x107F528", VA = "0x107F528")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x107F624", Offset = "0x107F624", VA = "0x107F624")]
	public CameraOrbit()
	{
	}
}
[Token(Token = "0x20002C4")]
public class ConstantTransform : MonoBehaviour
{
	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 translation;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space translationSpace;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 rotation;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Space rotationSpace;

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x108768C", Offset = "0x108768C", VA = "0x108768C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x108773C", Offset = "0x108773C", VA = "0x108773C")]
	public ConstantTransform()
	{
	}
}
[Token(Token = "0x20002C5")]
public class StepRotation : MonoBehaviour
{
	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int segments;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float i;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float t;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion targetRotation;

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xF02B70", Offset = "0xF02B70", VA = "0xF02B70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xF02C88", Offset = "0xF02C88", VA = "0xF02C88")]
	public void Rotate()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xF02D28", Offset = "0xF02D28", VA = "0xF02D28")]
	public StepRotation()
	{
	}
}
[Token(Token = "0x20002C6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAA6FA0", Offset = "0xAA6FA0")]
public class SSFSGenerator : ScriptableObject
{
	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextureList textures;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextureList scatters;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RandomColor baseTint;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RandomColor transitionTint;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public boolchance useTextureSwap;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public boolchance useImageAsScatter;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public boolchance useRandomTileCount;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public boolchance allowIdleAnimation;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public boolchance allowIdleNoise;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RandomRange idleNoiseStrength;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RandomRange idleIntensity;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RandomRange idleSpeed;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public boolchance allowIdleReverse;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public boolchance allowTileClipping;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public boolchance allowRadial;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RandomRange phaseDirection;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public boolchance separateTileCounts;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RandomRangeInt tileCountUniform;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public RandomRangeInt tileCountX;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public RandomRangeInt tileCountY;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public boolchance separateAxisScaling;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public boolchance allowTileCentricScaling;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public RandomRange scalingUniform;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public RandomRange scalingX;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RandomRange scalingY;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public RandomRange scattering;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public RandomRange phaseSharpness;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public RandomRange overbright;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public RandomRange aberration;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public RandomRange effectAberration;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public RandomRange scanlineIntensity;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public RandomRange scanlineDistortion;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public RandomRange scanlineScale;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public RandomRange scanlineSpeed;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public RandomRange flash;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public RandomRange flicker;

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xE7B9DC", Offset = "0xE7B9DC", VA = "0xE7B9DC")]
	public Material GenerateMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xE7C518", Offset = "0xE7C518", VA = "0xE7C518")]
	public void GenerateMaterial(ref Material existingMaterial)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xE7C618", Offset = "0xE7C618", VA = "0xE7C618")]
	private bool SyncKeyword(ref Material m, string keyword, bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xE7BA10", Offset = "0xE7BA10", VA = "0xE7BA10")]
	private void genmat(ref Material m)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xE7C65C", Offset = "0xE7C65C", VA = "0xE7C65C")]
	public SSFSGenerator()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C7")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xAA6FF4", Offset = "0xAA6FF4")]
public class TextureList
{
	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Texture2D> list;

	[Token(Token = "0x17000136")]
	public Texture2D texture
	{
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xFECA34", Offset = "0xFECA34", VA = "0xFECA34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000137")]
	public Texture2D Item
	{
		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xFECB58", Offset = "0xFECB58", VA = "0xFECB58")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xFECBCC", Offset = "0xFECBCC", VA = "0xFECBCC")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public int Count
	{
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xFECC38", Offset = "0xFECC38", VA = "0xFECC38")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xFECABC", Offset = "0xFECABC", VA = "0xFECABC")]
	public TextureList()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xFECC84", Offset = "0xFECC84", VA = "0xFECC84")]
	public void Add(Texture2D tex)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xFECCE8", Offset = "0xFECCE8", VA = "0xFECCE8")]
	public void Remove(Texture2D tex)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xFECD4C", Offset = "0xFECD4C", VA = "0xFECD4C")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xFECDB0", Offset = "0xFECDB0", VA = "0xFECDB0")]
	public void Clear()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C8")]
public class boolchance
{
	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool boolean;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float chance;

	[Token(Token = "0x17000139")]
	public bool check
	{
		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xE8D654", Offset = "0xE8D654", VA = "0xE8D654")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xE8D694", Offset = "0xE8D694", VA = "0xE8D694")]
	public boolchance(bool boolean, float chance)
	{
	}
}
[Serializable]
[Token(Token = "0x20002C9")]
public class RandomColor
{
	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool useRandom;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float minHue;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minSaturation;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minValue;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxHue;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxSaturation;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxValue;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color fixedColor;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color testcolor;

	[Token(Token = "0x1700013A")]
	public Color get_color
	{
		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x15194A8", Offset = "0x15194A8", VA = "0x15194A8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x15193F8", Offset = "0x15193F8", VA = "0x15193F8")]
	public RandomColor(float minHue = 0f, float maxHue = 1f, float minSaturation = 0f, float maxSaturation = 1f, float minValue = 0f, float maxValue = 1f)
	{
	}
}
[Serializable]
[Token(Token = "0x20002CA")]
public class RandomRange
{
	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool useRandom;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float min;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float max;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float def;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float test;

	[Token(Token = "0x1700013B")]
	public float get_float
	{
		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x15195A0", Offset = "0x15195A0", VA = "0x15195A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x15195BC", Offset = "0x15195BC", VA = "0x15195BC")]
	public RandomRange(float def = 1f, float min = 0f, float max = 1f)
	{
	}
}
[Serializable]
[Token(Token = "0x20002CB")]
public class RandomRangeInt
{
	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool useRandom;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int min;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int max;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int def;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int test;

	[Token(Token = "0x1700013C")]
	public int get_int
	{
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x1519618", Offset = "0x1519618", VA = "0x1519618")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x1519638", Offset = "0x1519638", VA = "0x1519638")]
	public RandomRangeInt(int def = 26, int min = 10, int max = 100)
	{
	}
}
[Token(Token = "0x20002CC")]
public class ScaleSensor : Sender
{
	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshPro currentWeightText;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TextMeshPro targetWeightText;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float targetWeight;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float currentWeight;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool currentlyActivated;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float sensorTimer;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public LevelManager levelManager;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public VR_UI_ElementHolder increaseButtons;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Sprite originalSprite;

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xE7D5CC", Offset = "0xE7D5CC", VA = "0xE7D5CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xE7D9A8", Offset = "0xE7D9A8", VA = "0xE7D9A8")]
	public void resetScale()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xE7D9DC", Offset = "0xE7D9DC", VA = "0xE7D9DC")]
	public void updateText()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xE7DAB8", Offset = "0xE7DAB8", VA = "0xE7DAB8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xE7DCE4", Offset = "0xE7DCE4", VA = "0xE7DCE4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xE7DEFC", Offset = "0xE7DEFC", VA = "0xE7DEFC")]
	public void increaseTargetWeight()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xE7DF10", Offset = "0xE7DF10", VA = "0xE7DF10")]
	public void decreaseTargetWeight()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xE7DF2C", Offset = "0xE7DF2C", VA = "0xE7DF2C")]
	public new void hideOptionsButton()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xE7DFFC", Offset = "0xE7DFFC", VA = "0xE7DFFC")]
	public new void showMenu()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xE7D8D8", Offset = "0xE7D8D8", VA = "0xE7D8D8")]
	public new void disableMenu()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xE7E0CC", Offset = "0xE7E0CC", VA = "0xE7E0CC")]
	public ScaleSensor()
	{
	}
}
[Token(Token = "0x20002CD")]
public class SceneMaterialSwap : MonoBehaviour
{
	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool forceSimpleMats;

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xE7E0DC", Offset = "0xE7E0DC", VA = "0xE7E0DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xE7E0E0", Offset = "0xE7E0E0", VA = "0xE7E0E0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xABDA9C", Offset = "0xABDA9C")]
	public void DisplaySimple()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xE7E0E4", Offset = "0xE7E0E4", VA = "0xE7E0E4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xABDAD4", Offset = "0xABDAD4")]
	public void DisplayNormal()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xE7E0E8", Offset = "0xE7E0E8", VA = "0xE7E0E8")]
	public SceneMaterialSwap()
	{
	}
}
[Token(Token = "0x20002CE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA702C", Offset = "0xAA702C")]
public class Video : MonoBehaviour
{
	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool operate;

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xE81EC8", Offset = "0xE81EC8", VA = "0xE81EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xE81ECC", Offset = "0xE81ECC", VA = "0xE81ECC")]
	public Video()
	{
	}
}
[Token(Token = "0x20002CF")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamManager s_instance;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool s_EverInialized;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_bInitialized;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SteamAPIWarningMessageHook_t m_SteamAPIWarningMessageHook;

	[Token(Token = "0x1700013D")]
	private static SteamManager Instance
	{
		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xF023F0", Offset = "0xF023F0", VA = "0xF023F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013E")]
	public static bool Initialized
	{
		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xF024F4", Offset = "0xF024F4", VA = "0xF024F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xF02514", Offset = "0xF02514", VA = "0xF02514")]
	private static void SteamAPIDebugTextHook(int nSeverity, StringBuilder pchDebugText)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xF02578", Offset = "0xF02578", VA = "0xF02578")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xF02980", Offset = "0xF02980", VA = "0xF02980")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xF02A94", Offset = "0xF02A94", VA = "0xF02A94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xF02B54", Offset = "0xF02B54", VA = "0xF02B54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xF02B68", Offset = "0xF02B68", VA = "0xF02B68")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20002D0")]
public class ScrollingUVs : MonoBehaviour
{
	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int materialIndex;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textureName;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 uvOffset;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer renderer;

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x10382C8", Offset = "0x10382C8", VA = "0x10382C8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x103831C", Offset = "0x103831C", VA = "0x103831C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x10383CC", Offset = "0x10383CC", VA = "0x10383CC")]
	public ScrollingUVs()
	{
	}
}
[Token(Token = "0x20002D1")]
public class SecurityCamera : MonoBehaviour
{
	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 targetpos;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x1038438", Offset = "0x1038438", VA = "0x1038438")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x1038470", Offset = "0x1038470", VA = "0x1038470")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x103854C", Offset = "0x103854C", VA = "0x103854C")]
	public SecurityCamera()
	{
	}
}
[Token(Token = "0x20002D2")]
public class Sender : MonoBehaviour
{
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA709C", Offset = "0xAA709C")]
	private sealed class <turnofftemporarily>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sender <>4__this;

		[Token(Token = "0x1700013F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xE67658", Offset = "0xE67658", VA = "0xE67658", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xE676A0", Offset = "0xE676A0", VA = "0xE676A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xE67458", Offset = "0xE67458", VA = "0xE67458")]
		[DebuggerHidden]
		public <turnofftemporarily>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xE67484", Offset = "0xE67484", VA = "0xE67484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xE67488", Offset = "0xE67488", VA = "0xE67488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xE67660", Offset = "0xE67660", VA = "0xE67660", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA70AC", Offset = "0xAA70AC")]
	private sealed class <turnontemporarily>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sender <>4__this;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0xE678A8", Offset = "0xE678A8", VA = "0xE678A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xE678F0", Offset = "0xE678F0", VA = "0xE678F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xE676A8", Offset = "0xE676A8", VA = "0xE676A8")]
		[DebuggerHidden]
		public <turnontemporarily>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xE676D4", Offset = "0xE676D4", VA = "0xE676D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xE676D8", Offset = "0xE676D8", VA = "0xE676D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xE678B0", Offset = "0xE678B0", VA = "0xE678B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material redLampMap;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material greenLampMap;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material blueLampMap;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material yellowLampMap;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material magentaLampMap;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material cyanLampMap;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material whiteLampMap;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material redLampMap_off;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material greenLampMap_off;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material blueLampMap_off;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material yellowLampMap_off;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material magentaLampMap_off;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material cyanLampMap_off;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material whiteLampMap_off;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public VF_UIELement selectionButton;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SensorManagerObject.LampColors lampColor;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MeshRenderer[] lamps;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Light lightObject;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public PartsWatcher partsWatcher;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public VR_UI_ElementHolder colorButtons;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public VF_UIELement button_Red;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public VF_UIELement button_Green;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public VF_UIELement button_Blue;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool inverted;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GrabbableObject grabbableObject;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool alwaysLocked;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Sprite lockSprite;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Sprite originalSprite;

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x1038F3C", Offset = "0x1038F3C", VA = "0x1038F3C")]
	public void lockUIElement()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x1038FA4", Offset = "0x1038FA4", VA = "0x1038FA4")]
	public void unlockUIElement()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x1039018", Offset = "0x1039018", VA = "0x1039018")]
	public void changeColorBrightness(bool on)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x1039454", Offset = "0x1039454", VA = "0x1039454")]
	public void setColorRed()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x103A118", Offset = "0x103A118", VA = "0x103A118")]
	public void setColorGreen()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x103A29C", Offset = "0x103A29C", VA = "0x103A29C")]
	public void setColorBlue()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x103A420", Offset = "0x103A420", VA = "0x103A420")]
	public void setColorWhite()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x103A5A4", Offset = "0x103A5A4", VA = "0x103A5A4")]
	public void setColorBlack()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x103A728", Offset = "0x103A728", VA = "0x103A728")]
	public void showOptionsButton()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x103A744", Offset = "0x103A744", VA = "0x103A744")]
	public void hideOptionsButton()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x103A7C8", Offset = "0x103A7C8", VA = "0x103A7C8")]
	public void showMenu()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x1039FE8", Offset = "0x1039FE8", VA = "0x1039FE8")]
	public void disableMenu()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x103A848", Offset = "0x103A848", VA = "0x103A848")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABDB0C", Offset = "0xABDB0C")]
	private IEnumerator turnofftemporarily(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x103A8C4", Offset = "0x103A8C4", VA = "0x103A8C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABDB6C", Offset = "0xABDB6C")]
	private IEnumerator turnontemporarily(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x103A940", Offset = "0x103A940", VA = "0x103A940")]
	public void setInversion()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x103A950", Offset = "0x103A950", VA = "0x103A950")]
	public Sender()
	{
	}
}
[Token(Token = "0x20002D5")]
public class Sensor : Sender
{
	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool currentlyActivated;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float sensorTimer;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public LevelManager levelManager;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public NewGameManager gameManager;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float prevSensorTimer;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float distance;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float time;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TextMeshPro displayText;

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x103A958", Offset = "0x103A958", VA = "0x103A958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x103AC34", Offset = "0x103AC34", VA = "0x103AC34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x103AE48", Offset = "0x103AE48", VA = "0x103AE48")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x103B104", Offset = "0x103B104", VA = "0x103B104")]
	public Sensor()
	{
	}
}
[Token(Token = "0x20002D6")]
public class SensorManagerObject : MonoBehaviour
{
	[Token(Token = "0x20002D7")]
	public enum LampColors
	{
		[Token(Token = "0x40012EF")]
		red,
		[Token(Token = "0x40012F0")]
		green,
		[Token(Token = "0x40012F1")]
		blue,
		[Token(Token = "0x40012F2")]
		magenta,
		[Token(Token = "0x40012F3")]
		yellow,
		[Token(Token = "0x40012F4")]
		cyan,
		[Token(Token = "0x40012F5")]
		white,
		[Token(Token = "0x40012F6")]
		black
	}

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material redLampMap;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material greenLampMap;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material blueLampMap;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material yellowLampMap;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material magentaLampMap;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material cyanLampMap;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material whiteLampMap;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material redLampMap_off;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material greenLampMap_off;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material blueLampMap_off;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material yellowLampMap_off;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material magentaLampMap_off;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material cyanLampMap_off;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material whiteLampMap_off;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int roiSquared;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MeshRenderer in_red;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MeshRenderer in_green;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public MeshRenderer in_blue;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MeshRenderer out_red;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MeshRenderer out_green;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MeshRenderer out_blue;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MeshRenderer out_yellow;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public MeshRenderer out_magenta;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public MeshRenderer out_cyan;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public MeshRenderer out_white;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite lockSprite;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public PartsWatcher partsWatcher;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public LevelManager levelManager;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public VF_UIELement selectionButton;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public VR_UI_ElementHolder colorButtons;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GrabbableObject grabbableObject;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int redSignals;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int greenSignals;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int blueSignals;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public int whiteSignals;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject roiSphere;

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x103B114", Offset = "0x103B114", VA = "0x103B114")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x103B118", Offset = "0x103B118", VA = "0x103B118")]
	public void resetSignals()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x103B554", Offset = "0x103B554", VA = "0x103B554")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x103B6B0", Offset = "0x103B6B0", VA = "0x103B6B0")]
	public void lockUIElement()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x103B808", Offset = "0x103B808", VA = "0x103B808")]
	public void showOptionsButton()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x103B824", Offset = "0x103B824", VA = "0x103B824")]
	public void showMenu()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x103B968", Offset = "0x103B968", VA = "0x103B968")]
	public void setROIsize(int r)
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x103B61C", Offset = "0x103B61C", VA = "0x103B61C")]
	public void disableMenu()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x103B334", Offset = "0x103B334", VA = "0x103B334")]
	private void setColorsForManager()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x10395D4", Offset = "0x10395D4", VA = "0x10395D4")]
	public void sendColorSignal(LampColors color, bool onoffstate)
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x103BA3C", Offset = "0x103BA3C", VA = "0x103BA3C")]
	public void hideOptionsButton()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x103BAC0", Offset = "0x103BAC0", VA = "0x103BAC0")]
	public SensorManagerObject()
	{
	}
}
[Token(Token = "0x20002D8")]
public class SetOVRSpecifics : MonoBehaviour
{
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA70BC", Offset = "0xAA70BC")]
	private sealed class <setSettings>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000143")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0xE67C1C", Offset = "0xE67C1C", VA = "0xE67C1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0xE67C64", Offset = "0xE67C64", VA = "0xE67C64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xE67B10", Offset = "0xE67B10", VA = "0xE67B10")]
		[DebuggerHidden]
		public <setSettings>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xE67B3C", Offset = "0xE67B3C", VA = "0xE67B3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xE67B40", Offset = "0xE67B40", VA = "0xE67B40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xE67C24", Offset = "0xE67C24", VA = "0xE67C24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x103C0F8", Offset = "0x103C0F8", VA = "0x103C0F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x103C124", Offset = "0x103C124", VA = "0x103C124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABDC6C", Offset = "0xABDC6C")]
	private IEnumerator setSettings()
	{
		return null;
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x103C180", Offset = "0x103C180", VA = "0x103C180")]
	public SetOVRSpecifics()
	{
	}
}
[Token(Token = "0x20002DA")]
public class SetPosAtStartup : MonoBehaviour
{
	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x103C188", Offset = "0x103C188", VA = "0x103C188")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x103C1D4", Offset = "0x103C1D4", VA = "0x103C1D4")]
	public SetPosAtStartup()
	{
	}
}
[Token(Token = "0x20002DB")]
public class SettingsChooser : MonoBehaviour
{
	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA70CC", Offset = "0xAA70CC")]
	private sealed class <Example2>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0xE67D4C", Offset = "0xE67D4C", VA = "0xE67D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0xE67D94", Offset = "0xE67D94", VA = "0xE67D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xE67C6C", Offset = "0xE67C6C", VA = "0xE67C6C")]
		[DebuggerHidden]
		public <Example2>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xE67C98", Offset = "0xE67C98", VA = "0xE67C98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xE67C9C", Offset = "0xE67C9C", VA = "0xE67C9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xE67D54", Offset = "0xE67D54", VA = "0xE67D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FadeSphere[] fadeSpheres;

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x103C1DC", Offset = "0x103C1DC", VA = "0x103C1DC")]
	public void saveQualitySettings(int quality)
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x103C5FC", Offset = "0x103C5FC", VA = "0x103C5FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABDD1C", Offset = "0xABDD1C")]
	private IEnumerator Example2()
	{
		return null;
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x103C658", Offset = "0x103C658", VA = "0x103C658")]
	public SettingsChooser()
	{
	}
}
[Token(Token = "0x20002DD")]
public class SettingsManager : MonoBehaviour
{
	[Token(Token = "0x20002DE")]
	public enum MovementType
	{
		[Token(Token = "0x400134C")]
		teleport,
		[Token(Token = "0x400134D")]
		teleport_zoom,
		[Token(Token = "0x400134E")]
		smooth_HO_slow,
		[Token(Token = "0x400134F")]
		smooth_CO_slow,
		[Token(Token = "0x4001350")]
		smooth_HO_fast,
		[Token(Token = "0x4001351")]
		smooth_CO_fast,
		[Token(Token = "0x4001352")]
		armswing,
		[Token(Token = "0x4001353")]
		worldgrab,
		[Token(Token = "0x4001354")]
		cloudstep,
		[Token(Token = "0x4001355")]
		freeY
	}

	[Token(Token = "0x20002DF")]
	public enum TurnType
	{
		[Token(Token = "0x4001357")]
		snap15,
		[Token(Token = "0x4001358")]
		snap30,
		[Token(Token = "0x4001359")]
		snap45,
		[Token(Token = "0x400135A")]
		snap90,
		[Token(Token = "0x400135B")]
		smooth_slow,
		[Token(Token = "0x400135C")]
		smooth_fast
	}

	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA70DC", Offset = "0xAA70DC")]
	private sealed class <updateSettingsNextFrame>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingsManager <>4__this;

		[Token(Token = "0x17000147")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0xE67E6C", Offset = "0xE67E6C", VA = "0xE67E6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0xE67EB4", Offset = "0xE67EB4", VA = "0xE67EB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xE67D9C", Offset = "0xE67D9C", VA = "0xE67D9C")]
		[DebuggerHidden]
		public <updateSettingsNextFrame>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xE67DC8", Offset = "0xE67DC8", VA = "0xE67DC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xE67DCC", Offset = "0xE67DCC", VA = "0xE67DCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xE67E74", Offset = "0xE67E74", VA = "0xE67E74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA70EC", Offset = "0xAA70EC")]
	private sealed class <>c__124<T>
	{
		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__124<T> <>9;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<GameObject, IEnumerable<T>> <>9__124_0;

		[Token(Token = "0x6000EAC")]
		public <>c__124()
		{
		}

		[Token(Token = "0x6000EAD")]
		internal IEnumerable<T> <FindObjectsOfTypeAll>b__124_0(GameObject g)
		{
			return null;
		}
	}

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig oVRCameraRig;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hiddenOptions;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAC684", Offset = "0xAAC684")]
	public MovementType movementType;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TurnType turnType;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool vignetting;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro movementTypeText;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro movementTypeDescription;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro turnTypeText;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro turnTypeDescription;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro vignettingText;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro vignettingDescription;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TunnellingMobile[] tunellingScripts;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAC6BC", Offset = "0xAAC6BC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAAC6BC", Offset = "0xAAC6BC")]
	public int msaa;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float renderScale;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool alwaysRenderEntireBase;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool fxaa;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool bloom;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int ffr;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool flatMaterials;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool ambientocclusion;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool lights;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	public bool ctaa;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int qualitylevel;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int fpsTarget;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshPro currentFPSText;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro msaaText;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro forceSimpleMaterialsText;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro lightsText;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro renderScaleText;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshPro ffrText;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro renderBaseText;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshPro fxaaText;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshPro bloomText;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro aoText;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshPro qualityLevelText;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshPro ctaaText2;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public PostProcessVolume ppVolume;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public PostProcessLayer[] fxaaCams;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public CTAAVR_SPS[] ctaaScripts;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAAC710", Offset = "0xAAC710")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAC710", Offset = "0xAAC710")]
	public bool touchybuttons;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	public bool submitscores;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	public bool forceTutorial;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
	public bool showLogo;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool menuPosOnHand;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int miniatureMode;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public bool spectatorCam;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	public bool onlineFeatures;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject logo;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public TextMeshPro buttonModeText;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TextMeshPro forceAudioIntroText;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public TextMeshPro heightOffsetText;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TextMeshPro menuposText;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public TextMeshPro miniatureText;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TextMeshPro spectatorCamText;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public TextMeshPro onlineFeaturesText;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshPro unlockLevelsText;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject spectatorCamGO;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshPro passthroughText;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public TextMeshPro forcePassthroughText;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject simulatedEnvironentGO;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool simulatedEnvironent;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	public bool forcePasstrough;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public int overrideLanguage;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xAAC764", Offset = "0xAAC764")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAC764", Offset = "0xAAC764")]
	public Material[] materials;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Transform cameraHolder;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform[] cameras;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Transform[] controllers;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Transform uiHolder;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject[] playPlatforms;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject environmentHolder;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float frequency;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private int nbDecimal;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float accum;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private int frames;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Color color;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public string sFPS;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float heightOffset;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public float heightOffset_miniature;

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x103C660", Offset = "0x103C660", VA = "0x103C660")]
	public void UpdateRenderScaleBasedOnItemNumber(int itemCount)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x103C6F8", Offset = "0x103C6F8", VA = "0x103C6F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x103CD7C", Offset = "0x103CD7C", VA = "0x103CD7C")]
	private void FPS()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x103CE74", Offset = "0x103CE74", VA = "0x103CE74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x103EA04", Offset = "0x103EA04", VA = "0x103EA04")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x103C758", Offset = "0x103C758", VA = "0x103C758")]
	public void ReadSettings()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x103EED0", Offset = "0x103EED0", VA = "0x103EED0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABDDCC", Offset = "0xABDDCC")]
	private IEnumerator updateSettingsNextFrame()
	{
		return null;
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x1041844", Offset = "0x1041844", VA = "0x1041844")]
	public void toggleFPSTarget()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x10418B0", Offset = "0x10418B0", VA = "0x10418B0")]
	public void resetGraphicsSettings()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x1041AF4", Offset = "0x1041AF4", VA = "0x1041AF4")]
	public void AcceptOnlineFeatures()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x1041B68", Offset = "0x1041B68", VA = "0x1041B68")]
	public void UnlockAll()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x1041BEC", Offset = "0x1041BEC", VA = "0x1041BEC")]
	public void toggleMovement()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x1041CDC", Offset = "0x1041CDC", VA = "0x1041CDC")]
	public void toggleTurning()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x1041DCC", Offset = "0x1041DCC", VA = "0x1041DCC")]
	public void toggleVignetting()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x1041DDC", Offset = "0x1041DDC", VA = "0x1041DDC")]
	public void togglePassthroughMode()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x1041DEC", Offset = "0x1041DEC", VA = "0x1041DEC")]
	public void toggleForcePassthrough()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x1041DFC", Offset = "0x1041DFC", VA = "0x1041DFC")]
	public void toggleButtonMode()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x1041E0C", Offset = "0x1041E0C", VA = "0x1041E0C")]
	public void setButtonModetoTouchy(bool touchy)
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x1041E18", Offset = "0x1041E18", VA = "0x1041E18")]
	public void toggleOnlineFeatures()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x1041E28", Offset = "0x1041E28", VA = "0x1041E28")]
	public void toggleQualityUp()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x1041E74", Offset = "0x1041E74", VA = "0x1041E74")]
	public void toggleQualityDown()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x1041EC0", Offset = "0x1041EC0", VA = "0x1041EC0")]
	public void toggleMSAA()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x1041F1C", Offset = "0x1041F1C", VA = "0x1041F1C")]
	public void toggleFFR()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x1041F4C", Offset = "0x1041F4C", VA = "0x1041F4C")]
	public void toggleSpectatorCam()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x1041F5C", Offset = "0x1041F5C", VA = "0x1041F5C")]
	public void toggleMenuPos()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x1041F6C", Offset = "0x1041F6C", VA = "0x1041F6C")]
	public void toggleSimpleMaterials()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x1041F7C", Offset = "0x1041F7C", VA = "0x1041F7C")]
	public void toggleLights()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x1041F8C", Offset = "0x1041F8C", VA = "0x1041F8C")]
	public void toggleMiniatureMode()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x104203C", Offset = "0x104203C", VA = "0x104203C")]
	public void toggleBase()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x104204C", Offset = "0x104204C", VA = "0x104204C")]
	public void toggleIntro()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x104205C", Offset = "0x104205C", VA = "0x104205C")]
	public void toggleLogo()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x104206C", Offset = "0x104206C", VA = "0x104206C")]
	public void toggleScores()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x104207C", Offset = "0x104207C", VA = "0x104207C")]
	public void toggleCTAA()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x1042080", Offset = "0x1042080", VA = "0x1042080")]
	public void toggleCTAA2()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x1042090", Offset = "0x1042090", VA = "0x1042090")]
	public void toggleFXAA()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x10420A0", Offset = "0x10420A0", VA = "0x10420A0")]
	public void toggleBloom()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x10420BC", Offset = "0x10420BC", VA = "0x10420BC")]
	public void toggleAO()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x10420CC", Offset = "0x10420CC", VA = "0x10420CC")]
	public void IncreaseRenderscale()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x10420E4", Offset = "0x10420E4", VA = "0x10420E4")]
	public void DecreaseRenderscale()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x1042110", Offset = "0x1042110", VA = "0x1042110")]
	public void IncreaseHeightOffset()
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x1042334", Offset = "0x1042334", VA = "0x1042334")]
	public void DecreaseHeightOffset()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x1042558", Offset = "0x1042558", VA = "0x1042558")]
	public void toggleLanguage()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x103EF3C", Offset = "0x103EF3C", VA = "0x103EF3C")]
	public void UpdateSettings()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x103CF28", Offset = "0x103CF28", VA = "0x103CF28")]
	public void UpdateUI()
	{
	}

	[Token(Token = "0x6000EA3")]
	public static List<T> FindObjectsOfTypeAll<T>()
	{
		return null;
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x1042574", Offset = "0x1042574", VA = "0x1042574")]
	public SettingsManager()
	{
	}
}
[Token(Token = "0x20002E2")]
public class ShadowCaster : MonoBehaviour
{
	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLight;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light pointLightToMirror;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject shadow;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask mask;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAC7B8", Offset = "0xAAC7B8")]
	public float fadeoutDistance;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float floorMargin;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool alignWithNormal;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float marginFromCenter;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer shadowRenderer;

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x104357C", Offset = "0x104357C", VA = "0x104357C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x10435D8", Offset = "0x10435D8", VA = "0x10435D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x1043A5C", Offset = "0x1043A5C", VA = "0x1043A5C")]
	public ShadowCaster()
	{
	}
}
[Token(Token = "0x20002E3")]
public class ShowBasedOnInput : MonoBehaviour
{
	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FindDeviceType.InputDevice inputDevice;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public FindDeviceType.InputDevice detectedDevice;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool triggered;

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x1043F9C", Offset = "0x1043F9C", VA = "0x1043F9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x1043FA0", Offset = "0x1043FA0", VA = "0x1043FA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x1043FAC", Offset = "0x1043FAC", VA = "0x1043FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x1044048", Offset = "0x1044048", VA = "0x1044048")]
	public ShowBasedOnInput()
	{
	}
}
[Token(Token = "0x20002E4")]
public class ShowBasedOnPlayerPref : MonoBehaviour
{
	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA70FC", Offset = "0xAA70FC")]
	private sealed class <waitforoneframe>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShowBasedOnPlayerPref <>4__this;

		[Token(Token = "0x17000149")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0xE680C4", Offset = "0xE680C4", VA = "0xE680C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0xE6810C", Offset = "0xE6810C", VA = "0xE6810C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xE67FBC", Offset = "0xE67FBC", VA = "0xE67FBC")]
		[DebuggerHidden]
		public <waitforoneframe>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xE67FE8", Offset = "0xE67FE8", VA = "0xE67FE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xE67FEC", Offset = "0xE67FEC", VA = "0xE67FEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xE680CC", Offset = "0xE680CC", VA = "0xE680CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string desiredValue;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string defaultValue;

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x1044050", Offset = "0x1044050", VA = "0x1044050")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x10440B8", Offset = "0x10440B8", VA = "0x10440B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABDE7C", Offset = "0xABDE7C")]
	private IEnumerator waitforoneframe()
	{
		return null;
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x1044124", Offset = "0x1044124", VA = "0x1044124")]
	public ShowBasedOnPlayerPref()
	{
	}
}
[Token(Token = "0x20002E6")]
public class ShowHiddenGraphicsOption : MonoBehaviour
{
	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode keyCode;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VF_UIELement[] uiElements;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SettingsManager settingsManager;

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x10442C0", Offset = "0x10442C0", VA = "0x10442C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x1044338", Offset = "0x1044338", VA = "0x1044338")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x10443B8", Offset = "0x10443B8", VA = "0x10443B8")]
	public ShowHiddenGraphicsOption()
	{
	}
}
[Token(Token = "0x20002E7")]
public class SignalGenerator : Sender
{
	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float timeSinceLastTick;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform spinner;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool running;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float timePerTick;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public LevelManager levelManager;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Sprite originalSprite;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Vector3 startRot;

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x1044664", Offset = "0x1044664", VA = "0x1044664")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x10448A0", Offset = "0x10448A0", VA = "0x10448A0")]
	public void inputSignal(bool v)
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x1044860", Offset = "0x1044860", VA = "0x1044860")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x1044A3C", Offset = "0x1044A3C", VA = "0x1044A3C")]
	public void setClockRate(float rate)
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x1044AB0", Offset = "0x1044AB0", VA = "0x1044AB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x1044B24", Offset = "0x1044B24", VA = "0x1044B24")]
	public SignalGenerator()
	{
	}
}
[Token(Token = "0x20002E8")]
public class LivingParticleArrayController : MonoBehaviour
{
	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] affectors;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4[] positions;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystemRenderer psr;

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x24E25B4", Offset = "0x24E25B4", VA = "0x24E25B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x24E2668", Offset = "0x24E2668", VA = "0x24E2668")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x24E2828", Offset = "0x24E2828", VA = "0x24E2828")]
	public LivingParticleArrayController()
	{
	}
}
[Token(Token = "0x20002E9")]
public class LivingParticleController : MonoBehaviour
{
	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform affector;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystemRenderer psr;

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x24E2830", Offset = "0x24E2830", VA = "0x24E2830")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x24E2884", Offset = "0x24E2884", VA = "0x24E2884")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x24E290C", Offset = "0x24E290C", VA = "0x24E290C")]
	public LivingParticleController()
	{
	}
}
[Token(Token = "0x20002EA")]
public class ParticleGridGenerator : MonoBehaviour
{
	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float particleSize;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color particleColor;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool randomColorAlpha;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float xDistance;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float yDistance;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float zDistance;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int xSize;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int ySize;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int zSize;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float OffsetEven;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool updateEveryFrame;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool circular;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float even;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> positions;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem ps;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector4> customData;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Vector4> customData2;

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xCC9808", Offset = "0xCC9808", VA = "0xCC9808")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xCC9980", Offset = "0xCC9980", VA = "0xCC9980")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xCC9860", Offset = "0xCC9860", VA = "0xCC9860")]
	public void UpdateGrid()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xCC99D8", Offset = "0xCC99D8", VA = "0xCC99D8")]
	private void GenerateGrid()
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xCC9BC4", Offset = "0xCC9BC4", VA = "0xCC9BC4")]
	private void GenerateParticles()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xCC9D6C", Offset = "0xCC9D6C", VA = "0xCC9D6C")]
	private void CreateOffsetVector()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xCC9E54", Offset = "0xCC9E54", VA = "0xCC9E54")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xCC9E64", Offset = "0xCC9E64", VA = "0xCC9E64")]
	public ParticleGridGenerator()
	{
	}
}
[Token(Token = "0x20002EB")]
public class SuperSimpleMovement : MonoBehaviour
{
	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float movementSpeed;

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xF02DEC", Offset = "0xF02DEC", VA = "0xF02DEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xF02DF0", Offset = "0xF02DF0", VA = "0xF02DF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xF02ECC", Offset = "0xF02ECC", VA = "0xF02ECC")]
	public SuperSimpleMovement()
	{
	}
}
[Token(Token = "0x20002EC")]
public class UIController : MonoBehaviour
{
	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light directionalLight;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material daySkyboxMaterial;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material nightSkyboxMaterial;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform prefabHolder;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text text;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform[] prefabs;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Transform> lt;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int activeNumber;

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x12B700C", Offset = "0x12B700C", VA = "0x12B700C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x12B71B8", Offset = "0x12B71B8", VA = "0x12B71B8")]
	public void EnableActive()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x12B729C", Offset = "0x12B729C", VA = "0x12B729C")]
	public void ChangeEffect(bool bo)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x12B72FC", Offset = "0x12B72FC", VA = "0x12B72FC")]
	public void SetDay()
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x12B7348", Offset = "0x12B7348", VA = "0x12B7348")]
	public void SetNight()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x12B7394", Offset = "0x12B7394", VA = "0x12B7394")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x12B7420", Offset = "0x12B7420", VA = "0x12B7420")]
	public UIController()
	{
	}
}
[Token(Token = "0x20002ED")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA710C", Offset = "0xAA710C")]
public class ParticleSeekOptimized : MonoBehaviour
{
	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float force;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule particleSystemMainModule;

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xCCB120", Offset = "0xCCB120", VA = "0xCCB120")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xCCB188", Offset = "0xCCB188", VA = "0xCCB188")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xCCB4D8", Offset = "0xCCB4D8", VA = "0xCCB4D8")]
	public ParticleSeekOptimized()
	{
	}
}
[Token(Token = "0x20002EE")]
public class AppControl : MonoBehaviour
{
	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float wzoom;

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x134606C", Offset = "0x134606C", VA = "0x134606C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x1346090", Offset = "0x1346090", VA = "0x1346090")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x1346180", Offset = "0x1346180", VA = "0x1346180")]
	public AppControl()
	{
	}
}
[Token(Token = "0x20002EF")]
public class SignAnimationController : MonoBehaviour
{
	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAC7D0", Offset = "0xAAC7D0")]
	public float currentPhase;

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x1044400", Offset = "0x1044400", VA = "0x1044400")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x10445B8", Offset = "0x10445B8", VA = "0x10445B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x104465C", Offset = "0x104465C", VA = "0x104465C")]
	public SignAnimationController()
	{
	}
}
[Token(Token = "0x20002F0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA716C", Offset = "0xAA716C")]
public class SmoothMouseLook : MonoBehaviour
{
	[Token(Token = "0x20002F1")]
	public enum Axises
	{
		[Token(Token = "0x40013C4")]
		X,
		[Token(Token = "0x40013C5")]
		Y,
		[Token(Token = "0x40013C6")]
		XandY
	}

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Axises axis;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float xSensitivity;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ySensitivity;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float zSway;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useWalk;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float jjj;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float walkSpeed;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float walkTilt;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool canSprint;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float xCurrent;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float yCurrent;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float zCurrent;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float xWant;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float yWant;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float zWant;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float smoothing;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minX;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxX;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float minY;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float maxY;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float minZ;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxZ;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float leanTilt;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool lockMouse;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool dependOnCursorLock;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	private bool lockingMouse;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
	public bool useLean;

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xEF6EB0", Offset = "0xEF6EB0", VA = "0xEF6EB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xEF6F2C", Offset = "0xEF6F2C", VA = "0xEF6F2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xEF731C", Offset = "0xEF731C", VA = "0xEF731C")]
	private void MouseLock()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xEF73B4", Offset = "0xEF73B4", VA = "0xEF73B4")]
	private void AddWalk()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xEF7444", Offset = "0xEF7444", VA = "0xEF7444")]
	public SmoothMouseLook()
	{
	}
}
[Token(Token = "0x20002F2")]
public class SizzleAudio : MonoBehaviour
{
	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource AS;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] sizzleClips;

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xEF6310", Offset = "0xEF6310", VA = "0xEF6310")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xEF6390", Offset = "0xEF6390", VA = "0xEF6390")]
	public SizzleAudio()
	{
	}
}
[Token(Token = "0x20002F3")]
public class SpawnableCamera : MonoBehaviour
{
	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA71A4", Offset = "0xAA71A4")]
	private sealed class <DisableToast>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpawnableCamera <>4__this;

		[Token(Token = "0x1700014B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0xE68548", Offset = "0xE68548", VA = "0xE68548", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0xE68590", Offset = "0xE68590", VA = "0xE68590", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xE68460", Offset = "0xE68460", VA = "0xE68460")]
		[DebuggerHidden]
		public <DisableToast>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xE6848C", Offset = "0xE6848C", VA = "0xE6848C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xE68490", Offset = "0xE68490", VA = "0xE68490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xE68550", Offset = "0xE68550", VA = "0xE68550", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA71B4", Offset = "0xAA71B4")]
	private sealed class <WaitAndPrint>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnableCamera <>4__this;

		[Token(Token = "0x1700014D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0xE68B3C", Offset = "0xE68B3C", VA = "0xE68B3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0xE68B84", Offset = "0xE68B84", VA = "0xE68B84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xE68A68", Offset = "0xE68A68", VA = "0xE68A68")]
		[DebuggerHidden]
		public <WaitAndPrint>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xE68A94", Offset = "0xE68A94", VA = "0xE68A94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xE68A98", Offset = "0xE68A98", VA = "0xE68A98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xE68B44", Offset = "0xE68B44", VA = "0xE68B44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA71C4", Offset = "0xAA71C4")]
	private sealed class <TakeScreenShot>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnableCamera <>4__this;

		[Token(Token = "0x1700014F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0xE68A18", Offset = "0xE68A18", VA = "0xE68A18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0xE68A60", Offset = "0xE68A60", VA = "0xE68A60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xE68598", Offset = "0xE68598", VA = "0xE68598")]
		[DebuggerHidden]
		public <TakeScreenShot>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xE685C4", Offset = "0xE685C4", VA = "0xE685C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xE685C8", Offset = "0xE685C8", VA = "0xE685C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xE68A20", Offset = "0xE68A20", VA = "0xE68A20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture overviewTexture;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer quad;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera OVcamera;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string path;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string twitterhandle;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro twitterNameDisplay;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VR_UI_ElementHolder twitterWidget;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VR_UI_ElementHolder actionButtons;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VR_UI_ElementHolder shutterbutton;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VF_UIELement toast;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro toastText;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isPicture;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float playbackTimer;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float updateTimer;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float updateInterval;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Recorder recorder;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isrecording;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float m_Progress;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string m_LastFile;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool m_IsSaving;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool waitingforfinishbeforetweet;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RenderTexture[] frames;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool playRecording;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int currentPlaybackFrame;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool savingdone;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private byte[] bytes;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool flipped;

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xEFC10C", Offset = "0xEFC10C", VA = "0xEFC10C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABDF2C", Offset = "0xABDF2C")]
	private IEnumerator DisableToast(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xEFC188", Offset = "0xEFC188", VA = "0xEFC188")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xEFC368", Offset = "0xEFC368", VA = "0xEFC368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABDF8C", Offset = "0xABDF8C")]
	private IEnumerator WaitAndPrint()
	{
		return null;
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xEFC3D4", Offset = "0xEFC3D4", VA = "0xEFC3D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xEFC4E4", Offset = "0xEFC4E4", VA = "0xEFC4E4")]
	private void MyFixedUpdate()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xEFC6A8", Offset = "0xEFC6A8", VA = "0xEFC6A8")]
	public void Shutter()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xEFC574", Offset = "0xEFC574", VA = "0xEFC574")]
	public void Record()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xEFC740", Offset = "0xEFC740", VA = "0xEFC740")]
	public void extractFramesFromRecorder()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xEFC7B0", Offset = "0xEFC7B0", VA = "0xEFC7B0")]
	private void OnProcessingDone()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xEFC7BC", Offset = "0xEFC7BC", VA = "0xEFC7BC")]
	private void OnFileSaveProgress(int id, float percent)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xEFC7D0", Offset = "0xEFC7D0", VA = "0xEFC7D0")]
	private void OnFileSaved(int id, string filepath)
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xEFC7E4", Offset = "0xEFC7E4", VA = "0xEFC7E4")]
	public void showTwitterWidget()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xEFC8C4", Offset = "0xEFC8C4", VA = "0xEFC8C4")]
	private string fileName(int width, int height)
	{
		return null;
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xEFC978", Offset = "0xEFC978", VA = "0xEFC978")]
	public void saveFile()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xEFCC30", Offset = "0xEFCC30", VA = "0xEFCC30")]
	public void EnterLetter(string s)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xEFCCE8", Offset = "0xEFCCE8", VA = "0xEFCCE8")]
	public void DeleteLetter()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xEFCDB0", Offset = "0xEFCDB0", VA = "0xEFCDB0")]
	public void swapCamera()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xEFC314", Offset = "0xEFC314", VA = "0xEFC314")]
	public void retakePicture()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xEFCE68", Offset = "0xEFCE68", VA = "0xEFCE68")]
	public void closeTwitterWidget()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xEFCEB4", Offset = "0xEFCEB4", VA = "0xEFCEB4")]
	public void Tweet()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xEFCF68", Offset = "0xEFCF68", VA = "0xEFCF68")]
	public void SendTweet()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xEFD594", Offset = "0xEFD594", VA = "0xEFD594")]
	public void showToast(string s)
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xEFC648", Offset = "0xEFC648", VA = "0xEFC648")]
	public void ShowToast(string s)
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xEFCBEC", Offset = "0xEFCBEC", VA = "0xEFCBEC")]
	public void ShowPermanentToast(string s)
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xEFCDFC", Offset = "0xEFCDFC", VA = "0xEFCDFC")]
	public void restartCamera()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xEFC6D4", Offset = "0xEFC6D4", VA = "0xEFC6D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABDFEC", Offset = "0xABDFEC")]
	public IEnumerator TakeScreenShot()
	{
		return null;
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xEFD598", Offset = "0xEFD598", VA = "0xEFD598")]
	public SpawnableCamera()
	{
	}
}
[Token(Token = "0x20002F7")]
public class SpawnableObject : MonoBehaviour
{
	[Token(Token = "0x20002F8")]
	public enum SpawnTypes
	{
		[Token(Token = "0x4001400")]
		board_yellow,
		[Token(Token = "0x4001401")]
		tube_yellow,
		[Token(Token = "0x4001402")]
		planet_yellow,
		[Token(Token = "0x4001403")]
		board_purple,
		[Token(Token = "0x4001404")]
		tube_purple,
		[Token(Token = "0x4001405")]
		planet_purple
	}

	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA71D4", Offset = "0xAA71D4")]
	private sealed class <BlockElement>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpawnableObject <>4__this;

		[Token(Token = "0x17000151")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0xE68C70", Offset = "0xE68C70", VA = "0xE68C70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0xE68CB8", Offset = "0xE68CB8", VA = "0xE68CB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xE68B8C", Offset = "0xE68B8C", VA = "0xE68B8C")]
		[DebuggerHidden]
		public <BlockElement>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xE68BB8", Offset = "0xE68BB8", VA = "0xE68BB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xE68BBC", Offset = "0xE68BBC", VA = "0xE68BBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xE68C78", Offset = "0xE68C78", VA = "0xE68C78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isInteractive;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxObjects;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentObjects;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform holder;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool validEntry;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool blocked;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text spawnText;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject boardPrefab_Yellow;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject tubePrefab_Yellow;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject planetPrefab_Yellow;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject boardPrefab_Purple;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject tubePrefab_Purple;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject planetPrefab_Purple;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject lastEnteredController;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HandController lastEnteredControllerScript;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool spawnedObject;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public SpawnTypes spawnType;

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xEFD5FC", Offset = "0xEFD5FC", VA = "0xEFD5FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABE13C", Offset = "0xABE13C")]
	private IEnumerator BlockElement(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xEFD678", Offset = "0xEFD678", VA = "0xEFD678")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xEFD714", Offset = "0xEFD714", VA = "0xEFD714")]
	public void reduceNumber()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xEFD7BC", Offset = "0xEFD7BC", VA = "0xEFD7BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xEFD918", Offset = "0xEFD918", VA = "0xEFD918")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xEFDA44", Offset = "0xEFDA44", VA = "0xEFDA44")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xEFDDF8", Offset = "0xEFDDF8", VA = "0xEFDDF8")]
	public SpawnableObject()
	{
	}
}
[Token(Token = "0x20002FA")]
public class SpawnableRadio : MonoBehaviour
{
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA71E4", Offset = "0xAA71E4")]
	private sealed class <playLocalFile>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fullpath;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpawnableRadio <>4__this;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DownloadHandlerAudioClip <downloadHandler>5__2;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <uwr>5__3;

		[Token(Token = "0x17000153")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0xE690AC", Offset = "0xE690AC", VA = "0xE690AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0xE690F4", Offset = "0xE690F4", VA = "0xE690F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xE68CC0", Offset = "0xE68CC0", VA = "0xE68CC0")]
		[DebuggerHidden]
		public <playLocalFile>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xE68CEC", Offset = "0xE68CEC", VA = "0xE68CEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xE68CF0", Offset = "0xE68CF0", VA = "0xE68CF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xE690B4", Offset = "0xE690B4", VA = "0xE690B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA71F4", Offset = "0xAA71F4")]
	private sealed class <playStationDelayed>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnableRadio <>4__this;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int i;

		[Token(Token = "0x17000155")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0xE6922C", Offset = "0xE6922C", VA = "0xE6922C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0xE69274", Offset = "0xE69274", VA = "0xE69274", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xE690FC", Offset = "0xE690FC", VA = "0xE690FC")]
		[DebuggerHidden]
		public <playStationDelayed>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xE69128", Offset = "0xE69128", VA = "0xE69128", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xE6912C", Offset = "0xE6912C", VA = "0xE6912C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xE69234", Offset = "0xE69234", VA = "0xE69234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> songs;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VR_UI_ElementHolder holder;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private INIParser ini;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] stationURLs;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro[] stationNames;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audioSource;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VR_UI_ElementHolder[] buttons;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int station;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RadioPlayer player;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro statusText;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool is3d;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int currentSong_index;

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xEFDE00", Offset = "0xEFDE00", VA = "0xEFDE00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABE1EC", Offset = "0xABE1EC")]
	private IEnumerator playLocalFile(string fullpath)
	{
		return null;
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xEFDE78", Offset = "0xEFDE78", VA = "0xEFDE78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xEFED78", Offset = "0xEFED78", VA = "0xEFED78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABE24C", Offset = "0xABE24C")]
	private IEnumerator playStationDelayed(int i)
	{
		return null;
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xEFEC68", Offset = "0xEFEC68", VA = "0xEFEC68")]
	public void changeStation(int i)
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xEFEFF8", Offset = "0xEFEFF8", VA = "0xEFEFF8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xEFF1C8", Offset = "0xEFF1C8", VA = "0xEFF1C8")]
	public void playNext()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xEFF354", Offset = "0xEFF354", VA = "0xEFF354")]
	public void toggle2d3d()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xEFF3E4", Offset = "0xEFF3E4", VA = "0xEFF3E4")]
	public void copyMusic()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xEFFE20", Offset = "0xEFFE20", VA = "0xEFFE20")]
	private void LoadSongList()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xEFEDF4", Offset = "0xEFEDF4", VA = "0xEFEDF4")]
	private void LoadSongs()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xEFF200", Offset = "0xEFF200", VA = "0xEFF200")]
	private string getNextSong()
	{
		return null;
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xF004C4", Offset = "0xF004C4", VA = "0xF004C4")]
	private string getCurrentSong()
	{
		return null;
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xEFEED0", Offset = "0xEFEED0", VA = "0xEFEED0")]
	private string getRandomSong()
	{
		return null;
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xF005C4", Offset = "0xF005C4", VA = "0xF005C4")]
	public SpawnableRadio()
	{
	}
}
[Token(Token = "0x20002FD")]
public class SpawnerManager : MonoBehaviour
{
	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject accPlateYellow;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject accPlatePurple;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject accTubeYellow;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject accTubePurple;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject planetYellow;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject planetPurple;

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xF00644", Offset = "0xF00644", VA = "0xF00644")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xF00660", Offset = "0xF00660", VA = "0xF00660")]
	public void enableSpawners(bool b1, bool b2, bool b3, bool b4, bool b5, bool b6)
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xF00718", Offset = "0xF00718", VA = "0xF00718")]
	public SpawnerManager()
	{
	}
}
[Token(Token = "0x20002FE")]
public class SpectatorView : MonoBehaviour
{
	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform camTransfrom;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotSpeed;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float posSpeed;

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xF00720", Offset = "0xF00720", VA = "0xF00720")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xF00724", Offset = "0xF00724", VA = "0xF00724")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xF009D0", Offset = "0xF009D0", VA = "0xF009D0")]
	public SpectatorView()
	{
	}
}
[Token(Token = "0x20002FF")]
public class SpeechManager : MonoBehaviour
{
	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, Action> keywords;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VF_UIELement runsolutionbutton;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VF_UIELement stopsolutionbutton;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VF_UIELement resetballsbutton;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VF_UIELement saveprogressbutton;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VF_UIELement loadprogressbutton;

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xF009E0", Offset = "0xF009E0", VA = "0xF009E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xF00C28", Offset = "0xF00C28", VA = "0xF00C28")]
	public SpeechManager()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xF00CA0", Offset = "0xF00CA0", VA = "0xF00CA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABE34C", Offset = "0xABE34C")]
	private void <Start>b__6_0()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xF00D18", Offset = "0xF00D18", VA = "0xF00D18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABE35C", Offset = "0xABE35C")]
	private void <Start>b__6_1()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xF00D90", Offset = "0xF00D90", VA = "0xF00D90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABE36C", Offset = "0xABE36C")]
	private void <Start>b__6_2()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xF00E08", Offset = "0xF00E08", VA = "0xF00E08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABE37C", Offset = "0xABE37C")]
	private void <Start>b__6_3()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xF00E80", Offset = "0xF00E80", VA = "0xF00E80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABE38C", Offset = "0xABE38C")]
	private void <Start>b__6_4()
	{
	}
}
[Token(Token = "0x2000300")]
public class Spinner : Receiver
{
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7204", Offset = "0xAA7204")]
	private sealed class <unblock>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Spinner <>4__this;

		[Token(Token = "0x17000157")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0xE69354", Offset = "0xE69354", VA = "0xE69354", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0xE6939C", Offset = "0xE6939C", VA = "0xE6939C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xE6927C", Offset = "0xE6927C", VA = "0xE6927C")]
		[DebuggerHidden]
		public <unblock>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xE692A8", Offset = "0xE692A8", VA = "0xE692A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xE692AC", Offset = "0xE692AC", VA = "0xE692AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xE6935C", Offset = "0xE6935C", VA = "0xE6935C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform axisObject;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool shouldMovetoNextPos;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float xrot;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float targetXRot;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public int rotations;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AudioSource audioSource;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SpinnerDocker[] sockets;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool blocked;

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xF00FA8", Offset = "0xF00FA8", VA = "0xF00FA8", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xF01008", Offset = "0xF01008", VA = "0xF01008", Slot = "5")]
	public override void ReceiverFunction()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xF01010", Offset = "0xF01010", VA = "0xF01010")]
	private void RotateNow()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xF010DC", Offset = "0xF010DC", VA = "0xF010DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xF010EC", Offset = "0xF010EC", VA = "0xF010EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABE39C", Offset = "0xABE39C")]
	private IEnumerator unblock()
	{
		return null;
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xF010A8", Offset = "0xF010A8", VA = "0xF010A8")]
	private void blockSignal()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xF01158", Offset = "0xF01158", VA = "0xF01158")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xF011F4", Offset = "0xF011F4", VA = "0xF011F4")]
	public Spinner()
	{
	}
}
[Token(Token = "0x2000302")]
public class SpinnerDocker : MonoBehaviour
{
	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7214", Offset = "0xAA7214")]
	private sealed class <unblock>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpinnerDocker <>4__this;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000159")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0xE69494", Offset = "0xE69494", VA = "0xE69494", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0xE694DC", Offset = "0xE694DC", VA = "0xE694DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xE693A4", Offset = "0xE693A4", VA = "0xE693A4")]
		[DebuggerHidden]
		public <unblock>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xE693D0", Offset = "0xE693D0", VA = "0xE693D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xE693D4", Offset = "0xE693D4", VA = "0xE693D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xE6949C", Offset = "0xE6949C", VA = "0xE6949C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasItem;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform item;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform mySpinner;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Spinner spinner;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform childObject;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material offMat;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material onMat;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer mesh;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem particles;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NewGameManager gameManager;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool delayByOneFrameAfterStartup;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool blocked;

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xF011FC", Offset = "0xF011FC", VA = "0xF011FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xF012C0", Offset = "0xF012C0", VA = "0xF012C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xF012C8", Offset = "0xF012C8", VA = "0xF012C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xF012CC", Offset = "0xF012CC", VA = "0xF012CC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xF015D0", Offset = "0xF015D0", VA = "0xF015D0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xF01564", Offset = "0xF01564", VA = "0xF01564")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABE44C", Offset = "0xABE44C")]
	private IEnumerator unblock()
	{
		return null;
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xF0173C", Offset = "0xF0173C", VA = "0xF0173C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xF01794", Offset = "0xF01794", VA = "0xF01794")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xF0183C", Offset = "0xF0183C", VA = "0xF0183C")]
	public SpinnerDocker()
	{
	}
}
[Token(Token = "0x2000304")]
public class SubwayEvents : MonoBehaviour
{
	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject button;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timer;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool landed;

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xF02D68", Offset = "0xF02D68", VA = "0xF02D68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xF02D6C", Offset = "0xF02D6C", VA = "0xF02D6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xF02DE4", Offset = "0xF02DE4", VA = "0xF02DE4")]
	public SubwayEvents()
	{
	}
}
[Token(Token = "0x2000305")]
public class SurfaceProjectionSample : MonoBehaviour
{
	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool enabledOnce;

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xF02EDC", Offset = "0xF02EDC", VA = "0xF02EDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xF02F88", Offset = "0xF02F88", VA = "0xF02F88")]
	public SurfaceProjectionSample()
	{
	}
}
[Token(Token = "0x2000306")]
public class SwitchToSceneDelayed : MonoBehaviour
{
	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7224", Offset = "0xAA7224")]
	private sealed class <Example>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SwitchToSceneDelayed <>4__this;

		[Token(Token = "0x1700015B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0xE69778", Offset = "0xE69778", VA = "0xE69778", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0xE697C0", Offset = "0xE697C0", VA = "0xE697C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xE69638", Offset = "0xE69638", VA = "0xE69638")]
		[DebuggerHidden]
		public <Example>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xE69664", Offset = "0xE69664", VA = "0xE69664", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xE69668", Offset = "0xE69668", VA = "0xE69668", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xE69780", Offset = "0xE69780", VA = "0xE69780", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7234", Offset = "0xAA7234")]
	private sealed class <Example2>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SwitchToSceneDelayed <>4__this;

		[Token(Token = "0x1700015D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0xE695E8", Offset = "0xE695E8", VA = "0xE695E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0xE69630", Offset = "0xE69630", VA = "0xE69630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xE69510", Offset = "0xE69510", VA = "0xE69510")]
		[DebuggerHidden]
		public <Example2>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xE6953C", Offset = "0xE6953C", VA = "0xE6953C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xE69540", Offset = "0xE69540", VA = "0xE69540", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xE695F0", Offset = "0xE695F0", VA = "0xE695F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sceneName;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FadeSphere[] fadeSpheres;

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xF02F90", Offset = "0xF02F90", VA = "0xF02F90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xF02FBC", Offset = "0xF02FBC", VA = "0xF02FBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABE4FC", Offset = "0xABE4FC")]
	private IEnumerator Example()
	{
		return null;
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xF03028", Offset = "0xF03028", VA = "0xF03028")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABE55C", Offset = "0xABE55C")]
	private IEnumerator Example2()
	{
		return null;
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xF03094", Offset = "0xF03094", VA = "0xF03094")]
	public SwitchToSceneDelayed()
	{
	}
}
[Token(Token = "0x2000309")]
public class Switchable_Tube : Receiver
{
	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool pumpEnabled;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject mechanicsObject;

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xF030A4", Offset = "0xF030A4", VA = "0xF030A4", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xF030AC", Offset = "0xF030AC", VA = "0xF030AC", Slot = "5")]
	public override void ReceiverFunction()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xF030E4", Offset = "0xF030E4", VA = "0xF030E4")]
	public Switchable_Tube()
	{
	}
}
[Token(Token = "0x200030A")]
public class TakeHighResScreenshot : MonoBehaviour
{
	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xF04078", Offset = "0xF04078", VA = "0xF04078")]
	public static string ScreenShotName(int width, int height)
	{
		return null;
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xF0426C", Offset = "0xF0426C", VA = "0xF0426C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xABE65C", Offset = "0xABE65C")]
	public void TakeScreenshot()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xF04498", Offset = "0xF04498", VA = "0xF04498")]
	public TakeHighResScreenshot()
	{
	}
}
[Token(Token = "0x200030B")]
public class FreeCamera : MonoBehaviour
{
	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enableInputCapture;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool holdRightMouseCapture;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lookSpeed;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sprintSpeed;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_inputCaptured;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_yaw;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_pitch;

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x13C6B2C", Offset = "0x13C6B2C", VA = "0x13C6B2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x13C6B38", Offset = "0x13C6B38", VA = "0x13C6B38")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x13C6B78", Offset = "0x13C6B78", VA = "0x13C6B78")]
	private void CaptureInput()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x13C6BF0", Offset = "0x13C6BF0", VA = "0x13C6BF0")]
	private void ReleaseInput()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x13C6C28", Offset = "0x13C6C28", VA = "0x13C6C28")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x13C6C6C", Offset = "0x13C6C6C", VA = "0x13C6C6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x13C7058", Offset = "0x13C7058", VA = "0x13C7058")]
	public FreeCamera()
	{
	}
}
[Token(Token = "0x200030C")]
public class TimeBall : MonoBehaviour
{
	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isInFuture;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isTimeClone;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isSpawnedInFuture;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TimeBall timeClone;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NewGameManager gameManager;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timer;

	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TimeBallManager timeBallManager;

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xFED5D8", Offset = "0xFED5D8", VA = "0xFED5D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xFED6B8", Offset = "0xFED6B8", VA = "0xFED6B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xFEDB38", Offset = "0xFEDB38", VA = "0xFEDB38")]
	public void makeRusty()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xFED874", Offset = "0xFED874", VA = "0xFED874")]
	public void checkIfInFuture()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xFEDE88", Offset = "0xFEDE88", VA = "0xFEDE88")]
	public TimeBall()
	{
	}
}
[Token(Token = "0x200030D")]
public class TimeBallManager : MonoBehaviour
{
	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> balls;

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xFEDE90", Offset = "0xFEDE90", VA = "0xFEDE90")]
	public void resetBalls()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xFED948", Offset = "0xFED948", VA = "0xFED948")]
	public void SpawnTimeBall(GameObject prefab, Vector3 pos, Quaternion rot, TimeBall originalBall)
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xFEE014", Offset = "0xFEE014", VA = "0xFEE014")]
	public TimeBallManager()
	{
	}
}
[Token(Token = "0x200030E")]
public class TimeZoneTrigger : MonoBehaviour
{
	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isFuture;

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xFEE01C", Offset = "0xFEE01C", VA = "0xFEE01C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xFEE158", Offset = "0xFEE158", VA = "0xFEE158")]
	public TimeZoneTrigger()
	{
	}
}
[Token(Token = "0x200030F")]
public class TouchyFinger : MonoBehaviour
{
	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7244", Offset = "0xAA7244")]
	private sealed class <cooldown>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TouchyFinger <>4__this;

		[Token(Token = "0x1700015F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xE6AD4C", Offset = "0xE6AD4C", VA = "0xE6AD4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0xE6AD94", Offset = "0xE6AD94", VA = "0xE6AD94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xE6AC64", Offset = "0xE6AC64", VA = "0xE6AC64")]
		[DebuggerHidden]
		public <cooldown>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xE6AC90", Offset = "0xE6AC90", VA = "0xE6AC90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xE6AC94", Offset = "0xE6AC94", VA = "0xE6AC94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xE6AD54", Offset = "0xE6AD54", VA = "0xE6AD54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HandController handController;

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip selectClip;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool immediateActivation;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform fingerTip;

	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxIndicatorScale;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SettingsManager settingsManager;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform UIFlatIndicator;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform head;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 flatindicatorOrigScale;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool cooledDown;

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float rayCastTimer;

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xFEF0BC", Offset = "0xFEF0BC", VA = "0xFEF0BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xFEF384", Offset = "0xFEF384", VA = "0xFEF384")]
	public void startCooldown()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xFEF3D4", Offset = "0xFEF3D4", VA = "0xFEF3D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABE694", Offset = "0xABE694")]
	private IEnumerator cooldown()
	{
		return null;
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xFEF440", Offset = "0xFEF440", VA = "0xFEF440")]
	private float map(float s, float a1, float a2, float b1, float b2)
	{
		return default(float);
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xFEF45C", Offset = "0xFEF45C", VA = "0xFEF45C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xFEF900", Offset = "0xFEF900", VA = "0xFEF900")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xFEFA14", Offset = "0xFEFA14", VA = "0xFEFA14")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xFEFC54", Offset = "0xFEFC54", VA = "0xFEFC54")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xFEFD2C", Offset = "0xFEFD2C", VA = "0xFEFD2C")]
	public TouchyFinger()
	{
	}
}
[Token(Token = "0x2000311")]
public class TranslatedAudio : MonoBehaviour
{
	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip chinese;

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xFF58FC", Offset = "0xFF58FC", VA = "0xFF58FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xFF5FF8", Offset = "0xFF5FF8", VA = "0xFF5FF8")]
	public TranslatedAudio()
	{
	}
}
[Token(Token = "0x2000312")]
public class TranslatedText : MonoBehaviour
{
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7254", Offset = "0xAA7254")]
	private sealed class <UpdateLanguage_delayed>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TranslatedText <>4__this;

		[Token(Token = "0x17000161")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0xE6C2A0", Offset = "0xE6C2A0", VA = "0xE6C2A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0xE6C2E8", Offset = "0xE6C2E8", VA = "0xE6C2E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xE6C1C8", Offset = "0xE6C1C8", VA = "0xE6C1C8")]
		[DebuggerHidden]
		public <UpdateLanguage_delayed>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xE6C1F4", Offset = "0xE6C1F4", VA = "0xE6C1F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xE6C1F8", Offset = "0xE6C1F8", VA = "0xE6C1F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xE6C2A8", Offset = "0xE6C2A8", VA = "0xE6C2A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string originalText;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro tmText;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMeshProUGUI tmTextUGui;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool autoApply;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TMP_FontAsset defaultFont;

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xFF6000", Offset = "0xFF6000", VA = "0xFF6000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xFF65C0", Offset = "0xFF65C0", VA = "0xFF65C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xFF6554", Offset = "0xFF6554", VA = "0xFF6554")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABE744", Offset = "0xABE744")]
	private IEnumerator UpdateLanguage_delayed()
	{
		return null;
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xFF6094", Offset = "0xFF6094", VA = "0xFF6094")]
	public void UpdateLanguage()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xFF71C4", Offset = "0xFF71C4", VA = "0xFF71C4")]
	public TranslatedText()
	{
	}
}
[Token(Token = "0x2000314")]
public class TranslationManager : MonoBehaviour
{
	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7264", Offset = "0xAA7264")]
	private sealed class <setupLanguagesIE>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TranslationManager <>4__this;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0xE6C9A8", Offset = "0xE6C9A8", VA = "0xE6C9A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0xE6C9F0", Offset = "0xE6C9F0", VA = "0xE6C9F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xE6C2F0", Offset = "0xE6C2F0", VA = "0xE6C2F0")]
		[DebuggerHidden]
		public <setupLanguagesIE>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xE6C31C", Offset = "0xE6C31C", VA = "0xE6C31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xE6C320", Offset = "0xE6C320", VA = "0xE6C320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xE6C9B0", Offset = "0xE6C9B0", VA = "0xE6C9B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_FontAsset chineseFont;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset tradChineseFont;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_FontAsset koreanFont;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_FontAsset japaneseFont;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TranslationManager _instance;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<string, string> chinese;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<string, string> german;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<string, string> french;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Dictionary<string, string> spanish;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<string, string> italian;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Dictionary<string, string> japanese;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Dictionary<string, string> korean;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dictionary<string, string> tradchinese;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool useOverrideLang;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public SystemLanguage overrideLanguage;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<TranslatedText> allTexts;

	[Token(Token = "0x17000163")]
	public static TranslationManager Instance
	{
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xFF59D0", Offset = "0xFF59D0", VA = "0xFF59D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xFF7308", Offset = "0xFF7308", VA = "0xFF7308")]
	public void setOverrideLanguage(int languageID)
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xFF73A4", Offset = "0xFF73A4", VA = "0xFF73A4")]
	public void updateAllTexts()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xFF6654", Offset = "0xFF6654", VA = "0xFF6654")]
	public void AddTextToAllTexts(TranslatedText t)
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xFF71D4", Offset = "0xFF71D4", VA = "0xFF71D4")]
	public void setupLanguages()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xFF74B8", Offset = "0xFF74B8", VA = "0xFF74B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABE7F4", Offset = "0xABE7F4")]
	private IEnumerator setupLanguagesIE()
	{
		return null;
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xFF5C34", Offset = "0xFF5C34", VA = "0xFF5C34")]
	public string getLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xFF66F4", Offset = "0xFF66F4", VA = "0xFF66F4")]
	public string getStringForLocale(string s)
	{
		return null;
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xFF7524", Offset = "0xFF7524", VA = "0xFF7524")]
	public TranslationManager()
	{
	}
}
[Token(Token = "0x2000316")]
public class TriggerSound : MonoBehaviour
{
	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip ringer;

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xFF7534", Offset = "0xFF7534", VA = "0xFF7534")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xFF7588", Offset = "0xFF7588", VA = "0xFF7588")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xFF762C", Offset = "0xFF762C", VA = "0xFF762C")]
	public TriggerSound()
	{
	}
}
[Token(Token = "0x2000317")]
public class TubeBallSpawner : Receiver
{
	[Token(Token = "0x2000318")]
	public enum BallColors
	{
		[Token(Token = "0x40014AF")]
		ball,
		[Token(Token = "0x40014B0")]
		deca,
		[Token(Token = "0x40014B1")]
		octa
	}

	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7274", Offset = "0xAA7274")]
	private sealed class <unblock>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TubeBallSpawner <>4__this;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0xE6CAD0", Offset = "0xE6CAD0", VA = "0xE6CAD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0xE6CB18", Offset = "0xE6CB18", VA = "0xE6CB18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xE6C9F8", Offset = "0xE6C9F8", VA = "0xE6C9F8")]
		[DebuggerHidden]
		public <unblock>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xE6CA24", Offset = "0xE6CA24", VA = "0xE6CA24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xE6CA28", Offset = "0xE6CA28", VA = "0xE6CA28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xE6CAD8", Offset = "0xE6CAD8", VA = "0xE6CAD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public BallCounter ballCounter;

	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public List<GameObject> balls;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject ballImage;

	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject dodecahedronImage;

	[Token(Token = "0x400149D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject octahedronImage;

	[Token(Token = "0x400149E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public TextMeshPro ballsRemainingText;

	[Token(Token = "0x400149F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshPro ballsTotalText;

	[Token(Token = "0x40014A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int ballsSpawned;

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public int mode;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public int target;

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public NewGameManager gameManager;

	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public BallColors ballColor;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject BallReal;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject BallHolo;

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject DecaReal;

	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject DecaHolo;

	[Token(Token = "0x40014A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject OctaReal;

	[Token(Token = "0x40014AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject OctaHolo;

	[Token(Token = "0x40014AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public TMP_FontAsset textFont;

	[Token(Token = "0x40014AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public TMP_FontAsset infinityFont;

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool blocked;

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xFF7634", Offset = "0xFF7634", VA = "0xFF7634")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xFF7654", Offset = "0xFF7654", VA = "0xFF7654", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xFF76E8", Offset = "0xFF76E8", VA = "0xFF76E8")]
	public void UpdateDisplay()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xFF7898", Offset = "0xFF7898", VA = "0xFF7898")]
	public void increaseBallNumber()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xFF78B0", Offset = "0xFF78B0", VA = "0xFF78B0")]
	public void decreaseBallNumber()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xFF78C8", Offset = "0xFF78C8", VA = "0xFF78C8")]
	public void setBallColorBall()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xFF78F4", Offset = "0xFF78F4", VA = "0xFF78F4")]
	public void setBallColorDeca()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xFF7924", Offset = "0xFF7924", VA = "0xFF7924")]
	public void setBallColorOcta()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xFF7954", Offset = "0xFF7954", VA = "0xFF7954", Slot = "5")]
	public override void ReceiverFunction()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xFF7CE4", Offset = "0xFF7CE4", VA = "0xFF7CE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xFF7CE8", Offset = "0xFF7CE8", VA = "0xFF7CE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABE8A4", Offset = "0xABE8A4")]
	private IEnumerator unblock()
	{
		return null;
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xFF7D54", Offset = "0xFF7D54", VA = "0xFF7D54")]
	private void blockSignal()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xFF7990", Offset = "0xFF7990", VA = "0xFF7990")]
	private void LaunchProjectile()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xFF7D88", Offset = "0xFF7D88", VA = "0xFF7D88")]
	private int countBalls()
	{
		return default(int);
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xFF7EE0", Offset = "0xFF7EE0", VA = "0xFF7EE0")]
	public void resetBalls()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xFF807C", Offset = "0xFF807C", VA = "0xFF807C")]
	public void advanceMode(int _mode)
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xFF81E4", Offset = "0xFF81E4", VA = "0xFF81E4")]
	public TubeBallSpawner()
	{
	}
}
[Token(Token = "0x200031A")]
public class TubePusher : MonoBehaviour
{
	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xFF81EC", Offset = "0xFF81EC", VA = "0xFF81EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xFF8328", Offset = "0xFF8328", VA = "0xFF8328")]
	public TubePusher()
	{
	}
}
[Token(Token = "0x200031B")]
public class TutorialButton : MonoBehaviour
{
	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VF_UIELement ui;

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x12B6F14", Offset = "0x12B6F14", VA = "0x12B6F14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x12B6FE4", Offset = "0x12B6FE4", VA = "0x12B6FE4")]
	public TutorialButton()
	{
	}
}
[Token(Token = "0x200031C")]
public class TwinInformation : MonoBehaviour
{
	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isOriginal;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool wasSpawnedInFuture;

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x12B6FEC", Offset = "0x12B6FEC", VA = "0x12B6FEC")]
	public TwinInformation()
	{
	}
}
[Token(Token = "0x200031D")]
public class TwinManager : MonoBehaviour
{
	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TwinInformation> twins;

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x12B6FFC", Offset = "0x12B6FFC", VA = "0x12B6FFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x12B7000", Offset = "0x12B7000", VA = "0x12B7000")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x12B7004", Offset = "0x12B7004", VA = "0x12B7004")]
	public TwinManager()
	{
	}
}
[Token(Token = "0x200031E")]
public class UIManager : MonoBehaviour
{
	[Token(Token = "0x200031F")]
	public enum UIStates
	{
		[Token(Token = "0x40014C1")]
		mainMenu,
		[Token(Token = "0x40014C2")]
		levelselect,
		[Token(Token = "0x40014C3")]
		leveleditor_edit,
		[Token(Token = "0x40014C4")]
		leveleditor_ingame,
		[Token(Token = "0x40014C5")]
		ingame_edit,
		[Token(Token = "0x40014C6")]
		ingame_production
	}

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIStates uiState;

	[Token(Token = "0x40014BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VF_UIELement[] ingameMain_partButtons;

	[Token(Token = "0x40014BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VF_UIELement ingameMain_playButton;

	[Token(Token = "0x40014BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VF_UIELement ingameMain_stopButton;

	[Token(Token = "0x40014BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VF_UIELement[] mainMenu_Buttons;

	[Token(Token = "0x40014BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VF_UIELement[] levelSelection_Buttons;

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x12B7428", Offset = "0x12B7428", VA = "0x12B7428")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x12B7518", Offset = "0x12B7518", VA = "0x12B7518")]
	public void enterProductionState()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x12B742C", Offset = "0x12B742C", VA = "0x12B742C")]
	public void enterEditState()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x12B7714", Offset = "0x12B7714", VA = "0x12B7714")]
	public void showMainMenu()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x12B7AA8", Offset = "0x12B7AA8", VA = "0x12B7AA8")]
	public void hideMainMenu()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x12B7B5C", Offset = "0x12B7B5C", VA = "0x12B7B5C")]
	public void showLevelSelectionMenu()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x12B7BC4", Offset = "0x12B7BC4", VA = "0x12B7BC4")]
	public void hideLevelSelectioMenu()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x12B768C", Offset = "0x12B768C", VA = "0x12B768C")]
	public void show_ingameMain_EditUI()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x12B7604", Offset = "0x12B7604", VA = "0x12B7604")]
	public void hide_ingameMain_EditUI()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x12B7674", Offset = "0x12B7674", VA = "0x12B7674")]
	public void show_ingameMain_ProductionUI()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x12B76FC", Offset = "0x12B76FC", VA = "0x12B76FC")]
	public void hide_ingameMain_ProductionUI()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x12B7C2C", Offset = "0x12B7C2C", VA = "0x12B7C2C")]
	public UIManager()
	{
	}
}
[Token(Token = "0x2000320")]
public class UIPaneController : MonoBehaviour
{
	[Token(Token = "0x40014C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandController[] controllers;

	[Token(Token = "0x40014C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform uiPane;

	[Token(Token = "0x40014C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform head;

	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isCurrentlyVisible;

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x12B7C3C", Offset = "0x12B7C3C", VA = "0x12B7C3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x12B7CB8", Offset = "0x12B7CB8", VA = "0x12B7CB8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x12B7E24", Offset = "0x12B7E24", VA = "0x12B7E24")]
	private void placeMenu()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x12B7EEC", Offset = "0x12B7EEC", VA = "0x12B7EEC")]
	private void hideMenu()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x12B7F30", Offset = "0x12B7F30", VA = "0x12B7F30")]
	public UIPaneController()
	{
	}
}
[Token(Token = "0x2000321")]
public class UIPositionDebug : MonoBehaviour
{
	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text debugText;

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x12B7F38", Offset = "0x12B7F38", VA = "0x12B7F38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x12B7F3C", Offset = "0x12B7F3C", VA = "0x12B7F3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x12B8690", Offset = "0x12B8690", VA = "0x12B8690")]
	public UIPositionDebug()
	{
	}
}
[Token(Token = "0x2000322")]
public class UIVisibilityManager : MonoBehaviour
{
	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float alpha;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timer;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject uiHolder;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform cameraMain;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandController controller;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandController controller2;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandUIController handUI;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LineRenderer[] lineRendererMats;

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text[] labels;

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color lCol;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 controllerLastPos;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float opacityOverride;

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x12B8698", Offset = "0x12B8698", VA = "0x12B8698")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x12B874C", Offset = "0x12B874C", VA = "0x12B874C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x12B8A1C", Offset = "0x12B8A1C", VA = "0x12B8A1C")]
	public UIVisibilityManager()
	{
	}
}
[Token(Token = "0x2000323")]
[ExecuteInEditMode]
public class RotateGameObject : MonoBehaviour
{
	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotationSpeed;

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xE7711C", Offset = "0xE7711C", VA = "0xE7711C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xE77184", Offset = "0xE77184", VA = "0xE77184")]
	public RotateGameObject()
	{
	}
}
[Token(Token = "0x2000324")]
public class RotatingCamera : MonoBehaviour
{
	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraTransform;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotateTransform;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform zoomTransform;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationSpeed;

	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float zoomSpeed;

	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float camSpeed;

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xE77198", Offset = "0xE77198", VA = "0xE77198")]
	private void Update()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xE7763C", Offset = "0xE7763C", VA = "0xE7763C")]
	public RotatingCamera()
	{
	}
}
[Token(Token = "0x2000325")]
public class AnimateParticleSystem : MonoBehaviour
{
	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x1343670", Offset = "0x1343670", VA = "0x1343670")]
	private void Start()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x134367C", Offset = "0x134367C", VA = "0x134367C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x13437B4", Offset = "0x13437B4", VA = "0x13437B4")]
	public AnimateParticleSystem()
	{
	}
}
[Token(Token = "0x2000326")]
public class LoadScene : MonoBehaviour
{
	[Token(Token = "0x6001004")]
	[Address(RVA = "0x24E2A0C", Offset = "0x24E2A0C", VA = "0x24E2A0C")]
	public void LoadNextScene(int index)
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x24E2A70", Offset = "0x24E2A70", VA = "0x24E2A70")]
	public LoadScene()
	{
	}
}
[Token(Token = "0x2000327")]
public class ExampleWheelController : MonoBehaviour
{
	[Token(Token = "0x2000328")]
	private static class Uniforms
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int _MotionAmount;
	}

	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer motionVectorRenderer;

	[Token(Token = "0x40014E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x1C39E98", Offset = "0x1C39E98", VA = "0x1C39E98")]
	private void Start()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x1C39F00", Offset = "0x1C39F00", VA = "0x1C39F00")]
	private void Update()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x1C3A07C", Offset = "0x1C3A07C", VA = "0x1C3A07C")]
	public ExampleWheelController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000329")]
public class ColorGradientBundle
{
	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GPUParticleSystem.ColorMode mode;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float intensity;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color1;

	[Token(Token = "0x40014E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color2;

	[Token(Token = "0x40014E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Gradient gradient1;

	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Gradient gradient2;

	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float seed;

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x10849BC", Offset = "0x10849BC", VA = "0x10849BC")]
	public ColorGradientBundle()
	{
	}
}
[Serializable]
[Token(Token = "0x200032A")]
public class FloatCurveBundle
{
	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GPUParticleSystem.ValueMode mode;

	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float value1;

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float value2;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve1;

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve curve2;

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 minMax;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float seed;

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x13C359C", Offset = "0x13C359C", VA = "0x13C359C")]
	public FloatCurveBundle(float value1, float value2)
	{
	}
}
[Serializable]
[Token(Token = "0x200032B")]
public class IntCurveBundle
{
	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GPUParticleSystem.ValueMode mode;

	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int value1;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int value2;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve1;

	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve curve2;

	[Token(Token = "0x40014F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float seed;

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x122AFB4", Offset = "0x122AFB4", VA = "0x122AFB4")]
	public IntCurveBundle()
	{
	}
}
[Serializable]
[Token(Token = "0x200032C")]
public class ShaderCurveBundle
{
	[Token(Token = "0x40014F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GPUParticleSystem.CurveMode mode;

	[Token(Token = "0x40014F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float multiplier;

	[Token(Token = "0x40014FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float skew;

	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool invert;

	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve1;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve curve2;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 minMax;

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float seed;

	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4[] bezier1;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4[] bezier2;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAC7E8", Offset = "0xAAC7E8")]
	private Material <preview>k__BackingField;

	[Token(Token = "0x17000168")]
	private Material preview
	{
		[Token(Token = "0x600100D")]
		[Address(RVA = "0x10429CC", Offset = "0x10429CC", VA = "0x10429CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABE954", Offset = "0xABE954")]
		get
		{
			return null;
		}
		[Token(Token = "0x600100E")]
		[Address(RVA = "0x10429D4", Offset = "0x10429D4", VA = "0x10429D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABE964", Offset = "0xABE964")]
		set
		{
		}
	}

	[Token(Token = "0x17000169")]
	public Material curvePreview
	{
		[Token(Token = "0x6001010")]
		[Address(RVA = "0x1042B30", Offset = "0x1042B30", VA = "0x1042B30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001011")]
		[Address(RVA = "0x1042C10", Offset = "0x1042C10", VA = "0x1042C10")]
		set
		{
		}
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x10429DC", Offset = "0x10429DC", VA = "0x10429DC")]
	public void Apply()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x1042C18", Offset = "0x1042C18", VA = "0x1042C18")]
	public ShaderCurveBundle()
	{
	}
}
[Serializable]
[Token(Token = "0x200032D")]
public class SingleFloatCurveBundle
{
	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GPUParticleSystem.SimpleValueMode mode;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float value;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 minMax;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float seed;

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xEF62A8", Offset = "0xEF62A8", VA = "0xEF62A8")]
	public SingleFloatCurveBundle(float value)
	{
	}
}
[Serializable]
[Token(Token = "0x200032E")]
public class Vector3CurveBundle
{
	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GPUParticleSystem.ValueMode mode;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 value1;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 value2;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve curve1_1;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve curve1_2;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve curve1_3;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve curve2_1;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve curve2_2;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve curve2_3;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 minMax;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float seed;

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xE818A4", Offset = "0xE818A4", VA = "0xE818A4")]
	public Vector3CurveBundle()
	{
	}
}
[Token(Token = "0x200032F")]
public class ShaderSupportTest : MonoBehaviour
{
	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader[] shaders;

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x104311C", Offset = "0x104311C", VA = "0x104311C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x1043358", Offset = "0x1043358", VA = "0x1043358")]
	public ShaderSupportTest()
	{
	}
}
[Token(Token = "0x2000330")]
[ExecuteInEditMode]
public class ShowFrameRate : MonoBehaviour
{
	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x104412C", Offset = "0x104412C", VA = "0x104412C")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x10442B8", Offset = "0x10442B8", VA = "0x10442B8")]
	public ShowFrameRate()
	{
	}
}
[Token(Token = "0x2000331")]
public static class EvaluationHelper
{
	[Token(Token = "0x6001019")]
	[Address(RVA = "0x1C37384", Offset = "0x1C37384", VA = "0x1C37384")]
	public static float EvaluateSingleFloatCurveBundle(SingleFloatCurveBundle bundle, float progress)
	{
		return default(float);
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x1C373C0", Offset = "0x1C373C0", VA = "0x1C373C0")]
	public static float EvaluateFloatCurveBundle(FloatCurveBundle bundle, float progress)
	{
		return default(float);
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x1C3748C", Offset = "0x1C3748C", VA = "0x1C3748C")]
	public static Vector4 EvaluateStartSizeRotation(FloatCurveBundle startSize, FloatCurveBundle startRotation, float progress)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x1C3762C", Offset = "0x1C3762C", VA = "0x1C3762C")]
	public static Vector4 EvaluateLifeTimeStartSpeed(FloatCurveBundle startLifetime, FloatCurveBundle startSpeed, float progress)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x1C377A8", Offset = "0x1C377A8", VA = "0x1C377A8")]
	public static Vector3 EvaluateVector3Bundle(Vector3CurveBundle bundle, float progress)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x1C37974", Offset = "0x1C37974", VA = "0x1C37974")]
	public static Texture3D DeserializeVectorField(TextAsset fgaFile)
	{
		return null;
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x1C37C70", Offset = "0x1C37C70", VA = "0x1C37C70")]
	public static float Remap(float value, float From1, float To1, float From2, float To2)
	{
		return default(float);
	}
}
[Token(Token = "0x2000332")]
[ExecuteInEditMode]
public class GPUParticleSystem : MonoBehaviour
{
	[Token(Token = "0x2000333")]
	public enum MeshBakeType
	{
		[Token(Token = "0x400158A")]
		Vertex,
		[Token(Token = "0x400158B")]
		Edge,
		[Token(Token = "0x400158C")]
		Triangle
	}

	[Token(Token = "0x2000334")]
	public enum GPUParticleBlendMode
	{
		[Token(Token = "0x400158E")]
		Alpha,
		[Token(Token = "0x400158F")]
		Additive,
		[Token(Token = "0x4001590")]
		Screen,
		[Token(Token = "0x4001591")]
		Premultiplied,
		[Token(Token = "0x4001592")]
		Subtractive,
		[Token(Token = "0x4001593")]
		Multiply,
		[Token(Token = "0x4001594")]
		CutOff,
		[Token(Token = "0x4001595")]
		Opaque
	}

	[Token(Token = "0x2000335")]
	public enum CurveMode
	{
		[Token(Token = "0x4001597")]
		Off,
		[Token(Token = "0x4001598")]
		Linear,
		[Token(Token = "0x4001599")]
		Smooth,
		[Token(Token = "0x400159A")]
		Curve,
		[Token(Token = "0x400159B")]
		RandomTwoCurves
	}

	[Token(Token = "0x2000336")]
	public enum GPUParticleSystemState
	{
		[Token(Token = "0x400159D")]
		Uninitialized,
		[Token(Token = "0x400159E")]
		Paused,
		[Token(Token = "0x400159F")]
		Stopped,
		[Token(Token = "0x40015A0")]
		Playing
	}

	[Token(Token = "0x2000337")]
	public enum EmitterShape
	{
		[Token(Token = "0x40015A2")]
		Point,
		[Token(Token = "0x40015A3")]
		Edge,
		[Token(Token = "0x40015A4")]
		Circle,
		[Token(Token = "0x40015A5")]
		Box,
		[Token(Token = "0x40015A6")]
		HemiSphere,
		[Token(Token = "0x40015A7")]
		Sphere,
		[Token(Token = "0x40015A8")]
		Cone,
		[Token(Token = "0x40015A9")]
		Texture,
		[Token(Token = "0x40015AA")]
		Mesh,
		[Token(Token = "0x40015AB")]
		MeshFilter
	}

	[Token(Token = "0x2000338")]
	public enum ParticleType
	{
		[Token(Token = "0x40015AD")]
		Point,
		[Token(Token = "0x40015AE")]
		Triangle,
		[Token(Token = "0x40015AF")]
		Billboard,
		[Token(Token = "0x40015B0")]
		HorizontalBillboard,
		[Token(Token = "0x40015B1")]
		VerticalBillboard,
		[Token(Token = "0x40015B2")]
		StretchedTail,
		[Token(Token = "0x40015B3")]
		StretchedBillboard,
		[Token(Token = "0x40015B4")]
		Mesh
	}

	[Token(Token = "0x2000339")]
	public enum TurbulenceType
	{
		[Token(Token = "0x40015B6")]
		Off,
		[Token(Token = "0x40015B7")]
		Texture,
		[Token(Token = "0x40015B8")]
		VectorField
	}

	[Token(Token = "0x200033A")]
	public enum GPUSimulationSpace
	{
		[Token(Token = "0x40015BA")]
		Local,
		[Token(Token = "0x40015BB")]
		World
	}

	[Token(Token = "0x200033B")]
	public enum ValueMode
	{
		[Token(Token = "0x40015BD")]
		Value,
		[Token(Token = "0x40015BE")]
		RandomTwoValues,
		[Token(Token = "0x40015BF")]
		Curve,
		[Token(Token = "0x40015C0")]
		RandomTwoCurves
	}

	[Token(Token = "0x200033C")]
	public enum ColorMode
	{
		[Token(Token = "0x40015C2")]
		Color,
		[Token(Token = "0x40015C3")]
		RandomTwoColors,
		[Token(Token = "0x40015C4")]
		Gradient,
		[Token(Token = "0x40015C5")]
		RandomTwoGradients
	}

	[Token(Token = "0x200033D")]
	public enum SimpleValueMode
	{
		[Token(Token = "0x40015C7")]
		Value,
		[Token(Token = "0x40015C8")]
		Curve
	}

	[Token(Token = "0x200033E")]
	public enum TextureSheetMode
	{
		[Token(Token = "0x40015CA")]
		Off,
		[Token(Token = "0x40015CB")]
		TextureSheet,
		[Token(Token = "0x40015CC")]
		TextureSheetMotionVectors
	}

	[Token(Token = "0x200033F")]
	public enum RenderTexturePrecision
	{
		[Token(Token = "0x40015CE")]
		Half,
		[Token(Token = "0x40015CF")]
		Float
	}

	[Token(Token = "0x2000340")]
	public enum CollisionType
	{
		[Token(Token = "0x40015D1")]
		Off,
		[Token(Token = "0x40015D2")]
		Planes
	}

	[Token(Token = "0x2000341")]
	public enum LightMode
	{
		[Token(Token = "0x40015D4")]
		Off,
		[Token(Token = "0x40015D5")]
		Standard
	}

	[Token(Token = "0x4001515")]
	private const int particleColorPrecision = 256;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 safetyVector;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int instanceID;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GPUParticleSystemBuffer particleData;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material particleMaterial;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int renderQueue;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] particleMeshes;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int bufferWidth;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int bufferHeight;

	[NonSerialized]
	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float customTime;

	[NonSerialized]
	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float customDeltaTime;

	[NonSerialized]
	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float previousFrameTime;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public RenderTexturePrecision precision;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool useFixedDeltaTime;

	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float fixedDeltaTime;

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int burstNum;

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float startID;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float endID;

	[NonSerialized]
	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GPUParticleSystemState state;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool playOnAwake;

	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool loop;

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool emit;

	[NonSerialized]
	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float effectStartTime;

	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float effectLength;

	[NonSerialized]
	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float progress;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EmitterShape emitterShape;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float param1;

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float param2;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float param3;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float param4;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float randomness;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool emitFromShell;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool emitFromBase;

	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public GPUSimulationSpace simulationSpace;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<GPUParticleSystemBurst> bursts;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<GPUParticleSystemBurst> currentBursts;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int burst;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Mesh meshEmitter;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public MeshFilter meshFilterEmitter;

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int meshEmitterResolution;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public MeshBakeType meshBakeType;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Texture2D meshEmitterPositionTexture;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float meshEmitterSize;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public FloatCurveBundle emissionRate;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int maxParticles;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public FloatCurveBundle startLifetime;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public FloatCurveBundle startSize;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public FloatCurveBundle startSpeed;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public FloatCurveBundle startRotation;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool useRotation;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public ShaderCurveBundle sizeOverLifetime;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public ShaderCurveBundle rotationOverLifetime;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public ColorGradientBundle colorOverLifetime;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public SingleFloatCurveBundle colorIntensityOverLifetime;

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SingleFloatCurveBundle maxVelocity;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool useMaxVelocity;

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Texture2D colorTexture;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ParticleType particleType;

	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Mesh meshParticle;

	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public SingleFloatCurveBundle gravity;

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3 previousEmitterPosition;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private Vector3 emitterVelocity;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public SingleFloatCurveBundle inheritVelocityMultiplyer;

	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool useInheritVelocity;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public SingleFloatCurveBundle airResistance;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Vector3CurveBundle forceOverLifetime;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public bool useCircularForce;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Vector3CurveBundle circularForce;

	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	public Transform circularForceCenter;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public TurbulenceType turbulenceType;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public TextAsset fgaFile;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Texture3D vectorField;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Texture2D vectorNoise;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float Tightness;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Vector3CurveBundle turbulenceAmplitude;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Vector3CurveBundle turbulenceFrequency;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Vector3CurveBundle turbulenceOffset;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Vector3CurveBundle turbulenceRotation;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	private Transform vectorFieldObject;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public List<Attractor> attractors;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool useMeshTarget;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	public bool useMeshFilter;

	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public SingleFloatCurveBundle meshTargetStrength;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public SingleFloatCurveBundle onTarget;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Mesh meshTarget;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public MeshFilter meshFilterTarget;

	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public int meshTargetResolution;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public MeshBakeType targetBakeType;

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Texture2D meshTargetPositionTexture;

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private float meshTargetSize;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public CollisionType collisionType;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public Vector4[] planePositions;

	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Vector4[] planeNormals;

	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public Transform[] planes;

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public float[] collisionDamping;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float aspectRatio;

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public Vector3 forwardVector;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Vector3 offset;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public Texture2D mainTexture;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Texture2D motionVectors;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public TextureSheetMode textureSheetMode;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public float motionVectorStrength;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public bool textureSheetRandomIndex;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	public int rows;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public int columns;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public GPUParticleBlendMode blendMode;

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public bool useZbuffer;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	public float stretchMultiplier;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public LightMode lightMode;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	public float metallic;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public float smoothness;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Texture2D metallicSmoothness;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public Texture2D normalMap;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public Texture2D emissionMap;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public ShadowCastingMode castShadows;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public bool receiveShadows;

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x13C7F5C", Offset = "0x13C7F5C", VA = "0x13C7F5C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x13C84F4", Offset = "0x13C84F4", VA = "0x13C84F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x13C8774", Offset = "0x13C8774", VA = "0x13C8774")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x13C88AC", Offset = "0x13C88AC", VA = "0x13C88AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x13C8908", Offset = "0x13C8908", VA = "0x13C8908")]
	private void UpdateCustomTime()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x13C8970", Offset = "0x13C8970", VA = "0x13C8970")]
	private void UpdateProgress()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x13C8428", Offset = "0x13C8428", VA = "0x13C8428")]
	public void SetRenderQueue()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x13C844C", Offset = "0x13C844C", VA = "0x13C844C")]
	public void Play()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x13C8D1C", Offset = "0x13C8D1C", VA = "0x13C8D1C")]
	public void Pause()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x13C8538", Offset = "0x13C8538", VA = "0x13C8538")]
	public void Stop()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x13C8DE0", Offset = "0x13C8DE0", VA = "0x13C8DE0")]
	public void Restart()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x13C8E1C", Offset = "0x13C8E1C", VA = "0x13C8E1C")]
	public void Emit(int numParticles)
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x13C8E3C", Offset = "0x13C8E3C", VA = "0x13C8E3C")]
	public void UpdateEmitter()
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x13C87AC", Offset = "0x13C87AC", VA = "0x13C87AC")]
	public void ReSeed()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x13C9080", Offset = "0x13C9080", VA = "0x13C9080")]
	public void AddBurst(int min, int max, float time, float probability, bool playOnce)
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x13C9140", Offset = "0x13C9140", VA = "0x13C9140")]
	public void AddBurst()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x13C91C0", Offset = "0x13C91C0", VA = "0x13C91C0")]
	public void AddAttractor()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x13C9278", Offset = "0x13C9278", VA = "0x13C9278")]
	public void RemoveAttractor(int index)
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x13C92DC", Offset = "0x13C92DC", VA = "0x13C92DC")]
	public void RemoveLastAttractor()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x13C9354", Offset = "0x13C9354", VA = "0x13C9354")]
	public void RemoveBurst(int index)
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x13C93E0", Offset = "0x13C93E0", VA = "0x13C93E0")]
	public void RemoveLastBurst()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x13C7FAC", Offset = "0x13C7FAC", VA = "0x13C7FAC")]
	public void PrepareParticleData()
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x13C8570", Offset = "0x13C8570", VA = "0x13C8570")]
	public void ClearParticleData()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x13C8C24", Offset = "0x13C8C24", VA = "0x13C8C24")]
	private void InternalEmit()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x13C8AF4", Offset = "0x13C8AF4", VA = "0x13C8AF4")]
	private void InternalEvaluateBurst()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x13C8CD8", Offset = "0x13C8CD8", VA = "0x13C8CD8")]
	private void InternalStep()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x13C82BC", Offset = "0x13C82BC", VA = "0x13C82BC")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x13C9EE4", Offset = "0x13C9EE4", VA = "0x13C9EE4")]
	private void UpdateValues()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x13C8E2C", Offset = "0x13C8E2C", VA = "0x13C8E2C")]
	public void EmitNumParticles(int numParticles)
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x13CD3C4", Offset = "0x13CD3C4", VA = "0x13CD3C4")]
	public void ForceRecreateParticles()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x13C804C", Offset = "0x13C804C", VA = "0x13C804C")]
	private void MakeMeshes()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x13C8670", Offset = "0x13C8670", VA = "0x13C8670")]
	private void ClearMeshes()
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x13CC014", Offset = "0x13CC014", VA = "0x13CC014")]
	public void SetShadowSettings()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x13CD03C", Offset = "0x13CD03C", VA = "0x13CD03C")]
	public void UpdatePositionOffset()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x13CCF94", Offset = "0x13CCF94", VA = "0x13CCF94")]
	public void UpdateAspectRatio()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x13C8A48", Offset = "0x13C8A48", VA = "0x13C8A48")]
	private void UpdateTimeInMaterials()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x13CA248", Offset = "0x13CA248", VA = "0x13CA248")]
	public void SetMainTexture()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x13CA418", Offset = "0x13CA418", VA = "0x13CA418")]
	public void SetMetallicSmoothnessMapTexture()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x13CA344", Offset = "0x13CA344", VA = "0x13CA344")]
	public void SetMetallicSmoothnessValue()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x13CA514", Offset = "0x13CA514", VA = "0x13CA514")]
	public void SetNormalMapTexture()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x13CA610", Offset = "0x13CA610", VA = "0x13CA610")]
	public void SetEmissionMapTexture()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x13CA70C", Offset = "0x13CA70C", VA = "0x13CA70C")]
	private void SetMetaTexture()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x13CA7BC", Offset = "0x13CA7BC", VA = "0x13CA7BC")]
	private void SetVelocityTexture()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x13CA86C", Offset = "0x13CA86C", VA = "0x13CA86C")]
	private void SetPositionTexture()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x13CA99C", Offset = "0x13CA99C", VA = "0x13CA99C")]
	private void SetParticleStretch()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x13CB2DC", Offset = "0x13CB2DC", VA = "0x13CB2DC")]
	public void UpdateMeshTargetTexture()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x13CB508", Offset = "0x13CB508", VA = "0x13CB508")]
	public void UpdateMeshTargetParameters()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x13CD0F8", Offset = "0x13CD0F8", VA = "0x13CD0F8")]
	public void UpdateMeshTargetMatrix()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x13CCC54", Offset = "0x13CCC54", VA = "0x13CCC54")]
	public void UpdateCollisionPlanes()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x13CD910", Offset = "0x13CD910", VA = "0x13CD910")]
	public void UpdateParticleMainTex(Texture2D mainTexture)
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x13CCF38", Offset = "0x13CCF38", VA = "0x13CCF38")]
	public void UpdateMotionVectorStrength()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x13CB7B8", Offset = "0x13CB7B8", VA = "0x13CB7B8")]
	public void UpdateMotionVectorTexture(Texture2D motionVectors)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x13CC148", Offset = "0x13CC148", VA = "0x13CC148")]
	public void UpdateStartSpeedAndLifetime()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x13CC170", Offset = "0x13CC170", VA = "0x13CC170")]
	public void UpdateStartSizeAndRotation()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x13CDB68", Offset = "0x13CDB68", VA = "0x13CDB68")]
	public void UpdateEmitterParameters()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x13CC198", Offset = "0x13CC198", VA = "0x13CC198")]
	public void UpdateEmitterMatrix()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x13CDD48", Offset = "0x13CDD48", VA = "0x13CDD48")]
	public void UpdateParticleColorIntensity()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x13CDDAC", Offset = "0x13CDDAC", VA = "0x13CDDAC")]
	public void UpdateStretchMultiplier()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x13CAF38", Offset = "0x13CAF38", VA = "0x13CAF38")]
	public void UpdateColorOverLifeTime()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x13CC8D8", Offset = "0x13CC8D8", VA = "0x13CC8D8")]
	public void UpdateColorIntensity()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x13CCB98", Offset = "0x13CCB98", VA = "0x13CCB98")]
	public void UpdateMaxVelocityOverLifetime()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x13CCA5C", Offset = "0x13CCA5C", VA = "0x13CCA5C")]
	public void UpdateCircularForceOverLifetime()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x13CCA80", Offset = "0x13CCA80", VA = "0x13CCA80")]
	private void UpdateCircularForceCenter()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x13CC2D0", Offset = "0x13CC2D0", VA = "0x13CC2D0")]
	public void UpdateSizeOverLifetime()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x13CC5E4", Offset = "0x13CC5E4", VA = "0x13CC5E4")]
	public void UpdateRotationOverLifetime()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x13CC9E8", Offset = "0x13CC9E8", VA = "0x13CC9E8")]
	public void UpdateGravity()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x13CC9AC", Offset = "0x13CC9AC", VA = "0x13CC9AC")]
	public void UpdateAirResistance()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x13CAED8", Offset = "0x13CAED8", VA = "0x13CAED8")]
	public void UpdateTurbulenceTexture()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x13CB530", Offset = "0x13CB530", VA = "0x13CB530")]
	public void UpdateVectorField()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x13CC944", Offset = "0x13CC944", VA = "0x13CC944")]
	public void UpdateAmplitude()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x13CC968", Offset = "0x13CC968", VA = "0x13CC968")]
	public void UpdateFrequency()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x13CC98C", Offset = "0x13CC98C", VA = "0x13CC98C")]
	public void UpdateTightness()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x13CC8B4", Offset = "0x13CC8B4", VA = "0x13CC8B4")]
	public void UpdateOffset()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x13CAD04", Offset = "0x13CAD04", VA = "0x13CAD04")]
	public void UpdateVectorfieldFile()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x13CB550", Offset = "0x13CB550", VA = "0x13CB550")]
	public void UpdateVectorFieldMatrix()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x13CB098", Offset = "0x13CB098", VA = "0x13CB098")]
	public void UpdateEmitterTexture()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x13CD22C", Offset = "0x13CD22C", VA = "0x13CD22C")]
	private void UpdateInheritVelocity()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x13CD30C", Offset = "0x13CD30C", VA = "0x13CD30C")]
	private void UpdateAttractors()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x13CD3A0", Offset = "0x13CD3A0", VA = "0x13CD3A0")]
	public void UpdateForceOverLifetime()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x13CCBBC", Offset = "0x13CCBBC", VA = "0x13CCBBC")]
	public void UpdateTextureSheetDimensions(int rows, int columns)
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x13CBFE4", Offset = "0x13CBFE4", VA = "0x13CBFE4")]
	public void SetMeshTargetKeyword()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x13CB068", Offset = "0x13CB068", VA = "0x13CB068")]
	public void SetPlaneCollision()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x13CD4D8", Offset = "0x13CD4D8", VA = "0x13CD4D8")]
	public void SetMainTextureKeyword(bool active)
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x13CD550", Offset = "0x13CD550", VA = "0x13CD550")]
	public void SetMetallicSmoothnessKeyword(bool active)
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x13CD5C8", Offset = "0x13CD5C8", VA = "0x13CD5C8")]
	public void SetNormalKeyword(bool active)
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x13CD640", Offset = "0x13CD640", VA = "0x13CD640")]
	public void SetEmissionKeyword(bool active)
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x13CAD88", Offset = "0x13CAD88", VA = "0x13CAD88")]
	public void SetTurbulenceKeyword()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x13CB934", Offset = "0x13CB934", VA = "0x13CB934")]
	public void SetRotationKeyword()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x13CEE48", Offset = "0x13CEE48", VA = "0x13CEE48")]
	public void SetRotationOverLifetimeKeyword(bool active)
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x13CBAC8", Offset = "0x13CBAC8", VA = "0x13CBAC8")]
	public void SetParticleTypeKeyword(ParticleType type)
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x13CB6CC", Offset = "0x13CB6CC", VA = "0x13CB6CC")]
	public void SetTextureSheetKeyword(TextureSheetMode mode)
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x13CB8BC", Offset = "0x13CB8BC", VA = "0x13CB8BC")]
	public void SetRandomIndexKeyword(bool active)
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x13CDFA4", Offset = "0x13CDFA4", VA = "0x13CDFA4")]
	public void SetSizeOverLifetimeKeyword(CurveMode mode)
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x13CE100", Offset = "0x13CE100", VA = "0x13CE100")]
	public void SetRotationOverLifetimeKeyword(CurveMode mode)
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x13CBD44", Offset = "0x13CBD44", VA = "0x13CBD44")]
	public void SetSimulationSpace()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x13CB9A0", Offset = "0x13CB9A0", VA = "0x13CB9A0")]
	public void SetEmitterShapeKeyword()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x13CEF60", Offset = "0x13CEF60", VA = "0x13CEF60")]
	public void UpdateStartSize()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x13CAEF8", Offset = "0x13CAEF8", VA = "0x13CAEF8")]
	public void SetLimitVelocity()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x13CAF18", Offset = "0x13CAF18", VA = "0x13CAF18")]
	public void SetCircularForce()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x13C9CC0", Offset = "0x13C9CC0", VA = "0x13C9CC0")]
	public void SetLightMode()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x13CAA44", Offset = "0x13CAA44", VA = "0x13CAA44")]
	public void SetBlendMode()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x13CF4A8", Offset = "0x13CF4A8", VA = "0x13CF4A8")]
	public void SetBlendMode(GPUParticleBlendMode blendMode)
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x13CAC98", Offset = "0x13CAC98", VA = "0x13CAC98")]
	public void SetZBuffer()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x13CF6D8", Offset = "0x13CF6D8", VA = "0x13CF6D8")]
	public void SetZBuffer(bool active)
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x13CBA28", Offset = "0x13CBA28", VA = "0x13CBA28")]
	public void SetEmitFromShell(bool active)
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x13CBA44", Offset = "0x13CBA44", VA = "0x13CBA44")]
	public void SetEmitFromBase(bool active)
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x13CBA60", Offset = "0x13CBA60", VA = "0x13CBA60")]
	public void SetAttractorKeyword()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x13CA91C", Offset = "0x13CA91C", VA = "0x13CA91C")]
	public void SetUpDataTextures()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x13CF8B4", Offset = "0x13CF8B4", VA = "0x13CF8B4")]
	public void DebugOn()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x13CF9F8", Offset = "0x13CF9F8", VA = "0x13CF9F8")]
	public void DebugOff()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x13CFA68", Offset = "0x13CFA68", VA = "0x13CFA68")]
	public GPUParticleSystem()
	{
	}
}
[Serializable]
[Token(Token = "0x2000342")]
public class GPUParticleSystemBuffer
{
	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RenderTexture newParticleBuffer;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture metaBuffer_1;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture positionBuffer_1;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture velocityBuffer_1;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderTexture metaBuffer_2;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RenderTexture positionBuffer_2;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture velocityBuffer_2;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector4 vector;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4[] vec;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] stren;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material calculateSpawn;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material calculateMeta;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material calculateVelocity;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material calculatePosition;

	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material resetMeta;

	[Token(Token = "0x40015E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material resetPosition;

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x13C9448", Offset = "0x13C9448", VA = "0x13C9448")]
	public GPUParticleSystemBuffer(int width, int height, RenderTextureFormat precision)
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x13C8D28", Offset = "0x13C8D28", VA = "0x13C8D28")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x13CFF84", Offset = "0x13CFF84", VA = "0x13CFF84")]
	private void Setup(int width, int height)
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x13CFFC0", Offset = "0x13CFFC0", VA = "0x13CFFC0")]
	private void SetUpSpawnMaterial(int width, int height)
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x13D0058", Offset = "0x13D0058", VA = "0x13D0058")]
	private void SetUpMetaMaterial()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x13D010C", Offset = "0x13D010C", VA = "0x13D010C")]
	private void SetUpVelocityMaterial()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x13D01EC", Offset = "0x13D01EC", VA = "0x13D01EC")]
	private void SetUpPositionMaterial()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x13D02CC", Offset = "0x13D02CC", VA = "0x13D02CC")]
	private void SetUpResetPositionMaterial()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x13CD3F0", Offset = "0x13CD3F0", VA = "0x13CD3F0")]
	public void UpdateTime(float customTime, float customDeltaTime)
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x13C8F58", Offset = "0x13C8F58", VA = "0x13C8F58")]
	public void UpdateEmitterParameters(Vector3 emitterPosition, Vector4 emitterParameters)
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x13CDC7C", Offset = "0x13CDC7C", VA = "0x13CDC7C")]
	public void UpdateEmitterMatrix(Matrix4x4 emitterMatrix)
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x13CDA1C", Offset = "0x13CDA1C", VA = "0x13CDA1C")]
	public void UpdateStartLifetimeSpeed(FloatCurveBundle startLifetime, FloatCurveBundle startSpeed, float progress)
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x13CDAE0", Offset = "0x13CDAE0", VA = "0x13CDAE0")]
	public void UpdateStartSizeRotation(FloatCurveBundle startSize, FloatCurveBundle startRotation, float progress)
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x13C9E00", Offset = "0x13C9E00", VA = "0x13C9E00")]
	public void Emit(float startID, float endID)
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x13CA08C", Offset = "0x13CA08C", VA = "0x13CA08C")]
	public void StepMeta()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x13CA120", Offset = "0x13CA120", VA = "0x13CA120")]
	public void StepVelocity()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x13CA1B4", Offset = "0x13CA1B4", VA = "0x13CA1B4")]
	public void StepPosition()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x13CE25C", Offset = "0x13CE25C", VA = "0x13CE25C")]
	public void UpdateGravity(float gravity)
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x13CE2C4", Offset = "0x13CE2C4", VA = "0x13CE2C4")]
	public void UpdateAirResistance(float resistance)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x13CDE08", Offset = "0x13CDE08", VA = "0x13CDE08")]
	public void UpdateMaxVelocityOverLifetime(SingleFloatCurveBundle maxVelocity, float progress)
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x13CDE8C", Offset = "0x13CDE8C", VA = "0x13CDE8C")]
	public void UpdateCircularForceOverLifetime(Vector3CurveBundle circularForce, float progress)
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x13CE794", Offset = "0x13CE794", VA = "0x13CE794")]
	public void UpdateInheritVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x13CDF18", Offset = "0x13CDF18", VA = "0x13CDF18")]
	public void UpdateCircularForceCenterPosition(Vector3 position)
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x13CE32C", Offset = "0x13CE32C", VA = "0x13CE32C")]
	public void UpdateTurbulenceTexture(Texture2D turbulenceNoise)
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x13CE394", Offset = "0x13CE394", VA = "0x13CE394")]
	public void UpdateVectorField(Texture3D vectorField)
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x13CE3FC", Offset = "0x13CE3FC", VA = "0x13CE3FC")]
	public void UpdateAmplitude(Vector3CurveBundle amplitude, float progress)
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x13CE488", Offset = "0x13CE488", VA = "0x13CE488")]
	public void UpdateFrequency(Vector3CurveBundle frequency, float progress)
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x13CE510", Offset = "0x13CE510", VA = "0x13CE510")]
	public void UpdateTightness(float Tightness)
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x13CE578", Offset = "0x13CE578", VA = "0x13CE578")]
	public void UpdateOffset(Vector3CurveBundle offset, float progress)
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x13CE604", Offset = "0x13CE604", VA = "0x13CE604")]
	public void UpdateVectorFieldMatrix(Transform vectorFieldTransform, Vector3CurveBundle rotation, Vector3CurveBundle frequency, float progress, float customDeltaTime)
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x13CE820", Offset = "0x13CE820", VA = "0x13CE820")]
	public void UpdateAttractors(List<Attractor> attractors, Vector3 center)
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x13CD878", Offset = "0x13CD878", VA = "0x13CD878")]
	public void UpdateCollisionPlanes(Vector4[] planes, Vector4[] normals)
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x13CEBFC", Offset = "0x13CEBFC", VA = "0x13CEBFC")]
	public void UpdateForceOverLifetime(Vector3CurveBundle force, float progress)
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x13D0328", Offset = "0x13D0328", VA = "0x13D0328")]
	public void UpdateSkinnedMeshEmitterTexture(RenderTexture renderTexture)
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x13CE714", Offset = "0x13CE714", VA = "0x13CE714")]
	public void UpdateMeshEmitterTexture(Texture2D texture)
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x13CD6B8", Offset = "0x13CD6B8", VA = "0x13CD6B8")]
	public void UpdateMeshTargetTexture(Texture2D targetTexture)
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x13CD7E4", Offset = "0x13CD7E4", VA = "0x13CD7E4")]
	public void UpdateMeshTargetMatrix(Matrix4x4 targetMatrix)
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x13CD720", Offset = "0x13CD720", VA = "0x13CD720")]
	public void UpdateMeshTargetValues(SingleFloatCurveBundle strength, SingleFloatCurveBundle attenuation, float progress)
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x13CED00", Offset = "0x13CED00", VA = "0x13CED00")]
	public void SetPlaneCollision(bool active)
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x13CEFB4", Offset = "0x13CEFB4", VA = "0x13CEFB4")]
	public void EmitterShape(GPUParticleSystem.EmitterShape shape)
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x13CEEC0", Offset = "0x13CEEC0", VA = "0x13CEEC0")]
	public void SimSpace(GPUParticleSystem.GPUSimulationSpace simSpace)
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x13CF83C", Offset = "0x13CF83C", VA = "0x13CF83C")]
	public void Attractors(bool active)
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x13CEC88", Offset = "0x13CEC88", VA = "0x13CEC88")]
	public void MeshTarget(bool active)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x13CF3B8", Offset = "0x13CF3B8", VA = "0x13CF3B8")]
	public void LimitVelocity(bool active)
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x13CED78", Offset = "0x13CED78", VA = "0x13CED78")]
	public void Turbulence(GPUParticleSystem.TurbulenceType turbulenceType)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x13CF74C", Offset = "0x13CF74C", VA = "0x13CF74C")]
	public void EmitFromShell(bool active)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x13CF7C4", Offset = "0x13CF7C4", VA = "0x13CF7C4")]
	public void EmitFromBase(bool active)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x13CF430", Offset = "0x13CF430", VA = "0x13CF430")]
	public void CircularForce(bool active)
	{
	}
}
[Serializable]
[Token(Token = "0x2000343")]
public class GPUParticleSystemBurst
{
	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int minBurst;

	[Token(Token = "0x40015E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int maxBurst;

	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float burstTime;

	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float burstProbability;

	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool playOnce;

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x24C9CD4", Offset = "0x24C9CD4", VA = "0x24C9CD4")]
	public int GetBurst()
	{
		return default(int);
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x24C9D24", Offset = "0x24C9D24", VA = "0x24C9D24")]
	public GPUParticleSystemBurst()
	{
	}
}
[Token(Token = "0x2000344")]
public static class GPUParticleSystemMeshUtility
{
	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] Vertices;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3[] Normals;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector4[] Tangents;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] Triangles;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Vector2[] UVs;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Vector2[] PosUV;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector2[] AnimUV;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float ignoreSize;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int numTriangles;

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Vector3[] vertexBuffer;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static int[] triangleBuffer;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static Vector2[] uV1Buffer;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static Vector2[] uV2Buffer;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float[] weightsBuffer;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static float Buffer;

	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private static Vector3 vectorBuffer;

	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static float sizeBuffer;

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static Color[] ColorArray;

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x24C9D3C", Offset = "0x24C9D3C", VA = "0x24C9D3C")]
	public static GameObject[] CreateParticlesPoint(int _Width, int _Height, Material _Mat)
	{
		return null;
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x24CA2D0", Offset = "0x24CA2D0", VA = "0x24CA2D0")]
	public static GameObject[] CreateParticlesTriangle(int _Width, int _Height, Material _Mat)
	{
		return null;
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x24CAB7C", Offset = "0x24CAB7C", VA = "0x24CAB7C")]
	public static GameObject[] CreateParticlesQuad(int _Width, int _Height, Material _Mat)
	{
		return null;
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x24CB6B0", Offset = "0x24CB6B0", VA = "0x24CB6B0")]
	public static GameObject[] CreateParticlesDoubleQuad(int _Width, int _Height, Material _Mat)
	{
		return null;
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x24CC22C", Offset = "0x24CC22C", VA = "0x24CC22C")]
	public static GameObject[] CreateMeshParticles(Mesh _Mesh, int _Width, int _Height, Material _Mat, bool _2ndUV)
	{
		return null;
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x24CCB90", Offset = "0x24CCB90", VA = "0x24CCB90")]
	public static Vector4[] AnimationCurveToBezier(AnimationCurve Curve)
	{
		return null;
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x24CCE0C", Offset = "0x24CCE0C", VA = "0x24CCE0C")]
	public static AnimationCurve CheckAnimationCurve(AnimationCurve Curve)
	{
		return null;
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x24CCF80", Offset = "0x24CCF80", VA = "0x24CCF80")]
	public static void CurveToBezier(Keyframe k0, Keyframe k1, out Vector4 P1C1, out Vector4 P2C2)
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x24CD050", Offset = "0x24CD050", VA = "0x24CD050")]
	public static Texture2D MeshToTexture(Mesh mesh, GPUParticleSystem.MeshBakeType bakeType, int size)
	{
		return null;
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x24CD270", Offset = "0x24CD270", VA = "0x24CD270")]
	private static void CreateTextureColours(GPUParticleSystem.MeshBakeType geometryType, ref Vector3[] vertices, ref int[] tris, ref float[] weights, int arraySize)
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x24CD5F4", Offset = "0x24CD5F4", VA = "0x24CD5F4")]
	private static void CalculateTriangles(ref Vector3[] vertices, ref int[] tris, ref float[] weights, ref float wholeMeshArea, ref int tri)
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x24CD79C", Offset = "0x24CD79C", VA = "0x24CD79C")]
	private static void Normalize(ref float[] Weights, ref float WholeMeshArea)
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x24CD80C", Offset = "0x24CD80C", VA = "0x24CD80C")]
	private static void GenerateRandomPoint(ref Vector3[] Vertices, ref int[] Tris, ref float[] Weights, int ArraySize)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x24CD998", Offset = "0x24CD998", VA = "0x24CD998")]
	private static Vector3 GenerateRandomPos(ref Vector3[] Vertices, ref int[] Tris, int TriangleIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x24CDB00", Offset = "0x24CDB00", VA = "0x24CDB00")]
	private static void AssignColour(int i, Vector3 Pos)
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x24CD914", Offset = "0x24CD914", VA = "0x24CD914")]
	private static void GetWeights(ref float[] Weights, ref int weightLength, ref float RandomTriangle, ref float acc, ref int TriangleIndex)
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x24CDBB4", Offset = "0x24CDBB4", VA = "0x24CDBB4")]
	private static Vector3 GetRandomPointOnTriangle(Vector3 P1, Vector3 P2, Vector3 P3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x24CDCB8", Offset = "0x24CDCB8", VA = "0x24CDCB8")]
	public static Mesh ProcessSkinnedMesh(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x24CE4B8", Offset = "0x24CE4B8", VA = "0x24CE4B8")]
	private static Mesh SplitTriangles(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x24CEDE8", Offset = "0x24CEDE8", VA = "0x24CEDE8")]
	private static void WeightTriangles(Vector3[] verts, int[] tris, ref float[] weights)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x24CF054", Offset = "0x24CF054", VA = "0x24CF054")]
	private static float TriangleSize(Vector3 V1, Vector3 V2, Vector3 V3)
	{
		return default(float);
	}
}
[Token(Token = "0x2000345")]
public static class GPUParticleSystemTextureHelper
{
	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x24CF360", Offset = "0x24CF360", VA = "0x24CF360")]
	public static Texture2D BakeColor(Color color, Texture2D particleColor)
	{
		return null;
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x24CF4B8", Offset = "0x24CF4B8", VA = "0x24CF4B8")]
	public static Texture2D BakeColor(Color colorA, Color colorB, Texture2D particleColor)
	{
		return null;
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x24CF694", Offset = "0x24CF694", VA = "0x24CF694")]
	public static Texture2D BakeColor(Gradient gradient, Texture2D particleColor)
	{
		return null;
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x24CF810", Offset = "0x24CF810", VA = "0x24CF810")]
	public static Texture2D BakeColor(Gradient gradientA, Gradient gradientB, Texture2D particleColor)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000346")]
public class Attractor
{
	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform attractor;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float strength;

	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float attenuation;

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x1349200", Offset = "0x1349200", VA = "0x1349200")]
	public Attractor(Transform attractor, float strength, float attenuation)
	{
	}
}
[Token(Token = "0x2000347")]
[ExecuteInEditMode]
public class SetCameraDepthNormalRenderMode : MonoBehaviour
{
	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DepthTextureMode renderMode;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera depthCamera;

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x103C054", Offset = "0x103C054", VA = "0x103C054")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x103C0E8", Offset = "0x103C0E8", VA = "0x103C0E8")]
	public SetCameraDepthNormalRenderMode()
	{
	}
}
[Token(Token = "0x2000348")]
public class UniversalChaperone : MonoBehaviour
{
	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trackedGO;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float radius;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float power;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] walls;

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider[] wallsCollider;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Forcefield[] wallsForcefield;

	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float xScale;

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float yScale;

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x12B9D50", Offset = "0x12B9D50", VA = "0x12B9D50")]
	private void Start()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x12B9F84", Offset = "0x12B9F84", VA = "0x12B9F84")]
	private void Update()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x12BA168", Offset = "0x12BA168", VA = "0x12BA168")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x12BA24C", Offset = "0x12BA24C", VA = "0x12BA24C")]
	private void CheckHitPoints(Transform wall, Vector3 tPos, float _radius, Forcefield forcefield)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x12BA42C", Offset = "0x12BA42C", VA = "0x12BA42C")]
	public UniversalChaperone()
	{
	}
}
[Token(Token = "0x2000349")]
public class BakeAllProbes : MonoBehaviour
{
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA72C4", Offset = "0xAA72C4")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BakeAllProbes <>4__this;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0xE90988", Offset = "0xE90988", VA = "0xE90988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010EA")]
			[Address(RVA = "0xE909D0", Offset = "0xE909D0", VA = "0xE909D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xE907C4", Offset = "0xE907C4", VA = "0xE907C4")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xE907F0", Offset = "0xE907F0", VA = "0xE907F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xE907F4", Offset = "0xE907F4", VA = "0xE907F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xE90990", Offset = "0xE90990", VA = "0xE90990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x134A5CC", Offset = "0x134A5CC", VA = "0x134A5CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABE974", Offset = "0xABE974")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x134A638", Offset = "0x134A638", VA = "0x134A638")]
	public BakeAllProbes()
	{
	}
}
[Token(Token = "0x200034B")]
public class RemoveDemoMessage : MonoBehaviour
{
	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xE731D0", Offset = "0xE731D0", VA = "0xE731D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xE73248", Offset = "0xE73248", VA = "0xE73248")]
	public RemoveDemoMessage()
	{
	}
}
[Token(Token = "0x200034C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA72D4", Offset = "0xAA72D4")]
public class Respawner : MonoBehaviour
{
	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform location;

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xE73EA4", Offset = "0xE73EA4", VA = "0xE73EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xE73F08", Offset = "0xE73F08", VA = "0xE73F08")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xE73FB4", Offset = "0xE73FB4", VA = "0xE73FB4")]
	public Respawner()
	{
	}
}
[Token(Token = "0x200034D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7334", Offset = "0xAA7334")]
public class CameraShake : MonoBehaviour
{
	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float shakeAmount;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 originalPos;

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x107F808", Offset = "0x107F808", VA = "0x107F808")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x107F844", Offset = "0x107F844", VA = "0x107F844")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x107F8B8", Offset = "0x107F8B8", VA = "0x107F8B8")]
	public CameraShake()
	{
	}
}
[Token(Token = "0x200034E")]
public class LeftDoor : MonoBehaviour
{
	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 targetValue;

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xBD4E18", Offset = "0xBD4E18", VA = "0xBD4E18")]
	public void SetDoorVector(float amt)
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xBD4EA4", Offset = "0xBD4EA4", VA = "0xBD4EA4")]
	public LeftDoor()
	{
	}
}
[Token(Token = "0x200034F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7394", Offset = "0xAA7394")]
public class ParkedRailcar_Interaction : MonoBehaviour
{
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA73F4", Offset = "0xAA73F4")]
	private sealed class <snapDoorsInState>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkedRailcar_Interaction <>4__this;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001102")]
			[Address(RVA = "0xDB6044", Offset = "0xDB6044", VA = "0xDB6044", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001104")]
			[Address(RVA = "0xDB608C", Offset = "0xDB608C", VA = "0xDB608C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xDB5E9C", Offset = "0xDB5E9C", VA = "0xDB5E9C")]
		[DebuggerHidden]
		public <snapDoorsInState>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xDB5EC8", Offset = "0xDB5EC8", VA = "0xDB5EC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xDB5ECC", Offset = "0xDB5ECC", VA = "0xDB5ECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xDB604C", Offset = "0xDB604C", VA = "0xDB604C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] railCars;

	[Token(Token = "0x4001612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4001613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Font font;

	[Token(Token = "0x4001614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RightDoor[] rightDoors;

	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LeftDoor[] leftDoors;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool opened;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isMoving;

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip doorSlideOpen;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip doorSlideClose;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 playerPosition;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool inZone;

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xCC8384", Offset = "0xCC8384", VA = "0xCC8384")]
	private void Start()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xCC8588", Offset = "0xCC8588", VA = "0xCC8588")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xCC875C", Offset = "0xCC875C", VA = "0xCC875C")]
	private void SetDoorVector(bool toOpen)
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xCC8884", Offset = "0xCC8884", VA = "0xCC8884")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xCC8A10", Offset = "0xCC8A10", VA = "0xCC8A10")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xCC8598", Offset = "0xCC8598", VA = "0xCC8598")]
	private void MoveDoors()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xCC89E8", Offset = "0xCC89E8", VA = "0xCC89E8")]
	private void PlayAudio()
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xCC897C", Offset = "0xCC897C", VA = "0xCC897C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABEA24", Offset = "0xABEA24")]
	private IEnumerator snapDoorsInState()
	{
		return null;
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xCC8A80", Offset = "0xCC8A80", VA = "0xCC8A80")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xCC8BF4", Offset = "0xCC8BF4", VA = "0xCC8BF4")]
	public ParkedRailcar_Interaction()
	{
	}
}
[Token(Token = "0x2000351")]
public class RightDoor : MonoBehaviour
{
	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 targetValue;

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xE73FBC", Offset = "0xE73FBC", VA = "0xE73FBC")]
	public void SetDoorVector(float amt)
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xE74048", Offset = "0xE74048", VA = "0xE74048")]
	public RightDoor()
	{
	}
}
[Token(Token = "0x2000352")]
public class ServiceDoor : MonoBehaviour
{
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7404", Offset = "0xAA7404")]
	private sealed class <moveDoor>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServiceDoor <>4__this;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion target;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0xE67AC0", Offset = "0xE67AC0", VA = "0xE67AC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001111")]
			[Address(RVA = "0xE67B08", Offset = "0xE67B08", VA = "0xE67B08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xE678F8", Offset = "0xE678F8", VA = "0xE678F8")]
		[DebuggerHidden]
		public <moveDoor>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xE67924", Offset = "0xE67924", VA = "0xE67924", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xE67928", Offset = "0xE67928", VA = "0xE67928", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xE67AC8", Offset = "0xE67AC8", VA = "0xE67AC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float doorOpenAngle;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float doorClosedAngle;

	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip openSound;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip closeSound;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion doorOpen;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion doorClosed;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Font font;

	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool doorStatus;

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool playerInRange;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform player;

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x103BAD0", Offset = "0x103BAD0", VA = "0x103BAD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x103BC90", Offset = "0x103BC90", VA = "0x103BC90")]
	private void Update()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x103BDC4", Offset = "0x103BDC4", VA = "0x103BDC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABEAD4", Offset = "0xABEAD4")]
	private IEnumerator moveDoor(Quaternion target)
	{
		return null;
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x103BE58", Offset = "0x103BE58", VA = "0x103BE58")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x103BFF8", Offset = "0x103BFF8", VA = "0x103BFF8")]
	public ServiceDoor()
	{
	}
}
[Token(Token = "0x2000354")]
public class TicketMachine : MonoBehaviour
{
	[Token(Token = "0x400162F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip ticketing;

	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Font font;

	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool inZone;

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xFED39C", Offset = "0xFED39C", VA = "0xFED39C")]
	private void OnTriggerStay(Collider o)
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xFED454", Offset = "0xFED454", VA = "0xFED454")]
	private void OnTriggerExit()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xFED45C", Offset = "0xFED45C", VA = "0xFED45C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xFED5D0", Offset = "0xFED5D0", VA = "0xFED5D0")]
	public TicketMachine()
	{
	}
}
[Token(Token = "0x2000355")]
public class Timer : MonoBehaviour
{
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7414", Offset = "0xAA7414")]
	private sealed class <InsideTrainAnnouncement>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Timer <>4__this;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0xE6AC14", Offset = "0xE6AC14", VA = "0xE6AC14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600111F")]
			[Address(RVA = "0xE6AC5C", Offset = "0xE6AC5C", VA = "0xE6AC5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xE6AB38", Offset = "0xE6AB38", VA = "0xE6AB38")]
		[DebuggerHidden]
		public <InsideTrainAnnouncement>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xE6AB64", Offset = "0xE6AB64", VA = "0xE6AB64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xE6AB68", Offset = "0xE6AB68", VA = "0xE6AB68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xE6AC1C", Offset = "0xE6AC1C", VA = "0xE6AC1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image bar;

	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delay;

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Train1 train;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool starting;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isSet;

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xFEE160", Offset = "0xFEE160", VA = "0xFEE160")]
	private void Start()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xFEE1DC", Offset = "0xFEE1DC", VA = "0xFEE1DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xFEE4A4", Offset = "0xFEE4A4", VA = "0xFEE4A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABEB84", Offset = "0xABEB84")]
	private IEnumerator InsideTrainAnnouncement()
	{
		return null;
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xFEE57C", Offset = "0xFEE57C", VA = "0xFEE57C")]
	public Timer()
	{
	}
}
[Token(Token = "0x2000357")]
public class Train1 : MonoBehaviour
{
	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7424", Offset = "0xAA7424")]
	private sealed class <LaunchTrain>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Train1 <>4__this;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float s;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0xE6B4A4", Offset = "0xE6B4A4", VA = "0xE6B4A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001132")]
			[Address(RVA = "0xE6B4EC", Offset = "0xE6B4EC", VA = "0xE6B4EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xE6B2A8", Offset = "0xE6B2A8", VA = "0xE6B2A8")]
		[DebuggerHidden]
		public <LaunchTrain>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xE6B2D4", Offset = "0xE6B2D4", VA = "0xE6B2D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xE6B2D8", Offset = "0xE6B2D8", VA = "0xE6B2D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xE6B4AC", Offset = "0xE6B4AC", VA = "0xE6B4AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7434", Offset = "0xAA7434")]
	private sealed class <leaveStation>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Train1 <>4__this;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0xE6B788", Offset = "0xE6B788", VA = "0xE6B788", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001138")]
			[Address(RVA = "0xE6B7D0", Offset = "0xE6B7D0", VA = "0xE6B7D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xE6B650", Offset = "0xE6B650", VA = "0xE6B650")]
		[DebuggerHidden]
		public <leaveStation>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xE6B67C", Offset = "0xE6B67C", VA = "0xE6B67C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xE6B680", Offset = "0xE6B680", VA = "0xE6B680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xE6B790", Offset = "0xE6B790", VA = "0xE6B790", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7444", Offset = "0xAA7444")]
	private sealed class <Depart>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Train1 <>4__this;

		[Token(Token = "0x17000176")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600113C")]
			[Address(RVA = "0xE6B008", Offset = "0xE6B008", VA = "0xE6B008", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600113E")]
			[Address(RVA = "0xE6B050", Offset = "0xE6B050", VA = "0xE6B050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xE6AD9C", Offset = "0xE6AD9C", VA = "0xE6AD9C")]
		[DebuggerHidden]
		public <Depart>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xE6ADC8", Offset = "0xE6ADC8", VA = "0xE6ADC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xE6ADCC", Offset = "0xE6ADCC", VA = "0xE6ADCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xE6B010", Offset = "0xE6B010", VA = "0xE6B010", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7454", Offset = "0xAA7454")]
	private sealed class <RestartLevel>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000178")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0xE6B600", Offset = "0xE6B600", VA = "0xE6B600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001144")]
			[Address(RVA = "0xE6B648", Offset = "0xE6B648", VA = "0xE6B648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xE6B4F4", Offset = "0xE6B4F4", VA = "0xE6B4F4")]
		[DebuggerHidden]
		public <RestartLevel>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xE6B520", Offset = "0xE6B520", VA = "0xE6B520", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xE6B524", Offset = "0xE6B524", VA = "0xE6B524", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xE6B608", Offset = "0xE6B608", VA = "0xE6B608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7464", Offset = "0xAA7464")]
	private sealed class <DisableTrain>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Train1 <>4__this;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001148")]
			[Address(RVA = "0xE6B258", Offset = "0xE6B258", VA = "0xE6B258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0xE6B2A0", Offset = "0xE6B2A0", VA = "0xE6B2A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xE6B058", Offset = "0xE6B058", VA = "0xE6B058")]
		[DebuggerHidden]
		public <DisableTrain>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xE6B084", Offset = "0xE6B084", VA = "0xE6B084", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xE6B088", Offset = "0xE6B088", VA = "0xE6B088", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xE6B260", Offset = "0xE6B260", VA = "0xE6B260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource mainPASystem;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip trainArriving;

	[Token(Token = "0x400163D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip ambient;

	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip announcement;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip leaving;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool trainStopped;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Light[] lights;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform startPos;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool playerInside;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource current;

	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator anim;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TrainDoors td;

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xFF0DB0", Offset = "0xFF0DB0", VA = "0xFF0DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xFEE510", Offset = "0xFEE510", VA = "0xFEE510")]
	public void TrainDepart()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xFEE474", Offset = "0xFEE474", VA = "0xFEE474")]
	public void TrainLaunch()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xFF1020", Offset = "0xFF1020", VA = "0xFF1020")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABEC34", Offset = "0xABEC34")]
	private IEnumerator LaunchTrain(float s)
	{
		return null;
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xFF109C", Offset = "0xFF109C", VA = "0xFF109C")]
	private void OnTriggerEnter(Collider o)
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xFF1140", Offset = "0xFF1140", VA = "0xFF1140")]
	private void OnTriggerExit(Collider o)
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xFF11C4", Offset = "0xFF11C4", VA = "0xFF11C4")]
	public void MakeAnnouncementInsideTrain()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xFF0F48", Offset = "0xFF0F48", VA = "0xFF0F48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABEC94", Offset = "0xABEC94")]
	private IEnumerator leaveStation()
	{
		return null;
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xFF0FB4", Offset = "0xFF0FB4", VA = "0xFF0FB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABECF4", Offset = "0xABECF4")]
	private IEnumerator Depart()
	{
		return null;
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xFF1220", Offset = "0xFF1220", VA = "0xFF1220")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABED54", Offset = "0xABED54")]
	private IEnumerator RestartLevel()
	{
		return null;
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xFF127C", Offset = "0xFF127C", VA = "0xFF127C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABEDB4", Offset = "0xABEDB4")]
	private IEnumerator DisableTrain()
	{
		return null;
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xFF12E8", Offset = "0xFF12E8", VA = "0xFF12E8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xFF144C", Offset = "0xFF144C", VA = "0xFF144C")]
	public Train1()
	{
	}
}
[Token(Token = "0x200035D")]
public class TrainDoors : MonoBehaviour
{
	[Token(Token = "0x200035E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7474", Offset = "0xAA7474")]
	private sealed class <SnapDoorsOpen>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrainDoors <>4__this;

		[Token(Token = "0x1700017C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0xE6BD38", Offset = "0xE6BD38", VA = "0xE6BD38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0xE6BD80", Offset = "0xE6BD80", VA = "0xE6BD80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xE6BC64", Offset = "0xE6BC64", VA = "0xE6BC64")]
		[DebuggerHidden]
		public <SnapDoorsOpen>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xE6BC90", Offset = "0xE6BC90", VA = "0xE6BC90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xE6BC94", Offset = "0xE6BC94", VA = "0xE6BC94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xE6BD40", Offset = "0xE6BD40", VA = "0xE6BD40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RightDoor[] rightDoors;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LeftDoor[] leftDoors;

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool doorsMoving;

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xFF28D4", Offset = "0xFF28D4", VA = "0xFF28D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xFF294C", Offset = "0xFF294C", VA = "0xFF294C")]
	private void Update()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xFF2B10", Offset = "0xFF2B10", VA = "0xFF2B10")]
	private void OpenDoors()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xFF2CE0", Offset = "0xFF2CE0", VA = "0xFF2CE0")]
	public void CloseDoors()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xFF2DC4", Offset = "0xFF2DC4", VA = "0xFF2DC4")]
	public void SecureDoors()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xFF2C74", Offset = "0xFF2C74", VA = "0xFF2C74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABEFA4", Offset = "0xABEFA4")]
	private IEnumerator SnapDoorsOpen()
	{
		return null;
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xFF2EB0", Offset = "0xFF2EB0", VA = "0xFF2EB0")]
	public TrainDoors()
	{
	}
}
[Token(Token = "0x200035F")]
public class Train_PA : MonoBehaviour
{
	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip announcement;

	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource ambient;

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xFF3A80", Offset = "0xFF3A80", VA = "0xFF3A80")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xFF3B1C", Offset = "0xFF3B1C", VA = "0xFF3B1C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xFF3B6C", Offset = "0xFF3B6C", VA = "0xFF3B6C")]
	public Train_PA()
	{
	}
}
[Token(Token = "0x2000360")]
public class VendingMachine : MonoBehaviour
{
	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sodaPrefab;

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip vendingMachine;

	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Font font;

	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inZone;

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xE81A3C", Offset = "0xE81A3C", VA = "0xE81A3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xE81B70", Offset = "0xE81B70", VA = "0xE81B70")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xE81CDC", Offset = "0xE81CDC", VA = "0xE81CDC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xE81D4C", Offset = "0xE81D4C", VA = "0xE81D4C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xE81EC0", Offset = "0xE81EC0", VA = "0xE81EC0")]
	public VendingMachine()
	{
	}
}
[Token(Token = "0x2000361")]
public class UserFriendsPoller : MonoBehaviour
{
	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string usernameOverride;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string username;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> friends;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro usernameText;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject piracyCard;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text friendsText;

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x12BA794", Offset = "0x12BA794", VA = "0x12BA794")]
	private void Start()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x12BA978", Offset = "0x12BA978", VA = "0x12BA978")]
	public static string GetPublicIP()
	{
		return null;
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x12BAB38", Offset = "0x12BAB38", VA = "0x12BAB38")]
	public UserFriendsPoller()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x12BAB8C", Offset = "0x12BAB8C", VA = "0x12BAB8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF054", Offset = "0xABF054")]
	private void <Start>b__6_0(Pico.Platform.Message<Pico.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x12BAD60", Offset = "0x12BAD60", VA = "0x12BAD60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF064", Offset = "0xABF064")]
	private void <Start>b__6_1(Pico.Platform.Message<Pico.Platform.Models.UserList> msg)
	{
	}
}
[Token(Token = "0x2000362")]
public class VF_UI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000363")]
	public class VF_UIElement_Content
	{
		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite icon;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent buttonFunction;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int intPayload;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int intPayload2;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string stringPayload;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string stringPayload2;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isLevelLoadButton;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isLevelEditor;

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xE6CD7C", Offset = "0xE6CD7C", VA = "0xE6CD7C")]
		public VF_UIElement_Content()
		{
		}
	}

	[Token(Token = "0x2000364")]
	public enum VF_UI_Type
	{
		[Token(Token = "0x4001689")]
		radial,
		[Token(Token = "0x400168A")]
		cards
	}

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool lookAtMainCam;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cardPrefab;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isLevelLoadButton;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool useCollision;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string colliderTag;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VF_UI_Type uiType;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool colorChange;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool posChange;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color defaultColor;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color highlightColor;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float highlightZOffset;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VF_UIElement_Content[] normalElements;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VF_UIElement_Content radialMiddle;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VF_UIELement radialCenterElement;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VR_UI_ElementHolder twoRadial;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public VR_UI_ElementHolder threeRadial;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public VR_UI_ElementHolder fourRadial;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public VR_UI_ElementHolder fiveRadial;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public VR_UI_ElementHolder sixRadial;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public VR_UI_ElementHolder eightRadial;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LevelManager levelManager;

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public VF_UIELement[] childUIs;

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject[] cards;

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x12C2C70", Offset = "0x12C2C70", VA = "0x12C2C70")]
	private void Start()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x12C3F10", Offset = "0x12C3F10", VA = "0x12C3F10")]
	private void Update()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x12C3F70", Offset = "0x12C3F70", VA = "0x12C3F70")]
	public void show()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x12C3FE4", Offset = "0x12C3FE4", VA = "0x12C3FE4")]
	public void hide()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x12C2C94", Offset = "0x12C2C94", VA = "0x12C2C94")]
	public void setupUI()
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x12C3578", Offset = "0x12C3578", VA = "0x12C3578")]
	public void initializeUI()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x12C410C", Offset = "0x12C410C", VA = "0x12C410C")]
	public VF_UI()
	{
	}
}
[Token(Token = "0x2000365")]
public class VF_UIELement : MonoBehaviour
{
	[Token(Token = "0x2000366")]
	public enum AnimationState
	{
		[Token(Token = "0x40016D7")]
		increasing,
		[Token(Token = "0x40016D8")]
		unselected,
		[Token(Token = "0x40016D9")]
		selecting,
		[Token(Token = "0x40016DA")]
		selected,
		[Token(Token = "0x40016DB")]
		unselecting,
		[Token(Token = "0x40016DC")]
		decreasing,
		[Token(Token = "0x40016DD")]
		hidden
	}

	[Token(Token = "0x2000367")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7484", Offset = "0xAA7484")]
	private sealed class <unblock>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VF_UIELement <>4__this;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001182")]
			[Address(RVA = "0xE6CE68", Offset = "0xE6CE68", VA = "0xE6CE68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001184")]
			[Address(RVA = "0xE6CEB0", Offset = "0xE6CEB0", VA = "0xE6CEB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xE6CD84", Offset = "0xE6CD84", VA = "0xE6CD84")]
		[DebuggerHidden]
		public <unblock>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xE6CDB0", Offset = "0xE6CDB0", VA = "0xE6CDB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xE6CDB4", Offset = "0xE6CDB4", VA = "0xE6CDB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xE6CE70", Offset = "0xE6CE70", VA = "0xE6CE70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isForcedTouchy;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isForcedGrabby;

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool arHands;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RoundIndicator indicator;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip selectSound;

	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource myAudio;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isLocked;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool ishidden;

	[Token(Token = "0x4001693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool leveleditLocked;

	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite locksprite;

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool donotscale;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image image;

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro text;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent buttonFunction;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int intPayload;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int intPayload2;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string stringPayload;

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string stringPayload2;

	[Token(Token = "0x400169D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject demoLockText;

	[Token(Token = "0x400169E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private HandController handController;

	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material buttonMat;

	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool interactWithPointer;

	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool interactWithCollider;

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string colliderTag;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool availableForSelection;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool selected;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	public bool blocked;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	private bool finishedTransition;

	[Token(Token = "0x40016A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float transitionDuration;

	[Token(Token = "0x40016A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float t;

	[Token(Token = "0x40016A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool colorChange;

	[Token(Token = "0x40016AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	public bool posChange;

	[Token(Token = "0x40016AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float zOffset;

	[Token(Token = "0x40016AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 originalPos;

	[Token(Token = "0x40016AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 offsetPos;

	[Token(Token = "0x40016AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Vector3 currentPos;

	[Token(Token = "0x40016AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Vector3 originalRot;

	[Token(Token = "0x40016B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Vector3 offsetRot;

	[Token(Token = "0x40016B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Vector3 currentRot;

	[Token(Token = "0x40016B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Color defaultColor;

	[Token(Token = "0x40016B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public Color highlightColor;

	[Token(Token = "0x40016B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public Color currentColor;

	[Token(Token = "0x40016B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float rayCastTimer;

	[Token(Token = "0x40016B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float currentScale;

	[Token(Token = "0x40016B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float maxScale;

	[Token(Token = "0x40016B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float minScale;

	[Token(Token = "0x40016B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float widthHeightRatio;

	[Token(Token = "0x40016BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Sprite originalSprite;

	[Token(Token = "0x40016BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AnimationState animState;

	[Token(Token = "0x40016BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public PartsSpawner partsspawner;

	[Token(Token = "0x40016BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public LevelManager levelManager;

	[Token(Token = "0x40016BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool isLevelLoadButton;

	[Token(Token = "0x40016BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private BoxCollider coll;

	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Vector3 collOrigSize;

	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Canvas[] childCanvases;

	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private AllUIElements allUIElements;

	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public bool hideInSandbox;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	public bool hideDuringTutorial;

	[Token(Token = "0x40016C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	public bool reallyhideDuringTutorial;

	[Token(Token = "0x40016C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
	public bool onlyshowineditor;

	[Token(Token = "0x40016C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public bool hideAfterTutorial;

	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
	public bool hideOnUWP;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
	public bool hideOnMobile;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19F")]
	public bool forceShow;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool forceHide;

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	public bool onlyeShowOnSteamVR;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A2")]
	public bool onlyShowOnMobile;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A3")]
	public bool onlyShowOnOculusWhenMobile;

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public bool showOnWave;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool lockedInDemo;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	public bool onlyShowWhenOnline;

	[Token(Token = "0x40016D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public SettingsManager settingsManager;

	[Token(Token = "0x40016D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public NewGameManager gameManager;

	[Token(Token = "0x40016D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public InternetCheck internetCheck;

	[Token(Token = "0x40016D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool isLevelEditor;

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x12C4114", Offset = "0x12C4114", VA = "0x12C4114")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABF074", Offset = "0xABF074")]
	private IEnumerator unblock(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x12C4058", Offset = "0x12C4058", VA = "0x12C4058")]
	public void calibratePositions()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x12C4190", Offset = "0x12C4190", VA = "0x12C4190")]
	private void Start()
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x12C43BC", Offset = "0x12C43BC", VA = "0x12C43BC")]
	public void setDemoLock()
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x12C4458", Offset = "0x12C4458", VA = "0x12C4458")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x12C4A30", Offset = "0x12C4A30", VA = "0x12C4A30")]
	public void setLock(bool lockstatus)
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x12B7B10", Offset = "0x12B7B10", VA = "0x12B7B10")]
	public void hide()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x12B777C", Offset = "0x12B777C", VA = "0x12B777C")]
	public void show()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x12C45E8", Offset = "0x12C45E8", VA = "0x12C45E8")]
	public void transitToState(AnimationState newstate)
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x12C4BF0", Offset = "0x12C4BF0", VA = "0x12C4BF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x12C4FBC", Offset = "0x12C4FBC", VA = "0x12C4FBC")]
	public void activate(HandController _handController)
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x12C5100", Offset = "0x12C5100", VA = "0x12C5100")]
	public void resetToDefault()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x12C4FA0", Offset = "0x12C4FA0", VA = "0x12C4FA0")]
	public void deactivate()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x12C5220", Offset = "0x12C5220", VA = "0x12C5220")]
	public void press()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x12C53FC", Offset = "0x12C53FC", VA = "0x12C53FC")]
	private void callLevelFunction()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x12C5478", Offset = "0x12C5478", VA = "0x12C5478")]
	private void callFunction()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x12C537C", Offset = "0x12C537C", VA = "0x12C537C")]
	private void callSpawnerFunction()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x12C5494", Offset = "0x12C5494", VA = "0x12C5494")]
	public VF_UIELement()
	{
	}
}
[Token(Token = "0x2000368")]
public class VF_UI_Raycaster : MonoBehaviour
{
	[Token(Token = "0x40016E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string uiTag;

	[Token(Token = "0x40016E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40016E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem p;

	[Token(Token = "0x40016E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform trailHolder;

	[Token(Token = "0x40016E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandController handController;

	[Token(Token = "0x40016E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandController otherHandController;

	[Token(Token = "0x40016E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 lastHitPoint;

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xE7FE74", Offset = "0xE7FE74", VA = "0xE7FE74")]
	private void Start()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xE80038", Offset = "0xE80038", VA = "0xE80038")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xE80444", Offset = "0xE80444", VA = "0xE80444")]
	public VF_UI_Raycaster()
	{
	}
}
[Token(Token = "0x2000369")]
public class VRAltMovement : MonoBehaviour
{
	[Token(Token = "0x6001188")]
	[Address(RVA = "0xE804A0", Offset = "0xE804A0", VA = "0xE804A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xE804A4", Offset = "0xE804A4", VA = "0xE804A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xE804A8", Offset = "0xE804A8", VA = "0xE804A8")]
	public VRAltMovement()
	{
	}
}
[Token(Token = "0x200036A")]
public class VR_UI_ElementHolder : MonoBehaviour
{
	[Token(Token = "0x40016E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VF_UIELement[] items;

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xE80AEC", Offset = "0xE80AEC", VA = "0xE80AEC")]
	public void Start()
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xE80B58", Offset = "0xE80B58", VA = "0xE80B58")]
	public void show()
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xE80BC4", Offset = "0xE80BC4", VA = "0xE80BC4")]
	public void hide()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xE80C30", Offset = "0xE80C30", VA = "0xE80C30")]
	public VR_UI_ElementHolder()
	{
	}
}
[Token(Token = "0x200036B")]
public class ViveportDemo : MonoBehaviour
{
	[Token(Token = "0x200036C")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x600119D")]
		[Address(RVA = "0xE6D04C", Offset = "0xE6D04C", VA = "0xE6D04C", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xE6D1B8", Offset = "0xE6D1B8", VA = "0xE6D1B8", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xE6D294", Offset = "0xE6D294", VA = "0xE6D294")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x40016EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nInitValue;

	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nResult;

	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nWidth;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nHeight;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nXStart;

	[Token(Token = "0x40016EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int nYStart;

	[Token(Token = "0x40016F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string stringToEdit;

	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string StatsCount;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string achivToEdit;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string leaderboardToEdit;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string leaderboardUserName;

	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string leaderboardScore;

	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x40016F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x40016F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string APP_ID;

	[Token(Token = "0x40016FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string APP_KEY;

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xE829E8", Offset = "0xE829E8", VA = "0xE829E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xE82ACC", Offset = "0xE82ACC", VA = "0xE82ACC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xE82AD0", Offset = "0xE82AD0", VA = "0xE82AD0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xE84F20", Offset = "0xE84F20", VA = "0xE84F20")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xE85090", Offset = "0xE85090", VA = "0xE85090")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xE851F4", Offset = "0xE851F4", VA = "0xE851F4")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xE852FC", Offset = "0xE852FC", VA = "0xE852FC")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xE85460", Offset = "0xE85460", VA = "0xE85460")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xE855A4", Offset = "0xE855A4", VA = "0xE855A4")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xE856A4", Offset = "0xE856A4", VA = "0xE856A4")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xE857A4", Offset = "0xE857A4", VA = "0xE857A4")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xE858A4", Offset = "0xE858A4", VA = "0xE858A4")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0xE859A4", Offset = "0xE859A4", VA = "0xE859A4")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x200036D")]
public class ViveportDemo_ArcadeSession : MonoBehaviour
{
	[Token(Token = "0x40016FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40016FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40016FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40016FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xE85B3C", Offset = "0xE85B3C", VA = "0xE85B3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0xE85C20", Offset = "0xE85C20", VA = "0xE85C20")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xE85C24", Offset = "0xE85C24", VA = "0xE85C24")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0xE85CC8", Offset = "0xE85CC8", VA = "0xE85CC8")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x200036E")]
public class ViveportDemo_IAP : MonoBehaviour
{
	[Token(Token = "0x200036F")]
	public class Item
	{
		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ticket;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] items;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string subscription_ticket;

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xE6D29C", Offset = "0xE6D29C", VA = "0xE6D29C")]
		public Item()
		{
		}
	}

	[Token(Token = "0x2000370")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item mItem;

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xE6D30C", Offset = "0xE6D30C", VA = "0xE6D30C", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xE6D39C", Offset = "0xE6D39C", VA = "0xE6D39C", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xE6D46C", Offset = "0xE6D46C", VA = "0xE6D46C", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xE6D570", Offset = "0xE6D570", VA = "0xE6D570", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xE6D620", Offset = "0xE6D620", VA = "0xE6D620", Slot = "8")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xE6D6B0", Offset = "0xE6D6B0", VA = "0xE6D6B0", Slot = "10")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xE6D780", Offset = "0xE6D780", VA = "0xE6D780", Slot = "11")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xE6D850", Offset = "0xE6D850", VA = "0xE6D850", Slot = "12")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xE6D954", Offset = "0xE6D954", VA = "0xE6D954", Slot = "13")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xE6DD98", Offset = "0xE6DD98", VA = "0xE6DD98", Slot = "14")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xE6DE40", Offset = "0xE6DE40", VA = "0xE6DE40", Slot = "9")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xE6DF0C", Offset = "0xE6DF0C", VA = "0xE6DF0C")]
		public Result()
		{
		}
	}

	[Token(Token = "0x4001700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4001703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4001704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x4001706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Result mListener;

	[Token(Token = "0x4001707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xE85D40", Offset = "0xE85D40", VA = "0xE85D40")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xE85E54", Offset = "0xE85E54", VA = "0xE85E54")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xE85E58", Offset = "0xE85E58", VA = "0xE85E58")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xE869AC", Offset = "0xE869AC", VA = "0xE869AC")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xE86A50", Offset = "0xE86A50", VA = "0xE86A50")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x2000371")]
public class SimpleDoorTrigger : MonoBehaviour
{
	[Token(Token = "0x400170C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Door;

	[Token(Token = "0x400170D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float OpenAngleAmount;

	[Token(Token = "0x400170E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float SmoothRotation;

	[Token(Token = "0x400170F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string interactText;

	[Token(Token = "0x4001710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GUIStyle InteractTextStyle;

	[Token(Token = "0x4001711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool init;

	[Token(Token = "0x4001712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool hasEntered;

	[Token(Token = "0x4001713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool doorOpen;

	[Token(Token = "0x4001714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 startAngle;

	[Token(Token = "0x4001715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 openAngle;

	[Token(Token = "0x4001716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Rect interactTextRect;

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x1045424", Offset = "0x1045424", VA = "0x1045424")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x10455FC", Offset = "0x10455FC", VA = "0x10455FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x1045744", Offset = "0x1045744", VA = "0x1045744")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x10457C0", Offset = "0x10457C0", VA = "0x10457C0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x10457C8", Offset = "0x10457C8", VA = "0x10457C8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x1045648", Offset = "0x1045648", VA = "0x1045648")]
	private void HandleDoorRotation()
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x1045704", Offset = "0x1045704", VA = "0x1045704")]
	private void HandleUserInput()
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x1045880", Offset = "0x1045880", VA = "0x1045880")]
	public SimpleDoorTrigger()
	{
	}
}
[Token(Token = "0x2000372")]
public class WaveScenePerception : MonoBehaviour
{
	[Token(Token = "0x60011C0")]
	[Address(RVA = "0xE88B74", Offset = "0xE88B74", VA = "0xE88B74")]
	public WaveScenePerception()
	{
	}
}
[Token(Token = "0x2000373")]
public class WhiteboardProgress : MonoBehaviour
{
	[Token(Token = "0x4001717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] levelnames;

	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] checkmarks;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] checkmarks_medium;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] checkmarks_hard;

	[Token(Token = "0x400171B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject allCompleted;

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0xE895F0", Offset = "0xE895F0", VA = "0xE895F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0xE89834", Offset = "0xE89834", VA = "0xE89834")]
	public WhiteboardProgress()
	{
	}
}
[Token(Token = "0x2000374")]
public class WireClient : MonoBehaviour
{
	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xE89F40", Offset = "0xE89F40", VA = "0xE89F40")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xE89F44", Offset = "0xE89F44", VA = "0xE89F44")]
	private void Update()
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xE89F48", Offset = "0xE89F48", VA = "0xE89F48")]
	public WireClient()
	{
	}
}
[Token(Token = "0x2000375")]
public class WireDrawer : MonoBehaviour
{
	[Token(Token = "0x400171C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x400171D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Vector3> pathNodes;

	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool drawWire;

	[Token(Token = "0x400171F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 oldPos;

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xE89F50", Offset = "0xE89F50", VA = "0xE89F50")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xE89FE4", Offset = "0xE89FE4", VA = "0xE89FE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xE8A10C", Offset = "0xE8A10C", VA = "0xE8A10C")]
	public void buildLine()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0xE8A1EC", Offset = "0xE8A1EC", VA = "0xE8A1EC")]
	public WireDrawer()
	{
	}
}
[Token(Token = "0x2000376")]
public class WireHost : MonoBehaviour
{
	[Token(Token = "0x4001720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WireClient[] clients;

	[Token(Token = "0x4001721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] jacks;

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0xE8A1FC", Offset = "0xE8A1FC", VA = "0xE8A1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xE8A200", Offset = "0xE8A200", VA = "0xE8A200")]
	private void Update()
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xE8A204", Offset = "0xE8A204", VA = "0xE8A204")]
	public WireHost()
	{
	}
}
[Token(Token = "0x2000377")]
public class WorkshopHandler : MonoBehaviour
{
	[Token(Token = "0x2000378")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7494", Offset = "0xAA7494")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string s;

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x249C904", Offset = "0x249C904", VA = "0x249C904")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x249C90C", Offset = "0x249C90C", VA = "0x249C90C")]
		internal bool <unsubscribe>b__0(string item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000379")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA74A4", Offset = "0xAA74A4")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string s;

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x249C8E8", Offset = "0x249C8E8", VA = "0x249C8E8")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x249C8F0", Offset = "0x249C8F0", VA = "0x249C8F0")]
		internal bool <checkLevelsOnStartup>b__0(string item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA74B4", Offset = "0xAA74B4")]
	private sealed class <countDownload>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x249D734", Offset = "0x249D734", VA = "0x249D734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x249D77C", Offset = "0x249D77C", VA = "0x249D77C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x249D668", Offset = "0x249D668", VA = "0x249D668")]
		[DebuggerHidden]
		public <countDownload>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x249D694", Offset = "0x249D694", VA = "0x249D694", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x249D698", Offset = "0x249D698", VA = "0x249D698", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x249D73C", Offset = "0x249D73C", VA = "0x249D73C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA74C4", Offset = "0xAA74C4")]
	private sealed class <getVersion>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WWW GetTextWWW;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string filename;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WorkshopHandler <>4__this;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x249DE40", Offset = "0x249DE40", VA = "0x249DE40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011FA")]
			[Address(RVA = "0x249DE88", Offset = "0x249DE88", VA = "0x249DE88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x249D784", Offset = "0x249D784", VA = "0x249D784")]
		[DebuggerHidden]
		public <getVersion>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x249D7B0", Offset = "0x249D7B0", VA = "0x249D7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x249D7B4", Offset = "0x249D7B4", VA = "0x249D7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x249DE48", Offset = "0x249DE48", VA = "0x249DE48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA74D4", Offset = "0xAA74D4")]
	private sealed class <UploadUpdateLevel>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string s;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorkshopHandler <>4__this;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <w>5__2;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x249D618", Offset = "0x249D618", VA = "0x249D618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001200")]
			[Address(RVA = "0x249D660", Offset = "0x249D660", VA = "0x249D660", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x249CCF0", Offset = "0x249CCF0", VA = "0x249CCF0")]
		[DebuggerHidden]
		public <UploadUpdateLevel>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x249CD1C", Offset = "0x249CD1C", VA = "0x249CD1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x249CD20", Offset = "0x249CD20", VA = "0x249CD20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x249D620", Offset = "0x249D620", VA = "0x249D620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA74E4", Offset = "0xAA74E4")]
	private sealed class <DeleteLevel>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string s;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorkshopHandler <>4__this;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <w>5__2;

		[Token(Token = "0x17000186")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0x249CCA0", Offset = "0x249CCA0", VA = "0x249CCA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0x249CCE8", Offset = "0x249CCE8", VA = "0x249CCE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x249C920", Offset = "0x249C920", VA = "0x249C920")]
		[DebuggerHidden]
		public <DeleteLevel>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x249C94C", Offset = "0x249C94C", VA = "0x249C94C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x249C950", Offset = "0x249C950", VA = "0x249C950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x249CCA8", Offset = "0x249CCA8", VA = "0x249CCA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager levelManager;

	[Token(Token = "0x4001723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> subscribedLevels;

	[Token(Token = "0x4001724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_PublishedFileIdCustom;

	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool downloadingfile;

	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action callbackForLevelInfo;

	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool shouldUpdateIcons;

	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string levelname;

	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string desc;

	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string author;

	[Token(Token = "0x400172B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string version;

	[Token(Token = "0x400172C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _imagehash;

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0xE8A4D4", Offset = "0xE8A4D4", VA = "0xE8A4D4")]
	public void loadWorkshopBrowser()
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xE8A4D8", Offset = "0xE8A4D8", VA = "0xE8A4D8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xE8ACC8", Offset = "0xE8ACC8", VA = "0xE8ACC8")]
	public void checksubscription(string s)
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xE8AD58", Offset = "0xE8AD58", VA = "0xE8AD58")]
	public void subscribe(string s, [Optional] Action callback)
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xE8B640", Offset = "0xE8B640", VA = "0xE8B640")]
	public void unsubscribe(string s, [Optional] Action callback)
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0xE8AE5C", Offset = "0xE8AE5C", VA = "0xE8AE5C")]
	public void saveSubscribedLevels()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xE8A5E0", Offset = "0xE8A5E0", VA = "0xE8A5E0")]
	public void checkLevelsOnStartup()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xE8AFEC", Offset = "0xE8AFEC", VA = "0xE8AFEC")]
	public void downloadFile(string filename)
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xE8B990", Offset = "0xE8B990", VA = "0xE8B990")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABF124", Offset = "0xABF124")]
	private IEnumerator countDownload(string url)
	{
		return null;
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xE8B358", Offset = "0xE8B358", VA = "0xE8B358")]
	public void downloadFile2(string filename)
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xE8B7B8", Offset = "0xE8B7B8", VA = "0xE8B7B8")]
	public void deleteFile(string filename, [Optional] Action callback)
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xE8B9FC", Offset = "0xE8B9FC", VA = "0xE8B9FC")]
	private void reloadSprites(object sender, AsyncCompletedEventArgs e)
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xE8BA84", Offset = "0xE8BA84", VA = "0xE8BA84")]
	private void Update()
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xE8B910", Offset = "0xE8B910", VA = "0xE8B910")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABF184", Offset = "0xABF184")]
	private IEnumerator getVersion(string filename, WWW GetTextWWW)
	{
		return null;
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xE8BAD8", Offset = "0xE8BAD8", VA = "0xE8BAD8")]
	public List<string> getAllItemFolders()
	{
		return null;
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xE8BB44", Offset = "0xE8BB44", VA = "0xE8BB44")]
	public void createItem(string _levelname, string _desc)
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xE8BB48", Offset = "0xE8BB48", VA = "0xE8BB48")]
	public void createItemCustom(string _levelname, string _desc, string _author, string imagehash, string _version)
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xE8BD6C", Offset = "0xE8BD6C", VA = "0xE8BD6C")]
	public void unpublishItem(string _levelname, string _desc)
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xE8BD70", Offset = "0xE8BD70", VA = "0xE8BD70")]
	public void unpublishItemCustom(string _levelname, string _desc, string _author)
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xE8BE9C", Offset = "0xE8BE9C", VA = "0xE8BE9C")]
	public void hideItem()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xE8BEA0", Offset = "0xE8BEA0", VA = "0xE8BEA0")]
	public void OpenAgreement()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xE8BEA4", Offset = "0xE8BEA4", VA = "0xE8BEA4")]
	public void OpenCustomAgreement()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xE8BEEC", Offset = "0xE8BEEC", VA = "0xE8BEEC")]
	public void OpenWorkshop()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xE8BEF0", Offset = "0xE8BEF0", VA = "0xE8BEF0")]
	public void OpenWorkshopCustom()
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xE8BFD8", Offset = "0xE8BFD8", VA = "0xE8BFD8")]
	public void CloseWorkshopCustom()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xE8BC54", Offset = "0xE8BC54", VA = "0xE8BC54")]
	public void addItemInfoAndSubmitCustom(string s)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xE8C054", Offset = "0xE8C054", VA = "0xE8C054")]
	public static string md5(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xE8BFDC", Offset = "0xE8BFDC", VA = "0xE8BFDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABF1E4", Offset = "0xABF1E4")]
	public IEnumerator UploadUpdateLevel(string s)
	{
		return null;
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xE8BE24", Offset = "0xE8BE24", VA = "0xE8BE24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABF244", Offset = "0xABF244")]
	public IEnumerator DeleteLevel(string s)
	{
		return null;
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xE8C100", Offset = "0xE8C100", VA = "0xE8C100")]
	public WorkshopHandler()
	{
	}
}
[Token(Token = "0x200037E")]
public class XRHand : MonoBehaviour
{
	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRNode node;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float primaryTriggerValue;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gripTriggerValue;

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool menuButtonPressed;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool touchpadPressed;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool pointingDevicePressed;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 pointingDevice;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pos;

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion rot;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<XRNodeState> nodestates;

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xE8CA48", Offset = "0xE8CA48", VA = "0xE8CA48")]
	private void Start()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xE8CAF0", Offset = "0xE8CAF0", VA = "0xE8CAF0")]
	public void Update()
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0xE8CEA4", Offset = "0xE8CEA4", VA = "0xE8CEA4")]
	public XRHand()
	{
	}
}
[Token(Token = "0x200037F")]
public class XboxLiveExample : MonoBehaviour
{
	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string debugText;

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xE8CEF0", Offset = "0xE8CEF0", VA = "0xE8CEF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xE8CEF4", Offset = "0xE8CEF4", VA = "0xE8CEF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0xE8CEF8", Offset = "0xE8CEF8", VA = "0xE8CEF8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xE8CF9C", Offset = "0xE8CF9C", VA = "0xE8CF9C")]
	public XboxLiveExample()
	{
	}
}
[Token(Token = "0x2000380")]
public class ZeroGMovement : MonoBehaviour
{
	[Token(Token = "0x600120E")]
	[Address(RVA = "0xE8CFF0", Offset = "0xE8CFF0", VA = "0xE8CFF0")]
	public ZeroGMovement()
	{
	}
}
[Token(Token = "0x2000381")]
public class ZeroGMovementStopper : MonoBehaviour
{
	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audio;

	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float multiplier;

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xE8CFF8", Offset = "0xE8CFF8", VA = "0xE8CFF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xE8D070", Offset = "0xE8D070", VA = "0xE8D070")]
	private void Update()
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0xE8D148", Offset = "0xE8D148", VA = "0xE8D148")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xE8D23C", Offset = "0xE8D23C", VA = "0xE8D23C")]
	public ZeroGMovementStopper()
	{
	}
}
[Token(Token = "0x2000382")]
public class Turn_Move : MonoBehaviour
{
	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TurnX;

	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int TurnY;

	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int TurnZ;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int MoveX;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int MoveY;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int MoveZ;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool World;

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x12B6D80", Offset = "0x12B6D80", VA = "0x12B6D80")]
	private void Start()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x12B6D84", Offset = "0x12B6D84", VA = "0x12B6D84")]
	private void Update()
	{
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x12B6F0C", Offset = "0x12B6F0C", VA = "0x12B6F0C")]
	public Turn_Move()
	{
	}
}
[Token(Token = "0x2000383")]
public class LaunchDelayDestroy : MonoBehaviour
{
	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA74F4", Offset = "0xAA74F4")]
	private sealed class <DestroyCo>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LaunchDelayDestroy <>4__this;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600121C")]
			[Address(RVA = "0xCC2830", Offset = "0xCC2830", VA = "0xCC2830", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0xCC2878", Offset = "0xCC2878", VA = "0xCC2878", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xCC271C", Offset = "0xCC271C", VA = "0xCC271C")]
		[DebuggerHidden]
		public <DestroyCo>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xCC2748", Offset = "0xCC2748", VA = "0xCC2748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xCC274C", Offset = "0xCC274C", VA = "0xCC274C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xCC2838", Offset = "0xCC2838", VA = "0xCC2838", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0xBD2A40", Offset = "0xBD2A40", VA = "0xBD2A40")]
	private void Start()
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0xBD2A6C", Offset = "0xBD2A6C", VA = "0xBD2A6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABF3E4", Offset = "0xABF3E4")]
	private IEnumerator DestroyCo()
	{
		return null;
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0xBD2AD8", Offset = "0xBD2AD8", VA = "0xBD2AD8")]
	public LaunchDelayDestroy()
	{
	}
}
[Token(Token = "0x2000385")]
public class Launcher : MonoBehaviour
{
	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objToLaunch;

	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool launch;

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool continuousLaunch;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 forceRange;

	[Token(Token = "0x400175D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject launchObjParent;

	[Token(Token = "0x600121F")]
	[Address(RVA = "0xBD2AE0", Offset = "0xBD2AE0", VA = "0xBD2AE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0xBD2B54", Offset = "0xBD2B54", VA = "0xBD2B54")]
	private void Launch()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0xBD2E94", Offset = "0xBD2E94", VA = "0xBD2E94")]
	private Color RandomColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0xBD2F1C", Offset = "0xBD2F1C", VA = "0xBD2F1C")]
	public Launcher()
	{
	}
}
[Token(Token = "0x2000386")]
public class Launcher2D : MonoBehaviour
{
	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objToLaunch;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform launchPoint;

	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text infoText;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool launch;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float force;

	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float moveSpeed;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TrajectoryPredictor tp;

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject launchObjParent;

	[Token(Token = "0x6001223")]
	[Address(RVA = "0xBD2F30", Offset = "0xBD2F30", VA = "0xBD2F30")]
	private void Start()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0xBD2FE8", Offset = "0xBD2FE8", VA = "0xBD2FE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0xBD3338", Offset = "0xBD3338", VA = "0xBD3338")]
	private void Launch()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0xBD3558", Offset = "0xBD3558", VA = "0xBD3558")]
	public Launcher2D()
	{
	}
}
[Token(Token = "0x2000387")]
public class LauncherFPS : MonoBehaviour
{
	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform playspace;

	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cameraHead;

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject playspaceProxy;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material lineMat;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color teleportNotPossible;

	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color teleportPossible;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform teleportIndicator;

	[Token(Token = "0x400176D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float force;

	[Token(Token = "0x400176E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float scrollSpeed;

	[Token(Token = "0x400176F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HandController hand;

	[Token(Token = "0x4001770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer teleportIndicatorRenderer1;

	[Token(Token = "0x4001771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MeshRenderer teleportIndicatorRenderer2;

	[Token(Token = "0x4001772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool validFloor;

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool touchpadPressed_LastFrame;

	[Token(Token = "0x4001774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SettingsManager settingsManager;

	[Token(Token = "0x4001775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TrajectoryPredictor tp;

	[Token(Token = "0x4001776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool buttonTeleportOnNextFrame;

	[Token(Token = "0x4001777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool forceButtonTeleport;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform handoverride;

	[Token(Token = "0x4001779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 lerpTarget;

	[Token(Token = "0x400177A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool lerping;

	[Token(Token = "0x400177B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int framesTeleportPressed;

	[Token(Token = "0x6001227")]
	[Address(RVA = "0xBD356C", Offset = "0xBD356C", VA = "0xBD356C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0xBD3694", Offset = "0xBD3694", VA = "0xBD3694")]
	public void ButtonTeleport()
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0xBD36DC", Offset = "0xBD36DC", VA = "0xBD36DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0xBD4134", Offset = "0xBD4134", VA = "0xBD4134")]
	public LauncherFPS()
	{
	}
}
[Token(Token = "0x2000388")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA7504", Offset = "0xAA7504")]
public class TrajectoryPredictor : MonoBehaviour
{
	[Token(Token = "0x2000389")]
	public enum lineMode
	{
		[Token(Token = "0x4001797")]
		DrawRayEditorOnly = 1,
		[Token(Token = "0x4001798")]
		LineRendererBoth
	}

	[Token(Token = "0x200038A")]
	public enum predictionMode
	{
		[Token(Token = "0x400179A")]
		Prediction2D = 2,
		[Token(Token = "0x400179B")]
		Prediction3D
	}

	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA753C", Offset = "0xAA753C")]
	private sealed class <KillLineDelay>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrajectoryPredictor <>4__this;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0xE6C178", Offset = "0xE6C178", VA = "0xE6C178", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0xE6C1C0", Offset = "0xE6C1C0", VA = "0xE6C1C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xE6C030", Offset = "0xE6C030", VA = "0xE6C030")]
		[DebuggerHidden]
		public <KillLineDelay>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xE6C05C", Offset = "0xE6C05C", VA = "0xE6C05C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xE6C060", Offset = "0xE6C060", VA = "0xE6C060", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xE6C180", Offset = "0xE6C180", VA = "0xE6C180", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400177C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lineDistance;

	[Token(Token = "0x400177D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material lineMat;

	[Token(Token = "0x400177E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAC858", Offset = "0xAAC858")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC858", Offset = "0xAAC858")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAC858", Offset = "0xAAC858")]
	public float accuracy;

	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC8D8", Offset = "0xAAC8D8")]
	public int iterationLimit;

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC910", Offset = "0xAAC910")]
	public predictionMode predictionType;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC948", Offset = "0xAAC948")]
	public bool stopOnCollision;

	[Token(Token = "0x4001782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAAC980", Offset = "0xAAC980")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC980", Offset = "0xAAC980")]
	public lineMode debugLineMode;

	[Token(Token = "0x4001783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAC9E0", Offset = "0xAAC9E0")]
	public bool drawDebugOnStart;

	[Token(Token = "0x4001784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACA18", Offset = "0xAACA18")]
	public bool drawDebugOnUpdate;

	[Token(Token = "0x4001785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACA50", Offset = "0xAACA50")]
	public bool drawDebugOnPrediction;

	[Token(Token = "0x4001786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACA88", Offset = "0xAACA88")]
	public float debugLineDuration;

	[Token(Token = "0x4001787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACAC0", Offset = "0xAACAC0")]
	public Color debugLineColor;

	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACAF8", Offset = "0xAACAF8")]
	public float lineRendererThickness;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public RaycastHit hitInfo3D;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public RaycastHit2D hitInfo2D;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public List<Vector3> predictionPoints;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rigidbody rb;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody2D rb2;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool started;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform lineParent;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject debugLineObj;

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float drag;

	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 vel;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 pos;

	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 grav;

	[Token(Token = "0x4001795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int teleportTroughPortal;

	[Token(Token = "0x600122B")]
	[Address(RVA = "0xFF3B74", Offset = "0xFF3B74", VA = "0xFF3B74")]
	private void Start()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xFF3BFC", Offset = "0xFF3BFC", VA = "0xFF3BFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0xFF3FF0", Offset = "0xFF3FF0", VA = "0xFF3FF0")]
	private void LineDebug(List<Vector3> pointList)
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xFF42C4", Offset = "0xFF42C4", VA = "0xFF42C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0xFF4248", Offset = "0xFF4248", VA = "0xFF4248")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABF494", Offset = "0xABF494")]
	private IEnumerator KillLineDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0xFF4370", Offset = "0xFF4370", VA = "0xFF4370")]
	public void Predict3D(Vector3 startPos, Vector3 velocity, Vector3 gravity, float linearDrag = 0f)
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xFF4A08", Offset = "0xFF4A08", VA = "0xFF4A08")]
	public void Predict2D(Vector3 startPos, Vector2 velocity, Vector2 gravity, float linearDrag = 0f)
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0xFF3F7C", Offset = "0xFF3F7C", VA = "0xFF3F7C")]
	public void Predict3D(Rigidbody rb)
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xFF3F08", Offset = "0xFF3F08", VA = "0xFF3F08")]
	public void Predict2D(Rigidbody2D rb)
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xFF4A28", Offset = "0xFF4A28", VA = "0xFF4A28")]
	public static Vector3[] GetPoints3D(Vector3 startPos, Vector3 velocity, Vector3 gravity, float linearDrag = 0f, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true)
	{
		return null;
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xFF4BB8", Offset = "0xFF4BB8", VA = "0xFF4BB8")]
	public static Vector3[] GetPoints2D(Vector3 startPos, Vector2 velocity, Vector2 gravity, float linearDrag = 0f, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true)
	{
		return null;
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0xFF4D4C", Offset = "0xFF4D4C", VA = "0xFF4D4C")]
	public static Vector3[] GetPoints3D(Rigidbody rb, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true)
	{
		return null;
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0xFF4E8C", Offset = "0xFF4E8C", VA = "0xFF4E8C")]
	public static Vector3[] GetPoints2D(Rigidbody2D rb, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true)
	{
		return null;
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0xFF4FD0", Offset = "0xFF4FD0", VA = "0xFF4FD0")]
	public static RaycastHit GetHitInfo3D(Vector3 startPos, Vector3 velocity, Vector3 gravity, float linearDrag = 0f, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0xFF5160", Offset = "0xFF5160", VA = "0xFF5160")]
	public static RaycastHit GetHitInfo3D(Rigidbody rb, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0xFF5298", Offset = "0xFF5298", VA = "0xFF5298")]
	public static RaycastHit2D GetHitInfo2D(Vector3 startPos, Vector2 velocity, Vector2 gravity, float linearDrag = 0f, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true)
	{
		return default(RaycastHit2D);
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0xFF5420", Offset = "0xFF5420", VA = "0xFF5420")]
	public static RaycastHit2D GetHitInfo2D(Rigidbody2D rb, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true)
	{
		return default(RaycastHit2D);
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0xFF4398", Offset = "0xFF4398", VA = "0xFF4398")]
	private void PerformPrediction()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0xFF555C", Offset = "0xFF555C", VA = "0xFF555C")]
	public TrajectoryPredictor()
	{
	}
}
[Token(Token = "0x200038C")]
public class VFX_Rotate : MonoBehaviour
{
	[Token(Token = "0x40017A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x12C2BE4", Offset = "0x12C2BE4", VA = "0x12C2BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x12C2BE8", Offset = "0x12C2BE8", VA = "0x12C2BE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x12C2C68", Offset = "0x12C2C68", VA = "0x12C2C68")]
	public VFX_Rotate()
	{
	}
}
[Token(Token = "0x200038D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA754C", Offset = "0xAA754C")]
public class CombineChildren : MonoBehaviour
{
	[Token(Token = "0x40017A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool generateTriangleStrips;

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x10867C0", Offset = "0x10867C0", VA = "0x10867C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x10875CC", Offset = "0x10875CC", VA = "0x10875CC")]
	public CombineChildren()
	{
	}
}
[Token(Token = "0x200038E")]
public class MeshCombineUtility
{
	[Token(Token = "0x200038F")]
	public struct MeshInstance
	{
		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh mesh;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int subMeshIndex;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Matrix4x4 transform;
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0xBE9F84", Offset = "0xBE9F84", VA = "0xBE9F84")]
	public static Mesh Combine(MeshInstance[] combines, bool generateStrips)
	{
		return null;
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0xBEAAC4", Offset = "0xBEAAC4", VA = "0xBEAAC4")]
	private static void Copy(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0xBEABA4", Offset = "0xBEABA4", VA = "0xBEABA4")]
	private static void CopyNormal(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0xBEADB8", Offset = "0xBEADB8", VA = "0xBEADB8")]
	private static void Copy(int vertexcount, Vector2[] src, Vector2[] dst, ref int offset)
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0xBEAE3C", Offset = "0xBEAE3C", VA = "0xBEAE3C")]
	private static void CopyColors(int vertexcount, Color[] src, Color[] dst, ref int offset)
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0xBEACA8", Offset = "0xBEACA8", VA = "0xBEACA8")]
	private static void CopyTangents(int vertexcount, Vector4[] src, Vector4[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0xBEAEC0", Offset = "0xBEAEC0", VA = "0xBEAEC0")]
	public MeshCombineUtility()
	{
	}
}
namespace TrajectoryExample
{
	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA7584", Offset = "0xAA7584")]
	public class MouseOrbit : MonoBehaviour
	{
		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xSpeed;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ySpeed;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float smoothSpeed;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMinLimit;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float yMaxLimit;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceMin;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float distanceMax;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float x;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float y;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float prevRealTime;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float thisRealTime;

		[Token(Token = "0x1700018C")]
		public float deltaTime
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0xBEF860", Offset = "0xBEF860", VA = "0xBEF860")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xBEF5E8", Offset = "0xBEF5E8", VA = "0xBEF5E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xBEF6CC", Offset = "0xBEF6CC", VA = "0xBEF6CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xBEF8BC", Offset = "0xBEF8BC", VA = "0xBEF8BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xBEFC08", Offset = "0xBEFC08", VA = "0xBEFC08")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xBEFC38", Offset = "0xBEFC38", VA = "0xBEFC38")]
		public MouseOrbit()
		{
		}
	}
}
namespace Wilberforce.VAO
{
	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA75BC", Offset = "0xAA75BC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xAA75BC", Offset = "0xAA75BC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA75BC", Offset = "0xAA75BC")]
	public class VAOEffect : MonoBehaviour
	{
		[Token(Token = "0x2000392")]
		public enum EffectMode
		{
			[Token(Token = "0x4001805")]
			Simple = 1,
			[Token(Token = "0x4001806")]
			ColorTint,
			[Token(Token = "0x4001807")]
			ColorBleed
		}

		[Token(Token = "0x2000393")]
		public enum LuminanceModeType
		{
			[Token(Token = "0x4001809")]
			Luma = 1,
			[Token(Token = "0x400180A")]
			HSVValue
		}

		[Token(Token = "0x2000394")]
		public enum GiBlurAmmount
		{
			[Token(Token = "0x400180C")]
			Auto = 1,
			[Token(Token = "0x400180D")]
			Less,
			[Token(Token = "0x400180E")]
			More
		}

		[Token(Token = "0x2000395")]
		public enum CullingPrepassModeType
		{
			[Token(Token = "0x4001810")]
			Off,
			[Token(Token = "0x4001811")]
			Greedy,
			[Token(Token = "0x4001812")]
			Careful
		}

		[Token(Token = "0x2000396")]
		public enum AdaptiveSamplingType
		{
			[Token(Token = "0x4001814")]
			Disabled,
			[Token(Token = "0x4001815")]
			EnabledAutomatic,
			[Token(Token = "0x4001816")]
			EnabledManual
		}

		[Token(Token = "0x2000397")]
		public enum BlurModeType
		{
			[Token(Token = "0x4001818")]
			Disabled,
			[Token(Token = "0x4001819")]
			Basic,
			[Token(Token = "0x400181A")]
			Enhanced
		}

		[Token(Token = "0x2000398")]
		public enum ColorBleedSelfOcclusionFixLevelType
		{
			[Token(Token = "0x400181C")]
			Off,
			[Token(Token = "0x400181D")]
			Soft,
			[Token(Token = "0x400181E")]
			Hard
		}

		[Token(Token = "0x2000399")]
		public enum ScreenTextureFormat
		{
			[Token(Token = "0x4001820")]
			Auto,
			[Token(Token = "0x4001821")]
			ARGB32,
			[Token(Token = "0x4001822")]
			ARGBHalf,
			[Token(Token = "0x4001823")]
			ARGBFloat,
			[Token(Token = "0x4001824")]
			Default,
			[Token(Token = "0x4001825")]
			DefaultHDR
		}

		[Token(Token = "0x200039A")]
		public enum FarPlaneSourceType
		{
			[Token(Token = "0x4001827")]
			ProjectionParams,
			[Token(Token = "0x4001828")]
			Camera
		}

		[Token(Token = "0x200039B")]
		public enum DistanceFalloffModeType
		{
			[Token(Token = "0x400182A")]
			Off,
			[Token(Token = "0x400182B")]
			Absolute,
			[Token(Token = "0x400182C")]
			Relative
		}

		[Token(Token = "0x200039C")]
		public enum VAOCameraEventType
		{
			[Token(Token = "0x400182E")]
			AfterLighting,
			[Token(Token = "0x400182F")]
			BeforeReflections,
			[Token(Token = "0x4001830")]
			BeforeImageEffectsOpaque,
			[Token(Token = "0x4001831")]
			BeforeLighting,
			[Token(Token = "0x4001832")]
			AfterForwardAlpha
		}

		[Token(Token = "0x200039D")]
		private enum ShaderPass
		{
			[Token(Token = "0x4001834")]
			BasicNoise,
			[Token(Token = "0x4001835")]
			BasicNoiseColorBleed,
			[Token(Token = "0x4001836")]
			BasicNoiseGBuffer,
			[Token(Token = "0x4001837")]
			BasicNoiseColorBleedGBuffer,
			[Token(Token = "0x4001838")]
			BasicNoisecullingPrepassType,
			[Token(Token = "0x4001839")]
			BasicNoiseColorBleedcullingPrepassType,
			[Token(Token = "0x400183A")]
			BasicNoiseGBuffercullingPrepassType,
			[Token(Token = "0x400183B")]
			BasicNoiseColorBleedGBuffercullingPrepassType,
			[Token(Token = "0x400183C")]
			StandardBlurUniform,
			[Token(Token = "0x400183D")]
			EnhancedBlurFirst,
			[Token(Token = "0x400183E")]
			EnhancedBlurSecond,
			[Token(Token = "0x400183F")]
			StandardBlurUniformColorbleed,
			[Token(Token = "0x4001840")]
			EnhancedBlurFirstColorbleed,
			[Token(Token = "0x4001841")]
			EnhancedBlurSecondColorbleed,
			[Token(Token = "0x4001842")]
			StandardBlurUniformGBuffer,
			[Token(Token = "0x4001843")]
			EnhancedBlurFirstGBuffer,
			[Token(Token = "0x4001844")]
			EnhancedBlurSecondGBuffer,
			[Token(Token = "0x4001845")]
			StandardBlurUniformColorbleedGBuffer,
			[Token(Token = "0x4001846")]
			EnhancedBlurFirstColorbleedGBuffer,
			[Token(Token = "0x4001847")]
			EnhancedBlurSecondColorbleedGBuffer,
			[Token(Token = "0x4001848")]
			MixingBasic,
			[Token(Token = "0x4001849")]
			MixingColorbleed,
			[Token(Token = "0x400184A")]
			MixingAOOnly,
			[Token(Token = "0x400184B")]
			YAxisCorrectCopy
		}

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader vaoShader;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Radius;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Power;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Presence;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ColorBleedPresence;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ColorbleedHueSuppresionEnabled;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float ColorBleedHueSuppresionWidth;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ColorBleedHueSuppresionThreshold;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ColorBleedHueSuppresionSaturationThreshold;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ColorBleedHueSuppresionSaturationWidth;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float ColorBleedHueSuppresionBrightness;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool MaxRadiusEnabled;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float MaxRadius;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public DistanceFalloffModeType DistanceFalloffMode;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float DistanceFalloffStartAbsolute;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float DistanceFalloffStartRelative;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float DistanceFalloffSpeedAbsolute;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float DistanceFalloffSpeedRelative;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int Quality;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool OutputAOOnly;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public BlurModeType BlurMode;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int EnhancedBlurSize;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float EnhancedBlurDeviation;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ColorBleedSelfOcclusionFixLevelType ColorBleedSelfOcclusionFixLevel;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public AdaptiveSamplingType AdaptiveType;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float AdaptiveQuality;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float AdaptiveQualityCoefficient;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float AdaptiveMin;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float AdaptiveMax;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public CullingPrepassModeType CullingPrepassMode;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int DoomFactor;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool IsLumaSensitive;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float LumaThreshold;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float LumaKneeLinearity;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float LumaKneeWidth;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public EffectMode Mode;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public LuminanceModeType LuminanceMode;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Color ColorTint;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public FarPlaneSourceType FarPlaneSource;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float ColorBleedPower;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int ColorBleedQuality;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool GiBackfaces;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int Downsampling;

		[Token(Token = "0x40017DD")]
		private const int noiseSize = 3;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool isSupported;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material VAOMaterial;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool CommandBufferEnabled;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public ScreenTextureFormat IntermediateScreenTextureFormat;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool UseGBuffer;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		public bool ForcedSwitchPerformed;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public VAOCameraEventType VaoCameraEvent;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Dictionary<CameraEvent, CommandBuffer> cameraEventsRegistered;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool isCommandBufferAlive;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector4[] gaussian;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float gaussianWeight;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float lastDeviation;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Camera myCamera;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector4[] samplesLarge;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int lastSamplesLength;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int lastDownsampling;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private CullingPrepassModeType lastcullingPrepassType;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int lastDoomFactor;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private BlurModeType lastBlurMode;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool lastEnhancedBlur;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private EffectMode lastMode;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool lastUseGBuffer;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private AdaptiveSamplingType lastAdaptiveType;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool lastOutputAOOnly;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private LuminanceModeType lastLuminanceMode;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private bool lastIsLumaSensitive;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private CameraEvent lastCameraEvent;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool lastIsHDR;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
		private bool isHDR;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private ScreenTextureFormat lastIntermediateScreenTextureFormat;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector4[] adaptiveSamples;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector4[] carefulCache;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector4[] samp2;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector4[] samp4;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector4[] samp8;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector4[] samp16;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector4[] samp32;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Vector4[] samp64;

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x12BD240", Offset = "0x12BD240", VA = "0x12BD240")]
		private ShaderPass GetBlurPass(EffectMode mode, BlurModeType blurMode, bool useGBuffer, bool isFirstPass)
		{
			return default(ShaderPass);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x12BD2C4", Offset = "0x12BD2C4", VA = "0x12BD2C4")]
		private ShaderPass GetNoisePass(EffectMode mode, bool isAdaptive, bool useGBuffer, bool iscullingPrepassType)
		{
			return default(ShaderPass);
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x12BD31C", Offset = "0x12BD31C", VA = "0x12BD31C")]
		private ShaderPass GetMixingPass(EffectMode mode, bool aoOnly, LuminanceModeType lumaMode, bool isLuma)
		{
			return default(ShaderPass);
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x12BD338", Offset = "0x12BD338", VA = "0x12BD338")]
		private void ReportError(string error)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x12BD3F8", Offset = "0x12BD3F8", VA = "0x12BD3F8")]
		private void ReportWarning(string error)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x12BD4B8", Offset = "0x12BD4B8", VA = "0x12BD4B8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x12BD51C", Offset = "0x12BD51C", VA = "0x12BD51C")]
		private void EnsureCommandBuffer(bool settingsDirty = false)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x12BE234", Offset = "0x12BE234", VA = "0x12BE234")]
		private CameraEvent GetCameraEvent(VAOCameraEventType vaoCameraEvent)
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x12BE254", Offset = "0x12BE254", VA = "0x12BE254")]
		private void TeardownCommandBuffer()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x12BD634", Offset = "0x12BD634", VA = "0x12BD634")]
		private void CreateCommandBuffer()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x12BE658", Offset = "0x12BE658", VA = "0x12BE658")]
		private void Start()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x12BE9CC", Offset = "0x12BE9CC", VA = "0x12BE9CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x12BEBEC", Offset = "0x12BEBEC", VA = "0x12BEBEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x12BEBF0", Offset = "0x12BEBF0", VA = "0x12BEBF0")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x12BECFC", Offset = "0x12BECFC", VA = "0x12BECFC")]
		private bool CheckSettingsChanges()
		{
			return default(bool);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x12BEE64", Offset = "0x12BEE64", VA = "0x12BEE64")]
		private void TrySetUniforms()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x12C02FC", Offset = "0x12C02FC", VA = "0x12C02FC")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x12C03B4", Offset = "0x12C03B4", VA = "0x12C03B4")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x12BE52C", Offset = "0x12BE52C", VA = "0x12BE52C")]
		private void EnsureMaterials()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x12C044C", Offset = "0x12C044C", VA = "0x12C044C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x12BFF90", Offset = "0x12BFF90", VA = "0x12BFF90")]
		private Vector4[] GetAdaptiveSamples()
		{
			return null;
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x12C0030", Offset = "0x12C0030", VA = "0x12C0030")]
		private Vector4[] GetCarefulDoomSamples(Vector4[] samples, Vector4[] carefulSamples)
		{
			return null;
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x12BE894", Offset = "0x12BE894", VA = "0x12BE894")]
		private Vector4[] GenerateAdaptiveSamples()
		{
			return null;
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x12BFF1C", Offset = "0x12BFF1C", VA = "0x12BFF1C")]
		private float GetDepthForScreenSize(Camera camera, float sizeOnScreen)
		{
			return default(float);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x12BFE8C", Offset = "0x12BFE8C", VA = "0x12BFE8C")]
		private bool isCameraHDR(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x12BFF68", Offset = "0x12BFF68", VA = "0x12BFF68")]
		private bool MustForceFlip(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x12BE628", Offset = "0x12BE628", VA = "0x12BE628")]
		private RenderTextureFormat GetRenderTextureFormat(ScreenTextureFormat format, bool isHDR)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x12C0110", Offset = "0x12C0110", VA = "0x12C0110")]
		private Vector4[] GenerateGaussian(int size, float d, out float gaussianWeight)
		{
			return null;
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x12BFF70", Offset = "0x12BFF70", VA = "0x12BFF70")]
		private void SetSampleSetNoBuffer(string name, Material VAOMaterial, Vector4[] samples)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x12BFFBC", Offset = "0x12BFFBC", VA = "0x12BFFBC")]
		private void SetSampleSet(string name, Material VAOMaterial, Vector4[] samples)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x12C0A90", Offset = "0x12C0A90", VA = "0x12C0A90")]
		public VAOEffect()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x200039E")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x200039F")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x20003A0")]
	public class Leaderboard
	{
		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACB60", Offset = "0xAACB60")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACB70", Offset = "0xAACB70")]
		private int <Score>k__BackingField;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACB80", Offset = "0xAACB80")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x1700018D")]
		public int Rank
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0xBD4258", Offset = "0xBD4258", VA = "0xBD4258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF554", Offset = "0xABF554")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600127F")]
			[Address(RVA = "0xBD4260", Offset = "0xBD4260", VA = "0xBD4260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF564", Offset = "0xABF564")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public int Score
		{
			[Token(Token = "0x6001280")]
			[Address(RVA = "0xBD4268", Offset = "0xBD4268", VA = "0xBD4268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF574", Offset = "0xABF574")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001281")]
			[Address(RVA = "0xBD4270", Offset = "0xBD4270", VA = "0xBD4270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF584", Offset = "0xABF584")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public string UserName
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0xBD4278", Offset = "0xBD4278", VA = "0xBD4278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF594", Offset = "0xABF594")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001283")]
			[Address(RVA = "0xBD4280", Offset = "0xBD4280", VA = "0xBD4280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF5A4", Offset = "0xABF5A4")]
			set
			{
			}
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xBD4288", Offset = "0xBD4288", VA = "0xBD4288")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class Api
	{
		[Token(Token = "0x20003A2")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x600128B")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x600128C")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x600128D")]
			[Address(RVA = "0xE90520", Offset = "0xE90520", VA = "0xE90520")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string VERSION;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string _appId;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string _appKey;

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x1345578", Offset = "0x1345578", VA = "0x1345578")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x1345800", Offset = "0x1345800", VA = "0x1345800")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x1345AB8", Offset = "0x1345AB8", VA = "0x1345AB8")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x1345CF0", Offset = "0x1345CF0", VA = "0x1345CF0")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x1345EB4", Offset = "0x1345EB4", VA = "0x1345EB4")]
		public Api()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class User
	{
		[Token(Token = "0x600128E")]
		[Address(RVA = "0x12BA43C", Offset = "0x12BA43C", VA = "0x12BA43C")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x12BA554", Offset = "0x12BA554", VA = "0x12BA554")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x12BA66C", Offset = "0x12BA66C", VA = "0x12BA66C")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x12BA784", Offset = "0x12BA784", VA = "0x12BA784")]
		public User()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class UserStats
	{
		[Token(Token = "0x20003A5")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4001857")]
			GlobalData,
			[Token(Token = "0x4001858")]
			GlobalDataAroundUser,
			[Token(Token = "0x4001859")]
			LocalData,
			[Token(Token = "0x400185A")]
			LocalDataAroundUser
		}

		[Token(Token = "0x20003A6")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x400185C")]
			AllTime,
			[Token(Token = "0x400185D")]
			Daily,
			[Token(Token = "0x400185E")]
			Weekly,
			[Token(Token = "0x400185F")]
			Monthly
		}

		[Token(Token = "0x20003A7")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4001861")]
			None,
			[Token(Token = "0x4001862")]
			Ascending,
			[Token(Token = "0x4001863")]
			Descending
		}

		[Token(Token = "0x20003A8")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4001865")]
			None,
			[Token(Token = "0x4001866")]
			Numeric,
			[Token(Token = "0x4001867")]
			TimeSeconds,
			[Token(Token = "0x4001868")]
			TimeMilliSeconds
		}

		[Token(Token = "0x20003A9")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x400186A")]
			None,
			[Token(Token = "0x400186B")]
			KeepBest,
			[Token(Token = "0x400186C")]
			ForceUpdate
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x12BB4C4", Offset = "0x12BB4C4", VA = "0x12BB4C4")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x12BB734", Offset = "0x12BB734", VA = "0x12BB734")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x12BB9A4", Offset = "0x12BB9A4", VA = "0x12BB9A4")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x12BBAF4", Offset = "0x12BBAF4", VA = "0x12BBAF4")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x12BBC4C", Offset = "0x12BBC4C", VA = "0x12BBC4C")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x12BBD9C", Offset = "0x12BBD9C", VA = "0x12BBD9C")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x12BBEF4", Offset = "0x12BBEF4", VA = "0x12BBEF4")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x12BC164", Offset = "0x12BC164", VA = "0x12BC164")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x12BC254", Offset = "0x12BC254", VA = "0x12BC254")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x12BC344", Offset = "0x12BC344", VA = "0x12BC344")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x12BC434", Offset = "0x12BC434", VA = "0x12BC434")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x12BC524", Offset = "0x12BC524", VA = "0x12BC524")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x12BC938", Offset = "0x12BC938", VA = "0x12BC938")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x12BCC54", Offset = "0x12BCC54", VA = "0x12BCC54")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x12BCEE8", Offset = "0x12BCEE8", VA = "0x12BCEE8")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x12BD000", Offset = "0x12BD000", VA = "0x12BD000")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x12BD118", Offset = "0x12BD118", VA = "0x12BD118")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x12BD230", Offset = "0x12BD230", VA = "0x12BD230")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x1346EAC", Offset = "0x1346EAC", VA = "0x1346EAC")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class IAPurchase
	{
		[Token(Token = "0x20003AC")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x400186D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x60012B0")]
			[Address(RVA = "0xCBC9A0", Offset = "0xCBC9A0", VA = "0xCBC9A0")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x60012B1")]
			[Address(RVA = "0xCBCA08", Offset = "0xCBCA08", VA = "0xCBCA08")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x60012B2")]
			[Address(RVA = "0xCBCA78", Offset = "0xCBCA78", VA = "0xCBCA78", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x60012B3")]
			[Address(RVA = "0xCBCF94", Offset = "0xCBCF94", VA = "0xCBCF94")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x60012B4")]
			[Address(RVA = "0xCBD004", Offset = "0xCBD004", VA = "0xCBD004", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x60012B5")]
			[Address(RVA = "0xCBD520", Offset = "0xCBD520", VA = "0xCBD520")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xCBD590", Offset = "0xCBD590", VA = "0xCBD590", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xCBDB3C", Offset = "0xCBDB3C", VA = "0xCBDB3C")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x60012B8")]
			[Address(RVA = "0xCBDBAC", Offset = "0xCBDBAC", VA = "0xCBDBAC", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x60012B9")]
			[Address(RVA = "0xCBE5A0", Offset = "0xCBE5A0", VA = "0xCBE5A0")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x60012BA")]
			[Address(RVA = "0xCBE610", Offset = "0xCBE610", VA = "0xCBE610", Slot = "8")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x60012BB")]
			[Address(RVA = "0xCBEBC8", Offset = "0xCBEBC8", VA = "0xCBEBC8")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60012BC")]
			[Address(RVA = "0xCBEC38", Offset = "0xCBEC38", VA = "0xCBEC38", Slot = "9")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60012BD")]
			[Address(RVA = "0xCBF148", Offset = "0xCBF148", VA = "0xCBF148")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x60012BE")]
			[Address(RVA = "0xCBF1B8", Offset = "0xCBF1B8", VA = "0xCBF1B8", Slot = "10")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x60012BF")]
			[Address(RVA = "0xCBF6C8", Offset = "0xCBF6C8", VA = "0xCBF6C8")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x60012C0")]
			[Address(RVA = "0xCBF738", Offset = "0xCBF738", VA = "0xCBF738", Slot = "11")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x60012C1")]
			[Address(RVA = "0xCBFCF0", Offset = "0xCBFCF0", VA = "0xCBFCF0")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60012C2")]
			[Address(RVA = "0xCBFD60", Offset = "0xCBFD60", VA = "0xCBFD60", Slot = "12")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60012C3")]
			[Address(RVA = "0xCC0290", Offset = "0xCC0290", VA = "0xCC0290")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60012C4")]
			[Address(RVA = "0xCC0300", Offset = "0xCC0300", VA = "0xCC0300", Slot = "13")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x20003AD")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x60012C5")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x60012C6")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x60012C7")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x60012C8")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x60012C9")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x60012CA")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x60012CB")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x60012CC")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x60012CD")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x60012CE")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x60012CF")]
			[Address(RVA = "0xCBC998", Offset = "0xCBC998", VA = "0xCBC998")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x20003AE")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0xCC06F0", Offset = "0xCC06F0", VA = "0xCC06F0", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x60012D1")]
			[Address(RVA = "0xCC06F4", Offset = "0xCC06F4", VA = "0xCC06F4", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xCC06F8", Offset = "0xCC06F8", VA = "0xCC06F8", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60012D3")]
			[Address(RVA = "0xCC06FC", Offset = "0xCC06FC", VA = "0xCC06FC", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x60012D4")]
			[Address(RVA = "0xCC0700", Offset = "0xCC0700", VA = "0xCC0700", Slot = "8")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x60012D5")]
			[Address(RVA = "0xCC0704", Offset = "0xCC0704", VA = "0xCC0704", Slot = "9")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x60012D6")]
			[Address(RVA = "0xCC0708", Offset = "0xCC0708", VA = "0xCC0708", Slot = "10")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60012D7")]
			[Address(RVA = "0xCC070C", Offset = "0xCC070C", VA = "0xCC070C", Slot = "11")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60012D8")]
			[Address(RVA = "0xCC0710", Offset = "0xCC0710", VA = "0xCC0710", Slot = "12")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60012D9")]
			[Address(RVA = "0xCC0714", Offset = "0xCC0714", VA = "0xCC0714", Slot = "13")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60012DA")]
			[Address(RVA = "0xCC0718", Offset = "0xCC0718", VA = "0xCC0718", Slot = "14")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x60012DB")]
			[Address(RVA = "0xCC071C", Offset = "0xCC071C", VA = "0xCC071C")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x20003AF")]
		public class QueryResponse
		{
			[Token(Token = "0x400186E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACB90", Offset = "0xAACB90")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x400186F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACBA0", Offset = "0xAACBA0")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACBB0", Offset = "0xAACBB0")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACBC0", Offset = "0xAACBC0")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACBD0", Offset = "0xAACBD0")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACBE0", Offset = "0xAACBE0")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000190")]
			public string order_id
			{
				[Token(Token = "0x60012DC")]
				[Address(RVA = "0xCC0724", Offset = "0xCC0724", VA = "0xCC0724")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF5B4", Offset = "0xABF5B4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012DD")]
				[Address(RVA = "0xCC072C", Offset = "0xCC072C", VA = "0xCC072C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF5C4", Offset = "0xABF5C4")]
				set
				{
				}
			}

			[Token(Token = "0x17000191")]
			public string purchase_id
			{
				[Token(Token = "0x60012DE")]
				[Address(RVA = "0xCC0734", Offset = "0xCC0734", VA = "0xCC0734")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF5D4", Offset = "0xABF5D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012DF")]
				[Address(RVA = "0xCC073C", Offset = "0xCC073C", VA = "0xCC073C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF5E4", Offset = "0xABF5E4")]
				set
				{
				}
			}

			[Token(Token = "0x17000192")]
			public string status
			{
				[Token(Token = "0x60012E0")]
				[Address(RVA = "0xCC0744", Offset = "0xCC0744", VA = "0xCC0744")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF5F4", Offset = "0xABF5F4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012E1")]
				[Address(RVA = "0xCC074C", Offset = "0xCC074C", VA = "0xCC074C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF604", Offset = "0xABF604")]
				set
				{
				}
			}

			[Token(Token = "0x17000193")]
			public string price
			{
				[Token(Token = "0x60012E2")]
				[Address(RVA = "0xCC0754", Offset = "0xCC0754", VA = "0xCC0754")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF614", Offset = "0xABF614")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012E3")]
				[Address(RVA = "0xCC075C", Offset = "0xCC075C", VA = "0xCC075C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF624", Offset = "0xABF624")]
				set
				{
				}
			}

			[Token(Token = "0x17000194")]
			public string currency
			{
				[Token(Token = "0x60012E4")]
				[Address(RVA = "0xCC0764", Offset = "0xCC0764", VA = "0xCC0764")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF634", Offset = "0xABF634")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012E5")]
				[Address(RVA = "0xCC076C", Offset = "0xCC076C", VA = "0xCC076C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF644", Offset = "0xABF644")]
				set
				{
				}
			}

			[Token(Token = "0x17000195")]
			public long paid_timestamp
			{
				[Token(Token = "0x60012E6")]
				[Address(RVA = "0xCC0774", Offset = "0xCC0774", VA = "0xCC0774")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF654", Offset = "0xABF654")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60012E7")]
				[Address(RVA = "0xCC077C", Offset = "0xCC077C", VA = "0xCC077C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF664", Offset = "0xABF664")]
				set
				{
				}
			}

			[Token(Token = "0x60012E8")]
			[Address(RVA = "0xCBE598", Offset = "0xCBE598", VA = "0xCBE598")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x20003B0")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4001874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACBF0", Offset = "0xAACBF0")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4001875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACC00", Offset = "0xAACC00")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4001876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACC10", Offset = "0xAACC10")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000196")]
			public long create_time
			{
				[Token(Token = "0x60012E9")]
				[Address(RVA = "0xCC07F4", Offset = "0xCC07F4", VA = "0xCC07F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF674", Offset = "0xABF674")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60012EA")]
				[Address(RVA = "0xCC07FC", Offset = "0xCC07FC", VA = "0xCC07FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF684", Offset = "0xABF684")]
				set
				{
				}
			}

			[Token(Token = "0x17000197")]
			public string payment_method
			{
				[Token(Token = "0x60012EB")]
				[Address(RVA = "0xCC0804", Offset = "0xCC0804", VA = "0xCC0804")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF694", Offset = "0xABF694")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012EC")]
				[Address(RVA = "0xCC080C", Offset = "0xCC080C", VA = "0xCC080C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF6A4", Offset = "0xABF6A4")]
				set
				{
				}
			}

			[Token(Token = "0x17000198")]
			public string status
			{
				[Token(Token = "0x60012ED")]
				[Address(RVA = "0xCC0814", Offset = "0xCC0814", VA = "0xCC0814")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF6B4", Offset = "0xABF6B4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012EE")]
				[Address(RVA = "0xCC081C", Offset = "0xCC081C", VA = "0xCC081C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF6C4", Offset = "0xABF6C4")]
				set
				{
				}
			}

			[Token(Token = "0x60012EF")]
			[Address(RVA = "0xCC0824", Offset = "0xCC0824", VA = "0xCC0824")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x20003B1")]
		public class StatusDetail
		{
			[Token(Token = "0x4001877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACC20", Offset = "0xAACC20")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4001878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACC30", Offset = "0xAACC30")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4001879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACC40", Offset = "0xAACC40")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000199")]
			public long date_next_charge
			{
				[Token(Token = "0x60012F0")]
				[Address(RVA = "0xCC07BC", Offset = "0xCC07BC", VA = "0xCC07BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF6D4", Offset = "0xABF6D4")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60012F1")]
				[Address(RVA = "0xCC07C4", Offset = "0xCC07C4", VA = "0xCC07C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF6E4", Offset = "0xABF6E4")]
				set
				{
				}
			}

			[Token(Token = "0x1700019A")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x60012F2")]
				[Address(RVA = "0xCC07CC", Offset = "0xCC07CC", VA = "0xCC07CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF6F4", Offset = "0xABF6F4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012F3")]
				[Address(RVA = "0xCC07D4", Offset = "0xCC07D4", VA = "0xCC07D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF704", Offset = "0xABF704")]
				set
				{
				}
			}

			[Token(Token = "0x1700019B")]
			public string cancel_reason
			{
				[Token(Token = "0x60012F4")]
				[Address(RVA = "0xCC07DC", Offset = "0xCC07DC", VA = "0xCC07DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF714", Offset = "0xABF714")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012F5")]
				[Address(RVA = "0xCC07E4", Offset = "0xCC07E4", VA = "0xCC07E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF724", Offset = "0xABF724")]
				set
				{
				}
			}

			[Token(Token = "0x60012F6")]
			[Address(RVA = "0xCC07EC", Offset = "0xCC07EC", VA = "0xCC07EC")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x20003B2")]
		public class TimePeriod
		{
			[Token(Token = "0x400187A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACC50", Offset = "0xAACC50")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x400187B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACC60", Offset = "0xAACC60")]
			private int <value>k__BackingField;

			[Token(Token = "0x1700019C")]
			public string time_type
			{
				[Token(Token = "0x60012F7")]
				[Address(RVA = "0xCC0904", Offset = "0xCC0904", VA = "0xCC0904")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF734", Offset = "0xABF734")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012F8")]
				[Address(RVA = "0xCC090C", Offset = "0xCC090C", VA = "0xCC090C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF744", Offset = "0xABF744")]
				set
				{
				}
			}

			[Token(Token = "0x1700019D")]
			public int value
			{
				[Token(Token = "0x60012F9")]
				[Address(RVA = "0xCC0914", Offset = "0xCC0914", VA = "0xCC0914")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF754", Offset = "0xABF754")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60012FA")]
				[Address(RVA = "0xCC091C", Offset = "0xCC091C", VA = "0xCC091C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF764", Offset = "0xABF764")]
				set
				{
				}
			}

			[Token(Token = "0x60012FB")]
			[Address(RVA = "0xCC0924", Offset = "0xCC0924", VA = "0xCC0924")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x20003B3")]
		public class Subscription
		{
			[Token(Token = "0x400187C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACC70", Offset = "0xAACC70")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x400187D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACC80", Offset = "0xAACC80")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x400187E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACC90", Offset = "0xAACC90")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x400187F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACCA0", Offset = "0xAACCA0")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACCB0", Offset = "0xAACCB0")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACCC0", Offset = "0xAACCC0")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4001882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACCD0", Offset = "0xAACCD0")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4001883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACCE0", Offset = "0xAACCE0")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4001884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACCF0", Offset = "0xAACCF0")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4001885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACD00", Offset = "0xAACD00")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4001886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACD10", Offset = "0xAACD10")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4001887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACD20", Offset = "0xAACD20")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACD30", Offset = "0xAACD30")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x1700019E")]
			public string app_id
			{
				[Token(Token = "0x60012FC")]
				[Address(RVA = "0xCC082C", Offset = "0xCC082C", VA = "0xCC082C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF774", Offset = "0xABF774")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012FD")]
				[Address(RVA = "0xCC0834", Offset = "0xCC0834", VA = "0xCC0834")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF784", Offset = "0xABF784")]
				set
				{
				}
			}

			[Token(Token = "0x1700019F")]
			public string order_id
			{
				[Token(Token = "0x60012FE")]
				[Address(RVA = "0xCC083C", Offset = "0xCC083C", VA = "0xCC083C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF794", Offset = "0xABF794")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012FF")]
				[Address(RVA = "0xCC0844", Offset = "0xCC0844", VA = "0xCC0844")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF7A4", Offset = "0xABF7A4")]
				set
				{
				}
			}

			[Token(Token = "0x170001A0")]
			public string subscription_id
			{
				[Token(Token = "0x6001300")]
				[Address(RVA = "0xCC084C", Offset = "0xCC084C", VA = "0xCC084C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF7B4", Offset = "0xABF7B4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001301")]
				[Address(RVA = "0xCC0854", Offset = "0xCC0854", VA = "0xCC0854")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF7C4", Offset = "0xABF7C4")]
				set
				{
				}
			}

			[Token(Token = "0x170001A1")]
			public string price
			{
				[Token(Token = "0x6001302")]
				[Address(RVA = "0xCC085C", Offset = "0xCC085C", VA = "0xCC085C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF7D4", Offset = "0xABF7D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001303")]
				[Address(RVA = "0xCC0864", Offset = "0xCC0864", VA = "0xCC0864")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF7E4", Offset = "0xABF7E4")]
				set
				{
				}
			}

			[Token(Token = "0x170001A2")]
			public string currency
			{
				[Token(Token = "0x6001304")]
				[Address(RVA = "0xCC086C", Offset = "0xCC086C", VA = "0xCC086C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF7F4", Offset = "0xABF7F4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001305")]
				[Address(RVA = "0xCC0874", Offset = "0xCC0874", VA = "0xCC0874")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF804", Offset = "0xABF804")]
				set
				{
				}
			}

			[Token(Token = "0x170001A3")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6001306")]
				[Address(RVA = "0xCC087C", Offset = "0xCC087C", VA = "0xCC087C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF814", Offset = "0xABF814")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001307")]
				[Address(RVA = "0xCC0884", Offset = "0xCC0884", VA = "0xCC0884")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF824", Offset = "0xABF824")]
				set
				{
				}
			}

			[Token(Token = "0x170001A4")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6001308")]
				[Address(RVA = "0xCC088C", Offset = "0xCC088C", VA = "0xCC088C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF834", Offset = "0xABF834")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001309")]
				[Address(RVA = "0xCC0894", Offset = "0xCC0894", VA = "0xCC0894")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF844", Offset = "0xABF844")]
				set
				{
				}
			}

			[Token(Token = "0x170001A5")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x600130A")]
				[Address(RVA = "0xCC089C", Offset = "0xCC089C", VA = "0xCC089C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF854", Offset = "0xABF854")]
				get
				{
					return null;
				}
				[Token(Token = "0x600130B")]
				[Address(RVA = "0xCC08A4", Offset = "0xCC08A4", VA = "0xCC08A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF864", Offset = "0xABF864")]
				set
				{
				}
			}

			[Token(Token = "0x170001A6")]
			public int number_of_charge_period
			{
				[Token(Token = "0x600130C")]
				[Address(RVA = "0xCC08AC", Offset = "0xCC08AC", VA = "0xCC08AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF874", Offset = "0xABF874")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600130D")]
				[Address(RVA = "0xCC08B4", Offset = "0xCC08B4", VA = "0xCC08B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF884", Offset = "0xABF884")]
				set
				{
				}
			}

			[Token(Token = "0x170001A7")]
			public string plan_id
			{
				[Token(Token = "0x600130E")]
				[Address(RVA = "0xCC08BC", Offset = "0xCC08BC", VA = "0xCC08BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF894", Offset = "0xABF894")]
				get
				{
					return null;
				}
				[Token(Token = "0x600130F")]
				[Address(RVA = "0xCC08C4", Offset = "0xCC08C4", VA = "0xCC08C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF8A4", Offset = "0xABF8A4")]
				set
				{
				}
			}

			[Token(Token = "0x170001A8")]
			public string plan_name
			{
				[Token(Token = "0x6001310")]
				[Address(RVA = "0xCC08CC", Offset = "0xCC08CC", VA = "0xCC08CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF8B4", Offset = "0xABF8B4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001311")]
				[Address(RVA = "0xCC08D4", Offset = "0xCC08D4", VA = "0xCC08D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF8C4", Offset = "0xABF8C4")]
				set
				{
				}
			}

			[Token(Token = "0x170001A9")]
			public string status
			{
				[Token(Token = "0x6001312")]
				[Address(RVA = "0xCC08DC", Offset = "0xCC08DC", VA = "0xCC08DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF8D4", Offset = "0xABF8D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001313")]
				[Address(RVA = "0xCC08E4", Offset = "0xCC08E4", VA = "0xCC08E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF8E4", Offset = "0xABF8E4")]
				set
				{
				}
			}

			[Token(Token = "0x170001AA")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6001314")]
				[Address(RVA = "0xCC08EC", Offset = "0xCC08EC", VA = "0xCC08EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF8F4", Offset = "0xABF8F4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001315")]
				[Address(RVA = "0xCC08F4", Offset = "0xCC08F4", VA = "0xCC08F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF904", Offset = "0xABF904")]
				set
				{
				}
			}

			[Token(Token = "0x6001316")]
			[Address(RVA = "0xCC08FC", Offset = "0xCC08FC", VA = "0xCC08FC")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x20003B4")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4001889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACD40", Offset = "0xAACD40")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x400188A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACD50", Offset = "0xAACD50")]
			private string <message>k__BackingField;

			[Token(Token = "0x400188B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAACD60", Offset = "0xAACD60")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x170001AB")]
			public int statusCode
			{
				[Token(Token = "0x6001317")]
				[Address(RVA = "0xCC0784", Offset = "0xCC0784", VA = "0xCC0784")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF914", Offset = "0xABF914")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001318")]
				[Address(RVA = "0xCC078C", Offset = "0xCC078C", VA = "0xCC078C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF924", Offset = "0xABF924")]
				set
				{
				}
			}

			[Token(Token = "0x170001AC")]
			public string message
			{
				[Token(Token = "0x6001319")]
				[Address(RVA = "0xCC0794", Offset = "0xCC0794", VA = "0xCC0794")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF934", Offset = "0xABF934")]
				get
				{
					return null;
				}
				[Token(Token = "0x600131A")]
				[Address(RVA = "0xCC079C", Offset = "0xCC079C", VA = "0xCC079C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF944", Offset = "0xABF944")]
				set
				{
				}
			}

			[Token(Token = "0x170001AD")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x600131B")]
				[Address(RVA = "0xCC07A4", Offset = "0xCC07A4", VA = "0xCC07A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF954", Offset = "0xABF954")]
				get
				{
					return null;
				}
				[Token(Token = "0x600131C")]
				[Address(RVA = "0xCC07AC", Offset = "0xCC07AC", VA = "0xCC07AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF964", Offset = "0xABF964")]
				set
				{
				}
			}

			[Token(Token = "0x600131D")]
			[Address(RVA = "0xCC07B4", Offset = "0xCC07B4", VA = "0xCC07B4")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x1226070", Offset = "0x1226070", VA = "0x1226070")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x122625C", Offset = "0x122625C", VA = "0x122625C")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x1226448", Offset = "0x1226448", VA = "0x1226448")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x1226634", Offset = "0x1226634", VA = "0x1226634")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x1226820", Offset = "0x1226820", VA = "0x1226820")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x12269C8", Offset = "0x12269C8", VA = "0x12269C8")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x1226D74", Offset = "0x1226D74", VA = "0x1226D74")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x1226F60", Offset = "0x1226F60", VA = "0x1226F60")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x122714C", Offset = "0x122714C", VA = "0x122714C")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x1227338", Offset = "0x1227338", VA = "0x1227338")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x1227524", Offset = "0x1227524", VA = "0x1227524")]
		public IAPurchase()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAA7674", Offset = "0xAA7674")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAA7688", Offset = "0xAA7688")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAA769C", Offset = "0xAA769C")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x20003B8")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x400188D")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x400188E")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x400188F")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4001890")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x20003B9")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4001892")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4001893")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4001894")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4001895")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x20003BA")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4001897")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4001898")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4001899")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x20003BB")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x400189B")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x400189C")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x400189D")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x400189E")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x20003BC")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x40018A0")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x40018A1")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x40018A2")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x20003BD")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAA76B0", Offset = "0xAA76B0")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x20003BF")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x20003C0")]
	internal class Api
	{
		[Token(Token = "0x20003C1")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x40018A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x6001333")]
			[Address(RVA = "0xE90528", Offset = "0xE90528", VA = "0xE90528")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x6001334")]
			[Address(RVA = "0xE905B8", Offset = "0xE905B8", VA = "0xE905B8")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x6001335")]
			[Address(RVA = "0xE906D0", Offset = "0xE906D0", VA = "0xE906D0")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1345944", Offset = "0x1345944", VA = "0x1345944")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x1345BDC", Offset = "0x1345BDC", VA = "0x1345BDC")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x1345DA4", Offset = "0x1345DA4", VA = "0x1345DA4")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1345670", Offset = "0x1345670", VA = "0x1345670")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x1346064", Offset = "0x1346064", VA = "0x1346064")]
		public Api()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	internal class User
	{
		[Token(Token = "0x6001336")]
		[Address(RVA = "0x12BA460", Offset = "0x12BA460", VA = "0x12BA460")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x12BA578", Offset = "0x12BA578", VA = "0x12BA578")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x12BA690", Offset = "0x12BA690", VA = "0x12BA690")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x12BA78C", Offset = "0x12BA78C", VA = "0x12BA78C")]
		public User()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	internal class UserStats
	{
		[Token(Token = "0x600133A")]
		[Address(RVA = "0x12BB5E8", Offset = "0x12BB5E8", VA = "0x12BB5E8")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x12BB858", Offset = "0x12BB858", VA = "0x12BB858")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x12BC018", Offset = "0x12BC018", VA = "0x12BC018")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x12BBC50", Offset = "0x12BBC50", VA = "0x12BBC50")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x12BBDA0", Offset = "0x12BBDA0", VA = "0x12BBDA0")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x12BB9A8", Offset = "0x12BB9A8", VA = "0x12BB9A8")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x12BBAF8", Offset = "0x12BBAF8", VA = "0x12BBAF8")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x12BC168", Offset = "0x12BC168", VA = "0x12BC168")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x12BC258", Offset = "0x12BC258", VA = "0x12BC258")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x12BC348", Offset = "0x12BC348", VA = "0x12BC348")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x12BC438", Offset = "0x12BC438", VA = "0x12BC438")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x12BC688", Offset = "0x12BC688", VA = "0x12BC688")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x12BCA74", Offset = "0x12BCA74", VA = "0x12BCA74")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x12BCC58", Offset = "0x12BCC58", VA = "0x12BCC58")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x12BCEEC", Offset = "0x12BCEEC", VA = "0x12BCEEC")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x12BD004", Offset = "0x12BD004", VA = "0x12BD004")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x12BD11C", Offset = "0x12BD11C", VA = "0x12BD11C")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x12BD238", Offset = "0x12BD238", VA = "0x12BD238")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	internal class IAPurchase
	{
		[Token(Token = "0x600134C")]
		[Address(RVA = "0x12260F0", Offset = "0x12260F0", VA = "0x12260F0")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x12262DC", Offset = "0x12262DC", VA = "0x12262DC")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x12264C8", Offset = "0x12264C8", VA = "0x12264C8")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x12266B4", Offset = "0x12266B4", VA = "0x12266B4")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x1226890", Offset = "0x1226890", VA = "0x1226890")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x1226A90", Offset = "0x1226A90", VA = "0x1226A90")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x1226DF4", Offset = "0x1226DF4", VA = "0x1226DF4")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x1226FE0", Offset = "0x1226FE0", VA = "0x1226FE0")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x12271CC", Offset = "0x12271CC", VA = "0x12271CC")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x12273B8", Offset = "0x12273B8", VA = "0x12273B8")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x122752C", Offset = "0x122752C", VA = "0x122752C")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	internal class Android
	{
		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x170001AE")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x600135B")]
			[Address(RVA = "0x1342590", Offset = "0x1342590", VA = "0x1342590")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x600135C")]
			[Address(RVA = "0x1342634", Offset = "0x1342634", VA = "0x1342634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x600135D")]
			[Address(RVA = "0x134269C", Offset = "0x134269C", VA = "0x134269C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x134206C", Offset = "0x134206C", VA = "0x134206C")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x13421B8", Offset = "0x13421B8", VA = "0x13421B8")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x1342300", Offset = "0x1342300", VA = "0x1342300")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x1342448", Offset = "0x1342448", VA = "0x1342448")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x13426A0", Offset = "0x13426A0", VA = "0x13426A0")]
		public Android()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x13426A8", Offset = "0x13426A8", VA = "0x13426A8")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x1342738", Offset = "0x1342738", VA = "0x1342738")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x13427C8", Offset = "0x13427C8", VA = "0x13427C8")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x20003C7")]
	internal class Session
	{
		[Token(Token = "0x6001362")]
		[Address(RVA = "0x103C04C", Offset = "0x103C04C", VA = "0x103C04C")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x20003C8")]
	public class Logger
	{
		[Token(Token = "0x40018B0")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x24E6BD8", Offset = "0x24E6BD8", VA = "0x24E6BD8")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x24E7050", Offset = "0x24E7050", VA = "0x24E7050")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x24E6CA4", Offset = "0x24E6CA4", VA = "0x24E6CA4")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x24E70F4", Offset = "0x24E70F4", VA = "0x24E70F4")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x24E725C", Offset = "0x24E725C", VA = "0x24E725C")]
		public Logger()
		{
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x20003C9")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x14A4BD0", Offset = "0x14A4BD0", VA = "0x14A4BD0")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x14A4C4C", Offset = "0x14A4C4C", VA = "0x14A4C4C")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x14A51A0", Offset = "0x14A51A0", VA = "0x14A51A0")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x14A52BC", Offset = "0x14A52BC", VA = "0x14A52BC")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x20003CA")]
	public enum JsonType
	{
		[Token(Token = "0x40018B6")]
		None,
		[Token(Token = "0x40018B7")]
		Object,
		[Token(Token = "0x40018B8")]
		Array,
		[Token(Token = "0x40018B9")]
		String,
		[Token(Token = "0x40018BA")]
		Int,
		[Token(Token = "0x40018BB")]
		Long,
		[Token(Token = "0x40018BC")]
		Double,
		[Token(Token = "0x40018BD")]
		Boolean
	}
	[Token(Token = "0x20003CB")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x170001B1")]
		bool IsArray
		{
			[Token(Token = "0x600136E")]
			get;
		}

		[Token(Token = "0x170001B2")]
		bool IsBoolean
		{
			[Token(Token = "0x600136F")]
			get;
		}

		[Token(Token = "0x170001B3")]
		bool IsDouble
		{
			[Token(Token = "0x6001370")]
			get;
		}

		[Token(Token = "0x170001B4")]
		bool IsInt
		{
			[Token(Token = "0x6001371")]
			get;
		}

		[Token(Token = "0x170001B5")]
		bool IsLong
		{
			[Token(Token = "0x6001372")]
			get;
		}

		[Token(Token = "0x170001B6")]
		bool IsObject
		{
			[Token(Token = "0x6001373")]
			get;
		}

		[Token(Token = "0x170001B7")]
		bool IsString
		{
			[Token(Token = "0x6001374")]
			get;
		}

		[Token(Token = "0x6001375")]
		bool GetBoolean();

		[Token(Token = "0x6001376")]
		double GetDouble();

		[Token(Token = "0x6001377")]
		int GetInt();

		[Token(Token = "0x6001378")]
		JsonType GetJsonType();

		[Token(Token = "0x6001379")]
		long GetLong();

		[Token(Token = "0x600137A")]
		string GetString();

		[Token(Token = "0x600137B")]
		void SetBoolean(bool val);

		[Token(Token = "0x600137C")]
		void SetDouble(double val);

		[Token(Token = "0x600137D")]
		void SetInt(int val);

		[Token(Token = "0x600137E")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x600137F")]
		void SetLong(long val);

		[Token(Token = "0x6001380")]
		void SetString(string val);

		[Token(Token = "0x6001381")]
		string ToJson();

		[Token(Token = "0x6001382")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xAA76C4", Offset = "0xAA76C4")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x170001B8")]
		public int Count
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0xBC3068", Offset = "0xBC3068", VA = "0xBC3068")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B9")]
		public bool IsArray
		{
			[Token(Token = "0x6001384")]
			[Address(RVA = "0xBC31F4", Offset = "0xBC31F4", VA = "0xBC31F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BA")]
		public bool IsBoolean
		{
			[Token(Token = "0x6001385")]
			[Address(RVA = "0xBC3204", Offset = "0xBC3204", VA = "0xBC3204")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BB")]
		public bool IsDouble
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0xBC3214", Offset = "0xBC3214", VA = "0xBC3214")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BC")]
		public bool IsInt
		{
			[Token(Token = "0x6001387")]
			[Address(RVA = "0xBC3224", Offset = "0xBC3224", VA = "0xBC3224")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BD")]
		public bool IsLong
		{
			[Token(Token = "0x6001388")]
			[Address(RVA = "0xBC3234", Offset = "0xBC3234", VA = "0xBC3234")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BE")]
		public bool IsObject
		{
			[Token(Token = "0x6001389")]
			[Address(RVA = "0xBC3244", Offset = "0xBC3244", VA = "0xBC3244")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BF")]
		public bool IsString
		{
			[Token(Token = "0x600138A")]
			[Address(RVA = "0xBC3254", Offset = "0xBC3254", VA = "0xBC3254")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C0")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0xBC3264", Offset = "0xBC3264", VA = "0xBC3264", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C1")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0xBC3268", Offset = "0xBC3268", VA = "0xBC3268", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C2")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0xBC3320", Offset = "0xBC3320", VA = "0xBC3320", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x600138E")]
			[Address(RVA = "0xBC33D8", Offset = "0xBC33D8", VA = "0xBC33D8", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C4")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0xBC3618", Offset = "0xBC3618", VA = "0xBC3618", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C5")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6001390")]
			[Address(RVA = "0xBC36D0", Offset = "0xBC36D0", VA = "0xBC36D0", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6001391")]
			[Address(RVA = "0xBC3A98", Offset = "0xBC3A98", VA = "0xBC3A98", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0xBC3E60", Offset = "0xBC3E60", VA = "0xBC3E60", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C8")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0xBC3E70", Offset = "0xBC3E70", VA = "0xBC3E70", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C9")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xBC3E80", Offset = "0xBC3E80", VA = "0xBC3E80", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CA")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0xBC3E90", Offset = "0xBC3E90", VA = "0xBC3E90", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CB")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0xBC3EA0", Offset = "0xBC3EA0", VA = "0xBC3EA0", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CC")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0xBC3EB0", Offset = "0xBC3EB0", VA = "0xBC3EB0", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CD")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0xBC3EC0", Offset = "0xBC3EC0", VA = "0xBC3EC0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CE")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0xBC3ED0", Offset = "0xBC3ED0", VA = "0xBC3ED0", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CF")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0xBC40C4", Offset = "0xBC40C4", VA = "0xBC40C4", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D0")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0xBC417C", Offset = "0xBC417C", VA = "0xBC417C", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139C")]
			[Address(RVA = "0xBC4240", Offset = "0xBC4240", VA = "0xBC4240", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x600139D")]
			[Address(RVA = "0xBC477C", Offset = "0xBC477C", VA = "0xBC477C", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139E")]
			[Address(RVA = "0xBC4854", Offset = "0xBC4854", VA = "0xBC4854", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x600139F")]
			[Address(RVA = "0xBC4A7C", Offset = "0xBC4A7C", VA = "0xBC4A7C", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xBC4B40", Offset = "0xBC4B40", VA = "0xBC4B40", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public JsonData Item
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0xBC4E44", Offset = "0xBC4E44", VA = "0xBC4E44")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0xBC43B4", Offset = "0xBC43B4", VA = "0xBC43B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public JsonData Item
		{
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0xBC4F08", Offset = "0xBC4F08", VA = "0xBC4F08")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0xBC4B84", Offset = "0xBC4B84", VA = "0xBC4B84")]
			set
			{
			}
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xBC5078", Offset = "0xBC5078", VA = "0xBC5078")]
		public JsonData()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xBC5080", Offset = "0xBC5080", VA = "0xBC5080")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xBC50B8", Offset = "0xBC50B8", VA = "0xBC50B8")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xBC50F4", Offset = "0xBC50F4", VA = "0xBC50F4")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xBC5128", Offset = "0xBC5128", VA = "0xBC5128")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xBC515C", Offset = "0xBC515C", VA = "0xBC515C")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xBC537C", Offset = "0xBC537C", VA = "0xBC537C")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xBC53B0", Offset = "0xBC53B0", VA = "0xBC53B0")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xBC541C", Offset = "0xBC541C", VA = "0xBC541C")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xBC548C", Offset = "0xBC548C", VA = "0xBC548C")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xBC54F4", Offset = "0xBC54F4", VA = "0xBC54F4")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xBC555C", Offset = "0xBC555C", VA = "0xBC555C")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xBC55C4", Offset = "0xBC55C4", VA = "0xBC55C4")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xBC563C", Offset = "0xBC563C", VA = "0xBC563C")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xBC56B4", Offset = "0xBC56B4", VA = "0xBC56B4")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xBC572C", Offset = "0xBC572C", VA = "0xBC572C")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xBC57A4", Offset = "0xBC57A4", VA = "0xBC57A4")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xBC581C", Offset = "0xBC581C", VA = "0xBC581C", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xBC58E8", Offset = "0xBC58E8", VA = "0xBC58E8", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xBC5ABC", Offset = "0xBC5ABC", VA = "0xBC5ABC", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xBC5BFC", Offset = "0xBC5BFC", VA = "0xBC5BFC", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xBC5CC4", Offset = "0xBC5CC4", VA = "0xBC5CC4", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xBC5D68", Offset = "0xBC5D68", VA = "0xBC5D68", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xBC6018", Offset = "0xBC6018", VA = "0xBC6018", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xBC60CC", Offset = "0xBC60CC", VA = "0xBC60CC", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xBC6134", Offset = "0xBC6134", VA = "0xBC6134", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xBC619C", Offset = "0xBC619C", VA = "0xBC619C", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xBC6204", Offset = "0xBC6204", VA = "0xBC6204", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xBC626C", Offset = "0xBC626C", VA = "0xBC626C", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xBC62D4", Offset = "0xBC62D4", VA = "0xBC62D4", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xBC62EC", Offset = "0xBC62EC", VA = "0xBC62EC", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xBC6300", Offset = "0xBC6300", VA = "0xBC6300", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xBC6314", Offset = "0xBC6314", VA = "0xBC6314", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xBC6328", Offset = "0xBC6328", VA = "0xBC6328", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xBC6338", Offset = "0xBC6338", VA = "0xBC6338", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xBC63FC", Offset = "0xBC63FC", VA = "0xBC63FC", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xBC6434", Offset = "0xBC6434", VA = "0xBC6434", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xBC6510", Offset = "0xBC6510", VA = "0xBC6510", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xBC65D0", Offset = "0xBC65D0", VA = "0xBC65D0", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xBC6698", Offset = "0xBC6698", VA = "0xBC6698", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xBC6760", Offset = "0xBC6760", VA = "0xBC6760", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xBC6838", Offset = "0xBC6838", VA = "0xBC6838", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xBC6908", Offset = "0xBC6908", VA = "0xBC6908", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xBC69D8", Offset = "0xBC69D8", VA = "0xBC69D8", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xBC6AC8", Offset = "0xBC6AC8", VA = "0xBC6AC8", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xBC6C28", Offset = "0xBC6C28", VA = "0xBC6C28", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xBC3120", Offset = "0xBC3120", VA = "0xBC3120")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xBC3490", Offset = "0xBC3490", VA = "0xBC3490")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xBC3F88", Offset = "0xBC3F88", VA = "0xBC3F88")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xBC431C", Offset = "0xBC431C", VA = "0xBC431C")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xBC6DF8", Offset = "0xBC6DF8", VA = "0xBC6DF8")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xBC6438", Offset = "0xBC6438", VA = "0xBC6438")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xBC8270", Offset = "0xBC8270", VA = "0xBC8270")]
		public void Clear()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xBC8394", Offset = "0xBC8394", VA = "0xBC8394", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xBC8480", Offset = "0xBC8480", VA = "0xBC8480", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xBC8488", Offset = "0xBC8488", VA = "0xBC8488", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xBC633C", Offset = "0xBC633C", VA = "0xBC633C")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xBC6400", Offset = "0xBC6400", VA = "0xBC6400")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xBC865C", Offset = "0xBC865C", VA = "0xBC865C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003CD")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x170001D5")]
		public object Current
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x11612F0", Offset = "0x11612F0", VA = "0x11612F0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x1161358", Offset = "0x1161358", VA = "0x1161358", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x170001D7")]
		public object Key
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x116144C", Offset = "0x116144C", VA = "0x116144C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		public object Value
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x1161504", Offset = "0x1161504", VA = "0x1161504", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x11615C4", Offset = "0x11615C4", VA = "0x11615C4")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x11615F0", Offset = "0x11615F0", VA = "0x11615F0", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x116169C", Offset = "0x116169C", VA = "0x116169C", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xBC8750", Offset = "0xBC8750", VA = "0xBC8750")]
		public JsonException()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xBC8758", Offset = "0xBC8758", VA = "0xBC8758")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xBC87F0", Offset = "0xBC87F0", VA = "0xBC87F0")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xBC8898", Offset = "0xBC8898", VA = "0xBC8898")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xBC8930", Offset = "0xBC8930", VA = "0xBC8930")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xBC89D8", Offset = "0xBC89D8", VA = "0xBC89D8")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xBC89E0", Offset = "0xBC89E0", VA = "0xBC89E0")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x20003CF")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x20003D0")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x170001D9")]
		public Type ElementType
		{
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x1347F10", Offset = "0x1347F10", VA = "0x1347F10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0x1347FD8", Offset = "0x1347FD8", VA = "0x1347FD8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public bool IsArray
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0x1347FE0", Offset = "0x1347FE0", VA = "0x1347FE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x1347FE8", Offset = "0x1347FE8", VA = "0x1347FE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public bool IsList
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x1347FF4", Offset = "0x1347FF4", VA = "0x1347FF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x1347FFC", Offset = "0x1347FFC", VA = "0x1347FFC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20003D1")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x170001DC")]
		public Type ElementType
		{
			[Token(Token = "0x60013F4")]
			[Address(RVA = "0x1160614", Offset = "0x1160614", VA = "0x1160614")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F5")]
			[Address(RVA = "0x11606DC", Offset = "0x11606DC", VA = "0x11606DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public bool IsDictionary
		{
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0x11606E4", Offset = "0x11606E4", VA = "0x11606E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x11606EC", Offset = "0x11606EC", VA = "0x11606EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0x11606F8", Offset = "0x11606F8", VA = "0x11606F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x1160700", Offset = "0x1160700", VA = "0x1160700")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20003D2")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x20003D3")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x20003D4")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x20003D5")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x20003D6")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x20003D7")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x20003D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA76FC", Offset = "0xAA76FC")]
		private sealed class <>c
		{
			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x40018E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x40018EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x40018EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x40018ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x40018EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x40018EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x40018F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x40018F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x40018F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x40018F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x40018F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x40018F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x40018F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x40018F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x40018F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x40018F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x40018FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x40018FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x40018FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6001429")]
			[Address(RVA = "0xCC1264", Offset = "0xCC1264", VA = "0xCC1264")]
			public <>c()
			{
			}

			[Token(Token = "0x600142A")]
			[Address(RVA = "0xCC126C", Offset = "0xCC126C", VA = "0xCC126C")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600142B")]
			[Address(RVA = "0xCC1330", Offset = "0xCC1330", VA = "0xCC1330")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600142C")]
			[Address(RVA = "0xCC13F4", Offset = "0xCC13F4", VA = "0xCC13F4")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600142D")]
			[Address(RVA = "0xCC14F8", Offset = "0xCC14F8", VA = "0xCC14F8")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600142E")]
			[Address(RVA = "0xCC1584", Offset = "0xCC1584", VA = "0xCC1584")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600142F")]
			[Address(RVA = "0xCC1648", Offset = "0xCC1648", VA = "0xCC1648")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001430")]
			[Address(RVA = "0xCC170C", Offset = "0xCC170C", VA = "0xCC170C")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001431")]
			[Address(RVA = "0xCC17D0", Offset = "0xCC17D0", VA = "0xCC17D0")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001432")]
			[Address(RVA = "0xCC1894", Offset = "0xCC1894", VA = "0xCC1894")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001433")]
			[Address(RVA = "0xCC1920", Offset = "0xCC1920", VA = "0xCC1920")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001434")]
			[Address(RVA = "0xCC19B0", Offset = "0xCC19B0", VA = "0xCC19B0")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x6001435")]
			[Address(RVA = "0xCC1A88", Offset = "0xCC1A88", VA = "0xCC1A88")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x6001436")]
			[Address(RVA = "0xCC1B60", Offset = "0xCC1B60", VA = "0xCC1B60")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x6001437")]
			[Address(RVA = "0xCC1C38", Offset = "0xCC1C38", VA = "0xCC1C38")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x6001438")]
			[Address(RVA = "0xCC1D10", Offset = "0xCC1D10", VA = "0xCC1D10")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x6001439")]
			[Address(RVA = "0xCC1DE8", Offset = "0xCC1DE8", VA = "0xCC1DE8")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x600143A")]
			[Address(RVA = "0xCC1EC0", Offset = "0xCC1EC0", VA = "0xCC1EC0")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x600143B")]
			[Address(RVA = "0xCC1F94", Offset = "0xCC1F94", VA = "0xCC1F94")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x600143C")]
			[Address(RVA = "0xCC206C", Offset = "0xCC206C", VA = "0xCC206C")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x600143D")]
			[Address(RVA = "0xCC2140", Offset = "0xCC2140", VA = "0xCC2140")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x600143E")]
			[Address(RVA = "0xCC2218", Offset = "0xCC2218", VA = "0xCC2218")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x600143F")]
			[Address(RVA = "0xCC22F0", Offset = "0xCC22F0", VA = "0xCC22F0")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x6001440")]
			[Address(RVA = "0xCC23C0", Offset = "0xCC23C0", VA = "0xCC23C0")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x6001441")]
			[Address(RVA = "0xCC24D0", Offset = "0xCC24D0", VA = "0xCC24D0")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x6001442")]
			[Address(RVA = "0xCC2528", Offset = "0xCC2528", VA = "0xCC2528")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6001443")]
			[Address(RVA = "0xCC2580", Offset = "0xCC2580", VA = "0xCC2580")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA770C", Offset = "0xAA770C")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x40018FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x6001444")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6001445")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA771C", Offset = "0xAA771C")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x40018FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x6001446")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6001447")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xBC89E8", Offset = "0xBC89E8", VA = "0xBC89E8")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xBCAB50", Offset = "0xBCAB50", VA = "0xBCAB50")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xBCB028", Offset = "0xBCB028", VA = "0xBCB028")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xBCB7C8", Offset = "0xBCB7C8", VA = "0xBCB7C8")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xBCBD44", Offset = "0xBCBD44", VA = "0xBCBD44")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xBCC6C8", Offset = "0xBCC6C8", VA = "0xBCC6C8")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xBCDB7C", Offset = "0xBCDB7C", VA = "0xBCDB7C")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xBC8DF8", Offset = "0xBC8DF8", VA = "0xBC8DF8")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xBC9CA8", Offset = "0xBC9CA8", VA = "0xBC9CA8")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xBCE26C", Offset = "0xBCE26C", VA = "0xBCE26C")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xBCE4D0", Offset = "0xBCE4D0", VA = "0xBCE4D0")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xBCFB4C", Offset = "0xBCFB4C", VA = "0xBCFB4C")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xBCFDBC", Offset = "0xBCFDBC", VA = "0xBCFDBC")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xBCFE34", Offset = "0xBCFE34", VA = "0xBCFE34")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xBD0008", Offset = "0xBD0008", VA = "0xBD0008")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xBD01A0", Offset = "0xBD01A0", VA = "0xBD01A0")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x600141E")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x600141F")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6001420")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xBCFF98", Offset = "0xBCFF98", VA = "0xBCFF98")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xBD0304", Offset = "0xBD0304", VA = "0xBD0304")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x6001423")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x6001424")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xBD0410", Offset = "0xBD0410", VA = "0xBD0410")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xBD04F0", Offset = "0xBD04F0", VA = "0xBD04F0")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xBD05D0", Offset = "0xBD05D0", VA = "0xBD05D0")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public enum JsonToken
	{
		[Token(Token = "0x4001900")]
		None,
		[Token(Token = "0x4001901")]
		ObjectStart,
		[Token(Token = "0x4001902")]
		PropertyName,
		[Token(Token = "0x4001903")]
		ObjectEnd,
		[Token(Token = "0x4001904")]
		ArrayStart,
		[Token(Token = "0x4001905")]
		ArrayEnd,
		[Token(Token = "0x4001906")]
		Int,
		[Token(Token = "0x4001907")]
		Long,
		[Token(Token = "0x4001908")]
		Double,
		[Token(Token = "0x4001909")]
		String,
		[Token(Token = "0x400190A")]
		Boolean,
		[Token(Token = "0x400190B")]
		Null
	}
	[Token(Token = "0x20003DC")]
	public class JsonReader
	{
		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x170001DF")]
		public bool AllowComments
		{
			[Token(Token = "0x6001448")]
			[Address(RVA = "0xBD05D8", Offset = "0xBD05D8", VA = "0xBD05D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001449")]
			[Address(RVA = "0xBD05F4", Offset = "0xBD05F4", VA = "0xBD05F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0xBD0614", Offset = "0xBD0614", VA = "0xBD0614")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600144B")]
			[Address(RVA = "0xBD0630", Offset = "0xBD0630", VA = "0xBD0630")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public bool EndOfInput
		{
			[Token(Token = "0x600144C")]
			[Address(RVA = "0xBD0650", Offset = "0xBD0650", VA = "0xBD0650")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E2")]
		public bool EndOfJson
		{
			[Token(Token = "0x600144D")]
			[Address(RVA = "0xBD0658", Offset = "0xBD0658", VA = "0xBD0658")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E3")]
		public JsonToken Token
		{
			[Token(Token = "0x600144E")]
			[Address(RVA = "0xBD0660", Offset = "0xBD0660", VA = "0xBD0660")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x170001E4")]
		public object Value
		{
			[Token(Token = "0x600144F")]
			[Address(RVA = "0xBD0668", Offset = "0xBD0668", VA = "0xBD0668")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xBD0670", Offset = "0xBD0670", VA = "0xBD0670")]
		static JsonReader()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xBD039C", Offset = "0xBD039C", VA = "0xBD039C")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xBD0198", Offset = "0xBD0198", VA = "0xBD0198")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xBD0D50", Offset = "0xBD0D50", VA = "0xBD0D50")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xBD0674", Offset = "0xBD0674", VA = "0xBD0674")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xBD0FF4", Offset = "0xBD0FF4", VA = "0xBD0FF4")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xBD0EC4", Offset = "0xBD0EC4", VA = "0xBD0EC4")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xBD1170", Offset = "0xBD1170", VA = "0xBD1170")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xBD1304", Offset = "0xBD1304", VA = "0xBD1304")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xBD14A0", Offset = "0xBD14A0", VA = "0xBD14A0")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xBD1504", Offset = "0xBD1504", VA = "0xBD1504")]
		public void Close()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xBCD6F8", Offset = "0xBCD6F8", VA = "0xBCD6F8")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003DD")]
	internal enum Condition
	{
		[Token(Token = "0x400191B")]
		InArray,
		[Token(Token = "0x400191C")]
		InObject,
		[Token(Token = "0x400191D")]
		NotAProperty,
		[Token(Token = "0x400191E")]
		Property,
		[Token(Token = "0x400191F")]
		Value
	}
	[Token(Token = "0x20003DE")]
	internal class WriterContext
	{
		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xE8CA40", Offset = "0xE8CA40", VA = "0xE8CA40")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class JsonWriter
	{
		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x170001E5")]
		public int IndentValue
		{
			[Token(Token = "0x600145D")]
			[Address(RVA = "0xBD1554", Offset = "0xBD1554", VA = "0xBD1554")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600145E")]
			[Address(RVA = "0xBD155C", Offset = "0xBD155C", VA = "0xBD155C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public bool PrettyPrint
		{
			[Token(Token = "0x600145F")]
			[Address(RVA = "0xBD1570", Offset = "0xBD1570", VA = "0xBD1570")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001460")]
			[Address(RVA = "0xBD1578", Offset = "0xBD1578", VA = "0xBD1578")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x6001461")]
			[Address(RVA = "0xBD1584", Offset = "0xBD1584", VA = "0xBD1584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		public bool Validate
		{
			[Token(Token = "0x6001462")]
			[Address(RVA = "0xBD158C", Offset = "0xBD158C", VA = "0xBD158C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001463")]
			[Address(RVA = "0xBD1594", Offset = "0xBD1594", VA = "0xBD1594")]
			set
			{
			}
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xBD15A0", Offset = "0xBD15A0", VA = "0xBD15A0")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xBC8D54", Offset = "0xBC8D54", VA = "0xBC8D54")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xBD16F4", Offset = "0xBD16F4", VA = "0xBD16F4")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xBC85E0", Offset = "0xBC85E0", VA = "0xBC85E0")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xBD1764", Offset = "0xBD1764", VA = "0xBD1764")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xBD15F4", Offset = "0xBD15F4", VA = "0xBD15F4")]
		private void Init()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xBD1928", Offset = "0xBD1928", VA = "0xBD1928")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xBD19B0", Offset = "0xBD19B0", VA = "0xBD19B0")]
		private void Indent()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xBD19C8", Offset = "0xBD19C8", VA = "0xBD19C8")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xBD1A60", Offset = "0xBD1A60", VA = "0xBD1A60")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xBD1A68", Offset = "0xBD1A68", VA = "0xBD1A68")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xBD1B00", Offset = "0xBD1B00", VA = "0xBD1B00")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xBD1E0C", Offset = "0xBD1E0C", VA = "0xBD1E0C")]
		private void Unindent()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xBD1E24", Offset = "0xBD1E24", VA = "0xBD1E24", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xBCFCDC", Offset = "0xBCFCDC", VA = "0xBCFCDC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xBC79CC", Offset = "0xBC79CC", VA = "0xBC79CC")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xBD1E90", Offset = "0xBD1E90", VA = "0xBD1E90")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xBC7A70", Offset = "0xBC7A70", VA = "0xBC7A70")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xBC7BC0", Offset = "0xBC7BC0", VA = "0xBC7BC0")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xBC7CA8", Offset = "0xBC7CA8", VA = "0xBC7CA8")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xBC7934", Offset = "0xBC7934", VA = "0xBC7934")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xBCFA64", Offset = "0xBCFA64", VA = "0xBCFA64")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xBC7E78", Offset = "0xBC7E78", VA = "0xBC7E78")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xBC7D90", Offset = "0xBC7D90", VA = "0xBC7D90")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xBC8180", Offset = "0xBC8180", VA = "0xBC8180")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xBC7F68", Offset = "0xBC7F68", VA = "0xBC7F68")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xBC8050", Offset = "0xBC8050", VA = "0xBC8050")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x20003E0")]
	internal class FsmContext
	{
		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x13C7078", Offset = "0x13C7078", VA = "0x13C7078")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	internal class Lexer
	{
		[Token(Token = "0x20003E2")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x170001E9")]
		public bool AllowComments
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0x24DEAE0", Offset = "0x24DEAE0", VA = "0x24DEAE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001481")]
			[Address(RVA = "0x24DEAE8", Offset = "0x24DEAE8", VA = "0x24DEAE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0x24DEAF4", Offset = "0x24DEAF4", VA = "0x24DEAF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001483")]
			[Address(RVA = "0x24DEAFC", Offset = "0x24DEAFC", VA = "0x24DEAFC")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public bool EndOfInput
		{
			[Token(Token = "0x6001484")]
			[Address(RVA = "0x24DEB08", Offset = "0x24DEB08", VA = "0x24DEB08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EC")]
		public int Token
		{
			[Token(Token = "0x6001485")]
			[Address(RVA = "0x24DEB10", Offset = "0x24DEB10", VA = "0x24DEB10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001ED")]
		public string StringValue
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0x24DEB18", Offset = "0x24DEB18", VA = "0x24DEB18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x24DEB20", Offset = "0x24DEB20", VA = "0x24DEB20")]
		static Lexer()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x24DF5DC", Offset = "0x24DF5DC", VA = "0x24DF5DC")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x24DF6A8", Offset = "0x24DF6A8", VA = "0x24DF6A8")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x24DEB24", Offset = "0x24DEB24", VA = "0x24DEB24")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x24DF724", Offset = "0x24DF724", VA = "0x24DF724")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x24DF820", Offset = "0x24DF820", VA = "0x24DF820")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x24DFA30", Offset = "0x24DFA30", VA = "0x24DFA30")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x24DFAD8", Offset = "0x24DFAD8", VA = "0x24DFAD8")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x24DFC18", Offset = "0x24DFC18", VA = "0x24DFC18")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x24DFD18", Offset = "0x24DFD18", VA = "0x24DFD18")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x24DFD9C", Offset = "0x24DFD9C", VA = "0x24DFD9C")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x24DFE98", Offset = "0x24DFE98", VA = "0x24DFE98")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x24DFF30", Offset = "0x24DFF30", VA = "0x24DFF30")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x24DFFF0", Offset = "0x24DFFF0", VA = "0x24DFFF0")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x24E0060", Offset = "0x24E0060", VA = "0x24E0060")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x24E00D0", Offset = "0x24E00D0", VA = "0x24E00D0")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x24E0140", Offset = "0x24E0140", VA = "0x24E0140")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x24E01B0", Offset = "0x24E01B0", VA = "0x24E01B0")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x24E0220", Offset = "0x24E0220", VA = "0x24E0220")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x24E0290", Offset = "0x24E0290", VA = "0x24E0290")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x24E0300", Offset = "0x24E0300", VA = "0x24E0300")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x24E0370", Offset = "0x24E0370", VA = "0x24E0370")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x24E03E0", Offset = "0x24E03E0", VA = "0x24E03E0")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x24E0450", Offset = "0x24E0450", VA = "0x24E0450")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x24E04FC", Offset = "0x24E04FC", VA = "0x24E04FC")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x24E056C", Offset = "0x24E056C", VA = "0x24E056C")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x24E06B4", Offset = "0x24E06B4", VA = "0x24E06B4")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x24E0840", Offset = "0x24E0840", VA = "0x24E0840")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x24E08EC", Offset = "0x24E08EC", VA = "0x24E08EC")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x24E0964", Offset = "0x24E0964", VA = "0x24E0964")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x24E09E4", Offset = "0x24E09E4", VA = "0x24E09E4")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x24E0A50", Offset = "0x24E0A50", VA = "0x24E0A50")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x24E0ABC", Offset = "0x24E0ABC", VA = "0x24E0ABC")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x24DF9F8", Offset = "0x24DF9F8", VA = "0x24DF9F8")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x24E0B38", Offset = "0x24E0B38", VA = "0x24E0B38")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x24E0B6C", Offset = "0x24E0B6C", VA = "0x24E0B6C")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x24DFC0C", Offset = "0x24DFC0C", VA = "0x24DFC0C")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	internal enum ParserToken
	{
		[Token(Token = "0x4001943")]
		None = 65536,
		[Token(Token = "0x4001944")]
		Number,
		[Token(Token = "0x4001945")]
		True,
		[Token(Token = "0x4001946")]
		False,
		[Token(Token = "0x4001947")]
		Null,
		[Token(Token = "0x4001948")]
		CharSeq,
		[Token(Token = "0x4001949")]
		Char,
		[Token(Token = "0x400194A")]
		Text,
		[Token(Token = "0x400194B")]
		Object,
		[Token(Token = "0x400194C")]
		ObjectPrime,
		[Token(Token = "0x400194D")]
		Pair,
		[Token(Token = "0x400194E")]
		PairRest,
		[Token(Token = "0x400194F")]
		Array,
		[Token(Token = "0x4001950")]
		ArrayPrime,
		[Token(Token = "0x4001951")]
		Value,
		[Token(Token = "0x4001952")]
		ValueRest,
		[Token(Token = "0x4001953")]
		String,
		[Token(Token = "0x4001954")]
		End,
		[Token(Token = "0x4001955")]
		Epsilon
	}
}
namespace Sigtrap.VrTunnellingPro
{
	[Token(Token = "0x20003E4")]
	public class Tunnelling : TunnellingImageBase
	{
		[Token(Token = "0x170001EE")]
		protected override CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0xFF8338", Offset = "0xFF8338", VA = "0xFF8338", Slot = "9")]
			get
			{
				return default(CameraEvent);
			}
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xFF8340", Offset = "0xFF8340", VA = "0xFF8340")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xFF8828", Offset = "0xFF8828", VA = "0xFF8828")]
		public Tunnelling()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public abstract class TunnellingBase : MonoBehaviour
	{
		[Token(Token = "0x20003E6")]
		public enum BackgroundMode
		{
			[Token(Token = "0x40019B3")]
			COLOR,
			[Token(Token = "0x40019B4")]
			SKYBOX,
			[Token(Token = "0x40019B5")]
			CAGE_COLOR,
			[Token(Token = "0x40019B6")]
			CAGE_SKYBOX,
			[Token(Token = "0x40019B7")]
			CAGE_ONLY,
			[Token(Token = "0x40019B8")]
			BLUR
		}

		[Token(Token = "0x20003E7")]
		public enum MaskMode
		{
			[Token(Token = "0x40019BA")]
			OFF,
			[Token(Token = "0x40019BB")]
			MASK,
			[Token(Token = "0x40019BC")]
			WINDOW,
			[Token(Token = "0x40019BD")]
			PORTAL
		}

		[Token(Token = "0x20003E8")]
		public enum MSAA
		{
			[Token(Token = "0x40019BF")]
			AUTO,
			[Token(Token = "0x40019C0")]
			OFF,
			[Token(Token = "0x40019C1")]
			X2,
			[Token(Token = "0x40019C2")]
			X4,
			[Token(Token = "0x40019C3")]
			X8
		}

		[Token(Token = "0x4001956")]
		public const string VRTP_VERSION = "1.2.0b1";

		[Token(Token = "0x4001957")]
		public const int VRTP_VERSION_MAJOR = 1;

		[Token(Token = "0x4001958")]
		public const int VRTP_VERSION_MINOR = 2;

		[Token(Token = "0x4001959")]
		public const int VRTP_VERSION_PATCH = 0;

		[Token(Token = "0x400195A")]
		public const string VRTP_VERSION_BETA = "b1";

		[Token(Token = "0x400195B")]
		public const string GLOBAL_PROP_FOGCOLOR = "_VRTP_Cage_FogColor";

		[Token(Token = "0x400195C")]
		public const string GLOBAL_PROP_FOGDENSITY = "_VRTP_Cage_FogDensity";

		[Token(Token = "0x400195D")]
		public const string GLOBAL_PROP_FOGPOWER = "_VRTP_Cage_FogPower";

		[Token(Token = "0x400195E")]
		public const string GLOBAL_PROP_FOGBLEND = "_VRTP_Cage_FogBlend";

		[Token(Token = "0x400195F")]
		protected const string PATH_SHADERS = "Hidden/VrTunnellingPro/";

		[Token(Token = "0x4001960")]
		protected const string PATH_MESHES = "Meshes/";

		[Token(Token = "0x4001961")]
		protected const string PATH_IRISMESH = "Iris";

		[Token(Token = "0x4001962")]
		protected const string PROP_OUTER = "_FxOuter";

		[Token(Token = "0x4001963")]
		protected const string PROP_INNER = "_FxInner";

		[Token(Token = "0x4001964")]
		protected const string PROP_COLOR = "_Color";

		[Token(Token = "0x4001965")]
		protected const string PROP_SKYBOX = "_Skybox";

		[Token(Token = "0x4001966")]
		protected const string PROP_EYEPRJ = "_EyeProjection";

		[Token(Token = "0x4001967")]
		protected const string PROP_EYEMAT = "_EyeToWorld";

		[Token(Token = "0x4001968")]
		protected const string KEYWORD_BKG = "TUNNEL_BKG";

		[Token(Token = "0x4001969")]
		protected const string KEYWORD_SKYBOX = "TUNNEL_SKYBOX";

		[Token(Token = "0x400196A")]
		protected const string KEYWORD_OVERLAY = "TUNNEL_OVERLAY";

		[Token(Token = "0x400196B")]
		public const float FEATHER_MAX = 0.5f;

		[Token(Token = "0x400196C")]
		public const float MOTION_STRENGTH_MAX = 2f;

		[Token(Token = "0x400196D")]
		public const float COUNTER_STRENGTH_MAX = 2f;

		[Token(Token = "0x400196E")]
		public const int FPSDIV_MAX = 60;

		[Token(Token = "0x400196F")]
		private const float COVERAGE_MIN = 0.65f;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int _propFxInner;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int _propFxOuter;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _propEyeProjection;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _propEyeToWorld;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int _globPropFogColor;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected int _globPropFogDensity;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int _globPropFogPower;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int _globPropFogBlend;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Matrix4x4[] _eyeToWorld;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Matrix4x4[] _eyeProjection;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACD70", Offset = "0xAACD70")]
		public Transform motionTarget;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACDA8", Offset = "0xAACDA8")]
		public Color effectColor;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAACDE0", Offset = "0xAACDE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACDE0", Offset = "0xAACDE0")]
		public float effectCoverage;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAACE34", Offset = "0xAACE34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACE34", Offset = "0xAACE34")]
		public float effectFeather;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Cubemap effectSkybox;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool applyColorToBackground;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACE88", Offset = "0xAACE88")]
		public bool useAngularVelocity;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAACEC0", Offset = "0xAACEC0")]
		public float angularVelocityStrength;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float angularVelocityMin;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float angularVelocityMax;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float angularVelocitySmoothing;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACED8", Offset = "0xAACED8")]
		public bool useAcceleration;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAACF10", Offset = "0xAACF10")]
		public float accelerationStrength;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float accelerationMin;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float accelerationMax;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float accelerationSmoothing;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACF28", Offset = "0xAACF28")]
		public bool useVelocity;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAACF60", Offset = "0xAACF60")]
		public float velocityStrength;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float velocityMin;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float velocityMax;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float velocitySmoothing;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACF78", Offset = "0xAACF78")]
		public Transform motionEffectTarget;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACFB0", Offset = "0xAACFB0")]
		public bool useCounterMotion;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAACFE8", Offset = "0xAACFE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAACFE8", Offset = "0xAACFE8")]
		public float counterRotationStrength;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD03C", Offset = "0xAAD03C")]
		public Vector3 counterRotationPerAxis;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD074", Offset = "0xAAD074")]
		public bool useArtificialTilt;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD0AC", Offset = "0xAAD0AC")]
		public float tiltStrength;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD0E4", Offset = "0xAAD0E4")]
		public Vector2 tiltMaxAngles;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD11C", Offset = "0xAAD11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD11C", Offset = "0xAAD11C")]
		public float tiltSmoothTime;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD170", Offset = "0xAAD170")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD170", Offset = "0xAAD170")]
		public int framerateDivision;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool divideTranslation;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		public bool divideRotation;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion _lastRot;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 _lastFwd;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector3 _lastPos;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float _lastSpeed;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _lastVel;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Quaternion _cmRot;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float _avSmoothed;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float _avSlew;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float _speedSmoothed;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float _speedSlew;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float _accelSmoothed;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float _accelSlew;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Transform _prevMotionEffectTarget;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool _prevUseTilt;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 _tiltAccelSmoothed;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 _tiltAccelSlew;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Angle3 _tiltInit;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int _lastFpsDivision;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Vector3 _mfxTgtLocalPosInit;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Quaternion _mfxTgtLocalRotInit;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected Camera _cam;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected bool _hasDrawnThisFrame;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 _fpsPosition;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion _fpsRotation;

		[Token(Token = "0x170001EF")]
		public bool usingMotionEffectTarget
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xFF89B0", Offset = "0xFF89B0", VA = "0xFF89B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xFF89D0", Offset = "0xFF89D0", VA = "0xFF89D0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xFF8B44", Offset = "0xFF8B44", VA = "0xFF8B44", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xFF8BB4", Offset = "0xFF8BB4", VA = "0xFF8BB4")]
		protected void ApplyPresetBase(TunnellingPresetBase p)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xFF8E0C", Offset = "0xFF8E0C", VA = "0xFF8E0C")]
		protected void FillMaskBuffer(CommandBuffer cb, List<Renderer> rs, Material m)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xFF8B48", Offset = "0xFF8B48", VA = "0xFF8B48")]
		protected void ResetMotion()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xFF8FDC", Offset = "0xFF8FDC", VA = "0xFF8FDC", Slot = "6")]
		public virtual void ResetCounterMotion()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xFF902C", Offset = "0xFF902C", VA = "0xFF902C")]
		private float RemapRadius(float radius)
		{
			return default(float);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xFF904C", Offset = "0xFF904C", VA = "0xFF904C")]
		protected float CalculateMotion(float dT)
		{
			return default(float);
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xFF98BC", Offset = "0xFF98BC", VA = "0xFF98BC")]
		public static Vector3 SmoothDampAngle(Vector3 current, Vector3 target, ref Vector3 vel, float smoothTime, float maxSpeed, float dT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xFF99BC", Offset = "0xFF99BC", VA = "0xFF99BC", Slot = "7")]
		protected virtual void UpdateCounterMotion(Vector3 deltaPos, Quaternion deltaRot)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xFF9A20", Offset = "0xFF9A20", VA = "0xFF9A20")]
		protected Quaternion GetCounterRotationDelta(Quaternion deltaRot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xFF9ABC", Offset = "0xFF9ABC", VA = "0xFF9ABC")]
		protected void UpdateEyeMatrices()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xFF9FD8", Offset = "0xFF9FD8", VA = "0xFF9FD8", Slot = "8")]
		protected virtual void CorrectEyeMatrices(Matrix4x4[] eyePrj, Matrix4x4[] eyeToWorld)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xFF9FDC", Offset = "0xFF9FDC", VA = "0xFF9FDC")]
		protected void ApplyEyeMatrices(Material m)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xFFA028", Offset = "0xFFA028", VA = "0xFFA028")]
		protected TunnellingBase()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public struct Angle
	{
		[Token(Token = "0x20003EA")]
		public enum AngleType
		{
			[Token(Token = "0x40019C6")]
			ANGLE,
			[Token(Token = "0x40019C7")]
			ACUTE,
			[Token(Token = "0x40019C8")]
			REFLEX
		}

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _angle;

		[Token(Token = "0x170001F0")]
		public float angle
		{
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x13428C4", Offset = "0x13428C4", VA = "0x13428C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F1")]
		public float acute
		{
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x13428CC", Offset = "0x13428CC", VA = "0x13428CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F2")]
		public float reflex
		{
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0x1342984", Offset = "0x1342984", VA = "0x1342984")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x13429C4", Offset = "0x13429C4", VA = "0x13429C4")]
		public Angle(float a)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x13429F4", Offset = "0x13429F4", VA = "0x13429F4")]
		public Angle(Angle a)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x1342A24", Offset = "0x1342A24", VA = "0x1342A24")]
		public float ToFloat(AngleType type)
		{
			return default(float);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x134290C", Offset = "0x134290C", VA = "0x134290C")]
		public static float ToAngle(float a, AngleType type)
		{
			return default(float);
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x1342A30", Offset = "0x1342A30", VA = "0x1342A30", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x1342AB8", Offset = "0x1342AB8", VA = "0x1342AB8")]
		public static bool operator <(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x1342AC4", Offset = "0x1342AC4", VA = "0x1342AC4")]
		public static bool operator >(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x1342AD0", Offset = "0x1342AD0", VA = "0x1342AD0")]
		public static bool operator <=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x1342ADC", Offset = "0x1342ADC", VA = "0x1342ADC")]
		public static bool operator >=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x1342AE8", Offset = "0x1342AE8", VA = "0x1342AE8")]
		public static Angle operator +(Angle a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x1342B00", Offset = "0x1342B00", VA = "0x1342B00")]
		public static Angle operator -(Angle a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x1342B18", Offset = "0x1342B18", VA = "0x1342B18")]
		public static bool operator ==(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x1342B24", Offset = "0x1342B24", VA = "0x1342B24")]
		public static bool operator !=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x1342B30", Offset = "0x1342B30", VA = "0x1342B30", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x1342BF4", Offset = "0x1342BF4", VA = "0x1342BF4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x1342BFC", Offset = "0x1342BFC", VA = "0x1342BFC")]
		public static bool operator <(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x1342C38", Offset = "0x1342C38", VA = "0x1342C38")]
		public static bool operator >(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x1342C74", Offset = "0x1342C74", VA = "0x1342C74")]
		public static bool operator <=(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x1342CB0", Offset = "0x1342CB0", VA = "0x1342CB0")]
		public static bool operator >=(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x1342CEC", Offset = "0x1342CEC", VA = "0x1342CEC")]
		public static Angle operator +(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x1342D2C", Offset = "0x1342D2C", VA = "0x1342D2C")]
		public static Angle operator -(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x1342D6C", Offset = "0x1342D6C", VA = "0x1342D6C")]
		public static Angle operator *(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x1342D84", Offset = "0x1342D84", VA = "0x1342D84")]
		public static Angle operator /(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1342D9C", Offset = "0x1342D9C", VA = "0x1342D9C")]
		public static bool operator <(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1342DC0", Offset = "0x1342DC0", VA = "0x1342DC0")]
		public static bool operator >(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1342DE4", Offset = "0x1342DE4", VA = "0x1342DE4")]
		public static bool operator <=(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1342E08", Offset = "0x1342E08", VA = "0x1342E08")]
		public static bool operator >=(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x1342E2C", Offset = "0x1342E2C", VA = "0x1342E2C")]
		public static Angle operator +(float a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x1342E68", Offset = "0x1342E68", VA = "0x1342E68")]
		public static Angle operator -(float a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x1342EA4", Offset = "0x1342EA4", VA = "0x1342EA4")]
		public static implicit operator Angle(float f)
		{
			return default(Angle);
		}
	}
	[Token(Token = "0x20003EB")]
	public struct Angle3
	{
		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Angle x;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Angle y;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Angle z;

		[Token(Token = "0x170001F3")]
		public Vector3 eulerAngles
		{
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0x1342EB4", Offset = "0x1342EB4", VA = "0x1342EB4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001F4")]
		public Vector3 eulerAcute
		{
			[Token(Token = "0x60014E5")]
			[Address(RVA = "0x1342EC0", Offset = "0x1342EC0", VA = "0x1342EC0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001F5")]
		public Vector3 eulerReflex
		{
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0x1342F70", Offset = "0x1342F70", VA = "0x1342F70")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001F6")]
		public Angle angle
		{
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0x1343020", Offset = "0x1343020", VA = "0x1343020")]
			get
			{
				return default(Angle);
			}
		}

		[Token(Token = "0x170001F7")]
		public Vector3 axis
		{
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x13430C8", Offset = "0x13430C8", VA = "0x13430C8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x1343100", Offset = "0x1343100", VA = "0x1343100")]
		public Angle3(float x, float y, float z)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x1343174", Offset = "0x1343174", VA = "0x1343174")]
		public Angle3(Angle x, Angle y, Angle z)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x1343178", Offset = "0x1343178", VA = "0x1343178")]
		public Angle3(Vector3 euler)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x134317C", Offset = "0x134317C", VA = "0x134317C")]
		public Angle3(Quaternion rotation)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x1343054", Offset = "0x1343054", VA = "0x1343054")]
		public void ToAxisAngle(out Vector3 axis, out Angle angle)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x13431BC", Offset = "0x13431BC", VA = "0x13431BC")]
		public Vector3 ToEuler(Angle.AngleType type)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1343224", Offset = "0x1343224", VA = "0x1343224", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x13432EC", Offset = "0x13432EC", VA = "0x13432EC")]
		public static Angle3 operator +(Angle3 a, Angle3 b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x1343390", Offset = "0x1343390", VA = "0x1343390")]
		public static Angle3 operator -(Angle3 a, Angle3 b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x1343434", Offset = "0x1343434", VA = "0x1343434")]
		public static Angle3 operator *(Angle3 a, float b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x13434D4", Offset = "0x13434D4", VA = "0x13434D4")]
		public static bool operator ==(Angle3 a, Angle3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x13434F8", Offset = "0x13434F8", VA = "0x13434F8")]
		public static bool operator !=(Angle3 a, Angle3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x134351C", Offset = "0x134351C", VA = "0x134351C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x134360C", Offset = "0x134360C", VA = "0x134360C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x1343640", Offset = "0x1343640", VA = "0x1343640")]
		public static implicit operator Angle3(Vector3 v)
		{
			return default(Angle3);
		}
	}
	[Token(Token = "0x20003EC")]
	public abstract class TunnellingImageBase : TunnellingBase
	{
		[Token(Token = "0x20003ED")]
		public enum BlurKernel
		{
			[Token(Token = "0x4001A27")]
			FIVE,
			[Token(Token = "0x4001A28")]
			NINE,
			[Token(Token = "0x4001A29")]
			THIRTEEN
		}

		[Token(Token = "0x20003EE")]
		public enum CounterVelocityMode
		{
			[Token(Token = "0x4001A2B")]
			OFF,
			[Token(Token = "0x4001A2C")]
			SHADER,
			[Token(Token = "0x4001A2D")]
			REAL
		}

		[Token(Token = "0x40019CC")]
		private const string KEYWORD_MASK = "TUNNEL_MASK";

		[Token(Token = "0x40019CD")]
		private const string KEYWORD_CONSTANT = "TUNNEL_CONSTANT";

		[Token(Token = "0x40019CE")]
		private const string KEYWORD_INVERT = "TUNNEL_INVERT_MASK";

		[Token(Token = "0x40019CF")]
		private const string KEYWORD_BLUR = "TUNNEL_BLUR";

		[Token(Token = "0x40019D0")]
		private const string PATH_TUNNELSHADER = "Tunnelling";

		[Token(Token = "0x40019D1")]
		private const string PATH_MASKSHADER = "Mask";

		[Token(Token = "0x40019D2")]
		private const string PATH_WINDOWSHADER = "Window";

		[Token(Token = "0x40019D3")]
		private const string PATH_COPYSHADER = "BlitA";

		[Token(Token = "0x40019D4")]
		private const string PATH_BLURSHADER = "SeparableBlur";

		[Token(Token = "0x40019D5")]
		private const string PATH_IRISSHADER = "TunnellingVertex";

		[Token(Token = "0x40019D6")]
		private const string PATH_SKYSPHERESHADER = "Skysphere";

		[Token(Token = "0x40019D7")]
		private const string PATH_SKYSPHEREMESH = "Skysphere";

		[Token(Token = "0x40019D8")]
		private const string PROP_FEATHER = "_Feather";

		[Token(Token = "0x40019D9")]
		private const string PROP_BKGRT = "_BkgTex";

		[Token(Token = "0x40019DA")]
		private const string PROP_MASKRT = "_MaskTex";

		[Token(Token = "0x40019DB")]
		private const string PROP_BLUR = "_Blur";

		[Token(Token = "0x40019DC")]
		private const string PROP_OVERLAY = "_Overlay";

		[Token(Token = "0x40019DD")]
		private const string PROP_BLUR_OFFSETS = "_Offsets";

		[Token(Token = "0x40019DE")]
		private const float BLUR_OFFSET_1 = 1.3333334f;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float[] BLUR_OFFSETS_9;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float[] BLUR_OFFSETS_13;

		[Token(Token = "0x40019E1")]
		public const string GLOBAL_PROP_WORLD2CAGE = "_VRTP_WorldToCage";

		[Token(Token = "0x40019E2")]
		public const string GLOBAL_PROP_WORLD2CAGE_NORMAL = "_VRTP_WorldToCageNormal";

		[Token(Token = "0x40019E3")]
		public const string GLOBAL_PROP_CAGEPOS = "_VRTP_CagePos";

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAD1C8", Offset = "0xAAD1C8")]
		private static TunnellingImageBase <instance>k__BackingField;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD1D8", Offset = "0xAAD1D8")]
		public BackgroundMode backgroundMode;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD210", Offset = "0xAAD210")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD210", Offset = "0xAAD210")]
		public float effectOverlay;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD264", Offset = "0xAAD264")]
		[SerializeField]
		private GameObject _cageParent;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD2B0", Offset = "0xAAD2B0")]
		public int cageDownsample;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public MSAA cageAntiAliasing;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public bool cageUpdateEveryFrame;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD2C8", Offset = "0xAAD2C8")]
		public float cageFogDensity;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD2E8", Offset = "0xAAD2E8")]
		public float cageFogPower;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD300", Offset = "0xAAD300")]
		public float cageFogBlend;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public MaskMode maskMode;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD318", Offset = "0xAAD318")]
		public int blurDownsample;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD330", Offset = "0xAAD330")]
		public float blurDistance;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD348", Offset = "0xAAD348")]
		public int blurPasses;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public BlurKernel blurSamples;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public CounterVelocityMode counterVelocityMode;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD360", Offset = "0xAAD360")]
		public float counterVelocityResetDistance;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD398", Offset = "0xAAD398")]
		public float counterVelocityResetTime;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD3D0", Offset = "0xAAD3D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD3D0", Offset = "0xAAD3D0")]
		public float counterVelocityStrength;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD424", Offset = "0xAAD424")]
		public Vector3 counterVelocityPerAxis;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD45C", Offset = "0xAAD45C")]
		public bool irisZRejection;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private CommandBuffer _maskCmd;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Material _matTunnel;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Material _matMask;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Material _matWindow;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Material _matCopyAlpha;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Material _matBlur;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Material _matSkysphere;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Mesh _meshSkysphere;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private MeshRenderer[] _cageMrs;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private List<MeshFilter> _cageMfs;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private List<Renderer> _maskObjects;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private RenderTexture _cageRt;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private RenderTexture _maskRt;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private RenderTexture _blurRt0;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private RenderTexture _blurRt1;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private int _rtX;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private int _rtY;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int _rtA;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private CommandBuffer _irisCmd;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Material _matIris;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Mesh _meshIris;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Vector4[] _blurOffsets;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private MaskMode _lastMaskMode;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private MSAA _lastCageMsaa;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private bool _camHasMaskBuffer;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private int _lastCageDownsample;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private int _lastBlurDownsample;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private float _lastBlurRadius;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private BlurKernel _lastBlurKernel;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private bool _wasDrawingIrisEarly;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E5")]
		private bool _camHasIrisBuffer;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private CounterVelocityMode _lastCvMode;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private Vector3 _cmPos;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Vector3 _cageInitialPosLocal;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private float _timeToResetCounterVelocity;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private int _propColor;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private int _propBkgRt;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private int _propMaskRt;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		private int _propSkybox;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private int _propOverlay;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private int _propBlur;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private int _propBlurOffsets;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private int _globPropWorld2Cage;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private int _globPropWorld2CageNormal;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private int _globPropCagePos;

		[Token(Token = "0x170001F8")]
		public static TunnellingImageBase instance
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0xFFA120", Offset = "0xFFA120", VA = "0xFFA120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF974", Offset = "0xABF974")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0xFFA184", Offset = "0xFFA184", VA = "0xFFA184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF984", Offset = "0xABF984")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public bool usingMask
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0xFFA1EC", Offset = "0xFFA1EC", VA = "0xFFA1EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FA")]
		public bool usingCage
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0xFFA1FC", Offset = "0xFFA1FC", VA = "0xFFA1FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FB")]
		private bool _usingCageRt
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0xFFA220", Offset = "0xFFA220", VA = "0xFFA220")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FC")]
		private bool _canDrawIris
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0xFFA234", Offset = "0xFFA234", VA = "0xFFA234")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FD")]
		private bool _drawIris
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0xFFA268", Offset = "0xFFA268", VA = "0xFFA268")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FE")]
		protected abstract CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x60014FF")]
			get;
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xFFA2A4", Offset = "0xFFA2A4", VA = "0xFFA2A4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xFFAC00", Offset = "0xFFAC00", VA = "0xFFAC00", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xFFAF9C", Offset = "0xFFAF9C", VA = "0xFFAF9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xFFB020", Offset = "0xFFB020", VA = "0xFFB020")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xFFB22C", Offset = "0xFFB22C", VA = "0xFFB22C")]
		private void ReleaseRT(ref RenderTexture rt)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xFFB2B8", Offset = "0xFFB2B8", VA = "0xFFB2B8")]
		public void AddObjectToMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xFFB58C", Offset = "0xFFB58C", VA = "0xFFB58C")]
		public void RemoveObjectFromMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xFFAC90", Offset = "0xFFAC90", VA = "0xFFAC90")]
		public void UpdateCage()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xFFB684", Offset = "0xFFB684", VA = "0xFFB684", Slot = "6")]
		public override void ResetCounterMotion()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xFFB748", Offset = "0xFFB748", VA = "0xFFB748")]
		public void ApplyPreset(TunnellingPreset p)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xFFB940", Offset = "0xFFB940", VA = "0xFFB940")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xFFBF88", Offset = "0xFFBF88", VA = "0xFFBF88")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xFF8344", Offset = "0xFF8344", VA = "0xFF8344")]
		protected void Draw(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xFFC740", Offset = "0xFFC740", VA = "0xFFC740", Slot = "8")]
		protected override void CorrectEyeMatrices(Matrix4x4[] eyePrj, Matrix4x4[] eyeToWorld)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xFFC7C0", Offset = "0xFFC7C0", VA = "0xFFC7C0", Slot = "7")]
		protected override void UpdateCounterMotion(Vector3 deltaPos, Quaternion deltaRot)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xFFA928", Offset = "0xFFA928", VA = "0xFFA928")]
		private void UpdateKeywords()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xFFBC9C", Offset = "0xFFBC9C", VA = "0xFFBC9C")]
		private void UpdateBlurKernel()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xFFC974", Offset = "0xFFC974", VA = "0xFFC974")]
		private int GetMsaa(MSAA m, int srcMsaa)
		{
			return default(int);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xFFC128", Offset = "0xFFC128", VA = "0xFFC128")]
		private void UpdateRenderTextures(int srcX, int srcY, int srcMsaa)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xFFB3B0", Offset = "0xFFB3B0", VA = "0xFFB3B0")]
		private void ResetMaskCommandBuffer()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xFFAED4", Offset = "0xFFAED4", VA = "0xFFAED4")]
		private void ToggleMaskCommandBuffer(bool on)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xFFAF44", Offset = "0xFFAF44", VA = "0xFFAF44")]
		private void ToggleIrisCommandBuffer(bool on)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xFF8888", Offset = "0xFF8888", VA = "0xFF8888")]
		protected TunnellingImageBase()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA772C", Offset = "0xAA772C")]
	public class TunnellingMaskObject : MonoBehaviour
	{
		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoAddChildren;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _r;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _started;

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x12B50B4", Offset = "0x12B50B4", VA = "0x12B50B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x12B5108", Offset = "0x12B5108", VA = "0x12B5108")]
		private void Start()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x12B5114", Offset = "0x12B5114", VA = "0x12B5114")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x12B52D8", Offset = "0x12B52D8", VA = "0x12B52D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x12B5484", Offset = "0x12B5484", VA = "0x12B5484")]
		public TunnellingMaskObject()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA778C", Offset = "0xAA778C")]
	public class TunnellingMaskObjectMobile : MonoBehaviour
	{
		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoAddChildren;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _r;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _started;

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x12B548C", Offset = "0x12B548C", VA = "0x12B548C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x12B54E0", Offset = "0x12B54E0", VA = "0x12B54E0")]
		private void Start()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x12B54EC", Offset = "0x12B54EC", VA = "0x12B54EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x12B5734", Offset = "0x12B5734", VA = "0x12B5734")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x12B5964", Offset = "0x12B5964", VA = "0x12B5964")]
		public TunnellingMaskObjectMobile()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class TunnellingMobile : TunnellingBase
	{
		[Token(Token = "0x4001A34")]
		public const string GLOBAL_PROP_STENCILREF = "_VRTP_Stencil_Ref";

		[Token(Token = "0x4001A35")]
		public const string GLOBAL_PROP_STENCILMASK = "_VRTP_Stencil_Mask";

		[Token(Token = "0x4001A36")]
		public const string GLOBAL_PROP_STENCILBIAS = "_VRTP_Stencil_Bias";

		[Token(Token = "0x4001A37")]
		private const string PATH_SHADER = "TunnellingVertex";

		[Token(Token = "0x4001A38")]
		private const string PATH_STENCILSHADER = "TunnellingMobileStencil";

		[Token(Token = "0x4001A39")]
		private const CameraEvent CEVENT_FX = CameraEvent.BeforeImageEffects;

		[Token(Token = "0x4001A3A")]
		private const CameraEvent CEVENT_Z = CameraEvent.BeforeForwardOpaque;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAD494", Offset = "0xAAD494")]
		private static TunnellingMobile <instance>k__BackingField;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material _stencilMat;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD4A4", Offset = "0xAAD4A4")]
		public bool drawSkybox;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD4DC", Offset = "0xAAD4DC")]
		public bool useMask;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD514", Offset = "0xAAD514")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD514", Offset = "0xAAD514")]
		public int stencilReference;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD56C", Offset = "0xAAD56C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD56C", Offset = "0xAAD56C")]
		public int stencilMask;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD5C4", Offset = "0xAAD5C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAD5C4", Offset = "0xAAD5C4")]
		public float stencilBias;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private int _propColor;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private int _propSkybox;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private int _globPropStencilRef;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int _globPropStencilMask;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private int _globPropStencilBias;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Material _irisMat;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Mesh _irisMesh;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private CommandBuffer _zCmd;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private CommandBuffer _fxCmd;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private CommandBuffer _maskCmd;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private List<Renderer> _maskObjects;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private bool _wasUsingMask;

		[Token(Token = "0x170001FF")]
		public static TunnellingMobile instance
		{
			[Token(Token = "0x6001522")]
			[Address(RVA = "0x12B596C", Offset = "0x12B596C", VA = "0x12B596C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF994", Offset = "0xABF994")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001523")]
			[Address(RVA = "0x12B59B8", Offset = "0x12B59B8", VA = "0x12B59B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF9A4", Offset = "0xABF9A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public static Material stencilMat
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0x12B5A08", Offset = "0x12B5A08", VA = "0x12B5A08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x12B5B10", Offset = "0x12B5B10", VA = "0x12B5B10")]
		public void ApplyPreset(TunnellingPresetMobile p)
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x12B563C", Offset = "0x12B563C", VA = "0x12B563C")]
		public void AddObjectToMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x12B586C", Offset = "0x12B586C", VA = "0x12B586C")]
		public void RemoveObjectFromMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x12B5C14", Offset = "0x12B5C14", VA = "0x12B5C14", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x12B61A4", Offset = "0x12B61A4", VA = "0x12B61A4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x12B6230", Offset = "0x12B6230", VA = "0x12B6230")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x12B6298", Offset = "0x12B6298", VA = "0x12B6298")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x12B5FEC", Offset = "0x12B5FEC", VA = "0x12B5FEC")]
		private void ResetEffectCommandBuffer(bool mask)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x12B5BBC", Offset = "0x12B5BBC", VA = "0x12B5BBC")]
		private void ResetMaskCommandBuffer()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x12B61D0", Offset = "0x12B61D0", VA = "0x12B61D0")]
		private void SetCommandBuffers(bool mask)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x12B6238", Offset = "0x12B6238", VA = "0x12B6238")]
		private void UnsetCommandBuffers(bool mask)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x12B6348", Offset = "0x12B6348", VA = "0x12B6348")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x12B6528", Offset = "0x12B6528", VA = "0x12B6528")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x12B6558", Offset = "0x12B6558", VA = "0x12B6558")]
		public TunnellingMobile()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class TunnellingOpaque : TunnellingImageBase
	{
		[Token(Token = "0x17000201")]
		protected override CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x12B65E8", Offset = "0x12B65E8", VA = "0x12B65E8", Slot = "9")]
			get
			{
				return default(CameraEvent);
			}
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x12B65F0", Offset = "0x12B65F0", VA = "0x12B65F0")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x12B65F8", Offset = "0x12B65F8", VA = "0x12B65F8")]
		public TunnellingOpaque()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAA77EC", Offset = "0xAA77EC")]
	public class TunnellingPreset : TunnellingPresetBase
	{
		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD618", Offset = "0xAAD618")]
		[SerializeField]
		private float _effectOverlay;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private bool _overrideEffectOverlay;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TunnellingBase.BackgroundMode _backgroundMode;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private bool _overrideBackgroundMode;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD688", Offset = "0xAAD688")]
		[SerializeField]
		private int _cageDownsample;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private bool _overrideCageDownsample;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TunnellingBase.MSAA _cageAntiAliasing;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private bool _overrideCageAntiAliasing;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		[SerializeField]
		private bool _cageUpdateEveryFrame;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		[SerializeField]
		private bool _overrideCageUpdateEveryFrame;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD718", Offset = "0xAAD718")]
		private float _cageFogDensity;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private bool _overrideCageFogDensity;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD770", Offset = "0xAAD770")]
		[SerializeField]
		private float _cageFogPower;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool _overrideCageFogPower;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD7C0", Offset = "0xAAD7C0")]
		[SerializeField]
		private float _cageFogBlend;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private bool _overrideCageFogBlend;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TunnellingBase.MaskMode _maskMode;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool _overrideMaskMode;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD830", Offset = "0xAAD830")]
		private int _blurDownsample;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private bool _overrideBlurDownsample;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD880", Offset = "0xAAD880")]
		private float _blurDistance;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool _overrideBlurDistance;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD8D0", Offset = "0xAAD8D0")]
		private int _blurPasses;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool _overrideBlurPasses;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TunnellingImageBase.BlurKernel _blurSamples;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private bool _overrideBlurSamples;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private TunnellingImageBase.CounterVelocityMode _counterVelocityMode;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private bool _overrideCounterVelocityMode;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float _counterVelocityResetDistance;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private bool _overrideCounterVelocityResetDistance;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private float _counterVelocityResetTime;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private bool _overrideCounterVelocityResetTime;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAD9A0", Offset = "0xAAD9A0")]
		private float _counterVelocityStrength;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool _overrideCounterVelocityStrength;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Vector3 _counterVelocityPerAxis;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private bool _overrideCounterVelocityPerAxis;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		[SerializeField]
		private bool _irisZRejection;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
		[SerializeField]
		private bool _overrideIrisZRejection;

		[Token(Token = "0x17000202")]
		public float effectOverlay
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0x12B665C", Offset = "0x12B665C", VA = "0x12B665C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000203")]
		public bool overrideEffectOverlay
		{
			[Token(Token = "0x6001537")]
			[Address(RVA = "0x12B6664", Offset = "0x12B6664", VA = "0x12B6664")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000204")]
		public TunnellingBase.BackgroundMode backgroundMode
		{
			[Token(Token = "0x6001538")]
			[Address(RVA = "0x12B666C", Offset = "0x12B666C", VA = "0x12B666C")]
			get
			{
				return default(TunnellingBase.BackgroundMode);
			}
		}

		[Token(Token = "0x17000205")]
		public bool overrideBackgroundMode
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0x12B6674", Offset = "0x12B6674", VA = "0x12B6674")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000206")]
		public int cageDownsample
		{
			[Token(Token = "0x600153A")]
			[Address(RVA = "0x12B6694", Offset = "0x12B6694", VA = "0x12B6694")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000207")]
		public bool overrideCageDownsample
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0x12B669C", Offset = "0x12B669C", VA = "0x12B669C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000208")]
		public TunnellingBase.MSAA cageAntiAliasing
		{
			[Token(Token = "0x600153C")]
			[Address(RVA = "0x12B66BC", Offset = "0x12B66BC", VA = "0x12B66BC")]
			get
			{
				return default(TunnellingBase.MSAA);
			}
		}

		[Token(Token = "0x17000209")]
		public bool overrideCageAntiAliasing
		{
			[Token(Token = "0x600153D")]
			[Address(RVA = "0x12B66C4", Offset = "0x12B66C4", VA = "0x12B66C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020A")]
		public bool cageUpdateEveryFrame
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0x12B66E4", Offset = "0x12B66E4", VA = "0x12B66E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020B")]
		public bool overrideCageUpdateEveryFrame
		{
			[Token(Token = "0x600153F")]
			[Address(RVA = "0x12B66EC", Offset = "0x12B66EC", VA = "0x12B66EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020C")]
		public float cageFogDensity
		{
			[Token(Token = "0x6001540")]
			[Address(RVA = "0x12B670C", Offset = "0x12B670C", VA = "0x12B670C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020D")]
		public bool overrideCageFogDensity
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x12B6714", Offset = "0x12B6714", VA = "0x12B6714")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020E")]
		public float cageFogPower
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x12B6734", Offset = "0x12B6734", VA = "0x12B6734")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020F")]
		public bool overrideCageFogPower
		{
			[Token(Token = "0x6001543")]
			[Address(RVA = "0x12B673C", Offset = "0x12B673C", VA = "0x12B673C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000210")]
		public float cageFogBlend
		{
			[Token(Token = "0x6001544")]
			[Address(RVA = "0x12B675C", Offset = "0x12B675C", VA = "0x12B675C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000211")]
		public bool overrideCageFogBlend
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0x12B6764", Offset = "0x12B6764", VA = "0x12B6764")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000212")]
		public TunnellingBase.MaskMode maskMode
		{
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x12B6784", Offset = "0x12B6784", VA = "0x12B6784")]
			get
			{
				return default(TunnellingBase.MaskMode);
			}
		}

		[Token(Token = "0x17000213")]
		public bool overrideMaskMode
		{
			[Token(Token = "0x6001547")]
			[Address(RVA = "0x12B678C", Offset = "0x12B678C", VA = "0x12B678C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000214")]
		public int blurDownsample
		{
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x12B67AC", Offset = "0x12B67AC", VA = "0x12B67AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000215")]
		public bool overrideBlurDownsample
		{
			[Token(Token = "0x6001549")]
			[Address(RVA = "0x12B67B4", Offset = "0x12B67B4", VA = "0x12B67B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000216")]
		public float blurDistance
		{
			[Token(Token = "0x600154A")]
			[Address(RVA = "0x12B67D4", Offset = "0x12B67D4", VA = "0x12B67D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000217")]
		public bool overrideBlurDistance
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x12B67DC", Offset = "0x12B67DC", VA = "0x12B67DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000218")]
		public int blurPasses
		{
			[Token(Token = "0x600154C")]
			[Address(RVA = "0x12B67FC", Offset = "0x12B67FC", VA = "0x12B67FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000219")]
		public bool overrideBlurPasses
		{
			[Token(Token = "0x600154D")]
			[Address(RVA = "0x12B6804", Offset = "0x12B6804", VA = "0x12B6804")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021A")]
		public TunnellingImageBase.BlurKernel blurSamples
		{
			[Token(Token = "0x600154E")]
			[Address(RVA = "0x12B6824", Offset = "0x12B6824", VA = "0x12B6824")]
			get
			{
				return default(TunnellingImageBase.BlurKernel);
			}
		}

		[Token(Token = "0x1700021B")]
		public bool overrideBlurSamples
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0x12B682C", Offset = "0x12B682C", VA = "0x12B682C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021C")]
		public TunnellingImageBase.CounterVelocityMode counterVelocityMode
		{
			[Token(Token = "0x6001550")]
			[Address(RVA = "0x12B684C", Offset = "0x12B684C", VA = "0x12B684C")]
			get
			{
				return default(TunnellingImageBase.CounterVelocityMode);
			}
		}

		[Token(Token = "0x1700021D")]
		public bool overrideCounterVelocityMode
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x12B6854", Offset = "0x12B6854", VA = "0x12B6854")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021E")]
		public float counterVelocityResetDistance
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x12B6874", Offset = "0x12B6874", VA = "0x12B6874")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700021F")]
		public bool overrideCounterVelocityResetDistance
		{
			[Token(Token = "0x6001553")]
			[Address(RVA = "0x12B687C", Offset = "0x12B687C", VA = "0x12B687C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000220")]
		public float counterVelocityResetTime
		{
			[Token(Token = "0x6001554")]
			[Address(RVA = "0x12B689C", Offset = "0x12B689C", VA = "0x12B689C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000221")]
		public bool overrideCounterVelocityResetTime
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0x12B68A4", Offset = "0x12B68A4", VA = "0x12B68A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000222")]
		public float counterVelocityStrength
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x12B68C4", Offset = "0x12B68C4", VA = "0x12B68C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000223")]
		public bool overrideCounterVelocityStrength
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x12B68CC", Offset = "0x12B68CC", VA = "0x12B68CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000224")]
		public Vector3 counterVelocityPerAxis
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0x12B68EC", Offset = "0x12B68EC", VA = "0x12B68EC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000225")]
		public bool overrideCounterVelocityPerAxis
		{
			[Token(Token = "0x6001559")]
			[Address(RVA = "0x12B68FC", Offset = "0x12B68FC", VA = "0x12B68FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000226")]
		public bool irisZRejection
		{
			[Token(Token = "0x600155A")]
			[Address(RVA = "0x12B691C", Offset = "0x12B691C", VA = "0x12B691C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000227")]
		public bool overrideIrisZRejection
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0x12B6924", Offset = "0x12B6924", VA = "0x12B6924")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x12B6944", Offset = "0x12B6944", VA = "0x12B6944")]
		public TunnellingPreset()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public abstract class TunnellingPresetBase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20003F5")]
		public class MotionSettings
		{
			[Token(Token = "0x4001A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private bool _use;

			[Token(Token = "0x4001A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAADCF4", Offset = "0xAADCF4")]
			[SerializeField]
			private float _strength;

			[Token(Token = "0x4001A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private float _min;

			[Token(Token = "0x4001A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private float _max;

			[Token(Token = "0x4001A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private float _smoothing;

			[Token(Token = "0x17000247")]
			public bool use
			{
				[Token(Token = "0x600157D")]
				[Address(RVA = "0xE6CB20", Offset = "0xE6CB20", VA = "0xE6CB20")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000248")]
			public float strength
			{
				[Token(Token = "0x600157E")]
				[Address(RVA = "0xE6CB28", Offset = "0xE6CB28", VA = "0xE6CB28")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000249")]
			public float min
			{
				[Token(Token = "0x600157F")]
				[Address(RVA = "0xE6CB30", Offset = "0xE6CB30", VA = "0xE6CB30")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700024A")]
			public float max
			{
				[Token(Token = "0x6001580")]
				[Address(RVA = "0xE6CB38", Offset = "0xE6CB38", VA = "0xE6CB38")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700024B")]
			public float smoothing
			{
				[Token(Token = "0x6001581")]
				[Address(RVA = "0xE6CB40", Offset = "0xE6CB40", VA = "0xE6CB40")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001582")]
			[Address(RVA = "0xE6CB48", Offset = "0xE6CB48", VA = "0xE6CB48")]
			public MotionSettings()
			{
			}
		}

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _overrideAll;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAADA40", Offset = "0xAADA40")]
		[SerializeField]
		private float _effectCoverage;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _overrideEffectCoverage;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _effectColor;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _overrideEffectColor;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAADAB0", Offset = "0xAADAB0")]
		private float _effectFeather;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _overrideEffectFeather;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool _applyColorToBackground;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[SerializeField]
		private bool _overrideApplyColorToBackground;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Cubemap _skybox;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _overrideSkybox;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MotionSettings _angularVelocity;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _overrideAngularVelocity;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MotionSettings _acceleration;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool _overrideAcceleration;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MotionSettings _velocity;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _overrideVelocity;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		private bool _useCounterMotion;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		private bool _overrideUseCounterMotion;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAADBC0", Offset = "0xAADBC0")]
		private float _counterRotationStrength;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool _overrideCounterRotationStrength;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Vector3 _counterRotationPerAxis;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool _overrideCounterRotationPerAxis;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool _useArtificialTilt;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[SerializeField]
		private bool _overrideUseArtificialTilt;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAADC50", Offset = "0xAADC50")]
		private int _framerateDivision;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool _overrideFramerateDivision;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		private bool _divideTranslation;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[SerializeField]
		private bool _overrideDivideTranslation;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		[SerializeField]
		private bool _divideRotation;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private bool _overrideDivideRotation;

		[Token(Token = "0x17000228")]
		protected bool overrideAll
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0x12B6AA4", Offset = "0x12B6AA4", VA = "0x12B6AA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000229")]
		public float effectCoverage
		{
			[Token(Token = "0x600155E")]
			[Address(RVA = "0x12B6AAC", Offset = "0x12B6AAC", VA = "0x12B6AAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700022A")]
		public bool overrideEffectCoverage
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0x12B6AB4", Offset = "0x12B6AB4", VA = "0x12B6AB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022B")]
		public Color effectColor
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0x12B6AD4", Offset = "0x12B6AD4", VA = "0x12B6AD4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700022C")]
		public bool overrideEffectColor
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0x12B6AE0", Offset = "0x12B6AE0", VA = "0x12B6AE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022D")]
		public float effectFeather
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x12B6B00", Offset = "0x12B6B00", VA = "0x12B6B00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700022E")]
		public bool overrideEffectFeather
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x12B6B08", Offset = "0x12B6B08", VA = "0x12B6B08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022F")]
		public bool applyColorToBackground
		{
			[Token(Token = "0x6001564")]
			[Address(RVA = "0x12B6B28", Offset = "0x12B6B28", VA = "0x12B6B28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000230")]
		public bool overrideApplyColorToBackground
		{
			[Token(Token = "0x6001565")]
			[Address(RVA = "0x12B6B30", Offset = "0x12B6B30", VA = "0x12B6B30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000231")]
		public Cubemap skybox
		{
			[Token(Token = "0x6001566")]
			[Address(RVA = "0x12B6B50", Offset = "0x12B6B50", VA = "0x12B6B50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public bool overrideSkybox
		{
			[Token(Token = "0x6001567")]
			[Address(RVA = "0x12B6B58", Offset = "0x12B6B58", VA = "0x12B6B58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000233")]
		public MotionSettings angularVelocity
		{
			[Token(Token = "0x6001568")]
			[Address(RVA = "0x12B6B78", Offset = "0x12B6B78", VA = "0x12B6B78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		public bool overrideAngularVelocity
		{
			[Token(Token = "0x6001569")]
			[Address(RVA = "0x12B6B80", Offset = "0x12B6B80", VA = "0x12B6B80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000235")]
		public MotionSettings acceleration
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0x12B6BA0", Offset = "0x12B6BA0", VA = "0x12B6BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public bool overrideAcceleration
		{
			[Token(Token = "0x600156B")]
			[Address(RVA = "0x12B6BA8", Offset = "0x12B6BA8", VA = "0x12B6BA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000237")]
		public MotionSettings velocity
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0x12B6BC8", Offset = "0x12B6BC8", VA = "0x12B6BC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		public bool overrideVelocity
		{
			[Token(Token = "0x600156D")]
			[Address(RVA = "0x12B6BD0", Offset = "0x12B6BD0", VA = "0x12B6BD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000239")]
		public bool useCounterMotion
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0x12B6BF0", Offset = "0x12B6BF0", VA = "0x12B6BF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023A")]
		public bool overrideUseCounterMotion
		{
			[Token(Token = "0x600156F")]
			[Address(RVA = "0x12B6BF8", Offset = "0x12B6BF8", VA = "0x12B6BF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023B")]
		public float counterRotationStrength
		{
			[Token(Token = "0x6001570")]
			[Address(RVA = "0x12B6C18", Offset = "0x12B6C18", VA = "0x12B6C18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023C")]
		public bool overrideCounterRotationStrength
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0x12B6C20", Offset = "0x12B6C20", VA = "0x12B6C20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023D")]
		public Vector3 counterRotationPerAxis
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0x12B6C40", Offset = "0x12B6C40", VA = "0x12B6C40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700023E")]
		public bool overrideCounterRotationPerAxis
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x12B6C4C", Offset = "0x12B6C4C", VA = "0x12B6C4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023F")]
		public bool useArtificialTilt
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0x12B6C6C", Offset = "0x12B6C6C", VA = "0x12B6C6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000240")]
		public bool overrideUseArtificialTilt
		{
			[Token(Token = "0x6001575")]
			[Address(RVA = "0x12B6C74", Offset = "0x12B6C74", VA = "0x12B6C74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000241")]
		public int framerateDivision
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0x12B6C94", Offset = "0x12B6C94", VA = "0x12B6C94")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000242")]
		public bool overrideFramerateDivision
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0x12B6C9C", Offset = "0x12B6C9C", VA = "0x12B6C9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000243")]
		public bool divideTranslation
		{
			[Token(Token = "0x6001578")]
			[Address(RVA = "0x12B6CBC", Offset = "0x12B6CBC", VA = "0x12B6CBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000244")]
		public bool overrideDivideTranslation
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x12B6CC4", Offset = "0x12B6CC4", VA = "0x12B6CC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000245")]
		public bool divideRotation
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0x12B6CE4", Offset = "0x12B6CE4", VA = "0x12B6CE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000246")]
		public bool overrideDividerotation
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0x12B6CEC", Offset = "0x12B6CEC", VA = "0x12B6CEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x12B69FC", Offset = "0x12B69FC", VA = "0x12B69FC")]
		protected TunnellingPresetBase()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAA782C", Offset = "0xAA782C")]
	public class TunnellingPresetMobile : TunnellingPresetBase
	{
		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		[SerializeField]
		private bool _drawSkybox;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		[SerializeField]
		private bool _overrideDrawSkybox;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
		[SerializeField]
		private bool _useMask;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool _overrideUseMask;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAADDA4", Offset = "0xAADDA4")]
		private int _stencilReference;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _overrideStencilReference;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAADDF8", Offset = "0xAADDF8")]
		[SerializeField]
		private int _stencilMask;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool _overrideStencilMask;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAADE4C", Offset = "0xAADE4C")]
		private int _stencilBias;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool _overrideStencilBias;

		[Token(Token = "0x1700024C")]
		public bool drawSkybox
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x12B6D0C", Offset = "0x12B6D0C", VA = "0x12B6D0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024D")]
		public bool overrideDrawSkybox
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x12B5B9C", Offset = "0x12B5B9C", VA = "0x12B5B9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024E")]
		public bool useMask
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x12B6D14", Offset = "0x12B6D14", VA = "0x12B6D14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024F")]
		public bool overrideUseMask
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x12B6D1C", Offset = "0x12B6D1C", VA = "0x12B6D1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000250")]
		public int stencilReference
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x12B6D24", Offset = "0x12B6D24", VA = "0x12B6D24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000251")]
		public bool overrideStencilReference
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x12B6D2C", Offset = "0x12B6D2C", VA = "0x12B6D2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000252")]
		public int stencilMask
		{
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x12B6D34", Offset = "0x12B6D34", VA = "0x12B6D34")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000253")]
		public bool overrideStencilMask
		{
			[Token(Token = "0x600158A")]
			[Address(RVA = "0x12B6D3C", Offset = "0x12B6D3C", VA = "0x12B6D3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000254")]
		public int stencilBias
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0x12B6D44", Offset = "0x12B6D44", VA = "0x12B6D44")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000255")]
		public bool overrideStencilBias
		{
			[Token(Token = "0x600158C")]
			[Address(RVA = "0x12B6D4C", Offset = "0x12B6D4C", VA = "0x12B6D4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x12B6D54", Offset = "0x12B6D54", VA = "0x12B6D54")]
		public TunnellingPresetMobile()
		{
		}
	}
}
namespace Sigtrap.VrTunnellingPro.Examples
{
	[Token(Token = "0x20003F7")]
	public class VRTP_ExampleMovement : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F8")]
		private struct Preset
		{
			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public KeyCode key;

			[Token(Token = "0x4001AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject[] worldObjects;

			[Token(Token = "0x4001AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TunnellingPreset postPreset;
		}

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _disableModes;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _rotSensitivity;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _movSensitivity;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Cubemap[] _skyboxes;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] _cages;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Preset[] _modePresets;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentMode;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _hasWarnedInput;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tunnelling _tunnelling;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController _char;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currentSkybox;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentCage;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _speedCurrent;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 _speedSlew;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _speedSmoothing;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _rotCurrent;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _rotSlew;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float _rotSmoothing;

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xE804B0", Offset = "0xE804B0", VA = "0xE804B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xE80528", Offset = "0xE80528", VA = "0xE80528")]
		private void Update()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xE80980", Offset = "0xE80980", VA = "0xE80980")]
		private void SetPreset(int i)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xE80AD8", Offset = "0xE80AD8", VA = "0xE80AD8")]
		public VRTP_ExampleMovement()
		{
		}
	}
}
namespace Sigtrap.Editors.ShaderStripper
{
	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAA7870", Offset = "0xAA7870")]
	public class ShaderForceKeywords : ShaderStripperBase
	{
		[Serializable]
		[Token(Token = "0x20003FA")]
		private struct ForceBuiltin
		{
			[Token(Token = "0x4001AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BuiltinShaderDefine defineToMatch;

			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public BuiltinShaderDefine defineToForce;

			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAADF3C", Offset = "0xAADF3C")]
			public bool invertMatch;

			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAADF74", Offset = "0xAADF74")]
			public bool invertForce;
		}

		[Serializable]
		[Token(Token = "0x20003FB")]
		private struct ForceKeyword
		{
			[Token(Token = "0x4001ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string keywordToMatch;

			[Token(Token = "0x4001ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string keywordToForce;

			[Token(Token = "0x4001ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAADFAC", Offset = "0xAADFAC")]
			public bool invertMatch;

			[Token(Token = "0x4001AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAADFE4", Offset = "0xAADFE4")]
			public bool invertForce;
		}

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ForceBuiltin[] _forceBuiltins;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ForceKeyword[] _forceKeywords;

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x1042C94", Offset = "0x1042C94", VA = "0x1042C94")]
		public ShaderForceKeywords()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class ShaderLog
	{
		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> log;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAE01C", Offset = "0xAAE01C")]
		private string <logName>k__BackingField;

		[Token(Token = "0x17000256")]
		public string logName
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0x1042CC4", Offset = "0x1042CC4", VA = "0x1042CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF9C4", Offset = "0xABF9C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001594")]
			[Address(RVA = "0x1042CCC", Offset = "0x1042CCC", VA = "0x1042CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF9D4", Offset = "0xABF9D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public int Count
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x1042CD4", Offset = "0x1042CD4", VA = "0x1042CD4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x1042D20", Offset = "0x1042D20", VA = "0x1042D20")]
		public ShaderLog(string logName)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x1042DAC", Offset = "0x1042DAC", VA = "0x1042DAC")]
		public void Add(string s)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x1042E10", Offset = "0x1042E10", VA = "0x1042E10")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x1042E64", Offset = "0x1042E64", VA = "0x1042E64")]
		public void Insert(int index, string s)
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x1042ED0", Offset = "0x1042ED0", VA = "0x1042ED0")]
		public bool Contains(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x1042F34", Offset = "0x1042F34", VA = "0x1042F34")]
		public string[] ToArray()
		{
			return null;
		}
	}
	[Token(Token = "0x20003FD")]
	public abstract class ShaderStripperBase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20003FE")]
		protected class StringMatch
		{
			[Token(Token = "0x20003FF")]
			public enum MatchType
			{
				[Token(Token = "0x4001ACC")]
				EQUALS,
				[Token(Token = "0x4001ACD")]
				CONTAINS,
				[Token(Token = "0x4001ACE")]
				STARTSWITH,
				[Token(Token = "0x4001ACF")]
				ENDSWITH
			}

			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MatchType matchType;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string namePattern;

			[Token(Token = "0x4001ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool caseInsensitive;

			[Token(Token = "0x600159E")]
			[Address(RVA = "0xE67EBC", Offset = "0xE67EBC", VA = "0xE67EBC")]
			public bool Evaluate(string name)
			{
				return default(bool);
			}

			[Token(Token = "0x600159F")]
			[Address(RVA = "0xE67FB4", Offset = "0xE67FB4", VA = "0xE67FB4")]
			public StringMatch()
			{
			}
		}

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private bool _expanded;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[HideInInspector]
		private int _order;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _active;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _notes;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _logOutput;

		[Token(Token = "0x17000258")]
		public bool active
		{
			[Token(Token = "0x600159C")]
			[Address(RVA = "0x104309C", Offset = "0x104309C", VA = "0x104309C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x1042CAC", Offset = "0x1042CAC", VA = "0x1042CAC")]
		protected ShaderStripperBase()
		{
		}
	}
	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAA78AC", Offset = "0xAA78AC")]
	public class ShaderStripperPath : ShaderStripperBase
	{
		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StringMatch[] _pathBlacklist;

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x10430A4", Offset = "0x10430A4", VA = "0x10430A4")]
		public ShaderStripperPath()
		{
		}
	}
	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAA78E8", Offset = "0xAA78E8")]
	public class ShaderStripperPlatform : ShaderStripperBase
	{
		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE0DC", Offset = "0xAAE0DC")]
		private bool _whitelist;

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x10430BC", Offset = "0x10430BC", VA = "0x10430BC")]
		public ShaderStripperPlatform()
		{
		}
	}
	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAA7924", Offset = "0xAA7924")]
	public class ShaderStripperSimple : ShaderStripperBase
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE128", Offset = "0xAAE128")]
		private List<StringMatch> _blacklistedShaderNames;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE174", Offset = "0xAAE174")]
		private List<PassType> _blacklistedPassTypes;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE1C0", Offset = "0xAAE1C0")]
		private List<string> _blacklistedKeywords;

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x10430D4", Offset = "0x10430D4", VA = "0x10430D4")]
		public ShaderStripperSimple()
		{
		}
	}
	[Token(Token = "0x2000403")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xAA7960", Offset = "0xAA7960")]
	public class ShaderStripperVariantCollection : ShaderStripperBase, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE20C", Offset = "0xAAE20C")]
		private string _mergeToFile;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE258", Offset = "0xAAE258")]
		private List<ShaderVariantCollection> _whitelistedCollections;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private List<string> _collectionPaths;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE2DC", Offset = "0xAAE2DC")]
		[SerializeField]
		private bool _stripHidden;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE328", Offset = "0xAAE328")]
		[SerializeField]
		private bool _allowVrVariants;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE374", Offset = "0xAAE374")]
		[SerializeField]
		private bool _allowInstancedVariants;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE3C0", Offset = "0xAAE3C0")]
		private StringMatch[] _ignoreShadersByName;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE40C", Offset = "0xAAE40C")]
		private List<PassType> _ignorePassTypes;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _valid;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _dirty;

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x10430EC", Offset = "0x10430EC", VA = "0x10430EC", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x10430F8", Offset = "0x10430F8", VA = "0x10430F8", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x1043104", Offset = "0x1043104", VA = "0x1043104")]
		public ShaderStripperVariantCollection()
		{
		}
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x2000404")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x24D0660", Offset = "0x24D0660", VA = "0x24D0660")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x2000405")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xBEB650", Offset = "0xBEB650", VA = "0xBEB650")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x2000406")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xFF0D7C", Offset = "0xFF0D7C", VA = "0xFF0D7C")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x2000407")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xFF0DA8", Offset = "0xFF0DA8", VA = "0xFF0DA8")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x2000409")]
		private static class Uniforms
		{
			[Token(Token = "0x4001AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x4001AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x4001AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _FogParams;

			[Token(Token = "0x4001AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Downsample;

			[Token(Token = "0x4001AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x4001AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x4001AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x4001AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x200040A")]
		private enum OcclusionSource
		{
			[Token(Token = "0x4001AF1")]
			DepthTexture,
			[Token(Token = "0x4001AF2")]
			DepthNormalsTexture,
			[Token(Token = "0x4001AF3")]
			GBuffer
		}

		[Token(Token = "0x4001AE3")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x4001AE4")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x17000259")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x133F880", Offset = "0x133F880", VA = "0x133F880")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x1700025A")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x133F928", Offset = "0x133F928", VA = "0x133F928")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025B")]
		public override bool active
		{
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x133F9BC", Offset = "0x133F9BC", VA = "0x133F9BC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x133FA34", Offset = "0x133FA34", VA = "0x133FA34", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x133FA70", Offset = "0x133FA70", VA = "0x133FA70", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x133FAB4", Offset = "0x133FAB4", VA = "0x133FAB4", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x133FB18", Offset = "0x133FB18", VA = "0x133FB18", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x134052C", Offset = "0x134052C", VA = "0x134052C")]
		public AmbientOcclusionComponent()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x200040C")]
		private static class Uniforms
		{
			[Token(Token = "0x4001AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4001AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x4001AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x4001AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x4001AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x4001AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x4001AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x4001AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x4001AF4")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x1700025C")]
		public override bool active
		{
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0xFFCBC4", Offset = "0xFFCBC4", VA = "0xFFCBC4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xFFCC3C", Offset = "0xFFCC3C", VA = "0xFFCC3C")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xFFD604", Offset = "0xFFD604", VA = "0xFFD604")]
		public BloomComponent()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x200040E")]
		private static class Uniforms
		{
			[Token(Token = "0x4001B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4001B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x4001B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x4001B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x4001B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x200040F")]
		private enum Pass
		{
			[Token(Token = "0x4001B0B")]
			Depth,
			[Token(Token = "0x4001B0C")]
			Normals,
			[Token(Token = "0x4001B0D")]
			MovecOpacity,
			[Token(Token = "0x4001B0E")]
			MovecImaging,
			[Token(Token = "0x4001B0F")]
			MovecArrows
		}

		[Token(Token = "0x2000410")]
		private class ArrowArray
		{
			[Token(Token = "0x4001B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAE458", Offset = "0xAAE458")]
			private Mesh <mesh>k__BackingField;

			[Token(Token = "0x4001B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAE468", Offset = "0xAAE468")]
			private int <columnCount>k__BackingField;

			[Token(Token = "0x4001B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAE478", Offset = "0xAAE478")]
			private int <rowCount>k__BackingField;

			[Token(Token = "0x1700025E")]
			public Mesh mesh
			{
				[Token(Token = "0x60015C3")]
				[Address(RVA = "0xE911C4", Offset = "0xE911C4", VA = "0xE911C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF9E4", Offset = "0xABF9E4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60015C4")]
				[Address(RVA = "0xE911CC", Offset = "0xE911CC", VA = "0xE911CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABF9F4", Offset = "0xABF9F4")]
				private set
				{
				}
			}

			[Token(Token = "0x1700025F")]
			public int columnCount
			{
				[Token(Token = "0x60015C5")]
				[Address(RVA = "0xE911D4", Offset = "0xE911D4", VA = "0xE911D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFA04", Offset = "0xABFA04")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60015C6")]
				[Address(RVA = "0xE911DC", Offset = "0xE911DC", VA = "0xE911DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFA14", Offset = "0xABFA14")]
				private set
				{
				}
			}

			[Token(Token = "0x17000260")]
			public int rowCount
			{
				[Token(Token = "0x60015C7")]
				[Address(RVA = "0xE911E4", Offset = "0xE911E4", VA = "0xE911E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFA24", Offset = "0xABFA24")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60015C8")]
				[Address(RVA = "0xE911EC", Offset = "0xE911EC", VA = "0xE911EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFA34", Offset = "0xABFA34")]
				private set
				{
				}
			}

			[Token(Token = "0x60015C9")]
			[Address(RVA = "0xE911F4", Offset = "0xE911F4", VA = "0xE911F4")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x60015CA")]
			[Address(RVA = "0xE915A0", Offset = "0xE915A0", VA = "0xE915A0")]
			public void Release()
			{
			}

			[Token(Token = "0x60015CB")]
			[Address(RVA = "0xE915CC", Offset = "0xE915CC", VA = "0xE915CC")]
			public ArrowArray()
			{
			}
		}

		[Token(Token = "0x4001B01")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x1700025D")]
		public override bool active
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x1002C08", Offset = "0x1002C08", VA = "0x1002C08", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x1002C80", Offset = "0x1002C80", VA = "0x1002C80", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x1002CEC", Offset = "0x1002CEC", VA = "0x1002CEC", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x1002D48", Offset = "0x1002D48", VA = "0x1002D48", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x1002D8C", Offset = "0x1002D8C", VA = "0x1002D8C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x1002EB0", Offset = "0x1002EB0", VA = "0x1002EB0")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x1002FDC", Offset = "0x1002FDC", VA = "0x1002FDC")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x10030AC", Offset = "0x10030AC", VA = "0x10030AC")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x1003638", Offset = "0x1003638", VA = "0x1003638")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x1003738", Offset = "0x1003738", VA = "0x1003738", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x1003768", Offset = "0x1003768", VA = "0x1003768")]
		public BuiltinDebugViewsComponent()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x2000412")]
		private static class Uniforms
		{
			[Token(Token = "0x4001B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x4001B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x17000261")]
		public override bool active
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x1081AB8", Offset = "0x1081AB8", VA = "0x1081AB8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x1081B30", Offset = "0x1081B30", VA = "0x1081B30", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x1081B5C", Offset = "0x1081B5C", VA = "0x1081B5C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x1081E58", Offset = "0x1081E58", VA = "0x1081E58")]
		public ChromaticAberrationComponent()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x2000414")]
		private static class Uniforms
		{
			[Token(Token = "0x4001B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x4001B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x4001B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x4001B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x4001B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x4001B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x4001B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x4001B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x4001B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x4001B16")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x4001B17")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x4001B18")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_pixels;

		[Token(Token = "0x17000262")]
		public override bool active
		{
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0x1084A6C", Offset = "0x1084A6C", VA = "0x1084A6C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x1084AD8", Offset = "0x1084AD8", VA = "0x1084AD8")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x1084B04", Offset = "0x1084B04", VA = "0x1084B04")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x1084B94", Offset = "0x1084B94", VA = "0x1084B94")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x1084CB4", Offset = "0x1084CB4", VA = "0x1084CB4")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x1084D5C", Offset = "0x1084D5C", VA = "0x1084D5C")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x1084DE0", Offset = "0x1084DE0", VA = "0x1084DE0")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x1084E44", Offset = "0x1084E44", VA = "0x1084E44")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x1084F38", Offset = "0x1084F38", VA = "0x1084F38")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x1084FD4", Offset = "0x1084FD4", VA = "0x1084FD4")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, out Vector3 outLift, out Vector3 outGamma, out Vector3 outGain)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x108507C", Offset = "0x108507C", VA = "0x108507C")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x10850F8", Offset = "0x10850F8", VA = "0x10850F8")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x10851CC", Offset = "0x10851CC", VA = "0x10851CC")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x1085240", Offset = "0x1085240", VA = "0x1085240")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, out Vector3 outSlope, out Vector3 outPower, out Vector3 outOffset)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x10852E8", Offset = "0x10852E8", VA = "0x10852E8")]
		private TextureFormat GetCurveFormat()
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x108531C", Offset = "0x108531C", VA = "0x108531C")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x10858CC", Offset = "0x10858CC", VA = "0x10858CC")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x1085974", Offset = "0x1085974", VA = "0x1085974")]
		private RenderTextureFormat GetLutFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x10859A4", Offset = "0x10859A4", VA = "0x10859A4")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x1086220", Offset = "0x1086220", VA = "0x1086220", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x1086418", Offset = "0x1086418", VA = "0x1086418")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x1086544", Offset = "0x1086544", VA = "0x1086544", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x10865B4", Offset = "0x10865B4", VA = "0x10865B4")]
		public ColorGradingComponent()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x2000416")]
		private static class Uniforms
		{
			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DepthOfFieldCoCTex;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Distance;

			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _CoCTex;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TaaParams;

			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x4001B2F")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x4001B31")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x17000263")]
		public override bool active
		{
			[Token(Token = "0x60015E9")]
			[Address(RVA = "0x108EBCC", Offset = "0x108EBCC", VA = "0x108EBCC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x108EC38", Offset = "0x108EC38", VA = "0x108EC38", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x108EC40", Offset = "0x108EC40", VA = "0x108EC40")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x108ECE0", Offset = "0x108ECE0", VA = "0x108ECE0")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x108ED60", Offset = "0x108ED60", VA = "0x108ED60")]
		private bool CheckHistory(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x108EE3C", Offset = "0x108EE3C", VA = "0x108EE3C")]
		private RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x108EE8C", Offset = "0x108EE8C", VA = "0x108EE8C")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC, Vector2 taaJitter, float taaBlending)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x108F614", Offset = "0x108F614", VA = "0x108F614", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x108F698", Offset = "0x108F698", VA = "0x108F698")]
		public DepthOfFieldComponent()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x2000418")]
		private static class Uniforms
		{
			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x4001B3F")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x17000264")]
		public override bool active
		{
			[Token(Token = "0x60015F3")]
			[Address(RVA = "0x1C2DDC8", Offset = "0x1C2DDC8", VA = "0x1C2DDC8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x1C2DE34", Offset = "0x1C2DE34", VA = "0x1C2DE34", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x1C2DE3C", Offset = "0x1C2DE3C", VA = "0x1C2DE3C")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x1C2DF9C", Offset = "0x1C2DF9C", VA = "0x1C2DF9C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x1C2E174", Offset = "0x1C2E174", VA = "0x1C2E174")]
		public DitheringComponent()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x200041A")]
		private static class Uniforms
		{
			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4001B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x4001B4A")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x4001B4B")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x4001B4C")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x17000265")]
		public override bool active
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0x1C3A4B4", Offset = "0x1C3A4B4", VA = "0x1C3A4B4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x1C3A52C", Offset = "0x1C3A52C", VA = "0x1C3A52C")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x1C3A538", Offset = "0x1C3A538", VA = "0x1C3A538", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x1C3A544", Offset = "0x1C3A544", VA = "0x1C3A544", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x1C3A63C", Offset = "0x1C3A63C", VA = "0x1C3A63C")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x1C3A728", Offset = "0x1C3A728", VA = "0x1C3A728")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x1C3B11C", Offset = "0x1C3B11C", VA = "0x1C3B11C")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x1C3B298", Offset = "0x1C3B298", VA = "0x1C3B298")]
		public EyeAdaptationComponent()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x200041C")]
		private static class Uniforms
		{
			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x4001B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x4001B53")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x17000266")]
		public override bool active
		{
			[Token(Token = "0x6001602")]
			[Address(RVA = "0x13C3B88", Offset = "0x13C3B88", VA = "0x13C3B88", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x13C3C14", Offset = "0x13C3C14", VA = "0x13C3C14", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x13C3C58", Offset = "0x13C3C58", VA = "0x13C3C58", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x13C3C60", Offset = "0x13C3C60", VA = "0x13C3C60", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x13C3C68", Offset = "0x13C3C68", VA = "0x13C3C68", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x13C412C", Offset = "0x13C412C", VA = "0x13C412C")]
		public FogComponent()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x200041E")]
		private static class Uniforms
		{
			[Token(Token = "0x4001B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x4001B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x17000267")]
		public override bool active
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0x13C7C38", Offset = "0x13C7C38", VA = "0x13C7C38", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x13C7CAC", Offset = "0x13C7CAC", VA = "0x13C7CAC")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x13C7F10", Offset = "0x13C7F10", VA = "0x13C7F10")]
		public FxaaComponent()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x2000420")]
		private static class Uniforms
		{
			[Token(Token = "0x4001B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x4001B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x4001B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x17000268")]
		public override bool active
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0x24D7D14", Offset = "0x24D7D14", VA = "0x24D7D14", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x24D7D9C", Offset = "0x24D7D9C", VA = "0x24D7D9C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x24D7E60", Offset = "0x24D7E60", VA = "0x24D7E60", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x24D8234", Offset = "0x24D8234", VA = "0x24D8234")]
		public GrainComponent()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x2000422")]
		private static class Uniforms
		{
			[Token(Token = "0x4001B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x4001B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x4001B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x4001B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x4001B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x4001B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x4001B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x4001B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x4001B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x4001B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x4001B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x4001B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x2000423")]
		private enum Pass
		{
			[Token(Token = "0x4001B7E")]
			VelocitySetup,
			[Token(Token = "0x4001B7F")]
			TileMax1,
			[Token(Token = "0x4001B80")]
			TileMax2,
			[Token(Token = "0x4001B81")]
			TileMaxV,
			[Token(Token = "0x4001B82")]
			NeighborMax,
			[Token(Token = "0x4001B83")]
			Reconstruction,
			[Token(Token = "0x4001B84")]
			FrameCompression,
			[Token(Token = "0x4001B85")]
			FrameBlendingChroma,
			[Token(Token = "0x4001B86")]
			FrameBlendingRaw
		}

		[Token(Token = "0x2000424")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x600161E")]
			[Address(RVA = "0xDAC818", Offset = "0xDAC818", VA = "0xDAC818")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x600161F")]
			[Address(RVA = "0xDAC85C", Offset = "0xDAC85C", VA = "0xDAC85C")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x6001620")]
			[Address(RVA = "0xDAC88C", Offset = "0xDAC88C", VA = "0xDAC88C")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x6001621")]
			[Address(RVA = "0xDAC894", Offset = "0xDAC894", VA = "0xDAC894")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, ref MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x2000425")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x2000426")]
			private struct Frame
			{
				[Token(Token = "0x4001B8D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x4001B8E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x4001B8F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x4001B90")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x6001629")]
				[Address(RVA = "0x249E0D4", Offset = "0x249E0D4", VA = "0x249E0D4")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x600162A")]
				[Address(RVA = "0x249E150", Offset = "0x249E150", VA = "0x249E150")]
				public void Release()
				{
				}

				[Token(Token = "0x600162B")]
				[Address(RVA = "0x249E218", Offset = "0x249E218", VA = "0x249E218")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x600162C")]
				[Address(RVA = "0x249E4CC", Offset = "0x249E4CC", VA = "0x249E4CC")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x6001622")]
			[Address(RVA = "0xDABF3C", Offset = "0xDABF3C", VA = "0xDABF3C")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x6001623")]
			[Address(RVA = "0xDAC0C0", Offset = "0xDAC0C0", VA = "0xDAC0C0")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001624")]
			[Address(RVA = "0xDAC14C", Offset = "0xDAC14C", VA = "0xDAC14C")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x6001625")]
			[Address(RVA = "0xDAC288", Offset = "0xDAC288", VA = "0xDAC288")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x6001626")]
			[Address(RVA = "0xDABFB0", Offset = "0xDABFB0", VA = "0xDABFB0")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x6001627")]
			[Address(RVA = "0xDABFE8", Offset = "0xDABFE8", VA = "0xDABFE8")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x6001628")]
			[Address(RVA = "0xDAC7A0", Offset = "0xDAC7A0", VA = "0xDAC7A0")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x17000269")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x6001612")]
			[Address(RVA = "0xBECB10", Offset = "0xBECB10", VA = "0xBECB10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0xBECB78", Offset = "0xBECB78", VA = "0xBECB78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		public override bool active
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0xBECBE0", Offset = "0xBECBE0", VA = "0xBECBE0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xBECCA0", Offset = "0xBECCA0", VA = "0xBECCA0", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xBECCE4", Offset = "0xBECCE4", VA = "0xBECCE4")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xBECD14", Offset = "0xBECD14", VA = "0xBECD14", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xBECD1C", Offset = "0xBECD1C", VA = "0xBECD1C", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xBECD24", Offset = "0xBECD24", VA = "0xBECD24", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xBECD30", Offset = "0xBECD30", VA = "0xBECD30", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xBED400", Offset = "0xBED400", VA = "0xBED400", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xBED414", Offset = "0xBED414", VA = "0xBED414")]
		public MotionBlurComponent()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x2000428")]
		private static class Uniforms
		{
			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x4001B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x4001B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x4001B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x4001B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x4001B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x4001B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x4001B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x4001B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x4001BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x4001BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x4001BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x4001BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x4001BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x4001BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x2000429")]
		private enum PassIndex
		{
			[Token(Token = "0x4001BBA")]
			RayTraceStep,
			[Token(Token = "0x4001BBB")]
			CompositeFinal,
			[Token(Token = "0x4001BBC")]
			Blur,
			[Token(Token = "0x4001BBD")]
			CompositeSSR,
			[Token(Token = "0x4001BBE")]
			MinMipGeneration,
			[Token(Token = "0x4001BBF")]
			HitPointToReflections,
			[Token(Token = "0x4001BC0")]
			BilateralKeyPack,
			[Token(Token = "0x4001BC1")]
			BlitDepthAsCSZ,
			[Token(Token = "0x4001BC2")]
			PoissonBlur
		}

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x1700026C")]
		public override bool active
		{
			[Token(Token = "0x600162E")]
			[Address(RVA = "0xE7EA28", Offset = "0xE7EA28", VA = "0xE7EA28", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xE7EA20", Offset = "0xE7EA20", VA = "0xE7EA20", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xE7EAA8", Offset = "0xE7EAA8", VA = "0xE7EAA8", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xE7EBFC", Offset = "0xE7EBFC", VA = "0xE7EBFC", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xE7EC40", Offset = "0xE7EC40", VA = "0xE7EC40", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xE7EC48", Offset = "0xE7EC48", VA = "0xE7EC48", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xE7FDF8", Offset = "0xE7FDF8", VA = "0xE7FDF8")]
		public ScreenSpaceReflectionComponent()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x200042B")]
		private static class Uniforms
		{
			[Token(Token = "0x4001BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x4001BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x4001BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x4001BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x4001BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x4001BC3")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x4001BC4")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAE488", Offset = "0xAAE488")]
		private Vector2 <jitterVector>k__BackingField;

		[Token(Token = "0x1700026D")]
		public override bool active
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0xF030EC", Offset = "0xF030EC", VA = "0xF030EC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026E")]
		public Vector2 jitterVector
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0xF03188", Offset = "0xF03188", VA = "0xF03188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFA44", Offset = "0xABFA44")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001638")]
			[Address(RVA = "0xF03190", Offset = "0xF03190", VA = "0xF03190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFA54", Offset = "0xABFA54")]
			private set
			{
			}
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xF03180", Offset = "0xF03180", VA = "0xF03180", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xF03198", Offset = "0xF03198", VA = "0xF03198")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xF031A4", Offset = "0xF031A4", VA = "0xF031A4")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xF03A84", Offset = "0xF03A84", VA = "0xF03A84")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xF03F2C", Offset = "0xF03F2C", VA = "0xF03F2C")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xF0342C", Offset = "0xF0342C", VA = "0xF0342C")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xF034C0", Offset = "0xF034C0", VA = "0xF034C0")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xF03930", Offset = "0xF03930", VA = "0xF03930")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xF03F70", Offset = "0xF03F70", VA = "0xF03F70", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xF04000", Offset = "0xF04000", VA = "0xF04000")]
		public TaaComponent()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x200042D")]
		private static class Uniforms
		{
			[Token(Token = "0x4001BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x4001BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x1700026F")]
		public override bool active
		{
			[Token(Token = "0x6001643")]
			[Address(RVA = "0x12BB04C", Offset = "0x12BB04C", VA = "0x12BB04C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x12BB174", Offset = "0x12BB174", VA = "0x12BB174", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x12BB2E0", Offset = "0x12BB2E0", VA = "0x12BB2E0")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x12BB40C", Offset = "0x12BB40C", VA = "0x12BB40C")]
		public UserLutComponent()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x200042F")]
		private static class Uniforms
		{
			[Token(Token = "0x4001BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x17000270")]
		public override bool active
		{
			[Token(Token = "0x6001648")]
			[Address(RVA = "0xE81ED4", Offset = "0xE81ED4", VA = "0xE81ED4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xE81F40", Offset = "0xE81F40", VA = "0xE81F40", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xE821FC", Offset = "0xE821FC", VA = "0xE821FC")]
		public VignetteComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000430")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x2000431")]
		public enum SampleCount
		{
			[Token(Token = "0x4001BD8")]
			Lowest = 3,
			[Token(Token = "0x4001BD9")]
			Low = 6,
			[Token(Token = "0x4001BDA")]
			Medium = 10,
			[Token(Token = "0x4001BDB")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x2000432")]
		public struct Settings
		{
			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAE4A8", Offset = "0xAAE4A8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE4A8", Offset = "0xAAE4A8")]
			public float intensity;

			[Token(Token = "0x4001BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xAAE4FC", Offset = "0xAAE4FC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE4FC", Offset = "0xAAE4FC")]
			public float radius;

			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE550", Offset = "0xAAE550")]
			public SampleCount sampleCount;

			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE588", Offset = "0xAAE588")]
			public bool downsampling;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE5C0", Offset = "0xAAE5C0")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE5F8", Offset = "0xAAE5F8")]
			public bool ambientOnly;

			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE630", Offset = "0xAAE630")]
			public bool highPrecision;

			[Token(Token = "0x17000272")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001650")]
				[Address(RVA = "0xE8FE24", Offset = "0xE8FE24", VA = "0xE8FE24")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000271")]
		public Settings settings
		{
			[Token(Token = "0x600164C")]
			[Address(RVA = "0x1340650", Offset = "0x1340650", VA = "0x1340650")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600164D")]
			[Address(RVA = "0x1340660", Offset = "0x1340660", VA = "0x1340660")]
			set
			{
			}
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x134066C", Offset = "0x134066C", VA = "0x134066C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x1340698", Offset = "0x1340698", VA = "0x1340698")]
		public AmbientOcclusionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000433")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x2000434")]
		public enum Method
		{
			[Token(Token = "0x4001BE5")]
			Fxaa,
			[Token(Token = "0x4001BE6")]
			Taa
		}

		[Token(Token = "0x2000435")]
		public enum FxaaPreset
		{
			[Token(Token = "0x4001BE8")]
			ExtremePerformance,
			[Token(Token = "0x4001BE9")]
			Performance,
			[Token(Token = "0x4001BEA")]
			Default,
			[Token(Token = "0x4001BEB")]
			Quality,
			[Token(Token = "0x4001BEC")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x2000436")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x4001BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE678", Offset = "0xAAE678")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAE678", Offset = "0xAAE678")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x4001BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAE6CC", Offset = "0xAAE6CC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE6CC", Offset = "0xAAE6CC")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAE728", Offset = "0xAAE728")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE728", Offset = "0xAAE728")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x2000437")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x4001BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE780", Offset = "0xAAE780")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAE780", Offset = "0xAAE780")]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4001BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE7D8", Offset = "0xAAE7D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAE7D8", Offset = "0xAAE7D8")]
			public float edgeSharpnessAmount;

			[Token(Token = "0x4001BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE82C", Offset = "0xAAE82C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAE82C", Offset = "0xAAE82C")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE880", Offset = "0xAAE880")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAE880", Offset = "0xAAE880")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x2000438")]
		public struct FxaaSettings
		{
			[Token(Token = "0x4001BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x17000274")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x6001657")]
				[Address(RVA = "0xE904DC", Offset = "0xE904DC", VA = "0xE904DC")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000439")]
		public struct TaaSettings
		{
			[Token(Token = "0x4001BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE8DC", Offset = "0xAAE8DC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAE8DC", Offset = "0xAAE8DC")]
			public float jitterSpread;

			[Token(Token = "0x4001BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE934", Offset = "0xAAE934")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAE934", Offset = "0xAAE934")]
			public float sharpen;

			[Token(Token = "0x4001BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE988", Offset = "0xAAE988")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAE988", Offset = "0xAAE988")]
			public float stationaryBlending;

			[Token(Token = "0x4001BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAE9E0", Offset = "0xAAE9E0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAE9E0", Offset = "0xAAE9E0")]
			public float motionBlending;

			[Token(Token = "0x17000275")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x6001658")]
				[Address(RVA = "0xE90500", Offset = "0xE90500", VA = "0xE90500")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200043A")]
		public struct Settings
		{
			[Token(Token = "0x4001BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x4001BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x17000276")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001659")]
				[Address(RVA = "0xE904E4", Offset = "0xE904E4", VA = "0xE904E4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000273")]
		public Settings settings
		{
			[Token(Token = "0x6001651")]
			[Address(RVA = "0x13454AC", Offset = "0x13454AC", VA = "0x13454AC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001652")]
			[Address(RVA = "0x13454C0", Offset = "0x13454C0", VA = "0x13454C0")]
			set
			{
			}
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x13454D4", Offset = "0x13454D4", VA = "0x13454D4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x1345520", Offset = "0x1345520", VA = "0x1345520")]
		public AntialiasingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200043B")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200043C")]
		public struct BloomSettings
		{
			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xAAEA48", Offset = "0xAAEA48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEA48", Offset = "0xAAEA48")]
			public float intensity;

			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xAAEA98", Offset = "0xAAEA98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEA98", Offset = "0xAAEA98")]
			public float threshold;

			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAEAE8", Offset = "0xAAEAE8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEAE8", Offset = "0xAAEAE8")]
			public float softKnee;

			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAEB3C", Offset = "0xAAEB3C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEB3C", Offset = "0xAAEB3C")]
			public float radius;

			[Token(Token = "0x4001C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEB90", Offset = "0xAAEB90")]
			public bool antiFlicker;

			[Token(Token = "0x17000278")]
			public float thresholdLinear
			{
				[Token(Token = "0x600165F")]
				[Address(RVA = "0xE90BF8", Offset = "0xE90BF8", VA = "0xE90BF8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600165E")]
				[Address(RVA = "0xE90BD0", Offset = "0xE90BD0", VA = "0xE90BD0")]
				set
				{
				}
			}

			[Token(Token = "0x17000279")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x6001660")]
				[Address(RVA = "0xE90C04", Offset = "0xE90C04", VA = "0xE90C04")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200043D")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEBC8", Offset = "0xAAEBC8")]
			public Texture texture;

			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEC00", Offset = "0xAAEC00")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xAAEC00", Offset = "0xAAEC00")]
			public float intensity;

			[Token(Token = "0x1700027A")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x6001661")]
				[Address(RVA = "0xE90C20", Offset = "0xE90C20", VA = "0xE90C20")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200043E")]
		public struct Settings
		{
			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x1700027B")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001662")]
				[Address(RVA = "0xE90C2C", Offset = "0xE90C2C", VA = "0xE90C2C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000277")]
		public Settings settings
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0xFFD684", Offset = "0xFFD684", VA = "0xFFD684")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600165B")]
			[Address(RVA = "0xFFD69C", Offset = "0xFFD69C", VA = "0xFFD69C")]
			set
			{
			}
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xFFD6B4", Offset = "0xFFD6B4", VA = "0xFFD6B4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xFFD708", Offset = "0xFFD708", VA = "0xFFD708")]
		public BloomModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200043F")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000440")]
		public struct DepthSettings
		{
			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAEC60", Offset = "0xAAEC60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEC60", Offset = "0xAAEC60")]
			public float scale;

			[Token(Token = "0x1700027E")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x6001669")]
				[Address(RVA = "0xE91748", Offset = "0xE91748", VA = "0xE91748")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000441")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAECB4", Offset = "0xAAECB4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAECB4", Offset = "0xAAECB4")]
			public float sourceOpacity;

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAED08", Offset = "0xAAED08")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAED08", Offset = "0xAAED08")]
			public float motionImageOpacity;

			[Token(Token = "0x4001C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xAAED5C", Offset = "0xAAED5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAED5C", Offset = "0xAAED5C")]
			public float motionImageAmplitude;

			[Token(Token = "0x4001C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAEDAC", Offset = "0xAAEDAC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEDAC", Offset = "0xAAEDAC")]
			public float motionVectorsOpacity;

			[Token(Token = "0x4001C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEE00", Offset = "0xAAEE00")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAEE00", Offset = "0xAAEE00")]
			public int motionVectorsResolution;

			[Token(Token = "0x4001C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xAAEE58", Offset = "0xAAEE58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEE58", Offset = "0xAAEE58")]
			public float motionVectorsAmplitude;

			[Token(Token = "0x1700027F")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x600166A")]
				[Address(RVA = "0xE91750", Offset = "0xE91750", VA = "0xE91750")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x2000442")]
		public enum Mode
		{
			[Token(Token = "0x4001C11")]
			None,
			[Token(Token = "0x4001C12")]
			Depth,
			[Token(Token = "0x4001C13")]
			Normals,
			[Token(Token = "0x4001C14")]
			MotionVectors,
			[Token(Token = "0x4001C15")]
			AmbientOcclusion,
			[Token(Token = "0x4001C16")]
			EyeAdaptation,
			[Token(Token = "0x4001C17")]
			FocusPlane,
			[Token(Token = "0x4001C18")]
			PreGradingLog,
			[Token(Token = "0x4001C19")]
			LogLut,
			[Token(Token = "0x4001C1A")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x2000443")]
		public struct Settings
		{
			[Token(Token = "0x4001C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x4001C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x4001C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x17000280")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600166B")]
				[Address(RVA = "0xE9176C", Offset = "0xE9176C", VA = "0xE9176C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700027C")]
		public Settings settings
		{
			[Token(Token = "0x6001663")]
			[Address(RVA = "0x10037B4", Offset = "0x10037B4", VA = "0x10037B4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001664")]
			[Address(RVA = "0x10037C4", Offset = "0x10037C4", VA = "0x10037C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public bool willInterrupt
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0x10037D4", Offset = "0x10037D4", VA = "0x10037D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x10037F8", Offset = "0x10037F8", VA = "0x10037F8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x1002C70", Offset = "0x1002C70", VA = "0x1002C70")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x100383C", Offset = "0x100383C", VA = "0x100383C")]
		public BuiltinDebugViewsModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000444")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000445")]
		public struct Settings
		{
			[Token(Token = "0x4001C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEEB8", Offset = "0xAAEEB8")]
			public Texture2D spectralTexture;

			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAEEF0", Offset = "0xAAEEF0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEEF0", Offset = "0xAAEEF0")]
			public float intensity;

			[Token(Token = "0x17000282")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001670")]
				[Address(RVA = "0xCB5FD4", Offset = "0xCB5FD4", VA = "0xCB5FD4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000281")]
		public Settings settings
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0x1081EA4", Offset = "0x1081EA4", VA = "0x1081EA4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600166D")]
			[Address(RVA = "0x1081EB0", Offset = "0x1081EB0", VA = "0x1081EB0")]
			set
			{
			}
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x1081EB8", Offset = "0x1081EB8", VA = "0x1081EB8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x1081EE0", Offset = "0x1081EE0", VA = "0x1081EE0")]
		public ChromaticAberrationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000446")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x2000447")]
		public enum Tonemapper
		{
			[Token(Token = "0x4001C25")]
			None,
			[Token(Token = "0x4001C26")]
			ACES,
			[Token(Token = "0x4001C27")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x2000448")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x4001C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAEF74", Offset = "0xAAEF74")]
			public Tonemapper tonemapper;

			[Token(Token = "0x4001C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAEFAC", Offset = "0xAAEFAC")]
			public float neutralBlackIn;

			[Token(Token = "0x4001C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAEFCC", Offset = "0xAAEFCC")]
			public float neutralWhiteIn;

			[Token(Token = "0x4001C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAEFE4", Offset = "0xAAEFE4")]
			public float neutralBlackOut;

			[Token(Token = "0x4001C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF004", Offset = "0xAAF004")]
			public float neutralWhiteOut;

			[Token(Token = "0x4001C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF01C", Offset = "0xAAF01C")]
			public float neutralWhiteLevel;

			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF038", Offset = "0xAAF038")]
			public float neutralWhiteClip;

			[Token(Token = "0x17000286")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x600167A")]
				[Address(RVA = "0xCB6C2C", Offset = "0xCB6C2C", VA = "0xCB6C2C")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000449")]
		public struct BasicSettings
		{
			[Token(Token = "0x4001C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF050", Offset = "0xAAF050")]
			public float postExposure;

			[Token(Token = "0x4001C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF088", Offset = "0xAAF088")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF088", Offset = "0xAAF088")]
			public float temperature;

			[Token(Token = "0x4001C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF0E4", Offset = "0xAAF0E4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF0E4", Offset = "0xAAF0E4")]
			public float tint;

			[Token(Token = "0x4001C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF140", Offset = "0xAAF140")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF140", Offset = "0xAAF140")]
			public float hueShift;

			[Token(Token = "0x4001C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF19C", Offset = "0xAAF19C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF19C", Offset = "0xAAF19C")]
			public float saturation;

			[Token(Token = "0x4001C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF1F0", Offset = "0xAAF1F0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF1F0", Offset = "0xAAF1F0")]
			public float contrast;

			[Token(Token = "0x17000287")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x600167B")]
				[Address(RVA = "0xCB6394", Offset = "0xCB6394", VA = "0xCB6394")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200044A")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x4001C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x4001C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x4001C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x4001C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x17000288")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x600167C")]
				[Address(RVA = "0xCB63A4", Offset = "0xCB63A4", VA = "0xCB63A4")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200044B")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x4001C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xAAF254", Offset = "0xAAF254")]
			public Color slope;

			[Token(Token = "0x4001C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xAAF28C", Offset = "0xAAF28C")]
			public Color power;

			[Token(Token = "0x4001C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xAAF2C4", Offset = "0xAAF2C4")]
			public Color offset;

			[Token(Token = "0x17000289")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x600167D")]
				[Address(RVA = "0xCB6438", Offset = "0xCB6438", VA = "0xCB6438")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200044C")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x4001C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xAAF2FC", Offset = "0xAAF2FC")]
			public Color lift;

			[Token(Token = "0x4001C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xAAF334", Offset = "0xAAF334")]
			public Color gamma;

			[Token(Token = "0x4001C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0xAAF36C", Offset = "0xAAF36C")]
			public Color gain;

			[Token(Token = "0x1700028A")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x600167E")]
				[Address(RVA = "0xCB64C4", Offset = "0xCB64C4", VA = "0xCB64C4")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x200044D")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x4001C40")]
			Linear,
			[Token(Token = "0x4001C41")]
			Log
		}

		[Serializable]
		[Token(Token = "0x200044E")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x4001C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x4001C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x1700028B")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x600167F")]
				[Address(RVA = "0xCB63BC", Offset = "0xCB63BC", VA = "0xCB63BC")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200044F")]
		public struct CurvesSettings
		{
			[Token(Token = "0x4001C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x4001C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x4001C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x4001C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x4001C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x4001C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x4001C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x4001C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x4001C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x4001C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x4001C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x4001C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x1700028C")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x6001680")]
				[Address(RVA = "0xCB6550", Offset = "0xCB6550", VA = "0xCB6550")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000450")]
		public struct Settings
		{
			[Token(Token = "0x4001C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x4001C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x4001C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x4001C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x4001C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x1700028D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001681")]
				[Address(RVA = "0xCB6B0C", Offset = "0xCB6B0C", VA = "0xCB6B0C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAEF54", Offset = "0xAAEF54")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAAEF64", Offset = "0xAAEF64")]
		private RenderTexture <bakedLut>k__BackingField;

		[Token(Token = "0x17000283")]
		public Settings settings
		{
			[Token(Token = "0x6001671")]
			[Address(RVA = "0x1086690", Offset = "0x1086690", VA = "0x1086690")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x10866A0", Offset = "0x10866A0", VA = "0x10866A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public bool isDirty
		{
			[Token(Token = "0x6001673")]
			[Address(RVA = "0x10866D4", Offset = "0x10866D4", VA = "0x10866D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFA64", Offset = "0xABFA64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x10866DC", Offset = "0x10866DC", VA = "0x10866DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFA74", Offset = "0xABFA74")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x10866E8", Offset = "0x10866E8", VA = "0x10866E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFA84", Offset = "0xABFA84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001676")]
			[Address(RVA = "0x10866F0", Offset = "0x10866F0", VA = "0x10866F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFA94", Offset = "0xABFA94")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x10866F8", Offset = "0x10866F8", VA = "0x10866F8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x1086758", Offset = "0x1086758", VA = "0x1086758", Slot = "5")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x1086764", Offset = "0x1086764", VA = "0x1086764")]
		public ColorGradingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000451")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x2000452")]
		public enum KernelSize
		{
			[Token(Token = "0x4001C59")]
			Small,
			[Token(Token = "0x4001C5A")]
			Medium,
			[Token(Token = "0x4001C5B")]
			Large,
			[Token(Token = "0x4001C5C")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x2000453")]
		public struct Settings
		{
			[Token(Token = "0x4001C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF424", Offset = "0xAAF424")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xAAF424", Offset = "0xAAF424")]
			public float focusDistance;

			[Token(Token = "0x4001C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF478", Offset = "0xAAF478")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF478", Offset = "0xAAF478")]
			public float aperture;

			[Token(Token = "0x4001C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF4D4", Offset = "0xAAF4D4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF4D4", Offset = "0xAAF4D4")]
			public float focalLength;

			[Token(Token = "0x4001C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF52C", Offset = "0xAAF52C")]
			public bool useCameraFov;

			[Token(Token = "0x4001C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF564", Offset = "0xAAF564")]
			public KernelSize kernelSize;

			[Token(Token = "0x1700028F")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001686")]
				[Address(RVA = "0xCB86B0", Offset = "0xCB86B0", VA = "0xCB86B0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700028E")]
		public Settings settings
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0x108F6E4", Offset = "0x108F6E4", VA = "0x108F6E4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001683")]
			[Address(RVA = "0x108F6F8", Offset = "0x108F6F8", VA = "0x108F6F8")]
			set
			{
			}
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x108F70C", Offset = "0x108F70C", VA = "0x108F70C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x108F75C", Offset = "0x108F75C", VA = "0x108F75C")]
		public DepthOfFieldModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000454")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000455")]
		public struct Settings
		{
			[Token(Token = "0x17000291")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600168B")]
				[Address(RVA = "0xCB8924", Offset = "0xCB8924", VA = "0xCB8924")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000290")]
		public Settings settings
		{
			[Token(Token = "0x6001687")]
			[Address(RVA = "0x1C2E1C0", Offset = "0x1C2E1C0", VA = "0x1C2E1C0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001688")]
			[Address(RVA = "0x1C2E1C8", Offset = "0x1C2E1C8", VA = "0x1C2E1C8")]
			set
			{
			}
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x1C2E1D0", Offset = "0x1C2E1D0", VA = "0x1C2E1D0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x1C2E1F8", Offset = "0x1C2E1F8", VA = "0x1C2E1F8")]
		public DitheringModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000456")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x2000457")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x4001C65")]
			Progressive,
			[Token(Token = "0x4001C66")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x2000458")]
		public struct Settings
		{
			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF5BC", Offset = "0xAAF5BC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF5BC", Offset = "0xAAF5BC")]
			public float lowPercent;

			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF614", Offset = "0xAAF614")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF614", Offset = "0xAAF614")]
			public float highPercent;

			[Token(Token = "0x4001C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF66C", Offset = "0xAAF66C")]
			public float minLuminance;

			[Token(Token = "0x4001C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF6A4", Offset = "0xAAF6A4")]
			public float maxLuminance;

			[Token(Token = "0x4001C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xAAF6DC", Offset = "0xAAF6DC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF6DC", Offset = "0xAAF6DC")]
			public float keyValue;

			[Token(Token = "0x4001C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF72C", Offset = "0xAAF72C")]
			public bool dynamicKeyValue;

			[Token(Token = "0x4001C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF764", Offset = "0xAAF764")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x4001C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF79C", Offset = "0xAAF79C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xAAF79C", Offset = "0xAAF79C")]
			public float speedUp;

			[Token(Token = "0x4001C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0xAAF7EC", Offset = "0xAAF7EC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF7EC", Offset = "0xAAF7EC")]
			public float speedDown;

			[Token(Token = "0x4001C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF83C", Offset = "0xAAF83C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF83C", Offset = "0xAAF83C")]
			public int logMin;

			[Token(Token = "0x4001C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF890", Offset = "0xAAF890")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF890", Offset = "0xAAF890")]
			public int logMax;

			[Token(Token = "0x17000293")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001690")]
				[Address(RVA = "0xCB8AE0", Offset = "0xCB8AE0", VA = "0xCB8AE0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000292")]
		public Settings settings
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0x1C3B310", Offset = "0x1C3B310", VA = "0x1C3B310")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600168D")]
			[Address(RVA = "0x1C3B328", Offset = "0x1C3B328", VA = "0x1C3B328")]
			set
			{
			}
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x1C3B348", Offset = "0x1C3B348", VA = "0x1C3B348", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x1C3B39C", Offset = "0x1C3B39C", VA = "0x1C3B39C")]
		public EyeAdaptationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000459")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200045A")]
		public struct Settings
		{
			[Token(Token = "0x4001C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF8F4", Offset = "0xAAF8F4")]
			public bool excludeSkybox;

			[Token(Token = "0x17000295")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001695")]
				[Address(RVA = "0xCBB2A4", Offset = "0xCBB2A4", VA = "0xCBB2A4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000294")]
		public Settings settings
		{
			[Token(Token = "0x6001691")]
			[Address(RVA = "0x13C4178", Offset = "0x13C4178", VA = "0x13C4178")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001692")]
			[Address(RVA = "0x13C4180", Offset = "0x13C4180", VA = "0x13C4180")]
			set
			{
			}
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x13C4188", Offset = "0x13C4188", VA = "0x13C4188", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x13C41B0", Offset = "0x13C41B0", VA = "0x13C41B0")]
		public FogModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045B")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200045C")]
		public struct Settings
		{
			[Token(Token = "0x4001C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF93C", Offset = "0xAAF93C")]
			public bool colored;

			[Token(Token = "0x4001C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF974", Offset = "0xAAF974")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF974", Offset = "0xAAF974")]
			public float intensity;

			[Token(Token = "0x4001C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAF9C8", Offset = "0xAAF9C8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAF9C8", Offset = "0xAAF9C8")]
			public float size;

			[Token(Token = "0x4001C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFA20", Offset = "0xAAFA20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFA20", Offset = "0xAAFA20")]
			public float luminanceContribution;

			[Token(Token = "0x17000297")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600169A")]
				[Address(RVA = "0xCBC0EC", Offset = "0xCBC0EC", VA = "0xCBC0EC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000296")]
		public Settings settings
		{
			[Token(Token = "0x6001696")]
			[Address(RVA = "0x24D8280", Offset = "0x24D8280", VA = "0x24D8280")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001697")]
			[Address(RVA = "0x24D8290", Offset = "0x24D8290", VA = "0x24D8290")]
			set
			{
			}
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x24D829C", Offset = "0x24D829C", VA = "0x24D829C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x24D82C8", Offset = "0x24D82C8", VA = "0x24D82C8")]
		public GrainModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045D")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200045E")]
		public struct Settings
		{
			[Token(Token = "0x4001C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFA84", Offset = "0xAAFA84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFA84", Offset = "0xAAFA84")]
			public float shutterAngle;

			[Token(Token = "0x4001C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFADC", Offset = "0xAAFADC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFADC", Offset = "0xAAFADC")]
			public int sampleCount;

			[Token(Token = "0x4001C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFB34", Offset = "0xAAFB34")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFB34", Offset = "0xAAFB34")]
			public float frameBlending;

			[Token(Token = "0x17000299")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600169F")]
				[Address(RVA = "0xDAD630", Offset = "0xDAD630", VA = "0xDAD630")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000298")]
		public Settings settings
		{
			[Token(Token = "0x600169B")]
			[Address(RVA = "0xBED468", Offset = "0xBED468", VA = "0xBED468")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600169C")]
			[Address(RVA = "0xBED478", Offset = "0xBED478", VA = "0xBED478")]
			set
			{
			}
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xBED484", Offset = "0xBED484", VA = "0xBED484", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xBED4B0", Offset = "0xBED4B0", VA = "0xBED4B0")]
		public MotionBlurModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045F")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x2000460")]
		public enum SSRResolution
		{
			[Token(Token = "0x4001C7F")]
			High = 0,
			[Token(Token = "0x4001C80")]
			Low = 2
		}

		[Token(Token = "0x2000461")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x4001C82")]
			PhysicallyBased,
			[Token(Token = "0x4001C83")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x2000462")]
		public struct IntensitySettings
		{
			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFB98", Offset = "0xAAFB98")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFB98", Offset = "0xAAFB98")]
			public float reflectionMultiplier;

			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFBEC", Offset = "0xAAFBEC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFBEC", Offset = "0xAAFBEC")]
			public float fadeDistance;

			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFC44", Offset = "0xAAFC44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFC44", Offset = "0xAAFC44")]
			public float fresnelFade;

			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFC98", Offset = "0xAAFC98")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFC98", Offset = "0xAAFC98")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x2000463")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFCF0", Offset = "0xAAFCF0")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFD28", Offset = "0xAAFD28")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x4001C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFD60", Offset = "0xAAFD60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFD60", Offset = "0xAAFD60")]
			public float maxDistance;

			[Token(Token = "0x4001C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFDBC", Offset = "0xAAFDBC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFDBC", Offset = "0xAAFDBC")]
			public int iterationCount;

			[Token(Token = "0x4001C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFE14", Offset = "0xAAFE14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFE14", Offset = "0xAAFE14")]
			public int stepSize;

			[Token(Token = "0x4001C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFE68", Offset = "0xAAFE68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFE68", Offset = "0xAAFE68")]
			public float widthModifier;

			[Token(Token = "0x4001C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFEC0", Offset = "0xAAFEC0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFEC0", Offset = "0xAAFEC0")]
			public float reflectionBlur;

			[Token(Token = "0x4001C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFF18", Offset = "0xAAFF18")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x2000464")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFF50", Offset = "0xAAFF50")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFF50", Offset = "0xAAFF50")]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x2000465")]
		public struct Settings
		{
			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x1700029B")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60016A4")]
				[Address(RVA = "0xE67404", Offset = "0xE67404", VA = "0xE67404")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700029A")]
		public Settings settings
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0x103809C", Offset = "0x103809C", VA = "0x103809C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x10380BC", Offset = "0x10380BC", VA = "0x10380BC")]
			set
			{
			}
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x10380DC", Offset = "0x10380DC", VA = "0x10380DC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x1038144", Offset = "0x1038144", VA = "0x1038144")]
		public ScreenSpaceReflectionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000466")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000467")]
		public struct Settings
		{
			[Token(Token = "0x4001C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFFB4", Offset = "0xAAFFB4")]
			public Texture2D lut;

			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAAFFEC", Offset = "0xAAFFEC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAAFFEC", Offset = "0xAAFFEC")]
			public float contribution;

			[Token(Token = "0x1700029D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60016A9")]
				[Address(RVA = "0xE6CD70", Offset = "0xE6CD70", VA = "0xE6CD70")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700029C")]
		public Settings settings
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0x12BB458", Offset = "0x12BB458", VA = "0x12BB458")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0x12BB464", Offset = "0x12BB464", VA = "0x12BB464")]
			set
			{
			}
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x12BB46C", Offset = "0x12BB46C", VA = "0x12BB46C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x12BB494", Offset = "0x12BB494", VA = "0x12BB494")]
		public UserLutModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000468")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x2000469")]
		public enum Mode
		{
			[Token(Token = "0x4001C99")]
			Classic,
			[Token(Token = "0x4001C9A")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x200046A")]
		public struct Settings
		{
			[Token(Token = "0x4001C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0050", Offset = "0xAB0050")]
			public Mode mode;

			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAB0088", Offset = "0xAB0088")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0088", Offset = "0xAB0088")]
			public Color color;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB00D8", Offset = "0xAB00D8")]
			public Vector2 center;

			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0110", Offset = "0xAB0110")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB0110", Offset = "0xAB0110")]
			public float intensity;

			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0164", Offset = "0xAB0164")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB0164", Offset = "0xAB0164")]
			public float smoothness;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB01BC", Offset = "0xAB01BC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB01BC", Offset = "0xAB01BC")]
			public float roundness;

			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0210", Offset = "0xAB0210")]
			public Texture mask;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB0248", Offset = "0xAB0248")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0248", Offset = "0xAB0248")]
			public float opacity;

			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB029C", Offset = "0xAB029C")]
			public bool rounded;

			[Token(Token = "0x1700029F")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60016AE")]
				[Address(RVA = "0xE6CFD4", Offset = "0xE6CFD4", VA = "0xE6CFD4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700029E")]
		public Settings settings
		{
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0xE82248", Offset = "0xE82248", VA = "0xE82248")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0xE82268", Offset = "0xE82268", VA = "0xE82268")]
			set
			{
			}
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xE82288", Offset = "0xE82288", VA = "0xE82288", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xE822EC", Offset = "0xE822EC", VA = "0xE822EC")]
		public VignetteModel()
		{
		}
	}
	[Token(Token = "0x200046B")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA799C", Offset = "0xAA799C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA799C", Offset = "0xAA799C")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x161DCFC", Offset = "0x161DCFC", VA = "0x161DCFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x161E4D8", Offset = "0x161E4D8", VA = "0x161E4D8")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x161EE7C", Offset = "0x161EE7C", VA = "0x161EE7C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x161EFB4", Offset = "0x161EFB4", VA = "0x161EFB4")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x161F0C4", Offset = "0x161F0C4", VA = "0x161F0C4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x161F688", Offset = "0x161F688", VA = "0x161F688")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x161F850", Offset = "0x161F850", VA = "0x161F850")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x161FA94", Offset = "0x161FA94", VA = "0x161FA94")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x161EB58", Offset = "0x161EB58", VA = "0x161EB58")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x161EA18", Offset = "0x161EA18", VA = "0x161EA18")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x60016B9")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x60016BA")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x60016BB")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x60016BC")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x60016BD")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x60016BE")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x161FAE0", Offset = "0x161FAE0", VA = "0x161FAE0")]
		public PostProcessingBehaviour()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x170002A0")]
		public abstract bool active
		{
			[Token(Token = "0x60016C1")]
			get;
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x161FB78", Offset = "0x161FB78", VA = "0x161FB78", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x161FB80", Offset = "0x161FB80", VA = "0x161FB80", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x161FB84", Offset = "0x161FB84", VA = "0x161FB84", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60016C4")]
		public abstract PostProcessingModel GetModel();

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x161FB88", Offset = "0x161FB88", VA = "0x161FB88")]
		protected PostProcessingComponentBase()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB02D4", Offset = "0xAB02D4")]
		private T <model>k__BackingField;

		[Token(Token = "0x170002A1")]
		public T model
		{
			[Token(Token = "0x60016C6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFAA4", Offset = "0xABFAA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFAB4", Offset = "0xABFAB4")]
			internal set
			{
			}
		}

		[Token(Token = "0x60016C8")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x60016C9")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x60016CA")]
		protected PostProcessingComponent()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x60016CB")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x60016CC")]
		public abstract string GetName();

		[Token(Token = "0x60016CD")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);

		[Token(Token = "0x60016CE")]
		protected PostProcessingComponentCommandBuffer()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x60016CF")]
		public virtual void Prepare(Material material)
		{
		}

		[Token(Token = "0x60016D0")]
		protected PostProcessingComponentRenderTexture()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class PostProcessingContext
	{
		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB02E4", Offset = "0xAB02E4")]
		private bool <interrupted>k__BackingField;

		[Token(Token = "0x170002A2")]
		public bool interrupted
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x161FB90", Offset = "0x161FB90", VA = "0x161FB90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFAC4", Offset = "0xABFAC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x161FB98", Offset = "0x161FB98", VA = "0x161FB98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFAD4", Offset = "0xABFAD4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x161FBB0", Offset = "0x161FBB0", VA = "0x161FBB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A4")]
		public bool isHdr
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x161FBDC", Offset = "0x161FBDC", VA = "0x161FBDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A5")]
		public int width
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x161FBF8", Offset = "0x161FBF8", VA = "0x161FBF8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A6")]
		public int height
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x161FC14", Offset = "0x161FC14", VA = "0x161FC14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A7")]
		public Rect viewport
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x161FC30", Offset = "0x161FC30", VA = "0x161FC30")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x161FBA4", Offset = "0x161FBA4", VA = "0x161FBA4")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x161EA08", Offset = "0x161EA08", VA = "0x161EA08")]
		public PostProcessingContext Reset()
		{
			return null;
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x161E4D0", Offset = "0x161E4D0", VA = "0x161E4D0")]
		public PostProcessingContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000471")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "GetSetAttribute", RVA = "0xAB02F4", Offset = "0xAB02F4")]
		[SerializeField]
		private bool m_Enabled;

		[Token(Token = "0x170002A8")]
		public bool enabled
		{
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x161FC4C", Offset = "0x161FC4C", VA = "0x161FC4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x161FC54", Offset = "0x161FC54", VA = "0x161FC54")]
			set
			{
			}
		}

		[Token(Token = "0x60016DD")]
		public abstract void Reset();

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x161FC70", Offset = "0x161FC70", VA = "0x161FC70", Slot = "5")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x161FC74", Offset = "0x161FC74", VA = "0x161FC74")]
		protected PostProcessingModel()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x161FC7C", Offset = "0x161FC7C", VA = "0x161FC7C")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000473")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x1086624", Offset = "0x1086624", VA = "0x1086624")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x1085668", Offset = "0x1085668", VA = "0x1085668")]
		public void Cache()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x1085840", Offset = "0x1085840", VA = "0x1085840")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000474")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x170002A9")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x24D82FC", Offset = "0x24D82FC", VA = "0x24D82FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AA")]
		public static bool supportsDX11
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x24D831C", Offset = "0x24D831C", VA = "0x24D831C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AB")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x24D834C", Offset = "0x24D834C", VA = "0x24D834C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AC")]
		public static Mesh quad
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x24D8498", Offset = "0x24D8498", VA = "0x24D8498")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x24D8718", Offset = "0x24D8718", VA = "0x24D8718")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x24D881C", Offset = "0x24D881C", VA = "0x24D881C")]
		public static void ClearAndBlit(Texture source, RenderTexture destination, Material material, int pass, bool clearColor = true, bool clearDepth = false)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x24D7DC4", Offset = "0x24D7DC4", VA = "0x24D7DC4")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x24D89B4", Offset = "0x24D89B4", VA = "0x24D89B4")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x1A168B4", Offset = "0x1A168B4", VA = "0x1A168B4")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x1A16930", Offset = "0x1A16930", VA = "0x1A16930")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x1A16B38", Offset = "0x1A16B38", VA = "0x1A16B38", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xE73250", Offset = "0xE73250", VA = "0xE73250")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xE732CC", Offset = "0xE732CC", VA = "0xE732CC")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xE733E8", Offset = "0xE733E8", VA = "0xE733E8")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xE734D8", Offset = "0xE734D8", VA = "0xE734D8")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xE73618", Offset = "0xE73618", VA = "0xE73618")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xE736E8", Offset = "0xE736E8", VA = "0xE736E8", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace SSFS
{
	[Token(Token = "0x2000477")]
	public enum TextureSwapMode
	{
		[Token(Token = "0x4001CE2")]
		Manual,
		[Token(Token = "0x4001CE3")]
		Automatic,
		[Token(Token = "0x4001CE4")]
		External
	}
	[Token(Token = "0x2000478")]
	public class TextureSwapper : MonoBehaviour
	{
		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7A54", Offset = "0xAA7A54")]
		private sealed class <Transition>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextureSwapper <>4__this;

			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nextIndex;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <p>5__2;

			[Token(Token = "0x170002B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001701")]
				[Address(RVA = "0xE6AAE8", Offset = "0xE6AAE8", VA = "0xE6AAE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001703")]
				[Address(RVA = "0xE6AB30", Offset = "0xE6AB30", VA = "0xE6AB30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016FE")]
			[Address(RVA = "0xE6A754", Offset = "0xE6A754", VA = "0xE6A754")]
			[DebuggerHidden]
			public <Transition>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60016FF")]
			[Address(RVA = "0xE6A780", Offset = "0xE6A780", VA = "0xE6A780", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001700")]
			[Address(RVA = "0xE6A784", Offset = "0xE6A784", VA = "0xE6A784", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001702")]
			[Address(RVA = "0xE6AAF0", Offset = "0xE6AAF0", VA = "0xE6AAF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7A64", Offset = "0xAA7A64")]
		private sealed class <Toggle>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextureSwapper <>4__this;

			[Token(Token = "0x4001CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <p>5__2;

			[Token(Token = "0x170002B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001707")]
				[Address(RVA = "0xE6A704", Offset = "0xE6A704", VA = "0xE6A704", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001709")]
				[Address(RVA = "0xE6A74C", Offset = "0xE6A74C", VA = "0xE6A74C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001704")]
			[Address(RVA = "0xE6A4BC", Offset = "0xE6A4BC", VA = "0xE6A4BC")]
			[DebuggerHidden]
			public <Toggle>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001705")]
			[Address(RVA = "0xE6A4E8", Offset = "0xE6A4E8", VA = "0xE6A4E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001706")]
			[Address(RVA = "0xE6A4EC", Offset = "0xE6A4EC", VA = "0xE6A4EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001708")]
			[Address(RVA = "0xE6A70C", Offset = "0xE6A70C", VA = "0xE6A70C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool off;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TextureSwapMode mode;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool remote;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer targetRenderer;

		[NonSerialized]
		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer _r;

		[NonSerialized]
		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material _m;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Texture> textures;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB0370", Offset = "0xAB0370")]
		public float transitionSpeed;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float transitionDelay;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public KeyCode swapKey;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool randomOrder;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool _swapping;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float t;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float tr;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int i;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int ni;

		[Token(Token = "0x170002AD")]
		public Renderer r
		{
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0xFECE04", Offset = "0xFECE04", VA = "0xFECE04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AE")]
		public Material m
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0xFECEC8", Offset = "0xFECEC8", VA = "0xFECEC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AF")]
		public bool swapping
		{
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0xFED05C", Offset = "0xFED05C", VA = "0xFED05C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xFED064", Offset = "0xFED064", VA = "0xFED064")]
		public void Update()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xFED0F4", Offset = "0xFED0F4", VA = "0xFED0F4")]
		public void SwapTexture(int id = -1)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xFED264", Offset = "0xFED264", VA = "0xFED264")]
		public void ToggleState()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xFED1E8", Offset = "0xFED1E8", VA = "0xFED1E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABFAE4", Offset = "0xABFAE4")]
		private IEnumerator Transition(int nextIndex)
		{
			return null;
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xFED290", Offset = "0xFED290", VA = "0xFED290")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABFB44", Offset = "0xABFB44")]
		private IEnumerator Toggle()
		{
			return null;
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xFED2FC", Offset = "0xFED2FC", VA = "0xFED2FC")]
		public TextureSwapper()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public static class MaterialExtensions
	{
		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA7A84", Offset = "0xAA7A84")]
		private sealed class <SSFSPhaseTo>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material m;

			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x4001D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float endPhase;

			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <o>5__2;

			[Token(Token = "0x170002B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001713")]
				[Address(RVA = "0xDAB930", Offset = "0xDAB930", VA = "0xDAB930", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001715")]
				[Address(RVA = "0xDAB978", Offset = "0xDAB978", VA = "0xDAB978", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001710")]
			[Address(RVA = "0xDAB800", Offset = "0xDAB800", VA = "0xDAB800")]
			[DebuggerHidden]
			public <SSFSPhaseTo>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001711")]
			[Address(RVA = "0xDAB82C", Offset = "0xDAB82C", VA = "0xDAB82C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001712")]
			[Address(RVA = "0xDAB830", Offset = "0xDAB830", VA = "0xDAB830", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001714")]
			[Address(RVA = "0xDAB938", Offset = "0xDAB938", VA = "0xDAB938", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x1A166B0", Offset = "0x1A166B0", VA = "0x1A166B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABFC44", Offset = "0xABFC44")]
		public static IEnumerator SSFSPhaseTo(this Material m, float endPhase, float time = 1f)
		{
			return null;
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x1A16730", Offset = "0x1A16730", VA = "0x1A16730")]
		public static void SyncKeyword(this Material m, string keyword, bool state)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x1A167E8", Offset = "0x1A167E8", VA = "0x1A167E8")]
		public static void SetVector(this Material m, string name, Vector2 v1, Vector2 v2)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x1A16840", Offset = "0x1A16840", VA = "0x1A16840")]
		public static void GetVector(this Material m, string name, out Vector2 v1, out Vector2 v2)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x1A16878", Offset = "0x1A16878", VA = "0x1A16878")]
		public static Vector4 Append(this Vector2 v1, Vector2 v2)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x1A168A8", Offset = "0x1A168A8", VA = "0x1A168A8")]
		public static void Split(this Vector4 v0, out Vector2 v1, out Vector2 v2)
		{
		}
	}
	[Token(Token = "0x200047D")]
	public static class SSFSCore
	{
		[Token(Token = "0x170002B6")]
		public static string shaderPath
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0xE7B77C", Offset = "0xE7B77C", VA = "0xE7B77C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		public static Shader shader
		{
			[Token(Token = "0x6001717")]
			[Address(RVA = "0xE7B7C0", Offset = "0xE7B7C0", VA = "0xE7B7C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B8")]
		public static Material newMaterial
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xE7B8B8", Offset = "0xE7B8B8", VA = "0xE7B8B8")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7A94", Offset = "0xAA7A94")]
	public class SSFS_GeneratorTester : MonoBehaviour
	{
		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer _mr;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SSFSGenerator generator;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode key;

		[Token(Token = "0x170002B9")]
		private MeshRenderer mr
		{
			[Token(Token = "0x6001719")]
			[Address(RVA = "0xE7CC14", Offset = "0xE7CC14", VA = "0xE7CC14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xE7CCB4", Offset = "0xE7CCB4", VA = "0xE7CCB4")]
		private void Start()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xE7CD18", Offset = "0xE7CD18", VA = "0xE7CD18")]
		private void Update()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xE7CE0C", Offset = "0xE7CE0C", VA = "0xE7CE0C")]
		public SSFS_GeneratorTester()
		{
		}
	}
	[Token(Token = "0x200047F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7AF4", Offset = "0xAA7AF4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA7AF4", Offset = "0xAA7AF4")]
	[ExecuteInEditMode]
	public class SSFS_PostEffect : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000480")]
		public class SSFSShellVars
		{
			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color mainColor;

			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color effectColor;

			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 mainTextureOffset;

			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2 mainTextureScale;

			[Token(Token = "0x4001D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2 mainTexture2Offset;

			[Token(Token = "0x4001D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector2 mainTexture2Scale;

			[Token(Token = "0x4001D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Texture mainTexture;

			[Token(Token = "0x4001D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Texture mainTexture2;

			[Token(Token = "0x4001D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Texture noiseTexture;

			[Token(Token = "0x4001D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vector2 tileCount;

			[Token(Token = "0x4001D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Vector2 scaling;

			[Token(Token = "0x4001D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Vector2 scalingCenter;

			[Token(Token = "0x4001D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Vector2 RotationRadial;

			[Token(Token = "0x4001D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public float phase;

			[Token(Token = "0x4001D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float sharpness;

			[Token(Token = "0x4001D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public float overbright;

			[Token(Token = "0x4001D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public float aberration;

			[Token(Token = "0x4001D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public float effectAberration;

			[Token(Token = "0x4001D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public float flash;

			[Token(Token = "0x4001D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public float flicker;

			[Token(Token = "0x4001D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public float idleAmount;

			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public float idleSpeed;

			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public float idleRand;

			[Token(Token = "0x4001D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public float scattering;

			[Token(Token = "0x4001D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			public float scanlineIntensity;

			[Token(Token = "0x4001D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public float scanlineScale;

			[Token(Token = "0x4001D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public float scanlineShift;

			[Token(Token = "0x4001D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public float scanlineSpeed;

			[Token(Token = "0x4001D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			public float scaleAroundTile;

			[Token(Token = "0x4001D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public float backfaceVisibility;

			[Token(Token = "0x4001D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			public bool complex;

			[Token(Token = "0x4001D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
			public bool squareTiles;

			[Token(Token = "0x4001D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
			public bool invertPhase;

			[Token(Token = "0x4001D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCF")]
			public bool invertIdle;

			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public bool clipTiles;

			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
			public bool roundClipping;

			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
			public bool twoSided;

			[Token(Token = "0x6001723")]
			[Address(RVA = "0xE66514", Offset = "0xE66514", VA = "0xE66514")]
			public SSFSShellVars()
			{
			}

			[Token(Token = "0x6001724")]
			[Address(RVA = "0xE66604", Offset = "0xE66604", VA = "0xE66604")]
			public void Apply(ref Material m)
			{
			}
		}

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera transitionCamera;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool forceUpdate;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _m;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SSFSShellVars vars;

		[Token(Token = "0x170002BA")]
		private Material m
		{
			[Token(Token = "0x600171D")]
			[Address(RVA = "0xE7CE1C", Offset = "0xE7CE1C", VA = "0xE7CE1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xE7CFDC", Offset = "0xE7CFDC", VA = "0xE7CFDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xE7D158", Offset = "0xE7D158", VA = "0xE7D158")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xE7CFE0", Offset = "0xE7CFE0", VA = "0xE7CFE0")]
		public void UpdateMaterialVars()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xE7D208", Offset = "0xE7D208", VA = "0xE7D208")]
		private void OnRenderImage(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xE7D370", Offset = "0xE7D370", VA = "0xE7D370")]
		public SSFS_PostEffect()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class SimpleSSFSToggle : MonoBehaviour
	{
		[Token(Token = "0x2000482")]
		public enum TargetMode
		{
			[Token(Token = "0x4001D3E")]
			Material,
			[Token(Token = "0x4001D3F")]
			Renderer
		}

		[Token(Token = "0x2000483")]
		public enum ToggleMode
		{
			[Token(Token = "0x4001D41")]
			KeyPress,
			[Token(Token = "0x4001D42")]
			KeyHold,
			[Token(Token = "0x4001D43")]
			Boolean,
			[Token(Token = "0x4001D44")]
			Timer
		}

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetMode targetMode;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ToggleMode toggleMode;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer targetRenderer;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool phaseOn;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode key;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float timerDelay;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float transitionLength;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float targetPhase;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool transitioning;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material _mat;

		[Token(Token = "0x170002BB")]
		private Material mat
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0x10467F4", Offset = "0x10467F4", VA = "0x10467F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x10468A0", Offset = "0x10468A0", VA = "0x10468A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x1046A74", Offset = "0x1046A74", VA = "0x1046A74")]
		public SimpleSSFSToggle()
		{
		}
	}
}
namespace CircularGravityForce
{
	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA7B88", Offset = "0xAA7B88")]
	public class CGF : MonoBehaviour
	{
		[Token(Token = "0x2000485")]
		public delegate void ApplyCGFEvent(CGF cgf, Rigidbody rigid, Collider coll);

		[Token(Token = "0x2000486")]
		public enum ForceType
		{
			[Token(Token = "0x4001D66")]
			ForceAtPosition,
			[Token(Token = "0x4001D67")]
			Force,
			[Token(Token = "0x4001D68")]
			Torque,
			[Token(Token = "0x4001D69")]
			ExplosionForce,
			[Token(Token = "0x4001D6A")]
			GravitationalAttraction,
			[Token(Token = "0x4001D6B")]
			Velocity,
			[Token(Token = "0x4001D6C")]
			AngularVelocity
		}

		[Token(Token = "0x2000487")]
		public enum Shape
		{
			[Token(Token = "0x4001D6E")]
			Sphere,
			[Token(Token = "0x4001D6F")]
			Capsule,
			[Token(Token = "0x4001D70")]
			Raycast,
			[Token(Token = "0x4001D71")]
			Box
		}

		[Token(Token = "0x2000488")]
		public enum ForcePosition
		{
			[Token(Token = "0x4001D73")]
			ThisTransform,
			[Token(Token = "0x4001D74")]
			ClosestCollider
		}

		[Serializable]
		[Token(Token = "0x2000489")]
		public class TransformProperties
		{
			[Token(Token = "0x4001D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB09F4", Offset = "0xAB09F4")]
			[SerializeField]
			private bool toggleTransformProperties;

			[Token(Token = "0x4001D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB0A40", Offset = "0xAB0A40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0A40", Offset = "0xAB0A40")]
			[SerializeField]
			private bool overridePosition;

			[Token(Token = "0x4001D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0AB0", Offset = "0xAB0AB0")]
			private bool localPosition;

			[Token(Token = "0x4001D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0AFC", Offset = "0xAB0AFC")]
			private Vector3 positionValue;

			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB0B48", Offset = "0xAB0B48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0B48", Offset = "0xAB0B48")]
			[SerializeField]
			private bool overrideRotation;

			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0BB8", Offset = "0xAB0BB8")]
			[SerializeField]
			private bool localRotation;

			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0C04", Offset = "0xAB0C04")]
			private Vector3 rotationValue;

			[Token(Token = "0x170002D3")]
			public bool ToggleTransformProperties
			{
				[Token(Token = "0x6001775")]
				[Address(RVA = "0xE92B24", Offset = "0xE92B24", VA = "0xE92B24")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001776")]
				[Address(RVA = "0xE92B2C", Offset = "0xE92B2C", VA = "0xE92B2C")]
				set
				{
				}
			}

			[Token(Token = "0x170002D4")]
			public bool OverridePosition
			{
				[Token(Token = "0x6001777")]
				[Address(RVA = "0xE92B38", Offset = "0xE92B38", VA = "0xE92B38")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001778")]
				[Address(RVA = "0xE92B40", Offset = "0xE92B40", VA = "0xE92B40")]
				set
				{
				}
			}

			[Token(Token = "0x170002D5")]
			public bool LocalPosition
			{
				[Token(Token = "0x6001779")]
				[Address(RVA = "0xE92B4C", Offset = "0xE92B4C", VA = "0xE92B4C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600177A")]
				[Address(RVA = "0xE92B54", Offset = "0xE92B54", VA = "0xE92B54")]
				set
				{
				}
			}

			[Token(Token = "0x170002D6")]
			public Vector3 PositionValue
			{
				[Token(Token = "0x600177B")]
				[Address(RVA = "0xE92B60", Offset = "0xE92B60", VA = "0xE92B60")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600177C")]
				[Address(RVA = "0xE92B6C", Offset = "0xE92B6C", VA = "0xE92B6C")]
				set
				{
				}
			}

			[Token(Token = "0x170002D7")]
			public bool OverrideRotation
			{
				[Token(Token = "0x600177D")]
				[Address(RVA = "0xE92B78", Offset = "0xE92B78", VA = "0xE92B78")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600177E")]
				[Address(RVA = "0xE92B80", Offset = "0xE92B80", VA = "0xE92B80")]
				set
				{
				}
			}

			[Token(Token = "0x170002D8")]
			public bool LocalRotation
			{
				[Token(Token = "0x600177F")]
				[Address(RVA = "0xE92B8C", Offset = "0xE92B8C", VA = "0xE92B8C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001780")]
				[Address(RVA = "0xE92B94", Offset = "0xE92B94", VA = "0xE92B94")]
				set
				{
				}
			}

			[Token(Token = "0x170002D9")]
			public Vector3 RotationValue
			{
				[Token(Token = "0x6001781")]
				[Address(RVA = "0xE92BA0", Offset = "0xE92BA0", VA = "0xE92BA0")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001782")]
				[Address(RVA = "0xE92BAC", Offset = "0xE92BAC", VA = "0xE92BAC")]
				set
				{
				}
			}

			[Token(Token = "0x6001783")]
			[Address(RVA = "0xE92BB8", Offset = "0xE92BB8", VA = "0xE92BB8")]
			public void ValidateTransform(Transform transform)
			{
			}

			[Token(Token = "0x6001784")]
			[Address(RVA = "0xE92C60", Offset = "0xE92C60", VA = "0xE92C60")]
			public TransformProperties()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200048A")]
		public class ForcePositionProperties
		{
			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0C50", Offset = "0xAB0C50")]
			private bool toggleForcePositionProperties;

			[Token(Token = "0x4001D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0C9C", Offset = "0xAB0C9C")]
			private ForcePosition forcePosition;

			[Token(Token = "0x4001D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0CE8", Offset = "0xAB0CE8")]
			private List<Collider> closestColliders;

			[Token(Token = "0x4001D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0D34", Offset = "0xAB0D34")]
			private bool useEffectedClosestPoint;

			[Token(Token = "0x4001D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0D80", Offset = "0xAB0D80")]
			private float heightOffset;

			[Token(Token = "0x170002DA")]
			public bool ToggleForcePositionProperties
			{
				[Token(Token = "0x6001785")]
				[Address(RVA = "0xE92964", Offset = "0xE92964", VA = "0xE92964")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001786")]
				[Address(RVA = "0xE9296C", Offset = "0xE9296C", VA = "0xE9296C")]
				set
				{
				}
			}

			[Token(Token = "0x170002DB")]
			public ForcePosition ForcePosition
			{
				[Token(Token = "0x6001787")]
				[Address(RVA = "0xE92978", Offset = "0xE92978", VA = "0xE92978")]
				get
				{
					return default(ForcePosition);
				}
				[Token(Token = "0x6001788")]
				[Address(RVA = "0xE92980", Offset = "0xE92980", VA = "0xE92980")]
				set
				{
				}
			}

			[Token(Token = "0x170002DC")]
			public List<Collider> ClosestColliders
			{
				[Token(Token = "0x6001789")]
				[Address(RVA = "0xE92988", Offset = "0xE92988", VA = "0xE92988")]
				get
				{
					return null;
				}
				[Token(Token = "0x600178A")]
				[Address(RVA = "0xE92990", Offset = "0xE92990", VA = "0xE92990")]
				set
				{
				}
			}

			[Token(Token = "0x170002DD")]
			public bool UseEffectedClosestPoint
			{
				[Token(Token = "0x600178B")]
				[Address(RVA = "0xE92998", Offset = "0xE92998", VA = "0xE92998")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600178C")]
				[Address(RVA = "0xE929A0", Offset = "0xE929A0", VA = "0xE929A0")]
				set
				{
				}
			}

			[Token(Token = "0x170002DE")]
			public float HeightOffset
			{
				[Token(Token = "0x600178D")]
				[Address(RVA = "0xE929AC", Offset = "0xE929AC", VA = "0xE929AC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600178E")]
				[Address(RVA = "0xE929B4", Offset = "0xE929B4", VA = "0xE929B4")]
				set
				{
				}
			}

			[Token(Token = "0x600178F")]
			[Address(RVA = "0xE929BC", Offset = "0xE929BC", VA = "0xE929BC")]
			public ForcePositionProperties()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200048B")]
		public class ForceTypeProperties
		{
			[Token(Token = "0x4001D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0DCC", Offset = "0xAB0DCC")]
			[SerializeField]
			private float explosionForceUpwardsModifier;

			[Token(Token = "0x4001D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0E18", Offset = "0xAB0E18")]
			[SerializeField]
			private float torqueMaxAngularVelocity;

			[Token(Token = "0x170002DF")]
			public float ExplosionForceUpwardsModifier
			{
				[Token(Token = "0x6001790")]
				[Address(RVA = "0xE92A38", Offset = "0xE92A38", VA = "0xE92A38")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001791")]
				[Address(RVA = "0xE92A40", Offset = "0xE92A40", VA = "0xE92A40")]
				set
				{
				}
			}

			[Token(Token = "0x170002E0")]
			public float TorqueMaxAngularVelocity
			{
				[Token(Token = "0x6001792")]
				[Address(RVA = "0xE92A48", Offset = "0xE92A48", VA = "0xE92A48")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001793")]
				[Address(RVA = "0xE92A50", Offset = "0xE92A50", VA = "0xE92A50")]
				set
				{
				}
			}

			[Token(Token = "0x6001794")]
			[Address(RVA = "0xE92A58", Offset = "0xE92A58", VA = "0xE92A58")]
			public ForceTypeProperties()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200048C")]
		public class FilterProperties
		{
			[Token(Token = "0x200048D")]
			public enum EffectType
			{
				[Token(Token = "0x4001D89")]
				Effect,
				[Token(Token = "0x4001D8A")]
				DontEffect
			}

			[Serializable]
			[Token(Token = "0x200048E")]
			public class TagFilter
			{
				[Token(Token = "0x4001D8B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0FE0", Offset = "0xAB0FE0")]
				[SerializeField]
				private EffectType effectType;

				[Token(Token = "0x4001D8C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[SerializeField]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB102C", Offset = "0xAB102C")]
				private string tag;

				[Token(Token = "0x170002E6")]
				public EffectType _effectType
				{
					[Token(Token = "0x60017A1")]
					[Address(RVA = "0x249DF08", Offset = "0x249DF08", VA = "0x249DF08")]
					get
					{
						return default(EffectType);
					}
					[Token(Token = "0x60017A2")]
					[Address(RVA = "0x249DF10", Offset = "0x249DF10", VA = "0x249DF10")]
					set
					{
					}
				}

				[Token(Token = "0x170002E7")]
				public string Tag
				{
					[Token(Token = "0x60017A3")]
					[Address(RVA = "0x249DF18", Offset = "0x249DF18", VA = "0x249DF18")]
					get
					{
						return null;
					}
					[Token(Token = "0x60017A4")]
					[Address(RVA = "0x249DF20", Offset = "0x249DF20", VA = "0x249DF20")]
					set
					{
					}
				}

				[Token(Token = "0x60017A5")]
				[Address(RVA = "0x249DF28", Offset = "0x249DF28", VA = "0x249DF28")]
				public TagFilter()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x200048F")]
			public class GameObjectFilter
			{
				[Token(Token = "0x4001D8D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1078", Offset = "0xAB1078")]
				[SerializeField]
				private EffectType effectType;

				[Token(Token = "0x4001D8E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB10C4", Offset = "0xAB10C4")]
				[SerializeField]
				private GameObject gameObject;

				[Token(Token = "0x170002E8")]
				public EffectType _effectType
				{
					[Token(Token = "0x60017A6")]
					[Address(RVA = "0x249DEB8", Offset = "0x249DEB8", VA = "0x249DEB8")]
					get
					{
						return default(EffectType);
					}
					[Token(Token = "0x60017A7")]
					[Address(RVA = "0x249DEC0", Offset = "0x249DEC0", VA = "0x249DEC0")]
					set
					{
					}
				}

				[Token(Token = "0x170002E9")]
				public GameObject _gameObject
				{
					[Token(Token = "0x60017A8")]
					[Address(RVA = "0x249DEC8", Offset = "0x249DEC8", VA = "0x249DEC8")]
					get
					{
						return null;
					}
					[Token(Token = "0x60017A9")]
					[Address(RVA = "0x249DED0", Offset = "0x249DED0", VA = "0x249DED0")]
					set
					{
					}
				}

				[Token(Token = "0x60017AA")]
				[Address(RVA = "0x249DED8", Offset = "0x249DED8", VA = "0x249DED8")]
				public GameObjectFilter()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x2000490")]
			public class BoundsFilter
			{
				[Token(Token = "0x4001D8F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1110", Offset = "0xAB1110")]
				[SerializeField]
				private EffectType effectType;

				[Token(Token = "0x4001D90")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB115C", Offset = "0xAB115C")]
				[SerializeField]
				private Collider collider;

				[Token(Token = "0x170002EA")]
				public EffectType _effectType
				{
					[Token(Token = "0x60017AB")]
					[Address(RVA = "0x249DE90", Offset = "0x249DE90", VA = "0x249DE90")]
					get
					{
						return default(EffectType);
					}
					[Token(Token = "0x60017AC")]
					[Address(RVA = "0x249DE98", Offset = "0x249DE98", VA = "0x249DE98")]
					set
					{
					}
				}

				[Token(Token = "0x170002EB")]
				public Collider _collider
				{
					[Token(Token = "0x60017AD")]
					[Address(RVA = "0x249DEA0", Offset = "0x249DEA0", VA = "0x249DEA0")]
					get
					{
						return null;
					}
					[Token(Token = "0x60017AE")]
					[Address(RVA = "0x249DEA8", Offset = "0x249DEA8", VA = "0x249DEA8")]
					set
					{
					}
				}

				[Token(Token = "0x60017AF")]
				[Address(RVA = "0x249DEB0", Offset = "0x249DEB0", VA = "0x249DEB0")]
				public BoundsFilter()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x2000491")]
			public class PhysicMaterialFilter
			{
				[Token(Token = "0x4001D91")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[SerializeField]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB11A8", Offset = "0xAB11A8")]
				private EffectType effectType;

				[Token(Token = "0x4001D92")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB11F4", Offset = "0xAB11F4")]
				[SerializeField]
				private PhysicMaterial physicMaterial;

				[Token(Token = "0x170002EC")]
				public EffectType _effectType
				{
					[Token(Token = "0x60017B0")]
					[Address(RVA = "0x249DEE0", Offset = "0x249DEE0", VA = "0x249DEE0")]
					get
					{
						return default(EffectType);
					}
					[Token(Token = "0x60017B1")]
					[Address(RVA = "0x249DEE8", Offset = "0x249DEE8", VA = "0x249DEE8")]
					set
					{
					}
				}

				[Token(Token = "0x170002ED")]
				public PhysicMaterial _physicMaterial
				{
					[Token(Token = "0x60017B2")]
					[Address(RVA = "0x249DEF0", Offset = "0x249DEF0", VA = "0x249DEF0")]
					get
					{
						return null;
					}
					[Token(Token = "0x60017B3")]
					[Address(RVA = "0x249DEF8", Offset = "0x249DEF8", VA = "0x249DEF8")]
					set
					{
					}
				}

				[Token(Token = "0x60017B4")]
				[Address(RVA = "0x249DF00", Offset = "0x249DF00", VA = "0x249DF00")]
				public PhysicMaterialFilter()
				{
				}
			}

			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0E64", Offset = "0xAB0E64")]
			private List<GameObjectFilter> gameObjectFilter;

			[Token(Token = "0x4001D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0EB0", Offset = "0xAB0EB0")]
			private List<TagFilter> tagFilter;

			[Token(Token = "0x4001D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0EFC", Offset = "0xAB0EFC")]
			public List<BoundsFilter> boundsFilter;

			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0F48", Offset = "0xAB0F48")]
			public List<PhysicMaterialFilter> physicMaterialFilter;

			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0F94", Offset = "0xAB0F94")]
			private LayerMask layerMaskFilter;

			[Token(Token = "0x170002E1")]
			public List<GameObjectFilter> _gameObjectFilter
			{
				[Token(Token = "0x6001796")]
				[Address(RVA = "0xE92274", Offset = "0xE92274", VA = "0xE92274")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001797")]
				[Address(RVA = "0xE9227C", Offset = "0xE9227C", VA = "0xE9227C")]
				set
				{
				}
			}

			[Token(Token = "0x170002E2")]
			public List<TagFilter> _tagFilter
			{
				[Token(Token = "0x6001798")]
				[Address(RVA = "0xE92284", Offset = "0xE92284", VA = "0xE92284")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001799")]
				[Address(RVA = "0xE9228C", Offset = "0xE9228C", VA = "0xE9228C")]
				set
				{
				}
			}

			[Token(Token = "0x170002E3")]
			public List<BoundsFilter> _boundsFilter
			{
				[Token(Token = "0x600179A")]
				[Address(RVA = "0xE92294", Offset = "0xE92294", VA = "0xE92294")]
				get
				{
					return null;
				}
				[Token(Token = "0x600179B")]
				[Address(RVA = "0xE9229C", Offset = "0xE9229C", VA = "0xE9229C")]
				set
				{
				}
			}

			[Token(Token = "0x170002E4")]
			public List<PhysicMaterialFilter> _physicMaterialFilter
			{
				[Token(Token = "0x600179C")]
				[Address(RVA = "0xE922A4", Offset = "0xE922A4", VA = "0xE922A4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600179D")]
				[Address(RVA = "0xE922AC", Offset = "0xE922AC", VA = "0xE922AC")]
				set
				{
				}
			}

			[Token(Token = "0x170002E5")]
			public LayerMask _layerMaskFilter
			{
				[Token(Token = "0x600179E")]
				[Address(RVA = "0xE922B4", Offset = "0xE922B4", VA = "0xE922B4")]
				get
				{
					return default(LayerMask);
				}
				[Token(Token = "0x600179F")]
				[Address(RVA = "0xE922BC", Offset = "0xE922BC", VA = "0xE922BC")]
				set
				{
				}
			}

			[Token(Token = "0x6001795")]
			[Address(RVA = "0xE92128", Offset = "0xE92128", VA = "0xE92128")]
			public FilterProperties()
			{
			}

			[Token(Token = "0x60017A0")]
			[Address(RVA = "0xE922C4", Offset = "0xE922C4", VA = "0xE922C4")]
			public bool ValidateFilters(Rigidbody rigid, Collider coll)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000492")]
		public class EventProperties
		{
			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1240", Offset = "0xAB1240")]
			private bool toggleEventProperties;

			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB128C", Offset = "0xAB128C")]
			[SerializeField]
			private bool enableEvents;

			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB12D8", Offset = "0xAB12D8")]
			[SerializeField]
			private bool enableSendMessage;

			[Token(Token = "0x170002EE")]
			public bool ToggleEventProperties
			{
				[Token(Token = "0x60017B5")]
				[Address(RVA = "0xE920DC", Offset = "0xE920DC", VA = "0xE920DC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60017B6")]
				[Address(RVA = "0xE920E4", Offset = "0xE920E4", VA = "0xE920E4")]
				set
				{
				}
			}

			[Token(Token = "0x170002EF")]
			public bool EnableEvents
			{
				[Token(Token = "0x60017B7")]
				[Address(RVA = "0xE920F0", Offset = "0xE920F0", VA = "0xE920F0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60017B8")]
				[Address(RVA = "0xE920F8", Offset = "0xE920F8", VA = "0xE920F8")]
				set
				{
				}
			}

			[Token(Token = "0x170002F0")]
			public bool EnableSendMessage
			{
				[Token(Token = "0x60017B9")]
				[Address(RVA = "0xE92104", Offset = "0xE92104", VA = "0xE92104")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60017BA")]
				[Address(RVA = "0xE9210C", Offset = "0xE9210C", VA = "0xE9210C")]
				set
				{
				}
			}

			[Token(Token = "0x60017BB")]
			[Address(RVA = "0xE92118", Offset = "0xE92118", VA = "0xE92118")]
			public EventProperties()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000493")]
		public class DrawGravityProperties
		{
			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1324", Offset = "0xAB1324")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB1324", Offset = "0xAB1324")]
			[SerializeField]
			private bool drawGravityForce;

			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1394", Offset = "0xAB1394")]
			[SerializeField]
			private float thickness;

			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB13E0", Offset = "0xAB13E0")]
			[SerializeField]
			private Material gravityLineMaterial;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB142C", Offset = "0xAB142C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB142C", Offset = "0xAB142C")]
			[SerializeField]
			private bool drawGizmo;

			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			private bool drawGravityForceGizmos;

			[Token(Token = "0x170002F1")]
			public bool DrawGravityForce
			{
				[Token(Token = "0x60017BC")]
				[Address(RVA = "0xE92064", Offset = "0xE92064", VA = "0xE92064")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60017BD")]
				[Address(RVA = "0xE9206C", Offset = "0xE9206C", VA = "0xE9206C")]
				set
				{
				}
			}

			[Token(Token = "0x170002F2")]
			public float Thickness
			{
				[Token(Token = "0x60017BE")]
				[Address(RVA = "0xE92078", Offset = "0xE92078", VA = "0xE92078")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60017BF")]
				[Address(RVA = "0xE92080", Offset = "0xE92080", VA = "0xE92080")]
				set
				{
				}
			}

			[Token(Token = "0x170002F3")]
			public Material GravityLineMaterial
			{
				[Token(Token = "0x60017C0")]
				[Address(RVA = "0xE92088", Offset = "0xE92088", VA = "0xE92088")]
				get
				{
					return null;
				}
				[Token(Token = "0x60017C1")]
				[Address(RVA = "0xE92090", Offset = "0xE92090", VA = "0xE92090")]
				set
				{
				}
			}

			[Token(Token = "0x170002F4")]
			public bool DrawGizmo
			{
				[Token(Token = "0x60017C2")]
				[Address(RVA = "0xE92098", Offset = "0xE92098", VA = "0xE92098")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60017C3")]
				[Address(RVA = "0xE920A0", Offset = "0xE920A0", VA = "0xE920A0")]
				set
				{
				}
			}

			[Token(Token = "0x170002F5")]
			public bool DrawGravityForceGizmos
			{
				[Token(Token = "0x60017C4")]
				[Address(RVA = "0xE920AC", Offset = "0xE920AC", VA = "0xE920AC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60017C5")]
				[Address(RVA = "0xE920B4", Offset = "0xE920B4", VA = "0xE920B4")]
				set
				{
				}
			}

			[Token(Token = "0x60017C6")]
			[Address(RVA = "0xE920C0", Offset = "0xE920C0", VA = "0xE920C0")]
			public DrawGravityProperties()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000494")]
		public class MemoryProperties
		{
			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB149C", Offset = "0xAB149C")]
			private LayerMask colliderLayerMask;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB14E8", Offset = "0xAB14E8")]
			private bool toggleMemoryProperties;

			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1534", Offset = "0xAB1534")]
			private bool seeColliders;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1580", Offset = "0xAB1580")]
			private bool seeRaycastHits;

			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB15CC", Offset = "0xAB15CC")]
			[SerializeField]
			private bool nonAllocPhysics;

			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1618", Offset = "0xAB1618")]
			[SerializeField]
			private int colliderBuffer;

			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1664", Offset = "0xAB1664")]
			[SerializeField]
			private int raycastHitBuffer;

			[Token(Token = "0x170002F6")]
			public LayerMask ColliderLayerMask
			{
				[Token(Token = "0x60017C7")]
				[Address(RVA = "0xE92A68", Offset = "0xE92A68", VA = "0xE92A68")]
				get
				{
					return default(LayerMask);
				}
				[Token(Token = "0x60017C8")]
				[Address(RVA = "0xE92A70", Offset = "0xE92A70", VA = "0xE92A70")]
				set
				{
				}
			}

			[Token(Token = "0x170002F7")]
			public bool ToggleMemoryProperties
			{
				[Token(Token = "0x60017C9")]
				[Address(RVA = "0xE92A78", Offset = "0xE92A78", VA = "0xE92A78")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60017CA")]
				[Address(RVA = "0xE92A80", Offset = "0xE92A80", VA = "0xE92A80")]
				set
				{
				}
			}

			[Token(Token = "0x170002F8")]
			public bool SeeColliders
			{
				[Token(Token = "0x60017CB")]
				[Address(RVA = "0xE92A8C", Offset = "0xE92A8C", VA = "0xE92A8C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60017CC")]
				[Address(RVA = "0xE92A94", Offset = "0xE92A94", VA = "0xE92A94")]
				set
				{
				}
			}

			[Token(Token = "0x170002F9")]
			public bool SeeRaycastHits
			{
				[Token(Token = "0x60017CD")]
				[Address(RVA = "0xE92AA0", Offset = "0xE92AA0", VA = "0xE92AA0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60017CE")]
				[Address(RVA = "0xE92AA8", Offset = "0xE92AA8", VA = "0xE92AA8")]
				set
				{
				}
			}

			[Token(Token = "0x170002FA")]
			public bool NonAllocPhysics
			{
				[Token(Token = "0x60017CF")]
				[Address(RVA = "0xE92AB4", Offset = "0xE92AB4", VA = "0xE92AB4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60017D0")]
				[Address(RVA = "0xE92ABC", Offset = "0xE92ABC", VA = "0xE92ABC")]
				set
				{
				}
			}

			[Token(Token = "0x170002FB")]
			public int ColliderBuffer
			{
				[Token(Token = "0x60017D1")]
				[Address(RVA = "0xE92AC8", Offset = "0xE92AC8", VA = "0xE92AC8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60017D2")]
				[Address(RVA = "0xE92AD0", Offset = "0xE92AD0", VA = "0xE92AD0")]
				set
				{
				}
			}

			[Token(Token = "0x170002FC")]
			public int RaycastHitBuffer
			{
				[Token(Token = "0x60017D3")]
				[Address(RVA = "0xE92AD8", Offset = "0xE92AD8", VA = "0xE92AD8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60017D4")]
				[Address(RVA = "0xE92AE0", Offset = "0xE92AE0", VA = "0xE92AE0")]
				set
				{
				}
			}

			[Token(Token = "0x60017D5")]
			[Address(RVA = "0xE92AE8", Offset = "0xE92AE8", VA = "0xE92AE8")]
			public MemoryProperties()
			{
			}
		}

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string CirularGravityLineName;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0398", Offset = "0xAB0398")]
		private bool enable;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB03E4", Offset = "0xAB03E4")]
		private Shape shape;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0430", Offset = "0xAB0430")]
		[SerializeField]
		private ForceType forceType;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB047C", Offset = "0xAB047C")]
		[SerializeField]
		private ForceMode forceMode;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB04C8", Offset = "0xAB04C8")]
		[SerializeField]
		private bool counterGravity;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0514", Offset = "0xAB0514")]
		[SerializeField]
		private float counterGravityMultiplier;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0560", Offset = "0xAB0560")]
		[SerializeField]
		private bool lerpVelocity;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB05AC", Offset = "0xAB05AC")]
		private bool projectForward;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB05F8", Offset = "0xAB05F8")]
		private float size;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0644", Offset = "0xAB0644")]
		[SerializeField]
		private float capsuleRadius;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0690", Offset = "0xAB0690")]
		[SerializeField]
		private Vector3 boxSize;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB06DC", Offset = "0xAB06DC")]
		private float forcePower;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0728", Offset = "0xAB0728")]
		private float velocityDamping;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0774", Offset = "0xAB0774")]
		[SerializeField]
		private float angularVelocityDamping;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB07C0", Offset = "0xAB07C0")]
		[SerializeField]
		private TransformProperties transformProperties;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB080C", Offset = "0xAB080C")]
		[SerializeField]
		private ForcePositionProperties forcePositionProperties;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0858", Offset = "0xAB0858")]
		private ForceTypeProperties forceTypeProperties;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB08A4", Offset = "0xAB08A4")]
		[SerializeField]
		private FilterProperties filterProperties;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB08F0", Offset = "0xAB08F0")]
		[SerializeField]
		private EventProperties eventProperties;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB093C", Offset = "0xAB093C")]
		[SerializeField]
		private DrawGravityProperties drawGravityProperties;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB0988", Offset = "0xAB0988")]
		private MemoryProperties memoryProperties;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private int colliderListCount;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private int raycastHitListCount;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isSelected;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject cirularGravityLine;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] colliderList;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RaycastHit[] raycastHitList;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Dictionary<Rigidbody, bool> rigidbodyCollection;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color DebugGravityLineColorA;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color DebugGravityLineColorB;

		[Token(Token = "0x170002BC")]
		public bool Enable
		{
			[Token(Token = "0x600172B")]
			[Address(RVA = "0x100CE2C", Offset = "0x100CE2C", VA = "0x100CE2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600172C")]
			[Address(RVA = "0x100CE34", Offset = "0x100CE34", VA = "0x100CE34")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public Shape _shape
		{
			[Token(Token = "0x600172D")]
			[Address(RVA = "0x100CE40", Offset = "0x100CE40", VA = "0x100CE40")]
			get
			{
				return default(Shape);
			}
			[Token(Token = "0x600172E")]
			[Address(RVA = "0x100CE48", Offset = "0x100CE48", VA = "0x100CE48")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public ForceType _forceType
		{
			[Token(Token = "0x600172F")]
			[Address(RVA = "0x100CE50", Offset = "0x100CE50", VA = "0x100CE50")]
			get
			{
				return default(ForceType);
			}
			[Token(Token = "0x6001730")]
			[Address(RVA = "0x100CE58", Offset = "0x100CE58", VA = "0x100CE58")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public ForceMode _forceMode
		{
			[Token(Token = "0x6001731")]
			[Address(RVA = "0x100CE60", Offset = "0x100CE60", VA = "0x100CE60")]
			get
			{
				return default(ForceMode);
			}
			[Token(Token = "0x6001732")]
			[Address(RVA = "0x100CE68", Offset = "0x100CE68", VA = "0x100CE68")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public bool CounterGravity
		{
			[Token(Token = "0x6001733")]
			[Address(RVA = "0x100CE70", Offset = "0x100CE70", VA = "0x100CE70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001734")]
			[Address(RVA = "0x100CE78", Offset = "0x100CE78", VA = "0x100CE78")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public float CounterGravityMultiplier
		{
			[Token(Token = "0x6001735")]
			[Address(RVA = "0x100CE84", Offset = "0x100CE84", VA = "0x100CE84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001736")]
			[Address(RVA = "0x100CE8C", Offset = "0x100CE8C", VA = "0x100CE8C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public bool LerpVelocity
		{
			[Token(Token = "0x6001737")]
			[Address(RVA = "0x100CE94", Offset = "0x100CE94", VA = "0x100CE94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001738")]
			[Address(RVA = "0x100CE9C", Offset = "0x100CE9C", VA = "0x100CE9C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public bool _projectForward
		{
			[Token(Token = "0x6001739")]
			[Address(RVA = "0x100CEA8", Offset = "0x100CEA8", VA = "0x100CEA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600173A")]
			[Address(RVA = "0x100CEB0", Offset = "0x100CEB0", VA = "0x100CEB0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public float Size
		{
			[Token(Token = "0x600173B")]
			[Address(RVA = "0x100CEBC", Offset = "0x100CEBC", VA = "0x100CEBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600173C")]
			[Address(RVA = "0x100CEC4", Offset = "0x100CEC4", VA = "0x100CEC4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public float CapsuleRadius
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x100CECC", Offset = "0x100CECC", VA = "0x100CECC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600173E")]
			[Address(RVA = "0x100CED4", Offset = "0x100CED4", VA = "0x100CED4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public Vector3 BoxSize
		{
			[Token(Token = "0x600173F")]
			[Address(RVA = "0x100CEDC", Offset = "0x100CEDC", VA = "0x100CEDC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001740")]
			[Address(RVA = "0x100CEE8", Offset = "0x100CEE8", VA = "0x100CEE8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public float ForcePower
		{
			[Token(Token = "0x6001741")]
			[Address(RVA = "0x100CEF4", Offset = "0x100CEF4", VA = "0x100CEF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001742")]
			[Address(RVA = "0x100CEFC", Offset = "0x100CEFC", VA = "0x100CEFC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public float VelocityDamping
		{
			[Token(Token = "0x6001743")]
			[Address(RVA = "0x100CF04", Offset = "0x100CF04", VA = "0x100CF04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001744")]
			[Address(RVA = "0x100CF0C", Offset = "0x100CF0C", VA = "0x100CF0C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public float AngularVelocityDamping
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0x100CF14", Offset = "0x100CF14", VA = "0x100CF14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001746")]
			[Address(RVA = "0x100CF1C", Offset = "0x100CF1C", VA = "0x100CF1C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public TransformProperties _transformProperties
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0x100CF24", Offset = "0x100CF24", VA = "0x100CF24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001748")]
			[Address(RVA = "0x100CF2C", Offset = "0x100CF2C", VA = "0x100CF2C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public ForcePositionProperties _forcePositionProperties
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0x100CF34", Offset = "0x100CF34", VA = "0x100CF34")]
			get
			{
				return null;
			}
			[Token(Token = "0x600174A")]
			[Address(RVA = "0x100CF3C", Offset = "0x100CF3C", VA = "0x100CF3C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public ForceTypeProperties _forceTypeProperties
		{
			[Token(Token = "0x600174B")]
			[Address(RVA = "0x100CF44", Offset = "0x100CF44", VA = "0x100CF44")]
			get
			{
				return null;
			}
			[Token(Token = "0x600174C")]
			[Address(RVA = "0x100CF4C", Offset = "0x100CF4C", VA = "0x100CF4C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public FilterProperties _filterProperties
		{
			[Token(Token = "0x600174D")]
			[Address(RVA = "0x100CF54", Offset = "0x100CF54", VA = "0x100CF54")]
			get
			{
				return null;
			}
			[Token(Token = "0x600174E")]
			[Address(RVA = "0x100CF5C", Offset = "0x100CF5C", VA = "0x100CF5C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public EventProperties _eventProperties
		{
			[Token(Token = "0x600174F")]
			[Address(RVA = "0x100CF64", Offset = "0x100CF64", VA = "0x100CF64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001750")]
			[Address(RVA = "0x100CF6C", Offset = "0x100CF6C", VA = "0x100CF6C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public DrawGravityProperties _drawGravityProperties
		{
			[Token(Token = "0x6001751")]
			[Address(RVA = "0x100CF74", Offset = "0x100CF74", VA = "0x100CF74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001752")]
			[Address(RVA = "0x100CF7C", Offset = "0x100CF7C", VA = "0x100CF7C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public MemoryProperties _memoryProperties
		{
			[Token(Token = "0x6001753")]
			[Address(RVA = "0x100CF84", Offset = "0x100CF84", VA = "0x100CF84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001754")]
			[Address(RVA = "0x100CF8C", Offset = "0x100CF8C", VA = "0x100CF8C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public int ColliderListCount
		{
			[Token(Token = "0x6001755")]
			[Address(RVA = "0x100CF94", Offset = "0x100CF94", VA = "0x100CF94")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D2")]
		public int RaycastHitListCount
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0x100CF9C", Offset = "0x100CF9C", VA = "0x100CF9C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000013")]
		public static event ApplyCGFEvent OnApplyCGFEvent
		{
			[Token(Token = "0x6001728")]
			[Address(RVA = "0x100CAAC", Offset = "0x100CAAC", VA = "0x100CAAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFD54", Offset = "0xABFD54")]
			add
			{
			}
			[Token(Token = "0x6001729")]
			[Address(RVA = "0x100CBA0", Offset = "0x100CBA0", VA = "0x100CBA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFD64", Offset = "0xABFD64")]
			remove
			{
			}
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x100CC94", Offset = "0x100CC94", VA = "0x100CC94")]
		public CGF()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x100CFA4", Offset = "0x100CFA4", VA = "0x100CFA4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x100EA3C", Offset = "0x100EA3C", VA = "0x100EA3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x100EAD0", Offset = "0x100EAD0", VA = "0x100EAD0")]
		private void Update()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x100ECB8", Offset = "0x100ECB8", VA = "0x100ECB8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x100FD18", Offset = "0x100FD18", VA = "0x100FD18")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x10107A4", Offset = "0x10107A4", VA = "0x10107A4")]
		private void RigidbodieCollectionClean()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x1010B38", Offset = "0x1010B38", VA = "0x1010B38")]
		private void RigidbodieCollectionUpdate(Rigidbody rigid)
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x1010C88", Offset = "0x1010C88", VA = "0x1010C88")]
		private bool RigidbodieCollectionValidate(Rigidbody rigid)
		{
			return default(bool);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x1010D2C", Offset = "0x1010D2C", VA = "0x1010D2C")]
		private void ApplyForce(Rigidbody rigid, Transform trans, Collider coll)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x10114D0", Offset = "0x10114D0", VA = "0x10114D0")]
		private void ApplyCGFForceAtPosition(Rigidbody rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x1011630", Offset = "0x1011630", VA = "0x1011630")]
		private void ApplyCGFForce(Rigidbody rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x101176C", Offset = "0x101176C", VA = "0x101176C")]
		private void ApplyCGFTorque(Rigidbody rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x1011888", Offset = "0x1011888", VA = "0x1011888")]
		private void ApplyCGFExplosionForce(Rigidbody rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x1011928", Offset = "0x1011928", VA = "0x1011928")]
		private void ApplyCGFGravitationalAttraction(Rigidbody rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x1011B7C", Offset = "0x1011B7C", VA = "0x1011B7C")]
		private void ApplyCGFVelocity(Rigidbody rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x1011D24", Offset = "0x1011D24", VA = "0x1011D24")]
		private void ApplyCGFAngularVelocity(Rigidbody rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x100FD28", Offset = "0x100FD28", VA = "0x100FD28")]
		private void CalculateAndEstimateForce()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x1011094", Offset = "0x1011094", VA = "0x1011094")]
		public Vector3 FindClosestPoints(Vector3 point, List<Collider> closestColliders)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x1011334", Offset = "0x1011334", VA = "0x1011334")]
		public Vector3 FindClosestPoints(Vector3 point, Collider closestCollider)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x10112D8", Offset = "0x10112D8", VA = "0x10112D8")]
		public Vector3 GetVectorHeightOffset(Vector3 A, Vector3 B, float x)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x1011E98", Offset = "0x1011E98", VA = "0x1011E98")]
		public static GameObject CreateCGF()
		{
			return null;
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x100ED7C", Offset = "0x100ED7C", VA = "0x100ED7C")]
		private void DrawGravityForceLineRenderer()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x1011FA8", Offset = "0x1011FA8", VA = "0x1011FA8")]
		private void SetupDebugColors()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x100CFF4", Offset = "0x100CFF4", VA = "0x100CFF4")]
		private void DrawGravityForceGizmos()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x100E6DC", Offset = "0x100E6DC", VA = "0x100E6DC")]
		private void DrawClosetColliderGizmos()
		{
		}
	}
	[Token(Token = "0x2000495")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA7BC4", Offset = "0xAA7BC4")]
	public class CGF2D : MonoBehaviour
	{
		[Token(Token = "0x2000496")]
		public delegate void ApplyCGFEvent(CGF2D cgf, Rigidbody2D rigid, Collider2D coll);

		[Token(Token = "0x2000497")]
		public enum ForceType2D
		{
			[Token(Token = "0x4001DC1")]
			ForceAtPosition,
			[Token(Token = "0x4001DC2")]
			Force,
			[Token(Token = "0x4001DC3")]
			Torque,
			[Token(Token = "0x4001DC4")]
			GravitationalAttraction,
			[Token(Token = "0x4001DC5")]
			Velocity,
			[Token(Token = "0x4001DC6")]
			AngularVelocity
		}

		[Token(Token = "0x2000498")]
		public enum Shape2D
		{
			[Token(Token = "0x4001DC8")]
			Sphere,
			[Token(Token = "0x4001DC9")]
			Raycast,
			[Token(Token = "0x4001DCA")]
			Box
		}

		[Serializable]
		[Token(Token = "0x2000499")]
		public class ForcePositionProperties
		{
			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1C84", Offset = "0xAB1C84")]
			[SerializeField]
			private bool toggleForcePositionProperties;

			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1CD0", Offset = "0xAB1CD0")]
			private CGF.ForcePosition forcePosition;

			[Token(Token = "0x4001DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1D1C", Offset = "0xAB1D1C")]
			private List<Collider2D> closestColliders;

			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1D68", Offset = "0xAB1D68")]
			[SerializeField]
			private bool useEffectedClosestPoint;

			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1DB4", Offset = "0xAB1DB4")]
			[SerializeField]
			private float heightOffset;

			[Token(Token = "0x17000312")]
			public bool ToggleForcePositionProperties
			{
				[Token(Token = "0x600181E")]
				[Address(RVA = "0xCB487C", Offset = "0xCB487C", VA = "0xCB487C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600181F")]
				[Address(RVA = "0xCB4884", Offset = "0xCB4884", VA = "0xCB4884")]
				set
				{
				}
			}

			[Token(Token = "0x17000313")]
			public CGF.ForcePosition ForcePosition
			{
				[Token(Token = "0x6001820")]
				[Address(RVA = "0xCB4890", Offset = "0xCB4890", VA = "0xCB4890")]
				get
				{
					return default(CGF.ForcePosition);
				}
				[Token(Token = "0x6001821")]
				[Address(RVA = "0xCB4898", Offset = "0xCB4898", VA = "0xCB4898")]
				set
				{
				}
			}

			[Token(Token = "0x17000314")]
			public List<Collider2D> ClosestColliders
			{
				[Token(Token = "0x6001822")]
				[Address(RVA = "0xCB48A0", Offset = "0xCB48A0", VA = "0xCB48A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001823")]
				[Address(RVA = "0xCB48A8", Offset = "0xCB48A8", VA = "0xCB48A8")]
				set
				{
				}
			}

			[Token(Token = "0x17000315")]
			public bool UseEffectedClosestPoint
			{
				[Token(Token = "0x6001824")]
				[Address(RVA = "0xCB48B0", Offset = "0xCB48B0", VA = "0xCB48B0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001825")]
				[Address(RVA = "0xCB48B8", Offset = "0xCB48B8", VA = "0xCB48B8")]
				set
				{
				}
			}

			[Token(Token = "0x17000316")]
			public float HeightOffset
			{
				[Token(Token = "0x6001826")]
				[Address(RVA = "0xCB48C4", Offset = "0xCB48C4", VA = "0xCB48C4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001827")]
				[Address(RVA = "0xCB48CC", Offset = "0xCB48CC", VA = "0xCB48CC")]
				set
				{
				}
			}

			[Token(Token = "0x6001828")]
			[Address(RVA = "0xCB48D4", Offset = "0xCB48D4", VA = "0xCB48D4")]
			public ForcePositionProperties()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200049A")]
		public class FilterProperties
		{
			[Token(Token = "0x200049B")]
			public enum EffectType
			{
				[Token(Token = "0x4001DD6")]
				Effect,
				[Token(Token = "0x4001DD7")]
				DontEffect
			}

			[Serializable]
			[Token(Token = "0x200049C")]
			public class TagFilter
			{
				[Token(Token = "0x4001DD8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[SerializeField]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1F7C", Offset = "0xAB1F7C")]
				private EffectType effectType;

				[Token(Token = "0x4001DD9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[SerializeField]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1FC8", Offset = "0xAB1FC8")]
				private string tag;

				[Token(Token = "0x1700031C")]
				public EffectType _effectType
				{
					[Token(Token = "0x6001835")]
					[Address(RVA = "0x249DFFC", Offset = "0x249DFFC", VA = "0x249DFFC")]
					get
					{
						return default(EffectType);
					}
					[Token(Token = "0x6001836")]
					[Address(RVA = "0x249E004", Offset = "0x249E004", VA = "0x249E004")]
					set
					{
					}
				}

				[Token(Token = "0x1700031D")]
				public string Tag
				{
					[Token(Token = "0x6001837")]
					[Address(RVA = "0x249E00C", Offset = "0x249E00C", VA = "0x249E00C")]
					get
					{
						return null;
					}
					[Token(Token = "0x6001838")]
					[Address(RVA = "0x249E014", Offset = "0x249E014", VA = "0x249E014")]
					set
					{
					}
				}

				[Token(Token = "0x6001839")]
				[Address(RVA = "0x249E01C", Offset = "0x249E01C", VA = "0x249E01C")]
				public TagFilter()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x200049D")]
			public class GameObjectFilter
			{
				[Token(Token = "0x4001DDA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[SerializeField]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2014", Offset = "0xAB2014")]
				private EffectType effectType;

				[Token(Token = "0x4001DDB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[SerializeField]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2060", Offset = "0xAB2060")]
				private GameObject gameObject;

				[Token(Token = "0x1700031E")]
				public EffectType _effectType
				{
					[Token(Token = "0x600183A")]
					[Address(RVA = "0x249DFAC", Offset = "0x249DFAC", VA = "0x249DFAC")]
					get
					{
						return default(EffectType);
					}
					[Token(Token = "0x600183B")]
					[Address(RVA = "0x249DFB4", Offset = "0x249DFB4", VA = "0x249DFB4")]
					set
					{
					}
				}

				[Token(Token = "0x1700031F")]
				public GameObject _gameObject
				{
					[Token(Token = "0x600183C")]
					[Address(RVA = "0x249DFBC", Offset = "0x249DFBC", VA = "0x249DFBC")]
					get
					{
						return null;
					}
					[Token(Token = "0x600183D")]
					[Address(RVA = "0x249DFC4", Offset = "0x249DFC4", VA = "0x249DFC4")]
					set
					{
					}
				}

				[Token(Token = "0x600183E")]
				[Address(RVA = "0x249DFCC", Offset = "0x249DFCC", VA = "0x249DFCC")]
				public GameObjectFilter()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x200049E")]
			public class BoundsFilter
			{
				[Token(Token = "0x4001DDC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB20AC", Offset = "0xAB20AC")]
				[SerializeField]
				private EffectType effectType;

				[Token(Token = "0x4001DDD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[SerializeField]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB20F8", Offset = "0xAB20F8")]
				private Collider2D collider;

				[Token(Token = "0x17000320")]
				public EffectType _effectType
				{
					[Token(Token = "0x600183F")]
					[Address(RVA = "0x249DF84", Offset = "0x249DF84", VA = "0x249DF84")]
					get
					{
						return default(EffectType);
					}
					[Token(Token = "0x6001840")]
					[Address(RVA = "0x249DF8C", Offset = "0x249DF8C", VA = "0x249DF8C")]
					set
					{
					}
				}

				[Token(Token = "0x17000321")]
				public Collider2D _collider
				{
					[Token(Token = "0x6001841")]
					[Address(RVA = "0x249DF94", Offset = "0x249DF94", VA = "0x249DF94")]
					get
					{
						return null;
					}
					[Token(Token = "0x6001842")]
					[Address(RVA = "0x249DF9C", Offset = "0x249DF9C", VA = "0x249DF9C")]
					set
					{
					}
				}

				[Token(Token = "0x6001843")]
				[Address(RVA = "0x249DFA4", Offset = "0x249DFA4", VA = "0x249DFA4")]
				public BoundsFilter()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x200049F")]
			public class PhysicMaterialFilter
			{
				[Token(Token = "0x4001DDE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[SerializeField]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2144", Offset = "0xAB2144")]
				private EffectType effectType;

				[Token(Token = "0x4001DDF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[SerializeField]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2190", Offset = "0xAB2190")]
				private PhysicsMaterial2D physicMaterial;

				[Token(Token = "0x17000322")]
				public EffectType _effectType
				{
					[Token(Token = "0x6001844")]
					[Address(RVA = "0x249DFD4", Offset = "0x249DFD4", VA = "0x249DFD4")]
					get
					{
						return default(EffectType);
					}
					[Token(Token = "0x6001845")]
					[Address(RVA = "0x249DFDC", Offset = "0x249DFDC", VA = "0x249DFDC")]
					set
					{
					}
				}

				[Token(Token = "0x17000323")]
				public PhysicsMaterial2D _physicMaterial
				{
					[Token(Token = "0x6001846")]
					[Address(RVA = "0x249DFE4", Offset = "0x249DFE4", VA = "0x249DFE4")]
					get
					{
						return null;
					}
					[Token(Token = "0x6001847")]
					[Address(RVA = "0x249DFEC", Offset = "0x249DFEC", VA = "0x249DFEC")]
					set
					{
					}
				}

				[Token(Token = "0x6001848")]
				[Address(RVA = "0x249DFF4", Offset = "0x249DFF4", VA = "0x249DFF4")]
				public PhysicMaterialFilter()
				{
				}
			}

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1E00", Offset = "0xAB1E00")]
			[SerializeField]
			private List<GameObjectFilter> gameObjectFilter;

			[Token(Token = "0x4001DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1E4C", Offset = "0xAB1E4C")]
			[SerializeField]
			private List<TagFilter> tagFilter;

			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1E98", Offset = "0xAB1E98")]
			public List<BoundsFilter> boundsFilter;

			[Token(Token = "0x4001DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1EE4", Offset = "0xAB1EE4")]
			[SerializeField]
			public List<PhysicMaterialFilter> physicMaterialFilter;

			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1F30", Offset = "0xAB1F30")]
			private LayerMask layerMaskFilter;

			[Token(Token = "0x17000317")]
			public List<GameObjectFilter> _gameObjectFilter
			{
				[Token(Token = "0x600182A")]
				[Address(RVA = "0xE93244", Offset = "0xE93244", VA = "0xE93244")]
				get
				{
					return null;
				}
				[Token(Token = "0x600182B")]
				[Address(RVA = "0xE9324C", Offset = "0xE9324C", VA = "0xE9324C")]
				set
				{
				}
			}

			[Token(Token = "0x17000318")]
			public List<TagFilter> _tagFilter
			{
				[Token(Token = "0x600182C")]
				[Address(RVA = "0xE93254", Offset = "0xE93254", VA = "0xE93254")]
				get
				{
					return null;
				}
				[Token(Token = "0x600182D")]
				[Address(RVA = "0xE9325C", Offset = "0xE9325C", VA = "0xE9325C")]
				set
				{
				}
			}

			[Token(Token = "0x17000319")]
			public List<BoundsFilter> _boundsFilter
			{
				[Token(Token = "0x600182E")]
				[Address(RVA = "0xE93264", Offset = "0xE93264", VA = "0xE93264")]
				get
				{
					return null;
				}
				[Token(Token = "0x600182F")]
				[Address(RVA = "0xE9326C", Offset = "0xE9326C", VA = "0xE9326C")]
				set
				{
				}
			}

			[Token(Token = "0x1700031A")]
			public List<PhysicMaterialFilter> _physicMaterialFilter
			{
				[Token(Token = "0x6001830")]
				[Address(RVA = "0xE93274", Offset = "0xE93274", VA = "0xE93274")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001831")]
				[Address(RVA = "0xE9327C", Offset = "0xE9327C", VA = "0xE9327C")]
				set
				{
				}
			}

			[Token(Token = "0x1700031B")]
			public LayerMask _layerMaskFilter
			{
				[Token(Token = "0x6001832")]
				[Address(RVA = "0xE93284", Offset = "0xE93284", VA = "0xE93284")]
				get
				{
					return default(LayerMask);
				}
				[Token(Token = "0x6001833")]
				[Address(RVA = "0xE9328C", Offset = "0xE9328C", VA = "0xE9328C")]
				set
				{
				}
			}

			[Token(Token = "0x6001829")]
			[Address(RVA = "0xE930F8", Offset = "0xE930F8", VA = "0xE930F8")]
			public FilterProperties()
			{
			}

			[Token(Token = "0x6001834")]
			[Address(RVA = "0xE93294", Offset = "0xE93294", VA = "0xE93294")]
			public bool ValidateFilters(Rigidbody2D rigid, Collider2D coll)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004A0")]
		public class TriggerAreaFilter2D
		{
			[Token(Token = "0x20004A1")]
			public enum TriggerAreaFilterOptions
			{
				[Token(Token = "0x4001DE3")]
				Disabled,
				[Token(Token = "0x4001DE4")]
				OnlyAffectWithinTigger,
				[Token(Token = "0x4001DE5")]
				DontAffectWithinTigger
			}

			[Token(Token = "0x4001DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB21DC", Offset = "0xAB21DC")]
			private TriggerAreaFilterOptions triggerAreaFilterOptions;

			[Token(Token = "0x4001DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2228", Offset = "0xAB2228")]
			private List<Collider2D> triggerAreas;

			[Token(Token = "0x17000324")]
			public TriggerAreaFilterOptions _triggerAreaFilterOptions
			{
				[Token(Token = "0x6001849")]
				[Address(RVA = "0xCB4950", Offset = "0xCB4950", VA = "0xCB4950")]
				get
				{
					return default(TriggerAreaFilterOptions);
				}
				[Token(Token = "0x600184A")]
				[Address(RVA = "0xCB4958", Offset = "0xCB4958", VA = "0xCB4958")]
				set
				{
				}
			}

			[Token(Token = "0x17000325")]
			public List<Collider2D> TriggerAreas
			{
				[Token(Token = "0x600184B")]
				[Address(RVA = "0xCB4960", Offset = "0xCB4960", VA = "0xCB4960")]
				get
				{
					return null;
				}
				[Token(Token = "0x600184C")]
				[Address(RVA = "0xCB4968", Offset = "0xCB4968", VA = "0xCB4968")]
				set
				{
				}
			}

			[Token(Token = "0x600184D")]
			[Address(RVA = "0xCB4970", Offset = "0xCB4970", VA = "0xCB4970")]
			public TriggerAreaFilter2D()
			{
			}
		}

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string CirularGravityLineName;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB16C0", Offset = "0xAB16C0")]
		private bool enable;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB170C", Offset = "0xAB170C")]
		private Shape2D shape2D;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1758", Offset = "0xAB1758")]
		private ForceType2D forceType2D;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB17A4", Offset = "0xAB17A4")]
		private ForceMode2D forceMode2D;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB17F0", Offset = "0xAB17F0")]
		private bool counterGravity;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB183C", Offset = "0xAB183C")]
		private float counterGravityMultiplier;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1888", Offset = "0xAB1888")]
		[SerializeField]
		private bool lerpVelocity;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB18D4", Offset = "0xAB18D4")]
		[SerializeField]
		private bool projectRight;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1920", Offset = "0xAB1920")]
		private float size;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB196C", Offset = "0xAB196C")]
		private Vector2 boxSize;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB19B8", Offset = "0xAB19B8")]
		[SerializeField]
		private float forcePower;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1A04", Offset = "0xAB1A04")]
		[SerializeField]
		private float velocityDamping;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1A50", Offset = "0xAB1A50")]
		private float angularVelocityDamping;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1A9C", Offset = "0xAB1A9C")]
		private CGF.TransformProperties transformProperties;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1AE8", Offset = "0xAB1AE8")]
		private ForcePositionProperties forcePositionProperties;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1B34", Offset = "0xAB1B34")]
		private FilterProperties filterProperties;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1B80", Offset = "0xAB1B80")]
		[SerializeField]
		private CGF.EventProperties eventProperties;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1BCC", Offset = "0xAB1BCC")]
		private CGF.DrawGravityProperties drawGravityProperties;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB1C18", Offset = "0xAB1C18")]
		[SerializeField]
		private CGF.MemoryProperties memoryProperties;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int colliderListCount;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private int raycastHitListCount;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool isSelected;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject cirularGravityLine;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Collider2D[] colliderList;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit2D[] raycastHitList;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<Rigidbody2D, bool> rigidbodyCollection;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Color DebugGravityLineColorA;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color DebugGravityLineColorB;

		[Token(Token = "0x170002FD")]
		public bool Enable
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x101241C", Offset = "0x101241C", VA = "0x101241C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x1012424", Offset = "0x1012424", VA = "0x1012424")]
			set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		public Shape2D _shape2D
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0x1012430", Offset = "0x1012430", VA = "0x1012430")]
			get
			{
				return default(Shape2D);
			}
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0x1012438", Offset = "0x1012438", VA = "0x1012438")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public ForceType2D _forceType2D
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0x1012440", Offset = "0x1012440", VA = "0x1012440")]
			get
			{
				return default(ForceType2D);
			}
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x1012448", Offset = "0x1012448", VA = "0x1012448")]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public ForceMode2D _forceMode2D
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x1012450", Offset = "0x1012450", VA = "0x1012450")]
			get
			{
				return default(ForceMode2D);
			}
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x1012458", Offset = "0x1012458", VA = "0x1012458")]
			set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public bool CounterGravity
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x1012460", Offset = "0x1012460", VA = "0x1012460")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x1012468", Offset = "0x1012468", VA = "0x1012468")]
			set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public float CounterGravityMultiplier
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x1012474", Offset = "0x1012474", VA = "0x1012474")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x101247C", Offset = "0x101247C", VA = "0x101247C")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public bool LerpVelocity
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0x1012484", Offset = "0x1012484", VA = "0x1012484")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x101248C", Offset = "0x101248C", VA = "0x101248C")]
			set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public bool _projectRight
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x1012498", Offset = "0x1012498", VA = "0x1012498")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x10124A0", Offset = "0x10124A0", VA = "0x10124A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public float Size
		{
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x10124AC", Offset = "0x10124AC", VA = "0x10124AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0x10124B4", Offset = "0x10124B4", VA = "0x10124B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000306")]
		public Vector2 BoxSize
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x10124BC", Offset = "0x10124BC", VA = "0x10124BC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x10124C4", Offset = "0x10124C4", VA = "0x10124C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public float ForcePower
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x10124CC", Offset = "0x10124CC", VA = "0x10124CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x10124D4", Offset = "0x10124D4", VA = "0x10124D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public float VelocityDamping
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x10124DC", Offset = "0x10124DC", VA = "0x10124DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x10124E4", Offset = "0x10124E4", VA = "0x10124E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public float AngularVelocityDamping
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x10124EC", Offset = "0x10124EC", VA = "0x10124EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x10124F4", Offset = "0x10124F4", VA = "0x10124F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public CGF.TransformProperties _transformProperties
		{
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x10124FC", Offset = "0x10124FC", VA = "0x10124FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x1012504", Offset = "0x1012504", VA = "0x1012504")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public ForcePositionProperties _forcePositionProperties
		{
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x101250C", Offset = "0x101250C", VA = "0x101250C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F6")]
			[Address(RVA = "0x1012514", Offset = "0x1012514", VA = "0x1012514")]
			set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public FilterProperties _filterProperties
		{
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x101251C", Offset = "0x101251C", VA = "0x101251C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x1012524", Offset = "0x1012524", VA = "0x1012524")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public CGF.EventProperties _eventProperties
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x101252C", Offset = "0x101252C", VA = "0x101252C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x1012534", Offset = "0x1012534", VA = "0x1012534")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public CGF.DrawGravityProperties _drawGravityProperties
		{
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x101253C", Offset = "0x101253C", VA = "0x101253C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0x1012544", Offset = "0x1012544", VA = "0x1012544")]
			set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public CGF.MemoryProperties _memoryProperties
		{
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0x101254C", Offset = "0x101254C", VA = "0x101254C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0x1012554", Offset = "0x1012554", VA = "0x1012554")]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public int ColliderListCount
		{
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0x101255C", Offset = "0x101255C", VA = "0x101255C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000311")]
		public int RaycastHitListCount
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x1012564", Offset = "0x1012564", VA = "0x1012564")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000014")]
		public static event ApplyCGFEvent OnApplyCGFEvent
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0x10120B8", Offset = "0x10120B8", VA = "0x10120B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFD74", Offset = "0xABFD74")]
			add
			{
			}
			[Token(Token = "0x60017D7")]
			[Address(RVA = "0x10121AC", Offset = "0x10121AC", VA = "0x10121AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFD84", Offset = "0xABFD84")]
			remove
			{
			}
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x10122A0", Offset = "0x10122A0", VA = "0x10122A0")]
		public CGF2D()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x101256C", Offset = "0x101256C", VA = "0x101256C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x10135FC", Offset = "0x10135FC", VA = "0x10135FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x1013690", Offset = "0x1013690", VA = "0x1013690")]
		private void Update()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x1013878", Offset = "0x1013878", VA = "0x1013878")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x10140A8", Offset = "0x10140A8", VA = "0x10140A8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x1014A1C", Offset = "0x1014A1C", VA = "0x1014A1C")]
		private void RigidbodieCollectionClean()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x1014DB0", Offset = "0x1014DB0", VA = "0x1014DB0")]
		private void RigidbodieCollectionUpdate(Rigidbody2D rigid)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x1014F00", Offset = "0x1014F00", VA = "0x1014F00")]
		private bool RigidbodieCollectionValidate(Rigidbody2D rigid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x1014FA4", Offset = "0x1014FA4", VA = "0x1014FA4")]
		private void ApplyForce(Rigidbody2D rigid, Transform trans, Collider2D coll)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x1015558", Offset = "0x1015558", VA = "0x1015558")]
		private void ApplyCGFForceAtPosition(Rigidbody2D rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x10156AC", Offset = "0x10156AC", VA = "0x10156AC")]
		private void ApplyCGFForce(Rigidbody2D rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x10157F0", Offset = "0x10157F0", VA = "0x10157F0")]
		private void ApplyCGFTorque(Rigidbody2D rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x10158B8", Offset = "0x10158B8", VA = "0x10158B8")]
		private void ApplyCGFGravitationalAttraction(Rigidbody2D rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x1015BB8", Offset = "0x1015BB8", VA = "0x1015BB8")]
		private void ApplyCGFVelocity(Rigidbody2D rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x1015D48", Offset = "0x1015D48", VA = "0x1015D48")]
		private void ApplyCGFAngularVelocity(Rigidbody2D rigid, Vector3 transPos, Transform trans)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x10140B8", Offset = "0x10140B8", VA = "0x10140B8")]
		private void CalculateAndEstimateForce()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x10152B0", Offset = "0x10152B0", VA = "0x10152B0")]
		public Vector3 FindClosestPoints(Collider2D point, List<Collider2D> closestColliders, bool findClosestPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x1015E48", Offset = "0x1015E48", VA = "0x1015E48")]
		public Vector3 FindClosestPoints(Collider2D point, Collider2D closestCollider, bool findClosestPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x10154FC", Offset = "0x10154FC", VA = "0x10154FC")]
		public Vector3 GetVectorHeightOffset(Vector3 A, Vector3 B, float x)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1015FE8", Offset = "0x1015FE8", VA = "0x1015FE8")]
		public static GameObject CreateCGF()
		{
			return null;
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x101393C", Offset = "0x101393C", VA = "0x101393C")]
		private void DrawGravityForceLineRenderer()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x10160F8", Offset = "0x10160F8", VA = "0x10160F8")]
		private void SetupDebugColors()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x10125BC", Offset = "0x10125BC", VA = "0x10125BC")]
		private void DrawGravityForceGizmos()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x1013440", Offset = "0x1013440", VA = "0x1013440")]
		private void DrawClosetColliderGizmos()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7C00", Offset = "0xAA7C00")]
	public class CGF_AxisControls : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004A3")]
		public class EnableControls
		{
			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB23A4", Offset = "0xAB23A4")]
			private string buttonName;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB23F0", Offset = "0xAB23F0")]
			private bool pressValue;

			[Token(Token = "0x1700032A")]
			public string ButtonName
			{
				[Token(Token = "0x600185A")]
				[Address(RVA = "0xCB5520", Offset = "0xCB5520", VA = "0xCB5520")]
				get
				{
					return null;
				}
				[Token(Token = "0x600185B")]
				[Address(RVA = "0xCB5528", Offset = "0xCB5528", VA = "0xCB5528")]
				set
				{
				}
			}

			[Token(Token = "0x1700032B")]
			public bool PressValue
			{
				[Token(Token = "0x600185C")]
				[Address(RVA = "0xCB5530", Offset = "0xCB5530", VA = "0xCB5530")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600185D")]
				[Address(RVA = "0xCB5538", Offset = "0xCB5538", VA = "0xCB5538")]
				set
				{
				}
			}

			[Token(Token = "0x600185E")]
			[Address(RVA = "0xCB5544", Offset = "0xCB5544", VA = "0xCB5544")]
			public EnableControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A4")]
		public class SizeControls
		{
			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB243C", Offset = "0xAB243C")]
			private string buttonName;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2488", Offset = "0xAB2488")]
			[SerializeField]
			private float pressValue;

			[Token(Token = "0x1700032C")]
			public string ButtonName
			{
				[Token(Token = "0x600185F")]
				[Address(RVA = "0xCB55C4", Offset = "0xCB55C4", VA = "0xCB55C4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001860")]
				[Address(RVA = "0xCB55CC", Offset = "0xCB55CC", VA = "0xCB55CC")]
				set
				{
				}
			}

			[Token(Token = "0x1700032D")]
			public float PressValue
			{
				[Token(Token = "0x6001861")]
				[Address(RVA = "0xCB55D4", Offset = "0xCB55D4", VA = "0xCB55D4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001862")]
				[Address(RVA = "0xCB55DC", Offset = "0xCB55DC", VA = "0xCB55DC")]
				set
				{
				}
			}

			[Token(Token = "0x6001863")]
			[Address(RVA = "0xCB55E4", Offset = "0xCB55E4", VA = "0xCB55E4")]
			public SizeControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A5")]
		public class BoxSizeControls
		{
			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB24D4", Offset = "0xAB24D4")]
			private string buttonName;

			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2520", Offset = "0xAB2520")]
			[SerializeField]
			private Vector3 pressValue;

			[Token(Token = "0x1700032E")]
			public string ButtonName
			{
				[Token(Token = "0x6001864")]
				[Address(RVA = "0xCB54C4", Offset = "0xCB54C4", VA = "0xCB54C4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001865")]
				[Address(RVA = "0xCB54CC", Offset = "0xCB54CC", VA = "0xCB54CC")]
				set
				{
				}
			}

			[Token(Token = "0x1700032F")]
			public Vector3 PressValue
			{
				[Token(Token = "0x6001866")]
				[Address(RVA = "0xCB54D4", Offset = "0xCB54D4", VA = "0xCB54D4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001867")]
				[Address(RVA = "0xCB54E0", Offset = "0xCB54E0", VA = "0xCB54E0")]
				set
				{
				}
			}

			[Token(Token = "0x6001868")]
			[Address(RVA = "0xCB54EC", Offset = "0xCB54EC", VA = "0xCB54EC")]
			public BoxSizeControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A6")]
		public class ForcePowerControls
		{
			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB256C", Offset = "0xAB256C")]
			private string buttonName;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB25B8", Offset = "0xAB25B8")]
			private float pressValue;

			[Token(Token = "0x17000330")]
			public string ButtonName
			{
				[Token(Token = "0x6001869")]
				[Address(RVA = "0xCB5574", Offset = "0xCB5574", VA = "0xCB5574")]
				get
				{
					return null;
				}
				[Token(Token = "0x600186A")]
				[Address(RVA = "0xCB557C", Offset = "0xCB557C", VA = "0xCB557C")]
				set
				{
				}
			}

			[Token(Token = "0x17000331")]
			public float PressValue
			{
				[Token(Token = "0x600186B")]
				[Address(RVA = "0xCB5584", Offset = "0xCB5584", VA = "0xCB5584")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600186C")]
				[Address(RVA = "0xCB558C", Offset = "0xCB558C", VA = "0xCB558C")]
				set
				{
				}
			}

			[Token(Token = "0x600186D")]
			[Address(RVA = "0xCB5594", Offset = "0xCB5594", VA = "0xCB5594")]
			public ForcePowerControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A7")]
		public class EnableControler
		{
			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2604", Offset = "0xAB2604")]
			private bool idleValue;

			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2650", Offset = "0xAB2650")]
			private List<EnableControls> enableControls;

			[Token(Token = "0x17000332")]
			public bool IdleValue
			{
				[Token(Token = "0x600186E")]
				[Address(RVA = "0xCB54F4", Offset = "0xCB54F4", VA = "0xCB54F4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600186F")]
				[Address(RVA = "0xCB54FC", Offset = "0xCB54FC", VA = "0xCB54FC")]
				set
				{
				}
			}

			[Token(Token = "0x17000333")]
			public List<EnableControls> _enableControls
			{
				[Token(Token = "0x6001870")]
				[Address(RVA = "0xCB5508", Offset = "0xCB5508", VA = "0xCB5508")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001871")]
				[Address(RVA = "0xCB5510", Offset = "0xCB5510", VA = "0xCB5510")]
				set
				{
				}
			}

			[Token(Token = "0x6001872")]
			[Address(RVA = "0xCB5518", Offset = "0xCB5518", VA = "0xCB5518")]
			public EnableControler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A8")]
		public class ForceControler
		{
			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB269C", Offset = "0xAB269C")]
			private float idleValue;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB26E8", Offset = "0xAB26E8")]
			[SerializeField]
			private List<ForcePowerControls> forcePowerControls;

			[Token(Token = "0x17000334")]
			public float IdleValue
			{
				[Token(Token = "0x6001873")]
				[Address(RVA = "0xCB554C", Offset = "0xCB554C", VA = "0xCB554C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001874")]
				[Address(RVA = "0xCB5554", Offset = "0xCB5554", VA = "0xCB5554")]
				set
				{
				}
			}

			[Token(Token = "0x17000335")]
			public List<ForcePowerControls> _forcePowerControls
			{
				[Token(Token = "0x6001875")]
				[Address(RVA = "0xCB555C", Offset = "0xCB555C", VA = "0xCB555C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001876")]
				[Address(RVA = "0xCB5564", Offset = "0xCB5564", VA = "0xCB5564")]
				set
				{
				}
			}

			[Token(Token = "0x6001877")]
			[Address(RVA = "0xCB556C", Offset = "0xCB556C", VA = "0xCB556C")]
			public ForceControler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A9")]
		public class SizeControler
		{
			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2734", Offset = "0xAB2734")]
			private float idleValue;

			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2780", Offset = "0xAB2780")]
			private List<SizeControls> sizeControls;

			[Token(Token = "0x17000336")]
			public float IdleValue
			{
				[Token(Token = "0x6001878")]
				[Address(RVA = "0xCB559C", Offset = "0xCB559C", VA = "0xCB559C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001879")]
				[Address(RVA = "0xCB55A4", Offset = "0xCB55A4", VA = "0xCB55A4")]
				set
				{
				}
			}

			[Token(Token = "0x17000337")]
			public List<SizeControls> _sizeControls
			{
				[Token(Token = "0x600187A")]
				[Address(RVA = "0xCB55AC", Offset = "0xCB55AC", VA = "0xCB55AC")]
				get
				{
					return null;
				}
				[Token(Token = "0x600187B")]
				[Address(RVA = "0xCB55B4", Offset = "0xCB55B4", VA = "0xCB55B4")]
				set
				{
				}
			}

			[Token(Token = "0x600187C")]
			[Address(RVA = "0xCB55BC", Offset = "0xCB55BC", VA = "0xCB55BC")]
			public SizeControler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004AA")]
		public class BoxSizeControler
		{
			[Token(Token = "0x4001DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB27CC", Offset = "0xAB27CC")]
			[SerializeField]
			private Vector3 idleValue;

			[Token(Token = "0x4001DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2818", Offset = "0xAB2818")]
			private List<BoxSizeControls> boxSizeControls;

			[Token(Token = "0x17000338")]
			public Vector3 IdleValue
			{
				[Token(Token = "0x600187D")]
				[Address(RVA = "0xCB5468", Offset = "0xCB5468", VA = "0xCB5468")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600187E")]
				[Address(RVA = "0xCB5474", Offset = "0xCB5474", VA = "0xCB5474")]
				set
				{
				}
			}

			[Token(Token = "0x17000339")]
			public List<BoxSizeControls> _boxSizeControls
			{
				[Token(Token = "0x600187F")]
				[Address(RVA = "0xCB5480", Offset = "0xCB5480", VA = "0xCB5480")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001880")]
				[Address(RVA = "0xCB5488", Offset = "0xCB5488", VA = "0xCB5488")]
				set
				{
				}
			}

			[Token(Token = "0x6001881")]
			[Address(RVA = "0xCB5490", Offset = "0xCB5490", VA = "0xCB5490")]
			public BoxSizeControler()
			{
			}
		}

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2274", Offset = "0xAB2274")]
		private EnableControler enableControler;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB22C0", Offset = "0xAB22C0")]
		[SerializeField]
		private ForceControler forceControler;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB230C", Offset = "0xAB230C")]
		private SizeControler sizeControler;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2358", Offset = "0xAB2358")]
		private BoxSizeControler boxSizeControler;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CGF cgf;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool flagEnableControl;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool flagPowerControl;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool flagSizeControl;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		private bool flagBoxSizeControl;

		[Token(Token = "0x17000326")]
		public EnableControler _enableControler
		{
			[Token(Token = "0x600184F")]
			[Address(RVA = "0x1BF1990", Offset = "0x1BF1990", VA = "0x1BF1990")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001850")]
			[Address(RVA = "0x1BF1998", Offset = "0x1BF1998", VA = "0x1BF1998")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public ForceControler _forceControler
		{
			[Token(Token = "0x6001851")]
			[Address(RVA = "0x1BF19A0", Offset = "0x1BF19A0", VA = "0x1BF19A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001852")]
			[Address(RVA = "0x1BF19A8", Offset = "0x1BF19A8", VA = "0x1BF19A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public SizeControler _sizeControler
		{
			[Token(Token = "0x6001853")]
			[Address(RVA = "0x1BF19B0", Offset = "0x1BF19B0", VA = "0x1BF19B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001854")]
			[Address(RVA = "0x1BF19B8", Offset = "0x1BF19B8", VA = "0x1BF19B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public BoxSizeControler _boxSizeControler
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0x1BF19C0", Offset = "0x1BF19C0", VA = "0x1BF19C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001856")]
			[Address(RVA = "0x1BF19C8", Offset = "0x1BF19C8", VA = "0x1BF19C8")]
			set
			{
			}
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x1BF1788", Offset = "0x1BF1788", VA = "0x1BF1788")]
		public CGF_AxisControls()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x1BF19D0", Offset = "0x1BF19D0", VA = "0x1BF19D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1BF1B54", Offset = "0x1BF1B54", VA = "0x1BF1B54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x1BF1A28", Offset = "0x1BF1A28", VA = "0x1BF1A28")]
		private void SetIdleValues()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7C60", Offset = "0xAA7C60")]
	public class CGF_AxisControls2D : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004AC")]
		public class EnableControls
		{
			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2994", Offset = "0xAB2994")]
			[SerializeField]
			private string buttonName;

			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB29E0", Offset = "0xAB29E0")]
			private bool pressValue;

			[Token(Token = "0x1700033E")]
			public string ButtonName
			{
				[Token(Token = "0x600188E")]
				[Address(RVA = "0xCB5690", Offset = "0xCB5690", VA = "0xCB5690")]
				get
				{
					return null;
				}
				[Token(Token = "0x600188F")]
				[Address(RVA = "0xCB5698", Offset = "0xCB5698", VA = "0xCB5698")]
				set
				{
				}
			}

			[Token(Token = "0x1700033F")]
			public bool PressValue
			{
				[Token(Token = "0x6001890")]
				[Address(RVA = "0xCB56A0", Offset = "0xCB56A0", VA = "0xCB56A0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001891")]
				[Address(RVA = "0xCB56A8", Offset = "0xCB56A8", VA = "0xCB56A8")]
				set
				{
				}
			}

			[Token(Token = "0x6001892")]
			[Address(RVA = "0xCB56B4", Offset = "0xCB56B4", VA = "0xCB56B4")]
			public EnableControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004AD")]
		public class SizeControls
		{
			[Token(Token = "0x4001E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2A2C", Offset = "0xAB2A2C")]
			private string buttonName;

			[Token(Token = "0x4001E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2A78", Offset = "0xAB2A78")]
			[SerializeField]
			private float pressValue;

			[Token(Token = "0x17000340")]
			public string ButtonName
			{
				[Token(Token = "0x6001893")]
				[Address(RVA = "0xCB5734", Offset = "0xCB5734", VA = "0xCB5734")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001894")]
				[Address(RVA = "0xCB573C", Offset = "0xCB573C", VA = "0xCB573C")]
				set
				{
				}
			}

			[Token(Token = "0x17000341")]
			public float PressValue
			{
				[Token(Token = "0x6001895")]
				[Address(RVA = "0xCB5744", Offset = "0xCB5744", VA = "0xCB5744")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001896")]
				[Address(RVA = "0xCB574C", Offset = "0xCB574C", VA = "0xCB574C")]
				set
				{
				}
			}

			[Token(Token = "0x6001897")]
			[Address(RVA = "0xCB5754", Offset = "0xCB5754", VA = "0xCB5754")]
			public SizeControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004AE")]
		public class BoxSizeControls
		{
			[Token(Token = "0x4001E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2AC4", Offset = "0xAB2AC4")]
			private string buttonName;

			[Token(Token = "0x4001E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2B10", Offset = "0xAB2B10")]
			private Vector2 pressValue;

			[Token(Token = "0x17000342")]
			public string ButtonName
			{
				[Token(Token = "0x6001898")]
				[Address(RVA = "0xCB563C", Offset = "0xCB563C", VA = "0xCB563C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001899")]
				[Address(RVA = "0xCB5644", Offset = "0xCB5644", VA = "0xCB5644")]
				set
				{
				}
			}

			[Token(Token = "0x17000343")]
			public Vector2 PressValue
			{
				[Token(Token = "0x600189A")]
				[Address(RVA = "0xCB564C", Offset = "0xCB564C", VA = "0xCB564C")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x600189B")]
				[Address(RVA = "0xCB5654", Offset = "0xCB5654", VA = "0xCB5654")]
				set
				{
				}
			}

			[Token(Token = "0x600189C")]
			[Address(RVA = "0xCB565C", Offset = "0xCB565C", VA = "0xCB565C")]
			public BoxSizeControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004AF")]
		public class ForcePowerControls
		{
			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2B5C", Offset = "0xAB2B5C")]
			private string buttonName;

			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2BA8", Offset = "0xAB2BA8")]
			[SerializeField]
			private float pressValue;

			[Token(Token = "0x17000344")]
			public string ButtonName
			{
				[Token(Token = "0x600189D")]
				[Address(RVA = "0xCB56E4", Offset = "0xCB56E4", VA = "0xCB56E4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600189E")]
				[Address(RVA = "0xCB56EC", Offset = "0xCB56EC", VA = "0xCB56EC")]
				set
				{
				}
			}

			[Token(Token = "0x17000345")]
			public float PressValue
			{
				[Token(Token = "0x600189F")]
				[Address(RVA = "0xCB56F4", Offset = "0xCB56F4", VA = "0xCB56F4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60018A0")]
				[Address(RVA = "0xCB56FC", Offset = "0xCB56FC", VA = "0xCB56FC")]
				set
				{
				}
			}

			[Token(Token = "0x60018A1")]
			[Address(RVA = "0xCB5704", Offset = "0xCB5704", VA = "0xCB5704")]
			public ForcePowerControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B0")]
		public class EnableControler
		{
			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2BF4", Offset = "0xAB2BF4")]
			[SerializeField]
			private bool idleValue;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2C40", Offset = "0xAB2C40")]
			private List<EnableControls> enableControls;

			[Token(Token = "0x17000346")]
			public bool IdleValue
			{
				[Token(Token = "0x60018A2")]
				[Address(RVA = "0xCB5664", Offset = "0xCB5664", VA = "0xCB5664")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60018A3")]
				[Address(RVA = "0xCB566C", Offset = "0xCB566C", VA = "0xCB566C")]
				set
				{
				}
			}

			[Token(Token = "0x17000347")]
			public List<EnableControls> _enableControls
			{
				[Token(Token = "0x60018A4")]
				[Address(RVA = "0xCB5678", Offset = "0xCB5678", VA = "0xCB5678")]
				get
				{
					return null;
				}
				[Token(Token = "0x60018A5")]
				[Address(RVA = "0xCB5680", Offset = "0xCB5680", VA = "0xCB5680")]
				set
				{
				}
			}

			[Token(Token = "0x60018A6")]
			[Address(RVA = "0xCB5688", Offset = "0xCB5688", VA = "0xCB5688")]
			public EnableControler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B1")]
		public class ForceControler
		{
			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2C8C", Offset = "0xAB2C8C")]
			private float idleValue;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2CD8", Offset = "0xAB2CD8")]
			[SerializeField]
			private List<ForcePowerControls> forcePowerControls;

			[Token(Token = "0x17000348")]
			public float IdleValue
			{
				[Token(Token = "0x60018A7")]
				[Address(RVA = "0xCB56BC", Offset = "0xCB56BC", VA = "0xCB56BC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60018A8")]
				[Address(RVA = "0xCB56C4", Offset = "0xCB56C4", VA = "0xCB56C4")]
				set
				{
				}
			}

			[Token(Token = "0x17000349")]
			public List<ForcePowerControls> _forcePowerControls
			{
				[Token(Token = "0x60018A9")]
				[Address(RVA = "0xCB56CC", Offset = "0xCB56CC", VA = "0xCB56CC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60018AA")]
				[Address(RVA = "0xCB56D4", Offset = "0xCB56D4", VA = "0xCB56D4")]
				set
				{
				}
			}

			[Token(Token = "0x60018AB")]
			[Address(RVA = "0xCB56DC", Offset = "0xCB56DC", VA = "0xCB56DC")]
			public ForceControler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B2")]
		public class SizeControler
		{
			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2D24", Offset = "0xAB2D24")]
			private float idleValue;

			[Token(Token = "0x4001E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2D70", Offset = "0xAB2D70")]
			private List<SizeControls> sizeControls;

			[Token(Token = "0x1700034A")]
			public float IdleValue
			{
				[Token(Token = "0x60018AC")]
				[Address(RVA = "0xCB570C", Offset = "0xCB570C", VA = "0xCB570C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60018AD")]
				[Address(RVA = "0xCB5714", Offset = "0xCB5714", VA = "0xCB5714")]
				set
				{
				}
			}

			[Token(Token = "0x1700034B")]
			public List<SizeControls> _sizeControls
			{
				[Token(Token = "0x60018AE")]
				[Address(RVA = "0xCB571C", Offset = "0xCB571C", VA = "0xCB571C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60018AF")]
				[Address(RVA = "0xCB5724", Offset = "0xCB5724", VA = "0xCB5724")]
				set
				{
				}
			}

			[Token(Token = "0x60018B0")]
			[Address(RVA = "0xCB572C", Offset = "0xCB572C", VA = "0xCB572C")]
			public SizeControler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B3")]
		public class BoxSizeControler
		{
			[Token(Token = "0x4001E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2DBC", Offset = "0xAB2DBC")]
			private Vector2 idleValue;

			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2E08", Offset = "0xAB2E08")]
			private List<BoxSizeControls> boxSizeControls;

			[Token(Token = "0x1700034C")]
			public Vector2 IdleValue
			{
				[Token(Token = "0x60018B1")]
				[Address(RVA = "0xCB55EC", Offset = "0xCB55EC", VA = "0xCB55EC")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x60018B2")]
				[Address(RVA = "0xCB55F4", Offset = "0xCB55F4", VA = "0xCB55F4")]
				set
				{
				}
			}

			[Token(Token = "0x1700034D")]
			public List<BoxSizeControls> _boxSizeControls
			{
				[Token(Token = "0x60018B3")]
				[Address(RVA = "0xCB55FC", Offset = "0xCB55FC", VA = "0xCB55FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60018B4")]
				[Address(RVA = "0xCB5604", Offset = "0xCB5604", VA = "0xCB5604")]
				set
				{
				}
			}

			[Token(Token = "0x60018B5")]
			[Address(RVA = "0xCB560C", Offset = "0xCB560C", VA = "0xCB560C")]
			public BoxSizeControler()
			{
			}
		}

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2864", Offset = "0xAB2864")]
		private EnableControler enableControler;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB28B0", Offset = "0xAB28B0")]
		[SerializeField]
		private ForceControler forceControler;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB28FC", Offset = "0xAB28FC")]
		[SerializeField]
		private SizeControler sizeControler;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2948", Offset = "0xAB2948")]
		private BoxSizeControler boxSizeControler;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CGF2D cgf;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool flagEnableControl;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool flagSizeControl;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool flagPowerControl;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		private bool flagBoxSizeControl;

		[Token(Token = "0x1700033A")]
		public EnableControler _enableControler
		{
			[Token(Token = "0x6001883")]
			[Address(RVA = "0x1BF23CC", Offset = "0x1BF23CC", VA = "0x1BF23CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001884")]
			[Address(RVA = "0x1BF23D4", Offset = "0x1BF23D4", VA = "0x1BF23D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700033B")]
		public ForceControler _forceControler
		{
			[Token(Token = "0x6001885")]
			[Address(RVA = "0x1BF23DC", Offset = "0x1BF23DC", VA = "0x1BF23DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001886")]
			[Address(RVA = "0x1BF23E4", Offset = "0x1BF23E4", VA = "0x1BF23E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		public SizeControler _sizeControler
		{
			[Token(Token = "0x6001887")]
			[Address(RVA = "0x1BF23EC", Offset = "0x1BF23EC", VA = "0x1BF23EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001888")]
			[Address(RVA = "0x1BF23F4", Offset = "0x1BF23F4", VA = "0x1BF23F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700033D")]
		public BoxSizeControler _boxSizeControler
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0x1BF23FC", Offset = "0x1BF23FC", VA = "0x1BF23FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600188A")]
			[Address(RVA = "0x1BF2404", Offset = "0x1BF2404", VA = "0x1BF2404")]
			set
			{
			}
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x1BF21C4", Offset = "0x1BF21C4", VA = "0x1BF21C4")]
		public CGF_AxisControls2D()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x1BF240C", Offset = "0x1BF240C", VA = "0x1BF240C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x1BF2588", Offset = "0x1BF2588", VA = "0x1BF2588")]
		private void Update()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x1BF2464", Offset = "0x1BF2464", VA = "0x1BF2464")]
		private void SetIdleValues()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7CC0", Offset = "0xAA7CC0")]
	public class CGF_KeyControls : MonoBehaviour
	{
		[Token(Token = "0x20004B5")]
		public enum CGFControls
		{
			[Token(Token = "0x4001E22")]
			Enable
		}

		[Serializable]
		[Token(Token = "0x20004B6")]
		public class EnableControls
		{
			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2F84", Offset = "0xAB2F84")]
			private KeyCode keyCode;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2FD0", Offset = "0xAB2FD0")]
			private bool pressValue;

			[Token(Token = "0x17000352")]
			public KeyCode _keyCode
			{
				[Token(Token = "0x60018C2")]
				[Address(RVA = "0xCB5814", Offset = "0xCB5814", VA = "0xCB5814")]
				get
				{
					return default(KeyCode);
				}
				[Token(Token = "0x60018C3")]
				[Address(RVA = "0xCB581C", Offset = "0xCB581C", VA = "0xCB581C")]
				set
				{
				}
			}

			[Token(Token = "0x17000353")]
			public bool PressValue
			{
				[Token(Token = "0x60018C4")]
				[Address(RVA = "0xCB5824", Offset = "0xCB5824", VA = "0xCB5824")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60018C5")]
				[Address(RVA = "0xCB582C", Offset = "0xCB582C", VA = "0xCB582C")]
				set
				{
				}
			}

			[Token(Token = "0x60018C6")]
			[Address(RVA = "0xCB5838", Offset = "0xCB5838", VA = "0xCB5838")]
			public EnableControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B7")]
		public class SizeControls
		{
			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB301C", Offset = "0xAB301C")]
			private KeyCode keyCode;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3068", Offset = "0xAB3068")]
			private float pressValue;

			[Token(Token = "0x17000354")]
			public KeyCode _keyCode
			{
				[Token(Token = "0x60018C7")]
				[Address(RVA = "0xCB58B8", Offset = "0xCB58B8", VA = "0xCB58B8")]
				get
				{
					return default(KeyCode);
				}
				[Token(Token = "0x60018C8")]
				[Address(RVA = "0xCB58C0", Offset = "0xCB58C0", VA = "0xCB58C0")]
				set
				{
				}
			}

			[Token(Token = "0x17000355")]
			public float PressValue
			{
				[Token(Token = "0x60018C9")]
				[Address(RVA = "0xCB58C8", Offset = "0xCB58C8", VA = "0xCB58C8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60018CA")]
				[Address(RVA = "0xCB58D0", Offset = "0xCB58D0", VA = "0xCB58D0")]
				set
				{
				}
			}

			[Token(Token = "0x60018CB")]
			[Address(RVA = "0xCB58D8", Offset = "0xCB58D8", VA = "0xCB58D8")]
			public SizeControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B8")]
		public class BoxSizeControls
		{
			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB30B4", Offset = "0xAB30B4")]
			[SerializeField]
			private KeyCode keyCode;

			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3100", Offset = "0xAB3100")]
			private Vector3 pressValue;

			[Token(Token = "0x17000356")]
			public KeyCode _keyCode
			{
				[Token(Token = "0x60018CC")]
				[Address(RVA = "0xCB57B8", Offset = "0xCB57B8", VA = "0xCB57B8")]
				get
				{
					return default(KeyCode);
				}
				[Token(Token = "0x60018CD")]
				[Address(RVA = "0xCB57C0", Offset = "0xCB57C0", VA = "0xCB57C0")]
				set
				{
				}
			}

			[Token(Token = "0x17000357")]
			public Vector3 PressValue
			{
				[Token(Token = "0x60018CE")]
				[Address(RVA = "0xCB57C8", Offset = "0xCB57C8", VA = "0xCB57C8")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60018CF")]
				[Address(RVA = "0xCB57D4", Offset = "0xCB57D4", VA = "0xCB57D4")]
				set
				{
				}
			}

			[Token(Token = "0x60018D0")]
			[Address(RVA = "0xCB57E0", Offset = "0xCB57E0", VA = "0xCB57E0")]
			public BoxSizeControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B9")]
		public class ForcePowerControls
		{
			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB314C", Offset = "0xAB314C")]
			private KeyCode keyCode;

			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3198", Offset = "0xAB3198")]
			private float pressValue;

			[Token(Token = "0x17000358")]
			public KeyCode _keyCode
			{
				[Token(Token = "0x60018D1")]
				[Address(RVA = "0xCB5868", Offset = "0xCB5868", VA = "0xCB5868")]
				get
				{
					return default(KeyCode);
				}
				[Token(Token = "0x60018D2")]
				[Address(RVA = "0xCB5870", Offset = "0xCB5870", VA = "0xCB5870")]
				set
				{
				}
			}

			[Token(Token = "0x17000359")]
			public float PressValue
			{
				[Token(Token = "0x60018D3")]
				[Address(RVA = "0xCB5878", Offset = "0xCB5878", VA = "0xCB5878")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60018D4")]
				[Address(RVA = "0xCB5880", Offset = "0xCB5880", VA = "0xCB5880")]
				set
				{
				}
			}

			[Token(Token = "0x60018D5")]
			[Address(RVA = "0xCB5888", Offset = "0xCB5888", VA = "0xCB5888")]
			public ForcePowerControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BA")]
		public class EnableControler
		{
			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB31E4", Offset = "0xAB31E4")]
			private bool idleValue;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3230", Offset = "0xAB3230")]
			private List<EnableControls> enableControls;

			[Token(Token = "0x1700035A")]
			public bool IdleValue
			{
				[Token(Token = "0x60018D6")]
				[Address(RVA = "0xCB57E8", Offset = "0xCB57E8", VA = "0xCB57E8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60018D7")]
				[Address(RVA = "0xCB57F0", Offset = "0xCB57F0", VA = "0xCB57F0")]
				set
				{
				}
			}

			[Token(Token = "0x1700035B")]
			public List<EnableControls> _enableControls
			{
				[Token(Token = "0x60018D8")]
				[Address(RVA = "0xCB57FC", Offset = "0xCB57FC", VA = "0xCB57FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60018D9")]
				[Address(RVA = "0xCB5804", Offset = "0xCB5804", VA = "0xCB5804")]
				set
				{
				}
			}

			[Token(Token = "0x60018DA")]
			[Address(RVA = "0xCB580C", Offset = "0xCB580C", VA = "0xCB580C")]
			public EnableControler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BB")]
		public class ForceControler
		{
			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB327C", Offset = "0xAB327C")]
			private float idleValue;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB32C8", Offset = "0xAB32C8")]
			private List<ForcePowerControls> forcePowerControls;

			[Token(Token = "0x1700035C")]
			public float IdleValue
			{
				[Token(Token = "0x60018DB")]
				[Address(RVA = "0xCB5840", Offset = "0xCB5840", VA = "0xCB5840")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60018DC")]
				[Address(RVA = "0xCB5848", Offset = "0xCB5848", VA = "0xCB5848")]
				set
				{
				}
			}

			[Token(Token = "0x1700035D")]
			public List<ForcePowerControls> _forcePowerControls
			{
				[Token(Token = "0x60018DD")]
				[Address(RVA = "0xCB5850", Offset = "0xCB5850", VA = "0xCB5850")]
				get
				{
					return null;
				}
				[Token(Token = "0x60018DE")]
				[Address(RVA = "0xCB5858", Offset = "0xCB5858", VA = "0xCB5858")]
				set
				{
				}
			}

			[Token(Token = "0x60018DF")]
			[Address(RVA = "0xCB5860", Offset = "0xCB5860", VA = "0xCB5860")]
			public ForceControler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BC")]
		public class SizeControler
		{
			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3314", Offset = "0xAB3314")]
			[SerializeField]
			private float idleValue;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3360", Offset = "0xAB3360")]
			private List<SizeControls> sizeControls;

			[Token(Token = "0x1700035E")]
			public float IdleValue
			{
				[Token(Token = "0x60018E0")]
				[Address(RVA = "0xCB5890", Offset = "0xCB5890", VA = "0xCB5890")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60018E1")]
				[Address(RVA = "0xCB5898", Offset = "0xCB5898", VA = "0xCB5898")]
				set
				{
				}
			}

			[Token(Token = "0x1700035F")]
			public List<SizeControls> _sizeControls
			{
				[Token(Token = "0x60018E2")]
				[Address(RVA = "0xCB58A0", Offset = "0xCB58A0", VA = "0xCB58A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60018E3")]
				[Address(RVA = "0xCB58A8", Offset = "0xCB58A8", VA = "0xCB58A8")]
				set
				{
				}
			}

			[Token(Token = "0x60018E4")]
			[Address(RVA = "0xCB58B0", Offset = "0xCB58B0", VA = "0xCB58B0")]
			public SizeControler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BD")]
		public class BoxSizeControler
		{
			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB33AC", Offset = "0xAB33AC")]
			private Vector3 idleValue;

			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB33F8", Offset = "0xAB33F8")]
			private List<BoxSizeControls> boxSizeControls;

			[Token(Token = "0x17000360")]
			public Vector3 IdleValue
			{
				[Token(Token = "0x60018E5")]
				[Address(RVA = "0xCB575C", Offset = "0xCB575C", VA = "0xCB575C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60018E6")]
				[Address(RVA = "0xCB5768", Offset = "0xCB5768", VA = "0xCB5768")]
				set
				{
				}
			}

			[Token(Token = "0x17000361")]
			public List<BoxSizeControls> _boxSizeControls
			{
				[Token(Token = "0x60018E7")]
				[Address(RVA = "0xCB5774", Offset = "0xCB5774", VA = "0xCB5774")]
				get
				{
					return null;
				}
				[Token(Token = "0x60018E8")]
				[Address(RVA = "0xCB577C", Offset = "0xCB577C", VA = "0xCB577C")]
				set
				{
				}
			}

			[Token(Token = "0x60018E9")]
			[Address(RVA = "0xCB5784", Offset = "0xCB5784", VA = "0xCB5784")]
			public BoxSizeControler()
			{
			}
		}

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2E54", Offset = "0xAB2E54")]
		private EnableControler enableControler;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2EA0", Offset = "0xAB2EA0")]
		[SerializeField]
		private ForceControler forceControler;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2EEC", Offset = "0xAB2EEC")]
		[SerializeField]
		private SizeControler sizeControler;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB2F38", Offset = "0xAB2F38")]
		private BoxSizeControler boxSizeControler;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CGF cgf;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool flagEnableControl;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool flagSizeControl;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool flagPowerControl;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		private bool flagBoxSizeControl;

		[Token(Token = "0x1700034E")]
		public EnableControler _enableControler
		{
			[Token(Token = "0x60018B7")]
			[Address(RVA = "0x1BF46B8", Offset = "0x1BF46B8", VA = "0x1BF46B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0x1BF46C0", Offset = "0x1BF46C0", VA = "0x1BF46C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public ForceControler _forceControler
		{
			[Token(Token = "0x60018B9")]
			[Address(RVA = "0x1BF46C8", Offset = "0x1BF46C8", VA = "0x1BF46C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018BA")]
			[Address(RVA = "0x1BF46D0", Offset = "0x1BF46D0", VA = "0x1BF46D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public SizeControler _sizeControler
		{
			[Token(Token = "0x60018BB")]
			[Address(RVA = "0x1BF46D8", Offset = "0x1BF46D8", VA = "0x1BF46D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018BC")]
			[Address(RVA = "0x1BF46E0", Offset = "0x1BF46E0", VA = "0x1BF46E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000351")]
		public BoxSizeControler _boxSizeControler
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0x1BF46E8", Offset = "0x1BF46E8", VA = "0x1BF46E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018BE")]
			[Address(RVA = "0x1BF46F0", Offset = "0x1BF46F0", VA = "0x1BF46F0")]
			set
			{
			}
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x1BF44B0", Offset = "0x1BF44B0", VA = "0x1BF44B0")]
		public CGF_KeyControls()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1BF46F8", Offset = "0x1BF46F8", VA = "0x1BF46F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x1BF487C", Offset = "0x1BF487C", VA = "0x1BF487C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x1BF4750", Offset = "0x1BF4750", VA = "0x1BF4750")]
		private void SetIdleValues()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7D20", Offset = "0xAA7D20")]
	public class CGF_KeyControls2D : MonoBehaviour
	{
		[Token(Token = "0x20004BF")]
		public enum CGFControls
		{
			[Token(Token = "0x4001E3D")]
			Enable
		}

		[Serializable]
		[Token(Token = "0x20004C0")]
		public class EnableControls
		{
			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3574", Offset = "0xAB3574")]
			private KeyCode keyCode;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB35C0", Offset = "0xAB35C0")]
			private bool pressValue;

			[Token(Token = "0x17000366")]
			public KeyCode _keyCode
			{
				[Token(Token = "0x60018F6")]
				[Address(RVA = "0xCB5984", Offset = "0xCB5984", VA = "0xCB5984")]
				get
				{
					return default(KeyCode);
				}
				[Token(Token = "0x60018F7")]
				[Address(RVA = "0xCB598C", Offset = "0xCB598C", VA = "0xCB598C")]
				set
				{
				}
			}

			[Token(Token = "0x17000367")]
			public bool PressValue
			{
				[Token(Token = "0x60018F8")]
				[Address(RVA = "0xCB5994", Offset = "0xCB5994", VA = "0xCB5994")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60018F9")]
				[Address(RVA = "0xCB599C", Offset = "0xCB599C", VA = "0xCB599C")]
				set
				{
				}
			}

			[Token(Token = "0x60018FA")]
			[Address(RVA = "0xCB59A8", Offset = "0xCB59A8", VA = "0xCB59A8")]
			public EnableControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C1")]
		public class SizeControls
		{
			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB360C", Offset = "0xAB360C")]
			[SerializeField]
			private KeyCode keyCode;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3658", Offset = "0xAB3658")]
			[SerializeField]
			private float pressValue;

			[Token(Token = "0x17000368")]
			public KeyCode _keyCode
			{
				[Token(Token = "0x60018FB")]
				[Address(RVA = "0xCB5A28", Offset = "0xCB5A28", VA = "0xCB5A28")]
				get
				{
					return default(KeyCode);
				}
				[Token(Token = "0x60018FC")]
				[Address(RVA = "0xCB5A30", Offset = "0xCB5A30", VA = "0xCB5A30")]
				set
				{
				}
			}

			[Token(Token = "0x17000369")]
			public float PressValue
			{
				[Token(Token = "0x60018FD")]
				[Address(RVA = "0xCB5A38", Offset = "0xCB5A38", VA = "0xCB5A38")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60018FE")]
				[Address(RVA = "0xCB5A40", Offset = "0xCB5A40", VA = "0xCB5A40")]
				set
				{
				}
			}

			[Token(Token = "0x60018FF")]
			[Address(RVA = "0xCB5A48", Offset = "0xCB5A48", VA = "0xCB5A48")]
			public SizeControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C2")]
		public class BoxSizeControls
		{
			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB36A4", Offset = "0xAB36A4")]
			[SerializeField]
			private KeyCode keyCode;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB36F0", Offset = "0xAB36F0")]
			[SerializeField]
			private Vector2 pressValue;

			[Token(Token = "0x1700036A")]
			public KeyCode _keyCode
			{
				[Token(Token = "0x6001900")]
				[Address(RVA = "0xCB5930", Offset = "0xCB5930", VA = "0xCB5930")]
				get
				{
					return default(KeyCode);
				}
				[Token(Token = "0x6001901")]
				[Address(RVA = "0xCB5938", Offset = "0xCB5938", VA = "0xCB5938")]
				set
				{
				}
			}

			[Token(Token = "0x1700036B")]
			public Vector2 PressValue
			{
				[Token(Token = "0x6001902")]
				[Address(RVA = "0xCB5940", Offset = "0xCB5940", VA = "0xCB5940")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6001903")]
				[Address(RVA = "0xCB5948", Offset = "0xCB5948", VA = "0xCB5948")]
				set
				{
				}
			}

			[Token(Token = "0x6001904")]
			[Address(RVA = "0xCB5950", Offset = "0xCB5950", VA = "0xCB5950")]
			public BoxSizeControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C3")]
		public class ForcePowerControls
		{
			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB373C", Offset = "0xAB373C")]
			private KeyCode keyCode;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3788", Offset = "0xAB3788")]
			[SerializeField]
			private float pressValue;

			[Token(Token = "0x1700036C")]
			public KeyCode _keyCode
			{
				[Token(Token = "0x6001905")]
				[Address(RVA = "0xCB59D8", Offset = "0xCB59D8", VA = "0xCB59D8")]
				get
				{
					return default(KeyCode);
				}
				[Token(Token = "0x6001906")]
				[Address(RVA = "0xCB59E0", Offset = "0xCB59E0", VA = "0xCB59E0")]
				set
				{
				}
			}

			[Token(Token = "0x1700036D")]
			public float PressValue
			{
				[Token(Token = "0x6001907")]
				[Address(RVA = "0xCB59E8", Offset = "0xCB59E8", VA = "0xCB59E8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001908")]
				[Address(RVA = "0xCB59F0", Offset = "0xCB59F0", VA = "0xCB59F0")]
				set
				{
				}
			}

			[Token(Token = "0x6001909")]
			[Address(RVA = "0xCB59F8", Offset = "0xCB59F8", VA = "0xCB59F8")]
			public ForcePowerControls()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C4")]
		public class EnableControler
		{
			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB37D4", Offset = "0xAB37D4")]
			[SerializeField]
			private bool idleValue;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3820", Offset = "0xAB3820")]
			[SerializeField]
			private List<EnableControls> enableControls;

			[Token(Token = "0x1700036E")]
			public bool IdleValue
			{
				[Token(Token = "0x600190A")]
				[Address(RVA = "0xCB5958", Offset = "0xCB5958", VA = "0xCB5958")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600190B")]
				[Address(RVA = "0xCB5960", Offset = "0xCB5960", VA = "0xCB5960")]
				set
				{
				}
			}

			[Token(Token = "0x1700036F")]
			public List<EnableControls> _enableControls
			{
				[Token(Token = "0x600190C")]
				[Address(RVA = "0xCB596C", Offset = "0xCB596C", VA = "0xCB596C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600190D")]
				[Address(RVA = "0xCB5974", Offset = "0xCB5974", VA = "0xCB5974")]
				set
				{
				}
			}

			[Token(Token = "0x600190E")]
			[Address(RVA = "0xCB597C", Offset = "0xCB597C", VA = "0xCB597C")]
			public EnableControler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C5")]
		public class ForceControler
		{
			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB386C", Offset = "0xAB386C")]
			private float idleValue;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB38B8", Offset = "0xAB38B8")]
			[SerializeField]
			private List<ForcePowerControls> forcePowerControls;

			[Token(Token = "0x17000370")]
			public float IdleValue
			{
				[Token(Token = "0x600190F")]
				[Address(RVA = "0xCB59B0", Offset = "0xCB59B0", VA = "0xCB59B0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001910")]
				[Address(RVA = "0xCB59B8", Offset = "0xCB59B8", VA = "0xCB59B8")]
				set
				{
				}
			}

			[Token(Token = "0x17000371")]
			public List<ForcePowerControls> _forcePowerControls
			{
				[Token(Token = "0x6001911")]
				[Address(RVA = "0xCB59C0", Offset = "0xCB59C0", VA = "0xCB59C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001912")]
				[Address(RVA = "0xCB59C8", Offset = "0xCB59C8", VA = "0xCB59C8")]
				set
				{
				}
			}

			[Token(Token = "0x6001913")]
			[Address(RVA = "0xCB59D0", Offset = "0xCB59D0", VA = "0xCB59D0")]
			public ForceControler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C6")]
		public class SizeControler
		{
			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3904", Offset = "0xAB3904")]
			private float idleValue;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3950", Offset = "0xAB3950")]
			[SerializeField]
			private List<SizeControls> sizeControls;

			[Token(Token = "0x17000372")]
			public float IdleValue
			{
				[Token(Token = "0x6001914")]
				[Address(RVA = "0xCB5A00", Offset = "0xCB5A00", VA = "0xCB5A00")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001915")]
				[Address(RVA = "0xCB5A08", Offset = "0xCB5A08", VA = "0xCB5A08")]
				set
				{
				}
			}

			[Token(Token = "0x17000373")]
			public List<SizeControls> _sizeControls
			{
				[Token(Token = "0x6001916")]
				[Address(RVA = "0xCB5A10", Offset = "0xCB5A10", VA = "0xCB5A10")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001917")]
				[Address(RVA = "0xCB5A18", Offset = "0xCB5A18", VA = "0xCB5A18")]
				set
				{
				}
			}

			[Token(Token = "0x6001918")]
			[Address(RVA = "0xCB5A20", Offset = "0xCB5A20", VA = "0xCB5A20")]
			public SizeControler()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C7")]
		public class BoxSizeControler
		{
			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB399C", Offset = "0xAB399C")]
			private Vector2 idleValue;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB39E8", Offset = "0xAB39E8")]
			private List<BoxSizeControls> boxSizeControls;

			[Token(Token = "0x17000374")]
			public Vector2 IdleValue
			{
				[Token(Token = "0x6001919")]
				[Address(RVA = "0xCB58E0", Offset = "0xCB58E0", VA = "0xCB58E0")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x600191A")]
				[Address(RVA = "0xCB58E8", Offset = "0xCB58E8", VA = "0xCB58E8")]
				set
				{
				}
			}

			[Token(Token = "0x17000375")]
			public List<BoxSizeControls> _boxSizeControls
			{
				[Token(Token = "0x600191B")]
				[Address(RVA = "0xCB58F0", Offset = "0xCB58F0", VA = "0xCB58F0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600191C")]
				[Address(RVA = "0xCB58F8", Offset = "0xCB58F8", VA = "0xCB58F8")]
				set
				{
				}
			}

			[Token(Token = "0x600191D")]
			[Address(RVA = "0xCB5900", Offset = "0xCB5900", VA = "0xCB5900")]
			public BoxSizeControler()
			{
			}
		}

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3444", Offset = "0xAB3444")]
		private EnableControler enableControler;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3490", Offset = "0xAB3490")]
		private ForceControler forceControler;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB34DC", Offset = "0xAB34DC")]
		private SizeControler sizeControler;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3528", Offset = "0xAB3528")]
		private BoxSizeControler boxSizeControler;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CGF2D cgf;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool flagEnableControl;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool flagSizeControl;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool flagPowerControl;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		private bool flagBoxSizeControl;

		[Token(Token = "0x17000362")]
		public EnableControler _enableControler
		{
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x1BF5028", Offset = "0x1BF5028", VA = "0x1BF5028")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x1BF5030", Offset = "0x1BF5030", VA = "0x1BF5030")]
			set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public ForceControler _forceControler
		{
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x1BF5038", Offset = "0x1BF5038", VA = "0x1BF5038")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x1BF5040", Offset = "0x1BF5040", VA = "0x1BF5040")]
			set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public SizeControler _sizeControler
		{
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x1BF5048", Offset = "0x1BF5048", VA = "0x1BF5048")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x1BF5050", Offset = "0x1BF5050", VA = "0x1BF5050")]
			set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public BoxSizeControler _boxSizeControler
		{
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x1BF5058", Offset = "0x1BF5058", VA = "0x1BF5058")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x1BF5060", Offset = "0x1BF5060", VA = "0x1BF5060")]
			set
			{
			}
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x1BF4E20", Offset = "0x1BF4E20", VA = "0x1BF4E20")]
		public CGF_KeyControls2D()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x1BF5068", Offset = "0x1BF5068", VA = "0x1BF5068")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x1BF51E4", Offset = "0x1BF51E4", VA = "0x1BF51E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x1BF50C0", Offset = "0x1BF50C0", VA = "0x1BF50C0")]
		private void SetIdleValues()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7D80", Offset = "0xAA7D80")]
	public class CGF_Pivot : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004C9")]
		public class CustomAnimationCurveObject
		{
			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private AnimationCurve animationCurve;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private float minTime;

			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private float maxTime;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private float minValue;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			private float maxValue;

			[Token(Token = "0x17000379")]
			public AnimationCurve _animationCurve
			{
				[Token(Token = "0x6001928")]
				[Address(RVA = "0xCB5B48", Offset = "0xCB5B48", VA = "0xCB5B48")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001929")]
				[Address(RVA = "0xCB5B50", Offset = "0xCB5B50", VA = "0xCB5B50")]
				set
				{
				}
			}

			[Token(Token = "0x1700037A")]
			public float MinTime
			{
				[Token(Token = "0x600192A")]
				[Address(RVA = "0xCB5B58", Offset = "0xCB5B58", VA = "0xCB5B58")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600192B")]
				[Address(RVA = "0xCB5B60", Offset = "0xCB5B60", VA = "0xCB5B60")]
				set
				{
				}
			}

			[Token(Token = "0x1700037B")]
			public float MaxTime
			{
				[Token(Token = "0x600192C")]
				[Address(RVA = "0xCB5B68", Offset = "0xCB5B68", VA = "0xCB5B68")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600192D")]
				[Address(RVA = "0xCB5B70", Offset = "0xCB5B70", VA = "0xCB5B70")]
				set
				{
				}
			}

			[Token(Token = "0x1700037C")]
			public float MinValue
			{
				[Token(Token = "0x600192E")]
				[Address(RVA = "0xCB5B78", Offset = "0xCB5B78", VA = "0xCB5B78")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600192F")]
				[Address(RVA = "0xCB5B80", Offset = "0xCB5B80", VA = "0xCB5B80")]
				set
				{
				}
			}

			[Token(Token = "0x1700037D")]
			public float MaxValue
			{
				[Token(Token = "0x6001930")]
				[Address(RVA = "0xCB5B88", Offset = "0xCB5B88", VA = "0xCB5B88")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001931")]
				[Address(RVA = "0xCB5B90", Offset = "0xCB5B90", VA = "0xCB5B90")]
				set
				{
				}
			}

			[Token(Token = "0x6001932")]
			[Address(RVA = "0xCB5B98", Offset = "0xCB5B98", VA = "0xCB5B98")]
			public CustomAnimationCurveObject()
			{
			}
		}

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CGF cgf;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CustomAnimationCurveObject forceByDistance;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Follow follow;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float distance;

		[Token(Token = "0x17000376")]
		public CGF _cgf
		{
			[Token(Token = "0x600191E")]
			[Address(RVA = "0x1BF5DF8", Offset = "0x1BF5DF8", VA = "0x1BF5DF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191F")]
			[Address(RVA = "0x1BF5E00", Offset = "0x1BF5E00", VA = "0x1BF5E00")]
			set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public CustomAnimationCurveObject ForceByDistance
		{
			[Token(Token = "0x6001920")]
			[Address(RVA = "0x1BF5E08", Offset = "0x1BF5E08", VA = "0x1BF5E08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001921")]
			[Address(RVA = "0x1BF5E10", Offset = "0x1BF5E10", VA = "0x1BF5E10")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public float Distance
		{
			[Token(Token = "0x6001922")]
			[Address(RVA = "0x1BF5E18", Offset = "0x1BF5E18", VA = "0x1BF5E18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001923")]
			[Address(RVA = "0x1BF5E20", Offset = "0x1BF5E20", VA = "0x1BF5E20")]
			set
			{
			}
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x1BF5E28", Offset = "0x1BF5E28", VA = "0x1BF5E28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x1BF5E2C", Offset = "0x1BF5E2C", VA = "0x1BF5E2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x1BF5E80", Offset = "0x1BF5E80", VA = "0x1BF5E80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x1BF603C", Offset = "0x1BF603C", VA = "0x1BF603C")]
		public CGF_Pivot()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7DE0", Offset = "0xAA7DE0")]
	public class CGF_Pulse : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004CB")]
		public class PulseProperties
		{
			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3AF0", Offset = "0xAB3AF0")]
			private bool pulse;

			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3B3C", Offset = "0xAB3B3C")]
			private float speed;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3B88", Offset = "0xAB3B88")]
			private float minSize;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3BD4", Offset = "0xAB3BD4")]
			[SerializeField]
			private float maxSize;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3C20", Offset = "0xAB3C20")]
			private Vector3 minBoxSize;

			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3C6C", Offset = "0xAB3C6C")]
			private Vector3 maxBoxSize;

			[Token(Token = "0x1700037F")]
			public bool Pulse
			{
				[Token(Token = "0x600193B")]
				[Address(RVA = "0xCB5BE4", Offset = "0xCB5BE4", VA = "0xCB5BE4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600193C")]
				[Address(RVA = "0xCB5BEC", Offset = "0xCB5BEC", VA = "0xCB5BEC")]
				set
				{
				}
			}

			[Token(Token = "0x17000380")]
			public float Speed
			{
				[Token(Token = "0x600193D")]
				[Address(RVA = "0xCB5BF8", Offset = "0xCB5BF8", VA = "0xCB5BF8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600193E")]
				[Address(RVA = "0xCB5C00", Offset = "0xCB5C00", VA = "0xCB5C00")]
				set
				{
				}
			}

			[Token(Token = "0x17000381")]
			public float MinSize
			{
				[Token(Token = "0x600193F")]
				[Address(RVA = "0xCB5C08", Offset = "0xCB5C08", VA = "0xCB5C08")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001940")]
				[Address(RVA = "0xCB5C10", Offset = "0xCB5C10", VA = "0xCB5C10")]
				set
				{
				}
			}

			[Token(Token = "0x17000382")]
			public float MaxSize
			{
				[Token(Token = "0x6001941")]
				[Address(RVA = "0xCB5C14", Offset = "0xCB5C14", VA = "0xCB5C14")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001942")]
				[Address(RVA = "0xCB5C1C", Offset = "0xCB5C1C", VA = "0xCB5C1C")]
				set
				{
				}
			}

			[Token(Token = "0x17000383")]
			public Vector3 MinBoxSize
			{
				[Token(Token = "0x6001943")]
				[Address(RVA = "0xCB5C24", Offset = "0xCB5C24", VA = "0xCB5C24")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001944")]
				[Address(RVA = "0xCB5C30", Offset = "0xCB5C30", VA = "0xCB5C30")]
				set
				{
				}
			}

			[Token(Token = "0x17000384")]
			public Vector3 MaxBoxSize
			{
				[Token(Token = "0x6001945")]
				[Address(RVA = "0xCB5C3C", Offset = "0xCB5C3C", VA = "0xCB5C3C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001946")]
				[Address(RVA = "0xCB5C48", Offset = "0xCB5C48", VA = "0xCB5C48")]
				set
				{
				}
			}

			[Token(Token = "0x6001947")]
			[Address(RVA = "0xCB5C54", Offset = "0xCB5C54", VA = "0xCB5C54")]
			public PulseProperties()
			{
			}
		}

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3AA4", Offset = "0xAB3AA4")]
		private PulseProperties pulseProperties;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CGF cgf;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool pulse_Positive;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool pulse_PositiveBoxX;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool pulse_PositiveBoxY;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		private bool pulse_PositiveBoxZ;

		[Token(Token = "0x1700037E")]
		public PulseProperties _pulseProperties
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0x1BF6044", Offset = "0x1BF6044", VA = "0x1BF6044")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001934")]
			[Address(RVA = "0x1BF604C", Offset = "0x1BF604C", VA = "0x1BF604C")]
			set
			{
			}
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x1BF6054", Offset = "0x1BF6054", VA = "0x1BF6054")]
		public CGF_Pulse()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1BF60BC", Offset = "0x1BF60BC", VA = "0x1BF60BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1BF6138", Offset = "0x1BF6138", VA = "0x1BF6138")]
		private void Update()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1BF6174", Offset = "0x1BF6174", VA = "0x1BF6174")]
		private void CalculatePulse()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x1BF61BC", Offset = "0x1BF61BC", VA = "0x1BF61BC")]
		private void CalculatePulseBySize()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x1BF6258", Offset = "0x1BF6258", VA = "0x1BF6258")]
		private void CalculatePulseByBoxSize()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7E40", Offset = "0xAA7E40")]
	public class CGF_Pulse2D : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004CD")]
		public class PulseProperties
		{
			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3D04", Offset = "0xAB3D04")]
			private bool pulse;

			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3D50", Offset = "0xAB3D50")]
			private float speed;

			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3D9C", Offset = "0xAB3D9C")]
			[SerializeField]
			private float minSize;

			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3DE8", Offset = "0xAB3DE8")]
			private float maxSize;

			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3E34", Offset = "0xAB3E34")]
			private Vector2 minBoxSize;

			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3E80", Offset = "0xAB3E80")]
			private Vector2 maxBoxSize;

			[Token(Token = "0x17000386")]
			public bool Pulse
			{
				[Token(Token = "0x6001950")]
				[Address(RVA = "0xCB5CC4", Offset = "0xCB5CC4", VA = "0xCB5CC4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001951")]
				[Address(RVA = "0xCB5CCC", Offset = "0xCB5CCC", VA = "0xCB5CCC")]
				set
				{
				}
			}

			[Token(Token = "0x17000387")]
			public float Speed
			{
				[Token(Token = "0x6001952")]
				[Address(RVA = "0xCB5CD8", Offset = "0xCB5CD8", VA = "0xCB5CD8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001953")]
				[Address(RVA = "0xCB5CE0", Offset = "0xCB5CE0", VA = "0xCB5CE0")]
				set
				{
				}
			}

			[Token(Token = "0x17000388")]
			public float MinSize
			{
				[Token(Token = "0x6001954")]
				[Address(RVA = "0xCB5CE8", Offset = "0xCB5CE8", VA = "0xCB5CE8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001955")]
				[Address(RVA = "0xCB5CF0", Offset = "0xCB5CF0", VA = "0xCB5CF0")]
				set
				{
				}
			}

			[Token(Token = "0x17000389")]
			public float MaxSize
			{
				[Token(Token = "0x6001956")]
				[Address(RVA = "0xCB5CF4", Offset = "0xCB5CF4", VA = "0xCB5CF4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001957")]
				[Address(RVA = "0xCB5CFC", Offset = "0xCB5CFC", VA = "0xCB5CFC")]
				set
				{
				}
			}

			[Token(Token = "0x1700038A")]
			public Vector2 MinBoxSize
			{
				[Token(Token = "0x6001958")]
				[Address(RVA = "0xCB5D04", Offset = "0xCB5D04", VA = "0xCB5D04")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6001959")]
				[Address(RVA = "0xCB5D0C", Offset = "0xCB5D0C", VA = "0xCB5D0C")]
				set
				{
				}
			}

			[Token(Token = "0x1700038B")]
			public Vector2 MaxBoxSize
			{
				[Token(Token = "0x600195A")]
				[Address(RVA = "0xCB5D14", Offset = "0xCB5D14", VA = "0xCB5D14")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x600195B")]
				[Address(RVA = "0xCB5D1C", Offset = "0xCB5D1C", VA = "0xCB5D1C")]
				set
				{
				}
			}

			[Token(Token = "0x600195C")]
			[Address(RVA = "0xCB5D24", Offset = "0xCB5D24", VA = "0xCB5D24")]
			public PulseProperties()
			{
			}
		}

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3CB8", Offset = "0xAB3CB8")]
		private PulseProperties pulseProperties;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CGF2D cgf;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool pulse_Positive;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool pulse_PositiveBoxX;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool pulse_PositiveBoxY;

		[Token(Token = "0x17000385")]
		public PulseProperties _pulseProperties
		{
			[Token(Token = "0x6001948")]
			[Address(RVA = "0x1BF6444", Offset = "0x1BF6444", VA = "0x1BF6444")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001949")]
			[Address(RVA = "0x1BF644C", Offset = "0x1BF644C", VA = "0x1BF644C")]
			set
			{
			}
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x1BF6454", Offset = "0x1BF6454", VA = "0x1BF6454")]
		public CGF_Pulse2D()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x1BF64BC", Offset = "0x1BF64BC", VA = "0x1BF64BC")]
		private void Start()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x1BF6540", Offset = "0x1BF6540", VA = "0x1BF6540")]
		private void Update()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x1BF657C", Offset = "0x1BF657C", VA = "0x1BF657C")]
		private void CalculatePulse()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x1BF65C4", Offset = "0x1BF65C4", VA = "0x1BF65C4")]
		private void CalculatePulseBySize()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x1BF6660", Offset = "0x1BF6660", VA = "0x1BF6660")]
		private void CalculatePulseByBoxSize()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7EA0", Offset = "0xAA7EA0")]
	public class CGF_SizeByRaycast : MonoBehaviour
	{
		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3ECC", Offset = "0xAB3ECC")]
		[SerializeField]
		private float offsetRaycast;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3F18", Offset = "0xAB3F18")]
		private float maxCgfSize;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3F64", Offset = "0xAB3F64")]
		private bool dontSizeBoxSizeX;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3FB0", Offset = "0xAB3FB0")]
		private bool dontSizeBoxSizeY;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB3FFC", Offset = "0xAB3FFC")]
		private bool dontSizeBoxSizeZ;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4048", Offset = "0xAB4048")]
		[HideInInspector]
		private Vector3 hitPoint;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB40A4", Offset = "0xAB40A4")]
		private LayerMask layerMask;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CGF cgf;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float gizmoSize;

		[Token(Token = "0x1700038C")]
		public float OffsetRaycast
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x1BF67AC", Offset = "0x1BF67AC", VA = "0x1BF67AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600195E")]
			[Address(RVA = "0x1BF67B4", Offset = "0x1BF67B4", VA = "0x1BF67B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700038D")]
		public float MaxCgfSize
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0x1BF67BC", Offset = "0x1BF67BC", VA = "0x1BF67BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001960")]
			[Address(RVA = "0x1BF67C4", Offset = "0x1BF67C4", VA = "0x1BF67C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public bool DontSizeBoxSizeX
		{
			[Token(Token = "0x6001961")]
			[Address(RVA = "0x1BF67CC", Offset = "0x1BF67CC", VA = "0x1BF67CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001962")]
			[Address(RVA = "0x1BF67D4", Offset = "0x1BF67D4", VA = "0x1BF67D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public bool DontSizeBoxSizeY
		{
			[Token(Token = "0x6001963")]
			[Address(RVA = "0x1BF67E0", Offset = "0x1BF67E0", VA = "0x1BF67E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001964")]
			[Address(RVA = "0x1BF67E8", Offset = "0x1BF67E8", VA = "0x1BF67E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public bool DontSizeBoxSizeZ
		{
			[Token(Token = "0x6001965")]
			[Address(RVA = "0x1BF67F4", Offset = "0x1BF67F4", VA = "0x1BF67F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001966")]
			[Address(RVA = "0x1BF67FC", Offset = "0x1BF67FC", VA = "0x1BF67FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000391")]
		public Vector3 HitPoint
		{
			[Token(Token = "0x6001967")]
			[Address(RVA = "0x1BF6808", Offset = "0x1BF6808", VA = "0x1BF6808")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001968")]
			[Address(RVA = "0x1BF6814", Offset = "0x1BF6814", VA = "0x1BF6814")]
			set
			{
			}
		}

		[Token(Token = "0x17000392")]
		public LayerMask _layerMask
		{
			[Token(Token = "0x6001969")]
			[Address(RVA = "0x1BF6820", Offset = "0x1BF6820", VA = "0x1BF6820")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600196A")]
			[Address(RVA = "0x1BF6828", Offset = "0x1BF6828", VA = "0x1BF6828")]
			set
			{
			}
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x1BF6830", Offset = "0x1BF6830", VA = "0x1BF6830")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x1BF6BDC", Offset = "0x1BF6BDC", VA = "0x1BF6BDC")]
		private void Start()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x1BF6C40", Offset = "0x1BF6C40", VA = "0x1BF6C40")]
		private void Update()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x1BF6DF4", Offset = "0x1BF6DF4", VA = "0x1BF6DF4")]
		public CGF_SizeByRaycast()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7F00", Offset = "0xAA7F00")]
	public class CGF_SizeByRaycast2D : MonoBehaviour
	{
		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB40F0", Offset = "0xAB40F0")]
		private float offsetRaycast;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB413C", Offset = "0xAB413C")]
		private float maxCgfSize;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4188", Offset = "0xAB4188")]
		private bool dontSizeBoxSizeX;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB41D4", Offset = "0xAB41D4")]
		private bool dontSizeBoxSizeY;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4220", Offset = "0xAB4220")]
		private Vector2 hitPoint;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB426C", Offset = "0xAB426C")]
		private LayerMask layerMask;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CGF2D cgf;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float gizmoSize;

		[Token(Token = "0x17000393")]
		public float OffsetRaycast
		{
			[Token(Token = "0x600196F")]
			[Address(RVA = "0x1BF6E3C", Offset = "0x1BF6E3C", VA = "0x1BF6E3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001970")]
			[Address(RVA = "0x1BF6E44", Offset = "0x1BF6E44", VA = "0x1BF6E44")]
			set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public float MaxCgfSize
		{
			[Token(Token = "0x6001971")]
			[Address(RVA = "0x1BF6E4C", Offset = "0x1BF6E4C", VA = "0x1BF6E4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001972")]
			[Address(RVA = "0x1BF6E54", Offset = "0x1BF6E54", VA = "0x1BF6E54")]
			set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public bool DontSizeBoxSizeX
		{
			[Token(Token = "0x6001973")]
			[Address(RVA = "0x1BF6E5C", Offset = "0x1BF6E5C", VA = "0x1BF6E5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001974")]
			[Address(RVA = "0x1BF6E64", Offset = "0x1BF6E64", VA = "0x1BF6E64")]
			set
			{
			}
		}

		[Token(Token = "0x17000396")]
		public bool DontSizeBoxSizeY
		{
			[Token(Token = "0x6001975")]
			[Address(RVA = "0x1BF6E70", Offset = "0x1BF6E70", VA = "0x1BF6E70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001976")]
			[Address(RVA = "0x1BF6E78", Offset = "0x1BF6E78", VA = "0x1BF6E78")]
			set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public Vector2 HitPoint
		{
			[Token(Token = "0x6001977")]
			[Address(RVA = "0x1BF6E84", Offset = "0x1BF6E84", VA = "0x1BF6E84")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001978")]
			[Address(RVA = "0x1BF6E8C", Offset = "0x1BF6E8C", VA = "0x1BF6E8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public LayerMask _layerMask
		{
			[Token(Token = "0x6001979")]
			[Address(RVA = "0x1BF6E94", Offset = "0x1BF6E94", VA = "0x1BF6E94")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600197A")]
			[Address(RVA = "0x1BF6E9C", Offset = "0x1BF6E9C", VA = "0x1BF6E9C")]
			set
			{
			}
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x1BF6EA4", Offset = "0x1BF6EA4", VA = "0x1BF6EA4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x1BF73BC", Offset = "0x1BF73BC", VA = "0x1BF73BC")]
		private void Start()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x1BF7420", Offset = "0x1BF7420", VA = "0x1BF7420")]
		private void Update()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1BF76B0", Offset = "0x1BF76B0", VA = "0x1BF76B0")]
		public CGF_SizeByRaycast2D()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class CGF_EnableTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB42B8", Offset = "0xAB42B8")]
		private CGF cgf;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4304", Offset = "0xAB4304")]
		private bool tripValue;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4350", Offset = "0xAB4350")]
		private float maxTripDistance;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB439C", Offset = "0xAB439C")]
		private LayerMask layerMask;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float gizmoSize;

		[Token(Token = "0x17000399")]
		public CGF Cgf
		{
			[Token(Token = "0x600197F")]
			[Address(RVA = "0x1BF2BEC", Offset = "0x1BF2BEC", VA = "0x1BF2BEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001980")]
			[Address(RVA = "0x1BF2BF4", Offset = "0x1BF2BF4", VA = "0x1BF2BF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public bool TripValue
		{
			[Token(Token = "0x6001981")]
			[Address(RVA = "0x1BF2BFC", Offset = "0x1BF2BFC", VA = "0x1BF2BFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001982")]
			[Address(RVA = "0x1BF2C04", Offset = "0x1BF2C04", VA = "0x1BF2C04")]
			set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public float MaxTripDistance
		{
			[Token(Token = "0x6001983")]
			[Address(RVA = "0x1BF2C10", Offset = "0x1BF2C10", VA = "0x1BF2C10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001984")]
			[Address(RVA = "0x1BF2C18", Offset = "0x1BF2C18", VA = "0x1BF2C18")]
			set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public LayerMask _layerMask
		{
			[Token(Token = "0x6001985")]
			[Address(RVA = "0x1BF2C20", Offset = "0x1BF2C20", VA = "0x1BF2C20")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001986")]
			[Address(RVA = "0x1BF2C28", Offset = "0x1BF2C28", VA = "0x1BF2C28")]
			set
			{
			}
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x1BF2C30", Offset = "0x1BF2C30", VA = "0x1BF2C30")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x1BF2FB4", Offset = "0x1BF2FB4", VA = "0x1BF2FB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x1BF2FD8", Offset = "0x1BF2FD8", VA = "0x1BF2FD8")]
		private void Update()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x1BF3100", Offset = "0x1BF3100", VA = "0x1BF3100")]
		public CGF_EnableTrigger()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class CGF_EnableTrigger2D : MonoBehaviour
	{
		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB43E8", Offset = "0xAB43E8")]
		private CGF2D cgf;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4434", Offset = "0xAB4434")]
		[SerializeField]
		private bool tripValue;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4480", Offset = "0xAB4480")]
		[SerializeField]
		private float maxTripDistance;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB44CC", Offset = "0xAB44CC")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float gizmoSize;

		[Token(Token = "0x1700039D")]
		public CGF2D Cgf
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0x1BF3148", Offset = "0x1BF3148", VA = "0x1BF3148")]
			get
			{
				return null;
			}
			[Token(Token = "0x600198C")]
			[Address(RVA = "0x1BF3150", Offset = "0x1BF3150", VA = "0x1BF3150")]
			set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public bool TripValue
		{
			[Token(Token = "0x600198D")]
			[Address(RVA = "0x1BF3158", Offset = "0x1BF3158", VA = "0x1BF3158")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600198E")]
			[Address(RVA = "0x1BF3160", Offset = "0x1BF3160", VA = "0x1BF3160")]
			set
			{
			}
		}

		[Token(Token = "0x1700039F")]
		public float MaxTripDistance
		{
			[Token(Token = "0x600198F")]
			[Address(RVA = "0x1BF316C", Offset = "0x1BF316C", VA = "0x1BF316C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x1BF3174", Offset = "0x1BF3174", VA = "0x1BF3174")]
			set
			{
			}
		}

		[Token(Token = "0x170003A0")]
		public LayerMask _layerMask
		{
			[Token(Token = "0x6001991")]
			[Address(RVA = "0x1BF317C", Offset = "0x1BF317C", VA = "0x1BF317C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001992")]
			[Address(RVA = "0x1BF3184", Offset = "0x1BF3184", VA = "0x1BF3184")]
			set
			{
			}
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x1BF318C", Offset = "0x1BF318C", VA = "0x1BF318C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x1BF3608", Offset = "0x1BF3608", VA = "0x1BF3608")]
		private void Start()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x1BF362C", Offset = "0x1BF362C", VA = "0x1BF362C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x1BF3828", Offset = "0x1BF3828", VA = "0x1BF3828")]
		public CGF_EnableTrigger2D()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class CGF_HoverTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4518", Offset = "0xAB4518")]
		private CGF cgf;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4564", Offset = "0xAB4564")]
		private float forcePower;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB45B0", Offset = "0xAB45B0")]
		[SerializeField]
		private float hoverDistance;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB45FC", Offset = "0xAB45FC")]
		private float maxDistance;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4648", Offset = "0xAB4648")]
		private LayerMask layerMask;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float gizmoSize;

		[Token(Token = "0x170003A1")]
		public CGF Cgf
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x1BF3870", Offset = "0x1BF3870", VA = "0x1BF3870")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001998")]
			[Address(RVA = "0x1BF3878", Offset = "0x1BF3878", VA = "0x1BF3878")]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public float ForcePower
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0x1BF3880", Offset = "0x1BF3880", VA = "0x1BF3880")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600199A")]
			[Address(RVA = "0x1BF3888", Offset = "0x1BF3888", VA = "0x1BF3888")]
			set
			{
			}
		}

		[Token(Token = "0x170003A3")]
		public float HoverDistance
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0x1BF3890", Offset = "0x1BF3890", VA = "0x1BF3890")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600199C")]
			[Address(RVA = "0x1BF3898", Offset = "0x1BF3898", VA = "0x1BF3898")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public float MaxDistance
		{
			[Token(Token = "0x600199D")]
			[Address(RVA = "0x1BF38A0", Offset = "0x1BF38A0", VA = "0x1BF38A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600199E")]
			[Address(RVA = "0x1BF38A8", Offset = "0x1BF38A8", VA = "0x1BF38A8")]
			set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public LayerMask _layerMask
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x1BF38B0", Offset = "0x1BF38B0", VA = "0x1BF38B0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x1BF38B8", Offset = "0x1BF38B8", VA = "0x1BF38B8")]
			set
			{
			}
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x1BF38C0", Offset = "0x1BF38C0", VA = "0x1BF38C0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x1BF3BBC", Offset = "0x1BF3BBC", VA = "0x1BF3BBC")]
		private void Update()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x1BF3CFC", Offset = "0x1BF3CFC", VA = "0x1BF3CFC")]
		public CGF_HoverTrigger()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class CGF_HoverTrigger2D : MonoBehaviour
	{
		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4694", Offset = "0xAB4694")]
		private CGF2D cgf;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB46E0", Offset = "0xAB46E0")]
		[SerializeField]
		private float forcePower;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB472C", Offset = "0xAB472C")]
		[SerializeField]
		private float hoverDistance;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4778", Offset = "0xAB4778")]
		[SerializeField]
		private float maxDistance;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB47C4", Offset = "0xAB47C4")]
		private LayerMask layerMask;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float gizmoSize;

		[Token(Token = "0x170003A6")]
		public CGF2D Cgf
		{
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x1BF3D48", Offset = "0x1BF3D48", VA = "0x1BF3D48")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x1BF3D50", Offset = "0x1BF3D50", VA = "0x1BF3D50")]
			set
			{
			}
		}

		[Token(Token = "0x170003A7")]
		public float ForcePower
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x1BF3D58", Offset = "0x1BF3D58", VA = "0x1BF3D58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x1BF3D60", Offset = "0x1BF3D60", VA = "0x1BF3D60")]
			set
			{
			}
		}

		[Token(Token = "0x170003A8")]
		public float HoverDistance
		{
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x1BF3D68", Offset = "0x1BF3D68", VA = "0x1BF3D68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x1BF3D70", Offset = "0x1BF3D70", VA = "0x1BF3D70")]
			set
			{
			}
		}

		[Token(Token = "0x170003A9")]
		public float MaxDistance
		{
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x1BF3D78", Offset = "0x1BF3D78", VA = "0x1BF3D78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x1BF3D80", Offset = "0x1BF3D80", VA = "0x1BF3D80")]
			set
			{
			}
		}

		[Token(Token = "0x170003AA")]
		public LayerMask _layerMask
		{
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x1BF3D88", Offset = "0x1BF3D88", VA = "0x1BF3D88")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0x1BF3D90", Offset = "0x1BF3D90", VA = "0x1BF3D90")]
			set
			{
			}
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x1BF3D98", Offset = "0x1BF3D98", VA = "0x1BF3D98")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x1BF4214", Offset = "0x1BF4214", VA = "0x1BF4214")]
		private void Update()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x1BF4464", Offset = "0x1BF4464", VA = "0x1BF4464")]
		public CGF_HoverTrigger2D()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class CGFCollection
	{
		[Token(Token = "0x20004D5")]
		public class EffectedObject
		{
			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Rigidbody rigidbody;

			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object objectHistory;

			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float gameTime;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float timeEffected;

			[Token(Token = "0x170003AC")]
			public Rigidbody _rigidbody
			{
				[Token(Token = "0x60019B9")]
				[Address(RVA = "0xCB4978", Offset = "0xCB4978", VA = "0xCB4978")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019BA")]
				[Address(RVA = "0xCB4980", Offset = "0xCB4980", VA = "0xCB4980")]
				set
				{
				}
			}

			[Token(Token = "0x170003AD")]
			public object ObjectHistory
			{
				[Token(Token = "0x60019BB")]
				[Address(RVA = "0xCB4988", Offset = "0xCB4988", VA = "0xCB4988")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019BC")]
				[Address(RVA = "0xCB4990", Offset = "0xCB4990", VA = "0xCB4990")]
				set
				{
				}
			}

			[Token(Token = "0x170003AE")]
			public float GameTime
			{
				[Token(Token = "0x60019BD")]
				[Address(RVA = "0xCB4998", Offset = "0xCB4998", VA = "0xCB4998")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60019BE")]
				[Address(RVA = "0xCB49A0", Offset = "0xCB49A0", VA = "0xCB49A0")]
				set
				{
				}
			}

			[Token(Token = "0x170003AF")]
			public float TimeEffected
			{
				[Token(Token = "0x60019BF")]
				[Address(RVA = "0xCB49A8", Offset = "0xCB49A8", VA = "0xCB49A8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60019C0")]
				[Address(RVA = "0xCB49B0", Offset = "0xCB49B0", VA = "0xCB49B0")]
				set
				{
				}
			}

			[Token(Token = "0x60019C1")]
			[Address(RVA = "0xCB49B8", Offset = "0xCB49B8", VA = "0xCB49B8")]
			public EffectedObject()
			{
			}
		}

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<EffectedObject> effectedObjects;

		[Token(Token = "0x170003AB")]
		public List<EffectedObject> EffectedObjects
		{
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0x1BEFE00", Offset = "0x1BEFE00", VA = "0x1BEFE00")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0x1BEFE08", Offset = "0x1BEFE08", VA = "0x1BEFE08")]
			set
			{
			}
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x1BEFE10", Offset = "0x1BEFE10", VA = "0x1BEFE10")]
		public CGFCollection()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x1BEFE8C", Offset = "0x1BEFE8C", VA = "0x1BEFE8C")]
		public void Add(Rigidbody rigid, float gameTime, float timeEffected)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x1BF0068", Offset = "0x1BF0068", VA = "0x1BF0068")]
		public void Sync()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x1BF01A8", Offset = "0x1BF01A8", VA = "0x1BF01A8", Slot = "4")]
		public virtual void SetEffectedObjectHistory(Rigidbody rigid, EffectedObject effectedObject)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x1BF01AC", Offset = "0x1BF01AC", VA = "0x1BF01AC", Slot = "5")]
		public virtual void UpdateEffectedObject(Rigidbody rigid)
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x1BF01B0", Offset = "0x1BF01B0", VA = "0x1BF01B0", Slot = "6")]
		public virtual void ResetEffectedObject(EffectedObject effectedObject)
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class CGFCollection2D
	{
		[Token(Token = "0x20004D7")]
		public class EffectedObject
		{
			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Rigidbody2D rigidbody;

			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object objectHistory;

			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float gameTime;

			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float timeEffected;

			[Token(Token = "0x170003B1")]
			public Rigidbody2D _rigidbody
			{
				[Token(Token = "0x60019CA")]
				[Address(RVA = "0xCB49C0", Offset = "0xCB49C0", VA = "0xCB49C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019CB")]
				[Address(RVA = "0xCB49C8", Offset = "0xCB49C8", VA = "0xCB49C8")]
				set
				{
				}
			}

			[Token(Token = "0x170003B2")]
			public object ObjectHistory
			{
				[Token(Token = "0x60019CC")]
				[Address(RVA = "0xCB49D0", Offset = "0xCB49D0", VA = "0xCB49D0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019CD")]
				[Address(RVA = "0xCB49D8", Offset = "0xCB49D8", VA = "0xCB49D8")]
				set
				{
				}
			}

			[Token(Token = "0x170003B3")]
			public float GameTime
			{
				[Token(Token = "0x60019CE")]
				[Address(RVA = "0xCB49E0", Offset = "0xCB49E0", VA = "0xCB49E0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60019CF")]
				[Address(RVA = "0xCB49E8", Offset = "0xCB49E8", VA = "0xCB49E8")]
				set
				{
				}
			}

			[Token(Token = "0x170003B4")]
			public float TimeEffected
			{
				[Token(Token = "0x60019D0")]
				[Address(RVA = "0xCB49F0", Offset = "0xCB49F0", VA = "0xCB49F0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60019D1")]
				[Address(RVA = "0xCB49F8", Offset = "0xCB49F8", VA = "0xCB49F8")]
				set
				{
				}
			}

			[Token(Token = "0x60019D2")]
			[Address(RVA = "0xCB4A00", Offset = "0xCB4A00", VA = "0xCB4A00")]
			public EffectedObject()
			{
			}
		}

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<EffectedObject> effectedObjects;

		[Token(Token = "0x170003B0")]
		public List<EffectedObject> EffectedObjects
		{
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x1BF01B4", Offset = "0x1BF01B4", VA = "0x1BF01B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x1BF01BC", Offset = "0x1BF01BC", VA = "0x1BF01BC")]
			set
			{
			}
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x1BF01C4", Offset = "0x1BF01C4", VA = "0x1BF01C4")]
		public CGFCollection2D()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x1BF0240", Offset = "0x1BF0240", VA = "0x1BF0240")]
		public void Add(Rigidbody2D rigid, float gameTime, float timeEffected)
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x1BF041C", Offset = "0x1BF041C", VA = "0x1BF041C")]
		public void Sync()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x1BF055C", Offset = "0x1BF055C", VA = "0x1BF055C", Slot = "4")]
		public virtual void SetEffectedObjectHistory(Rigidbody2D rigid, EffectedObject effectedObject)
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x1BF0560", Offset = "0x1BF0560", VA = "0x1BF0560", Slot = "5")]
		public virtual void UpdateEffectedObject(Rigidbody2D rigid)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x1BF0564", Offset = "0x1BF0564", VA = "0x1BF0564", Slot = "6")]
		public virtual void ResetEffectedObject(EffectedObject effectedObject)
		{
		}
	}
	[Token(Token = "0x20004D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7F60", Offset = "0xAA7F60")]
	public class CGF_AlignToForce : MonoBehaviour
	{
		[Token(Token = "0x20004D9")]
		public delegate void ApplyAlignToForceEvent(CGF cgf, Rigidbody rigid, Collider coll, Vector3 transPos);

		[Token(Token = "0x20004DA")]
		public enum AlignDirection
		{
			[Token(Token = "0x4001EA9")]
			Up,
			[Token(Token = "0x4001EAA")]
			Down,
			[Token(Token = "0x4001EAB")]
			Left,
			[Token(Token = "0x4001EAC")]
			Right,
			[Token(Token = "0x4001EAD")]
			Forward,
			[Token(Token = "0x4001EAE")]
			Backward
		}

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4820", Offset = "0xAB4820")]
		private bool enable;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB486C", Offset = "0xAB486C")]
		private AlignDirection alignDirection;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB48B8", Offset = "0xAB48B8")]
		private float rotateSpeed;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4904", Offset = "0xAB4904")]
		[SerializeField]
		private float maxAngularVelocity;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4950", Offset = "0xAB4950")]
		private float angularVelocityDamping;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB499C", Offset = "0xAB499C")]
		private bool useClosestColliderHeightOffset;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB49E8", Offset = "0xAB49E8")]
		[SerializeField]
		private CGF.FilterProperties filterProperties;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CGF cgf;

		[Token(Token = "0x170003B5")]
		public bool Enable
		{
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0x1BF06E0", Offset = "0x1BF06E0", VA = "0x1BF06E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x1BF06E8", Offset = "0x1BF06E8", VA = "0x1BF06E8")]
			set
			{
			}
		}

		[Token(Token = "0x170003B6")]
		public AlignDirection _alignDirection
		{
			[Token(Token = "0x60019D7")]
			[Address(RVA = "0x1BF06F4", Offset = "0x1BF06F4", VA = "0x1BF06F4")]
			get
			{
				return default(AlignDirection);
			}
			[Token(Token = "0x60019D8")]
			[Address(RVA = "0x1BF06FC", Offset = "0x1BF06FC", VA = "0x1BF06FC")]
			set
			{
			}
		}

		[Token(Token = "0x170003B7")]
		public float RotateSpeed
		{
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x1BF0704", Offset = "0x1BF0704", VA = "0x1BF0704")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0x1BF070C", Offset = "0x1BF070C", VA = "0x1BF070C")]
			set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		public float MaxAngularVelocity
		{
			[Token(Token = "0x60019DB")]
			[Address(RVA = "0x1BF0714", Offset = "0x1BF0714", VA = "0x1BF0714")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019DC")]
			[Address(RVA = "0x1BF071C", Offset = "0x1BF071C", VA = "0x1BF071C")]
			set
			{
			}
		}

		[Token(Token = "0x170003B9")]
		public float AngularVelocityDamping
		{
			[Token(Token = "0x60019DD")]
			[Address(RVA = "0x1BF0724", Offset = "0x1BF0724", VA = "0x1BF0724")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019DE")]
			[Address(RVA = "0x1BF072C", Offset = "0x1BF072C", VA = "0x1BF072C")]
			set
			{
			}
		}

		[Token(Token = "0x170003BA")]
		public bool UseClosestColliderHeightOffset
		{
			[Token(Token = "0x60019DF")]
			[Address(RVA = "0x1BF0734", Offset = "0x1BF0734", VA = "0x1BF0734")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0x1BF073C", Offset = "0x1BF073C", VA = "0x1BF073C")]
			set
			{
			}
		}

		[Token(Token = "0x170003BB")]
		public CGF.FilterProperties _filterProperties
		{
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0x1BF0748", Offset = "0x1BF0748", VA = "0x1BF0748")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0x1BF0750", Offset = "0x1BF0750", VA = "0x1BF0750")]
			set
			{
			}
		}

		[Token(Token = "0x14000015")]
		public static event ApplyAlignToForceEvent OnApplyAlignToForceEvent
		{
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0x1BF0568", Offset = "0x1BF0568", VA = "0x1BF0568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFD94", Offset = "0xABFD94")]
			add
			{
			}
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0x1BF0624", Offset = "0x1BF0624", VA = "0x1BF0624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFDA4", Offset = "0xABFDA4")]
			remove
			{
			}
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x1BF0758", Offset = "0x1BF0758", VA = "0x1BF0758")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x1BF0828", Offset = "0x1BF0828", VA = "0x1BF0828")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x1BF08D0", Offset = "0x1BF08D0", VA = "0x1BF08D0")]
		private void CGF_OnApplyCGFEvent(CGF cgf, Rigidbody rigid, Collider coll)
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x1BF0984", Offset = "0x1BF0984", VA = "0x1BF0984")]
		private void ApplyAlignment(CGF cgf, Rigidbody rigid, Collider coll)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x1BF0EC0", Offset = "0x1BF0EC0", VA = "0x1BF0EC0")]
		private Vector3 GetRelativeAngles(Vector3 angles)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x1BF0EF8", Offset = "0x1BF0EF8", VA = "0x1BF0EF8")]
		public CGF_AlignToForce()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA7FC0", Offset = "0xAA7FC0")]
	public class CGF_AlignToForce2D : MonoBehaviour
	{
		[Token(Token = "0x20004DC")]
		public delegate void ApplyAlignToForceEvent(CGF2D cgf, Rigidbody2D rigid, Collider2D coll, Vector3 transPos);

		[Token(Token = "0x20004DD")]
		public enum AlignDirection
		{
			[Token(Token = "0x4001EB8")]
			Up,
			[Token(Token = "0x4001EB9")]
			Down,
			[Token(Token = "0x4001EBA")]
			Left,
			[Token(Token = "0x4001EBB")]
			Right
		}

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4A44", Offset = "0xAB4A44")]
		private bool enable;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4A90", Offset = "0xAB4A90")]
		[SerializeField]
		private AlignDirection alignDirection;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4ADC", Offset = "0xAB4ADC")]
		[SerializeField]
		private float rotateSpeed;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4B28", Offset = "0xAB4B28")]
		private float angularVelocityDamping;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4B74", Offset = "0xAB4B74")]
		[SerializeField]
		private bool useClosestColliderHeightOffset;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4BC0", Offset = "0xAB4BC0")]
		private CGF2D.FilterProperties filterProperties;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CGF2D cgf;

		[Token(Token = "0x170003BC")]
		public bool Enable
		{
			[Token(Token = "0x60019EF")]
			[Address(RVA = "0x1BF1098", Offset = "0x1BF1098", VA = "0x1BF1098")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x1BF10A0", Offset = "0x1BF10A0", VA = "0x1BF10A0")]
			set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		public AlignDirection _alignDirection
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x1BF10AC", Offset = "0x1BF10AC", VA = "0x1BF10AC")]
			get
			{
				return default(AlignDirection);
			}
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x1BF10B4", Offset = "0x1BF10B4", VA = "0x1BF10B4")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public float RotateSpeed
		{
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x1BF10BC", Offset = "0x1BF10BC", VA = "0x1BF10BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x1BF10C4", Offset = "0x1BF10C4", VA = "0x1BF10C4")]
			set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public float AngularVelocityDamping
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x1BF10CC", Offset = "0x1BF10CC", VA = "0x1BF10CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0x1BF10D4", Offset = "0x1BF10D4", VA = "0x1BF10D4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		public bool UseClosestColliderHeightOffset
		{
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0x1BF10DC", Offset = "0x1BF10DC", VA = "0x1BF10DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x1BF10E4", Offset = "0x1BF10E4", VA = "0x1BF10E4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public CGF2D.FilterProperties _filterProperties
		{
			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x1BF10F0", Offset = "0x1BF10F0", VA = "0x1BF10F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0x1BF10F8", Offset = "0x1BF10F8", VA = "0x1BF10F8")]
			set
			{
			}
		}

		[Token(Token = "0x14000016")]
		public static event ApplyAlignToForceEvent OnApplyAlignToForceEvent
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x1BF0F20", Offset = "0x1BF0F20", VA = "0x1BF0F20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFDB4", Offset = "0xABFDB4")]
			add
			{
			}
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0x1BF0FDC", Offset = "0x1BF0FDC", VA = "0x1BF0FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFDC4", Offset = "0xABFDC4")]
			remove
			{
			}
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x1BF1100", Offset = "0x1BF1100", VA = "0x1BF1100")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x1BF11D0", Offset = "0x1BF11D0", VA = "0x1BF11D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x1BF1278", Offset = "0x1BF1278", VA = "0x1BF1278")]
		private void CGF_OnApplyCGFEvent(CGF2D cgf, Rigidbody2D rigid, Collider2D coll)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x1BF132C", Offset = "0x1BF132C", VA = "0x1BF132C")]
		private void ApplyAlignment(CGF2D cgf, Rigidbody2D rigid, Collider2D coll)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x1BF16D8", Offset = "0x1BF16D8", VA = "0x1BF16D8")]
		public float LookAtAngle(Rigidbody2D rigid2D, Vector3 alignDirection, Vector3 target)
		{
			return default(float);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x1BF1768", Offset = "0x1BF1768", VA = "0x1BF1768")]
		public CGF_AlignToForce2D()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8020", Offset = "0xAA8020")]
	public class CGF_NoGravity : MonoBehaviour
	{
		[Token(Token = "0x20004DF")]
		public class OnGravity_CGFCollection : CGFCollection
		{
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0xCB5A50", Offset = "0xCB5A50", VA = "0xCB5A50", Slot = "5")]
			public override void UpdateEffectedObject(Rigidbody rigid)
			{
			}

			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xCB5A88", Offset = "0xCB5A88", VA = "0xCB5A88", Slot = "6")]
			public override void ResetEffectedObject(EffectedObject effectedObject)
			{
			}

			[Token(Token = "0x6001A14")]
			[Address(RVA = "0xCB5AC4", Offset = "0xCB5AC4", VA = "0xCB5AC4")]
			public OnGravity_CGFCollection()
			{
			}
		}

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4C0C", Offset = "0xAB4C0C")]
		private bool enable;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4C58", Offset = "0xAB4C58")]
		private float timeEffected;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4CA4", Offset = "0xAB4CA4")]
		[SerializeField]
		private CGF.FilterProperties filterProperties;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnGravity_CGFCollection cgfCollection;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CGF cgf;

		[Token(Token = "0x170003C2")]
		public bool Enable
		{
			[Token(Token = "0x6001A05")]
			[Address(RVA = "0x1BF5780", Offset = "0x1BF5780", VA = "0x1BF5780")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A06")]
			[Address(RVA = "0x1BF5788", Offset = "0x1BF5788", VA = "0x1BF5788")]
			set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		public float TimeEffected
		{
			[Token(Token = "0x6001A07")]
			[Address(RVA = "0x1BF5794", Offset = "0x1BF5794", VA = "0x1BF5794")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0x1BF579C", Offset = "0x1BF579C", VA = "0x1BF579C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C4")]
		public CGF.FilterProperties _filterProperties
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0x1BF57A4", Offset = "0x1BF57A4", VA = "0x1BF57A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0x1BF57AC", Offset = "0x1BF57AC", VA = "0x1BF57AC")]
			set
			{
			}
		}

		[Token(Token = "0x170003C5")]
		public OnGravity_CGFCollection _cgfCollection
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x1BF57B4", Offset = "0x1BF57B4", VA = "0x1BF57B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0x1BF57BC", Offset = "0x1BF57BC", VA = "0x1BF57BC")]
			set
			{
			}
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x1BF57C4", Offset = "0x1BF57C4", VA = "0x1BF57C4")]
		public CGF_NoGravity()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x1BF583C", Offset = "0x1BF583C", VA = "0x1BF583C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x1BF590C", Offset = "0x1BF590C", VA = "0x1BF590C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x1BF59B4", Offset = "0x1BF59B4", VA = "0x1BF59B4")]
		private void CGF_OnApplyCGFEvent(CGF cgf, Rigidbody rigid, Collider coll)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x1BF5AA4", Offset = "0x1BF5AA4", VA = "0x1BF5AA4")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8080", Offset = "0xAA8080")]
	public class CGF_NoGravity2D : MonoBehaviour
	{
		[Token(Token = "0x20004E1")]
		public class OnGravity_CGFCollection : CGFCollection2D
		{
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0xCB5ACC", Offset = "0xCB5ACC", VA = "0xCB5ACC", Slot = "5")]
			public override void UpdateEffectedObject(Rigidbody2D rigid)
			{
			}

			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xCB5B04", Offset = "0xCB5B04", VA = "0xCB5B04", Slot = "6")]
			public override void ResetEffectedObject(EffectedObject effectedObject)
			{
			}

			[Token(Token = "0x6001A24")]
			[Address(RVA = "0xCB5B40", Offset = "0xCB5B40", VA = "0xCB5B40")]
			public OnGravity_CGFCollection()
			{
			}
		}

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4CF0", Offset = "0xAB4CF0")]
		private bool enable;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4D3C", Offset = "0xAB4D3C")]
		private float timeEffected;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4D88", Offset = "0xAB4D88")]
		private CGF2D.FilterProperties filterProperties;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnGravity_CGFCollection cgfCollection;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CGF2D cgf;

		[Token(Token = "0x170003C6")]
		public bool Enable
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0x1BF5ABC", Offset = "0x1BF5ABC", VA = "0x1BF5ABC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0x1BF5AC4", Offset = "0x1BF5AC4", VA = "0x1BF5AC4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		public float TimeEffected
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0x1BF5AD0", Offset = "0x1BF5AD0", VA = "0x1BF5AD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0x1BF5AD8", Offset = "0x1BF5AD8", VA = "0x1BF5AD8")]
			set
			{
			}
		}

		[Token(Token = "0x170003C8")]
		public CGF2D.FilterProperties _filterProperties
		{
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0x1BF5AE0", Offset = "0x1BF5AE0", VA = "0x1BF5AE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0x1BF5AE8", Offset = "0x1BF5AE8", VA = "0x1BF5AE8")]
			set
			{
			}
		}

		[Token(Token = "0x170003C9")]
		public OnGravity_CGFCollection _cgfCollection
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0x1BF5AF0", Offset = "0x1BF5AF0", VA = "0x1BF5AF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0x1BF5AF8", Offset = "0x1BF5AF8", VA = "0x1BF5AF8")]
			set
			{
			}
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x1BF5B00", Offset = "0x1BF5B00", VA = "0x1BF5B00")]
		public CGF_NoGravity2D()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x1BF5B78", Offset = "0x1BF5B78", VA = "0x1BF5B78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x1BF5C48", Offset = "0x1BF5C48", VA = "0x1BF5C48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x1BF5CF0", Offset = "0x1BF5CF0", VA = "0x1BF5CF0")]
		private void CGF_OnApplyCGFEvent(CGF2D cgf, Rigidbody2D rigid, Collider2D coll)
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x1BF5DE0", Offset = "0x1BF5DE0", VA = "0x1BF5DE0")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class Gun : MonoBehaviour
	{
		[Token(Token = "0x20004E3")]
		public enum GunType
		{
			[Token(Token = "0x4001ED2")]
			GravityGunForce,
			[Token(Token = "0x4001ED3")]
			LauncherForce,
			[Token(Token = "0x4001ED4")]
			GravityGunTorque,
			[Token(Token = "0x4001ED5")]
			LauncherTorque
		}

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4DD4", Offset = "0xAB4DD4")]
		[SerializeField]
		private float cgfForcePower;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4E20", Offset = "0xAB4E20")]
		private GameObject cgfGameObject;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4E6C", Offset = "0xAB4E6C")]
		private GameObject gunLazerObject;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4EB8", Offset = "0xAB4EB8")]
		private Spawn spawnPosBullet;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4F04", Offset = "0xAB4F04")]
		private Spawn spawnNegBullet;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4F50", Offset = "0xAB4F50")]
		[SerializeField]
		private Spawn spawnPosBulletTor;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4F9C", Offset = "0xAB4F9C")]
		[SerializeField]
		private Spawn spawnNegBulletTor;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB4FE8", Offset = "0xAB4FE8")]
		private GunType gunType;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator animator;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CGF_SizeByRaycast sizeByRaycast;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject gunLazer;

		[Token(Token = "0x170003CA")]
		public float CgfForcePower
		{
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0x24D9974", Offset = "0x24D9974", VA = "0x24D9974")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0x24D997C", Offset = "0x24D997C", VA = "0x24D997C")]
			set
			{
			}
		}

		[Token(Token = "0x170003CB")]
		public GameObject CgfGameObject
		{
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x24D9984", Offset = "0x24D9984", VA = "0x24D9984")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x24D998C", Offset = "0x24D998C", VA = "0x24D998C")]
			set
			{
			}
		}

		[Token(Token = "0x170003CC")]
		public GameObject GunLazerObject
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x24D9994", Offset = "0x24D9994", VA = "0x24D9994")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x24D999C", Offset = "0x24D999C", VA = "0x24D999C")]
			set
			{
			}
		}

		[Token(Token = "0x170003CD")]
		public Spawn SpawnPosBullet
		{
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0x24D99A4", Offset = "0x24D99A4", VA = "0x24D99A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0x24D99AC", Offset = "0x24D99AC", VA = "0x24D99AC")]
			set
			{
			}
		}

		[Token(Token = "0x170003CE")]
		public Spawn SpawnNegBullet
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x24D99B4", Offset = "0x24D99B4", VA = "0x24D99B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x24D99BC", Offset = "0x24D99BC", VA = "0x24D99BC")]
			set
			{
			}
		}

		[Token(Token = "0x170003CF")]
		public Spawn SpawnPosBulletTor
		{
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x24D99C4", Offset = "0x24D99C4", VA = "0x24D99C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x24D99CC", Offset = "0x24D99CC", VA = "0x24D99CC")]
			set
			{
			}
		}

		[Token(Token = "0x170003D0")]
		public Spawn SpawnNegBulletTor
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x24D99D4", Offset = "0x24D99D4", VA = "0x24D99D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0x24D99DC", Offset = "0x24D99DC", VA = "0x24D99DC")]
			set
			{
			}
		}

		[Token(Token = "0x170003D1")]
		public GunType _gunType
		{
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0x24D99E4", Offset = "0x24D99E4", VA = "0x24D99E4")]
			get
			{
				return default(GunType);
			}
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x24D99EC", Offset = "0x24D99EC", VA = "0x24D99EC")]
			set
			{
			}
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x24D99F4", Offset = "0x24D99F4", VA = "0x24D99F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x24D9ACC", Offset = "0x24D9ACC", VA = "0x24D9ACC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x24D9FB4", Offset = "0x24D9FB4", VA = "0x24D9FB4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x24D9AD0", Offset = "0x24D9AD0", VA = "0x24D9AD0")]
		private void SyncGunSelection()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x24D9FFC", Offset = "0x24D9FFC", VA = "0x24D9FFC")]
		public Gun()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class MouseTransform : MonoBehaviour
	{
		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x170003D2")]
		public LayerMask _layerMask
		{
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0xBF0774", Offset = "0xBF0774", VA = "0xBF0774")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xBF077C", Offset = "0xBF077C", VA = "0xBF077C")]
			set
			{
			}
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xBF0784", Offset = "0xBF0784", VA = "0xBF0784")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xBF0788", Offset = "0xBF0788", VA = "0xBF0788")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xBF0860", Offset = "0xBF0860", VA = "0xBF0860")]
		public MouseTransform()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class Rocket : MonoBehaviour
	{
		[Token(Token = "0x20004E6")]
		public enum RocketState
		{
			[Token(Token = "0x4001EE1")]
			None,
			[Token(Token = "0x4001EE2")]
			LockOn
		}

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5044", Offset = "0xAB5044")]
		[SerializeField]
		private RocketState rocketState;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5090", Offset = "0xAB5090")]
		private float explodeDistance;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB50DC", Offset = "0xAB50DC")]
		private Transform target;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5128", Offset = "0xAB5128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB5128", Offset = "0xAB5128")]
		private CGF cgfThrust;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5198", Offset = "0xAB5198")]
		[SerializeField]
		private GameObject rocketExplosion;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LockOnTo lockOnTo;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody rocketRigidbody;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject explosion;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Timer timer;

		[Token(Token = "0x170003D3")]
		public RocketState _rocketState
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xE756A8", Offset = "0xE756A8", VA = "0xE756A8")]
			get
			{
				return default(RocketState);
			}
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xE756B0", Offset = "0xE756B0", VA = "0xE756B0")]
			set
			{
			}
		}

		[Token(Token = "0x170003D4")]
		public float ExplodeDistance
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xE756B8", Offset = "0xE756B8", VA = "0xE756B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A42")]
			[Address(RVA = "0xE756C0", Offset = "0xE756C0", VA = "0xE756C0")]
			set
			{
			}
		}

		[Token(Token = "0x170003D5")]
		public Transform Target
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xE756C8", Offset = "0xE756C8", VA = "0xE756C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0xE756D0", Offset = "0xE756D0", VA = "0xE756D0")]
			set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		public CGF CgfThrust
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0xE756D8", Offset = "0xE756D8", VA = "0xE756D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0xE756E0", Offset = "0xE756E0", VA = "0xE756E0")]
			set
			{
			}
		}

		[Token(Token = "0x170003D7")]
		public GameObject RocketExplosion
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0xE756E8", Offset = "0xE756E8", VA = "0xE756E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0xE756F0", Offset = "0xE756F0", VA = "0xE756F0")]
			set
			{
			}
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xE756F8", Offset = "0xE756F8", VA = "0xE756F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xE75804", Offset = "0xE75804", VA = "0xE75804")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xE75900", Offset = "0xE75900", VA = "0xE75900")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xE759DC", Offset = "0xE759DC", VA = "0xE759DC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xE75A28", Offset = "0xE75A28", VA = "0xE75A28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xE75808", Offset = "0xE75808", VA = "0xE75808")]
		private void ResetRocket()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xE75B84", Offset = "0xE75B84", VA = "0xE75B84")]
		public void Fire()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xE75B90", Offset = "0xE75B90", VA = "0xE75B90")]
		public Rocket()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class RocketExplosion : MonoBehaviour
	{
		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CGF cgf;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Timer timer;

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xE75BA0", Offset = "0xE75BA0", VA = "0xE75BA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xE75C18", Offset = "0xE75C18", VA = "0xE75C18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xE75DB4", Offset = "0xE75DB4", VA = "0xE75DB4")]
		public RocketExplosion()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class SceneSettings : MonoBehaviour
	{
		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SceneSettings _instance;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB51E4", Offset = "0xAB51E4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB51E4", Offset = "0xAB51E4")]
		private bool toggleMainMenu;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5254", Offset = "0xAB5254")]
		[SerializeField]
		private bool lockMouse;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB52A0", Offset = "0xAB52A0")]
		[SerializeField]
		private bool showMouseOnlock;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB52EC", Offset = "0xAB52EC")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB52EC", Offset = "0xAB52EC")]
		private GameObject guiCanvas;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB535C", Offset = "0xAB535C")]
		private Text helpUIText;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB53A8", Offset = "0xAB53A8")]
		private GameObject panel_MainMenu;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB53F4", Offset = "0xAB53F4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB53F4", Offset = "0xAB53F4")]
		private Gun fps_GunScript;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5464", Offset = "0xAB5464")]
		[SerializeField]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool toggleCGF;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool toggleGUI;

		[Token(Token = "0x170003D8")]
		public static SceneSettings Instance
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xE75CD4", Offset = "0xE75CD4", VA = "0xE75CD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D9")]
		public bool ToggleMainMenu
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xE7E494", Offset = "0xE7E494", VA = "0xE7E494")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0xE7E49C", Offset = "0xE7E49C", VA = "0xE7E49C")]
			set
			{
			}
		}

		[Token(Token = "0x170003DA")]
		public bool LockMouse
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xE7E4A8", Offset = "0xE7E4A8", VA = "0xE7E4A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xE7E4B0", Offset = "0xE7E4B0", VA = "0xE7E4B0")]
			set
			{
			}
		}

		[Token(Token = "0x170003DB")]
		public bool ShowMouseOnlock
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xE7E4BC", Offset = "0xE7E4BC", VA = "0xE7E4BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0xE7E4C4", Offset = "0xE7E4C4", VA = "0xE7E4C4")]
			set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		public GameObject GUICanvas
		{
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0xE7E4D0", Offset = "0xE7E4D0", VA = "0xE7E4D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0xE7E4D8", Offset = "0xE7E4D8", VA = "0xE7E4D8")]
			set
			{
			}
		}

		[Token(Token = "0x170003DD")]
		public Text HelpUIText
		{
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0xE7E4E0", Offset = "0xE7E4E0", VA = "0xE7E4E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0xE7E4E8", Offset = "0xE7E4E8", VA = "0xE7E4E8")]
			set
			{
			}
		}

		[Token(Token = "0x170003DE")]
		public GameObject Panel_MainMenu
		{
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0xE7E4F0", Offset = "0xE7E4F0", VA = "0xE7E4F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0xE7E4F8", Offset = "0xE7E4F8", VA = "0xE7E4F8")]
			set
			{
			}
		}

		[Token(Token = "0x170003DF")]
		public Gun Fps_GunScript
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xE7E500", Offset = "0xE7E500", VA = "0xE7E500")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xE7E508", Offset = "0xE7E508", VA = "0xE7E508")]
			set
			{
			}
		}

		[Token(Token = "0x170003E0")]
		public FirstPersonController FirstPersonController
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xE7E510", Offset = "0xE7E510", VA = "0xE7E510")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0xE7E518", Offset = "0xE7E518", VA = "0xE7E518")]
			set
			{
			}
		}

		[Token(Token = "0x170003E1")]
		public bool ToggleCGF
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0xE7E520", Offset = "0xE7E520", VA = "0xE7E520")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0xE7E528", Offset = "0xE7E528", VA = "0xE7E528")]
			set
			{
			}
		}

		[Token(Token = "0x170003E2")]
		public bool ToggleGUI
		{
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0xE7E534", Offset = "0xE7E534", VA = "0xE7E534")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0xE7E53C", Offset = "0xE7E53C", VA = "0xE7E53C")]
			set
			{
			}
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xE7E548", Offset = "0xE7E548", VA = "0xE7E548")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xE7E7EC", Offset = "0xE7E7EC", VA = "0xE7E7EC")]
		public void ToggleCGFLines()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xE7E944", Offset = "0xE7E944", VA = "0xE7E944")]
		public void ToggleGUILayout()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xE7E978", Offset = "0xE7E978", VA = "0xE7E978")]
		public void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xE7E9DC", Offset = "0xE7E9DC", VA = "0xE7E9DC")]
		public SceneSettings()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class UI_CGF_Toggle_Text : MonoBehaviour
	{
		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text text;

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x12B8A58", Offset = "0x12B8A58", VA = "0x12B8A58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x12B8B14", Offset = "0x12B8B14", VA = "0x12B8B14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x12B8C40", Offset = "0x12B8C40", VA = "0x12B8C40")]
		public UI_CGF_Toggle_Text()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class UI_GunIcon : MonoBehaviour
	{
		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB54B0", Offset = "0xAB54B0")]
		[SerializeField]
		private Gun gun;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB54FC", Offset = "0xAB54FC")]
		private KeyCode keyCodeButton;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5548", Offset = "0xAB5548")]
		private Gun.GunType gunType;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5594", Offset = "0xAB5594")]
		private Image icon;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB55E0", Offset = "0xAB55E0")]
		[SerializeField]
		private Text text;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color defaultColor;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color selectColor;

		[Token(Token = "0x170003E3")]
		public Gun _gun
		{
			[Token(Token = "0x6001A71")]
			[Address(RVA = "0x12B8C48", Offset = "0x12B8C48", VA = "0x12B8C48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A72")]
			[Address(RVA = "0x12B8C50", Offset = "0x12B8C50", VA = "0x12B8C50")]
			set
			{
			}
		}

		[Token(Token = "0x170003E4")]
		public KeyCode KeyCodeButton
		{
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0x12B8C58", Offset = "0x12B8C58", VA = "0x12B8C58")]
			get
			{
				return default(KeyCode);
			}
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0x12B8C60", Offset = "0x12B8C60", VA = "0x12B8C60")]
			set
			{
			}
		}

		[Token(Token = "0x170003E5")]
		public Gun.GunType _gunType
		{
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0x12B8C68", Offset = "0x12B8C68", VA = "0x12B8C68")]
			get
			{
				return default(Gun.GunType);
			}
			[Token(Token = "0x6001A76")]
			[Address(RVA = "0x12B8C70", Offset = "0x12B8C70", VA = "0x12B8C70")]
			set
			{
			}
		}

		[Token(Token = "0x170003E6")]
		public Image Icon
		{
			[Token(Token = "0x6001A77")]
			[Address(RVA = "0x12B8C78", Offset = "0x12B8C78", VA = "0x12B8C78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A78")]
			[Address(RVA = "0x12B8C80", Offset = "0x12B8C80", VA = "0x12B8C80")]
			set
			{
			}
		}

		[Token(Token = "0x170003E7")]
		public Text Text
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0x12B8C88", Offset = "0x12B8C88", VA = "0x12B8C88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x12B8C90", Offset = "0x12B8C90", VA = "0x12B8C90")]
			set
			{
			}
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x12B8C98", Offset = "0x12B8C98", VA = "0x12B8C98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x12B8D60", Offset = "0x12B8D60", VA = "0x12B8D60")]
		public UI_GunIcon()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class UI_Slider_Text_Bind : MonoBehaviour
	{
		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB562C", Offset = "0xAB562C")]
		private Slider slider;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text textLabel;

		[Token(Token = "0x170003E8")]
		public Slider Slider
		{
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x12B8DA4", Offset = "0x12B8DA4", VA = "0x12B8DA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x12B8DAC", Offset = "0x12B8DAC", VA = "0x12B8DAC")]
			set
			{
			}
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x12B8DB4", Offset = "0x12B8DB4", VA = "0x12B8DB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x12B8E08", Offset = "0x12B8E08", VA = "0x12B8E08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x12B8EFC", Offset = "0x12B8EFC", VA = "0x12B8EFC")]
		public UI_Slider_Text_Bind()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class Follow : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004ED")]
		public class VectorToggle
		{
			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private bool x;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[SerializeField]
			private bool y;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			[SerializeField]
			private bool z;

			[Token(Token = "0x170003FF")]
			public bool X
			{
				[Token(Token = "0x6001ABA")]
				[Address(RVA = "0xCBB2AC", Offset = "0xCBB2AC", VA = "0xCBB2AC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001ABB")]
				[Address(RVA = "0xCBB2B4", Offset = "0xCBB2B4", VA = "0xCBB2B4")]
				set
				{
				}
			}

			[Token(Token = "0x17000400")]
			public bool Y
			{
				[Token(Token = "0x6001ABC")]
				[Address(RVA = "0xCBB2C0", Offset = "0xCBB2C0", VA = "0xCBB2C0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001ABD")]
				[Address(RVA = "0xCBB2C8", Offset = "0xCBB2C8", VA = "0xCBB2C8")]
				set
				{
				}
			}

			[Token(Token = "0x17000401")]
			public bool Z
			{
				[Token(Token = "0x6001ABE")]
				[Address(RVA = "0xCBB2D4", Offset = "0xCBB2D4", VA = "0xCBB2D4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001ABF")]
				[Address(RVA = "0xCBB2DC", Offset = "0xCBB2DC", VA = "0xCBB2DC")]
				set
				{
				}
			}

			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0xCBB2E8", Offset = "0xCBB2E8", VA = "0xCBB2E8")]
			public VectorToggle()
			{
			}
		}

		[Token(Token = "0x20004EE")]
		public enum TranslateType
		{
			[Token(Token = "0x4001F15")]
			Move,
			[Token(Token = "0x4001F16")]
			Rotate,
			[Token(Token = "0x4001F17")]
			Both
		}

		[Token(Token = "0x20004EF")]
		public enum TargetType
		{
			[Token(Token = "0x4001F19")]
			Transform,
			[Token(Token = "0x4001F1A")]
			Vector,
			[Token(Token = "0x4001F1B")]
			MainCamera
		}

		[Token(Token = "0x20004F0")]
		public enum UpdateType
		{
			[Token(Token = "0x4001F1D")]
			Transform,
			[Token(Token = "0x4001F1E")]
			Rigidbody
		}

		[Token(Token = "0x20004F1")]
		public enum UpdateOn
		{
			[Token(Token = "0x4001F20")]
			Update,
			[Token(Token = "0x4001F21")]
			FixedUpdate
		}

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5678", Offset = "0xAB5678")]
		private bool enable;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB56C4", Offset = "0xAB56C4")]
		[SerializeField]
		private bool interpolation;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5710", Offset = "0xAB5710")]
		private TranslateType translateType;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB575C", Offset = "0xAB575C")]
		private TargetType targetType;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB57A8", Offset = "0xAB57A8")]
		private Transform targetTransform;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB57F4", Offset = "0xAB57F4")]
		private Vector3 targetVector;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5840", Offset = "0xAB5840")]
		private UpdateType updateType;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB588C", Offset = "0xAB588C")]
		private bool disableVelocity;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB58D8", Offset = "0xAB58D8")]
		[SerializeField]
		private bool disableAngularVelocity;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5924", Offset = "0xAB5924")]
		private UpdateOn updateOn;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5970", Offset = "0xAB5970")]
		private float marginDistance;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB59BC", Offset = "0xAB59BC")]
		[SerializeField]
		private bool useLocalOffset;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5A08", Offset = "0xAB5A08")]
		private Vector3 positionOffset;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5A54", Offset = "0xAB5A54")]
		private bool upVectorAlignment;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5AA0", Offset = "0xAB5AA0")]
		[SerializeField]
		private bool usePositionOffsetWithRotate;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5AEC", Offset = "0xAB5AEC")]
		private Vector3 rotateOffset;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5B38", Offset = "0xAB5B38")]
		private VectorToggle lockPosition;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5B84", Offset = "0xAB5B84")]
		private VectorToggle lockRotation;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5BD0", Offset = "0xAB5BD0")]
		private bool scaleByDistance;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5C1C", Offset = "0xAB5C1C")]
		private float scaleFactor;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5C68", Offset = "0xAB5C68")]
		private float moveSpeed;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5CB4", Offset = "0xAB5CB4")]
		private float rotateSpeed;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Rigidbody rigid;

		[Token(Token = "0x170003E9")]
		public bool Enable
		{
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0x13C465C", Offset = "0x13C465C", VA = "0x13C465C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0x13C4664", Offset = "0x13C4664", VA = "0x13C4664")]
			set
			{
			}
		}

		[Token(Token = "0x170003EA")]
		public bool Interpolation
		{
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x13C4670", Offset = "0x13C4670", VA = "0x13C4670")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0x13C4678", Offset = "0x13C4678", VA = "0x13C4678")]
			set
			{
			}
		}

		[Token(Token = "0x170003EB")]
		public TranslateType _translateType
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0x13C4684", Offset = "0x13C4684", VA = "0x13C4684")]
			get
			{
				return default(TranslateType);
			}
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0x13C468C", Offset = "0x13C468C", VA = "0x13C468C")]
			set
			{
			}
		}

		[Token(Token = "0x170003EC")]
		public TargetType _targetType
		{
			[Token(Token = "0x6001A88")]
			[Address(RVA = "0x13C4694", Offset = "0x13C4694", VA = "0x13C4694")]
			get
			{
				return default(TargetType);
			}
			[Token(Token = "0x6001A89")]
			[Address(RVA = "0x13C469C", Offset = "0x13C469C", VA = "0x13C469C")]
			set
			{
			}
		}

		[Token(Token = "0x170003ED")]
		public Transform TargetTransform
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0x13C46A4", Offset = "0x13C46A4", VA = "0x13C46A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0x13C46AC", Offset = "0x13C46AC", VA = "0x13C46AC")]
			set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		public Vector3 TargetVector
		{
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0x13C46B4", Offset = "0x13C46B4", VA = "0x13C46B4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0x13C46C0", Offset = "0x13C46C0", VA = "0x13C46C0")]
			set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public UpdateType _updateType
		{
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0x13C46CC", Offset = "0x13C46CC", VA = "0x13C46CC")]
			get
			{
				return default(UpdateType);
			}
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0x13C46D4", Offset = "0x13C46D4", VA = "0x13C46D4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		public bool DisableVelocity
		{
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x13C46DC", Offset = "0x13C46DC", VA = "0x13C46DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0x13C46E4", Offset = "0x13C46E4", VA = "0x13C46E4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public bool DisableAngularVelocity
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0x13C46F0", Offset = "0x13C46F0", VA = "0x13C46F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A93")]
			[Address(RVA = "0x13C46F8", Offset = "0x13C46F8", VA = "0x13C46F8")]
			set
			{
			}
		}

		[Token(Token = "0x170003F2")]
		public UpdateOn _updateOn
		{
			[Token(Token = "0x6001A94")]
			[Address(RVA = "0x13C4704", Offset = "0x13C4704", VA = "0x13C4704")]
			get
			{
				return default(UpdateOn);
			}
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0x13C470C", Offset = "0x13C470C", VA = "0x13C470C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		public float MarginDistance
		{
			[Token(Token = "0x6001A96")]
			[Address(RVA = "0x13C4714", Offset = "0x13C4714", VA = "0x13C4714")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A97")]
			[Address(RVA = "0x13C471C", Offset = "0x13C471C", VA = "0x13C471C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F4")]
		public bool UseLocalOffset
		{
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0x13C4724", Offset = "0x13C4724", VA = "0x13C4724")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x13C472C", Offset = "0x13C472C", VA = "0x13C472C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F5")]
		public Vector3 PositionOffset
		{
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0x13C4738", Offset = "0x13C4738", VA = "0x13C4738")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0x13C4744", Offset = "0x13C4744", VA = "0x13C4744")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public bool UpVectorAlignment
		{
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0x13C4750", Offset = "0x13C4750", VA = "0x13C4750")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0x13C4758", Offset = "0x13C4758", VA = "0x13C4758")]
			set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public bool UsePositionOffsetWithRotate
		{
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0x13C4764", Offset = "0x13C4764", VA = "0x13C4764")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0x13C476C", Offset = "0x13C476C", VA = "0x13C476C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F8")]
		public Vector3 RotateOffset
		{
			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0x13C4778", Offset = "0x13C4778", VA = "0x13C4778")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0x13C4784", Offset = "0x13C4784", VA = "0x13C4784")]
			set
			{
			}
		}

		[Token(Token = "0x170003F9")]
		public VectorToggle _lockPosition
		{
			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0x13C4790", Offset = "0x13C4790", VA = "0x13C4790")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0x13C4798", Offset = "0x13C4798", VA = "0x13C4798")]
			set
			{
			}
		}

		[Token(Token = "0x170003FA")]
		public VectorToggle _lockRotation
		{
			[Token(Token = "0x6001AA4")]
			[Address(RVA = "0x13C47A0", Offset = "0x13C47A0", VA = "0x13C47A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0x13C47A8", Offset = "0x13C47A8", VA = "0x13C47A8")]
			set
			{
			}
		}

		[Token(Token = "0x170003FB")]
		public bool ScaleByDistance
		{
			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0x13C47B0", Offset = "0x13C47B0", VA = "0x13C47B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0x13C47B8", Offset = "0x13C47B8", VA = "0x13C47B8")]
			set
			{
			}
		}

		[Token(Token = "0x170003FC")]
		public float ScaleFactor
		{
			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0x13C47C4", Offset = "0x13C47C4", VA = "0x13C47C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0x13C47CC", Offset = "0x13C47CC", VA = "0x13C47CC")]
			set
			{
			}
		}

		[Token(Token = "0x170003FD")]
		public float MoveSpeed
		{
			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0x13C47D4", Offset = "0x13C47D4", VA = "0x13C47D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0x13C47DC", Offset = "0x13C47DC", VA = "0x13C47DC")]
			set
			{
			}
		}

		[Token(Token = "0x170003FE")]
		public float RotateSpeed
		{
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0x13C47E4", Offset = "0x13C47E4", VA = "0x13C47E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x13C47EC", Offset = "0x13C47EC", VA = "0x13C47EC")]
			set
			{
			}
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x13C47F4", Offset = "0x13C47F4", VA = "0x13C47F4")]
		public Follow()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x13C48C0", Offset = "0x13C48C0", VA = "0x13C48C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x13C4970", Offset = "0x13C4970", VA = "0x13C4970")]
		public Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x13C4978", Offset = "0x13C4978", VA = "0x13C4978")]
		public void SetRigidbody(Rigidbody rigid)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x13C4980", Offset = "0x13C4980", VA = "0x13C4980")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x13C4F74", Offset = "0x13C4F74", VA = "0x13C4F74")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x13C50E8", Offset = "0x13C50E8", VA = "0x13C50E8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x13C4F84", Offset = "0x13C4F84", VA = "0x13C4F84")]
		private void FollowAlongUpdate()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x13C50FC", Offset = "0x13C50FC", VA = "0x13C50FC")]
		private void MoveObject()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x13C538C", Offset = "0x13C538C", VA = "0x13C538C")]
		private void RotateObject()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x13C4D2C", Offset = "0x13C4D2C", VA = "0x13C4D2C")]
		public Vector3 GetTargetVector(bool useOffset = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x13C4EC4", Offset = "0x13C4EC4", VA = "0x13C4EC4")]
		public Vector3 CalculateMargin(Vector3 startPoint, Vector3 targetPoint, float distance)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20004F2")]
	public class LockOnTo : MonoBehaviour
	{
		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5D30", Offset = "0xAB5D30")]
		[SerializeField]
		private CGF_AlignToForce.AlignDirection alignDirection;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5D7C", Offset = "0xAB5D7C")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5DC8", Offset = "0xAB5DC8")]
		[SerializeField]
		private bool rotationRigidbody;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5E14", Offset = "0xAB5E14")]
		private float slerpSpeed;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform myTransform;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody myRigidbody;

		[Token(Token = "0x17000402")]
		public CGF_AlignToForce.AlignDirection _alignDirection
		{
			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0x24E2AAC", Offset = "0x24E2AAC", VA = "0x24E2AAC")]
			get
			{
				return default(CGF_AlignToForce.AlignDirection);
			}
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x24E2AB4", Offset = "0x24E2AB4", VA = "0x24E2AB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public Transform Target
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x24E2ABC", Offset = "0x24E2ABC", VA = "0x24E2ABC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0x24E2AC4", Offset = "0x24E2AC4", VA = "0x24E2AC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000404")]
		public bool RotationRigidbody
		{
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0x24E2ACC", Offset = "0x24E2ACC", VA = "0x24E2ACC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0x24E2AD4", Offset = "0x24E2AD4", VA = "0x24E2AD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000405")]
		public float SlerpSpeed
		{
			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0x24E2AE0", Offset = "0x24E2AE0", VA = "0x24E2AE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0x24E2AE8", Offset = "0x24E2AE8", VA = "0x24E2AE8")]
			set
			{
			}
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x24E2AF0", Offset = "0x24E2AF0", VA = "0x24E2AF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x24E2B64", Offset = "0x24E2B64", VA = "0x24E2B64")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x24E2E00", Offset = "0x24E2E00", VA = "0x24E2E00")]
		public LockOnTo()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class LockTo : MonoBehaviour
	{
		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5E60", Offset = "0xAB5E60")]
		[SerializeField]
		private bool lockTransform;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Quaternion initialRotation;

		[Token(Token = "0x17000406")]
		public bool LockTransform
		{
			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0x24E2E10", Offset = "0x24E2E10", VA = "0x24E2E10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0x24E2E18", Offset = "0x24E2E18", VA = "0x24E2E18")]
			set
			{
			}
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x24E2E24", Offset = "0x24E2E24", VA = "0x24E2E24")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x24E2E60", Offset = "0x24E2E60", VA = "0x24E2E60")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x24E2EAC", Offset = "0x24E2EAC", VA = "0x24E2EAC")]
		public LockTo()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class LookTo2D : MonoBehaviour
	{
		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5EAC", Offset = "0xAB5EAC")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5EF8", Offset = "0xAB5EF8")]
		[SerializeField]
		private float slerpSpeed;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5F44", Offset = "0xAB5F44")]
		[SerializeField]
		private Vector3 direction;

		[Token(Token = "0x17000407")]
		public Transform Target
		{
			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0x24E74E0", Offset = "0x24E74E0", VA = "0x24E74E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0x24E74E8", Offset = "0x24E74E8", VA = "0x24E74E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public float SlerpSpeed
		{
			[Token(Token = "0x6001AD3")]
			[Address(RVA = "0x24E74F0", Offset = "0x24E74F0", VA = "0x24E74F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0x24E74F8", Offset = "0x24E74F8", VA = "0x24E74F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public Vector3 Direction
		{
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0x24E7500", Offset = "0x24E7500", VA = "0x24E7500")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0x24E750C", Offset = "0x24E750C", VA = "0x24E750C")]
			set
			{
			}
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x24E7518", Offset = "0x24E7518", VA = "0x24E7518")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x24E762C", Offset = "0x24E762C", VA = "0x24E762C")]
		public LookTo2D()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class RotateAround : MonoBehaviour
	{
		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5F90", Offset = "0xAB5F90")]
		[SerializeField]
		private Transform rotateAroundObject;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5FDC", Offset = "0xAB5FDC")]
		private float speed;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6028", Offset = "0xAB6028")]
		public Vector3 axis;

		[Token(Token = "0x1700040A")]
		public Transform RotateAroundObject
		{
			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0xE76F8C", Offset = "0xE76F8C", VA = "0xE76F8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0xE76F94", Offset = "0xE76F94", VA = "0xE76F94")]
			set
			{
			}
		}

		[Token(Token = "0x1700040B")]
		public float Speed
		{
			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0xE76F9C", Offset = "0xE76F9C", VA = "0xE76F9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0xE76FA4", Offset = "0xE76FA4", VA = "0xE76FA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700040C")]
		public Vector3 Axis
		{
			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0xE76FAC", Offset = "0xE76FAC", VA = "0xE76FAC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0xE76FB8", Offset = "0xE76FB8", VA = "0xE76FB8")]
			set
			{
			}
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xE76FC4", Offset = "0xE76FC4", VA = "0xE76FC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xE770E0", Offset = "0xE770E0", VA = "0xE770E0")]
		public RotateAround()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class SceneTimeScale : MonoBehaviour
	{
		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB6074", Offset = "0xAB6074")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6074", Offset = "0xAB6074")]
		private float customeTime;

		[Token(Token = "0x1700040D")]
		public float CustomeTime
		{
			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0xE7E9F0", Offset = "0xE7E9F0", VA = "0xE7E9F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0xE7E9F8", Offset = "0xE7E9F8", VA = "0xE7E9F8")]
			set
			{
			}
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xE7EA00", Offset = "0xE7EA00", VA = "0xE7EA00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xE7EA04", Offset = "0xE7EA04", VA = "0xE7EA04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xE7EA10", Offset = "0xE7EA10", VA = "0xE7EA10")]
		public SceneTimeScale()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class Spawn : MonoBehaviour
	{
		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB60D8", Offset = "0xAB60D8")]
		private GameObject spawnObject;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6124", Offset = "0xAB6124")]
		private int maxObjects;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6170", Offset = "0xAB6170")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB6170", Offset = "0xAB6170")]
		private GameObject lastSpawned;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> spawnedObjects;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject spawnObjectParent;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int index;

		[Token(Token = "0x1700040E")]
		public GameObject SpawnObject
		{
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xEFB540", Offset = "0xEFB540", VA = "0xEFB540")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xEFB548", Offset = "0xEFB548", VA = "0xEFB548")]
			set
			{
			}
		}

		[Token(Token = "0x1700040F")]
		public int MaxObjects
		{
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0xEFB550", Offset = "0xEFB550", VA = "0xEFB550")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xEFB558", Offset = "0xEFB558", VA = "0xEFB558")]
			set
			{
			}
		}

		[Token(Token = "0x17000410")]
		public GameObject LastSpawned
		{
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xEFB560", Offset = "0xEFB560", VA = "0xEFB560")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xEFB568", Offset = "0xEFB568", VA = "0xEFB568")]
			set
			{
			}
		}

		[Token(Token = "0x17000411")]
		public List<GameObject> SpawnedObjects
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0xEFB570", Offset = "0xEFB570", VA = "0xEFB570")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xEFB578", Offset = "0xEFB578", VA = "0xEFB578")]
			set
			{
			}
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xEFB580", Offset = "0xEFB580", VA = "0xEFB580")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xEFB584", Offset = "0xEFB584", VA = "0xEFB584")]
		public void SetupSpawnPool()
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xEFB81C", Offset = "0xEFB81C", VA = "0xEFB81C")]
		public void Spawning()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xEFBC40", Offset = "0xEFBC40", VA = "0xEFBC40")]
		public Spawn()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class Timer : MonoBehaviour
	{
		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB61E0", Offset = "0xAB61E0")]
		[SerializeField]
		private bool startTimer;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB622C", Offset = "0xAB622C")]
		private float time;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6278", Offset = "0xAB6278")]
		public float countdown;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB62C4", Offset = "0xAB62C4")]
		[SerializeField]
		private bool alarm;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float timeStamp;

		[Token(Token = "0x17000412")]
		public bool StartTimer
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0xFEE58C", Offset = "0xFEE58C", VA = "0xFEE58C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xFEE594", Offset = "0xFEE594", VA = "0xFEE594")]
			set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public float Time
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xFEE5A0", Offset = "0xFEE5A0", VA = "0xFEE5A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0xFEE5A8", Offset = "0xFEE5A8", VA = "0xFEE5A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public float Countdown
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0xFEE5B0", Offset = "0xFEE5B0", VA = "0xFEE5B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0xFEE5B8", Offset = "0xFEE5B8", VA = "0xFEE5B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public bool Alarm
		{
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0xFEE5C0", Offset = "0xFEE5C0", VA = "0xFEE5C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0xFEE5C8", Offset = "0xFEE5C8", VA = "0xFEE5C8")]
			set
			{
			}
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xFEE5D4", Offset = "0xFEE5D4", VA = "0xFEE5D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xFEE5DC", Offset = "0xFEE5DC", VA = "0xFEE5DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xFEE660", Offset = "0xFEE660", VA = "0xFEE660")]
		public Timer()
		{
		}
	}
}
namespace CircularGravityForce.UnityStandardAssets.Utility
{
	[Serializable]
	[Token(Token = "0x20004F9")]
	public class CurveControlledBob
	{
		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x1088F8C", Offset = "0x1088F8C", VA = "0x1088F8C")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x1089030", Offset = "0x1089030", VA = "0x1089030")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x108912C", Offset = "0x108912C", VA = "0x108912C")]
		public CurveControlledBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FA")]
	public class FOVKick
	{
		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA80E0", Offset = "0xAA80E0")]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000416")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B09")]
				[Address(RVA = "0xCB8E48", Offset = "0xCB8E48", VA = "0xCB8E48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000417")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B0B")]
				[Address(RVA = "0xCB8E90", Offset = "0xCB8E90", VA = "0xCB8E90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B06")]
			[Address(RVA = "0xCB8CE8", Offset = "0xCB8CE8", VA = "0xCB8CE8")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001B07")]
			[Address(RVA = "0xCB8D14", Offset = "0xCB8D14", VA = "0xCB8D14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B08")]
			[Address(RVA = "0xCB8D18", Offset = "0xCB8D18", VA = "0xCB8D18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0xCB8E50", Offset = "0xCB8E50", VA = "0xCB8E50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA80F0", Offset = "0xAA80F0")]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000418")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B0F")]
				[Address(RVA = "0xCB8C98", Offset = "0xCB8C98", VA = "0xCB8C98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000419")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B11")]
				[Address(RVA = "0xCB8CE0", Offset = "0xCB8CE0", VA = "0xCB8CE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0xCB8B24", Offset = "0xCB8B24", VA = "0xCB8B24")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0xCB8B50", Offset = "0xCB8B50", VA = "0xCB8B50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B0E")]
			[Address(RVA = "0xCB8B54", Offset = "0xCB8B54", VA = "0xCB8B54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B10")]
			[Address(RVA = "0xCB8CA0", Offset = "0xCB8CA0", VA = "0xCB8CA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x1C3B3FC", Offset = "0x1C3B3FC", VA = "0x1C3B3FC")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x1C3B43C", Offset = "0x1C3B43C", VA = "0x1C3B43C")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x1C3B528", Offset = "0x1C3B528", VA = "0x1C3B528")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x1C3B530", Offset = "0x1C3B530", VA = "0x1C3B530")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABFDD4", Offset = "0xABFDD4")]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x1C3B59C", Offset = "0x1C3B59C", VA = "0x1C3B59C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABFE34", Offset = "0xABFE34")]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x1C3B608", Offset = "0x1C3B608", VA = "0x1C3B608")]
		public FOVKick()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FD")]
	public class LerpControlledBob
	{
		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8100", Offset = "0xAA8100")]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpControlledBob <>4__this;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x1700041A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B18")]
				[Address(RVA = "0xCC2A3C", Offset = "0xCC2A3C", VA = "0xCC2A3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B1A")]
				[Address(RVA = "0xCC2A84", Offset = "0xCC2A84", VA = "0xCC2A84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B15")]
			[Address(RVA = "0xCC2880", Offset = "0xCC2880", VA = "0xCC2880")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001B16")]
			[Address(RVA = "0xCC28AC", Offset = "0xCC28AC", VA = "0xCC28AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B17")]
			[Address(RVA = "0xCC28B0", Offset = "0xCC28B0", VA = "0xCC28B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B19")]
			[Address(RVA = "0xCC2A44", Offset = "0xCC2A44", VA = "0xCC2A44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xBD4EAC", Offset = "0xBD4EAC", VA = "0xBD4EAC")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xBD4EB4", Offset = "0xBD4EB4", VA = "0xBD4EB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABFF34", Offset = "0xABFF34")]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xBD4F20", Offset = "0xBD4F20", VA = "0xBD4F20")]
		public LerpControlledBob()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class WaypointCircuit : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000500")]
		public class WaypointList
		{
			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WaypointCircuit circuit;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform[] items;

			[Token(Token = "0x6001B27")]
			[Address(RVA = "0x249C548", Offset = "0x249C548", VA = "0x249C548")]
			public WaypointList()
			{
			}
		}

		[Token(Token = "0x2000501")]
		public struct RoutePoint
		{
			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 direction;

			[Token(Token = "0x6001B28")]
			[Address(RVA = "0xE6E224", Offset = "0xE6E224", VA = "0xE6E224")]
			public RoutePoint(Vector3 position, Vector3 direction)
			{
			}
		}

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaypointList waypointList;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool smoothRoute;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int numPoints;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] points;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] distances;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float editorVisualisationSubsteps;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6330", Offset = "0xAB6330")]
		private float <Length>k__BackingField;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int p0n;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int p1n;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int p2n;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int p3n;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float i;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 P0;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 P1;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 P2;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 P3;

		[Token(Token = "0x1700041C")]
		public float Length
		{
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0xE88B7C", Offset = "0xE88B7C", VA = "0xE88B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFFE4", Offset = "0xABFFE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0xE88B84", Offset = "0xE88B84", VA = "0xE88B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABFFF4", Offset = "0xABFFF4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public Transform[] Waypoints
		{
			[Token(Token = "0x6001B1D")]
			[Address(RVA = "0xE88B8C", Offset = "0xE88B8C", VA = "0xE88B8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xE88BA8", Offset = "0xE88BA8", VA = "0xE88BA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xE88EB0", Offset = "0xE88EB0", VA = "0xE88EB0")]
		public RoutePoint GetRoutePoint(float dist)
		{
			return default(RoutePoint);
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xE88F5C", Offset = "0xE88F5C", VA = "0xE88F5C")]
		public Vector3 GetRoutePosition(float dist)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xE891E8", Offset = "0xE891E8", VA = "0xE891E8")]
		private Vector3 CatmullRom(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float i)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xE88C04", Offset = "0xE88C04", VA = "0xE88C04")]
		private void CachePositionsAndDistances()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xE892F4", Offset = "0xE892F4", VA = "0xE892F4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xE89574", Offset = "0xE89574", VA = "0xE89574")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xE892FC", Offset = "0xE892FC", VA = "0xE892FC")]
		private void DrawGizmos(bool selected)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xE8957C", Offset = "0xE8957C", VA = "0xE8957C")]
		public WaypointCircuit()
		{
		}
	}
}
namespace CircularGravityForce.UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x2000502")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x2000503")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4001F72")]
			Hardware,
			[Token(Token = "0x4001F73")]
			Touch
		}

		[Token(Token = "0x2000504")]
		public class VirtualAxis
		{
			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6340", Offset = "0xAB6340")]
			private string <name>k__BackingField;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6350", Offset = "0xAB6350")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x1700041F")]
			public string name
			{
				[Token(Token = "0x6001B42")]
				[Address(RVA = "0xCB6C54", Offset = "0xCB6C54", VA = "0xCB6C54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0004", Offset = "0xAC0004")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001B43")]
				[Address(RVA = "0xCB6C5C", Offset = "0xCB6C5C", VA = "0xCB6C5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0014", Offset = "0xAC0014")]
				private set
				{
				}
			}

			[Token(Token = "0x17000420")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6001B44")]
				[Address(RVA = "0xCB6C64", Offset = "0xCB6C64", VA = "0xCB6C64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0024", Offset = "0xAC0024")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001B45")]
				[Address(RVA = "0xCB6C6C", Offset = "0xCB6C6C", VA = "0xCB6C6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0034", Offset = "0xAC0034")]
				private set
				{
				}
			}

			[Token(Token = "0x17000421")]
			public float GetValue
			{
				[Token(Token = "0x6001B4A")]
				[Address(RVA = "0xCB6D5C", Offset = "0xCB6D5C", VA = "0xCB6D5C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000422")]
			public float GetValueRaw
			{
				[Token(Token = "0x6001B4B")]
				[Address(RVA = "0xCB6D64", Offset = "0xCB6D64", VA = "0xCB6D64")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001B46")]
			[Address(RVA = "0xCB6C78", Offset = "0xCB6C78", VA = "0xCB6C78")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6001B47")]
			[Address(RVA = "0xCB6CAC", Offset = "0xCB6CAC", VA = "0xCB6CAC")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6001B48")]
			[Address(RVA = "0xCB6CEC", Offset = "0xCB6CEC", VA = "0xCB6CEC")]
			public void Remove()
			{
			}

			[Token(Token = "0x6001B49")]
			[Address(RVA = "0xCB6D54", Offset = "0xCB6D54", VA = "0xCB6D54")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x2000505")]
		public class VirtualButton
		{
			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6360", Offset = "0xAB6360")]
			private string <name>k__BackingField;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6370", Offset = "0xAB6370")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x17000423")]
			public string name
			{
				[Token(Token = "0x6001B4C")]
				[Address(RVA = "0xCB6D6C", Offset = "0xCB6D6C", VA = "0xCB6D6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0044", Offset = "0xAC0044")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001B4D")]
				[Address(RVA = "0xCB6D74", Offset = "0xCB6D74", VA = "0xCB6D74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0054", Offset = "0xAC0054")]
				private set
				{
				}
			}

			[Token(Token = "0x17000424")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6001B4E")]
				[Address(RVA = "0xCB6D7C", Offset = "0xCB6D7C", VA = "0xCB6D7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0064", Offset = "0xAC0064")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001B4F")]
				[Address(RVA = "0xCB6D84", Offset = "0xCB6D84", VA = "0xCB6D84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0074", Offset = "0xAC0074")]
				private set
				{
				}
			}

			[Token(Token = "0x17000425")]
			public bool GetButton
			{
				[Token(Token = "0x6001B55")]
				[Address(RVA = "0xCB6EE4", Offset = "0xCB6EE4", VA = "0xCB6EE4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000426")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6001B56")]
				[Address(RVA = "0xCB6EEC", Offset = "0xCB6EEC", VA = "0xCB6EEC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000427")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6001B57")]
				[Address(RVA = "0xCB6F1C", Offset = "0xCB6F1C", VA = "0xCB6F1C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001B50")]
			[Address(RVA = "0xCB6D90", Offset = "0xCB6D90", VA = "0xCB6D90")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x6001B51")]
			[Address(RVA = "0xCB6DCC", Offset = "0xCB6DCC", VA = "0xCB6DCC")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6001B52")]
			[Address(RVA = "0xCB6E14", Offset = "0xCB6E14", VA = "0xCB6E14")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6001B53")]
			[Address(RVA = "0xCB6E50", Offset = "0xCB6E50", VA = "0xCB6E50")]
			public void Released()
			{
			}

			[Token(Token = "0x6001B54")]
			[Address(RVA = "0xCB6E7C", Offset = "0xCB6E7C", VA = "0xCB6E7C")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x1700041E")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0x108874C", Offset = "0x108874C", VA = "0x108874C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x1087C94", Offset = "0x1087C94", VA = "0x1087C94")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x1087D48", Offset = "0x1087D48", VA = "0x1087D48")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x1087DF4", Offset = "0x1087DF4", VA = "0x1087DF4")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x1087E6C", Offset = "0x1087E6C", VA = "0x1087E6C")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x1087EE4", Offset = "0x1087EE4", VA = "0x1087EE4")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x1087F5C", Offset = "0x1087F5C", VA = "0x1087F5C")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x1087FD4", Offset = "0x1087FD4", VA = "0x1087FD4")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x1088098", Offset = "0x1088098", VA = "0x1088098")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x1088110", Offset = "0x1088110", VA = "0x1088110")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x1088188", Offset = "0x1088188", VA = "0x1088188")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x1088278", Offset = "0x1088278", VA = "0x1088278")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x10881EC", Offset = "0x10881EC", VA = "0x10881EC")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x10882DC", Offset = "0x10882DC", VA = "0x10882DC")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x1088358", Offset = "0x1088358", VA = "0x1088358")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x10883D4", Offset = "0x10883D4", VA = "0x10883D4")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x1088450", Offset = "0x1088450", VA = "0x1088450")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x10884CC", Offset = "0x10884CC", VA = "0x10884CC")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x1088548", Offset = "0x1088548", VA = "0x1088548")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x10885C4", Offset = "0x10885C4", VA = "0x10885C4")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x1088640", Offset = "0x1088640", VA = "0x1088640")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x10886BC", Offset = "0x10886BC", VA = "0x10886BC")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x10887C4", Offset = "0x10887C4", VA = "0x10887C4")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x1088844", Offset = "0x1088844", VA = "0x1088844")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x10888C4", Offset = "0x10888C4", VA = "0x10888C4")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x2000506")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6380", Offset = "0xAB6380")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x17000428")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0xE8235C", Offset = "0xE8235C", VA = "0xE8235C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0084", Offset = "0xAC0084")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001B59")]
			[Address(RVA = "0xE82368", Offset = "0xE82368", VA = "0xE82368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0094", Offset = "0xAC0094")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xE82374", Offset = "0xE82374", VA = "0xE82374")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xE823D8", Offset = "0xE823D8", VA = "0xE823D8")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xE8243C", Offset = "0xE8243C", VA = "0xE8243C")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xE8259C", Offset = "0xE8259C", VA = "0xE8259C")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xE826FC", Offset = "0xE826FC", VA = "0xE826FC")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xE8279C", Offset = "0xE8279C", VA = "0xE8279C")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xE8283C", Offset = "0xE8283C", VA = "0xE8283C")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xE828D8", Offset = "0xE828D8", VA = "0xE828D8")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xE828E0", Offset = "0xE828E0", VA = "0xE828E0")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xE828E8", Offset = "0xE828E8", VA = "0xE828E8")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x6001B64")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x6001B65")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x6001B66")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x6001B67")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x6001B68")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x6001B69")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6001B6A")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6001B6B")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6001B6C")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6001B6D")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6001B6E")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xE828F0", Offset = "0xE828F0", VA = "0xE828F0")]
		protected VirtualInput()
		{
		}
	}
}
namespace CircularGravityForce.UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x2000507")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xBEC33C", Offset = "0xBEC33C", VA = "0xBEC33C")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xBEC3CC", Offset = "0xBEC3CC", VA = "0xBEC3CC")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xBEC45C", Offset = "0xBEC45C", VA = "0xBEC45C", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xBEC500", Offset = "0xBEC500", VA = "0xBEC500", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xBEC5A4", Offset = "0xBEC5A4", VA = "0xBEC5A4", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xBEC648", Offset = "0xBEC648", VA = "0xBEC648", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xBEC6F0", Offset = "0xBEC6F0", VA = "0xBEC6F0", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xBEC798", Offset = "0xBEC798", VA = "0xBEC798", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xBEC83C", Offset = "0xBEC83C", VA = "0xBEC83C", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xBEC8EC", Offset = "0xBEC8EC", VA = "0xBEC8EC", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xBEC990", Offset = "0xBEC990", VA = "0xBEC990", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xBECA34", Offset = "0xBECA34", VA = "0xBECA34", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xBECAD8", Offset = "0xBECAD8", VA = "0xBECAD8", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xBECAE4", Offset = "0xBECAE4", VA = "0xBECAE4")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xF01844", Offset = "0xF01844", VA = "0xF01844", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xF01858", Offset = "0xF01858", VA = "0xF01858", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xF01864", Offset = "0xF01864", VA = "0xF01864", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xF01870", Offset = "0xF01870", VA = "0xF01870", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xF0187C", Offset = "0xF0187C", VA = "0xF0187C", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xF018D0", Offset = "0xF018D0", VA = "0xF018D0", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xF01924", Offset = "0xF01924", VA = "0xF01924", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xF01978", Offset = "0xF01978", VA = "0xF01978", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xF019CC", Offset = "0xF019CC", VA = "0xF019CC", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xF01A20", Offset = "0xF01A20", VA = "0xF01A20", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xF01A74", Offset = "0xF01A74", VA = "0xF01A74", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xF01A7C", Offset = "0xF01A7C", VA = "0xF01A7C")]
		public StandaloneInput()
		{
		}
	}
}
namespace CircularGravityForce.UnityStandardAssets.Characters.FirstPerson
{
	[Token(Token = "0x2000509")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8110", Offset = "0xAA8110")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8110", Offset = "0xAA8110")]
	public class FirstPersonController : MonoBehaviour
	{
		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_IsWalking;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_WalkSpeed;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_RunSpeed;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB63C0", Offset = "0xAB63C0")]
		[SerializeField]
		private float m_RunstepLenghten;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_StickToGroundForce;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MouseLook m_MouseLook;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseFovKick;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CircularGravityForce.UnityStandardAssets.Utility.FOVKick m_FovKick;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_UseHeadBob;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CircularGravityForce.UnityStandardAssets.Utility.CurveControlledBob m_HeadBob;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CircularGravityForce.UnityStandardAssets.Utility.LerpControlledBob m_JumpBob;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_StepInterval;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip[] m_FootstepSounds;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip m_JumpSound;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioClip m_LandSound;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Camera m_Camera;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_Jump;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_YRotation;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 m_Input;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_StepCycle;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_NextStep;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool m_Jumping;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x13C0680", Offset = "0x13C0680", VA = "0x13C0680")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x13C0798", Offset = "0x13C0798", VA = "0x13C0798")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x13C0914", Offset = "0x13C0914", VA = "0x13C0914")]
		private void PlayLandingSound()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x13C0968", Offset = "0x13C0968", VA = "0x13C0968")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x13C0DB8", Offset = "0x13C0DB8", VA = "0x13C0DB8")]
		private void PlayJumpSound()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x13C0DF8", Offset = "0x13C0DF8", VA = "0x13C0DF8")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x13C10C4", Offset = "0x13C10C4", VA = "0x13C10C4")]
		private void PlayFootStepAudio()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x13C0EFC", Offset = "0x13C0EFC", VA = "0x13C0EFC")]
		private void UpdateCameraPosition(float speed)
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x13C0BF8", Offset = "0x13C0BF8", VA = "0x13C0BF8")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x13C08BC", Offset = "0x13C08BC", VA = "0x13C08BC")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x13C1210", Offset = "0x13C1210", VA = "0x13C1210")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x13C134C", Offset = "0x13C134C", VA = "0x13C134C")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class HeadBob : MonoBehaviour
	{
		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera Camera;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CircularGravityForce.UnityStandardAssets.Utility.CurveControlledBob motionBob;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CircularGravityForce.UnityStandardAssets.Utility.LerpControlledBob jumpAndLandingBob;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RigidbodyFirstPersonController rigidbodyFirstPersonController;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float StrideInterval;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB64D0", Offset = "0xAB64D0")]
		public float RunningStrideLengthen;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x1224644", Offset = "0x1224644", VA = "0x1224644")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x12246A0", Offset = "0x12246A0", VA = "0x12246A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x12248AC", Offset = "0x12248AC", VA = "0x12248AC")]
		public HeadBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050B")]
	public class MouseLook
	{
		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float XSensitivity;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float YSensitivity;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clampVerticalRotation;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinimumX;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaximumX;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool smooth;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xBEEB10", Offset = "0xBEEB10", VA = "0xBEEB10")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xBEEB64", Offset = "0xBEEB64", VA = "0xBEEB64")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xBEEE08", Offset = "0xBEEE08", VA = "0xBEEE08")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xBEEE70", Offset = "0xBEEE70", VA = "0xBEEE70")]
		public MouseLook()
		{
		}
	}
	[Token(Token = "0x200050C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA81A4", Offset = "0xAA81A4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA81A4", Offset = "0xAA81A4")]
	public class RigidbodyFirstPersonController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200050D")]
		public class MovementSettings
		{
			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float ForwardSpeed;

			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float BackwardSpeed;

			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float StrafeSpeed;

			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float RunMultiplier;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode RunKey;

			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float JumpForce;

			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve SlopeCurveModifier;

			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[HideInInspector]
			public float CurrentTargetSpeed;

			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool m_Running;

			[Token(Token = "0x1700042D")]
			public bool Running
			{
				[Token(Token = "0x6001BAB")]
				[Address(RVA = "0xE660A8", Offset = "0xE660A8", VA = "0xE660A8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0xE65FE8", Offset = "0xE65FE8", VA = "0xE65FE8")]
			public void UpdateDesiredTargetSpeed(Vector2 input)
			{
			}

			[Token(Token = "0x6001BAC")]
			[Address(RVA = "0xE660B0", Offset = "0xE660B0", VA = "0xE660B0")]
			public MovementSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200050E")]
		public class AdvancedSettings
		{
			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float groundCheckDistance;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float stickToGroundHelperDistance;

			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float slowDownRate;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool airControl;

			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0xE65FCC", Offset = "0xE65FCC", VA = "0xE65FCC")]
			public AdvancedSettings()
			{
			}
		}

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovementSettings movementSettings;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MouseLook mouseLook;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AdvancedSettings advancedSettings;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_RigidBody;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_YRotation;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_GroundContactNormal;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_Jump;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_Jumping;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool m_IsGrounded;

		[Token(Token = "0x17000429")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0xE74050", Offset = "0xE74050", VA = "0xE74050")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700042A")]
		public bool Grounded
		{
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0xE7406C", Offset = "0xE7406C", VA = "0xE7406C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700042B")]
		public bool Jumping
		{
			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0xE74074", Offset = "0xE74074", VA = "0xE74074")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700042C")]
		public bool Running
		{
			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0xE7407C", Offset = "0xE7407C", VA = "0xE7407C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xE74098", Offset = "0xE74098", VA = "0xE74098")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xE74150", Offset = "0xE74150", VA = "0xE74150")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xE74360", Offset = "0xE74360", VA = "0xE74360")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xE74874", Offset = "0xE74874", VA = "0xE74874")]
		private float SlopeMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xE748E8", Offset = "0xE748E8", VA = "0xE748E8")]
		private void StickToGroundHelper()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xE747A4", Offset = "0xE747A4", VA = "0xE747A4")]
		private Vector2 GetInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xE741E8", Offset = "0xE741E8", VA = "0xE741E8")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xE74644", Offset = "0xE74644", VA = "0xE74644")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xE74AA0", Offset = "0xE74AA0", VA = "0xE74AA0")]
		public RigidbodyFirstPersonController()
		{
		}
	}
}
namespace Reaktion
{
	[Token(Token = "0x200050F")]
	public static class Perlin
	{
		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] perm;

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xCD22B0", Offset = "0xCD22B0", VA = "0xCD22B0")]
		public static float Noise(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xCD2470", Offset = "0xCD2470", VA = "0xCD2470")]
		public static float Noise(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xCD2700", Offset = "0xCD2700", VA = "0xCD2700")]
		public static float Noise(Vector2 coord)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xCD2770", Offset = "0xCD2770", VA = "0xCD2770")]
		public static float Noise(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xCD2BA0", Offset = "0xCD2BA0", VA = "0xCD2BA0")]
		public static float Noise(Vector3 coord)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xCD2C20", Offset = "0xCD2C20", VA = "0xCD2C20")]
		public static float Fbm(float x, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xCD2CD0", Offset = "0xCD2CD0", VA = "0xCD2CD0")]
		public static float Fbm(Vector2 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xCD2D94", Offset = "0xCD2D94", VA = "0xCD2D94")]
		public static float Fbm(Vector3 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xCD238C", Offset = "0xCD238C", VA = "0xCD238C")]
		private static float Fade(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xCD2460", Offset = "0xCD2460", VA = "0xCD2460")]
		private static float Lerp(float t, float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xCD23B8", Offset = "0xCD23B8", VA = "0xCD23B8")]
		private static float Grad(int i, float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xCD2644", Offset = "0xCD2644", VA = "0xCD2644")]
		private static float Grad(int i, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xCD2AAC", Offset = "0xCD2AAC", VA = "0xCD2AAC")]
		private static float Grad(int i, float x, float y, float z)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000510")]
	public class JitterMotion : MonoBehaviour
	{
		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float positionFrequency;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rotationFrequency;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float positionAmount;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationAmount;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 positionComponents;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 rotationComponents;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int positionOctave;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int rotationOctave;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float timePosition;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timeRotation;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2[] noiseVectors;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 initialPosition;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion initialRotation;

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x12300B8", Offset = "0x12300B8", VA = "0x12300B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x1230204", Offset = "0x1230204", VA = "0x1230204")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x1230494", Offset = "0x1230494", VA = "0x1230494")]
		private static float Fbm(Vector2 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x1230560", Offset = "0x1230560", VA = "0x1230560")]
		public JitterMotion()
		{
		}
	}
}
namespace Assets.SFX
{
	[Token(Token = "0x2000511")]
	internal sealed class DemoInputController : MonoBehaviour
	{
		[Token(Token = "0x4001FD6")]
		private const string SpaceButton = "space";

		[Token(Token = "0x4001FD7")]
		private const string LightButton = "f";

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DemoPrefabController _demoPrefabController;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light Light;

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x108E694", Offset = "0x108E694", VA = "0x108E694")]
		public void EnableLighting()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x108E6B4", Offset = "0x108E6B4", VA = "0x108E6B4")]
		public void DisableLight()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x108E6D4", Offset = "0x108E6D4", VA = "0x108E6D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x108E728", Offset = "0x108E728", VA = "0x108E728")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x108E820", Offset = "0x108E820", VA = "0x108E820")]
		public DemoInputController()
		{
		}
	}
	[Token(Token = "0x2000512")]
	internal sealed class DemoPrefabController : MonoBehaviour
	{
		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int StartNum;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] Prefabs;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _currentInstance;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _currentPrefabNum;

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x108E7E0", Offset = "0x108E7E0", VA = "0x108E7E0")]
		public void Next()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x108E944", Offset = "0x108E944", VA = "0x108E944")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x108E828", Offset = "0x108E828", VA = "0x108E828")]
		private void ChangePrefab(int num)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x108E950", Offset = "0x108E950", VA = "0x108E950")]
		public DemoPrefabController()
		{
		}
	}
	[Token(Token = "0x2000513")]
	internal sealed class MouseOrbitController : MonoBehaviour
	{
		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Target;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Distance;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float XSpeed;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float YSpeed;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float YMinLimit;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float YMaxLimit;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float DistanceMin;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float DistanceMax;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _x;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _y;

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xBEFC54", Offset = "0xBEFC54", VA = "0xBEFC54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xBEFC8C", Offset = "0xBEFC8C", VA = "0xBEFC8C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xBEFEB4", Offset = "0xBEFEB4", VA = "0xBEFEB4")]
		private static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xBEFEE4", Offset = "0xBEFEE4", VA = "0xBEFEE4")]
		public MouseOrbitController()
		{
		}
	}
}
namespace QFX.SFX
{
	[Token(Token = "0x2000514")]
	public class Rotator : ControlledObject
	{
		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 Rotation;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _rotation;

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xE77654", Offset = "0xE77654", VA = "0xE77654")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xE776FC", Offset = "0xE776FC", VA = "0xE776FC")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class AreaProtectorController : ControlledObject
	{
		[Token(Token = "0x2000516")]
		private class LaserInstance
		{
			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Angle;

			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ParticleSystem Impact;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LineRenderer LineRenderer;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 Center;

			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0xE907BC", Offset = "0xE907BC", VA = "0xE907BC")]
			public LaserInstance()
			{
			}
		}

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Weapon;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform WeaponPosition;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ProtectionRadius;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask ProtectionLayerMask;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float AllowedTimeInProtectionRadius;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float LaserMaxDistance;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LayerMask LaserLayerMask;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float LaserContactOffset;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ParticleSystem LaserImpact;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LineRenderer LaserLine;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int LasersCount;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationModule ForceOverLifeTime;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationModule LaserRotationOverLifeTime;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationModule LaserRadiusOverLifeTime;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _enemyEnteredRadiusTime;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _isLasersActive;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _forceTime;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _radiusTime;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _rotationTime;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject _target;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly List<LaserInstance> _lineInstances;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ControlledObject _weapon;

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x1346EB4", Offset = "0x1346EB4", VA = "0x1346EB4", Slot = "8")]
		public override void Setup()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x1346FE8", Offset = "0x1346FE8", VA = "0x1346FE8", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x1347018", Offset = "0x1347018", VA = "0x1347018")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x13470B0", Offset = "0x13470B0", VA = "0x13470B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x134788C", Offset = "0x134788C", VA = "0x134788C")]
		private void ActivateLasers(GameObject target)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x134768C", Offset = "0x134768C", VA = "0x134768C")]
		private void DeactivateLasers()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x1347C08", Offset = "0x1347C08", VA = "0x1347C08")]
		private Vector3 GetPosOnCircle(Vector3 center, float posY, float angle, float radius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x1347C88", Offset = "0x1347C88", VA = "0x1347C88")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x1347E64", Offset = "0x1347E64", VA = "0x1347E64")]
		public AreaProtectorController()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x1347EDC", Offset = "0x1347EDC", VA = "0x1347EDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC00A4", Offset = "0xAC00A4")]
		private void <OnEnable>b__24_0()
		{
		}
	}
	[Token(Token = "0x2000517")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8238", Offset = "0xAA8238")]
	public class Enemy : MonoBehaviour
	{
		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x1C36900", Offset = "0x1C36900", VA = "0x1C36900")]
		public Enemy()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class MotionCloner : ControlledObject
	{
		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject TargetGameObject;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CloneLifeTime;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float CloneRate;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ReplaceMaterial;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material CloneMaterial;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ReplaceMaterialInMotion;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material MotionMaterial;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool ShowCloneGameObject;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject TrailParticleSystem;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject ActivateCloneParticleSystem;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject FinishMotionParticleSystem;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject CloneParticleSystem;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MeshRenderer MeshRenderer;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SkinnedMeshRenderer SkinnedMeshRenderer;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject _activateCloneGo;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ParticleSystem _activateClonePs;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject _trailGo;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ParticleSystem _trailPs;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject _finishGo;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ParticleSystem _finishPs;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly Dictionary<Renderer, Material[]> _rendererToSharedMaterials;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _time;

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xBED4E4", Offset = "0xBED4E4", VA = "0xBED4E4", Slot = "8")]
		public override void Setup()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xBEDB04", Offset = "0xBEDB04", VA = "0xBEDB04", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xBEDDC0", Offset = "0xBEDDC0", VA = "0xBEDDC0", Slot = "10")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xBEDFC0", Offset = "0xBEDFC0", VA = "0xBEDFC0")]
		public void MakeClone()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xBEDB2C", Offset = "0xBEDB2C", VA = "0xBEDB2C")]
		private void Activate()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xBEDDE8", Offset = "0xBEDDE8", VA = "0xBEDDE8")]
		private void DeActivate()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xBEE658", Offset = "0xBEE658", VA = "0xBEE658")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xBEE6B0", Offset = "0xBEE6B0", VA = "0xBEE6B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xBEE730", Offset = "0xBEE730", VA = "0xBEE730")]
		public MotionCloner()
		{
		}
	}
	[Token(Token = "0x2000519")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8298", Offset = "0xAA8298")]
	public class EnergyShieldController : ControlledObject
	{
		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer TargetRenderer;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float HitWaveSpeed;

		[Token(Token = "0x400201C")]
		private const int HitMaxCount = 10;

		[Token(Token = "0x400201D")]
		private const string HitPositionsPropertyName = "_HitPositions";

		[Token(Token = "0x400201E")]
		private const string HitRadiiPropertyName = "_HitRadii";

		[Token(Token = "0x400201F")]
		private const float MaxHitRadius = 1f;

		[Token(Token = "0x4002020")]
		private const float MinHitRadius = 0f;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Vector4[] _hitPositions;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly float[] _hitRadii;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _material;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _currentHitIdx;

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x1C369E0", Offset = "0x1C369E0", VA = "0x1C369E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x1C36AC0", Offset = "0x1C36AC0", VA = "0x1C36AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x1C36E3C", Offset = "0x1C36E3C", VA = "0x1C36E3C")]
		private void AddHitData(Vector3 position)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x1C36DB4", Offset = "0x1C36DB4", VA = "0x1C36DB4")]
		private void UpdateMaterial()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x1C36ED0", Offset = "0x1C36ED0", VA = "0x1C36ED0")]
		public EnergyShieldController()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x1C36F60", Offset = "0x1C36F60", VA = "0x1C36F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC00B4", Offset = "0xAC00B4")]
		private void <Awake>b__11_0(CollisionPoint collisionPoint)
		{
		}
	}
	[Token(Token = "0x200051A")]
	internal sealed class EngineController : MonoBehaviour
	{
		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float PowerFactor;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode EngineKeyCode;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem FlareParticleSystem;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FlareFactor;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem SlowSparksParticleSystem;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float SlowSparksFactor;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ParticleSystem FastSparksParticleSystem;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float FastSparksFactor;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ParticleSystem DistortionParticleSystem;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float DistortionFactor;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject EngineInner;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text TextUi;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _currentPower;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _isButtonHeld;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _engineInnerMaterial;

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x1C36F7C", Offset = "0x1C36F7C", VA = "0x1C36F7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x1C36FE4", Offset = "0x1C36FE4", VA = "0x1C36FE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x1C3735C", Offset = "0x1C3735C", VA = "0x1C3735C")]
		public EngineController()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class Healable : MonoBehaviour
	{
		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x1224C34", Offset = "0x1224C34", VA = "0x1224C34")]
		public Healable()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class HealingAreaController : ControlledObject
	{
		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject HealingAreaFx;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject HealingFx;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float HealingRadius;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask LayerMask;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem _characterHealingPs;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly Dictionary<Healable, ParticleSystem> _healableObjectsInArea;

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x1224C3C", Offset = "0x1224C3C", VA = "0x1224C3C", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x1224D80", Offset = "0x1224D80", VA = "0x1224D80")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x12252A0", Offset = "0x12252A0", VA = "0x12252A0")]
		public HealingAreaController()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public static class ParticleSystemMeshAttacher
	{
		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xCCC784", Offset = "0xCCC784", VA = "0xCCC784")]
		public static void Attach(ParticleSystem particleSystem, MeshRenderer meshRenderer, float normalOffset)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xCCC7FC", Offset = "0xCCC7FC", VA = "0xCCC7FC")]
		public static void Attach(ParticleSystem particleSystem, SkinnedMeshRenderer skinnedMeshRenderer, float normalOffset)
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class BeamScannable : MonoBehaviour
	{
		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x134AFC8", Offset = "0x134AFC8", VA = "0x134AFC8")]
		public BeamScannable()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class BeamScannerController : MonoBehaviour
	{
		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Scanner;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationModule AppearAnimation;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsDetectionEnabled;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DetectionRadius;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform DetectionAnchor;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool OverrideColor;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAB64F8", Offset = "0xAB64F8")]
		public Color NormalColor;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xAB6520", Offset = "0xAB6520")]
		public Color DetectionColor;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _scannerMaterial;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _startTime;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _canAnimate;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool _isEnabled;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private bool _wasDetected;

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x134AFD0", Offset = "0x134AFD0", VA = "0x134AFD0")]
		public void ActivateScanner()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x134B018", Offset = "0x134B018", VA = "0x134B018")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x134B11C", Offset = "0x134B11C", VA = "0x134B11C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x134B21C", Offset = "0x134B21C", VA = "0x134B21C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x134B224", Offset = "0x134B224", VA = "0x134B224")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x134B504", Offset = "0x134B504", VA = "0x134B504")]
		public BeamScannerController()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public sealed class TopographicScannable : MonoBehaviour
	{
		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material ScannableMaterial;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationModule HighlightIntensity;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _scannableMaterialInstance;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _startTime;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6548", Offset = "0xAB6548")]
		private bool <IsHighlighted>k__BackingField;

		[Token(Token = "0x1700042E")]
		public bool IsHighlighted
		{
			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0xFEE670", Offset = "0xFEE670", VA = "0xFEE670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC00C4", Offset = "0xAC00C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xFEE678", Offset = "0xFEE678", VA = "0xFEE678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC00D4", Offset = "0xAC00D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xFEE684", Offset = "0xFEE684", VA = "0xFEE684")]
		public void Highlight()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xFEE6B4", Offset = "0xFEE6B4", VA = "0xFEE6B4")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xFEE6BC", Offset = "0xFEE6BC", VA = "0xFEE6BC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xFEE72C", Offset = "0xFEE72C", VA = "0xFEE72C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xFEE898", Offset = "0xFEE898", VA = "0xFEE898")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xFEE924", Offset = "0xFEE924", VA = "0xFEE924")]
		public TopographicScannable()
		{
		}
	}
	[Token(Token = "0x2000521")]
	[ExecuteInEditMode]
	public sealed class TopographicScannerController : MonoBehaviour
	{
		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode ScannerKeyCode;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform ScannerOrigin;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material EffectMaterial;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float ScanDistance;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float ScanWidth;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ScanSpeed;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentScanDistance;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isScanning;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TopographicScannable[] _topographicScannables;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera _camera;

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xFEE92C", Offset = "0xFEE92C", VA = "0xFEE92C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xFEE990", Offset = "0xFEE990", VA = "0xFEE990")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xFEEA0C", Offset = "0xFEEA0C", VA = "0xFEEA0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xFEEB8C", Offset = "0xFEEB8C", VA = "0xFEEB8C")]
		private void Activate()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xFEEC04", Offset = "0xFEEC04", VA = "0xFEEC04")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xFEED24", Offset = "0xFEED24", VA = "0xFEED24")]
		public TopographicScannerController()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public static class ObjectAreaFinder
	{
		[Serializable]
		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8308", Offset = "0xAA8308")]
		private sealed class <>c__0<T>
		{
			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__0<T> <>9;

			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Collider, bool> <>9__0_0;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Collider, T> <>9__0_1;

			[Token(Token = "0x6001C0A")]
			public <>c__0()
			{
			}

			[Token(Token = "0x6001C0B")]
			internal bool <FindObjects>b__0_0(Collider c)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C0C")]
			internal T <FindObjects>b__0_1(Collider c)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001C08")]
		public static List<T> FindObjects<T>(Vector3 position, float areaRadius, LayerMask layerMask)
		{
			return null;
		}
	}
}
namespace QFXToolKit
{
	[Serializable]
	[Token(Token = "0x2000524")]
	public class AnimationModule
	{
		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve AnimationCurve;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ValueMultiplier;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float TimeMultiplier;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6558", Offset = "0xAB6558")]
		private bool <IsAnimationFinished>k__BackingField;

		[Token(Token = "0x1700042F")]
		public bool IsAnimationFinished
		{
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x134537C", Offset = "0x134537C", VA = "0x134537C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC00E4", Offset = "0xAC00E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0x1345384", Offset = "0x1345384", VA = "0x1345384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC00F4", Offset = "0xAC00F4")]
			set
			{
			}
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x1345390", Offset = "0x1345390", VA = "0x1345390")]
		public float Evaluate(float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x1345464", Offset = "0x1345464", VA = "0x1345464")]
		public AnimationModule()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000525")]
	public class DynamicShaderParameter
	{
		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationModule AnimationModule;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ParameterName;

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x1C2F924", Offset = "0x1C2F924", VA = "0x1C2F924")]
		public DynamicShaderParameter()
		{
		}
	}
	[Token(Token = "0x2000526")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8318", Offset = "0xAA8318")]
	public class LightAnimator : ControlledObject
	{
		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationModule LightIntensity;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _startedTime;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Light _light;

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x24E0D48", Offset = "0x24E0D48", VA = "0x24E0D48", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x24E0DC0", Offset = "0x24E0DC0", VA = "0x24E0DC0", Slot = "10")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x24E0E04", Offset = "0x24E0E04", VA = "0x24E0E04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x24E0E84", Offset = "0x24E0E84", VA = "0x24E0E84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x24E0EE4", Offset = "0x24E0EE4", VA = "0x24E0EE4")]
		public LightAnimator()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public class ShaderAnimator : ControlledObject
	{
		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DynamicShaderParameter[] DynamicShaderParameters;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _startTime;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Material> _materials;

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x104260C", Offset = "0x104260C", VA = "0x104260C", Slot = "8")]
		public override void Setup()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x1042958", Offset = "0x1042958", VA = "0x1042958", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x1042988", Offset = "0x1042988", VA = "0x1042988")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x104274C", Offset = "0x104274C", VA = "0x104274C")]
		private void UpdateMaterials(float time)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x10429C4", Offset = "0x10429C4", VA = "0x10429C4")]
		public ShaderAnimator()
		{
		}
	}
	[Token(Token = "0x2000528")]
	public class ShaderParameterSetter : ControlledObject
	{
		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ParameterName;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float ParameterValue;

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1042F88", Offset = "0x1042F88", VA = "0x1042F88", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x1043094", Offset = "0x1043094", VA = "0x1043094")]
		public ShaderParameterSetter()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class BeamWeapon : ControlledObject
	{
		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform StartTransform;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Vector3 EndPosition;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject LaunchParticleSystem;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Light LaunchLight;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject ImpactParticleSystem;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float ImpactOffset;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LineRenderer LineRenderer;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float MaxDistance;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float LightIntensity;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float LineRendererWidth;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float AppearSpeed;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _appearProgress;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _beamActivatedTime;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ParticleSystem _launchPs;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ParticleSystem _impactPs;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x134B50C", Offset = "0x134B50C", VA = "0x134B50C", Slot = "8")]
		public override void Setup()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x134B6D8", Offset = "0x134B6D8", VA = "0x134B6D8", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x134B71C", Offset = "0x134B71C", VA = "0x134B71C", Slot = "10")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x134B760", Offset = "0x134B760", VA = "0x134B760")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x134B9C4", Offset = "0x134B9C4", VA = "0x134B9C4")]
		private void UpdateLineRenderer()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x134BA40", Offset = "0x134BA40", VA = "0x134BA40")]
		public BeamWeapon()
		{
		}
	}
	[Token(Token = "0x200052A")]
	public class ColliderCollisionDetector : ControlledObject, ICollisionsProvider
	{
		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool IsSingleCollisionMode;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool _wasCollided;

		[Token(Token = "0x14000017")]
		public event Action<CollisionPoint> OnCollision
		{
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x108318C", Offset = "0x108318C", VA = "0x108318C", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0104", Offset = "0xAC0104")]
			add
			{
			}
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x108322C", Offset = "0x108322C", VA = "0x108322C", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0114", Offset = "0xAC0114")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x10832CC", Offset = "0x10832CC", VA = "0x10832CC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x1083450", Offset = "0x1083450", VA = "0x1083450")]
		public ColliderCollisionDetector()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class CollisionPoint
	{
		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Point;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 Normal;

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x1083448", Offset = "0x1083448", VA = "0x1083448")]
		public CollisionPoint()
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class DistanceCollisionDetector : ControlledObject, ICollisionsProvider
	{
		[Token(Token = "0x200052D")]
		public enum DistanceComparisonMode
		{
			[Token(Token = "0x4002084")]
			Target,
			[Token(Token = "0x4002085")]
			Raycast
		}

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool IsSingleCollisionMode;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float CollisionDistance;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 TargetPosition;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public DistanceComparisonMode DistanceMode;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _wasCollided;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _transform;

		[Token(Token = "0x14000018")]
		public event Action<CollisionPoint> OnCollision
		{
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0x1090120", Offset = "0x1090120", VA = "0x1090120", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0124", Offset = "0xAC0124")]
			add
			{
			}
			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0x10901C0", Offset = "0x10901C0", VA = "0x10901C0", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0134", Offset = "0xAC0134")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x1090260", Offset = "0x1090260", VA = "0x1090260")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x1090288", Offset = "0x1090288", VA = "0x1090288")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x1090464", Offset = "0x1090464", VA = "0x1090464")]
		public DistanceCollisionDetector()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public interface ICollisionsProvider
	{
		[Token(Token = "0x14000019")]
		event Action<CollisionPoint> OnCollision;
	}
	[Serializable]
	[Token(Token = "0x200052F")]
	public class FxObject : ICloneable
	{
		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Fx;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FxRotationType FxRotation;

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x13C79C4", Offset = "0x13C79C4", VA = "0x13C79C4", Slot = "5")]
		public virtual object Clone()
		{
			return null;
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x13C7A40", Offset = "0x13C7A40", VA = "0x13C7A40")]
		public FxObject()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public enum FxRotationType
	{
		[Token(Token = "0x4002089")]
		Default,
		[Token(Token = "0x400208A")]
		Normal,
		[Token(Token = "0x400208B")]
		LookAtEmitter
	}
	[Token(Token = "0x2000531")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8378", Offset = "0xAA8378")]
	public class CollisionBasedFxInstancer : ControlledObject
	{
		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FxObject[] FxObjects;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _wasCollided;

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x10837E8", Offset = "0x10837E8", VA = "0x10837E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x1083974", Offset = "0x1083974", VA = "0x1083974")]
		public CollisionBasedFxInstancer()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x1083984", Offset = "0x1083984", VA = "0x1083984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0164", Offset = "0xAC0164")]
		private void <Awake>b__2_0(CollisionPoint collisionPoint)
		{
		}
	}
	[Token(Token = "0x2000532")]
	public static class FxObjectInstancer
	{
		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x13C7A50", Offset = "0x13C7A50", VA = "0x13C7A50")]
		public static void InstantiateFx(FxObject fxObject, Vector3 targetPosition, Vector3 targetRotation)
		{
		}
	}
	[Token(Token = "0x2000533")]
	public interface IEmitterKeeper
	{
		[Token(Token = "0x17000430")]
		Transform EmitterTransform
		{
			[Token(Token = "0x6001C36")]
			get;
			[Token(Token = "0x6001C37")]
			set;
		}
	}
	[Token(Token = "0x2000534")]
	public class ComponentsStartupController : ControlledObject
	{
		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControlledObject[] ControlledObjects;

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x10875DC", Offset = "0x10875DC", VA = "0x10875DC", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x108767C", Offset = "0x108767C", VA = "0x108767C")]
		public ComponentsStartupController()
		{
		}
	}
	[Token(Token = "0x2000535")]
	public class ControlledObject : MonoBehaviour, IControlledObject
	{
		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool RunAtStart;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Delay;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6598", Offset = "0xAB6598")]
		private bool <IsRunning>k__BackingField;

		[Token(Token = "0x17000431")]
		public bool IsRunning
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0x1087894", Offset = "0x1087894", VA = "0x1087894", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0174", Offset = "0xAC0174")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0x108789C", Offset = "0x108789C", VA = "0x108789C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0184", Offset = "0xAC0184")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x10878A8", Offset = "0x10878A8", VA = "0x10878A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x1087940", Offset = "0x1087940", VA = "0x1087940", Slot = "8")]
		public virtual void Setup()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x1087670", Offset = "0x1087670", VA = "0x1087670", Slot = "9")]
		public virtual void Run()
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x1087944", Offset = "0x1087944", VA = "0x1087944", Slot = "10")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x1083464", Offset = "0x1083464", VA = "0x1083464")]
		public ControlledObject()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x108794C", Offset = "0x108794C", VA = "0x108794C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0194", Offset = "0xAC0194")]
		private void <OnEnable>b__6_0()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public interface IControlledObject
	{
		[Token(Token = "0x17000432")]
		bool IsRunning
		{
			[Token(Token = "0x6001C42")]
			get;
		}

		[Token(Token = "0x6001C43")]
		void Setup();

		[Token(Token = "0x6001C44")]
		void Run();

		[Token(Token = "0x6001C45")]
		void Stop();
	}
	[Token(Token = "0x2000537")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA83D8", Offset = "0xAA83D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA83D8", Offset = "0xAA83D8")]
	public class PhysicsHomingMissile : ControlledObject
	{
		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Velocity;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LaunchForce;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Turn;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool FollowTarget;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform TargetTransform;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 TargetPosition;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 LaunchPosition;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float FocusOnTargetDelay;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool IsDebug;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isCollided;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _shouldFocusOnTarget;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DistanceCollisionDetector _distanceCollisionDetector;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _wasCollided;

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xCD7890", Offset = "0xCD7890", VA = "0xCD7890", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xCD79C8", Offset = "0xCD79C8", VA = "0xCD79C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xCD7B9C", Offset = "0xCD7B9C", VA = "0xCD7B9C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xCD7DCC", Offset = "0xCD7DCC", VA = "0xCD7DCC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xCD7EA4", Offset = "0xCD7EA4", VA = "0xCD7EA4")]
		public PhysicsHomingMissile()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xCD7EAC", Offset = "0xCD7EAC", VA = "0xCD7EAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC01A4", Offset = "0xAC01A4")]
		private void <Run>b__14_0()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xCD7EB8", Offset = "0xCD7EB8", VA = "0xCD7EB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC01B4", Offset = "0xAC01B4")]
		private void <Awake>b__15_0(CollisionPoint <p0>)
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class PhysicsHomingMissileLauncher : ControlledObject
	{
		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA846C", Offset = "0xAA846C")]
		private sealed class <InstantiateProjectiles>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PhysicsHomingMissileLauncher <>4__this;

			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <targetCounts>5__2;

			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <targetIdx>5__3;

			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<GameObject> <targetsGameObjects>5__4;

			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<Vector3> <targetsPositions>5__5;

			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__6;

			[Token(Token = "0x17000433")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C54")]
				[Address(RVA = "0xDB69B0", Offset = "0xDB69B0", VA = "0xDB69B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000434")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C56")]
				[Address(RVA = "0xDB69F8", Offset = "0xDB69F8", VA = "0xDB69F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C51")]
			[Address(RVA = "0xDB6524", Offset = "0xDB6524", VA = "0xDB6524")]
			[DebuggerHidden]
			public <InstantiateProjectiles>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001C52")]
			[Address(RVA = "0xDB6550", Offset = "0xDB6550", VA = "0xDB6550", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C53")]
			[Address(RVA = "0xDB6554", Offset = "0xDB6554", VA = "0xDB6554", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C55")]
			[Address(RVA = "0xDB69B8", Offset = "0xDB69B8", VA = "0xDB69B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool FollowTarget;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform LaunchTarget;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhysicsHomingMissile Missile;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MissileVelocity;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float MissileLaunchForce;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MissileTurn;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int MissilesCount;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float InstantiateMissileDelay;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float FocusOnTargetDelay;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float RandomSphereSize;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TargetMarker _targetMarker;

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xCD7F44", Offset = "0xCD7F44", VA = "0xCD7F44", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xCD7FA0", Offset = "0xCD7FA0", VA = "0xCD7FA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xCD7FF4", Offset = "0xCD7FF4", VA = "0xCD7FF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC01C4", Offset = "0xAC01C4")]
		private IEnumerator InstantiateProjectiles()
		{
			return null;
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xCD8060", Offset = "0xCD8060", VA = "0xCD8060")]
		public PhysicsHomingMissileLauncher()
		{
		}
	}
	[Token(Token = "0x200053A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA847C", Offset = "0xAA847C")]
	public class PhysicsMotion : ControlledObject
	{
		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float ColliderRadius;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Speed;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Mass;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Drag;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool UseGravity;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ForceMode ForceMode;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform Target;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool DestroyAfterCollision;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float DestroyAfterCollisionTimeout;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SphereCollider _sphereCollider;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xCD8070", Offset = "0xCD8070", VA = "0xCD8070", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xCD81A8", Offset = "0xCD81A8", VA = "0xCD81A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xCD83AC", Offset = "0xCD83AC", VA = "0xCD83AC")]
		public PhysicsMotion()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xCD83C0", Offset = "0xCD83C0", VA = "0xCD83C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0274", Offset = "0xAC0274")]
		private void <Awake>b__12_0(CollisionPoint <p0>)
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class LookAtMouse : MonoBehaviour
	{
		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RotationSpeed;

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x24E735C", Offset = "0x24E735C", VA = "0x24E735C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x24E74D8", Offset = "0x24E74D8", VA = "0x24E74D8")]
		public LookAtMouse()
		{
		}
	}
	[Token(Token = "0x200053C")]
	public class MouseControlledObjectLauncher : MonoBehaviour
	{
		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControlledObject ControlledObject;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MouseButtonCode;

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xBEE7B8", Offset = "0xBEE7B8", VA = "0xBEE7B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xBEE7D8", Offset = "0xBEE7D8", VA = "0xBEE7D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xBEE848", Offset = "0xBEE848", VA = "0xBEE848")]
		public MouseControlledObjectLauncher()
		{
		}
	}
	[Token(Token = "0x200053D")]
	public class ProjectileLauncher : ControlledObject
	{
		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Projectile;

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x1621BE4", Offset = "0x1621BE4", VA = "0x1621BE4", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x1621DE8", Offset = "0x1621DE8", VA = "0x1621DE8")]
		public ProjectileLauncher()
		{
		}
	}
	[Token(Token = "0x200053E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA84DC", Offset = "0xAA84DC")]
	public class SimpleProjectile : ControlledObject, IEmitterKeeper
	{
		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Speed;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DestroyAfterCollision;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DestroyAfterCollisionTimeout;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _transform;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _wasCollided;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB65A8", Offset = "0xAB65A8")]
		private Transform <EmitterTransform>k__BackingField;

		[Token(Token = "0x17000435")]
		public Transform EmitterTransform
		{
			[Token(Token = "0x6001C62")]
			[Address(RVA = "0x1045A50", Offset = "0x1045A50", VA = "0x1045A50", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0284", Offset = "0xAC0284")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C63")]
			[Address(RVA = "0x1045A58", Offset = "0x1045A58", VA = "0x1045A58", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0294", Offset = "0xAC0294")]
			set
			{
			}
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x1045A60", Offset = "0x1045A60", VA = "0x1045A60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x1045BA8", Offset = "0x1045BA8", VA = "0x1045BA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x1045C70", Offset = "0x1045C70", VA = "0x1045C70")]
		public SimpleProjectile()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x1045C80", Offset = "0x1045C80", VA = "0x1045C80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC02A4", Offset = "0xAC02A4")]
		private void <Awake>b__9_0(CollisionPoint collisionPoint)
		{
		}
	}
	[Token(Token = "0x200053F")]
	public sealed class SimpleProjectileWeapon : ControlledObject
	{
		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA853C", Offset = "0xAA853C")]
		private sealed class <Fire>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleProjectileWeapon <>4__this;

			[Token(Token = "0x17000436")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C71")]
				[Address(RVA = "0xE68410", Offset = "0xE68410", VA = "0xE68410", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000437")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C73")]
				[Address(RVA = "0xE68458", Offset = "0xE68458", VA = "0xE68458", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xE68114", Offset = "0xE68114", VA = "0xE68114")]
			[DebuggerHidden]
			public <Fire>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0xE68140", Offset = "0xE68140", VA = "0xE68140", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xE68144", Offset = "0xE68144", VA = "0xE68144", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C72")]
			[Address(RVA = "0xE68418", Offset = "0xE68418", VA = "0xE68418", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject LaunchParticleSystem;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform LaunchTransform;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LightAnimator LightAnimator;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject Projectile;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float FireRate;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _isFireAllowed;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem _launchPs;

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x1045D44", Offset = "0x1045D44", VA = "0x1045D44", Slot = "8")]
		public override void Setup()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x1045E54", Offset = "0x1045E54", VA = "0x1045E54", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x1045EC4", Offset = "0x1045EC4", VA = "0x1045EC4", Slot = "10")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x1045EFC", Offset = "0x1045EFC", VA = "0x1045EFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x1045F68", Offset = "0x1045F68", VA = "0x1045F68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC02B4", Offset = "0xAC02B4")]
		private IEnumerator Fire()
		{
			return null;
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x1045FD4", Offset = "0x1045FD4", VA = "0x1045FD4")]
		public SimpleProjectileWeapon()
		{
		}
	}
	[Token(Token = "0x2000541")]
	public class GroundAttacher : ControlledObject
	{
		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool OverrideRotation;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 Offset;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isAttached;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _transform;

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x24D9760", Offset = "0x24D9760", VA = "0x24D9760")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x24D9788", Offset = "0x24D9788", VA = "0x24D9788")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x24D9914", Offset = "0x24D9914", VA = "0x24D9914")]
		public GroundAttacher()
		{
		}
	}
	[Token(Token = "0x2000542")]
	public static class InvokeUtil
	{
		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA854C", Offset = "0xAA854C")]
		private sealed class <RunLaterCoroutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waitSeconds;

			[Token(Token = "0x40020D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action method;

			[Token(Token = "0x17000438")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C7C")]
				[Address(RVA = "0xCC11B4", Offset = "0xCC11B4", VA = "0xCC11B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000439")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C7E")]
				[Address(RVA = "0xCC11FC", Offset = "0xCC11FC", VA = "0xCC11FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C79")]
			[Address(RVA = "0xCC10D4", Offset = "0xCC10D4", VA = "0xCC10D4")]
			[DebuggerHidden]
			public <RunLaterCoroutine>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0xCC1100", Offset = "0xCC1100", VA = "0xCC1100", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xCC1104", Offset = "0xCC1104", VA = "0xCC1104", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0xCC11BC", Offset = "0xCC11BC", VA = "0xCC11BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x122D5CC", Offset = "0x122D5CC", VA = "0x122D5CC")]
		public static void RunLater(MonoBehaviour monoBehaviour, Action method, float waitSeconds)
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x122D61C", Offset = "0x122D61C", VA = "0x122D61C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC0364", Offset = "0xAC0364")]
		public static IEnumerator RunLaterCoroutine(Action method, float waitSeconds)
		{
			return null;
		}
	}
	[Token(Token = "0x2000544")]
	public class MaterialAdder : ControlledObject
	{
		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material Material;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LifeTime;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Renderer, Material[]> _rendToMaterialsMap;

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x1A16070", Offset = "0x1A16070", VA = "0x1A16070", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x1A16444", Offset = "0x1A16444", VA = "0x1A16444")]
		public void Revert()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x1A165DC", Offset = "0x1A165DC", VA = "0x1A165DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x1A16674", Offset = "0x1A16674", VA = "0x1A16674")]
		public MaterialAdder()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x1A1667C", Offset = "0x1A1667C", VA = "0x1A1667C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0414", Offset = "0xAC0414")]
		private void <OnEnable>b__5_0()
		{
		}
	}
	[Token(Token = "0x2000545")]
	public class MaterialReplacer : ControlledObject
	{
		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material Material;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LifeTime;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Renderer, Material[]> _originalMaterials;

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x1A17174", Offset = "0x1A17174", VA = "0x1A17174", Slot = "8")]
		public override void Setup()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x1A1734C", Offset = "0x1A1734C", VA = "0x1A1734C", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x1A173DC", Offset = "0x1A173DC", VA = "0x1A173DC")]
		public MaterialReplacer()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x1A173E4", Offset = "0x1A173E4", VA = "0x1A173E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0424", Offset = "0xAC0424")]
		private void <Run>b__4_0()
		{
		}
	}
	[Token(Token = "0x2000546")]
	public static class MaterialUtil
	{
		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x1A171BC", Offset = "0x1A171BC", VA = "0x1A171BC")]
		public static void ReplaceMaterial(GameObject targetGo, Material templateMaterial)
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x1A16244", Offset = "0x1A16244", VA = "0x1A16244")]
		public static void AddMaterial(GameObject targetGo, Material templateMaterial)
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x1A164A0", Offset = "0x1A164A0", VA = "0x1A164A0")]
		public static void ReplaceMaterial(Dictionary<Renderer, Material[]> rendererToMaterials)
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x1A1611C", Offset = "0x1A1611C", VA = "0x1A1611C")]
		public static Dictionary<Renderer, Material[]> GetOriginalMaterials(GameObject targetGo)
		{
			return null;
		}
	}
	[Token(Token = "0x2000547")]
	public class SelfDestroyer : ControlledObject
	{
		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float LifeTime;

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x1038EA0", Offset = "0x1038EA0", VA = "0x1038EA0", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x1038F34", Offset = "0x1038F34", VA = "0x1038F34")]
		public SelfDestroyer()
		{
		}
	}
	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA855C", Offset = "0xAA855C")]
	public class TargetMarker : ControlledObject
	{
		[Token(Token = "0x2000549")]
		public enum MarkMode
		{
			[Token(Token = "0x40020E9")]
			GameObject,
			[Token(Token = "0x40020EA")]
			Position
		}

		[Token(Token = "0x200054A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA85BC", Offset = "0xAA85BC")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TargetMarker <>4__this;

			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RaycastHit hit;

			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xE698E4", Offset = "0xE698E4", VA = "0xE698E4")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001C94")]
			[Address(RVA = "0xE698EC", Offset = "0xE698EC", VA = "0xE698EC")]
			internal void <Run>b__0()
			{
			}
		}

		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA85CC", Offset = "0xAA85CC")]
		private sealed class <>c__DisplayClass12_1
		{
			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MaterialAdder materialAdded;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int gameObjectId;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass12_0 CS$<>8__locals1;

			[Token(Token = "0x6001C95")]
			[Address(RVA = "0xE69958", Offset = "0xE69958", VA = "0xE69958")]
			public <>c__DisplayClass12_1()
			{
			}

			[Token(Token = "0x6001C96")]
			[Address(RVA = "0xE69960", Offset = "0xE69960", VA = "0xE69960")]
			internal void <Run>b__1()
			{
			}
		}

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float LifeTime;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FxObject MarkFx;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MarkMode MarkTargetMode;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int MaxTargets;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<int, GameObject> _markedObjects;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<Vector3> _markedPositions;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MaterialAdder _materialAdder;

		[Token(Token = "0x1700043A")]
		public List<GameObject> MarkedGameObjects
		{
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0xF044A0", Offset = "0xF044A0", VA = "0xF044A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043B")]
		public List<Vector3> MarkedPositions
		{
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0xF04510", Offset = "0xF04510", VA = "0xF04510")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xF04588", Offset = "0xF04588", VA = "0xF04588")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xF045DC", Offset = "0xF045DC", VA = "0xF045DC", Slot = "9")]
		public override void Run()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xF04984", Offset = "0xF04984", VA = "0xF04984")]
		public TargetMarker()
		{
		}
	}
}
namespace ProceduralAurora
{
	[Token(Token = "0x200054C")]
	public enum AudioVisualizationSource
	{
		[Token(Token = "0x40020F1")]
		None,
		[Token(Token = "0x40020F2")]
		AvgAmplitude,
		[Token(Token = "0x40020F3")]
		Frequencies
	}
	[Token(Token = "0x200054D")]
	public class AuroraMain : MonoBehaviour
	{
		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB65B8", Offset = "0xAB65B8")]
		public bool useAudioSourceVisualization;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int audioSamples;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FFTWindow audioSamplingWindow;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float audioMultiplier;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB65F0", Offset = "0xAB65F0")]
		public float audioFrequenciesScale;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB6608", Offset = "0xAB6608")]
		public float audioBufferSmoothness;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public AudioVisualizationSource audioVisualizeColorGradient;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioVisualizationSource audioVisualizeOpacity;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public AudioVisualizationSource audioVisualizePositionOffset;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioVisualizationSource audioVisualizeFrequency;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public AudioVisualizationSource audioVisualizeHeight;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB6620", Offset = "0xAB6620")]
		public float audioVisualizePositionOffsetMutliplier;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioHeightMultiplier;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Gradient audioColorGradient;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB6638", Offset = "0xAB6638")]
		public int auroraSeed;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB6670", Offset = "0xAB6670")]
		public int auroraParticlesCount;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB668C", Offset = "0xAB668C")]
		public float auroraAnimationFrequency;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB66A8", Offset = "0xAB66A8")]
		public float auroraRotation;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float auroraCurvature;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 auroraSizes;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float auroraParticleThickness;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB66C4", Offset = "0xAB66C4")]
		public bool auroraVolumetric;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public bool auroraCircular;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 auroraVolumetricRange;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB66FC", Offset = "0xAB66FC")]
		public bool auroraLights;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB6734", Offset = "0xAB6734")]
		public int auroraLightsCount;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float auroraLightsRange;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float auroraLightsIntesity;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB6750", Offset = "0xAB6750")]
		public Gradient auroraColorMain;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB6788", Offset = "0xAB6788")]
		public Material auroraMaterialMain;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ParticleSystem pSystem;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ParticleSystem.MainModule p_mMain;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ParticleSystem.EmissionModule p_mEmission;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ParticleSystemRenderer pRenderer;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ParticleSystem.Particle[] p_Particles;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Light[] l_Lights;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float[] aSamples;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float[] aBuffer;

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x134959C", Offset = "0x134959C", VA = "0x134959C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x13495A0", Offset = "0x13495A0", VA = "0x13495A0")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x1349938", Offset = "0x1349938", VA = "0x1349938")]
		private void InitializeLights()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x1349B48", Offset = "0x1349B48", VA = "0x1349B48")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x134A190", Offset = "0x134A190", VA = "0x134A190")]
		public AuroraMain()
		{
		}
	}
}
namespace PhysSound
{
	[Token(Token = "0x200054E")]
	public abstract class PhysSoundBase : MonoBehaviour
	{
		[Token(Token = "0x6001C9C")]
		public abstract PhysSoundMaterial GetPhysSoundMaterial(Vector3 contactPoint);

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xCD376C", Offset = "0xCD376C", VA = "0xCD376C")]
		protected PhysSoundBase()
		{
		}
	}
	[Token(Token = "0x200054F")]
	public class PhysSoundMaterial : ScriptableObject
	{
		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MaterialTypeKey;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int FallbackTypeIndex;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int FallbackTypeKey;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Range RelativeVelocityThreshold;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float PitchRandomness;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float SlidePitchMod;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float SlideVolMultiplier;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ImpactNormalBias;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask CollisionMask;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool UseCollisionVelocity;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool ScaleImpactVolume;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<PhysSoundAudioSet> AudioSets;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, PhysSoundAudioSet> audioSetDic;

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xCD37D4", Offset = "0xCD37D4", VA = "0xCD37D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xCD3D8C", Offset = "0xCD3D8C", VA = "0xCD3D8C")]
		public AudioClip GetImpactAudio(GameObject otherObject, Vector3 relativeVel, Vector3 norm, Vector3 contact, int layer = -1)
		{
			return null;
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xCD3364", Offset = "0xCD3364", VA = "0xCD3364")]
		public float GetSlideVolume(Vector3 relativeVel, Vector3 norm)
		{
			return default(float);
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xCD4020", Offset = "0xCD4020", VA = "0xCD4020")]
		public float GetImpactVolume(Vector3 relativeVel, Vector3 norm)
		{
			return default(float);
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xCD40E8", Offset = "0xCD40E8", VA = "0xCD40E8")]
		public bool HasAudioSet(int keyIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xCD3030", Offset = "0xCD3030", VA = "0xCD3030")]
		public PhysSoundAudioSet GetAudioSet(int keyIndex)
		{
			return null;
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xCD4230", Offset = "0xCD4230", VA = "0xCD4230")]
		public string[] GetFallbackAudioSets()
		{
			return null;
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xCD3314", Offset = "0xCD3314", VA = "0xCD3314")]
		public bool CollideWith(GameObject g)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xCD43C4", Offset = "0xCD43C4", VA = "0xCD43C4")]
		public PhysSoundMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000550")]
	public class PhysSoundAudioSet
	{
		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Key;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioClip> Impacts;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Slide;

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xCD3600", Offset = "0xCD3600", VA = "0xCD3600")]
		public AudioClip GetImpact(float vel, bool random)
		{
			return null;
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xCD36E4", Offset = "0xCD36E4", VA = "0xCD36E4")]
		public bool CompareKeyIndex(int k)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xCD36F4", Offset = "0xCD36F4", VA = "0xCD36F4")]
		public PhysSoundAudioSet()
		{
		}
	}
	[Token(Token = "0x2000551")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA85DC", Offset = "0xAA85DC")]
	public class PhysSoundObject : PhysSoundBase
	{
		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PhysSoundMaterial SoundMaterial;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource ImpactAudio;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float baseImpactVol;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float baseImpactPitch;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool AutoCreateSources;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool PlayClipAtPoint;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<PhysSoundAudioContainer> AudioContainers;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, PhysSoundAudioContainer> audioContainersDic;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 prevVelocity;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool setPrev;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody r;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D r2D;

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xCD4460", Offset = "0xCD4460", VA = "0xCD4460")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xCD4D58", Offset = "0xCD4D58", VA = "0xCD4D58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xCD4E98", Offset = "0xCD4E98", VA = "0xCD4E98")]
		public void SetEnabled(bool enable)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xCD5040", Offset = "0xCD5040", VA = "0xCD5040", Slot = "4")]
		public override PhysSoundMaterial GetPhysSoundMaterial(Vector3 contactPoint)
		{
			return null;
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xCD5048", Offset = "0xCD5048", VA = "0xCD5048")]
		private void playImpactSound(GameObject otherObject, Vector3 relativeVelocity, Vector3 normal, Vector3 contactPoint)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xCD5480", Offset = "0xCD5480", VA = "0xCD5480")]
		private void setSlideTargetVolumes(GameObject otherObject, Vector3 relativeVelocity, Vector3 normal, Vector3 contactPoint, bool exit)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xCD5B44", Offset = "0xCD5B44", VA = "0xCD5B44")]
		public void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xCD5CE8", Offset = "0xCD5CE8", VA = "0xCD5CE8")]
		public void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xCD5F98", Offset = "0xCD5F98", VA = "0xCD5F98")]
		public void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xCD610C", Offset = "0xCD610C", VA = "0xCD610C")]
		private void OnCollisionEnter2D(Collision2D c)
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xCD627C", Offset = "0xCD627C", VA = "0xCD627C")]
		private void OnCollisionStay2D(Collision2D c)
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xCD650C", Offset = "0xCD650C", VA = "0xCD650C")]
		private void OnCollisionExit2D(Collision2D c)
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xCD6658", Offset = "0xCD6658", VA = "0xCD6658")]
		public bool HasAudioContainer(int keyIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xCD67A0", Offset = "0xCD67A0", VA = "0xCD67A0")]
		public void AddAudioContainer(int keyIndex)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xCD6834", Offset = "0xCD6834", VA = "0xCD6834")]
		public void RemoveAudioContainer(int keyIndex)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xCD6914", Offset = "0xCD6914", VA = "0xCD6914")]
		public PhysSoundObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000552")]
	public class PhysSoundAudioContainer
	{
		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int KeyIndex;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource SlideAudio;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhysSoundMaterial mat;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float targetVolume;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float baseVol;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float basePitch;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float basePitchRand;

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xCD2EF4", Offset = "0xCD2EF4", VA = "0xCD2EF4")]
		public PhysSoundAudioContainer(int k)
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xCD2F20", Offset = "0xCD2F20", VA = "0xCD2F20")]
		public void Initialize(PhysSoundMaterial m)
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xCD3174", Offset = "0xCD3174", VA = "0xCD3174")]
		public void SetTargetVolumeAndPitch(GameObject otherObject, Vector3 relativeVelocity, Vector3 normal, bool exit, float mod = 1f)
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xCD33DC", Offset = "0xCD33DC", VA = "0xCD33DC")]
		public void UpdateVolume()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xCD34C0", Offset = "0xCD34C0", VA = "0xCD34C0")]
		public bool CompareKeyIndex(int k)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xCD34D0", Offset = "0xCD34D0", VA = "0xCD34D0")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xCD3570", Offset = "0xCD3570", VA = "0xCD3570")]
		public void Enable()
		{
		}
	}
	[Token(Token = "0x2000553")]
	public class PhysSoundTempAudio : MonoBehaviour
	{
		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource audioSource;

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xCD6994", Offset = "0xCD6994", VA = "0xCD6994")]
		public void Initialize(PhysSoundTempAudioPool pool)
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xCD6A50", Offset = "0xCD6A50", VA = "0xCD6A50")]
		public void PlayClip(AudioClip clip, Vector3 point, AudioSource template, float volume, float pitch)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xCD6E04", Offset = "0xCD6E04", VA = "0xCD6E04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xCD6E84", Offset = "0xCD6E84", VA = "0xCD6E84")]
		public PhysSoundTempAudio()
		{
		}
	}
	[Token(Token = "0x2000554")]
	public class PhysSoundTempAudioPool : MonoBehaviour
	{
		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int TempAudioPoolSize;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static PhysSoundTempAudioPool Instance;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhysSoundTempAudio[] audioSources;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int lastAvailable;

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xCD4C38", Offset = "0xCD4C38", VA = "0xCD4C38")]
		public static void Create()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xCD4B54", Offset = "0xCD4B54", VA = "0xCD4B54")]
		public static AudioSource GetAudioSourceCopy(AudioSource template, GameObject g)
		{
			return null;
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xCD6B84", Offset = "0xCD6B84", VA = "0xCD6B84")]
		public static void GetAudioSourceCopy(AudioSource template, AudioSource target)
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xCD6E8C", Offset = "0xCD6E8C", VA = "0xCD6E8C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xCD530C", Offset = "0xCD530C", VA = "0xCD530C")]
		public void PlayClip(AudioClip clip, Vector3 point, AudioSource template, float volume, float pitch)
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xCD702C", Offset = "0xCD702C", VA = "0xCD702C")]
		public PhysSoundTempAudioPool()
		{
		}
	}
	[Token(Token = "0x2000555")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA8614", Offset = "0xAA8614")]
	public class PhysSoundTerrain : PhysSoundBase
	{
		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Terrain Terrain;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PhysSoundMaterial> SoundMaterials;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, PhysSoundComposition> compDic;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TerrainData terrainData;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 terrainPos;

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xCD7084", Offset = "0xCD7084", VA = "0xCD7084")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xCD7298", Offset = "0xCD7298", VA = "0xCD7298", Slot = "4")]
		public override PhysSoundMaterial GetPhysSoundMaterial(Vector3 contactPoint)
		{
			return null;
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xCD5860", Offset = "0xCD5860", VA = "0xCD5860")]
		public Dictionary<int, PhysSoundComposition> GetComposition(Vector3 contactPoint)
		{
			return null;
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xCD7448", Offset = "0xCD7448", VA = "0xCD7448")]
		private float[] getTextureMix(Vector3 worldPos)
		{
			return null;
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xCD73CC", Offset = "0xCD73CC", VA = "0xCD73CC")]
		private int getDominantTexture(Vector3 worldPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xCD75FC", Offset = "0xCD75FC", VA = "0xCD75FC")]
		public PhysSoundTerrain()
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class PhysSoundComposition
	{
		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int KeyIndex;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Value;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Count;

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xCD3774", Offset = "0xCD3774", VA = "0xCD3774")]
		public PhysSoundComposition(int key)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xCD37A0", Offset = "0xCD37A0", VA = "0xCD37A0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xCD37A8", Offset = "0xCD37A8", VA = "0xCD37A8")]
		public void Add(float val)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xCD37C4", Offset = "0xCD37C4", VA = "0xCD37C4")]
		public float GetAverage()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000557")]
	public class PhysSoundTypeList
	{
		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] PhysSoundTypes;

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xCD3CB0", Offset = "0xCD3CB0", VA = "0xCD3CB0")]
		public static string GetKey(int index)
		{
			return null;
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xCD76B4", Offset = "0xCD76B4", VA = "0xCD76B4")]
		public static bool HasKey(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xCD773C", Offset = "0xCD773C", VA = "0xCD773C")]
		public PhysSoundTypeList()
		{
		}
	}
}
namespace ParticlePlayground
{
	[Token(Token = "0x2000558")]
	[ExecuteInEditMode]
	public class PlaygroundC : MonoBehaviour
	{
		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA865C", Offset = "0xAA865C")]
		private sealed class <InitializePlayground>d__152 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundC <>4__this;

			[Token(Token = "0x1700043C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D53")]
				[Address(RVA = "0xDB7260", Offset = "0xDB7260", VA = "0xDB7260", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D55")]
				[Address(RVA = "0xDB72A8", Offset = "0xDB72A8", VA = "0xDB72A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D50")]
			[Address(RVA = "0xDB6B70", Offset = "0xDB6B70", VA = "0xDB6B70")]
			[DebuggerHidden]
			public <InitializePlayground>d__152(int <>1__state)
			{
			}

			[Token(Token = "0x6001D51")]
			[Address(RVA = "0xDB6B9C", Offset = "0xDB6B9C", VA = "0xDB6B9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D52")]
			[Address(RVA = "0xDB6BA0", Offset = "0xDB6BA0", VA = "0xDB6BA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xDB7268", Offset = "0xDB7268", VA = "0xDB7268", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int meshQuantity;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int particlesQuantity;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float version;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string specialVersion;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float globalTime;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float lastTimeUpdated;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float globalDeltaTime;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float globalTimescale;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Vector3 initialTargetPosition;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int skinnedUpdateRate;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static bool triggerSceneRepaint;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static float collisionSleepVelocity;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static int unsafeAutomaticThreadFrames;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Plane[] frustumPlanes;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static bool particleEventBirthInitialized;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static bool particleEventDeathInitialized;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static bool particleEventCollisionInitialized;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static bool particleEventTimeInitialized;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static PlaygroundC reference;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static Transform referenceTransform;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static GameObject referenceGameObject;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<PlaygroundParticlesC> particleSystems;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<ManipulatorObjectC> manipulators;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int paintMaxPositions;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool calculate;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public PIXELMODEC pixelFilterMode;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool autoGroup;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[HideInInspector]
		public bool buildZeroAlphaPixels;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[HideInInspector]
		public bool drawGizmos;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[HideInInspector]
		public bool drawSourcePositions;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool showShuriken;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[HideInInspector]
		public bool paintToolbox;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public float collisionPlaneScale;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool showSnapshotsInHierarchy;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool drawWireframe;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[HideInInspector]
		public bool drawSplinePreview;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public ThreadMethod threadMethod;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public ThreadMethodComponent skinnedMeshThreadMethod;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public ThreadMethodComponent turbulenceThreadMethod;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int maxThreads;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isDoneThread;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool isDoneThreadLocal;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		private bool isDoneThreadSkinned;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		private bool isDoneThreadTurbulence;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int threads;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private static int processorCount;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private static int activeThreads;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private static System.Random random;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private object locker;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private object lockerLocal;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int frameCount;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isReady;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool hasActiveParticleSystems;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		private bool hasLocalNoThreads;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		private bool hasLocalOnePerSystem;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool hasLocalOneForAll;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool hasActiveSkinnedMeshes;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool hasActiveTurbulence;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		private bool isFirstUnsafeAutomaticFrames;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int threadAggregatorRuns;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<int> activeSystems;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ThreadMethod previousThreadMethod;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private ThreadMethodComponent previousSkinnedMeshThreadMethod;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ThreadMethodComponent previousTurbulenceThreadMethod;

		[Token(Token = "0x1400001A")]
		public static event OnPlaygroundParticle particleEventBirth
		{
			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0xCD9034", Offset = "0xCD9034", VA = "0xCD9034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0434", Offset = "0xAC0434")]
			add
			{
			}
			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0xCD912C", Offset = "0xCD912C", VA = "0xCD912C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0444", Offset = "0xAC0444")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public static event OnPlaygroundParticle particleEventDeath
		{
			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0xCD9224", Offset = "0xCD9224", VA = "0xCD9224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0454", Offset = "0xAC0454")]
			add
			{
			}
			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0xCD931C", Offset = "0xCD931C", VA = "0xCD931C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0464", Offset = "0xAC0464")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public static event OnPlaygroundParticle particleEventCollision
		{
			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0xCD9414", Offset = "0xCD9414", VA = "0xCD9414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0474", Offset = "0xAC0474")]
			add
			{
			}
			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0xCD950C", Offset = "0xCD950C", VA = "0xCD950C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0484", Offset = "0xAC0484")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public static event OnPlaygroundParticle particleEventTime
		{
			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0xCD9604", Offset = "0xCD9604", VA = "0xCD9604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0494", Offset = "0xAC0494")]
			add
			{
			}
			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0xCD96FC", Offset = "0xCD96FC", VA = "0xCD96FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC04A4", Offset = "0xAC04A4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xCD97F4", Offset = "0xCD97F4", VA = "0xCD97F4")]
		public static void SendParticleEventBirth(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xCD989C", Offset = "0xCD989C", VA = "0xCD989C")]
		public static void SendParticleEventDeath(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xCD9944", Offset = "0xCD9944", VA = "0xCD9944")]
		public static void SendParticleEventCollision(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xCD99EC", Offset = "0xCD99EC", VA = "0xCD99EC")]
		public static void SendParticleEventTime(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xCD9A94", Offset = "0xCD9A94", VA = "0xCD9A94")]
		public static PlaygroundParticlesC Particle()
		{
			return null;
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xCD9C30", Offset = "0xCD9C30", VA = "0xCD9C30")]
		public static PlaygroundParticlesC ParticleNew()
		{
			return null;
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xCD9DE0", Offset = "0xCD9DE0", VA = "0xCD9DE0")]
		public static PlaygroundParticlesC Particle(Texture2D image, string name, Vector3 position, Quaternion rotation, Vector3 offset, float particleSize, float scale, Material material)
		{
			return null;
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xCD9F08", Offset = "0xCD9F08", VA = "0xCD9F08")]
		public static PlaygroundParticlesC Particle(Texture2D image)
		{
			return null;
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xCDA10C", Offset = "0xCDA10C", VA = "0xCDA10C")]
		public static PlaygroundParticlesC Particle(Texture2D[] images, string name, Vector3 position, Quaternion rotation, Vector3 offset, float particleSize, float scale, Material material)
		{
			return null;
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xCDA134", Offset = "0xCDA134", VA = "0xCDA134")]
		public static PlaygroundParticlesC Particle(Texture2D[] images)
		{
			return null;
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xCDA2D0", Offset = "0xCDA2D0", VA = "0xCDA2D0")]
		public static PlaygroundParticlesC Particle(Mesh mesh, Texture2D texture, string name, Vector3 position, Quaternion rotation, float particleScale, Vector3 offset, Material material)
		{
			return null;
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xCDA488", Offset = "0xCDA488", VA = "0xCDA488")]
		public static PlaygroundParticlesC Particle(Mesh mesh, Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xCDA708", Offset = "0xCDA708", VA = "0xCDA708")]
		public static PlaygroundParticlesC Particle(Mesh[] meshes, Texture2D[] textures, string name, Vector3 position, Quaternion rotation, float particleScale, Vector3[] offsets, Material material)
		{
			return null;
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xCDA720", Offset = "0xCDA720", VA = "0xCDA720")]
		public static PlaygroundParticlesC Particle(Mesh[] meshes, Texture2D[] textures)
		{
			return null;
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xCDA8DC", Offset = "0xCDA8DC", VA = "0xCDA8DC")]
		public static int Emit(PlaygroundParticlesC playgroundParticles)
		{
			return default(int);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xCDA96C", Offset = "0xCDA96C", VA = "0xCDA96C")]
		public static int Emit(PlaygroundParticlesC playgroundParticles, Vector3 position, Vector3 normal, Color color)
		{
			return default(int);
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xCDA9F4", Offset = "0xCDA9F4", VA = "0xCDA9F4")]
		public static void Emit(PlaygroundParticlesC playgroundParticles, bool setEmission)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xCDAA10", Offset = "0xCDAA10", VA = "0xCDAA10")]
		public static void GetPosition(SkinnedWorldObject particleStateWorldObject, bool updateNormals)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xCDAA1C", Offset = "0xCDAA1C", VA = "0xCDAA1C")]
		public static void GetPosition(Vector3[] vertices, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xCDAA24", Offset = "0xCDAA24", VA = "0xCDAA24")]
		public static void GetNormals(Vector3[] normals, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xCDAA2C", Offset = "0xCDAA2C", VA = "0xCDAA2C")]
		public static void SetColor(PlaygroundParticlesC playgroundParticles, int to)
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xCDAA34", Offset = "0xCDAA34", VA = "0xCDAA34")]
		public static void SetColor(PlaygroundParticlesC playgroundParticles, Color color)
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xCDAA3C", Offset = "0xCDAA3C", VA = "0xCDAA3C")]
		public static void SetAlpha(PlaygroundParticlesC playgroundParticles, float alpha)
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xCDAA44", Offset = "0xCDAA44", VA = "0xCDAA44")]
		public static void SetSize(PlaygroundParticlesC playgroundParticles, float size)
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xCDAA4C", Offset = "0xCDAA4C", VA = "0xCDAA4C")]
		public static void Translate(PlaygroundParticlesC playgroundParticles, Vector3 direction)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xCDAA54", Offset = "0xCDAA54", VA = "0xCDAA54")]
		public static void Add(PlaygroundParticlesC playgroundParticles, ParticleStateC state)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xCDAA5C", Offset = "0xCDAA5C", VA = "0xCDAA5C")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, float scale, Vector3 offset, string stateName)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xCDAA68", Offset = "0xCDAA68", VA = "0xCDAA68")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xCDAA70", Offset = "0xCDAA70", VA = "0xCDAA70")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, Texture2D depthmap, float depthmapStrength, float scale, Vector3 offset, string stateName)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xCDAA7C", Offset = "0xCDAA7C", VA = "0xCDAA7C")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, Texture2D depthmap, float depthmapStrength, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xCDAA84", Offset = "0xCDAA84", VA = "0xCDAA84")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Mesh mesh, float scale, Vector3 offset, string stateName)
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xCDAA90", Offset = "0xCDAA90", VA = "0xCDAA90")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Mesh mesh, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xCDAA98", Offset = "0xCDAA98", VA = "0xCDAA98")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Mesh mesh, Texture2D texture, float scale, Vector3 offset, string stateName)
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xCDAAA4", Offset = "0xCDAAA4", VA = "0xCDAAA4")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Mesh mesh, Texture2D texture, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xCDAAAC", Offset = "0xCDAAAC", VA = "0xCDAAAC")]
		public static PlaygroundColliderC AddCollider(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xCDAB38", Offset = "0xCDAB38", VA = "0xCDAB38")]
		public static PlaygroundColliderC AddCollider(PlaygroundParticlesC playgroundParticles, Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xCDABD8", Offset = "0xCDABD8", VA = "0xCDABD8")]
		public static void SetParticleCount(PlaygroundParticlesC playgroundParticles, int amount)
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xCDABE0", Offset = "0xCDABE0", VA = "0xCDABE0")]
		public static void SetLifetime(PlaygroundParticlesC playgroundParticles, float time)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xCDABFC", Offset = "0xCDABFC", VA = "0xCDABFC")]
		public static void SetMaterial(PlaygroundParticlesC playgroundParticles, Material particleMaterial)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xCDAC04", Offset = "0xCDAC04", VA = "0xCDAC04")]
		public static void Destroy(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xCDAC0C", Offset = "0xCDAC0C", VA = "0xCDAC0C")]
		public static WorldObject WorldObject(Transform meshTransform)
		{
			return null;
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xCDAC14", Offset = "0xCDAC14", VA = "0xCDAC14")]
		public static SkinnedWorldObject SkinnedWorldObject(Transform meshTransform)
		{
			return null;
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xCDAC1C", Offset = "0xCDAC1C", VA = "0xCDAC1C")]
		public static ManipulatorObjectC ManipulatorObject(MANIPULATORTYPEC type, LayerMask affects, Transform manipulatorTransform, float size, float strength)
		{
			return null;
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xCDAC2C", Offset = "0xCDAC2C", VA = "0xCDAC2C")]
		public static ManipulatorObjectC ManipulatorObject(Transform manipulatorTransform)
		{
			return null;
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xCDAC70", Offset = "0xCDAC70", VA = "0xCDAC70")]
		public static ManipulatorObjectC ManipulatorObject(MANIPULATORTYPEC type, LayerMask affects, Transform manipulatorTransform, float size, float strength, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xCDAC7C", Offset = "0xCDAC7C", VA = "0xCDAC7C")]
		public static ManipulatorObjectC ManipulatorObject(Transform manipulatorTransform, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xCDACC4", Offset = "0xCDACC4", VA = "0xCDACC4")]
		public static ManipulatorObjectC GetManipulator(int i)
		{
			return null;
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xCDAE20", Offset = "0xCDAE20", VA = "0xCDAE20")]
		public static ManipulatorObjectC GetManipulator(int i, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xCDAEF0", Offset = "0xCDAEF0", VA = "0xCDAEF0")]
		public static List<PlaygroundEventParticle> GetManipulatorParticles(int manipulator, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xCDB12C", Offset = "0xCDB12C", VA = "0xCDB12C")]
		public static List<PlaygroundEventParticle> GetManipulatorParticles(int manipulator)
		{
			return null;
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xCDB568", Offset = "0xCDB568", VA = "0xCDB568")]
		public static Transform CreateTransform()
		{
			return null;
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xCDB5E4", Offset = "0xCDB5E4", VA = "0xCDB5E4")]
		public static Transform CreatePlaygroundTransform(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xCDB7FC", Offset = "0xCDB7FC", VA = "0xCDB7FC")]
		public static PlaygroundSpline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xCDB99C", Offset = "0xCDB99C", VA = "0xCDB99C")]
		public static PlaygroundSpline CreateSpline(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xCDBBAC", Offset = "0xCDBBAC", VA = "0xCDBBAC")]
		public static PlaygroundSpline CreateSpline(ManipulatorPropertyC manipulatorProperty)
		{
			return null;
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xCDBC2C", Offset = "0xCDBC2C", VA = "0xCDBC2C")]
		public static PlaygroundEventC CreateEvent()
		{
			return null;
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xCDBC84", Offset = "0xCDBC84", VA = "0xCDBC84")]
		public static PlaygroundEventC CreateEvent(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xCDBDA4", Offset = "0xCDBDA4", VA = "0xCDBDA4")]
		public static PlaygroundEventC GetEvent(int i, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xCDBE74", Offset = "0xCDBE74", VA = "0xCDBE74")]
		public static void RemoveEvent(int i, PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xCDC124", Offset = "0xCDC124", VA = "0xCDC124")]
		public static PlaygroundParticlesC GetParticles(int i)
		{
			return null;
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xCDC2C4", Offset = "0xCDC2C4", VA = "0xCDC2C4")]
		public static ParticleProjectionC ParticleProjection(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xCDC2CC", Offset = "0xCDC2CC", VA = "0xCDC2CC")]
		public static PaintObjectC PaintObject(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xCDC2D4", Offset = "0xCDC2D4", VA = "0xCDC2D4")]
		public static int Paint(PlaygroundParticlesC playgroundParticles, Vector3 position, Vector3 normal, Transform parent, Color32 color)
		{
			return default(int);
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xCDC2FC", Offset = "0xCDC2FC", VA = "0xCDC2FC")]
		public static void Paint(PaintObjectC paintObject, Vector3 position, Vector3 normal, Transform parent, Color32 color)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xCDC318", Offset = "0xCDC318", VA = "0xCDC318")]
		public static bool Erase(PlaygroundParticlesC playgroundParticles, Vector3 position, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xCDC33C", Offset = "0xCDC33C", VA = "0xCDC33C")]
		public static bool Erase(PaintObjectC paintObject, Vector3 position, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xCDC354", Offset = "0xCDC354", VA = "0xCDC354")]
		public static bool Erase(PlaygroundParticlesC playgroundParticles, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xCDC378", Offset = "0xCDC378", VA = "0xCDC378")]
		public static void ClearPaint(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xCDC39C", Offset = "0xCDC39C", VA = "0xCDC39C")]
		public static int GetPaintPositionLength(PlaygroundParticlesC playgroundParticles)
		{
			return default(int);
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xCDC3C0", Offset = "0xCDC3C0", VA = "0xCDC3C0")]
		public static void SetInitialTargetPosition(PlaygroundParticlesC playgroundParticles, Vector3 position)
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xCDC3CC", Offset = "0xCDC3CC", VA = "0xCDC3CC")]
		public static void Emission(PlaygroundParticlesC playgroundParticles, bool emit)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xCDC3DC", Offset = "0xCDC3DC", VA = "0xCDC3DC")]
		public static void Emission(PlaygroundParticlesC playgroundParticles, bool emit, bool restEmission)
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xCDC3EC", Offset = "0xCDC3EC", VA = "0xCDC3EC")]
		public static void Clear(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xCDC3F4", Offset = "0xCDC3F4", VA = "0xCDC3F4")]
		public static void RefreshScatter(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xCDC40C", Offset = "0xCDC40C", VA = "0xCDC40C")]
		public static PlaygroundParticlesC InstantiatePreset(string presetName)
		{
			return null;
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xCDC784", Offset = "0xCDC784", VA = "0xCDC784")]
		public bool IsDoneThread()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xCDC78C", Offset = "0xCDC78C", VA = "0xCDC78C")]
		public bool IsDoneThreadTurbulence()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xCDC794", Offset = "0xCDC794", VA = "0xCDC794")]
		public bool IsDoneThreadSkinnedMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xCDC79C", Offset = "0xCDC79C", VA = "0xCDC79C")]
		public bool IsFirstUnsafeAutomaticFrames()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xCDC7A4", Offset = "0xCDC7A4", VA = "0xCDC7A4")]
		public bool HasEnabledGlobalManipulators()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xCCA4F4", Offset = "0xCCA4F4", VA = "0xCCA4F4")]
		public static Color32[] GetPixels(Texture2D image)
		{
			return null;
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xCDC914", Offset = "0xCDC914", VA = "0xCDC914")]
		public static Vector3 Offset(PLAYGROUNDORIGINC origin, int imageWidth, int imageHeight, float meshScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xCDCA40", Offset = "0xCDCA40", VA = "0xCDCA40")]
		public static Vector3[] RandomVector3(int length, Vector3 min, Vector3 max)
		{
			return null;
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xCDCBB0", Offset = "0xCDCBB0", VA = "0xCDCBB0")]
		public static float[] RandomFloat(int length, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xCDCCB4", Offset = "0xCDCCB4", VA = "0xCDCCB4")]
		public static void ShuffleArray(float[] arr)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xCDCDA8", Offset = "0xCDCDA8", VA = "0xCDCDA8")]
		public static void ShuffleArray(int[] arr)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xCDCE9C", Offset = "0xCDCE9C", VA = "0xCDCE9C")]
		public static int Largest(int[] compare)
		{
			return default(int);
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xCDCF0C", Offset = "0xCDCF0C", VA = "0xCDCF0C")]
		public static int CountZeroAlphasInTexture(Texture2D image)
		{
			return default(int);
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xCD9B28", Offset = "0xCD9B28", VA = "0xCD9B28")]
		public static GameObject ResourceInstantiate(string n)
		{
			return null;
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xCDCF88", Offset = "0xCDCF88", VA = "0xCDCF88")]
		public static void TimeReset()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xCDD00C", Offset = "0xCDD00C", VA = "0xCDD00C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC04B4", Offset = "0xAC04B4")]
		public IEnumerator InitializePlayground()
		{
			return null;
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xCDD078", Offset = "0xCDD078", VA = "0xCDD078")]
		public static bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xCDD0E8", Offset = "0xCDD0E8", VA = "0xCDD0E8")]
		public static void SetTime()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xCDD190", Offset = "0xCDD190", VA = "0xCDD190")]
		private static void CheckEvents()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xCDD23C", Offset = "0xCDD23C", VA = "0xCDD23C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xCDD2EC", Offset = "0xCDD2EC", VA = "0xCDD2EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xCDD2F0", Offset = "0xCDD2F0", VA = "0xCDD2F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xCDD348", Offset = "0xCDD348", VA = "0xCDD348")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xCDEC8C", Offset = "0xCDEC8C", VA = "0xCDEC8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xCDEF8C", Offset = "0xCDEF8C", VA = "0xCDEF8C")]
		public static int ActiveThreads()
		{
			return default(int);
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xCDEFF0", Offset = "0xCDEFF0", VA = "0xCDEFF0")]
		public static int ProcessorCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xCDE350", Offset = "0xCDE350", VA = "0xCDE350")]
		private void ThreadAggregator()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xCDF054", Offset = "0xCDF054", VA = "0xCDF054")]
		public static void RunAsync(Action a)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xCDF1BC", Offset = "0xCDF1BC", VA = "0xCDF1BC")]
		private static void RunAction(object a)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xCDF2A0", Offset = "0xCDF2A0", VA = "0xCDF2A0")]
		public PlaygroundC()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xCDF54C", Offset = "0xCDF54C", VA = "0xCDF54C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0514", Offset = "0xAC0514")]
		private void <ThreadAggregator>b__177_2()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xCDF668", Offset = "0xCDF668", VA = "0xCDF668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0524", Offset = "0xAC0524")]
		private void <ThreadAggregator>b__177_0()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xCDFA10", Offset = "0xCDFA10", VA = "0xCDFA10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0534", Offset = "0xAC0534")]
		private void <ThreadAggregator>b__177_1()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xCDFC40", Offset = "0xCDFC40", VA = "0xCDFC40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0544", Offset = "0xAC0544")]
		private void <ThreadAggregator>b__177_3()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055A")]
	public class PaintObjectC
	{
		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public List<PaintPositionC> paintPositions;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int positionLength;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public Vector3 lastPaintPosition;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public COLLISIONTYPEC collisionType;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minDepth;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxDepth;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float spacing;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayerMask layerMask;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlaygroundBrushC brush;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool exceedMaxStopsPaint;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool initialized;

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x14A7E4C", Offset = "0x14A7E4C", VA = "0x14A7E4C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x14A7F34", Offset = "0x14A7F34", VA = "0x14A7F34")]
		public bool Paint(Ray ray, Color32 color)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x14A821C", Offset = "0x14A821C", VA = "0x14A821C")]
		public int Paint(Vector3 pos, Vector3 norm, Transform parent, Color32 color)
		{
			return default(int);
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x14A844C", Offset = "0x14A844C", VA = "0x14A844C")]
		public bool Erase(Vector3 pos, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x14A8588", Offset = "0x14A8588", VA = "0x14A8588")]
		public bool Erase(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x14A8628", Offset = "0x14A8628", VA = "0x14A8628")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x14A86B4", Offset = "0x14A86B4", VA = "0x14A86B4")]
		public Color32 GetColor(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x14A873C", Offset = "0x14A873C", VA = "0x14A873C")]
		public Vector3 GetNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x14A87C8", Offset = "0x14A87C8", VA = "0x14A87C8")]
		public Transform GetParent(int index)
		{
			return null;
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x14A8850", Offset = "0x14A8850", VA = "0x14A8850")]
		public Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x14A88DC", Offset = "0x14A88DC", VA = "0x14A88DC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x14A89C4", Offset = "0x14A89C4", VA = "0x14A89C4")]
		public void Update(int thisPosition)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x14A8B58", Offset = "0x14A8B58", VA = "0x14A8B58")]
		public void RemoveNonParented()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x14A8C68", Offset = "0x14A8C68", VA = "0x14A8C68")]
		public bool RemoveNonParented(int thisPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x14A8D64", Offset = "0x14A8D64", VA = "0x14A8D64")]
		public void ClearPaint()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x14A8DD8", Offset = "0x14A8DD8", VA = "0x14A8DD8")]
		public PaintObjectC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x14A8F78", Offset = "0x14A8F78", VA = "0x14A8F78")]
		public PaintObjectC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055B")]
	public class PaintPositionC
	{
		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color32 color;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform parent;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 initialPosition;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 initialNormal;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion parentRotation;

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x14A8444", Offset = "0x14A8444", VA = "0x14A8444")]
		public PaintPositionC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055C")]
	public class PlaygroundBrushC
	{
		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D texture;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float scale;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BRUSHDETAILC detail;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Color32[] color;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int colorLength;

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xCD8DCC", Offset = "0xCD8DCC", VA = "0xCD8DCC")]
		public void SetTexture(Texture2D newTexture)
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xCD8DD4", Offset = "0xCD8DD4", VA = "0xCD8DD4")]
		public void Construct()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xCD8E4C", Offset = "0xCD8E4C", VA = "0xCD8E4C")]
		public Color32 GetColor(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xCD8E94", Offset = "0xCD8E94", VA = "0xCD8E94")]
		public void SetColor(Color32 c, int index)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xCD8ED0", Offset = "0xCD8ED0", VA = "0xCD8ED0")]
		public PlaygroundBrushC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xCD8FAC", Offset = "0xCD8FAC", VA = "0xCD8FAC")]
		public PlaygroundBrushC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055D")]
	public class ParticleStateC
	{
		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		private Color32[] color;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		private Vector3[] position;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		private Vector3[] normals;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D stateTexture;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D stateDepthmap;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float stateDepthmapStrength;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh stateMesh;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string stateName;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stateScale;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 stateOffset;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform stateTransform;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Matrix4x4 stateTransformMx;

		[NonSerialized]
		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool initialized;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public int colorLength;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public int positionLength;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public bool applyChromaKey;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Color32 chromaKey;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public float chromaKeySpread;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isInitializing;

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xCCB4E8", Offset = "0xCCB4E8", VA = "0xCCB4E8")]
		public bool IsInitializing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xCCB4F0", Offset = "0xCCB4F0", VA = "0xCCB4F0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xCCC0E0", Offset = "0xCCC0E0", VA = "0xCCC0E0")]
		public void UpdateMatrix(bool isLocal)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xCCB758", Offset = "0xCCB758", VA = "0xCCB758")]
		public void ConstructParticles(Texture2D image, float scale, Vector3 offset, string newStateName, Transform newStateTransform)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xCCBD18", Offset = "0xCCBD18", VA = "0xCCBD18")]
		public void ConstructParticles(Mesh mesh, Texture2D texture, float scale, Vector3 offset, string newStateName, Transform newStateTransform)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xCCBF3C", Offset = "0xCCBF3C", VA = "0xCCBF3C")]
		public void ConstructParticles(Mesh mesh, float scale, Vector3 offset, string newStateName, Transform newStateTransform)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xCCC1E4", Offset = "0xCCC1E4", VA = "0xCCC1E4")]
		public Color32 GetColor(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xCCC238", Offset = "0xCCC238", VA = "0xCCC238")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xCCC2BC", Offset = "0xCCC2BC", VA = "0xCCC2BC")]
		public Vector3 GetLocalPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xCCC350", Offset = "0xCCC350", VA = "0xCCC350")]
		public Vector3 GetNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xCCC3B8", Offset = "0xCCC3B8", VA = "0xCCC3B8")]
		public Vector3 GetLocalNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xCCC42C", Offset = "0xCCC42C", VA = "0xCCC42C")]
		public Color32[] GetColors()
		{
			return null;
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xCCC488", Offset = "0xCCC488", VA = "0xCCC488")]
		public Vector3[] GetPositions()
		{
			return null;
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xCCC4E4", Offset = "0xCCC4E4", VA = "0xCCC4E4")]
		public Vector3[] GetNormals()
		{
			return null;
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xCCC540", Offset = "0xCCC540", VA = "0xCCC540")]
		public void SetColor(int index, Color32 c)
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xCCC57C", Offset = "0xCCC57C", VA = "0xCCC57C")]
		public void SetPosition(int index, Vector3 v)
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xCCC5C4", Offset = "0xCCC5C4", VA = "0xCCC5C4")]
		public void SetNormal(int index, Vector3 v)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xCCC60C", Offset = "0xCCC60C", VA = "0xCCC60C")]
		public Vector3 GetParentedPosition(int thisPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xCCC690", Offset = "0xCCC690", VA = "0xCCC690")]
		public ParticleStateC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xCCC770", Offset = "0xCCC770", VA = "0xCCC770")]
		public ParticleStateC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055E")]
	public class ParticleProjectionC
	{
		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		private Color32[] sourceColors;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		private Vector3[] sourcePositions;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		private Vector3[] targetPositions;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		private Vector3[] targetNormals;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		private bool[] hasProjected;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		private Transform[] targetParents;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D projectionTexture;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 projectionOrigin;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform projectionTransform;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Matrix4x4 projectionMatrix;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 projectionPosition;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 projectionDirection;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Quaternion projectionRotation;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float projectionDistance;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float projectionScale;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public LayerMask projectionMask;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public COLLISIONTYPEC collisionType;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float minDepth;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float maxDepth;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float surfaceOffset;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool liveUpdate;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool hasRefreshed;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public int colorLength;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public int positionLength;

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xCC9F40", Offset = "0xCC9F40", VA = "0xCC9F40")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xCCA004", Offset = "0xCCA004", VA = "0xCCA004")]
		public void Construct(Texture2D image, Transform transform)
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xCCA3C0", Offset = "0xCCA3C0", VA = "0xCCA3C0")]
		public void UpdateSource()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xCCA4AC", Offset = "0xCCA4AC", VA = "0xCCA4AC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xCCA790", Offset = "0xCCA790", VA = "0xCCA790")]
		public void Update(int index)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xCCAC1C", Offset = "0xCCAC1C", VA = "0xCCAC1C")]
		public Color32 GetColor(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xCCAC64", Offset = "0xCCAC64", VA = "0xCCAC64")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xCCACB8", Offset = "0xCCACB8", VA = "0xCCACB8")]
		public Vector3 GetNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xCCAD0C", Offset = "0xCCAD0C", VA = "0xCCAD0C")]
		public Transform GetParent(int index)
		{
			return null;
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xCCAD54", Offset = "0xCCAD54", VA = "0xCCAD54")]
		public bool HasProjection(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xCCAD9C", Offset = "0xCCAD9C", VA = "0xCCAD9C")]
		public ParticleProjectionC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xCCB0CC", Offset = "0xCCB0CC", VA = "0xCCB0CC")]
		public ParticleProjectionC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055F")]
	public class Vector3AnimationCurveC
	{
		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve x;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve y;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve z;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float xRepeat;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yRepeat;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float zRepeat;

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xE80F84", Offset = "0xE80F84", VA = "0xE80F84")]
		public Vector3 Evaluate(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xE80F8C", Offset = "0xE80F8C", VA = "0xE80F8C")]
		public Vector3 Evaluate(float time, float scale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xE81048", Offset = "0xE81048", VA = "0xE81048")]
		public bool HasKeys()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xE81180", Offset = "0xE81180", VA = "0xE81180")]
		public void SetKeyValues(int key, float value)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xE81194", Offset = "0xE81194", VA = "0xE81194")]
		public void SetKeyValues(int key, Vector3 value, float inTangent, float outTangent)
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xE81410", Offset = "0xE81410", VA = "0xE81410")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xE81500", Offset = "0xE81500", VA = "0xE81500")]
		public void Reset1()
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xE81634", Offset = "0xE81634", VA = "0xE81634")]
		public void ResetWithMidKey()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xE810CC", Offset = "0xE810CC", VA = "0xE810CC")]
		public void CheckNull()
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xE81740", Offset = "0xE81740", VA = "0xE81740")]
		public Vector3AnimationCurveC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xE8188C", Offset = "0xE8188C", VA = "0xE8188C")]
		public Vector3AnimationCurveC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000560")]
	public class WorldObjectBaseC
	{
		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Transform transform;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Rigidbody rigidbody;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Mesh mesh;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3[] vertexPositions;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] normals;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool updateNormals;

		[NonSerialized]
		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int cachedId;

		[NonSerialized]
		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool initialized;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public Matrix4x4 transformMatrix;

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xE8C44C", Offset = "0xE8C44C", VA = "0xE8C44C")]
		public void UpdateMatrix(bool isLocal)
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xE8C444", Offset = "0xE8C444", VA = "0xE8C444")]
		public WorldObjectBaseC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000561")]
	public class WorldObject : WorldObjectBaseC
	{
		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Renderer renderer;

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xE8C154", Offset = "0xE8C154", VA = "0xE8C154")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xE8C2F8", Offset = "0xE8C2F8", VA = "0xE8C2F8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xE8C3A0", Offset = "0xE8C3A0", VA = "0xE8C3A0")]
		public WorldObject Clone()
		{
			return null;
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xE8C43C", Offset = "0xE8C43C", VA = "0xE8C43C")]
		public WorldObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000562")]
	public class SkinnedWorldObject : WorldObjectBaseC
	{
		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int downResolution;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public SkinnedMeshRenderer renderer;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform[] boneTransforms;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BoneWeight[] weights;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Matrix4x4[] bindPoses;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Matrix4x4[] boneMatrices;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3[] vertices;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3[] localVertices;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public bool isDoneThread;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Mesh bakedMesh;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Matrix4x4 vertexMatrix;

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xEF6398", Offset = "0xEF6398", VA = "0xEF6398")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xEF697C", Offset = "0xEF697C", VA = "0xEF697C")]
		public void MeshUpdate()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xEF69E4", Offset = "0xEF69E4", VA = "0xEF69E4")]
		public void BoneUpdate()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xEF65EC", Offset = "0xEF65EC", VA = "0xEF65EC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xEF6D1C", Offset = "0xEF6D1C", VA = "0xEF6D1C")]
		public void UpdateOnNewThread()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xEF6DDC", Offset = "0xEF6DDC", VA = "0xEF6DDC")]
		public SkinnedWorldObject Clone()
		{
			return null;
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xEF6E8C", Offset = "0xEF6E8C", VA = "0xEF6E8C")]
		public SkinnedWorldObject()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xEF6EA0", Offset = "0xEF6EA0", VA = "0xEF6EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC05A4", Offset = "0xAC05A4")]
		private void <UpdateOnNewThread>b__15_0()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000563")]
	public class ManipulatorObjectC
	{
		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MANIPULATORTYPEC type;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ManipulatorPropertyC property;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ManipulatorPropertyC> properties;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask affects;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlaygroundTransformC transform;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MANIPULATORSHAPEC shape;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float size;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Bounds bounds;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float strength;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float strengthSmoothing;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float strengthDistanceEffect;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool enabled;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool inverseBounds;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int manipulatorId;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool applyLifetimeFilter;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float lifetimeFilterMinimum;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lifetimeFilterMaximum;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool applyParticleFilter;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float particleFilterMinimum;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float particleFilterMaximum;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public PlaygroundAxisConstraintsC axisConstraints;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool unfolded;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool trackParticles;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public TrackingMethod trackingMethod;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool sendEventEnter;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool sendEventExit;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool sendEventBirth;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		public bool sendEventDeath;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool sendEventCollision;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool sendEventsUnfolded;

		[NonSerialized]
		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<ManipulatorParticle> particles;

		[NonSerialized]
		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<ManipulatorParticle> nonAffectedParticles;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public PlaygroundEventParticle manipulatorEventParticle;

		[NonSerialized]
		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool initializedEventEnter;

		[NonSerialized]
		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool initializedEventExit;

		[NonSerialized]
		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		private bool initializedEventBirth;

		[NonSerialized]
		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
		private bool initializedEventDeath;

		[NonSerialized]
		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool initializedEventCollision;

		[Token(Token = "0x1400001E")]
		public event OnPlaygroundParticle particleEventEnter
		{
			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0x1A12F78", Offset = "0x1A12F78", VA = "0x1A12F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC05B4", Offset = "0xAC05B4")]
			add
			{
			}
			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0x1A13018", Offset = "0x1A13018", VA = "0x1A13018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC05C4", Offset = "0xAC05C4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event OnPlaygroundParticle particleEventExit
		{
			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0x1A130B8", Offset = "0x1A130B8", VA = "0x1A130B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC05D4", Offset = "0xAC05D4")]
			add
			{
			}
			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0x1A13158", Offset = "0x1A13158", VA = "0x1A13158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC05E4", Offset = "0xAC05E4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event OnPlaygroundParticle particleEventBirth
		{
			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0x1A131F8", Offset = "0x1A131F8", VA = "0x1A131F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC05F4", Offset = "0xAC05F4")]
			add
			{
			}
			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0x1A13298", Offset = "0x1A13298", VA = "0x1A13298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0604", Offset = "0xAC0604")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event OnPlaygroundParticle particleEventDeath
		{
			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0x1A13338", Offset = "0x1A13338", VA = "0x1A13338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0614", Offset = "0xAC0614")]
			add
			{
			}
			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0x1A133D8", Offset = "0x1A133D8", VA = "0x1A133D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0624", Offset = "0xAC0624")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event OnPlaygroundParticle particleEventCollision
		{
			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x1A13478", Offset = "0x1A13478", VA = "0x1A13478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0634", Offset = "0xAC0634")]
			add
			{
			}
			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0x1A13518", Offset = "0x1A13518", VA = "0x1A13518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0644", Offset = "0xAC0644")]
			remove
			{
			}
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x1A135B8", Offset = "0x1A135B8", VA = "0x1A135B8")]
		public bool Contains(Vector3 position, Vector3 mPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x1A13668", Offset = "0x1A13668", VA = "0x1A13668")]
		public void SendParticleEventEnter()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x1A13698", Offset = "0x1A13698", VA = "0x1A13698")]
		public void SendParticleEventExit()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x1A136C8", Offset = "0x1A136C8", VA = "0x1A136C8")]
		public void SendParticleEventBirth()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x1A136F8", Offset = "0x1A136F8", VA = "0x1A136F8")]
		public void SendParticleEventDeath()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x1A13728", Offset = "0x1A13728", VA = "0x1A13728")]
		public void SendParticleEventCollision()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x1A13758", Offset = "0x1A13758", VA = "0x1A13758")]
		public PlaygroundEventParticle GetParticle(int index)
		{
			return null;
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x1A13834", Offset = "0x1A13834", VA = "0x1A13834")]
		public PlaygroundEventParticle GetParticle(int particleSystemId, int particleId)
		{
			return null;
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x1A13928", Offset = "0x1A13928", VA = "0x1A13928")]
		public List<PlaygroundEventParticle> GetParticles()
		{
			return null;
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x1A13B18", Offset = "0x1A13B18", VA = "0x1A13B18")]
		public bool ContainsParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x1A13C20", Offset = "0x1A13C20", VA = "0x1A13C20")]
		public bool IsSameId(int compareId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x1A13C30", Offset = "0x1A13C30", VA = "0x1A13C30")]
		public bool AddParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x1A13DEC", Offset = "0x1A13DEC", VA = "0x1A13DEC")]
		public bool RemoveParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x1A13F5C", Offset = "0x1A13F5C", VA = "0x1A13F5C")]
		public void KillAllParticles()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x1A140F8", Offset = "0x1A140F8", VA = "0x1A140F8")]
		public bool ContainsNonAffectedParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x1A141EC", Offset = "0x1A141EC", VA = "0x1A141EC")]
		public void AddNonAffectedParticle(int particleSystemId, int particleId)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x1A14284", Offset = "0x1A14284", VA = "0x1A14284")]
		public bool RemoveNonAffectedParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x1A143AC", Offset = "0x1A143AC", VA = "0x1A143AC")]
		public bool LifetimeFilter(float life, float total)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x1A143E4", Offset = "0x1A143E4", VA = "0x1A143E4")]
		public bool ParticleFilter(int p, int total)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x1A14424", Offset = "0x1A14424", VA = "0x1A14424")]
		public void Update()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x1A14E78", Offset = "0x1A14E78", VA = "0x1A14E78")]
		public void SetLocalTargetsPosition(Transform otherTransform)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x1A14FD4", Offset = "0x1A14FD4", VA = "0x1A14FD4")]
		public ManipulatorObjectC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x1A15200", Offset = "0x1A15200", VA = "0x1A15200")]
		public ManipulatorObjectC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000564")]
	public class ManipulatorPropertyC
	{
		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MANIPULATORPROPERTYTYPEC type;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MANIPULATORPROPERTYTRANSITIONC transition;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MathManipulatorProperty mathProperty;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 velocity;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 localVelocity;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color color;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Gradient lifetimeColor;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float size;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<PlaygroundTransformC> targets;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int targetPointer;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public WorldObject meshTarget;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SkinnedWorldObject skinnedMeshTarget;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool meshTargetIsProcedural;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Matrix4x4 meshTargetMatrix;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ParticleStateC stateTarget;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public PlaygroundSpline splineTarget;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public SPLINETARGETMETHOD splineTargetMethod;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float splineTimeOffset;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool splineTargetIsReady;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool useLocalRotation;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		public bool onlyColorInRange;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		public bool keepColorAlphas;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool onlyPositionInRange;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool onlySizeInRange;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float zeroVelocityStrength;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float strength;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool unfolded;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public TARGETSORTINGC targetSorting;

		[NonSerialized]
		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int[] targetSortingList;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private TARGETSORTINGC previousTargetSorting;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public TURBULENCETYPE turbulenceType;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float turbulenceTimeScale;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float turbulenceScale;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool turbulenceApplyLifetimeStrength;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AnimationCurve turbulenceLifetimeStrength;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public SimplexNoise turbulenceSimplex;

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x1A14700", Offset = "0x1A14700", VA = "0x1A14700")]
		public void Update()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x1A14DD0", Offset = "0x1A14DD0", VA = "0x1A14DD0")]
		public void UpdateMathProperty(Vector3 manipulatorPosition)
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x1A15788", Offset = "0x1A15788", VA = "0x1A15788")]
		public void UpdateMeshTarget()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x1A15988", Offset = "0x1A15988", VA = "0x1A15988")]
		public void UpdateSkinnedMeshTarget()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x1A15A1C", Offset = "0x1A15A1C", VA = "0x1A15A1C")]
		public void SetMeshTarget(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x1A15A38", Offset = "0x1A15A38", VA = "0x1A15A38")]
		public void SetSkinnedMeshTarget(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x1A15A54", Offset = "0x1A15A54", VA = "0x1A15A54")]
		public bool SplineTargetIsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x1A157A4", Offset = "0x1A157A4", VA = "0x1A157A4")]
		public void TargetSorting()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x1A14DA4", Offset = "0x1A14DA4", VA = "0x1A14DA4")]
		public void SetLocalVelocity(Quaternion rotation, Vector3 newVelocity)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x1A14F2C", Offset = "0x1A14F2C", VA = "0x1A14F2C")]
		public void SetLocalTargetsPosition(Transform otherTransform)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x1A15A5C", Offset = "0x1A15A5C", VA = "0x1A15A5C")]
		public bool UpdateTarget(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x1A153AC", Offset = "0x1A153AC", VA = "0x1A153AC")]
		public ManipulatorPropertyC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x1A15604", Offset = "0x1A15604", VA = "0x1A15604")]
		public ManipulatorPropertyC()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x1A15B28", Offset = "0x1A15B28", VA = "0x1A15B28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0654", Offset = "0xAC0654")]
		private void <Update>b__36_0()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000565")]
	public class MathManipulatorProperty
	{
		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MATHMANIPULATORTYPE type;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MATHMANIPULATORPROPERTY property;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MATHMANIPULATORCLAMP clamp;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float clampCeil;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clampFloor;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float value;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 value3;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rate;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 rate3;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 value3Position;

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x1A159FC", Offset = "0x1A159FC", VA = "0x1A159FC")]
		public void Update(Vector3 position)
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x1A175EC", Offset = "0x1A175EC", VA = "0x1A175EC")]
		public Vector3 Evaluate(Vector3 inValue, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x1A17A84", Offset = "0x1A17A84", VA = "0x1A17A84")]
		public Vector3 EvaluatePosition(Vector3 inValue, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x1A17D4C", Offset = "0x1A17D4C", VA = "0x1A17D4C")]
		public float Evaluate(float inValue, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x1A17EB4", Offset = "0x1A17EB4", VA = "0x1A17EB4")]
		private float Clamp(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x1A179C0", Offset = "0x1A179C0", VA = "0x1A179C0")]
		private Vector3 Clamp(Vector3 val)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x1A17CA0", Offset = "0x1A17CA0", VA = "0x1A17CA0")]
		private Vector3 ClampPosition(Vector3 val)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x1A17A48", Offset = "0x1A17A48", VA = "0x1A17A48")]
		private float ClampOut(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x1A17A64", Offset = "0x1A17A64", VA = "0x1A17A64")]
		private Vector3 ClampOut(Vector3 val)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x1A17ECC", Offset = "0x1A17ECC", VA = "0x1A17ECC")]
		public MathManipulatorProperty Clone()
		{
			return null;
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x1A159A4", Offset = "0x1A159A4", VA = "0x1A159A4")]
		public MathManipulatorProperty()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000566")]
	public class ManipulatorParticle
	{
		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int particleSystemId;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int particleId;

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x1A13DB4", Offset = "0x1A13DB4", VA = "0x1A13DB4")]
		public ManipulatorParticle(int setParticleSystemId, int setParticleId)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000567")]
	public class PlaygroundTransformC
	{
		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int instanceID;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool available;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 position;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 localPosition;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 previousPosition;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 forward;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 up;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 right;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Quaternion rotation;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion inverseRotation;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 localScale;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Matrix4x4 transformMatrix;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public bool unfolded;

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x161CCB4", Offset = "0x161CCB4", VA = "0x161CCB4")]
		public bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x161CE08", Offset = "0x161CE08", VA = "0x161CE08")]
		public void UpdateMatrix()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x161CE54", Offset = "0x161CE54", VA = "0x161CE54")]
		public bool IsSameAs(Transform comparer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x161CECC", Offset = "0x161CECC", VA = "0x161CECC")]
		public void SetZeroRotation()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x16199B8", Offset = "0x16199B8", VA = "0x16199B8")]
		public void SetFromTransform(Transform otherTransform)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x16197E0", Offset = "0x16197E0", VA = "0x16197E0")]
		public void GetFromTransform(Transform otherTransform)
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x161CEF8", Offset = "0x161CEF8", VA = "0x161CEF8")]
		public void SetLocalPosition(Transform otherTransform)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x161CF4C", Offset = "0x161CF4C", VA = "0x161CF4C")]
		public void SetPostitionAsLocal()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x161CF60", Offset = "0x161CF60", VA = "0x161CF60")]
		public int GetInstanceID()
		{
			return default(int);
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x161CF68", Offset = "0x161CF68", VA = "0x161CF68")]
		public PlaygroundTransformC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x16199B0", Offset = "0x16199B0", VA = "0x16199B0")]
		public PlaygroundTransformC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000568")]
	public class PlaygroundColliderC
	{
		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Plane plane;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xF5A320", Offset = "0xF5A320", VA = "0xF5A320")]
		public void UpdatePlane()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xF5A410", Offset = "0xF5A410", VA = "0xF5A410")]
		public PlaygroundColliderC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xF5A50C", Offset = "0xF5A50C", VA = "0xF5A50C")]
		public PlaygroundColliderC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000569")]
	public class PlaygroundAxisConstraintsC
	{
		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool x;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool y;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool z;

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xCD8D20", Offset = "0xCD8D20", VA = "0xCD8D20")]
		public bool HasConstraints()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xCD8D48", Offset = "0xCD8D48", VA = "0xCD8D48")]
		public PlaygroundAxisConstraintsC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xCD8DC4", Offset = "0xCD8DC4", VA = "0xCD8DC4")]
		public PlaygroundAxisConstraintsC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056A")]
	public class PlaygroundGradientC
	{
		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gradient gradient;

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xF5AB7C", Offset = "0xF5AB7C", VA = "0xF5AB7C")]
		public void CopyTo(PlaygroundGradientC copy)
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xF5ABE0", Offset = "0xF5ABE0", VA = "0xF5ABE0")]
		public PlaygroundGradientC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056B")]
	public class PlaygroundEventC
	{
		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool sendToManager;

		[NonSerialized]
		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool initializedTarget;

		[NonSerialized]
		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool initializedEvent;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundParticlesC target;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EVENTBROADCASTC broadcastType;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public EVENTTYPEC eventType;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EVENTINHERITANCEC eventInheritancePosition;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public EVENTINHERITANCEC eventInheritanceVelocity;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EVENTINHERITANCEC eventInheritanceColor;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 eventPosition;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 eventVelocity;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color32 eventColor;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float eventTime;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float collisionThreshold;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float velocityMultiplier;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float timer;

		[Token(Token = "0x14000023")]
		public event OnPlaygroundParticle particleEvent
		{
			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xF5A51C", Offset = "0xF5A51C", VA = "0xF5A51C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0664", Offset = "0xAC0664")]
			add
			{
			}
			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0xF5A5BC", Offset = "0xF5A5BC", VA = "0xF5A5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0674", Offset = "0xAC0674")]
			remove
			{
			}
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xF5A65C", Offset = "0xF5A65C", VA = "0xF5A65C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xF5A744", Offset = "0xF5A744", VA = "0xF5A744")]
		public bool UpdateTime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xF5A7D4", Offset = "0xF5A7D4", VA = "0xF5A7D4")]
		public void SetTimer(float newTime)
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xF5A7DC", Offset = "0xF5A7DC", VA = "0xF5A7DC")]
		public void SendParticleEvent(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xF5A804", Offset = "0xF5A804", VA = "0xF5A804")]
		public PlaygroundEventC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xF5A8E4", Offset = "0xF5A8E4", VA = "0xF5A8E4")]
		public PlaygroundEventC()
		{
		}
	}
	[Token(Token = "0x200056C")]
	public enum MANIPULATORTYPEC
	{
		[Token(Token = "0x4002277")]
		None,
		[Token(Token = "0x4002278")]
		Attractor,
		[Token(Token = "0x4002279")]
		AttractorGravitational,
		[Token(Token = "0x400227A")]
		Repellent,
		[Token(Token = "0x400227B")]
		Property,
		[Token(Token = "0x400227C")]
		Combined,
		[Token(Token = "0x400227D")]
		Vortex
	}
	[Token(Token = "0x200056D")]
	public enum MANIPULATORPROPERTYTYPEC
	{
		[Token(Token = "0x400227F")]
		None,
		[Token(Token = "0x4002280")]
		Color,
		[Token(Token = "0x4002281")]
		Velocity,
		[Token(Token = "0x4002282")]
		AdditiveVelocity,
		[Token(Token = "0x4002283")]
		Size,
		[Token(Token = "0x4002284")]
		Target,
		[Token(Token = "0x4002285")]
		Death,
		[Token(Token = "0x4002286")]
		Attractor,
		[Token(Token = "0x4002287")]
		Gravitational,
		[Token(Token = "0x4002288")]
		Repellent,
		[Token(Token = "0x4002289")]
		LifetimeColor,
		[Token(Token = "0x400228A")]
		Vortex,
		[Token(Token = "0x400228B")]
		MeshTarget,
		[Token(Token = "0x400228C")]
		SkinnedMeshTarget,
		[Token(Token = "0x400228D")]
		Turbulence,
		[Token(Token = "0x400228E")]
		StateTarget,
		[Token(Token = "0x400228F")]
		SplineTarget,
		[Token(Token = "0x4002290")]
		Math
	}
	[Token(Token = "0x200056E")]
	public enum MATHMANIPULATORTYPE
	{
		[Token(Token = "0x4002292")]
		Sin,
		[Token(Token = "0x4002293")]
		Cos,
		[Token(Token = "0x4002294")]
		Lerp,
		[Token(Token = "0x4002295")]
		Add,
		[Token(Token = "0x4002296")]
		Subtract
	}
	[Token(Token = "0x200056F")]
	public enum MATHMANIPULATORPROPERTY
	{
		[Token(Token = "0x4002298")]
		Size,
		[Token(Token = "0x4002299")]
		Rotation,
		[Token(Token = "0x400229A")]
		Velocity,
		[Token(Token = "0x400229B")]
		Position
	}
	[Token(Token = "0x2000570")]
	public enum MATHMANIPULATORCLAMP
	{
		[Token(Token = "0x400229D")]
		None,
		[Token(Token = "0x400229E")]
		ClampInValue,
		[Token(Token = "0x400229F")]
		ClampOutValue
	}
	[Token(Token = "0x2000571")]
	public enum MANIPULATORPROPERTYTRANSITIONC
	{
		[Token(Token = "0x40022A1")]
		None,
		[Token(Token = "0x40022A2")]
		Lerp,
		[Token(Token = "0x40022A3")]
		Linear
	}
	[Token(Token = "0x2000572")]
	public enum MANIPULATORSHAPEC
	{
		[Token(Token = "0x40022A5")]
		Sphere,
		[Token(Token = "0x40022A6")]
		Box
	}
	[Token(Token = "0x2000573")]
	public enum PLAYGROUNDORIGINC
	{
		[Token(Token = "0x40022A8")]
		TopLeft,
		[Token(Token = "0x40022A9")]
		TopCenter,
		[Token(Token = "0x40022AA")]
		TopRight,
		[Token(Token = "0x40022AB")]
		MiddleLeft,
		[Token(Token = "0x40022AC")]
		MiddleCenter,
		[Token(Token = "0x40022AD")]
		MiddleRight,
		[Token(Token = "0x40022AE")]
		BottomLeft,
		[Token(Token = "0x40022AF")]
		BottomCenter,
		[Token(Token = "0x40022B0")]
		BottomRight
	}
	[Token(Token = "0x2000574")]
	public enum PIXELMODEC
	{
		[Token(Token = "0x40022B2")]
		Bilinear,
		[Token(Token = "0x40022B3")]
		Pixel32
	}
	[Token(Token = "0x2000575")]
	public enum COLORSOURCEC
	{
		[Token(Token = "0x40022B5")]
		Source,
		[Token(Token = "0x40022B6")]
		LifetimeColor,
		[Token(Token = "0x40022B7")]
		LifetimeColors
	}
	[Token(Token = "0x2000576")]
	public enum COLORMETHOD
	{
		[Token(Token = "0x40022B9")]
		Lifetime,
		[Token(Token = "0x40022BA")]
		ParticleArray
	}
	[Token(Token = "0x2000577")]
	public enum OVERFLOWMODEC
	{
		[Token(Token = "0x40022BC")]
		SourceTransform,
		[Token(Token = "0x40022BD")]
		World,
		[Token(Token = "0x40022BE")]
		SourcePoint
	}
	[Token(Token = "0x2000578")]
	public enum TRANSITIONTYPEC
	{
		[Token(Token = "0x40022C0")]
		Linear,
		[Token(Token = "0x40022C1")]
		EaseIn,
		[Token(Token = "0x40022C2")]
		EaseOut
	}
	[Token(Token = "0x2000579")]
	public enum INDIVIDUALTRANSITIONTYPEC
	{
		[Token(Token = "0x40022C4")]
		Inherit,
		[Token(Token = "0x40022C5")]
		Linear,
		[Token(Token = "0x40022C6")]
		EaseIn,
		[Token(Token = "0x40022C7")]
		EaseOut
	}
	[Token(Token = "0x200057A")]
	public enum LERPTYPEC
	{
		[Token(Token = "0x40022C9")]
		PositionColor,
		[Token(Token = "0x40022CA")]
		Position,
		[Token(Token = "0x40022CB")]
		Color
	}
	[Token(Token = "0x200057B")]
	public enum SOURCEC
	{
		[Token(Token = "0x40022CD")]
		State,
		[Token(Token = "0x40022CE")]
		Transform,
		[Token(Token = "0x40022CF")]
		WorldObject,
		[Token(Token = "0x40022D0")]
		SkinnedWorldObject,
		[Token(Token = "0x40022D1")]
		Script,
		[Token(Token = "0x40022D2")]
		Paint,
		[Token(Token = "0x40022D3")]
		Projection,
		[Token(Token = "0x40022D4")]
		Spline
	}
	[Token(Token = "0x200057C")]
	public enum SORTINGC
	{
		[Token(Token = "0x40022D6")]
		Scrambled,
		[Token(Token = "0x40022D7")]
		ScrambledLinear,
		[Token(Token = "0x40022D8")]
		Burst,
		[Token(Token = "0x40022D9")]
		Linear,
		[Token(Token = "0x40022DA")]
		Reversed,
		[Token(Token = "0x40022DB")]
		NearestNeighbor,
		[Token(Token = "0x40022DC")]
		NearestNeighborReversed,
		[Token(Token = "0x40022DD")]
		Custom
	}
	[Token(Token = "0x200057D")]
	public enum BRUSHDETAILC
	{
		[Token(Token = "0x40022DF")]
		Perfect,
		[Token(Token = "0x40022E0")]
		High,
		[Token(Token = "0x40022E1")]
		Medium,
		[Token(Token = "0x40022E2")]
		Low
	}
	[Token(Token = "0x200057E")]
	public enum COLLISIONTYPEC
	{
		[Token(Token = "0x40022E4")]
		Physics3D,
		[Token(Token = "0x40022E5")]
		Physics2D
	}
	[Token(Token = "0x200057F")]
	public enum VELOCITYBENDINGTYPEC
	{
		[Token(Token = "0x40022E7")]
		SourcePosition,
		[Token(Token = "0x40022E8")]
		ParticleDeltaPosition
	}
	[Token(Token = "0x2000580")]
	public enum TARGETSORTINGC
	{
		[Token(Token = "0x40022EA")]
		Scrambled,
		[Token(Token = "0x40022EB")]
		Linear,
		[Token(Token = "0x40022EC")]
		Reversed
	}
	[Token(Token = "0x2000581")]
	public enum MASKSORTINGC
	{
		[Token(Token = "0x40022EE")]
		Linear,
		[Token(Token = "0x40022EF")]
		Reversed,
		[Token(Token = "0x40022F0")]
		Scrambled
	}
	[Token(Token = "0x2000582")]
	public enum NEARESTNEIGHBORORIGINMETHOD
	{
		[Token(Token = "0x40022F2")]
		SourcePoint,
		[Token(Token = "0x40022F3")]
		Vector3,
		[Token(Token = "0x40022F4")]
		Transform
	}
	[Token(Token = "0x2000583")]
	public enum SPLINETARGETMETHOD
	{
		[Token(Token = "0x40022F6")]
		SplineTime,
		[Token(Token = "0x40022F7")]
		ParticleTime
	}
	[Token(Token = "0x2000584")]
	public enum MINMAXVECTOR3METHOD
	{
		[Token(Token = "0x40022F9")]
		Rectangular,
		[Token(Token = "0x40022FA")]
		RectangularLinear,
		[Token(Token = "0x40022FB")]
		Spherical,
		[Token(Token = "0x40022FC")]
		SphericalLinear
	}
	[Token(Token = "0x2000585")]
	public enum EVENTTYPEC
	{
		[Token(Token = "0x40022FE")]
		Birth,
		[Token(Token = "0x40022FF")]
		Death,
		[Token(Token = "0x4002300")]
		Collision,
		[Token(Token = "0x4002301")]
		Time
	}
	[Token(Token = "0x2000586")]
	public enum EVENTBROADCASTC
	{
		[Token(Token = "0x4002303")]
		Target,
		[Token(Token = "0x4002304")]
		EventListeners,
		[Token(Token = "0x4002305")]
		Both
	}
	[Token(Token = "0x2000587")]
	public enum EVENTINHERITANCEC
	{
		[Token(Token = "0x4002307")]
		User,
		[Token(Token = "0x4002308")]
		Particle,
		[Token(Token = "0x4002309")]
		Source
	}
	[Token(Token = "0x2000588")]
	public enum TURBULENCETYPE
	{
		[Token(Token = "0x400230B")]
		None,
		[Token(Token = "0x400230C")]
		Simplex,
		[Token(Token = "0x400230D")]
		Perlin
	}
	[Token(Token = "0x2000589")]
	public enum VALUEMETHOD
	{
		[Token(Token = "0x400230F")]
		Constant,
		[Token(Token = "0x4002310")]
		RandomBetweenTwoValues
	}
	[Token(Token = "0x200058A")]
	public enum ONDONE
	{
		[Token(Token = "0x4002312")]
		Inactivate,
		[Token(Token = "0x4002313")]
		Destroy
	}
	[Token(Token = "0x200058B")]
	public enum ThreadMethod
	{
		[Token(Token = "0x4002315")]
		NoThreads,
		[Token(Token = "0x4002316")]
		OnePerSystem,
		[Token(Token = "0x4002317")]
		OneForAll,
		[Token(Token = "0x4002318")]
		Automatic
	}
	[Token(Token = "0x200058C")]
	public enum ThreadMethodLocal
	{
		[Token(Token = "0x400231A")]
		Inherit,
		[Token(Token = "0x400231B")]
		NoThreads,
		[Token(Token = "0x400231C")]
		OnePerSystem,
		[Token(Token = "0x400231D")]
		OneForAll
	}
	[Token(Token = "0x200058D")]
	public enum ThreadMethodComponent
	{
		[Token(Token = "0x400231F")]
		InsideParticleCalculation,
		[Token(Token = "0x4002320")]
		OnePerSystem,
		[Token(Token = "0x4002321")]
		OneForAll
	}
	[Token(Token = "0x200058E")]
	public enum TrackingMethod
	{
		[Token(Token = "0x4002323")]
		ManipulatorId,
		[Token(Token = "0x4002324")]
		ParticleId
	}
	[Token(Token = "0x200058F")]
	public static class AnimationCurveExtensions
	{
		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x13450BC", Offset = "0x13450BC", VA = "0x13450BC")]
		public static void Reset(this AnimationCurve animationCurve)
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x134517C", Offset = "0x134517C", VA = "0x134517C")]
		public static void Reset1(this AnimationCurve animationCurve)
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x134527C", Offset = "0x134527C", VA = "0x134527C")]
		public static void Reset01(this AnimationCurve animationCurve)
		{
		}
	}
	[Token(Token = "0x2000590")]
	public delegate void OnPlaygroundParticle(PlaygroundEventParticle particle);
	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA867C", Offset = "0xAA867C")]
	[ExecuteInEditMode]
	public class PlaygroundParticlesC : MonoBehaviour
	{
		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA86EC", Offset = "0xAA86EC")]
		private sealed class <>c__DisplayClass350_0
		{
			[Token(Token = "0x4002440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4002441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BoneWeight[] weights;

			[Token(Token = "0x4002442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matrix4x4[] boneMatrices;

			[Token(Token = "0x4002443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3[] vertices;

			[Token(Token = "0x4002444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SkinnedWorldObject particleStateWorldObject;

			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0xDB72B0", Offset = "0xDB72B0", VA = "0xDB72B0")]
			public <>c__DisplayClass350_0()
			{
			}

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0xDB72B8", Offset = "0xDB72B8", VA = "0xDB72B8")]
			internal void <GetPosition>b__0()
			{
			}
		}

		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA86FC", Offset = "0xAA86FC")]
		private sealed class <>c__DisplayClass370_0
		{
			[Token(Token = "0x4002445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x4002446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float time;

			[Token(Token = "0x4002447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public SORTINGC sorting;

			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0xDB75C0", Offset = "0xDB75C0", VA = "0xDB75C0")]
			public <>c__DisplayClass370_0()
			{
			}

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xDB75C8", Offset = "0xDB75C8", VA = "0xDB75C8")]
			internal void <SetLifetimeThreadSafe>b__0()
			{
			}
		}

		[Token(Token = "0x2000594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA870C", Offset = "0xAA870C")]
		private sealed class <>c__DisplayClass381_0
		{
			[Token(Token = "0x4002448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x4002449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int amount;

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xDB8048", Offset = "0xDB8048", VA = "0xDB8048")]
			public <>c__DisplayClass381_0()
			{
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xDB8050", Offset = "0xDB8050", VA = "0xDB8050")]
			internal void <SetParticleCount>b__0()
			{
			}
		}

		[Token(Token = "0x2000595")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA871C", Offset = "0xAA871C")]
		private sealed class <>c__DisplayClass387_0
		{
			[Token(Token = "0x400244A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x400244B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool callRestEmission;

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0xE60838", Offset = "0xE60838", VA = "0xE60838")]
			public <>c__DisplayClass387_0()
			{
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xE60840", Offset = "0xE60840", VA = "0xE60840")]
			internal void <Emission>b__0()
			{
			}
		}

		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA872C", Offset = "0xAA872C")]
		private sealed class <>c__DisplayClass392_0
		{
			[Token(Token = "0x400244C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0xE6091C", Offset = "0xE6091C", VA = "0xE6091C")]
			public <>c__DisplayClass392_0()
			{
			}

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0xE60924", Offset = "0xE60924", VA = "0xE60924")]
			internal void <NewCalculatedThread>b__0()
			{
			}
		}

		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA873C", Offset = "0xAA873C")]
		private sealed class <>c__DisplayClass393_0
		{
			[Token(Token = "0x400244D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC[] playgroundParticles;

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0xE60954", Offset = "0xE60954", VA = "0xE60954")]
			public <>c__DisplayClass393_0()
			{
			}

			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0xE6095C", Offset = "0xE6095C", VA = "0xE6095C")]
			internal void <NewCalculatedThread>b__0()
			{
			}
		}

		[Token(Token = "0x2000598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA874C", Offset = "0xAA874C")]
		private sealed class <>c__DisplayClass398_0
		{
			[Token(Token = "0x400244E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0xE60A64", Offset = "0xE60A64", VA = "0xE60A64")]
			public <>c__DisplayClass398_0()
			{
			}

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0xE60A6C", Offset = "0xE60A6C", VA = "0xE60A6C")]
			internal void <ThreadedCalculations>b__0()
			{
			}
		}

		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA875C", Offset = "0xAA875C")]
		private sealed class <SaveRoutine>d__431 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400244F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4002452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string saveName;

			[Token(Token = "0x4002453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PlaygroundSave <data>5__2;

			[Token(Token = "0x17000440")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EBD")]
				[Address(RVA = "0xE63DC4", Offset = "0xE63DC4", VA = "0xE63DC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000441")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EBF")]
				[Address(RVA = "0xE63E0C", Offset = "0xE63E0C", VA = "0xE63E0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0xE63AF4", Offset = "0xE63AF4", VA = "0xE63AF4")]
			[DebuggerHidden]
			public <SaveRoutine>d__431(int <>1__state)
			{
			}

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0xE63B20", Offset = "0xE63B20", VA = "0xE63B20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0xE63B24", Offset = "0xE63B24", VA = "0xE63B24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0xE63DCC", Offset = "0xE63DCC", VA = "0xE63DCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA876C", Offset = "0xAA876C")]
		private sealed class <LoadRoutine>d__437 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4002457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int loadPointer;

			[Token(Token = "0x4002458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int mask;

			[Token(Token = "0x4002459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <prevParticleCount>5__2;

			[Token(Token = "0x17000442")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EC3")]
				[Address(RVA = "0xE62830", Offset = "0xE62830", VA = "0xE62830", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000443")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EC5")]
				[Address(RVA = "0xE62878", Offset = "0xE62878", VA = "0xE62878", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0xE61A84", Offset = "0xE61A84", VA = "0xE61A84")]
			[DebuggerHidden]
			public <LoadRoutine>d__437(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0xE61AB0", Offset = "0xE61AB0", VA = "0xE61AB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0xE61AB4", Offset = "0xE61AB4", VA = "0xE61AB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0xE62838", Offset = "0xE62838", VA = "0xE62838", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200059B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA877C", Offset = "0xAA877C")]
		private sealed class <>c__DisplayClass439_0
		{
			[Token(Token = "0x400245A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] transitionPosition;

			[Token(Token = "0x400245B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int loadParticleCount;

			[Token(Token = "0x400245C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color32[] transitionColor;

			[Token(Token = "0x400245D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float[] transitionSize;

			[Token(Token = "0x400245E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float[] transitionRotation;

			[Token(Token = "0x400245F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4002460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public INDIVIDUALTRANSITIONTYPEC thisSnapshotTransition;

			[Token(Token = "0x4002461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float transitionStartTime;

			[Token(Token = "0x4002462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int loadPointer;

			[Token(Token = "0x4002463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public PlaygroundCache loadSnapshotData;

			[Token(Token = "0x4002464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool liveParticles;

			[Token(Token = "0x4002465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Color transparent;

			[Token(Token = "0x4002466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public int transitionParticleCount;

			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0xE60B18", Offset = "0xE60B18", VA = "0xE60B18")]
			public <>c__DisplayClass439_0()
			{
			}
		}

		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA878C", Offset = "0xAA878C")]
		private sealed class <>c__DisplayClass439_1
		{
			[Token(Token = "0x4002467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isResizing;

			[Token(Token = "0x4002468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass439_0 CS$<>8__locals1;

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0xE60B20", Offset = "0xE60B20", VA = "0xE60B20")]
			public <>c__DisplayClass439_1()
			{
			}

			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0xE60B28", Offset = "0xE60B28", VA = "0xE60B28")]
			internal void <LoadTransition>b__0()
			{
			}
		}

		[Token(Token = "0x200059D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA879C", Offset = "0xAA879C")]
		private sealed class <>c__DisplayClass439_2
		{
			[Token(Token = "0x4002469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float currentTime;

			[Token(Token = "0x400246A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass439_0 CS$<>8__locals2;

			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0xE60D7C", Offset = "0xE60D7C", VA = "0xE60D7C")]
			public <>c__DisplayClass439_2()
			{
			}

			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0xE60D84", Offset = "0xE60D84", VA = "0xE60D84")]
			internal void <LoadTransition>b__1()
			{
			}
		}

		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA87AC", Offset = "0xAA87AC")]
		private sealed class <LoadTransition>d__439 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400246B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400246C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400246D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x400246E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int loadPointer;

			[Token(Token = "0x400246F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass439_0 <>8__1;

			[Token(Token = "0x4002470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass439_1 <>8__2;

			[Token(Token = "0x4002471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass439_2 <>8__3;

			[Token(Token = "0x4002472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <loadParticleLifetime>5__2;

			[Token(Token = "0x4002473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool <firstFrameDone>5__3;

			[Token(Token = "0x4002474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <currentParticleCount>5__4;

			[Token(Token = "0x4002475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <initPosY>5__5;

			[Token(Token = "0x17000444")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ECE")]
				[Address(RVA = "0xE6358C", Offset = "0xE6358C", VA = "0xE6358C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000445")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED0")]
				[Address(RVA = "0xE635D4", Offset = "0xE635D4", VA = "0xE635D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0xE62880", Offset = "0xE62880", VA = "0xE62880")]
			[DebuggerHidden]
			public <LoadTransition>d__439(int <>1__state)
			{
			}

			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0xE628AC", Offset = "0xE628AC", VA = "0xE628AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0xE628B0", Offset = "0xE628B0", VA = "0xE628B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0xE63594", Offset = "0xE63594", VA = "0xE63594", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200059F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA87BC", Offset = "0xAA87BC")]
		private sealed class <YieldedRefresh>d__444 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4002479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <okToLoadFromStart>5__2;

			[Token(Token = "0x17000446")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ED4")]
				[Address(RVA = "0xE641FC", Offset = "0xE641FC", VA = "0xE641FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000447")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED6")]
				[Address(RVA = "0xE64244", Offset = "0xE64244", VA = "0xE64244", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0xE63E14", Offset = "0xE63E14", VA = "0xE63E14")]
			[DebuggerHidden]
			public <YieldedRefresh>d__444(int <>1__state)
			{
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0xE63E40", Offset = "0xE63E40", VA = "0xE63E40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0xE63E44", Offset = "0xE63E44", VA = "0xE63E44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0xE64204", Offset = "0xE64204", VA = "0xE64204", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA87CC", Offset = "0xAA87CC")]
		private sealed class <>c__DisplayClass445_0
		{
			[Token(Token = "0x400247A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x400247B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float time;

			[Token(Token = "0x400247C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int resolution;

			[Token(Token = "0x400247D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int currentCycles;

			[Token(Token = "0x400247E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool isPrewarmingAsync;

			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0xE61444", Offset = "0xE61444", VA = "0xE61444")]
			public <>c__DisplayClass445_0()
			{
			}

			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0xE6144C", Offset = "0xE6144C", VA = "0xE6144C")]
			internal void <Prewarm>b__0()
			{
			}
		}

		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA87DC", Offset = "0xAA87DC")]
		private sealed class <Prewarm>d__445 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400247F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4002482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x4002483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int resolution;

			[Token(Token = "0x4002484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass445_0 <>8__1;

			[Token(Token = "0x4002485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <storedLocalTime>5__2;

			[Token(Token = "0x17000448")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EDC")]
				[Address(RVA = "0xE63AA4", Offset = "0xE63AA4", VA = "0xE63AA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000449")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EDE")]
				[Address(RVA = "0xE63AEC", Offset = "0xE63AEC", VA = "0xE63AEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xE635DC", Offset = "0xE635DC", VA = "0xE635DC")]
			[DebuggerHidden]
			public <Prewarm>d__445(int <>1__state)
			{
			}

			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0xE63608", Offset = "0xE63608", VA = "0xE63608", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0xE6360C", Offset = "0xE6360C", VA = "0xE6360C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0xE63AAC", Offset = "0xE63AAC", VA = "0xE63AAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA87EC", Offset = "0xAA87EC")]
		private sealed class <Boot>d__449 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x1700044A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EE2")]
				[Address(RVA = "0xE61A34", Offset = "0xE61A34", VA = "0xE61A34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EE4")]
				[Address(RVA = "0xE61A7C", Offset = "0xE61A7C", VA = "0xE61A7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0xE61544", Offset = "0xE61544", VA = "0xE61544")]
			[DebuggerHidden]
			public <Boot>d__449(int <>1__state)
			{
			}

			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0xE61570", Offset = "0xE61570", VA = "0xE61570", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0xE61574", Offset = "0xE61574", VA = "0xE61574", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0xE61A3C", Offset = "0xE61A3C", VA = "0xE61A3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SOURCEC source;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public int activeState;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool emit;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool loop;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[HideInInspector]
		public bool clearParticlesOnEmissionStop;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[HideInInspector]
		public bool disableOnDone;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public ONDONE disableOnDoneRoutine;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int updateRate;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool calculate;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[HideInInspector]
		public bool calculateDeltaMovement;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float deltaMovementStrength;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float minDeltaMovementStrength;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public VALUEMETHOD deltaMovementStrengthValueMethod;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool worldObjectUpdateVertices;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[HideInInspector]
		public bool worldObjectUpdateNormals;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public NEARESTNEIGHBORORIGINMETHOD nearestNeighborOriginMethod;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public int nearestNeighborOrigin;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Vector3 nearestNeighborOriginVector3;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform nearestNeighborOriginTransform;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int particleCount;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public float emissionRate;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public OVERFLOWMODEC overflowMode;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public Vector3 overflowOffset;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public bool applySourceScatter;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public Vector3 sourceScatterMin;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Vector3 sourceScatterMax;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public Vector3 scatterScale;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public MINMAXVECTOR3METHOD sourceScatterMethod;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public SORTINGC sorting;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public AnimationCurve lifetimeSorting;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public float sizeMin;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public float sizeMax;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public float scale;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public float initialRotationMin;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float initialRotationMax;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public float rotationSpeedMin;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float rotationSpeedMax;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public bool rotateTowardsDirection;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Vector3 rotationNormal;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		public VALUEMETHOD lifetimeValueMethod;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public float lifetime;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public float lifetimeMin;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public float lifetimeOffset;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[HideInInspector]
		public float lifetimeEmission;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public float minShurikenLifetime;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public bool applyLifetimeSize;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public AnimationCurve lifetimeSize;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public bool applyParticleArraySize;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public AnimationCurve particleArraySize;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public bool transitionBackToSource;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public AnimationCurve transitionBackToSourceAmount;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool onlySourcePositioning;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[HideInInspector]
		public bool onlyLifetimePositioning;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public Vector3AnimationCurveC lifetimePositioning;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool applyLifetimePositioningTimeScale;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		[HideInInspector]
		public bool applyLifetimePositioningPositionScale;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public AnimationCurve lifetimePositioningTimeScale;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public AnimationCurve lifetimePositioningPositionScale;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public float lifetimePositioningScale;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[HideInInspector]
		public bool lifetimePositioningUsesSourceDirection;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		[HideInInspector]
		public bool applyLifetimeVelocity;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public Vector3AnimationCurveC lifetimeVelocity;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public float lifetimeVelocityScale;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[HideInInspector]
		public bool applyInitialVelocity;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public Vector3 initialVelocityMin;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[HideInInspector]
		public Vector3 initialVelocityMax;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public MINMAXVECTOR3METHOD initialVelocityMethod;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[HideInInspector]
		public bool applyInitialLocalVelocity;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public Vector3 initialLocalVelocityMin;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[HideInInspector]
		public Vector3 initialLocalVelocityMax;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[HideInInspector]
		public MINMAXVECTOR3METHOD initialLocalVelocityMethod;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[HideInInspector]
		public bool applyInitialVelocityShape;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[HideInInspector]
		public Vector3AnimationCurveC initialVelocityShape;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[HideInInspector]
		public float initialVelocityShapeScale;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[HideInInspector]
		public bool applyVelocityBending;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[HideInInspector]
		public Vector3 velocityBending;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[HideInInspector]
		public VELOCITYBENDINGTYPEC velocityBendingType;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[HideInInspector]
		public float maxVelocity;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[HideInInspector]
		public PlaygroundAxisConstraintsC axisConstraints;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public float damping;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[HideInInspector]
		public float velocityScale;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[HideInInspector]
		public Gradient lifetimeColor;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public List<PlaygroundGradientC> lifetimeColors;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[HideInInspector]
		public COLORSOURCEC colorSource;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[HideInInspector]
		public bool sourceUsesLifetimeAlpha;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[HideInInspector]
		public COLORMETHOD colorMethod;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[HideInInspector]
		public bool arrayColorUsesAlpha;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[HideInInspector]
		public Gradient arrayColorAlpha;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[HideInInspector]
		public bool applyLocalSpaceMovementCompensation;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		[HideInInspector]
		public bool applyRandomSizeOnRebirth;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20A")]
		[HideInInspector]
		public bool applyRandomInitialVelocityOnRebirth;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20B")]
		[HideInInspector]
		public bool applyRandomRotationOnRebirth;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[HideInInspector]
		public bool applyRandomScatterOnRebirth;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20D")]
		[HideInInspector]
		public bool applyInitialColorOnRebirth;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20E")]
		[HideInInspector]
		public bool applyRandomLifetimeOnRebirth;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20F")]
		[HideInInspector]
		public bool applyDeltaOnRebirth;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[HideInInspector]
		public bool calculateManipulatorOnRebirth;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		[HideInInspector]
		public bool pauseCalculationWhenInvisible;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
		[HideInInspector]
		public bool calculationTriggerSizeGizmo;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[HideInInspector]
		public Transform calculationTriggerTransform;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[HideInInspector]
		public Vector3 calculationTriggerSize;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[HideInInspector]
		public Vector3 calculationTriggerOffset;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[HideInInspector]
		public bool forceVisibilityWhenOutOfFrustrum;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
		[HideInInspector]
		public bool syncPositionsOnMainThread;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23A")]
		[HideInInspector]
		public bool applyLockPosition;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23B")]
		[HideInInspector]
		public bool applyLockRotation;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[HideInInspector]
		public bool applyLockScale;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23D")]
		[HideInInspector]
		public bool lockPositionIsLocal;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23E")]
		[HideInInspector]
		public bool lockRotationIsLocal;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[HideInInspector]
		public Vector3 lockPosition;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[HideInInspector]
		public Vector3 lockRotation;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[HideInInspector]
		public Vector3 lockScale;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[HideInInspector]
		public bool applyMovementCompensationLifetimeStrength;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[HideInInspector]
		public AnimationCurve movementCompensationLifetimeStrength;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[HideInInspector]
		public bool applyParticleMask;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[HideInInspector]
		public int particleMask;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[HideInInspector]
		public float particleMaskTime;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[HideInInspector]
		public MASKSORTINGC particleMaskSorting;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[HideInInspector]
		public float stretchSpeed;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[HideInInspector]
		public bool applyStretchStartDirection;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[HideInInspector]
		public Vector3 stretchStartDirection;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[HideInInspector]
		public bool applyLifetimeStretching;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[HideInInspector]
		public AnimationCurve stretchLifetime;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[HideInInspector]
		public ThreadMethodLocal threadMethod;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[HideInInspector]
		public int scriptedEmissionIndex;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[HideInInspector]
		public Vector3 scriptedEmissionPosition;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		[HideInInspector]
		public Vector3 scriptedEmissionVelocity;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[HideInInspector]
		public Color scriptedEmissionColor;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[HideInInspector]
		private float scriptedLifetime;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		[HideInInspector]
		public bool collision;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D5")]
		[HideInInspector]
		public bool affectRigidbodies;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D6")]
		[HideInInspector]
		public bool inverseRigidbodyCollision;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[HideInInspector]
		public float mass;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		[HideInInspector]
		public float collisionRadius;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[HideInInspector]
		public LayerMask collisionMask;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[HideInInspector]
		public List<Transform> collisionExclusion;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[HideInInspector]
		public float lifetimeLoss;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		[HideInInspector]
		public float bounciness;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[HideInInspector]
		public Vector3 bounceRandomMin;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		[HideInInspector]
		public Vector3 bounceRandomMax;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[HideInInspector]
		public List<PlaygroundColliderC> colliders;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[HideInInspector]
		public COLLISIONTYPEC collisionType;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		[HideInInspector]
		public float minCollisionDepth;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[HideInInspector]
		public float maxCollisionDepth;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		[HideInInspector]
		public bool stickyCollisions;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[HideInInspector]
		public float stickyCollisionsSurfaceOffset;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		[HideInInspector]
		public LayerMask stickyCollisionsMask;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[HideInInspector]
		public bool collisionPrecision;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x331")]
		[HideInInspector]
		public bool forceCollisionCaching;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public List<ParticleStateC> states;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[HideInInspector]
		public List<PlaygroundSpline> splines;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[HideInInspector]
		public float splineTimeOffset;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		[HideInInspector]
		public bool treatAsOneSpline;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private int splineIndex;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[HideInInspector]
		public WorldObject worldObject;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[HideInInspector]
		public SkinnedWorldObject skinnedWorldObject;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[HideInInspector]
		public bool forceSkinnedMeshUpdateOnMainThread;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[HideInInspector]
		public Transform sourceTransform;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[HideInInspector]
		public List<PlaygroundTransformC> sourceTransforms;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[HideInInspector]
		public bool treatAsOneTransform;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		private int transformIndex;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[HideInInspector]
		public PaintObjectC paint;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[HideInInspector]
		public ParticleProjectionC projection;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public List<ManipulatorObjectC> manipulators;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[HideInInspector]
		public List<PlaygroundEventC> events;

		[NonSerialized]
		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public PlaygroundCache playgroundCache;

		[NonSerialized]
		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public ParticleSystem.Particle[] particleCache;

		[NonSerialized]
		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public CollisionCache collisionCache;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[HideInInspector]
		public List<PlaygroundSave> snapshots;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		[HideInInspector]
		public bool loadFromStart;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		[HideInInspector]
		public int loadFrom;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		[HideInInspector]
		public bool loadTransition;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		[HideInInspector]
		public TRANSITIONTYPEC loadTransitionType;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		[HideInInspector]
		public float loadTransitionTime;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[HideInInspector]
		public PlaygroundCache snapshotData;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		[HideInInspector]
		public float timeOfSnapshot;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		public bool isSnapshot;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		[HideInInspector]
		public ParticleSystem shurikenParticleSystem;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		[HideInInspector]
		public int particleSystemId;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		[HideInInspector]
		public GameObject particleSystemGameObject;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		[HideInInspector]
		public Transform particleSystemTransform;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		[HideInInspector]
		public Renderer particleSystemRenderer;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		[HideInInspector]
		public ParticleSystemRenderer particleSystemRenderer2;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		[HideInInspector]
		public List<PlaygroundParticlesC> eventControlledBy;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		private SimplexNoise turbulenceSimplex;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		[HideInInspector]
		public TURBULENCETYPE turbulenceType;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
		[HideInInspector]
		public float turbulenceStrength;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		[HideInInspector]
		public float turbulenceScale;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
		[HideInInspector]
		public float turbulenceTimeScale;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		[HideInInspector]
		public bool turbulenceApplyLifetimeStrength;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		[HideInInspector]
		public AnimationCurve turbulenceLifetimeStrength;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		[HideInInspector]
		public bool isReadyForThreadedCalculations;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x451")]
		[HideInInspector]
		public bool prewarm;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		[HideInInspector]
		public float prewarmTime;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		[HideInInspector]
		public int prewarmCycles;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
		[HideInInspector]
		public float particleTimescale;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private int thisLayer;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		private bool isPrewarming;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x465")]
		private bool inTransition;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		private int previousParticleCount;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		private float previousEmissionRate;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private bool cameFromNonCalculatedFrame;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x471")]
		private bool cameFromNonEmissionFrame;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x472")]
		private bool renderModeStretch;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
		private float previousSizeMin;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private float previousSizeMax;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		private float previousInitialRotationMin;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		private float previousInitialRotationMax;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		private float previousRotationSpeedMin;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private float previousRotationSpeedMax;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48C")]
		private Vector3 previousVelocityMin;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private Vector3 previousVelocityMax;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A4")]
		private Vector3 previousLocalVelocityMin;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		private Vector3 previousLocalVelocityMax;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
		private MINMAXVECTOR3METHOD previousLocalVelocityMethod;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		private MINMAXVECTOR3METHOD previousVelocityMethod;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C4")]
		private SORTINGC previousSorting;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
		private int previousNearestNeighborOrigin;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		private NEARESTNEIGHBORORIGINMETHOD previousNearestNeighborOriginMethod;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		private Vector3 previousNearestNeighborOriginVector3;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		private Transform previousNearestNeighborOriginTransform;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		private Vector3 nearestNeighborOriginTransformPosition;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F4")]
		private MASKSORTINGC previousMaskSorting;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		private VALUEMETHOD previousLifetimeValueMethod;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FC")]
		private float previousLifetime;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
		private float previousLifetimeMin;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x504")]
		private float previousLifetimeEmission;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		private bool previousEmission;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x509")]
		private bool previousLoop;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50C")]
		private float emissionStopped;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		private bool queueEmissionHalt;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x511")]
		private bool hasEmitted;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
		private int lifetimeColorId;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		private System.Random internalRandom01;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
		private float lastTimeUpdated;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
		private PlaygroundEventParticle eventParticle;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
		[HideInInspector]
		public float localTime;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x534")]
		[HideInInspector]
		public float localDeltaTime;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
		[HideInInspector]
		public int previousActiveState;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53C")]
		[HideInInspector]
		public float simulationStarted;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
		[HideInInspector]
		public bool loopExceeded;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x544")]
		[HideInInspector]
		public int loopExceededOnParticle;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
		private bool hasEventManipulatorLocal;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x549")]
		private bool hasEventManipulatorGlobal;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54A")]
		private bool hasSeveralManipulatorEvents;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54B")]
		private bool hasGlobalAffectingManipulators;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54C")]
		private Quaternion particleSystemRotation;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55C")]
		private Quaternion particleSystemInverseRotation;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56C")]
		private bool hasActiveParticles;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		private int psTransformNum;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x574")]
		private Vector3 manipulatorFix;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
		private PlaygroundParticlesC thisInstance;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
		private float t;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58C")]
		private bool cancelDeltaPositioningOnSync;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
		private Quaternion stCompensationRot;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
		private Quaternion stCompensationRotPrev;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
		private Quaternion stRot;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
		private Vector3 stDir;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5CC")]
		private bool localSpace;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5CD")]
		private bool overflow;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5CE")]
		private bool skinnedWorldObjectReady;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5CF")]
		private bool stateReadyForTextureColor;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
		private int manipulatorEventCount;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D4")]
		private bool hasEvent;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D5")]
		private bool hasTimerEvent;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D6")]
		private bool hasCollisionCache;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
		private int reportUpdateStepper;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5DC")]
		private bool isReportingBadUpdateRate;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5DD")]
		private bool isSettingLifetime;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5DE")]
		private bool isSettingParticleTime;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5DF")]
		private bool isSettingParticleCount;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
		private bool prevLoop;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E4")]
		private SOURCEC prevSource;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
		private float realSimulationTime;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5EC")]
		private bool isDoneThread;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5ED")]
		private bool threadHadNoActiveParticles;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5EE")]
		private bool isSaving;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5EF")]
		private bool isLoading;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
		private bool transitionAvailable;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F1")]
		private bool abortTransition;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F2")]
		private bool isYieldRefreshing;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F3")]
		private bool initialized;

		[Token(Token = "0x1700043E")]
		public bool IsDoneThread
		{
			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0xF5E884", Offset = "0xF5E884", VA = "0xF5E884")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0xF5E88C", Offset = "0xF5E88C", VA = "0xF5E88C")]
			set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		public float LastTimeUpdated
		{
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0xF5EF20", Offset = "0xF5EF20", VA = "0xF5EF20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E33")]
			[Address(RVA = "0xF5EF28", Offset = "0xF5EF28", VA = "0xF5EF28")]
			set
			{
			}
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xF5AC44", Offset = "0xF5AC44", VA = "0xF5AC44")]
		public void CopyTo(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xF5BBD4", Offset = "0xF5BBD4", VA = "0xF5BBD4")]
		public void CopySaveDataTo(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xF5BCF0", Offset = "0xF5BCF0", VA = "0xF5BCF0")]
		public void Emit(bool setEmission)
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xF5BF7C", Offset = "0xF5BF7C", VA = "0xF5BF7C")]
		public int Emit()
		{
			return default(int);
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xF5C3A0", Offset = "0xF5C3A0", VA = "0xF5C3A0")]
		public int Emit(Vector3 givePosition)
		{
			return default(int);
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xF5C438", Offset = "0xF5C438", VA = "0xF5C438")]
		public int Emit(Vector3 givePosition, Vector3 giveVelocity)
		{
			return default(int);
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xF5C4D0", Offset = "0xF5C4D0", VA = "0xF5C4D0")]
		public int Emit(Vector3 givePosition, Vector3 giveVelocity, Color32 giveColor)
		{
			return default(int);
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xF5C500", Offset = "0xF5C500", VA = "0xF5C500")]
		public void Emit(int quantity)
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xF5C5A4", Offset = "0xF5C5A4", VA = "0xF5C5A4")]
		public void Emit(int quantity, Vector3 givePosition, Vector3 randomVelocityMin, Vector3 randomVelocityMax, Color32 giveColor)
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xF5C77C", Offset = "0xF5C77C", VA = "0xF5C77C")]
		public void Emit(int quantity, Vector3 randomPositionMin, Vector3 randomPositionMax, Vector3 randomVelocityMin, Vector3 randomVelocityMax, Color32 giveColor)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xF5C8D0", Offset = "0xF5C8D0", VA = "0xF5C8D0")]
		public int Emit(float giveLifetime)
		{
			return default(int);
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xF5C974", Offset = "0xF5C974", VA = "0xF5C974")]
		public int Emit(Vector3 givePosition, float giveLifetime)
		{
			return default(int);
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xF5CA18", Offset = "0xF5CA18", VA = "0xF5CA18")]
		public int Emit(Vector3 givePosition, Vector3 giveVelocity, float giveLifetime)
		{
			return default(int);
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xF5CAB8", Offset = "0xF5CAB8", VA = "0xF5CAB8")]
		public int Emit(Vector3 givePosition, Vector3 giveVelocity, float giveLifetime, Color32 giveColor)
		{
			return default(int);
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xF5CAF4", Offset = "0xF5CAF4", VA = "0xF5CAF4")]
		public void ThreadSafeEmit(Vector3 givePosition, Vector3 giveVelocity, Color32 giveColor)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xF5CAFC", Offset = "0xF5CAFC", VA = "0xF5CAFC")]
		public void ThreadSafeEmit(int quantity, Vector3 givePosition, Vector3 randomVelocityMin, Vector3 randomVelocityMax, Color32 giveColor)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xF5C014", Offset = "0xF5C014", VA = "0xF5C014")]
		private void EmitProcedure(Vector3 givePosition, Vector3 giveVelocity, Color32 giveColor)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xF5E7F4", Offset = "0xF5E7F4", VA = "0xF5E7F4")]
		public bool IsAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xF5E814", Offset = "0xF5E814", VA = "0xF5E814")]
		public bool IsLocalSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xF5E81C", Offset = "0xF5E81C", VA = "0xF5E81C")]
		public bool InTransition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xF5E824", Offset = "0xF5E824", VA = "0xF5E824")]
		public bool IsLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xF5E82C", Offset = "0xF5E82C", VA = "0xF5E82C")]
		public bool IsSaving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xF5E834", Offset = "0xF5E834", VA = "0xF5E834")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xF5E854", Offset = "0xF5E854", VA = "0xF5E854")]
		public bool Initialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xF5E874", Offset = "0xF5E874", VA = "0xF5E874")]
		public bool IsYieldRefreshing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xF5E87C", Offset = "0xF5E87C", VA = "0xF5E87C")]
		public bool IsSettingParticleTime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xF5E898", Offset = "0xF5E898", VA = "0xF5E898")]
		public bool IsSkinnedWorldObjectReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xF5E8BC", Offset = "0xF5E8BC", VA = "0xF5E8BC")]
		public bool HasTurbulence()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xF5E8F8", Offset = "0xF5E8F8", VA = "0xF5E8F8")]
		public bool HasOverflow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xF5E900", Offset = "0xF5E900", VA = "0xF5E900")]
		public bool HasGlobalManipulator()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xF5E908", Offset = "0xF5E908", VA = "0xF5E908")]
		public bool HasCollisionCache()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xF5E910", Offset = "0xF5E910", VA = "0xF5E910")]
		public bool HasCollided(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xF5E980", Offset = "0xF5E980", VA = "0xF5E980")]
		public Vector3 GetCollisionPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xF5E9F8", Offset = "0xF5E9F8", VA = "0xF5E9F8")]
		public Vector3 GetCollisionNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xF5EA70", Offset = "0xF5EA70", VA = "0xF5EA70")]
		public Vector3 GetStickyPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xF5EAE8", Offset = "0xF5EAE8", VA = "0xF5EAE8")]
		public void SetSticky(int index, Vector3 position, Vector3 normal, float offset, Transform parent)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xF5EC10", Offset = "0xF5EC10", VA = "0xF5EC10")]
		public void UpdateSticky(int index)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xF5ED5C", Offset = "0xF5ED5C", VA = "0xF5ED5C")]
		public void ClearCollisions()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xF5ED84", Offset = "0xF5ED84", VA = "0xF5ED84")]
		public void ClearCollisions(int index)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xF5EDC0", Offset = "0xF5EDC0", VA = "0xF5EDC0")]
		public Transform GetCollisionTransform(int index)
		{
			return null;
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xF5EE30", Offset = "0xF5EE30", VA = "0xF5EE30")]
		public int GetLayer()
		{
			return default(int);
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xF5EE38", Offset = "0xF5EE38", VA = "0xF5EE38")]
		public void SetRandomSeed(int seed)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xF5EEA4", Offset = "0xF5EEA4", VA = "0xF5EEA4")]
		public bool IsReportingBadUpdateRate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xF5EF18", Offset = "0xF5EF18", VA = "0xF5EF18")]
		public float GetDeltaTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xF5EF30", Offset = "0xF5EF30", VA = "0xF5EF30")]
		public SimplexNoise GetSimplex()
		{
			return null;
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xF5EF98", Offset = "0xF5EF98", VA = "0xF5EF98")]
		public void Kill(int p)
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xF5F130", Offset = "0xF5F130", VA = "0xF5F130")]
		public void KillAndSendManipulatorDeathEvents(int p)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xF5FF58", Offset = "0xF5FF58", VA = "0xF5FF58")]
		public void SetNoForce(int p, bool noForce)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xF5FFA0", Offset = "0xF5FFA0", VA = "0xF5FFA0")]
		public bool NoForce(int p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xF5FFE4", Offset = "0xF5FFE4", VA = "0xF5FFE4")]
		public void Translate(int p, Vector3 translation)
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xF60044", Offset = "0xF60044", VA = "0xF60044")]
		public void Position(int p, Vector3 position)
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xF60094", Offset = "0xF60094", VA = "0xF60094")]
		public void PositionToTransformPoint(int p, Vector3 position, Transform targetTransform)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xF60100", Offset = "0xF60100", VA = "0xF60100")]
		public void PositionToInverseTransformPoint(int p, Vector3 position, Transform targetTransform)
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xF6016C", Offset = "0xF6016C", VA = "0xF6016C")]
		public Vector3 GetParticlePosition(int p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xF601BC", Offset = "0xF601BC", VA = "0xF601BC")]
		public void SetHasActiveParticles()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xF601CC", Offset = "0xF601CC", VA = "0xF601CC")]
		public bool HasSeveralManipulatorEvents()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xF601D4", Offset = "0xF601D4", VA = "0xF601D4")]
		public void ProtectParticleFromManipulator(int particle, ManipulatorObjectC manipulator)
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xF60258", Offset = "0xF60258", VA = "0xF60258")]
		public void RemoveParticleProtection(int particle)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xF6029C", Offset = "0xF6029C", VA = "0xF6029C")]
		public bool IsSettingLifetime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xF602A4", Offset = "0xF602A4", VA = "0xF602A4")]
		public bool IsPrewarming()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xF602AC", Offset = "0xF602AC", VA = "0xF602AC")]
		public bool IsParticleInsideManipulator(int particleId, ManipulatorObjectC manipulator)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xF60348", Offset = "0xF60348", VA = "0xF60348")]
		public int GetSplineIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xF60350", Offset = "0xF60350", VA = "0xF60350")]
		public int GetTransformIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xF60358", Offset = "0xF60358", VA = "0xF60358")]
		public void RefreshMaskSorting()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xF604E8", Offset = "0xF604E8", VA = "0xF604E8")]
		public static PlaygroundParticlesC CreatePlaygroundParticles(Texture2D[] images, string name, Vector3 position, Quaternion rotation, Vector3 offset, float particleSize, float scale, Material material)
		{
			return null;
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xF60AF4", Offset = "0xF60AF4", VA = "0xF60AF4")]
		public static void OnCreatePlaygroundParticles(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xF607EC", Offset = "0xF607EC", VA = "0xF607EC")]
		public static PlaygroundParticlesC CreateParticleObject(string name, Vector3 position, Quaternion rotation, float particleSize, Material material)
		{
			return null;
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xF6122C", Offset = "0xF6122C", VA = "0xF6122C")]
		public static WorldObject NewWorldObject(Transform meshTransform)
		{
			return null;
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xF613A0", Offset = "0xF613A0", VA = "0xF613A0")]
		public static SkinnedWorldObject NewSkinnedWorldObject(Transform meshTransform)
		{
			return null;
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xF61514", Offset = "0xF61514", VA = "0xF61514")]
		public static SkinnedWorldObject NewSkinnedWorldObject(Transform meshTransform, int downResolution)
		{
			return null;
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xF61540", Offset = "0xF61540", VA = "0xF61540")]
		public static PaintObjectC NewPaintObject(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xF615B8", Offset = "0xF615B8", VA = "0xF615B8")]
		public static ParticleProjectionC NewProjectionObject(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xF61630", Offset = "0xF61630", VA = "0xF61630")]
		public static ManipulatorObjectC NewManipulatorObject(MANIPULATORTYPEC type, LayerMask affects, Transform manipulatorTransform, float size, float strength, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xF61808", Offset = "0xF61808", VA = "0xF61808")]
		public static void SetColor(PlaygroundParticlesC playgroundParticles, int to)
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xF61958", Offset = "0xF61958", VA = "0xF61958")]
		public static void SetColor(PlaygroundParticlesC playgroundParticles, Color color)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xF61A20", Offset = "0xF61A20", VA = "0xF61A20")]
		public static void GetPosition(SkinnedWorldObject particleStateWorldObject, bool updateNormals)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xF61CF0", Offset = "0xF61CF0", VA = "0xF61CF0")]
		public static void GetPosition(Vector3[] v3, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xF61DB4", Offset = "0xF61DB4", VA = "0xF61DB4")]
		public static void GetProceduralPosition(Vector3[] v3, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xF61F40", Offset = "0xF61F40", VA = "0xF61F40")]
		public static void GetNormals(Vector3[] v3, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xF61F64", Offset = "0xF61F64", VA = "0xF61F64")]
		public static void SetSize(PlaygroundParticlesC playgroundParticles, float size)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xF62020", Offset = "0xF62020", VA = "0xF62020")]
		public void RefreshSystemRandom()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xF6207C", Offset = "0xF6207C", VA = "0xF6207C")]
		public static void SetSizeRandom(PlaygroundParticlesC playgroundParticles, float sizeMinimum, float sizeMaximum)
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xF620DC", Offset = "0xF620DC", VA = "0xF620DC")]
		public static void SetRotationRandom(PlaygroundParticlesC playgroundParticles, float rotationMinimum, float rotationMaximum)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xF621A8", Offset = "0xF621A8", VA = "0xF621A8")]
		public static void SetInitialRotationRandom(PlaygroundParticlesC playgroundParticles, float rotationMinimum, float rotationMaximum)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xF62274", Offset = "0xF62274", VA = "0xF62274")]
		public static void SetVelocityRandom(PlaygroundParticlesC playgroundParticles, Vector3 velocityMinimum, Vector3 velocityMaximum)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xF6269C", Offset = "0xF6269C", VA = "0xF6269C")]
		public static void SetLocalVelocityRandom(PlaygroundParticlesC playgroundParticles, Vector3 velocityMinimum, Vector3 velocityMaximum)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xF628C0", Offset = "0xF628C0", VA = "0xF628C0")]
		public static void SetMaterial(PlaygroundParticlesC playgroundParticles, Material particleMaterial)
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xF628E4", Offset = "0xF628E4", VA = "0xF628E4")]
		public static void SetAlpha(PlaygroundParticlesC playgroundParticles, float alpha)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xF629B8", Offset = "0xF629B8", VA = "0xF629B8")]
		public static void Translate(PlaygroundParticlesC playgroundParticles, Vector3 direction)
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xF62A6C", Offset = "0xF62A6C", VA = "0xF62A6C")]
		public static void Add(PlaygroundParticlesC playgroundParticles, ParticleStateC state)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xF62AE4", Offset = "0xF62AE4", VA = "0xF62AE4")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xF62C10", Offset = "0xF62C10", VA = "0xF62C10")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, Texture2D depthmap, float depthmapStrength, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xF62DB8", Offset = "0xF62DB8", VA = "0xF62DB8")]
		public static void Destroy(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xF62EB8", Offset = "0xF62EB8", VA = "0xF62EB8")]
		public static void SetLifetime(PlaygroundParticlesC playgroundParticles, SORTINGC sorting, float time)
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xF62F34", Offset = "0xF62F34", VA = "0xF62F34")]
		public static void SetLifetimeThreadSafe(PlaygroundParticlesC playgroundParticles, SORTINGC sorting, float time)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xF6303C", Offset = "0xF6303C", VA = "0xF6303C")]
		public static void SetLifetimeSubtraction(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xF631C4", Offset = "0xF631C4", VA = "0xF631C4")]
		public static void SetEmissionRate(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xF6346C", Offset = "0xF6346C", VA = "0xF6346C")]
		public static void SetParticleTimeNow(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xF638C8", Offset = "0xF638C8", VA = "0xF638C8")]
		public static void SetParticleTimeNowWithRestEmission(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xF639E0", Offset = "0xF639E0", VA = "0xF639E0")]
		public static Color32 GetColorAtLifetime(PlaygroundParticlesC playgroundParticles, float time)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xF63A20", Offset = "0xF63A20", VA = "0xF63A20")]
		public static void SetColorAtLifetime(PlaygroundParticlesC playgroundParticles, float time)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xF63AE0", Offset = "0xF63AE0", VA = "0xF63AE0")]
		public static void SetColorWithLifetimeSorting(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xF63BD0", Offset = "0xF63BD0", VA = "0xF63BD0")]
		public bool IsSettingParticleCount()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xF6103C", Offset = "0xF6103C", VA = "0xF6103C")]
		public static void SetParticleCount(PlaygroundParticlesC playgroundParticles, int amount)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xF63BD8", Offset = "0xF63BD8", VA = "0xF63BD8")]
		public bool UpdateSystem()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xF6476C", Offset = "0xF6476C", VA = "0xF6476C")]
		public void UpdateShuriken()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xF67CD8", Offset = "0xF67CD8", VA = "0xF67CD8")]
		public static void SetInitialTargetPosition(PlaygroundParticlesC playgroundParticles, Vector3 position, bool refreshParticleSystem)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xF5BDE8", Offset = "0xF5BDE8", VA = "0xF5BDE8")]
		public static void Emission(PlaygroundParticlesC playgroundParticles, bool emission, bool callRestEmission)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xF67ECC", Offset = "0xF67ECC", VA = "0xF67ECC")]
		public static float SignedAngle(Vector3 a, Vector3 b, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xF67F9C", Offset = "0xF67F9C", VA = "0xF67F9C")]
		public static Vector3 RandomVector3(System.Random random, Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xF67FA0", Offset = "0xF67FA0", VA = "0xF67FA0")]
		public bool PrepareThreadedCalculations()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xF69804", Offset = "0xF69804", VA = "0xF69804")]
		public static void NewCalculatedThread(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xF6990C", Offset = "0xF6990C", VA = "0xF6990C")]
		public static void NewCalculatedThread(PlaygroundParticlesC[] playgroundParticles)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xF69A44", Offset = "0xF69A44", VA = "0xF69A44")]
		private Color32 GetParticleColor(int p, float normalizedLife, float normalizedP)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xF66DE0", Offset = "0xF66DE0", VA = "0xF66DE0")]
		private void SetSourcePosition(int p)
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xF69E80", Offset = "0xF69E80", VA = "0xF69E80")]
		public static void ThreadedCalculations(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xF6F148", Offset = "0xF6F148", VA = "0xF6F148")]
		public static void SendDeathEvents(PlaygroundParticlesC playgroundParticles, int p)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xF6E854", Offset = "0xF6E854", VA = "0xF6E854")]
		public static void Turbulence(PlaygroundParticlesC playgroundParticles, SimplexNoise turbulenceSimplex, int p, float t, TURBULENCETYPE turbulenceType, float turbulenceTimeScale, float turbulenceScale, float turbulenceStrength, bool turbulenceApplyLifetimeStrength, AnimationCurve turbulenceLifetimeStrength)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xF700F0", Offset = "0xF700F0", VA = "0xF700F0")]
		public void CalculateCollisions()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xF64CC8", Offset = "0xF64CC8", VA = "0xF64CC8")]
		public static void Collisions(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xF69E34", Offset = "0xF69E34", VA = "0xF69E34")]
		public static Vector3 GetOverflow2(Vector3 overflow, int currentVal, int maxVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xF69E4C", Offset = "0xF69E4C", VA = "0xF69E4C")]
		public static Vector3 GetOverflow2(Vector3 overflow, Vector3 direction, int currentVal, int maxVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xF69E70", Offset = "0xF69E70", VA = "0xF69E70")]
		public static Vector3 Vector3Scale(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xF6F5E8", Offset = "0xF6F5E8", VA = "0xF6F5E8")]
		public static void CalculateManipulator(PlaygroundParticlesC playgroundParticles, ManipulatorObjectC thisManipulator, int p, float t, float life, Vector3 particlePosition, Vector3 manipulatorPosition, bool localSpace)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xF70118", Offset = "0xF70118", VA = "0xF70118")]
		public static void PropertyManipulator(PlaygroundParticlesC playgroundParticles, ManipulatorObjectC thisManipulator, ManipulatorPropertyC thisManipulatorProperty, int p, float t, Vector3 particlePosition, Vector3 manipulatorPosition, float manipulatorDistance, bool localSpace, bool contains)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xF73A80", Offset = "0xF73A80", VA = "0xF73A80")]
		public void RefreshScatter()
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xF63180", Offset = "0xF63180", VA = "0xF63180")]
		public static float RandomRange(System.Random random, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xF5C6C4", Offset = "0xF5C6C4", VA = "0xF5C6C4")]
		public static Vector3 RandomRange(System.Random random, Vector3 min, Vector3 max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xF62498", Offset = "0xF62498", VA = "0xF62498")]
		public static Vector3 RandomRangeSpherical(System.Random random, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xF6259C", Offset = "0xF6259C", VA = "0xF6259C")]
		public static Vector3 RandomRangeSpherical(System.Random random, float min, float max, float step)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xF73C70", Offset = "0xF73C70", VA = "0xF73C70")]
		public static Vector3 RandomRangeSpherical(System.Random random, float min, float max, float sectorA, float sectorB)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xF73D88", Offset = "0xF73D88", VA = "0xF73D88")]
		public static Vector3 RandomRangeSpherical(System.Random random, float min, float max, float sectorA, float sectorB, float step)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xF60F58", Offset = "0xF60F58", VA = "0xF60F58")]
		public static float[] RandomFloat(int length, float min, float max, System.Random random)
		{
			return null;
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xF6E3F4", Offset = "0xF6E3F4", VA = "0xF6E3F4")]
		public void InactivateParticle(int particleId)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xF5BEFC", Offset = "0xF5BEFC", VA = "0xF5BEFC")]
		public void InactivateParticles()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xF5CC14", Offset = "0xF5CC14", VA = "0xF5CC14")]
		public static void Rebirth(PlaygroundParticlesC playgroundParticles, int p, System.Random random)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xF6F0EC", Offset = "0xF6F0EC", VA = "0xF6F0EC")]
		private void SendEvent(EVENTTYPEC eventType, int p)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xF74714", Offset = "0xF74714", VA = "0xF74714")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity)
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xF700F8", Offset = "0xF700F8", VA = "0xF700F8")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity, Transform collisionTransform)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xF70104", Offset = "0xF70104", VA = "0xF70104")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity, Transform collisionTransform, Collider collisionCollider)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xF7010C", Offset = "0xF7010C", VA = "0xF7010C")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity, Transform collisionTransform, Collider2D collisionCollider2D)
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xF73E9C", Offset = "0xF73E9C", VA = "0xF73E9C")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity, Transform collisionTransform, Collider collisionCollider, Collider2D collisionCollider2D)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xF5F714", Offset = "0xF5F714", VA = "0xF5F714")]
		public bool UpdateEventParticle(PlaygroundEventParticle eParticle, int p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xF74724", Offset = "0xF74724", VA = "0xF74724")]
		public void RemoveState(int i)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xF62E30", Offset = "0xF62E30", VA = "0xF62E30")]
		public static void Clear(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xF747EC", Offset = "0xF747EC", VA = "0xF747EC")]
		public void Save()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xF74984", Offset = "0xF74984", VA = "0xF74984")]
		public void Save(string saveName)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xF7490C", Offset = "0xF7490C", VA = "0xF7490C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC06B4", Offset = "0xAC06B4")]
		private IEnumerator SaveRoutine(string saveName)
		{
			return null;
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xF74A50", Offset = "0xF74A50", VA = "0xF74A50")]
		public void Load(int loadPointer)
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xF74BB0", Offset = "0xF74BB0", VA = "0xF74BB0")]
		public void Load(string loadName)
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xF74D3C", Offset = "0xF74D3C", VA = "0xF74D3C")]
		public void LoadAndApplyMask(int loadPointer, int loadMask)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xF74B30", Offset = "0xF74B30", VA = "0xF74B30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC0714", Offset = "0xAC0714")]
		private IEnumerator LoadRoutine(int loadPointer, int mask)
		{
			return null;
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xF74E20", Offset = "0xF74E20", VA = "0xF74E20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC0774", Offset = "0xAC0774")]
		private IEnumerator LoadTransition(int loadPointer)
		{
			return null;
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xF74E9C", Offset = "0xF74E9C", VA = "0xF74E9C")]
		private float TransitionType(INDIVIDUALTRANSITIONTYPEC thisTransitionType, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xF74F10", Offset = "0xF74F10", VA = "0xF74F10")]
		private void CheckReferences()
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xF75244", Offset = "0xF75244", VA = "0xF75244")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC07D4", Offset = "0xAC07D4")]
		public IEnumerator YieldedRefresh()
		{
			return null;
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xF752B0", Offset = "0xF752B0", VA = "0xF752B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC0834", Offset = "0xAC0834")]
		private IEnumerator Prewarm(float time, int resolution)
		{
			return null;
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xF7533C", Offset = "0xF7533C", VA = "0xF7533C")]
		private void PrewarmStepper(float time, int resolution)
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xF75470", Offset = "0xF75470", VA = "0xF75470")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xF64260", Offset = "0xF64260", VA = "0xF64260")]
		public void Start()
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xF641F4", Offset = "0xF641F4", VA = "0xF641F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC0894", Offset = "0xAC0894")]
		public IEnumerator Boot()
		{
			return null;
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xF7569C", Offset = "0xF7569C", VA = "0xF7569C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xF75954", Offset = "0xF75954", VA = "0xF75954")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xF7595C", Offset = "0xF7595C", VA = "0xF7595C")]
		public PlaygroundParticlesC()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class MeshParticles : PlaygroundParticlesC
	{
		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xBEAEC8", Offset = "0xBEAEC8", VA = "0xBEAEC8")]
		public static PlaygroundParticlesC CreateMeshParticles(Mesh[] meshes, Texture2D[] textures, Texture2D[] heightMap, string name, Vector3 position, Quaternion rotation, float particleScale, Vector3[] offsets, Material material)
		{
			return null;
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xBEB2D0", Offset = "0xBEB2D0", VA = "0xBEB2D0")]
		public static void Add(PlaygroundParticlesC meshParticles, Mesh mesh, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xBEB3FC", Offset = "0xBEB3FC", VA = "0xBEB3FC")]
		public static void Add(PlaygroundParticlesC meshParticles, Mesh mesh, Texture2D texture, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xBEB538", Offset = "0xBEB538", VA = "0xBEB538")]
		public MeshParticles()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A4")]
	public class PlaygroundSave
	{
		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA87FC", Offset = "0xAA87FC")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x400249A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundSave <>4__this;

			[Token(Token = "0x400249B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlaygroundParticlesC loadTo;

			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0xE647C0", Offset = "0xE647C0", VA = "0xE647C0")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0xE647C8", Offset = "0xE647C8", VA = "0xE647C8")]
			internal void <Load>b__0()
			{
			}
		}

		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA880C", Offset = "0xAA880C")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x400249C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x400249D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlaygroundSave <>4__this;

			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xE64868", Offset = "0xE64868", VA = "0xE64868")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0xE64870", Offset = "0xE64870", VA = "0xE64870")]
			internal void <Save>b__0()
			{
			}
		}

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float time;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float lifetime;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int particleCount;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float version;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public PlaygroundParticlesC settings;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public PlaygroundTransformC transform;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Material material;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int loadMode;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public bool loadTransform;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[HideInInspector]
		public bool loadMaterial;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[HideInInspector]
		public bool setMaterialAfterTransition;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float transitionMultiplier;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public INDIVIDUALTRANSITIONTYPEC transitionType;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool unfolded;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isLoading;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool isSaving;

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x16195F8", Offset = "0x16195F8", VA = "0x16195F8")]
		public bool IsLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x1619600", Offset = "0x1619600", VA = "0x1619600")]
		public bool IsSaving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x1619608", Offset = "0x1619608", VA = "0x1619608")]
		public void Load(PlaygroundParticlesC loadTo)
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x1619840", Offset = "0x1619840", VA = "0x1619840")]
		public void Save(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x16199C0", Offset = "0x16199C0", VA = "0x16199C0")]
		public PlaygroundSave Clone()
		{
			return null;
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x1619AB0", Offset = "0x1619AB0", VA = "0x1619AB0")]
		public PlaygroundSave()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A7")]
	public class PlaygroundEventParticle
	{
		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public float initialSize;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public float size;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float rotation;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float life;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float totalLifetime;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float birth;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float birthDelay;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float death;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool emission;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[HideInInspector]
		public bool rebirth;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float lifetimeOffset;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3 velocity;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public Vector3 initialVelocity;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3 initialLocalVelocity;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public Vector3 position;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 targetPosition;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public Vector3 targetDirection;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Vector3 previousTargetPosition;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public Vector3 previousParticlePosition;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 collisionParticlePosition;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public Vector3 localSpaceMovementCompensation;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Vector3 scatterPosition;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public float initialRotation;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float rotationSpeed;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public Color32 color;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Color32 scriptedColor;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public Color32 initialColor;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public int lifetimeColorId;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public bool noForce;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		[HideInInspector]
		public bool isNonBirthed;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		[HideInInspector]
		public bool isFirstLoop;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public int particleId;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		public int particleSystemId;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public int manipulatorId;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public bool changedByProperty;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		[HideInInspector]
		public bool changedByPropertyColor;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		[HideInInspector]
		public bool changedByPropertyColorLerp;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE7")]
		[HideInInspector]
		public bool changedByPropertyColorKeepAlpha;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public bool changedByPropertySize;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		[HideInInspector]
		public bool changedByPropertyTarget;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		[HideInInspector]
		public bool changedByPropertyDeath;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[HideInInspector]
		public int propertyTarget;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public int propertyId;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public int propertyColorId;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public int excludeFromManipulatorId;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[HideInInspector]
		public bool isMasked;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public float maskAlpha;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public Transform collisionTransform;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public Collider collisionCollider;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Collider2D collisionCollider2D;

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xF5A938", Offset = "0xF5A938", VA = "0xF5A938")]
		public PlaygroundEventParticle Clone()
		{
			return null;
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xF5AB74", Offset = "0xF5AB74", VA = "0xF5AB74")]
		public PlaygroundEventParticle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A8")]
	public class PlaygroundCache
	{
		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public float[] initialSize;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float[] size;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float[] rotation;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float[] life;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float[] lifetimeSubtraction;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float[] birth;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float[] birthDelay;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float[] death;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool[] emission;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool[] rebirth;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public float[] lifetimeOffset;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3[] velocity;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Vector3[] initialVelocity;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Vector3[] initialLocalVelocity;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Vector3[] position;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Vector3[] targetPosition;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Vector3[] targetDirection;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3[] previousTargetPosition;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3[] previousParticlePosition;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Vector3[] collisionParticlePosition;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Vector3[] localSpaceMovementCompensation;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Vector3[] scatterPosition;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float[] initialRotation;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float[] rotationSpeed;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Color32[] color;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Color32[] scriptedColor;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public Color32[] initialColor;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public int[] lifetimeColorId;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public bool[] noForce;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public bool[] isNonBirthed;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public bool[] isFirstLoop;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public bool[] simulate;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public bool[] isCalculatedThisFrame;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public bool[] changedByProperty;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool[] changedByPropertyColor;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public bool[] changedByPropertyColorLerp;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool[] changedByPropertyColorKeepAlpha;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public bool[] changedByPropertySize;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public bool[] changedByPropertyTarget;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public bool[] changedByPropertyDeath;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public int[] propertyTarget;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public int[] propertyId;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public int[] propertyColorId;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[HideInInspector]
		public int[] manipulatorId;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[HideInInspector]
		public int[] excludeFromManipulatorId;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public bool[] isMasked;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public float[] maskAlpha;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[HideInInspector]
		public int[] maskSorting;

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xF59D00", Offset = "0xF59D00", VA = "0xF59D00")]
		public PlaygroundCache Clone()
		{
			return null;
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xF5A318", Offset = "0xF5A318", VA = "0xF5A318")]
		public PlaygroundCache()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A9")]
	public class CollisionCache
	{
		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool[] hasCollided;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Vector3[] collisionPosition;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector3[] collisionNormal;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform[] collisionTransform;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject[] collisionGameObject;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3[] collisionTransformPosition;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] stickyPosition;

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x1083B84", Offset = "0x1083B84", VA = "0x1083B84")]
		public CollisionCache(int amount)
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x1083C8C", Offset = "0x1083C8C", VA = "0x1083C8C")]
		public void Set(int index, Vector3 position, Vector3 normal, Transform transform)
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x1083DC0", Offset = "0x1083DC0", VA = "0x1083DC0")]
		public void SetSticky(int index, Vector3 position, Vector3 normal, float offset, Transform transform)
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x1083F88", Offset = "0x1083F88", VA = "0x1083F88")]
		public void UpdateStickyPosition(int index)
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x1084130", Offset = "0x1084130", VA = "0x1084130")]
		public void Reset(int index)
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x1084174", Offset = "0x1084174", VA = "0x1084174")]
		public void ClearCollisions()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x10841C8", Offset = "0x10841C8", VA = "0x10841C8")]
		public CollisionCache Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x20005AA")]
	public class SimplexNoise
	{
		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[][] grad3;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[][] grad4;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int[] p;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int[] perm;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int[][] simplex;

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x1046AA0", Offset = "0x1046AA0", VA = "0x1046AA0")]
		static SimplexNoise()
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x1048C84", Offset = "0x1048C84", VA = "0x1048C84")]
		private static int fastfloor(double x)
		{
			return default(int);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x1048CAC", Offset = "0x1048CAC", VA = "0x1048CAC")]
		private static double dot(int[] g, double x, double y)
		{
			return default(double);
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x1048CF8", Offset = "0x1048CF8", VA = "0x1048CF8")]
		private static double dot(int[] g, double x, double y, double z)
		{
			return default(double);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x1048D5C", Offset = "0x1048D5C", VA = "0x1048D5C")]
		private static double dot(int[] g, double x, double y, double z, double w)
		{
			return default(double);
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x1048DD4", Offset = "0x1048DD4", VA = "0x1048DD4")]
		public double noise(double xin, double yin, double zin)
		{
			return default(double);
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x1049474", Offset = "0x1049474", VA = "0x1049474")]
		public double noise(double x, double y, double z, double w)
		{
			return default(double);
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x104A38C", Offset = "0x104A38C", VA = "0x104A38C")]
		public SimplexNoise()
		{
		}
	}
}
namespace PlaygroundSplines
{
	[Token(Token = "0x20005AB")]
	[ExecuteInEditMode]
	public class PlaygroundSpline : MonoBehaviour
	{
		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Vector3> points;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<BezierControlPointMode> modes;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool loop;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<TransformNode> transformNodes;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool reverse;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public float timeOffset;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3 positionOffset;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Transform splineTransform;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Matrix4x4 splineTransformMx;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public List<Transform> usedBy;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public float fixedVelocityOnNewNode;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public bool moveTransformsAsBeziers;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		[HideInInspector]
		public bool exportWithNodeStructure;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool drawSplinePreviews;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		[HideInInspector]
		public bool drawGizmo;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public float bezierWidth;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 previousPosition;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion previousRotation;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 previousScale;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool isReady;

		[Token(Token = "0x1700044C")]
		public bool Loop
		{
			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0x1619E40", Offset = "0x1619E40", VA = "0x1619E40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0x1619E48", Offset = "0x1619E48", VA = "0x1619E48")]
			set
			{
			}
		}

		[Token(Token = "0x1700044D")]
		public int ControlPointCount
		{
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0x161A254", Offset = "0x161A254", VA = "0x161A254")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700044E")]
		public int NodeCount
		{
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x1619F48", Offset = "0x1619F48", VA = "0x1619F48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x1619C94", Offset = "0x1619C94", VA = "0x1619C94")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x1619C9C", Offset = "0x1619C9C", VA = "0x1619C9C")]
		public bool AddUser(Transform thisTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x1619D3C", Offset = "0x1619D3C", VA = "0x1619D3C")]
		public bool RemoveUser(Transform thisTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x1619DDC", Offset = "0x1619DDC", VA = "0x1619DDC")]
		public bool HasUser(Transform thisTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x161A2A0", Offset = "0x161A2A0", VA = "0x161A2A0")]
		public Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x161A3B4", Offset = "0x161A3B4", VA = "0x161A3B4")]
		public void SetControlPoint(int index, Vector3 point, Vector3 offset)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x1619FB0", Offset = "0x1619FB0", VA = "0x1619FB0")]
		public void SetControlPoint(int index, Vector3 point)
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x161A7A4", Offset = "0x161A7A4", VA = "0x161A7A4")]
		public void SetPoints(Vector3[] vectors)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x161A4EC", Offset = "0x161A4EC", VA = "0x161A4EC")]
		public bool PointHasTransform(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x161AA4C", Offset = "0x161AA4C", VA = "0x161AA4C")]
		public void TranslateSpline(Vector3 translation)
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x161AB44", Offset = "0x161AB44", VA = "0x161AB44")]
		public Vector3 GetTransformPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x161AB50", Offset = "0x161AB50", VA = "0x161AB50")]
		public Quaternion GetTransformRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x161AB5C", Offset = "0x161AB5C", VA = "0x161AB5C")]
		public Vector3 GetTransformScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x161AB68", Offset = "0x161AB68", VA = "0x161AB68")]
		public BezierControlPointMode GetControlPointMode(int index)
		{
			return default(BezierControlPointMode);
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x161ABF8", Offset = "0x161ABF8", VA = "0x161ABF8")]
		public void SetControlPointMode(int index, BezierControlPointMode mode)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x161A568", Offset = "0x161A568", VA = "0x161A568")]
		private void EnforceMode(int index)
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x161ACF0", Offset = "0x161ACF0", VA = "0x161ACF0")]
		public Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x161AFC4", Offset = "0x161AFC4", VA = "0x161AFC4")]
		public Vector3 GetVelocity(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x161A2A4", Offset = "0x161A2A4", VA = "0x161A2A4")]
		public Vector3 GetPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x161AEB4", Offset = "0x161AEB4", VA = "0x161AEB4")]
		public Vector3 GetInversePoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x161B174", Offset = "0x161B174", VA = "0x161B174")]
		public Vector3 GetPointWorldSpace(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x161A3C4", Offset = "0x161A3C4", VA = "0x161A3C4")]
		private void SetPoint(int index, Vector3 position)
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x161B298", Offset = "0x161B298", VA = "0x161B298")]
		private void TranslatePoint(int index, Vector3 translation)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x161B3F8", Offset = "0x161B3F8", VA = "0x161B3F8")]
		private float CPOB(Vector3 aP, float aStart, float aEnd, int aSteps)
		{
			return default(float);
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x161B4FC", Offset = "0x161B4FC", VA = "0x161B4FC")]
		public float ClosestTimeFromPoint(Vector3 aP)
		{
			return default(float);
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x161B588", Offset = "0x161B588", VA = "0x161B588")]
		public Vector3 ClosestPointFromPosition(Vector3 aP)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x161B5AC", Offset = "0x161B5AC", VA = "0x161B5AC")]
		public Vector3 GetDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x161B62C", Offset = "0x161B62C", VA = "0x161B62C")]
		public void AddNode()
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x161B698", Offset = "0x161B698", VA = "0x161B698")]
		public void AddNode(int index)
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x161BB50", Offset = "0x161BB50", VA = "0x161BB50")]
		public void RemoveFirst()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x161BCCC", Offset = "0x161BCCC", VA = "0x161BCCC")]
		public void RemoveLast()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x161BB58", Offset = "0x161BB58", VA = "0x161BB58")]
		public void RemoveNode(int index)
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x161BD38", Offset = "0x161BD38", VA = "0x161BD38")]
		public void ReverseAllNodes()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x161BDD4", Offset = "0x161BDD4", VA = "0x161BDD4")]
		public void SwapNodes(int from, int to)
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x161C168", Offset = "0x161C168", VA = "0x161C168")]
		public Transform[] ExportToTransforms()
		{
			return null;
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x161C510", Offset = "0x161C510", VA = "0x161C510")]
		public Vector3[] ExportToVector3()
		{
			return null;
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x161C5F4", Offset = "0x161C5F4", VA = "0x161C5F4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x161C864", Offset = "0x161C864", VA = "0x161C864")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x161CA68", Offset = "0x161CA68", VA = "0x161CA68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x161C894", Offset = "0x161C894", VA = "0x161C894")]
		private void SetMatrix()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x161CB14", Offset = "0x161CB14", VA = "0x161CB14")]
		public PlaygroundSpline()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public static class Bezier
	{
		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x134BA48", Offset = "0x134BA48", VA = "0x134BA48")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x134BB08", Offset = "0x134BB08", VA = "0x134BB08")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x134BB64", Offset = "0x134BB64", VA = "0x134BB64")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x134BC64", Offset = "0x134BC64", VA = "0x134BC64")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20005AD")]
	public class TransformNode
	{
		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isAvailable;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 position;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 inversePosition;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 previousPosition;

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xFF5620", Offset = "0xFF5620", VA = "0xFF5620")]
		public bool Update(Transform splineTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xFF570C", Offset = "0xFF570C", VA = "0xFF570C")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xFF572C", Offset = "0xFF572C", VA = "0xFF572C")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xFF5738", Offset = "0xFF5738", VA = "0xFF5738")]
		public Vector3 GetInvsersePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xFF5744", Offset = "0xFF5744", VA = "0xFF5744")]
		public void SetPosition(Vector3 newPosition)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xFF5804", Offset = "0xFF5804", VA = "0xFF5804")]
		public void Translate(Vector3 translation)
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xFF58D4", Offset = "0xFF58D4", VA = "0xFF58D4")]
		public Vector3 GetPositionDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xFF58F4", Offset = "0xFF58F4", VA = "0xFF58F4")]
		public TransformNode()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public enum SplineMode
	{
		[Token(Token = "0x4002527")]
		Vector3,
		[Token(Token = "0x4002528")]
		Transform
	}
	[Token(Token = "0x20005AF")]
	public enum BezierControlPointMode
	{
		[Token(Token = "0x400252A")]
		Aligned,
		[Token(Token = "0x400252B")]
		Mirrored,
		[Token(Token = "0x400252C")]
		Free
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20005B0")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700044F")]
		public bool Highlight
		{
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0x1084410", Offset = "0x1084410", VA = "0x1084410")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0x1084418", Offset = "0x1084418", VA = "0x1084418")]
			set
			{
			}
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x1084424", Offset = "0x1084424", VA = "0x1084424")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x10845EC", Offset = "0x10845EC", VA = "0x10845EC", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x1084614", Offset = "0x1084614", VA = "0x1084614", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x108463C", Offset = "0x108463C", VA = "0x108463C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x10844EC", Offset = "0x10844EC", VA = "0x10844EC")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x10848D4", Offset = "0x10848D4", VA = "0x10848D4")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20005B1")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000450")]
		public bool InRange
		{
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x1090478", Offset = "0x1090478", VA = "0x1090478")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0x1090480", Offset = "0x1090480", VA = "0x1090480")]
			set
			{
			}
		}

		[Token(Token = "0x17000451")]
		public bool Targeted
		{
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0x10905FC", Offset = "0x10905FC", VA = "0x10905FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0x1090604", Offset = "0x1090604", VA = "0x1090604")]
			set
			{
			}
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x1090610", Offset = "0x1090610", VA = "0x1090610", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x109048C", Offset = "0x109048C", VA = "0x109048C")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x1090740", Offset = "0x1090740", VA = "0x1090740")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20005B2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA882C", Offset = "0xAA882C")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000452")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0x1090748", Offset = "0x1090748", VA = "0x1090748")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F51")]
			[Address(RVA = "0x1090750", Offset = "0x1090750", VA = "0x1090750")]
			set
			{
			}
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x109076C", Offset = "0x109076C", VA = "0x109076C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x109099C", Offset = "0x109099C", VA = "0x109099C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x109125C", Offset = "0x109125C", VA = "0x109125C", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x10916D4", Offset = "0x10916D4", VA = "0x10916D4", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x1091994", Offset = "0x1091994", VA = "0x1091994")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x1090BF0", Offset = "0x1090BF0", VA = "0x1090BF0")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x1091A84", Offset = "0x1091A84", VA = "0x1091A84")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x1091E80", Offset = "0x1091E80", VA = "0x1091E80", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x1091E98", Offset = "0x1091E98", VA = "0x1091E98", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x1091EA0", Offset = "0x1091EA0", VA = "0x1091EA0")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x24D5448", Offset = "0x24D5448", VA = "0x24D5448")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x24D5500", Offset = "0x24D5500", VA = "0x24D5500")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x24D55B8", Offset = "0x24D55B8", VA = "0x24D55B8")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20005B4")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20005B5")]
		public enum CrosshairState
		{
			[Token(Token = "0x400254F")]
			Disabled,
			[Token(Token = "0x4002550")]
			Enabled,
			[Token(Token = "0x4002551")]
			Targeted
		}

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x24D5678", Offset = "0x24D5678", VA = "0x24D5678")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x24D56DC", Offset = "0x24D56DC", VA = "0x24D56DC")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x24D5778", Offset = "0x24D5778", VA = "0x24D5778")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x24D57C0", Offset = "0x24D57C0", VA = "0x24D57C0")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xCD20D4", Offset = "0xCD20D4", VA = "0xCD20D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xCD21C0", Offset = "0xCD21C0", VA = "0xCD21C0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xCD21CC", Offset = "0xCD21CC", VA = "0xCD21CC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xCD21D8", Offset = "0xCD21D8", VA = "0xCD21D8")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20005B7")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xFFE3BC", Offset = "0xFFE3BC", VA = "0xFFE3BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xFFE410", Offset = "0xFFE410", VA = "0xFFE410")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xFFE77C", Offset = "0xFFE77C", VA = "0xFFE77C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xFFE880", Offset = "0xFFE880", VA = "0xFFE880")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xFFE414", Offset = "0xFFE414", VA = "0xFFE414")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xFFE984", Offset = "0xFFE984", VA = "0xFFE984")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20005B9")]
		public enum ContactTest
		{
			[Token(Token = "0x4002564")]
			PerpenTest,
			[Token(Token = "0x4002565")]
			BackwardsPress
		}

		[Token(Token = "0x4002555")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4002556")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8170", Offset = "0xAB8170")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000453")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x100388C", Offset = "0x100388C", VA = "0x100388C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000454")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x1003894", Offset = "0x1003894", VA = "0x1003894")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000455")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x10038A0", Offset = "0x10038A0", VA = "0x10038A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0AD4", Offset = "0xAC0AD4")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6001F70")]
			[Address(RVA = "0x10038A8", Offset = "0x10038A8", VA = "0x10038A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0AE4", Offset = "0xAC0AE4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x10038B0", Offset = "0x10038B0", VA = "0x10038B0", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x100399C", Offset = "0x100399C", VA = "0x100399C")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x1003B08", Offset = "0x1003B08", VA = "0x1003B08", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x10040C0", Offset = "0x10040C0", VA = "0x10040C0")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x100416C", Offset = "0x100416C", VA = "0x100416C")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x1003FD8", Offset = "0x1003FD8", VA = "0x1003FD8")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x1004278", Offset = "0x1004278", VA = "0x1004278")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x10042FC", Offset = "0x10042FC", VA = "0x10042FC")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x1004388", Offset = "0x1004388", VA = "0x1004388")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8190", Offset = "0xAB8190")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB81A0", Offset = "0xAB81A0")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000456")]
		public Collider Collider
		{
			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0x1004A64", Offset = "0x1004A64", VA = "0x1004A64", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0AF4", Offset = "0xAC0AF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x1004A6C", Offset = "0x1004A6C", VA = "0x1004A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0B04", Offset = "0xAC0B04")]
			private set
			{
			}
		}

		[Token(Token = "0x17000457")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x1004A74", Offset = "0x1004A74", VA = "0x1004A74", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0B14", Offset = "0xAC0B14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x1004A7C", Offset = "0x1004A7C", VA = "0x1004A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0B24", Offset = "0xAC0B24")]
			private set
			{
			}
		}

		[Token(Token = "0x17000458")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x1004A84", Offset = "0x1004A84", VA = "0x1004A84", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x1004AD4", Offset = "0x1004AD4", VA = "0x1004AD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x1004B58", Offset = "0x1004B58", VA = "0x1004B58")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000459")]
		Collider Collider
		{
			[Token(Token = "0x6001F81")]
			get;
		}

		[Token(Token = "0x1700045A")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001F82")]
			get;
		}

		[Token(Token = "0x1700045B")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001F83")]
			get;
		}
	}
	[Token(Token = "0x20005BC")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x1083474", Offset = "0x1083474", VA = "0x1083474")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public enum InteractionType
	{
		[Token(Token = "0x400256E")]
		Enter,
		[Token(Token = "0x400256F")]
		Stay,
		[Token(Token = "0x4002570")]
		Exit
	}
	[Token(Token = "0x20005BE")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20005BF")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4002582")]
			Mesh,
			[Token(Token = "0x4002583")]
			Skeleton,
			[Token(Token = "0x4002584")]
			Both
		}

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA888C", Offset = "0xAA888C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000467")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FA6")]
				[Address(RVA = "0xCBC948", Offset = "0xCBC948", VA = "0xCBC948", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000468")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FA8")]
				[Address(RVA = "0xCBC990", Offset = "0xCBC990", VA = "0xCBC990", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xCBC6E8", Offset = "0xCBC6E8", VA = "0xCBC6E8")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0xCBC714", Offset = "0xCBC714", VA = "0xCBC714", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xCBC718", Offset = "0xCBC718", VA = "0xCBC718", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0xCBC950", Offset = "0xCBC950", VA = "0xCBC950", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002571")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB81D0", Offset = "0xAB81D0")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700045C")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x12233AC", Offset = "0x12233AC", VA = "0x12233AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F86")]
			[Address(RVA = "0x12233E4", Offset = "0x12233E4", VA = "0x12233E4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045D")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001F87")]
			[Address(RVA = "0x122344C", Offset = "0x122344C", VA = "0x122344C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x1223484", Offset = "0x1223484", VA = "0x1223484")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045E")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x12234EC", Offset = "0x12234EC", VA = "0x12234EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x1223524", Offset = "0x1223524", VA = "0x1223524")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045F")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x122358C", Offset = "0x122358C", VA = "0x122358C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x12235C4", Offset = "0x12235C4", VA = "0x12235C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000460")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x122362C", Offset = "0x122362C", VA = "0x122362C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x1223664", Offset = "0x1223664", VA = "0x1223664")]
			private set
			{
			}
		}

		[Token(Token = "0x17000461")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0x12236CC", Offset = "0x12236CC", VA = "0x12236CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x1223700", Offset = "0x1223700", VA = "0x1223700")]
			private set
			{
			}
		}

		[Token(Token = "0x17000462")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x1223764", Offset = "0x1223764", VA = "0x1223764")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x1223798", Offset = "0x1223798", VA = "0x1223798")]
			private set
			{
			}
		}

		[Token(Token = "0x17000463")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001F93")]
			[Address(RVA = "0x12237FC", Offset = "0x12237FC", VA = "0x12237FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0x1223830", Offset = "0x1223830", VA = "0x1223830")]
			private set
			{
			}
		}

		[Token(Token = "0x17000464")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001F95")]
			[Address(RVA = "0x1223894", Offset = "0x1223894", VA = "0x1223894")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x12238C8", Offset = "0x12238C8", VA = "0x12238C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000465")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x122392C", Offset = "0x122392C", VA = "0x122392C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F98")]
			[Address(RVA = "0x1223960", Offset = "0x1223960", VA = "0x1223960")]
			private set
			{
			}
		}

		[Token(Token = "0x17000466")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0x12239C4", Offset = "0x12239C4", VA = "0x12239C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0B34", Offset = "0xAC0B34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0x1223A10", Offset = "0x1223A10", VA = "0x1223A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0B44", Offset = "0xAC0B44")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x1223A60", Offset = "0x1223A60", VA = "0x1223A60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x1223E08", Offset = "0x1223E08", VA = "0x1223E08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x1223D9C", Offset = "0x1223D9C", VA = "0x1223D9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC0B54", Offset = "0xAC0B54")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x1223E90", Offset = "0x1223E90", VA = "0x1223E90")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x1223F74", Offset = "0x1223F74", VA = "0x1223F74")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x1224154", Offset = "0x1224154", VA = "0x1224154")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x1224390", Offset = "0x1224390", VA = "0x1224390")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x122451C", Offset = "0x122451C", VA = "0x122451C")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20005C1")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005C2")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0xCC092C", Offset = "0xCC092C", VA = "0xCC092C")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000469")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0x122B01C", Offset = "0x122B01C", VA = "0x122B01C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046A")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x122B024", Offset = "0x122B024", VA = "0x122B024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046B")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x122B02C", Offset = "0x122B02C", VA = "0x122B02C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046C")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x122B034", Offset = "0x122B034", VA = "0x122B034", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000024")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x122B03C", Offset = "0x122B03C", VA = "0x122B03C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C04", Offset = "0xAC0C04")]
			add
			{
			}
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x122B0DC", Offset = "0x122B0DC", VA = "0x122B0DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C14", Offset = "0xAC0C14")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x122B1EC", Offset = "0x122B1EC", VA = "0x122B1EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C24", Offset = "0xAC0C24")]
			add
			{
			}
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x122B28C", Offset = "0x122B28C", VA = "0x122B28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C34", Offset = "0xAC0C34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x122B39C", Offset = "0x122B39C", VA = "0x122B39C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C44", Offset = "0xAC0C44")]
			add
			{
			}
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x122B43C", Offset = "0x122B43C", VA = "0x122B43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0C54", Offset = "0xAC0C54")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x122B17C", Offset = "0x122B17C", VA = "0x122B17C", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x122B32C", Offset = "0x122B32C", VA = "0x122B32C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x122B4DC", Offset = "0x122B4DC", VA = "0x122B4DC", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001FB6")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x122B54C", Offset = "0x122B54C", VA = "0x122B54C", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x122B678", Offset = "0x122B678", VA = "0x122B678", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x122B7A4", Offset = "0x122B7A4", VA = "0x122B7A4")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4002590")]
		None,
		[Token(Token = "0x4002591")]
		Proximity,
		[Token(Token = "0x4002592")]
		Contact,
		[Token(Token = "0x4002593")]
		Action
	}
	[Token(Token = "0x20005C4")]
	public enum InteractableState
	{
		[Token(Token = "0x4002595")]
		Default,
		[Token(Token = "0x4002596")]
		ProximityState,
		[Token(Token = "0x4002597")]
		ContactState,
		[Token(Token = "0x4002598")]
		ActionState
	}
	[Token(Token = "0x20005C5")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x122B8E4", Offset = "0x122B8E4", VA = "0x122B8E4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700046D")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x122B7F0", Offset = "0x122B7F0", VA = "0x122B7F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x122B5AC", Offset = "0x122B5AC", VA = "0x122B5AC")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x122B6D8", Offset = "0x122B6D8", VA = "0x122B6D8")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x122B854", Offset = "0x122B854", VA = "0x122B854")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA889C", Offset = "0xAA889C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40025A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40025A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40025A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40025A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40025A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40025A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700046E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FC9")]
				[Address(RVA = "0xCC0E14", Offset = "0xCC0E14", VA = "0xCC0E14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FCB")]
				[Address(RVA = "0xCC0E5C", Offset = "0xCC0E5C", VA = "0xCC0E5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0xCC0978", Offset = "0xCC0978", VA = "0xCC0978")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0xCC09A4", Offset = "0xCC09A4", VA = "0xCC09A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0xCC0A14", Offset = "0xCC0A14", VA = "0xCC0A14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0xCC09C0", Offset = "0xCC09C0", VA = "0xCC09C0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0xCC0E1C", Offset = "0xCC0E1C", VA = "0xCC0E1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x122C5D0", Offset = "0x122C5D0", VA = "0x122C5D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x122C64C", Offset = "0x122C64C", VA = "0x122C64C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC0C64", Offset = "0xAC0C64")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x122C6D4", Offset = "0x122C6D4", VA = "0x122C6D4")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x122C7BC", Offset = "0x122C7BC", VA = "0x122C7BC")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000470")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x122C7C4", Offset = "0x122C7C4", VA = "0x122C7C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x122C940", Offset = "0x122C940", VA = "0x122C940")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x122C9E8", Offset = "0x122C9E8", VA = "0x122C9E8")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x122CA90", Offset = "0x122CA90", VA = "0x122CA90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x122CD3C", Offset = "0x122CD3C", VA = "0x122CD3C")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x122CD84", Offset = "0x122CD84", VA = "0x122CD84")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x122D018", Offset = "0x122D018", VA = "0x122D018")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x122D164", Offset = "0x122D164", VA = "0x122D164")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20005CA")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA88AC", Offset = "0xAA88AC")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000475")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FE5")]
				[Address(RVA = "0xCBAEE8", Offset = "0xCBAEE8", VA = "0xCBAEE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000476")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FE7")]
				[Address(RVA = "0xCBAF30", Offset = "0xCBAF30", VA = "0xCBAF30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0xCBAAD4", Offset = "0xCBAAD4", VA = "0xCBAAD4")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0xCBAB00", Offset = "0xCBAB00", VA = "0xCBAB00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0xCBAB04", Offset = "0xCBAB04", VA = "0xCBAB04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0xCBAEF0", Offset = "0xCBAEF0", VA = "0xCBAEF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025B1")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000471")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0x13BFBF4", Offset = "0x13BFBF4", VA = "0x13BFBF4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000472")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x13BFBFC", Offset = "0x13BFBFC", VA = "0x13BFBFC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000473")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0x13BFC04", Offset = "0x13BFC04", VA = "0x13BFC04", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000474")]
		public override bool EnableState
		{
			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x13BFC0C", Offset = "0x13BFC0C", VA = "0x13BFC0C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0x13BFC38", Offset = "0x13BFC38", VA = "0x13BFC38", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x13BFC74", Offset = "0x13BFC74", VA = "0x13BFC74", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x13BFD14", Offset = "0x13BFD14", VA = "0x13BFD14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC0D14", Offset = "0xAC0D14")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x13BFD80", Offset = "0x13BFD80", VA = "0x13BFD80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x13C0020", Offset = "0x13C0020", VA = "0x13C0020")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x13C01AC", Offset = "0x13C01AC", VA = "0x13C01AC")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x13C02A4", Offset = "0x13C02A4", VA = "0x13C02A4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x13C059C", Offset = "0x13C059C", VA = "0x13C059C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x13C05A0", Offset = "0x13C05A0", VA = "0x13C05A0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x13C05A4", Offset = "0x13C05A4", VA = "0x13C05A4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20005CC")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8260", Offset = "0xAB8260")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8270", Offset = "0xAB8270")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8280", Offset = "0xAB8280")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000477")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0x13C05BC", Offset = "0x13C05BC", VA = "0x13C05BC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0DC4", Offset = "0xAC0DC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x13C05C4", Offset = "0x13C05C4", VA = "0x13C05C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0DD4", Offset = "0xAC0DD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000478")]
		public bool EnableState
		{
			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0x13C05CC", Offset = "0x13C05CC", VA = "0x13C05CC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0x13C05E8", Offset = "0x13C05E8", VA = "0x13C05E8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000479")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0x13C0608", Offset = "0x13C0608", VA = "0x13C0608", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0DE4", Offset = "0xAC0DE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x13C0610", Offset = "0x13C0610", VA = "0x13C0610", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0DF4", Offset = "0xAC0DF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700047A")]
		public float SphereRadius
		{
			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0x13C061C", Offset = "0x13C061C", VA = "0x13C061C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E04", Offset = "0xAC0E04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x13C0624", Offset = "0x13C0624", VA = "0x13C0624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E14", Offset = "0xAC0E14")]
			private set
			{
			}
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x13C062C", Offset = "0x13C062C", VA = "0x13C062C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x13C0674", Offset = "0x13C0674", VA = "0x13C0674", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x13C0678", Offset = "0x13C0678", VA = "0x13C0678")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40025C4")]
		None = 0,
		[Token(Token = "0x40025C5")]
		Ray = 1,
		[Token(Token = "0x40025C6")]
		Poke = 4,
		[Token(Token = "0x40025C7")]
		All = -1
	}
	[Token(Token = "0x20005CE")]
	public enum ToolInputState
	{
		[Token(Token = "0x40025C9")]
		Inactive,
		[Token(Token = "0x40025CA")]
		PrimaryInputDown,
		[Token(Token = "0x40025CB")]
		PrimaryInputDownStay,
		[Token(Token = "0x40025CC")]
		PrimaryInputUp
	}
	[Token(Token = "0x20005CF")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x122B7AC", Offset = "0x122B7AC", VA = "0x122B7AC")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20005D0")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8290", Offset = "0xAB8290")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB82A0", Offset = "0xAB82A0")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB82B0", Offset = "0xAB82B0")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700047B")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0x122B984", Offset = "0x122B984", VA = "0x122B984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047C")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x122B98C", Offset = "0x122B98C", VA = "0x122B98C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E24", Offset = "0xAC0E24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0x122B994", Offset = "0x122B994", VA = "0x122B994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E34", Offset = "0xAC0E34")]
			set
			{
			}
		}

		[Token(Token = "0x1700047D")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001FF7")]
			get;
		}

		[Token(Token = "0x1700047E")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001FF8")]
			get;
		}

		[Token(Token = "0x1700047F")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001FF9")]
			get;
		}

		[Token(Token = "0x17000480")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0x122B9A0", Offset = "0x122B9A0", VA = "0x122B9A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E44", Offset = "0xAC0E44")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x122B9AC", Offset = "0x122B9AC", VA = "0x122B9AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E54", Offset = "0xAC0E54")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000481")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0x122B9B8", Offset = "0x122B9B8", VA = "0x122B9B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E64", Offset = "0xAC0E64")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0x122B9C4", Offset = "0x122B9C4", VA = "0x122B9C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E74", Offset = "0xAC0E74")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000482")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6002002")]
			get;
			[Token(Token = "0x6002003")]
			set;
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x122B9D0", Offset = "0x122B9D0", VA = "0x122B9D0")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001FFF")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6002000")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6002001")]
		public abstract void DeFocus();

		[Token(Token = "0x6002004")]
		public abstract void Initialize();

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x122B9D8", Offset = "0x122B9D8", VA = "0x122B9D8")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x122BA24", Offset = "0x122BA24", VA = "0x122BA24")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x122BA78", Offset = "0x122BA78", VA = "0x122BA78", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x122BD0C", Offset = "0x122BD0C", VA = "0x122BD0C", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x122C488", Offset = "0x122C488", VA = "0x122C488")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20005D1")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000483")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x600200A")]
			get;
		}

		[Token(Token = "0x17000484")]
		bool EnableState
		{
			[Token(Token = "0x600200C")]
			get;
			[Token(Token = "0x600200D")]
			set;
		}

		[Token(Token = "0x17000485")]
		bool ToolActivateState
		{
			[Token(Token = "0x600200E")]
			get;
			[Token(Token = "0x600200F")]
			set;
		}

		[Token(Token = "0x600200B")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20005D2")]
	public class PinchStateModule
	{
		[Token(Token = "0x20005D3")]
		private enum PinchState
		{
			[Token(Token = "0x40025DD")]
			None,
			[Token(Token = "0x40025DE")]
			PinchDown,
			[Token(Token = "0x40025DF")]
			PinchStay,
			[Token(Token = "0x40025E0")]
			PinchUp
		}

		[Token(Token = "0x40025D9")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000486")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6002010")]
			[Address(RVA = "0xCD8460", Offset = "0xCD8460", VA = "0xCD8460")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000487")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6002011")]
			[Address(RVA = "0xCD84E8", Offset = "0xCD84E8", VA = "0xCD84E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000488")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6002012")]
			[Address(RVA = "0xCD8570", Offset = "0xCD8570", VA = "0xCD8570")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xCD85F8", Offset = "0xCD85F8", VA = "0xCD85F8")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xCD8624", Offset = "0xCD8624", VA = "0xCD8624")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20005D4")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40025E1")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40025E2")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40025E3")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40025E4")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40025E5")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB82D0", Offset = "0xAB82D0")]
		private float _coneAngleDegrees;

		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000489")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6002015")]
			[Address(RVA = "0x151A4E0", Offset = "0x151A4E0", VA = "0x151A4E0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700048A")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6002016")]
			[Address(RVA = "0x151A4E8", Offset = "0x151A4E8", VA = "0x151A4E8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700048B")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6002017")]
			[Address(RVA = "0x151A55C", Offset = "0x151A55C", VA = "0x151A55C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048C")]
		public override bool EnableState
		{
			[Token(Token = "0x6002018")]
			[Address(RVA = "0x151A564", Offset = "0x151A564", VA = "0x151A564", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002019")]
			[Address(RVA = "0x151A5A8", Offset = "0x151A5A8", VA = "0x151A5A8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x151A61C", Offset = "0x151A61C", VA = "0x151A61C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x151A67C", Offset = "0x151A67C", VA = "0x151A67C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x151A720", Offset = "0x151A720", VA = "0x151A720")]
		private void Update()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x151A9E4", Offset = "0x151A9E4", VA = "0x151A9E4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x151AA6C", Offset = "0x151AA6C", VA = "0x151AA6C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x151AE14", Offset = "0x151AE14", VA = "0x151AE14")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x151AF24", Offset = "0x151AF24", VA = "0x151AF24")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x151B048", Offset = "0x151B048", VA = "0x151B048")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x151B34C", Offset = "0x151B34C", VA = "0x151B34C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x151B6E0", Offset = "0x151B6E0", VA = "0x151B6E0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x151B7B0", Offset = "0x151B7B0", VA = "0x151B7B0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x151B7E4", Offset = "0x151B7E4", VA = "0x151B7E4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20005D5")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40025F1")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40025F2")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8344", Offset = "0xAB8344")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700048D")]
		public bool EnableState
		{
			[Token(Token = "0x6002026")]
			[Address(RVA = "0x151A58C", Offset = "0x151A58C", VA = "0x151A58C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002027")]
			[Address(RVA = "0x151A5C4", Offset = "0x151A5C4", VA = "0x151A5C4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700048E")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6002028")]
			[Address(RVA = "0x151B8AC", Offset = "0x151B8AC", VA = "0x151B8AC", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002029")]
			[Address(RVA = "0x151A9A8", Offset = "0x151A9A8", VA = "0x151A9A8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700048F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600202B")]
			[Address(RVA = "0x151BAF0", Offset = "0x151BAF0", VA = "0x151BAF0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E84", Offset = "0xAC0E84")]
			get
			{
				return null;
			}
			[Token(Token = "0x600202C")]
			[Address(RVA = "0x151BAF8", Offset = "0x151BAF8", VA = "0x151BAF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0E94", Offset = "0xAC0E94")]
			set
			{
			}
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x151B8B4", Offset = "0x151B8B4", VA = "0x151B8B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x151B714", Offset = "0x151B714", VA = "0x151B714", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x151BB00", Offset = "0x151BB00", VA = "0x151BB00")]
		private void Update()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x151BD74", Offset = "0x151BD74", VA = "0x151BD74")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x151BE64", Offset = "0x151BE64", VA = "0x151BE64")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20005D6")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000490")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6002031")]
			[Address(RVA = "0x1C2D214", Offset = "0x1C2D214", VA = "0x1C2D214")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002032")]
			[Address(RVA = "0x1C2D21C", Offset = "0x1C2D21C", VA = "0x1C2D21C")]
			set
			{
			}
		}

		[Token(Token = "0x17000491")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6002033")]
			[Address(RVA = "0x1C2D294", Offset = "0x1C2D294", VA = "0x1C2D294")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002034")]
			[Address(RVA = "0x1C2D29C", Offset = "0x1C2D29C", VA = "0x1C2D29C")]
			set
			{
			}
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x1C2D308", Offset = "0x1C2D308", VA = "0x1C2D308")]
		private void Start()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x1C2D5CC", Offset = "0x1C2D5CC", VA = "0x1C2D5CC")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x1C2D5DC", Offset = "0x1C2D5DC", VA = "0x1C2D5DC")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x1C2D5EC", Offset = "0x1C2D5EC", VA = "0x1C2D5EC")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x1087980", Offset = "0x1087980", VA = "0x1087980")]
		private void Awake()
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x1087984", Offset = "0x1087984", VA = "0x1087984")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x10879BC", Offset = "0x10879BC", VA = "0x10879BC")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x10879F4", Offset = "0x10879F4", VA = "0x10879F4")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x1087A2C", Offset = "0x1087A2C", VA = "0x1087A2C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x1087A64", Offset = "0x1087A64", VA = "0x1087A64")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x1087A9C", Offset = "0x1087A9C", VA = "0x1087A9C")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x1087AD4", Offset = "0x1087AD4", VA = "0x1087AD4")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x1087B48", Offset = "0x1087B48", VA = "0x1087B48")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x1087BB8", Offset = "0x1087BB8", VA = "0x1087BB8")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x1087C48", Offset = "0x1087C48", VA = "0x1087C48")]
		private void Start()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x1087C4C", Offset = "0x1087C4C", VA = "0x1087C4C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x1087B7C", Offset = "0x1087B7C", VA = "0x1087B7C")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x1087C8C", Offset = "0x1087C8C", VA = "0x1087C8C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20005D9")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA88CC", Offset = "0xAA88CC")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400260C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400260D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400260E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x400260F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4002610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4002611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000492")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600204F")]
				[Address(RVA = "0xDB5140", Offset = "0xDB5140", VA = "0xDB5140", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000493")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002051")]
				[Address(RVA = "0xDB5188", Offset = "0xDB5188", VA = "0xDB5188", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600204C")]
			[Address(RVA = "0xDB4F64", Offset = "0xDB4F64", VA = "0xDB4F64")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600204D")]
			[Address(RVA = "0xDB4F90", Offset = "0xDB4F90", VA = "0xDB4F90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600204E")]
			[Address(RVA = "0xDB4F94", Offset = "0xDB4F94", VA = "0xDB4F94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002050")]
			[Address(RVA = "0xDB5148", Offset = "0xDB5148", VA = "0xDB5148", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002602")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4002603")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x14A8FB8", Offset = "0x14A8FB8", VA = "0x14A8FB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x14A9058", Offset = "0x14A9058", VA = "0x14A9058")]
		private void Update()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x14A928C", Offset = "0x14A928C", VA = "0x14A928C")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x14A9220", Offset = "0x14A9220", VA = "0x14A9220")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC0EA4", Offset = "0xAC0EA4")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x14A92D8", Offset = "0x14A92D8", VA = "0x14A92D8")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20005DB")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20005DC")]
		public enum SelectionState
		{
			[Token(Token = "0x4002619")]
			Off,
			[Token(Token = "0x400261A")]
			Selected,
			[Token(Token = "0x400261B")]
			Highlighted
		}

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000494")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6002052")]
			[Address(RVA = "0x103855C", Offset = "0x103855C", VA = "0x103855C")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6002053")]
			[Address(RVA = "0x1038564", Offset = "0x1038564", VA = "0x1038564")]
			set
			{
			}
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x10386E8", Offset = "0x10386E8", VA = "0x10386E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x10388B0", Offset = "0x10388B0", VA = "0x10388B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x10385EC", Offset = "0x10385EC", VA = "0x10385EC")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x103899C", Offset = "0x103899C", VA = "0x103899C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20005DE")]
		public enum SegmentType
		{
			[Token(Token = "0x400262A")]
			Straight,
			[Token(Token = "0x400262B")]
			LeftTurn,
			[Token(Token = "0x400262C")]
			RightTurn,
			[Token(Token = "0x400262D")]
			Switch
		}

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4002622")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4002623")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8424", Offset = "0xAB8424")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000495")]
		public float StartDistance
		{
			[Token(Token = "0x6002059")]
			[Address(RVA = "0xFEFD50", Offset = "0xFEFD50", VA = "0xFEFD50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0F54", Offset = "0xAC0F54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600205A")]
			[Address(RVA = "0xFEFD58", Offset = "0xFEFD58", VA = "0xFEFD58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC0F64", Offset = "0xAC0F64")]
			set
			{
			}
		}

		[Token(Token = "0x17000496")]
		public float GridSize
		{
			[Token(Token = "0x600205B")]
			[Address(RVA = "0xFEFD60", Offset = "0xFEFD60", VA = "0xFEFD60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600205C")]
			[Address(RVA = "0xFEFD68", Offset = "0xFEFD68", VA = "0xFEFD68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000497")]
		public int SubDivCount
		{
			[Token(Token = "0x600205D")]
			[Address(RVA = "0xFEFD70", Offset = "0xFEFD70", VA = "0xFEFD70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600205E")]
			[Address(RVA = "0xFEFD78", Offset = "0xFEFD78", VA = "0xFEFD78")]
			set
			{
			}
		}

		[Token(Token = "0x17000498")]
		public SegmentType Type
		{
			[Token(Token = "0x600205F")]
			[Address(RVA = "0xFEFD80", Offset = "0xFEFD80", VA = "0xFEFD80")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000499")]
		public Pose EndPose
		{
			[Token(Token = "0x6002060")]
			[Address(RVA = "0xFEFD88", Offset = "0xFEFD88", VA = "0xFEFD88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049A")]
		public float Radius
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0xFF00E4", Offset = "0xFF00E4", VA = "0xFF00E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700049B")]
		public float SegmentLength
		{
			[Token(Token = "0x6002063")]
			[Address(RVA = "0xFEFDF0", Offset = "0xFEFDF0", VA = "0xFEFDF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xFF00F4", Offset = "0xFF00F4", VA = "0xFF00F4")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xFF010C", Offset = "0xFF010C", VA = "0xFF010C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xFEFE30", Offset = "0xFEFE30", VA = "0xFEFE30")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xFF0110", Offset = "0xFF0110", VA = "0xFF0110")]
		private void Update()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xFF0114", Offset = "0xFF0114", VA = "0xFF0114")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xFF017C", Offset = "0xFF017C", VA = "0xFF017C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xFF0A44", Offset = "0xFF0A44", VA = "0xFF0A44")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xFF0CD0", Offset = "0xFF0CD0", VA = "0xFF0CD0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA88DC", Offset = "0xAA88DC")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400263F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4002642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4002643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700049C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002079")]
				[Address(RVA = "0xE6B96C", Offset = "0xE6B96C", VA = "0xE6B96C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600207B")]
				[Address(RVA = "0xE6B9B4", Offset = "0xE6B9B4", VA = "0xE6B9B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002076")]
			[Address(RVA = "0xE6B7D8", Offset = "0xE6B7D8", VA = "0xE6B7D8")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002077")]
			[Address(RVA = "0xE6B804", Offset = "0xE6B804", VA = "0xE6B804", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002078")]
			[Address(RVA = "0xE6B808", Offset = "0xE6B808", VA = "0xE6B808", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600207A")]
			[Address(RVA = "0xE6B974", Offset = "0xE6B974", VA = "0xE6B974", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400262E")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400262F")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xFF1454", Offset = "0xFF1454", VA = "0xFF1454")]
		private void Awake()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xFF14FC", Offset = "0xFF14FC", VA = "0xFF14FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xFF15AC", Offset = "0xFF15AC", VA = "0xFF15AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xFF1724", Offset = "0xFF1724", VA = "0xFF1724")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xFF18EC", Offset = "0xFF18EC", VA = "0xFF18EC")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xFF19D4", Offset = "0xFF19D4", VA = "0xFF19D4")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xFF1BD8", Offset = "0xFF1BD8", VA = "0xFF1BD8")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xFF1AE8", Offset = "0xFF1AE8", VA = "0xFF1AE8")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xFF1AFC", Offset = "0xFF1AFC", VA = "0xFF1AFC")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xFF1C30", Offset = "0xFF1C30", VA = "0xFF1C30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC0F74", Offset = "0xAC0F74")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xFF1C9C", Offset = "0xFF1C9C", VA = "0xFF1C9C")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20005E1")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700049E")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600207C")]
			[Address(RVA = "0xFF1D4C", Offset = "0xFF1D4C", VA = "0xFF1D4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xFF1D5C", Offset = "0xFF1D5C", VA = "0xFF1D5C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xFF1D64", Offset = "0xFF1D64", VA = "0xFF1D64", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xFF20A8", Offset = "0xFF20A8", VA = "0xFF20A8")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20005E2")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4002647")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4002648")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8524", Offset = "0xAB8524")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700049F")]
		public float Distance
		{
			[Token(Token = "0x6002080")]
			[Address(RVA = "0xFF21A0", Offset = "0xFF21A0", VA = "0xFF21A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1024", Offset = "0xAC1024")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002081")]
			[Address(RVA = "0xFF21A8", Offset = "0xFF21A8", VA = "0xFF21A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1034", Offset = "0xAC1034")]
			protected set
			{
			}
		}

		[Token(Token = "0x170004A0")]
		public float Scale
		{
			[Token(Token = "0x6002082")]
			[Address(RVA = "0xFF21B0", Offset = "0xFF21B0", VA = "0xFF21B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002083")]
			[Address(RVA = "0xFF21B8", Offset = "0xFF21B8", VA = "0xFF21B8")]
			set
			{
			}
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xFF1D60", Offset = "0xFF1D60", VA = "0xFF1D60", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xFF21C0", Offset = "0xFF21C0", VA = "0xFF21C0")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xFF1DAC", Offset = "0xFF1DAC", VA = "0xFF1DAC")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xFF1FD0", Offset = "0xFF1FD0", VA = "0xFF1FD0")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6002088")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xFF2114", Offset = "0xFF2114", VA = "0xFF2114")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20005E3")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA88EC", Offset = "0xAA88EC")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400265B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400265C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400265D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x400265E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x400265F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4002660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4002661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4002662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4002663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4002664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4002665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4002666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170004A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002097")]
				[Address(RVA = "0xE6BC14", Offset = "0xE6BC14", VA = "0xE6BC14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002099")]
				[Address(RVA = "0xE6BC5C", Offset = "0xE6BC5C", VA = "0xE6BC5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002094")]
			[Address(RVA = "0xE6B9BC", Offset = "0xE6B9BC", VA = "0xE6B9BC")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002095")]
			[Address(RVA = "0xE6B9E8", Offset = "0xE6B9E8", VA = "0xE6B9E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002096")]
			[Address(RVA = "0xE6B9EC", Offset = "0xE6B9EC", VA = "0xE6B9EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002098")]
			[Address(RVA = "0xE6BC1C", Offset = "0xE6BC1C", VA = "0xE6BC1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xFF2360", Offset = "0xFF2360", VA = "0xFF2360")]
		private void Awake()
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xFF23AC", Offset = "0xFF23AC", VA = "0xFF23AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0xFF24B4", Offset = "0xFF24B4", VA = "0xFF24B4")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0xFF2614", Offset = "0xFF2614", VA = "0xFF2614")]
		private void Update()
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xFF2510", Offset = "0xFF2510", VA = "0xFF2510")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xFF26F0", Offset = "0xFF26F0", VA = "0xFF26F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1044", Offset = "0xAC1044")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xFF276C", Offset = "0xFF276C", VA = "0xFF276C")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xFF2818", Offset = "0xFF2818", VA = "0xFF2818")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xFF2878", Offset = "0xFF2878", VA = "0xFF2878")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20005E5")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20005E6")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002685")]
			Start,
			[Token(Token = "0x4002686")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4002687")]
			Stop
		}

		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA88FC", Offset = "0xAA88FC")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400268A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x400268B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x400268C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400268D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400268E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400268F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4002690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170004A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020AC")]
				[Address(RVA = "0xE6BFE0", Offset = "0xE6BFE0", VA = "0xE6BFE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020AE")]
				[Address(RVA = "0xE6C028", Offset = "0xE6C028", VA = "0xE6C028", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020A9")]
			[Address(RVA = "0xE6BD88", Offset = "0xE6BD88", VA = "0xE6BD88")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60020AA")]
			[Address(RVA = "0xE6BDB4", Offset = "0xE6BDB4", VA = "0xE6BDB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020AB")]
			[Address(RVA = "0xE6BDB8", Offset = "0xE6BDB8", VA = "0xE6BDB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020AD")]
			[Address(RVA = "0xE6BFE8", Offset = "0xE6BFE8", VA = "0xE6BFE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002667")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4002668")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4002669")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400266A")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB8584", Offset = "0xAB8584")]
		protected float _initialSpeed;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xFF2EB8", Offset = "0xFF2EB8", VA = "0xFF2EB8")]
		private void Start()
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xFF300C", Offset = "0xFF300C", VA = "0xFF300C")]
		private void Update()
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xFF3018", Offset = "0xFF3018", VA = "0xFF3018", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xFF3168", Offset = "0xFF3168", VA = "0xFF3168")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xFF2F8C", Offset = "0xFF2F8C", VA = "0xFF2F8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC10F4", Offset = "0xAC10F4")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xFF31B4", Offset = "0xFF31B4", VA = "0xFF31B4")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xFF3104", Offset = "0xFF3104", VA = "0xFF3104")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xFF33D0", Offset = "0xFF33D0", VA = "0xFF33D0")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xFF350C", Offset = "0xFF350C", VA = "0xFF350C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xFF343C", Offset = "0xFF343C", VA = "0xFF343C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xFF3578", Offset = "0xFF3578", VA = "0xFF3578")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xFF3598", Offset = "0xFF3598", VA = "0xFF3598")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xFF3624", Offset = "0xFF3624", VA = "0xFF3624")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xFF36DC", Offset = "0xFF36DC", VA = "0xFF36DC")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xFF36EC", Offset = "0xFF36EC", VA = "0xFF36EC")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20005E8")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170004A5")]
		public float TrackLength
		{
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0xFF3754", Offset = "0xFF3754", VA = "0xFF3754")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0xFF375C", Offset = "0xFF375C", VA = "0xFF375C")]
			private set
			{
			}
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xFF3764", Offset = "0xFF3764", VA = "0xFF3764")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xFF2240", Offset = "0xFF2240", VA = "0xFF2240")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xFF3768", Offset = "0xFF3768", VA = "0xFF3768")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xFF3968", Offset = "0xFF3968", VA = "0xFF3968")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xFF3A64", Offset = "0xFF3A64", VA = "0xFF3A64")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20005E9")]
	public class Pose
	{
		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x161DA44", Offset = "0x161DA44", VA = "0x161DA44")]
		public Pose()
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x161DA88", Offset = "0x161DA88", VA = "0x161DA88")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20005EA")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA890C", Offset = "0xAA890C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40026A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40026A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40026AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170004A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020C4")]
				[Address(RVA = "0x249C74C", Offset = "0x249C74C", VA = "0x249C74C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020C6")]
				[Address(RVA = "0x249C794", Offset = "0x249C794", VA = "0x249C794", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x249C5A4", Offset = "0x249C5A4", VA = "0x249C5A4")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60020C2")]
			[Address(RVA = "0x249C5D0", Offset = "0x249C5D0", VA = "0x249C5D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020C3")]
			[Address(RVA = "0x249C5D4", Offset = "0x249C5D4", VA = "0x249C5D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020C5")]
			[Address(RVA = "0x249C754", Offset = "0x249C754", VA = "0x249C754", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA891C", Offset = "0xAA891C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40026AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40026AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40026B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170004A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020CA")]
				[Address(RVA = "0x249C898", Offset = "0x249C898", VA = "0x249C898", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020CC")]
				[Address(RVA = "0x249C8E0", Offset = "0x249C8E0", VA = "0x249C8E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x249C79C", Offset = "0x249C79C", VA = "0x249C79C")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x249C7C8", Offset = "0x249C7C8", VA = "0x249C7C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x249C7CC", Offset = "0x249C7CC", VA = "0x249C7CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x249C8A0", Offset = "0x249C8A0", VA = "0x249C8A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400269A")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB876C", Offset = "0xAB876C")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170004A6")]
		public bool IsMoving
		{
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0xE8983C", Offset = "0xE8983C", VA = "0xE8983C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC11A4", Offset = "0xAC11A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020B9")]
			[Address(RVA = "0xE89844", Offset = "0xE89844", VA = "0xE89844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC11B4", Offset = "0xAC11B4")]
			private set
			{
			}
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xE89850", Offset = "0xE89850", VA = "0xE89850")]
		private void Start()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xE8988C", Offset = "0xE8988C", VA = "0xE8988C")]
		private void Update()
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xE89970", Offset = "0xE89970", VA = "0xE89970")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xE899D8", Offset = "0xE899D8", VA = "0xE899D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC11C4", Offset = "0xAC11C4")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xE89A54", Offset = "0xE89A54", VA = "0xE89A54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1224", Offset = "0xAC1224")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xE89AE4", Offset = "0xE89AE4", VA = "0xE89AE4")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xE89B50", Offset = "0xE89B50", VA = "0xE89B50")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20005ED")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xE89B58", Offset = "0xE89B58", VA = "0xE89B58")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xE89BBC", Offset = "0xE89BBC", VA = "0xE89BBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xE89CA0", Offset = "0xE89CA0", VA = "0xE89CA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xE89DD8", Offset = "0xE89DD8", VA = "0xE89DD8")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xE89E54", Offset = "0xE89E54", VA = "0xE89E54")]
		private void Update()
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xE89F30", Offset = "0xE89F30", VA = "0xE89F30")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20005EE")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40026B7")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40026B8")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40026B9")]
		EUDT_None,
		[Token(Token = "0x40026BA")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20005EF")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA892C", Offset = "0xAA892C")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170004AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020E6")]
				[Address(RVA = "0xDB3530", Offset = "0xDB3530", VA = "0xDB3530", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020E8")]
				[Address(RVA = "0xDB3578", Offset = "0xDB3578", VA = "0xDB3578", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020E3")]
			[Address(RVA = "0xDB331C", Offset = "0xDB331C", VA = "0xDB331C")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60020E4")]
			[Address(RVA = "0xDB3348", Offset = "0xDB3348", VA = "0xDB3348", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020E5")]
			[Address(RVA = "0xDB334C", Offset = "0xDB334C", VA = "0xDB334C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020E7")]
			[Address(RVA = "0xDB3538", Offset = "0xDB3538", VA = "0xDB3538", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40026BC")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40026BD")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40026BE")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB87AC", Offset = "0xAB87AC")]
		public GameObject mainCamera;

		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB87E4", Offset = "0xAB87E4")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x1159C28", Offset = "0x1159C28", VA = "0x1159C28")]
		private void Start()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x115A460", Offset = "0x115A460", VA = "0x115A460")]
		private void Update()
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x115A5A8", Offset = "0x115A5A8", VA = "0x115A5A8")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x115A6D8", Offset = "0x115A6D8", VA = "0x115A6D8")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x115A808", Offset = "0x115A808", VA = "0x115A808")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x115A57C", Offset = "0x115A57C", VA = "0x115A57C")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x115A8E8", Offset = "0x115A8E8", VA = "0x115A8E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1324", Offset = "0xAC1324")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x115A954", Offset = "0x115A954", VA = "0x115A954")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x115A078", Offset = "0x115A078", VA = "0x115A078")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x115AAA8", Offset = "0x115AAA8", VA = "0x115AAA8")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x115A988", Offset = "0x115A988", VA = "0x115A988")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x115ADC0", Offset = "0x115ADC0", VA = "0x115ADC0")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x115AEB0", Offset = "0x115AEB0", VA = "0x115AEB0")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x115AF34", Offset = "0x115AF34", VA = "0x115AF34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1384", Offset = "0xAC1384")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x115AF8C", Offset = "0x115AF8C", VA = "0x115AF8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1394", Offset = "0xAC1394")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x115AFE4", Offset = "0x115AFE4", VA = "0x115AFE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC13A4", Offset = "0xAC13A4")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20005F1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA893C", Offset = "0xAA893C")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA899C", Offset = "0xAA899C")]
		private sealed class <>c
		{
			[Token(Token = "0x40026F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40026F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60020F6")]
			[Address(RVA = "0xCBC164", Offset = "0xCBC164", VA = "0xCBC164")]
			public <>c()
			{
			}

			[Token(Token = "0x60020F7")]
			[Address(RVA = "0xCBC16C", Offset = "0xCBC16C", VA = "0xCBC16C")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40026D6")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40026D7")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40026D8")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40026D9")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40026DA")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40026DB")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40026DC")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40026DD")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40026DE")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40026DF")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40026E0")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x24DA00C", Offset = "0x24DA00C", VA = "0x24DA00C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x24DA060", Offset = "0x24DA060", VA = "0x24DA060")]
		private void Start()
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x24DA4D4", Offset = "0x24DA4D4", VA = "0x24DA4D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x24DA5C0", Offset = "0x24DA5C0", VA = "0x24DA5C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x24DA724", Offset = "0x24DA724", VA = "0x24DA724")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x24DAA2C", Offset = "0x24DAA2C", VA = "0x24DAA2C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x24DAB24", Offset = "0x24DAB24", VA = "0x24DAB24")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x24DAC84", Offset = "0x24DAC84", VA = "0x24DAC84")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x24DA7BC", Offset = "0x24DA7BC", VA = "0x24DA7BC")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x24DA810", Offset = "0x24DA810", VA = "0x24DA810")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x24DA378", Offset = "0x24DA378", VA = "0x24DA378")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x24DADC0", Offset = "0x24DADC0", VA = "0x24DADC0")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20005F3")]
	public enum HandPoseId
	{
		[Token(Token = "0x40026F5")]
		Default,
		[Token(Token = "0x40026F6")]
		Generic,
		[Token(Token = "0x40026F7")]
		PingPongBall,
		[Token(Token = "0x40026F8")]
		Controller
	}
	[Token(Token = "0x20005F4")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170004AD")]
		public bool AllowPointing
		{
			[Token(Token = "0x60020F8")]
			[Address(RVA = "0x1222268", Offset = "0x1222268", VA = "0x1222268")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AE")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60020F9")]
			[Address(RVA = "0x1222270", Offset = "0x1222270", VA = "0x1222270")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AF")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60020FA")]
			[Address(RVA = "0x1222278", Offset = "0x1222278", VA = "0x1222278")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x1222280", Offset = "0x1222280", VA = "0x1222280")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20005F5")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xFEED2C", Offset = "0xFEED2C", VA = "0xFEED2C")]
		private void Update()
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xFEF014", Offset = "0xFEF014", VA = "0xFEF014")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xFEF070", Offset = "0xFEF070", VA = "0xFEF070")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xFEF0B4", Offset = "0xFEF0B4", VA = "0xFEF0B4")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20005F6")]
	public static class AvatarLogger
	{
		[Token(Token = "0x40026FF")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4002700")]
		public const string Tab = "    ";

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x134A2DC", Offset = "0x134A2DC", VA = "0x134A2DC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC1404", Offset = "0xAC1404")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC1404", Offset = "0xAC1404")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x134A36C", Offset = "0x134A36C", VA = "0x134A36C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC1464", Offset = "0xAC1464")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC1464", Offset = "0xAC1464")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x134A40C", Offset = "0x134A40C", VA = "0x134A40C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC14C4", Offset = "0xAC14C4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC14C4", Offset = "0xAC14C4")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x134A49C", Offset = "0x134A49C", VA = "0x134A49C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC1524", Offset = "0xAC1524")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC1524", Offset = "0xAC1524")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x134A52C", Offset = "0x134A52C", VA = "0x134A52C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC1584", Offset = "0xAC1584")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAC1584", Offset = "0xAC1584")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20005F7")]
	public class CAPI
	{
		[Token(Token = "0x20005F8")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20005F9")]
		public enum Result
		{
			[Token(Token = "0x400270C")]
			Success = 0,
			[Token(Token = "0x400270D")]
			Failure = -1000,
			[Token(Token = "0x400270E")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x400270F")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4002710")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4002711")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4002712")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4002713")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4002714")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20005FA")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4002715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly System.Version version;

			[PreserveSig]
			[Token(Token = "0x6002199")]
			[Address(RVA = "0xE91AB4", Offset = "0xE91AB4", VA = "0xE91AB4")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4002701")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4002709")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static System.Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6002105")]
		[Address(RVA = "0x1004BC4", Offset = "0x1004BC4", VA = "0x1004BC4")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x1004C54", Offset = "0x1004C54", VA = "0x1004C54")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x1004E6C", Offset = "0x1004E6C", VA = "0x1004E6C")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002108")]
		[Address(RVA = "0x1004F54", Offset = "0x1004F54", VA = "0x1004F54")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6002109")]
		[Address(RVA = "0x1004FC4", Offset = "0x1004FC4", VA = "0x1004FC4")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x600210A")]
		[Address(RVA = "0x1005038", Offset = "0x1005038", VA = "0x1005038")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x10050B8", Offset = "0x10050B8", VA = "0x10050B8")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x600210C")]
		[Address(RVA = "0x10051FC", Offset = "0x10051FC", VA = "0x10051FC")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x100527C", Offset = "0x100527C", VA = "0x100527C")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x600210E")]
		[Address(RVA = "0x10053C0", Offset = "0x10053C0", VA = "0x10053C0")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600210F")]
		[Address(RVA = "0x1005440", Offset = "0x1005440", VA = "0x1005440")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6002110")]
		[Address(RVA = "0x10054C0", Offset = "0x10054C0", VA = "0x10054C0")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6002111")]
		[Address(RVA = "0x1005540", Offset = "0x1005540", VA = "0x1005540")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6002112")]
		[Address(RVA = "0x10055C0", Offset = "0x10055C0", VA = "0x10055C0")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6002113")]
		[Address(RVA = "0x1005650", Offset = "0x1005650", VA = "0x1005650")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6002114")]
		[Address(RVA = "0x10056E0", Offset = "0x10056E0", VA = "0x10056E0")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6002115")]
		[Address(RVA = "0x1005770", Offset = "0x1005770", VA = "0x1005770")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6002116")]
		[Address(RVA = "0x10057F0", Offset = "0x10057F0", VA = "0x10057F0")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6002117")]
		[Address(RVA = "0x1005870", Offset = "0x1005870", VA = "0x1005870")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6002118")]
		[Address(RVA = "0x1005900", Offset = "0x1005900", VA = "0x1005900")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6002119")]
		[Address(RVA = "0x1005990", Offset = "0x1005990", VA = "0x1005990")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x600211A")]
		[Address(RVA = "0x1005A20", Offset = "0x1005A20", VA = "0x1005A20")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600211B")]
		[Address(RVA = "0x1005AA0", Offset = "0x1005AA0", VA = "0x1005AA0")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x1005B40", Offset = "0x1005B40", VA = "0x1005B40")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600211D")]
		[Address(RVA = "0x1005BBC", Offset = "0x1005BBC", VA = "0x1005BBC")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x600211E")]
		[Address(RVA = "0x1005C5C", Offset = "0x1005C5C", VA = "0x1005C5C")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x600211F")]
		[Address(RVA = "0x1005D1C", Offset = "0x1005D1C", VA = "0x1005D1C")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6002120")]
		[Address(RVA = "0x1005DEC", Offset = "0x1005DEC", VA = "0x1005DEC")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6002121")]
		[Address(RVA = "0x1005E7C", Offset = "0x1005E7C", VA = "0x1005E7C")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6002122")]
		[Address(RVA = "0x1005F0C", Offset = "0x1005F0C", VA = "0x1005F0C")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6002123")]
		[Address(RVA = "0x1005F9C", Offset = "0x1005F9C", VA = "0x1005F9C")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6002124")]
		[Address(RVA = "0x100602C", Offset = "0x100602C", VA = "0x100602C")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6002125")]
		[Address(RVA = "0x10060BC", Offset = "0x10060BC", VA = "0x10060BC")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x100613C", Offset = "0x100613C", VA = "0x100613C")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x1006258", Offset = "0x1006258", VA = "0x1006258")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002128")]
		[Address(RVA = "0x10061C8", Offset = "0x10061C8", VA = "0x10061C8")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x100646C", Offset = "0x100646C", VA = "0x100646C")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600212A")]
		[Address(RVA = "0x10065DC", Offset = "0x10065DC", VA = "0x10065DC")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x600212B")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x100665C", Offset = "0x100665C", VA = "0x100665C")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600212D")]
		[Address(RVA = "0x1006904", Offset = "0x1006904", VA = "0x1006904")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x1006984", Offset = "0x1006984", VA = "0x1006984")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600212F")]
		[Address(RVA = "0x1006AF4", Offset = "0x1006AF4", VA = "0x1006AF4")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x1006B74", Offset = "0x1006B74", VA = "0x1006B74")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6002131")]
		[Address(RVA = "0x1006CE4", Offset = "0x1006CE4", VA = "0x1006CE4")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x1006D64", Offset = "0x1006D64", VA = "0x1006D64")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6002133")]
		[Address(RVA = "0x1006ED4", Offset = "0x1006ED4", VA = "0x1006ED4")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x1006F54", Offset = "0x1006F54", VA = "0x1006F54")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6002135")]
		[Address(RVA = "0x10070C4", Offset = "0x10070C4", VA = "0x10070C4")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002136")]
		[Address(RVA = "0x1007144", Offset = "0x1007144", VA = "0x1007144")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6002137")]
		[Address(RVA = "0x10071C4", Offset = "0x10071C4", VA = "0x10071C4")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6002138")]
		[Address(RVA = "0x100725C", Offset = "0x100725C", VA = "0x100725C")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x10072DC", Offset = "0x10072DC", VA = "0x10072DC")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x10074B4", Offset = "0x10074B4", VA = "0x10074B4")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x600213B")]
		[Address(RVA = "0x100760C", Offset = "0x100760C", VA = "0x100760C")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600213C")]
		[Address(RVA = "0x1007434", Offset = "0x1007434", VA = "0x1007434")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600213D")]
		[Address(RVA = "0x100768C", Offset = "0x100768C", VA = "0x100768C")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600213E")]
		[Address(RVA = "0x100770C", Offset = "0x100770C", VA = "0x100770C")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600213F")]
		[Address(RVA = "0x100779C", Offset = "0x100779C", VA = "0x100779C")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002140")]
		[Address(RVA = "0x100781C", Offset = "0x100781C", VA = "0x100781C")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6002141")]
		[Address(RVA = "0x10078AC", Offset = "0x10078AC", VA = "0x10078AC")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002142")]
		[Address(RVA = "0x100792C", Offset = "0x100792C", VA = "0x100792C")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x10079AC", Offset = "0x10079AC", VA = "0x10079AC")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002144")]
		[Address(RVA = "0x1007C38", Offset = "0x1007C38", VA = "0x1007C38")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x1007CC8", Offset = "0x1007CC8", VA = "0x1007CC8")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002146")]
		[Address(RVA = "0x1007EF8", Offset = "0x1007EF8", VA = "0x1007EF8")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x1007F90", Offset = "0x1007F90", VA = "0x1007F90")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6002148")]
		[Address(RVA = "0x10080E0", Offset = "0x10080E0", VA = "0x10080E0")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002149")]
		[Address(RVA = "0x1008160", Offset = "0x1008160", VA = "0x1008160")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x10081E0", Offset = "0x10081E0", VA = "0x10081E0")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x600214B")]
		[Address(RVA = "0x1008334", Offset = "0x1008334", VA = "0x1008334")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x10083B4", Offset = "0x10083B4", VA = "0x10083B4")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x600214D")]
		[Address(RVA = "0x1008508", Offset = "0x1008508", VA = "0x1008508")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600214E")]
		[Address(RVA = "0x1008588", Offset = "0x1008588", VA = "0x1008588")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600214F")]
		[Address(RVA = "0x1008618", Offset = "0x1008618", VA = "0x1008618")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002150")]
		[Address(RVA = "0x10086A8", Offset = "0x10086A8", VA = "0x10086A8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002151")]
		[Address(RVA = "0x1008738", Offset = "0x1008738", VA = "0x1008738")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002152")]
		[Address(RVA = "0x10087B8", Offset = "0x10087B8", VA = "0x10087B8")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002153")]
		[Address(RVA = "0x1008840", Offset = "0x1008840", VA = "0x1008840")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002154")]
		[Address(RVA = "0x10088C8", Offset = "0x10088C8", VA = "0x10088C8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002155")]
		[Address(RVA = "0x1008948", Offset = "0x1008948", VA = "0x1008948")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002156")]
		[Address(RVA = "0x10089C8", Offset = "0x10089C8", VA = "0x10089C8")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002157")]
		[Address(RVA = "0x1008A7C", Offset = "0x1008A7C", VA = "0x1008A7C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002158")]
		[Address(RVA = "0x1008B0C", Offset = "0x1008B0C", VA = "0x1008B0C")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002159")]
		[Address(RVA = "0x1008B9C", Offset = "0x1008B9C", VA = "0x1008B9C")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600215A")]
		[Address(RVA = "0x1008C1C", Offset = "0x1008C1C", VA = "0x1008C1C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600215B")]
		[Address(RVA = "0x1008C9C", Offset = "0x1008C9C", VA = "0x1008C9C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600215C")]
		[Address(RVA = "0x1008D1C", Offset = "0x1008D1C", VA = "0x1008D1C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600215D")]
		[Address(RVA = "0x1008DB4", Offset = "0x1008DB4", VA = "0x1008DB4")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x600215E")]
		[Address(RVA = "0x1008E44", Offset = "0x1008E44", VA = "0x1008E44")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x600215F")]
		[Address(RVA = "0x1008ED4", Offset = "0x1008ED4", VA = "0x1008ED4")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6002160")]
		[Address(RVA = "0x1008F64", Offset = "0x1008F64", VA = "0x1008F64")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6002161")]
		[Address(RVA = "0x1008FFC", Offset = "0x1008FFC", VA = "0x1008FFC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6002162")]
		[Address(RVA = "0x1009094", Offset = "0x1009094", VA = "0x1009094")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002163")]
		[Address(RVA = "0x1009114", Offset = "0x1009114", VA = "0x1009114")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x1009194", Offset = "0x1009194", VA = "0x1009194")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6002165")]
		[Address(RVA = "0x10092E8", Offset = "0x10092E8", VA = "0x10092E8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x1009368", Offset = "0x1009368", VA = "0x1009368")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6002167")]
		[Address(RVA = "0x10094BC", Offset = "0x10094BC", VA = "0x10094BC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x100953C", Offset = "0x100953C", VA = "0x100953C")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002169")]
		[Address(RVA = "0x1009678", Offset = "0x1009678", VA = "0x1009678")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x10096F8", Offset = "0x10096F8", VA = "0x10096F8")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x10098CC", Offset = "0x10098CC", VA = "0x10098CC")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600216C")]
		[Address(RVA = "0x1009BAC", Offset = "0x1009BAC", VA = "0x1009BAC")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600216D")]
		[Address(RVA = "0x100984C", Offset = "0x100984C", VA = "0x100984C")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600216E")]
		[Address(RVA = "0x1009C3C", Offset = "0x1009C3C", VA = "0x1009C3C")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600216F")]
		[Address(RVA = "0x1009CBC", Offset = "0x1009CBC", VA = "0x1009CBC")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6002170")]
		[Address(RVA = "0x1009D4C", Offset = "0x1009D4C", VA = "0x1009D4C")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6002171")]
		[Address(RVA = "0x1009DDC", Offset = "0x1009DDC", VA = "0x1009DDC")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6002172")]
		[Address(RVA = "0x1009E6C", Offset = "0x1009E6C", VA = "0x1009E6C")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6002173")]
		[Address(RVA = "0x1009F0C", Offset = "0x1009F0C", VA = "0x1009F0C")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6002174")]
		[Address(RVA = "0x1009FAC", Offset = "0x1009FAC", VA = "0x1009FAC")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6002175")]
		[Address(RVA = "0x100A04C", Offset = "0x100A04C", VA = "0x100A04C")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002176")]
		[Address(RVA = "0x100A0CC", Offset = "0x100A0CC", VA = "0x100A0CC")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002177")]
		[Address(RVA = "0x100A14C", Offset = "0x100A14C", VA = "0x100A14C")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6002178")]
		[Address(RVA = "0x100A1CC", Offset = "0x100A1CC", VA = "0x100A1CC")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6002179")]
		[Address(RVA = "0x100A24C", Offset = "0x100A24C", VA = "0x100A24C")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600217A")]
		[Address(RVA = "0x100A2CC", Offset = "0x100A2CC", VA = "0x100A2CC")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600217B")]
		[Address(RVA = "0x100A3F4", Offset = "0x100A3F4", VA = "0x100A3F4")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600217C")]
		[Address(RVA = "0x100A48C", Offset = "0x100A48C", VA = "0x100A48C")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x100A50C", Offset = "0x100A50C", VA = "0x100A50C")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x100A56C", Offset = "0x100A56C", VA = "0x100A56C")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600217F")]
		[Address(RVA = "0x100A6B4", Offset = "0x100A6B4", VA = "0x100A6B4")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x100A744", Offset = "0x100A744", VA = "0x100A744")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002181")]
		[Address(RVA = "0x100A89C", Offset = "0x100A89C", VA = "0x100A89C")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6002182")]
		[Address(RVA = "0x100A92C", Offset = "0x100A92C", VA = "0x100A92C")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x100A9CC", Offset = "0x100A9CC", VA = "0x100A9CC")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002184")]
		[Address(RVA = "0x100AD9C", Offset = "0x100AD9C", VA = "0x100AD9C")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6002185")]
		[Address(RVA = "0x100AE1C", Offset = "0x100AE1C", VA = "0x100AE1C")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x100AEB4", Offset = "0x100AEB4", VA = "0x100AEB4")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002187")]
		[Address(RVA = "0x100B714", Offset = "0x100B714", VA = "0x100B714")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6002188")]
		[Address(RVA = "0x100B794", Offset = "0x100B794", VA = "0x100B794")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x1004B60", Offset = "0x1004B60", VA = "0x1004B60")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xAC15E4", Offset = "0xAC15E4")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600218A")]
		[Address(RVA = "0x100B82C", Offset = "0x100B82C", VA = "0x100B82C")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x600218B")]
		[Address(RVA = "0x100B8B0", Offset = "0x100B8B0", VA = "0x100B8B0")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x600218C")]
		[Address(RVA = "0x100B930", Offset = "0x100B930", VA = "0x100B930")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600218D")]
		[Address(RVA = "0x100B9B0", Offset = "0x100B9B0", VA = "0x100B9B0")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x100BA30", Offset = "0x100BA30", VA = "0x100BA30")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600218F")]
		[Address(RVA = "0x100C3F4", Offset = "0x100C3F4", VA = "0x100C3F4")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x100C474", Offset = "0x100C474", VA = "0x100C474")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6002191")]
		[Address(RVA = "0x100C894", Offset = "0x100C894", VA = "0x100C894")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x100C7FC", Offset = "0x100C7FC", VA = "0x100C7FC")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x100C908", Offset = "0x100C908", VA = "0x100C908")]
		public CAPI()
		{
		}
	}
}
namespace Moments
{
	[Token(Token = "0x20005FB")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xBEB61C", Offset = "0xBEB61C", VA = "0xBEB61C")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x20005FC")]
	public enum RecorderState
	{
		[Token(Token = "0x4002718")]
		Recording,
		[Token(Token = "0x4002719")]
		Paused,
		[Token(Token = "0x400271A")]
		PreProcessing
	}
	[Token(Token = "0x20005FD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA89AC", Offset = "0xAA89AC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA89AC", Offset = "0xAA89AC")]
	[DisallowMultipleComponent]
	public sealed class Recorder : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8A40", Offset = "0xAA8A40")]
		private sealed class <>c
		{
			[Token(Token = "0x400272E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x60021B2")]
			[Address(RVA = "0xE65A60", Offset = "0xE65A60", VA = "0xE65A60")]
			public <>c()
			{
			}
		}

		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8A50", Offset = "0xAA8A50")]
		private sealed class <PreProcess>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400272F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002730")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Recorder <>4__this;

			[Token(Token = "0x4002732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filename;

			[Token(Token = "0x4002733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <filepath>5__2;

			[Token(Token = "0x4002734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<GifFrame> <frames>5__3;

			[Token(Token = "0x4002735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Texture2D <temp>5__4;

			[Token(Token = "0x170004B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021B6")]
				[Address(RVA = "0xE65DAC", Offset = "0xE65DAC", VA = "0xE65DAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021B8")]
				[Address(RVA = "0xE65DF4", Offset = "0xE65DF4", VA = "0xE65DF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021B3")]
			[Address(RVA = "0xE65A68", Offset = "0xE65A68", VA = "0xE65A68")]
			[DebuggerHidden]
			public <PreProcess>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x60021B4")]
			[Address(RVA = "0xE65A94", Offset = "0xE65A94", VA = "0xE65A94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021B5")]
			[Address(RVA = "0xE65A98", Offset = "0xE65A98", VA = "0xE65A98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021B7")]
			[Address(RVA = "0xE65DB4", Offset = "0xE65DB4", VA = "0xE65DB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xAB889C", Offset = "0xAB889C")]
		[SerializeField]
		private int m_Width;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xAB88D8", Offset = "0xAB88D8")]
		private int m_Height;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_AutoAspect;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB8924", Offset = "0xAB8924")]
		private int m_FramePerSecond;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xAB8964", Offset = "0xAB8964")]
		private int m_Repeat;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB89A0", Offset = "0xAB89A0")]
		private int m_Quality;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xAB89E4", Offset = "0xAB89E4")]
		private float m_BufferSize;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8A24", Offset = "0xAB8A24")]
		private RecorderState <State>k__BackingField;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8A34", Offset = "0xAB8A34")]
		private string <SaveFolder>k__BackingField;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ThreadPriority WorkerPriority;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action OnPreProcessingDone;

		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<int, float> OnFileSaveProgress;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<int, string> OnFileSaved;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_MaxFrameCount;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_Time;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_TimePerFrame;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Queue<RenderTexture> m_Frames;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_RecycledRenderTexture;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ReflectionUtils<Recorder> m_ReflectionUtils;

		[Token(Token = "0x170004B0")]
		public RecorderState State
		{
			[Token(Token = "0x600219C")]
			[Address(RVA = "0xE71144", Offset = "0xE71144", VA = "0xE71144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1644", Offset = "0xAC1644")]
			get
			{
				return default(RecorderState);
			}
			[Token(Token = "0x600219D")]
			[Address(RVA = "0xE7114C", Offset = "0xE7114C", VA = "0xE7114C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1654", Offset = "0xAC1654")]
			private set
			{
			}
		}

		[Token(Token = "0x170004B1")]
		public string SaveFolder
		{
			[Token(Token = "0x600219E")]
			[Address(RVA = "0xE71154", Offset = "0xE71154", VA = "0xE71154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1664", Offset = "0xAC1664")]
			get
			{
				return null;
			}
			[Token(Token = "0x600219F")]
			[Address(RVA = "0xE7115C", Offset = "0xE7115C", VA = "0xE7115C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1674", Offset = "0xAC1674")]
			set
			{
			}
		}

		[Token(Token = "0x170004B2")]
		public float EstimatedMemoryUse
		{
			[Token(Token = "0x60021A0")]
			[Address(RVA = "0xE71164", Offset = "0xE71164", VA = "0xE71164")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xE71198", Offset = "0xE71198", VA = "0xE71198")]
		public void Setup(bool autoAspect, int width, int height, int fps, float bufferSize, int repeat, int quality)
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0xE71B7C", Offset = "0xE71B7C", VA = "0xE71B7C")]
		public void Pause()
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xE70A88", Offset = "0xE70A88", VA = "0xE70A88")]
		public void Record()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xE71908", Offset = "0xE71908", VA = "0xE71908")]
		public void FlushMemory()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xE70BB0", Offset = "0xE70BB0", VA = "0xE70BB0")]
		public void Save()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xE71D2C", Offset = "0xE71D2C", VA = "0xE71D2C")]
		public void Save(string filename)
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xE71ED4", Offset = "0xE71ED4", VA = "0xE71ED4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xE71F8C", Offset = "0xE71F8C", VA = "0xE71F8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xE71F90", Offset = "0xE71F90", VA = "0xE71F90")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xE71B04", Offset = "0xE71B04", VA = "0xE71B04")]
		private void Init()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xE721AC", Offset = "0xE721AC", VA = "0xE721AC")]
		public void ComputeHeight()
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xE71C14", Offset = "0xE71C14", VA = "0xE71C14")]
		private void Flush(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xE71C78", Offset = "0xE71C78", VA = "0xE71C78")]
		private string GenerateFileName()
		{
			return null;
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xE71E5C", Offset = "0xE71E5C", VA = "0xE71E5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1684", Offset = "0xAC1684")]
		private IEnumerator PreProcess(string filename)
		{
			return null;
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xE7222C", Offset = "0xE7222C", VA = "0xE7222C")]
		private GifFrame ToGifFrame(RenderTexture source, Texture2D target)
		{
			return null;
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xE72368", Offset = "0xE72368", VA = "0xE72368")]
		public Recorder()
		{
		}
	}
	[Token(Token = "0x2000600")]
	public class ReflectionUtils<T> where T : class, new()
	{
		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T _Instance;

		[Token(Token = "0x60021B9")]
		public ReflectionUtils(T instance)
		{
		}

		[Token(Token = "0x60021BA")]
		public string GetFieldName<U>(Expression<Func<T, U>> fieldAccess)
		{
			return null;
		}

		[Token(Token = "0x60021BB")]
		public FieldInfo GetField(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x60021BC")]
		public A GetAttribute<A>(FieldInfo field) where A : Attribute
		{
			return null;
		}

		[Token(Token = "0x60021BD")]
		public void ConstrainMin<U>(Expression<Func<T, U>> fieldAccess, float value)
		{
		}

		[Token(Token = "0x60021BE")]
		public void ConstrainMin<U>(Expression<Func<T, U>> fieldAccess, int value)
		{
		}

		[Token(Token = "0x60021BF")]
		public void ConstrainRange<U>(Expression<Func<T, U>> fieldAccess, float value)
		{
		}

		[Token(Token = "0x60021C0")]
		public void ConstrainRange<U>(Expression<Func<T, U>> fieldAccess, int value)
		{
		}
	}
	[Token(Token = "0x2000601")]
	internal sealed class Worker
	{
		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int workerId;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Thread m_Thread;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_Id;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal List<GifFrame> m_Frames;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal GifEncoder m_Encoder;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal string m_FilePath;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Action<int, string> m_OnFileSaved;

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Action<int, float> m_OnFileSaveProgress;

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xE8A20C", Offset = "0xE8A20C", VA = "0xE8A20C")]
		internal Worker(ThreadPriority priority)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xE8A320", Offset = "0xE8A320", VA = "0xE8A320")]
		internal void Start()
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xE8A33C", Offset = "0xE8A33C", VA = "0xE8A33C")]
		private void Run()
		{
		}
	}
}
namespace Moments.Encoder
{
	[Token(Token = "0x2000602")]
	public class GifEncoder
	{
		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int m_Width;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int m_Height;

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int m_Repeat;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int m_FrameDelay;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool m_HasStarted;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected FileStream m_FileStream;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected GifFrame m_CurrentFrame;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected byte[] m_Pixels;

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected byte[] m_IndexedPixels;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int m_ColorDepth;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected byte[] m_ColorTab;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool[] m_UsedEntry;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int m_PaletteSize;

		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected int m_DisposalCode;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool m_ShouldCloseStream;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		protected bool m_IsFirstFrame;

		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		protected bool m_IsSizeSet;

		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int m_SampleInterval;

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x24D068C", Offset = "0x24D068C", VA = "0x24D068C")]
		public GifEncoder()
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x24D0698", Offset = "0x24D0698", VA = "0x24D0698")]
		public GifEncoder(int repeat, int quality)
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x24D074C", Offset = "0x24D074C", VA = "0x24D074C")]
		public void SetDelay(int ms)
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x24D0780", Offset = "0x24D0780", VA = "0x24D0780")]
		public void SetFrameRate(float fps)
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x24D07BC", Offset = "0x24D07BC", VA = "0x24D07BC")]
		public void AddFrame(GifFrame frame)
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x24D111C", Offset = "0x24D111C", VA = "0x24D111C")]
		public void Start(FileStream os)
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x24D12E0", Offset = "0x24D12E0", VA = "0x24D12E0")]
		public void Start(string file)
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x24D13F8", Offset = "0x24D13F8", VA = "0x24D13F8")]
		public void Finish()
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x24D08E0", Offset = "0x24D08E0", VA = "0x24D08E0")]
		protected void SetSize(int w, int h)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x24D08F0", Offset = "0x24D08F0", VA = "0x24D08F0")]
		protected void GetImagePixels()
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x24D0A2C", Offset = "0x24D0A2C", VA = "0x24D0A2C")]
		protected void AnalyzePixels()
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x24D0E60", Offset = "0x24D0E60", VA = "0x24D0E60")]
		protected void WriteGraphicCtrlExt()
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x24D0F90", Offset = "0x24D0F90", VA = "0x24D0F90")]
		protected void WriteImageDesc()
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x24D0BE0", Offset = "0x24D0BE0", VA = "0x24D0BE0")]
		protected void WriteLSD()
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x24D0D5C", Offset = "0x24D0D5C", VA = "0x24D0D5C")]
		protected void WriteNetscapeExt()
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x24D0CC4", Offset = "0x24D0CC4", VA = "0x24D0CC4")]
		protected void WritePalette()
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x24D1084", Offset = "0x24D1084", VA = "0x24D1084")]
		protected void WritePixels()
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x24D1560", Offset = "0x24D1560", VA = "0x24D1560")]
		protected void WriteShort(int value)
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x24D1248", Offset = "0x24D1248", VA = "0x24D1248")]
		protected void WriteString(string s)
		{
		}
	}
	[Token(Token = "0x2000603")]
	public class GifFrame
	{
		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Width;

		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Height;

		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32[] Data;

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x24D1620", Offset = "0x24D1620", VA = "0x24D1620")]
		public GifFrame()
		{
		}
	}
	[Token(Token = "0x2000604")]
	public class LzwEncoder
	{
		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int EOF;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] pixAry;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initCodeSize;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int curPixel;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int BITS;

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int HSIZE;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int n_bits;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int maxbits;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int maxcode;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int maxmaxcode;

		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] htab;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] codetab;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int hsize;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int free_ent;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool clear_flg;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int g_init_bits;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int ClearCode;

		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int EOFCode;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int cur_accum;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int cur_bits;

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] masks;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int a_count;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private byte[] accum;

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x24E7668", Offset = "0x24E7668", VA = "0x24E7668")]
		public LzwEncoder(int width, int height, byte[] pixels, int color_depth)
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x24E77F8", Offset = "0x24E77F8", VA = "0x24E77F8")]
		private void Add(byte c, Stream outs)
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x24E791C", Offset = "0x24E791C", VA = "0x24E791C")]
		private void ClearTable(Stream outs)
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x24E7964", Offset = "0x24E7964", VA = "0x24E7964")]
		private void ResetCodeTable(int hsize)
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x24E7B20", Offset = "0x24E7B20", VA = "0x24E7B20")]
		private void Compress(int init_bits, Stream outs)
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x24E7E80", Offset = "0x24E7E80", VA = "0x24E7E80")]
		public void Encode(Stream os)
		{
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x24E7858", Offset = "0x24E7858", VA = "0x24E7858")]
		private void Flush(Stream outs)
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x24E7DC0", Offset = "0x24E7DC0", VA = "0x24E7DC0")]
		private int MaxCode(int n_bits)
		{
			return default(int);
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x24E7DD0", Offset = "0x24E7DD0", VA = "0x24E7DD0")]
		private int NextPixel()
		{
			return default(int);
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x24E79C0", Offset = "0x24E79C0", VA = "0x24E79C0")]
		private void Output(int code, Stream outs)
		{
		}
	}
	[Token(Token = "0x2000605")]
	public class NeuQuant
	{
		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly int netsize;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		protected static readonly int prime1;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static readonly int prime2;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected static readonly int prime3;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly int prime4;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected static readonly int minpicturebytes;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly int maxnetpos;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected static readonly int netbiasshift;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected static readonly int ncycles;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected static readonly int intbiasshift;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected static readonly int intbias;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected static readonly int gammashift;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected static readonly int gamma;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected static readonly int betashift;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected static readonly int beta;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected static readonly int betagamma;

		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected static readonly int initrad;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected static readonly int radiusbiasshift;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected static readonly int radiusbias;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected static readonly int initradius;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected static readonly int radiusdec;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected static readonly int alphabiasshift;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected static readonly int initalpha;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int alphadec;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected static readonly int radbiasshift;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected static readonly int radbias;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected static readonly int alpharadbshift;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected static readonly int alpharadbias;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected byte[] thepicture;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int lengthcount;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int samplefac;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int[][] network;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int[] netindex;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int[] bias;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int[] freq;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int[] radpower;

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xBF6C0C", Offset = "0xBF6C0C", VA = "0xBF6C0C")]
		public NeuQuant(byte[] thepic, int len, int sample)
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xBF6E88", Offset = "0xBF6E88", VA = "0xBF6E88")]
		public byte[] ColorMap()
		{
			return null;
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xBF711C", Offset = "0xBF711C", VA = "0xBF711C")]
		public void Inxbuild()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xBF7468", Offset = "0xBF7468", VA = "0xBF7468")]
		public void Learn()
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xBF80C8", Offset = "0xBF80C8", VA = "0xBF80C8")]
		public int Map(int b, int g, int r)
		{
			return default(int);
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xBF8330", Offset = "0xBF8330", VA = "0xBF8330")]
		public byte[] Process()
		{
			return null;
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xBF8364", Offset = "0xBF8364", VA = "0xBF8364")]
		public void Unbiasnet()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xBF7DD8", Offset = "0xBF7DD8", VA = "0xBF7DD8")]
		protected void Alterneigh(int rad, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xBF7C98", Offset = "0xBF7C98", VA = "0xBF7C98")]
		protected void Altersingle(int alpha, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xBF79E0", Offset = "0xBF79E0", VA = "0xBF79E0")]
		protected int Contest(int b, int g, int r)
		{
			return default(int);
		}
	}
}
namespace DigitalOpus.MB.Core
{
	[Token(Token = "0x2000606")]
	public class MBVersionConcrete : MBVersionInterface
	{
		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _HALF_UV;

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x1AB5C54", Offset = "0x1AB5C54", VA = "0x1AB5C54", Slot = "4")]
		public string version()
		{
			return null;
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x1AB5C98", Offset = "0x1AB5C98", VA = "0x1AB5C98", Slot = "5")]
		public int GetMajorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x1AB5D40", Offset = "0x1AB5D40", VA = "0x1AB5D40", Slot = "6")]
		public int GetMinorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x1AB5DEC", Offset = "0x1AB5DEC", VA = "0x1AB5DEC", Slot = "7")]
		public bool GetActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x1AB5E08", Offset = "0x1AB5E08", VA = "0x1AB5E08", Slot = "8")]
		public void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x1AB5E28", Offset = "0x1AB5E28", VA = "0x1AB5E28", Slot = "9")]
		public void SetActiveRecursively(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x1AB5E48", Offset = "0x1AB5E48", VA = "0x1AB5E48", Slot = "10")]
		public UnityEngine.Object[] FindSceneObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x1AB5EAC", Offset = "0x1AB5EAC", VA = "0x1AB5EAC", Slot = "18")]
		public void OptimizeMesh(Mesh m)
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x1AB5EB0", Offset = "0x1AB5EB0", VA = "0x1AB5EB0", Slot = "11")]
		public bool IsRunningAndMeshNotReadWriteable(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x1AB5EFC", Offset = "0x1AB5EFC", VA = "0x1AB5EFC")]
		public Vector2[] GetMeshUV1s(Mesh m, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x1AB621C", Offset = "0x1AB621C", VA = "0x1AB621C", Slot = "12")]
		public Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x1AB6554", Offset = "0x1AB6554", VA = "0x1AB6554", Slot = "13")]
		public void MeshClear(Mesh m, bool t)
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x1AB6574", Offset = "0x1AB6574", VA = "0x1AB6574", Slot = "14")]
		public void MeshAssignUV3(Mesh m, Vector2[] uv3s)
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x1AB6594", Offset = "0x1AB6594", VA = "0x1AB6594", Slot = "15")]
		public void MeshAssignUV4(Mesh m, Vector2[] uv4s)
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x1AB65B4", Offset = "0x1AB65B4", VA = "0x1AB65B4", Slot = "16")]
		public Vector4 GetLightmapTilingOffset(Renderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x1AB65D0", Offset = "0x1AB65D0", VA = "0x1AB65D0", Slot = "17")]
		public Transform[] GetBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x1AB6760", Offset = "0x1AB6760", VA = "0x1AB6760", Slot = "19")]
		public int GetBlendShapeFrameCount(Mesh m, int shapeIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x1AB6780", Offset = "0x1AB6780", VA = "0x1AB6780", Slot = "20")]
		public float GetBlendShapeFrameWeight(Mesh m, int shapeIndex, int frameIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x1AB67A4", Offset = "0x1AB67A4", VA = "0x1AB67A4", Slot = "21")]
		public void GetBlendShapeFrameVertices(Mesh m, int shapeIndex, int frameIndex, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x1AB67D4", Offset = "0x1AB67D4", VA = "0x1AB67D4", Slot = "22")]
		public void ClearBlendShapes(Mesh m)
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x1AB67F0", Offset = "0x1AB67F0", VA = "0x1AB67F0", Slot = "23")]
		public void AddBlendShapeFrame(Mesh m, string nm, float wt, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x1AB681C", Offset = "0x1AB681C", VA = "0x1AB681C", Slot = "24")]
		public int MaxMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x1AB6824", Offset = "0x1AB6824", VA = "0x1AB6824", Slot = "25")]
		public void SetMeshIndexFormatAndClearMesh(Mesh m, int numVerts, bool vertices, bool justClearTriangles)
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x1AB68D8", Offset = "0x1AB68D8", VA = "0x1AB68D8")]
		public MBVersionConcrete()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000607")]
	public class GrouperData
	{
		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool clusterOnLMIndex;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool clusterByLODLevel;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 origin;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 cellSize;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int pieNumSegments;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 pieAxis;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int height;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxDistBetweenClusters;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool includeCellsWithOnlyOneRenderer;

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x24D991C", Offset = "0x24D991C", VA = "0x24D991C")]
		public GrouperData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000608")]
	public abstract class MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8A60", Offset = "0xAA8A60")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400279A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Renderer r;

			[Token(Token = "0x400279B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<Renderer> <>9__0;

			[Token(Token = "0x600220E")]
			[Address(RVA = "0x192CCD4", Offset = "0x192CCD4", VA = "0x192CCD4")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600220F")]
			[Address(RVA = "0x192CCDC", Offset = "0x192CCDC", VA = "0x192CCDC")]
			internal bool <DoClustering>b__0(Renderer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GrouperData d;

		[Token(Token = "0x6002208")]
		public abstract Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection);

		[Token(Token = "0x6002209")]
		public abstract void DrawGizmos(Bounds sourceObjectBounds);

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x196DB3C", Offset = "0x196DB3C", VA = "0x196DB3C")]
		public void DoClustering(MB3_TextureBaker tb, MB3_MeshBakerGrouper grouper)
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x196E9C4", Offset = "0x196E9C4", VA = "0x196E9C4")]
		private Dictionary<int, List<Renderer>> GroupByLightmapIndex(List<Renderer> gaws)
		{
			return null;
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x196EC18", Offset = "0x196EC18", VA = "0x196EC18")]
		private void AddMeshBaker(MB3_TextureBaker tb, string key, List<Renderer> gaws)
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x196CC50", Offset = "0x196CC50", VA = "0x196CC50")]
		protected MB3_MeshBakerGrouperCore()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060A")]
	public class MB3_MeshBakerGrouperNone : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x6002210")]
		[Address(RVA = "0x196CB4C", Offset = "0x196CB4C", VA = "0x196CB4C")]
		public MB3_MeshBakerGrouperNone(GrouperData d)
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x196FEEC", Offset = "0x196FEEC", VA = "0x196FEEC", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x1970148", Offset = "0x1970148", VA = "0x1970148", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060B")]
	public class MB3_MeshBakerGrouperGrid : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x6002213")]
		[Address(RVA = "0x196CA5C", Offset = "0x196CA5C", VA = "0x196CA5C")]
		public MB3_MeshBakerGrouperGrid(GrouperData d)
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x196EEF4", Offset = "0x196EEF4", VA = "0x196EEF4", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x196F400", Offset = "0x196F400", VA = "0x196F400", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060C")]
	public class MB3_MeshBakerGrouperPie : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x6002216")]
		[Address(RVA = "0x196CA88", Offset = "0x196CA88", VA = "0x196CA88")]
		public MB3_MeshBakerGrouperPie(GrouperData data)
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x197014C", Offset = "0x197014C", VA = "0x197014C", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x19707C8", Offset = "0x19707C8", VA = "0x19707C8", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x19709FC", Offset = "0x19709FC", VA = "0x19709FC")]
		public static void DrawCircle(Vector3 axis, Vector3 center, float radius, int subdiv)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060D")]
	public class MB3_MeshBakerGrouperKMeans : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numClusters;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] clusterCenters;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] clusterSizes;

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x196F928", Offset = "0x196F928", VA = "0x196F928")]
		public MB3_MeshBakerGrouperKMeans(GrouperData data)
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x196F9C4", Offset = "0x196F9C4", VA = "0x196F9C4", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x196FE30", Offset = "0x196FE30", VA = "0x196FE30", Slot = "5")]
		public override void DrawGizmos(Bounds sceneObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060E")]
	public class MB3_MeshBakerGrouperCluster : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8A70", Offset = "0xAA8A70")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40027A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> gos;

			[Token(Token = "0x40027A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int i;

			[Token(Token = "0x40027A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<MB3_AgglomerativeClustering.item_s> <>9__0;

			[Token(Token = "0x6002222")]
			[Address(RVA = "0x192CC14", Offset = "0x192CC14", VA = "0x192CC14")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002223")]
			[Address(RVA = "0x192CC1C", Offset = "0x192CC1C", VA = "0x192CC1C")]
			internal bool <BuildClusters>b__0(MB3_AgglomerativeClustering.item_s x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MB3_AgglomerativeClustering cluster;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _lastMaxDistBetweenClusters;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _ObjsExtents;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _minDistBetweenClusters;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MB3_AgglomerativeClustering.ClusterNode> _clustersToDraw;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] _radii;

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x196CAB4", Offset = "0x196CAB4", VA = "0x196CAB4")]
		public MB3_MeshBakerGrouperCluster(GrouperData data, List<GameObject> gos)
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x196CC58", Offset = "0x196CC58", VA = "0x196CC58", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x196CF34", Offset = "0x196CF34", VA = "0x196CF34")]
		public void BuildClusters(List<GameObject> gos, ProgressUpdateCancelableDelegate progFunc)
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x196D404", Offset = "0x196D404", VA = "0x196D404")]
		private void _BuildListOfClustersToDraw(ProgressUpdateCancelableDelegate progFunc, out float smallest, out float largest)
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x196DA00", Offset = "0x196DA00", VA = "0x196DA00", Slot = "5")]
		public override void DrawGizmos(Bounds sceneObjectBounds)
		{
		}
	}
	[Token(Token = "0x2000610")]
	public interface TextureBlender
	{
		[Token(Token = "0x6002224")]
		bool DoesShaderNameMatch(string shaderName);

		[Token(Token = "0x6002225")]
		void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName);

		[Token(Token = "0x6002226")]
		Color OnBlendTexturePixel(string shaderPropertyName, Color pixelColor);

		[Token(Token = "0x6002227")]
		bool NonTexturePropertiesAreEqual(Material a, Material b);

		[Token(Token = "0x6002228")]
		void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial);

		[Token(Token = "0x6002229")]
		Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName);
	}
	[Token(Token = "0x2000611")]
	public class TextureBlenderFallback : TextureBlender
	{
		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_doTintColor;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultColor;

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xF07CB0", Offset = "0xF07CB0", VA = "0xF07CB0", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0xF07CB8", Offset = "0xF07CB8", VA = "0xF07CB8", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0xF07DB4", Offset = "0xF07DB4", VA = "0xF07DB4", Slot = "6")]
		public Color OnBlendTexturePixel(string shaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xF07E10", Offset = "0xF07E10", VA = "0xF07E10", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xF07FDC", Offset = "0xF07FDC", VA = "0xF07FDC", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xF08094", Offset = "0xF08094", VA = "0xF08094", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xF07ED0", Offset = "0xF07ED0", VA = "0xF07ED0")]
		public static bool _compareColor(Material a, Material b, Color defaultVal, string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xF08BBC", Offset = "0xF08BBC", VA = "0xF08BBC")]
		public static bool _compareFloat(Material a, Material b, float defaultVal, string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xF08C58", Offset = "0xF08C58", VA = "0xF08C58")]
		public TextureBlenderFallback()
		{
		}
	}
	[Token(Token = "0x2000612")]
	public class TextureBlenderLegacyBumpDiffuse : TextureBlender
	{
		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool doColor;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultTintColor;

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xF08C8C", Offset = "0xF08C8C", VA = "0xF08C8C", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0xF08D1C", Offset = "0xF08D1C", VA = "0xF08D1C", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xF08DCC", Offset = "0xF08DCC", VA = "0xF08DCC", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xF08E28", Offset = "0xF08E28", VA = "0xF08E28", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xF08E90", Offset = "0xF08E90", VA = "0xF08E90", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xF08EF0", Offset = "0xF08EF0", VA = "0xF08EF0", Slot = "9")]
		public Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xF090D0", Offset = "0xF090D0", VA = "0xF090D0")]
		public TextureBlenderLegacyBumpDiffuse()
		{
		}
	}
	[Token(Token = "0x2000613")]
	public class TextureBlenderLegacyDiffuse : TextureBlender
	{
		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool doColor;

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultTintColor;

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xF09104", Offset = "0xF09104", VA = "0xF09104", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xF09194", Offset = "0xF09194", VA = "0xF09194", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xF09244", Offset = "0xF09244", VA = "0xF09244", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xF092A0", Offset = "0xF092A0", VA = "0xF092A0", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xF09308", Offset = "0xF09308", VA = "0xF09308", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xF09368", Offset = "0xF09368", VA = "0xF09368", Slot = "9")]
		public Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xF094FC", Offset = "0xF094FC", VA = "0xF094FC")]
		public TextureBlenderLegacyDiffuse()
		{
		}
	}
	[Token(Token = "0x2000614")]
	public class TextureBlenderMaterialPropertyCacheHelper
	{
		[Token(Token = "0x2000615")]
		private struct MaterialPropertyPair
		{
			[Token(Token = "0x40027B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material material;

			[Token(Token = "0x40027B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string property;

			[Token(Token = "0x6002245")]
			[Address(RVA = "0xE6A394", Offset = "0xE6A394", VA = "0xE6A394")]
			public MaterialPropertyPair(Material m, string prop)
			{
			}

			[Token(Token = "0x6002246")]
			[Address(RVA = "0xE6A39C", Offset = "0xE6A39C", VA = "0xE6A39C", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002247")]
			[Address(RVA = "0xE6A44C", Offset = "0xE6A44C", VA = "0xE6A44C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<MaterialPropertyPair, object> nonTexturePropertyValuesForSourceMaterials;

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xF09530", Offset = "0xF09530", VA = "0xF09530")]
		private bool AllNonTexturePropertyValuesAreEqual(string prop)
		{
			return default(bool);
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xF09754", Offset = "0xF09754", VA = "0xF09754")]
		public void CacheMaterialProperty(Material m, string property, object value)
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xF097F4", Offset = "0xF097F4", VA = "0xF097F4")]
		public object GetValueIfAllSourceAreTheSameOrDefault(string property, object defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xF099C0", Offset = "0xF099C0", VA = "0xF099C0")]
		public TextureBlenderMaterialPropertyCacheHelper()
		{
		}
	}
	[Token(Token = "0x2000616")]
	public class TextureBlenderStandardMetallic : TextureBlender
	{
		[Token(Token = "0x2000617")]
		private enum Prop
		{
			[Token(Token = "0x40027CA")]
			doColor,
			[Token(Token = "0x40027CB")]
			doMetallic,
			[Token(Token = "0x40027CC")]
			doEmission,
			[Token(Token = "0x40027CD")]
			doBump,
			[Token(Token = "0x40027CE")]
			doNone
		}

		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color NeutralNormalMap;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextureBlenderMaterialPropertyCacheHelper sourceMaterialPropertyCache;

		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_tintColor;

		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_glossiness;

		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_glossMapScale;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_metallic;

		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_hasMetallicGlossMap;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_bumpScale;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_shaderDoesEmission;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color m_emissionColor;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Prop propertyToDo;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color m_generatingTintedAtlasColor;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_generatingTintedAtlasMetallic;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_generatingTintedAtlasGlossiness;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_generatingTintedAtlasGlossMapScale;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_generatingTintedAtlasBumpScale;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Color m_generatingTintedAtlasEmission;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Color m_notGeneratingAtlasDefaultColor;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_notGeneratingAtlasDefaultMetallic;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_notGeneratingAtlasDefaultGlossiness;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Color m_notGeneratingAtlasDefaultEmisionColor;

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xF09A38", Offset = "0xF09A38", VA = "0xF09A38", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xF09A90", Offset = "0xF09A90", VA = "0xF09A90", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xF09E08", Offset = "0xF09E08", VA = "0xF09E08", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xF09F90", Offset = "0xF09F90", VA = "0xF09F90", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xF0A21C", Offset = "0xF0A21C", VA = "0xF0A21C", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xF0A6EC", Offset = "0xF0A6EC", VA = "0xF0A6EC", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xF0AE78", Offset = "0xF0AE78", VA = "0xF0AE78")]
		public TextureBlenderStandardMetallic()
		{
		}
	}
	[Token(Token = "0x2000618")]
	public class TextureBlenderStandardMetallicRoughness : TextureBlender
	{
		[Token(Token = "0x2000619")]
		private enum Prop
		{
			[Token(Token = "0x40027E4")]
			doColor,
			[Token(Token = "0x40027E5")]
			doMetallic,
			[Token(Token = "0x40027E6")]
			doRoughness,
			[Token(Token = "0x40027E7")]
			doEmission,
			[Token(Token = "0x40027E8")]
			doBump,
			[Token(Token = "0x40027E9")]
			doNone
		}

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color NeutralNormalMap;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextureBlenderMaterialPropertyCacheHelper sourceMaterialPropertyCache;

		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_tintColor;

		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_roughness;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_metallic;

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasMetallicGlossMap;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_hasSpecGlossMap;

		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_bumpScale;

		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_shaderDoesEmission;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color m_emissionColor;

		[Token(Token = "0x40027D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Prop propertyToDo;

		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color m_generatingTintedAtlasColor;

		[Token(Token = "0x40027DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_generatingTintedAtlasMetallic;

		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_generatingTintedAtlasRoughness;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_generatingTintedAtlasBumpScale;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Color m_generatingTintedAtlasEmission;

		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Color m_notGeneratingAtlasDefaultColor;

		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_notGeneratingAtlasDefaultMetallic;

		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_notGeneratingAtlasDefaultGlossiness;

		[Token(Token = "0x40027E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Color m_notGeneratingAtlasDefaultEmisionColor;

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xFE9BC4", Offset = "0xFE9BC4", VA = "0xFE9BC4", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xFE9C1C", Offset = "0xFE9C1C", VA = "0xFE9C1C", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xFE9FE8", Offset = "0xFE9FE8", VA = "0xFE9FE8", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xFEA168", Offset = "0xFEA168", VA = "0xFEA168", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xFEA520", Offset = "0xFEA520", VA = "0xFEA520", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xFEAA18", Offset = "0xFEAA18", VA = "0xFEAA18", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xFEB2C0", Offset = "0xFEB2C0", VA = "0xFEB2C0")]
		public TextureBlenderStandardMetallicRoughness()
		{
		}
	}
	[Token(Token = "0x200061A")]
	public class TextureBlenderStandardSpecular : TextureBlender
	{
		[Token(Token = "0x200061B")]
		private enum Prop
		{
			[Token(Token = "0x4002800")]
			doColor,
			[Token(Token = "0x4002801")]
			doSpecular,
			[Token(Token = "0x4002802")]
			doEmission,
			[Token(Token = "0x4002803")]
			doBump,
			[Token(Token = "0x4002804")]
			doNone
		}

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color NeutralNormalMap;

		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextureBlenderMaterialPropertyCacheHelper sourceMaterialPropertyCache;

		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_tintColor;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_glossiness;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_SpecGlossMapScale;

		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color m_specColor;

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_hasSpecGlossMap;

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_bumpScale;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_shaderDoesEmission;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color m_emissionColor;

		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Prop propertyToDo;

		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color m_generatingTintedAtlaColor;

		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color m_generatingTintedAtlaSpecular;

		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_generatingTintedAtlaGlossiness;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_generatingTintedAtlaSpecGlossMapScale;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_generatingTintedAtlaBumpScale;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Color m_generatingTintedAtlaEmission;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Color m_notGeneratingAtlasDefaultColor;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Color m_notGeneratingAtlasDefaultSpecularColor;

		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float m_notGeneratingAtlasDefaultGlossiness;

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color m_notGeneratingAtlasDefaultEmisionColor;

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xFEB3F4", Offset = "0xFEB3F4", VA = "0xFEB3F4", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xFEB44C", Offset = "0xFEB44C", VA = "0xFEB44C", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xFEB7F8", Offset = "0xFEB7F8", VA = "0xFEB7F8", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xFEB97C", Offset = "0xFEB97C", VA = "0xFEB97C", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xFEBC4C", Offset = "0xFEBC4C", VA = "0xFEBC4C", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xFEC138", Offset = "0xFEC138", VA = "0xFEC138", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xFEC8B8", Offset = "0xFEC8B8", VA = "0xFEC8B8")]
		public TextureBlenderStandardSpecular()
		{
		}
	}
	[Token(Token = "0x200061C")]
	public delegate void ProgressUpdateDelegate(string msg, float progress);
	[Token(Token = "0x200061D")]
	public delegate bool ProgressUpdateCancelableDelegate(string msg, float progress);
	[Token(Token = "0x200061E")]
	public enum MB_ObjsToCombineTypes
	{
		[Token(Token = "0x4002806")]
		prefabOnly,
		[Token(Token = "0x4002807")]
		sceneObjOnly,
		[Token(Token = "0x4002808")]
		dontCare
	}
	[Token(Token = "0x200061F")]
	public enum MB_OutputOptions
	{
		[Token(Token = "0x400280A")]
		bakeIntoPrefab,
		[Token(Token = "0x400280B")]
		bakeMeshsInPlace,
		[Token(Token = "0x400280C")]
		bakeTextureAtlasesOnly,
		[Token(Token = "0x400280D")]
		bakeIntoSceneObject
	}
	[Token(Token = "0x2000620")]
	public enum MB_RenderType
	{
		[Token(Token = "0x400280F")]
		meshRenderer,
		[Token(Token = "0x4002810")]
		skinnedMeshRenderer
	}
	[Token(Token = "0x2000621")]
	public enum MB2_OutputOptions
	{
		[Token(Token = "0x4002812")]
		bakeIntoSceneObject,
		[Token(Token = "0x4002813")]
		bakeMeshAssetsInPlace,
		[Token(Token = "0x4002814")]
		bakeIntoPrefab
	}
	[Token(Token = "0x2000622")]
	public enum MB2_LightmapOptions
	{
		[Token(Token = "0x4002816")]
		preserve_current_lightmapping,
		[Token(Token = "0x4002817")]
		ignore_UV2,
		[Token(Token = "0x4002818")]
		copy_UV2_unchanged,
		[Token(Token = "0x4002819")]
		generate_new_UV2_layout,
		[Token(Token = "0x400281A")]
		copy_UV2_unchanged_to_separate_rects
	}
	[Token(Token = "0x2000623")]
	public enum MB2_PackingAlgorithmEnum
	{
		[Token(Token = "0x400281C")]
		UnitysPackTextures,
		[Token(Token = "0x400281D")]
		MeshBakerTexturePacker,
		[Token(Token = "0x400281E")]
		MeshBakerTexturePacker_Fast,
		[Token(Token = "0x400281F")]
		MeshBakerTexturePacker_Horizontal,
		[Token(Token = "0x4002820")]
		MeshBakerTexturePacker_Vertical
	}
	[Token(Token = "0x2000624")]
	public enum MB_TextureTilingTreatment
	{
		[Token(Token = "0x4002822")]
		none,
		[Token(Token = "0x4002823")]
		considerUVs,
		[Token(Token = "0x4002824")]
		edgeToEdgeX,
		[Token(Token = "0x4002825")]
		edgeToEdgeY,
		[Token(Token = "0x4002826")]
		edgeToEdgeXY,
		[Token(Token = "0x4002827")]
		unknown
	}
	[Token(Token = "0x2000625")]
	public enum MB2_ValidationLevel
	{
		[Token(Token = "0x4002829")]
		none,
		[Token(Token = "0x400282A")]
		quick,
		[Token(Token = "0x400282B")]
		robust
	}
	[Token(Token = "0x2000626")]
	public interface MB2_EditorMethodsInterface
	{
		[Token(Token = "0x6002268")]
		void Clear();

		[Token(Token = "0x6002269")]
		void RestoreReadFlagsAndFormats(ProgressUpdateDelegate progressInfo);

		[Token(Token = "0x600226A")]
		void SetReadWriteFlag(Texture2D tx, bool isReadable, bool addToList);

		[Token(Token = "0x600226B")]
		void AddTextureFormat(Texture2D tx, bool isNormalMap);

		[Token(Token = "0x600226C")]
		void SaveAtlasToAssetDatabase(Texture2D atlas, ShaderTextureProperty texPropertyName, int atlasNum, Material resMat);

		[Token(Token = "0x600226D")]
		bool IsNormalMap(Texture2D tx);

		[Token(Token = "0x600226E")]
		string GetPlatformString();

		[Token(Token = "0x600226F")]
		void SetTextureSize(Texture2D tx, int size);

		[Token(Token = "0x6002270")]
		bool IsCompressed(Texture2D tx);

		[Token(Token = "0x6002271")]
		void CheckBuildSettings(long estimatedAtlasSize);

		[Token(Token = "0x6002272")]
		bool CheckPrefabTypes(MB_ObjsToCombineTypes prefabType, List<GameObject> gos);

		[Token(Token = "0x6002273")]
		bool ValidateSkinnedMeshes(List<GameObject> mom);

		[Token(Token = "0x6002274")]
		void CommitChangesToAssets();

		[Token(Token = "0x6002275")]
		void OnPreTextureBake();

		[Token(Token = "0x6002276")]
		void OnPostTextureBake();

		[Token(Token = "0x6002277")]
		void Destroy(UnityEngine.Object o);
	}
	[Token(Token = "0x2000627")]
	public enum MB2_LogLevel
	{
		[Token(Token = "0x400282D")]
		none,
		[Token(Token = "0x400282E")]
		error,
		[Token(Token = "0x400282F")]
		warn,
		[Token(Token = "0x4002830")]
		info,
		[Token(Token = "0x4002831")]
		debug,
		[Token(Token = "0x4002832")]
		trace
	}
	[Token(Token = "0x2000628")]
	public class MB2_Log
	{
		[Token(Token = "0x6002278")]
		[Address(RVA = "0x24E7FB4", Offset = "0x24E7FB4", VA = "0x24E7FB4")]
		public static void Log(MB2_LogLevel l, string msg, MB2_LogLevel currentThreshold)
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x24E81FC", Offset = "0x24E81FC", VA = "0x24E81FC")]
		public static string Error(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x24E82EC", Offset = "0x24E82EC", VA = "0x24E82EC")]
		public static string Warn(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x24E83DC", Offset = "0x24E83DC", VA = "0x24E83DC")]
		public static string Info(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x24E84CC", Offset = "0x24E84CC", VA = "0x24E84CC")]
		public static string LogDebug(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x24E85BC", Offset = "0x24E85BC", VA = "0x24E85BC")]
		public static string Trace(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x24E86AC", Offset = "0x24E86AC", VA = "0x24E86AC")]
		public MB2_Log()
		{
		}
	}
	[Token(Token = "0x2000629")]
	public class ObjectLog
	{
		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int pos;

		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] logMessages;

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x115E33C", Offset = "0x115E33C", VA = "0x115E33C")]
		private void _CacheLogMessage(string msg)
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x115E3E4", Offset = "0x115E3E4", VA = "0x115E3E4")]
		public ObjectLog(short bufferSize)
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x115E450", Offset = "0x115E450", VA = "0x115E450")]
		public void Log(MB2_LogLevel l, string msg, MB2_LogLevel currentThreshold)
		{
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x115E48C", Offset = "0x115E48C", VA = "0x115E48C")]
		public void Error(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x115E4C0", Offset = "0x115E4C0", VA = "0x115E4C0")]
		public void Warn(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x115E4F4", Offset = "0x115E4F4", VA = "0x115E4F4")]
		public void Info(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x115E528", Offset = "0x115E528", VA = "0x115E528")]
		public void LogDebug(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x115E55C", Offset = "0x115E55C", VA = "0x115E55C")]
		public void Trace(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x115E590", Offset = "0x115E590", VA = "0x115E590")]
		public string Dump()
		{
			return null;
		}
	}
	[Token(Token = "0x200062A")]
	public interface MBVersionInterface
	{
		[Token(Token = "0x6002288")]
		string version();

		[Token(Token = "0x6002289")]
		int GetMajorVersion();

		[Token(Token = "0x600228A")]
		int GetMinorVersion();

		[Token(Token = "0x600228B")]
		bool GetActive(GameObject go);

		[Token(Token = "0x600228C")]
		void SetActive(GameObject go, bool isActive);

		[Token(Token = "0x600228D")]
		void SetActiveRecursively(GameObject go, bool isActive);

		[Token(Token = "0x600228E")]
		UnityEngine.Object[] FindSceneObjectsOfType(Type t);

		[Token(Token = "0x600228F")]
		bool IsRunningAndMeshNotReadWriteable(Mesh m);

		[Token(Token = "0x6002290")]
		Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x6002291")]
		void MeshClear(Mesh m, bool t);

		[Token(Token = "0x6002292")]
		void MeshAssignUV3(Mesh m, Vector2[] uv3s);

		[Token(Token = "0x6002293")]
		void MeshAssignUV4(Mesh m, Vector2[] uv4s);

		[Token(Token = "0x6002294")]
		Vector4 GetLightmapTilingOffset(Renderer r);

		[Token(Token = "0x6002295")]
		Transform[] GetBones(Renderer r);

		[Token(Token = "0x6002296")]
		void OptimizeMesh(Mesh m);

		[Token(Token = "0x6002297")]
		int GetBlendShapeFrameCount(Mesh m, int shapeIndex);

		[Token(Token = "0x6002298")]
		float GetBlendShapeFrameWeight(Mesh m, int shapeIndex, int frameIndex);

		[Token(Token = "0x6002299")]
		void GetBlendShapeFrameVertices(Mesh m, int shapeIndex, int frameIndex, Vector3[] vs, Vector3[] ns, Vector3[] ts);

		[Token(Token = "0x600229A")]
		void ClearBlendShapes(Mesh m);

		[Token(Token = "0x600229B")]
		void AddBlendShapeFrame(Mesh m, string nm, float wt, Vector3[] vs, Vector3[] ns, Vector3[] ts);

		[Token(Token = "0x600229C")]
		int MaxMeshVertexCount();

		[Token(Token = "0x600229D")]
		void SetMeshIndexFormatAndClearMesh(Mesh m, int numVerts, bool vertices, bool justClearTriangles);
	}
	[Token(Token = "0x200062B")]
	public class MBVersion
	{
		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MBVersionInterface _MBVersion;

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x1AB4674", Offset = "0x1AB4674", VA = "0x1AB4674")]
		private static MBVersionInterface _CreateMBVersionConcrete()
		{
			return null;
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x1AB4730", Offset = "0x1AB4730", VA = "0x1AB4730")]
		public static string version()
		{
			return null;
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x1AB4814", Offset = "0x1AB4814", VA = "0x1AB4814")]
		public static int GetMajorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x1AB48FC", Offset = "0x1AB48FC", VA = "0x1AB48FC")]
		public static int GetMinorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x1AB49E4", Offset = "0x1AB49E4", VA = "0x1AB49E4")]
		public static bool GetActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x1AB4ADC", Offset = "0x1AB4ADC", VA = "0x1AB4ADC")]
		public static void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x1AB4BDC", Offset = "0x1AB4BDC", VA = "0x1AB4BDC")]
		public static void SetActiveRecursively(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x1AB4CDC", Offset = "0x1AB4CDC", VA = "0x1AB4CDC")]
		public static UnityEngine.Object[] FindSceneObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x1AB4DD4", Offset = "0x1AB4DD4", VA = "0x1AB4DD4")]
		public static bool IsRunningAndMeshNotReadWriteable(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x1AB4ECC", Offset = "0x1AB4ECC", VA = "0x1AB4ECC")]
		public static Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x1AB4FDC", Offset = "0x1AB4FDC", VA = "0x1AB4FDC")]
		public static void MeshClear(Mesh m, bool t)
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x1AB50DC", Offset = "0x1AB50DC", VA = "0x1AB50DC")]
		public static void MeshAssignUV3(Mesh m, Vector2[] uv3s)
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x1AB51DC", Offset = "0x1AB51DC", VA = "0x1AB51DC")]
		public static void MeshAssignUV4(Mesh m, Vector2[] uv4s)
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x1AB52DC", Offset = "0x1AB52DC", VA = "0x1AB52DC")]
		public static Vector4 GetLightmapTilingOffset(Renderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x1AB53D4", Offset = "0x1AB53D4", VA = "0x1AB53D4")]
		public static Transform[] GetBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x1AB54CC", Offset = "0x1AB54CC", VA = "0x1AB54CC")]
		public static void OptimizeMesh(Mesh m)
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x1AB55C4", Offset = "0x1AB55C4", VA = "0x1AB55C4")]
		public static int GetBlendShapeFrameCount(Mesh m, int shapeIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x1AB56C4", Offset = "0x1AB56C4", VA = "0x1AB56C4")]
		public static float GetBlendShapeFrameWeight(Mesh m, int shapeIndex, int frameIndex)
		{
			return default(float);
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x1AB57D4", Offset = "0x1AB57D4", VA = "0x1AB57D4")]
		public static void GetBlendShapeFrameVertices(Mesh m, int shapeIndex, int frameIndex, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x1AB5904", Offset = "0x1AB5904", VA = "0x1AB5904")]
		public static void ClearBlendShapes(Mesh m)
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x1AB59FC", Offset = "0x1AB59FC", VA = "0x1AB59FC")]
		public static void AddBlendShapeFrame(Mesh m, string nm, float wt, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0x1AA0914", Offset = "0x1AA0914", VA = "0x1AA0914")]
		public static int MaxMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x1AB5B34", Offset = "0x1AB5B34", VA = "0x1AB5B34")]
		public static void SetMeshIndexFormatAndClearMesh(Mesh m, int numVerts, bool vertices, bool justClearTriangles)
		{
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0x1AB5C4C", Offset = "0x1AB5C4C", VA = "0x1AB5C4C")]
		public MBVersion()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200062C")]
	public class MB3_AgglomerativeClustering
	{
		[Serializable]
		[Token(Token = "0x200062D")]
		public class ClusterNode
		{
			[Token(Token = "0x400283A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public item_s leaf;

			[Token(Token = "0x400283B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ClusterNode cha;

			[Token(Token = "0x400283C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClusterNode chb;

			[Token(Token = "0x400283D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int height;

			[Token(Token = "0x400283E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float distToMergedCentroid;

			[Token(Token = "0x400283F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 centroid;

			[Token(Token = "0x4002840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int[] leafs;

			[Token(Token = "0x4002841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int idx;

			[Token(Token = "0x4002842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isUnclustered;

			[Token(Token = "0x60022C0")]
			[Address(RVA = "0x192C844", Offset = "0x192C844", VA = "0x192C844")]
			public ClusterNode(item_s ii, int index)
			{
			}

			[Token(Token = "0x60022C1")]
			[Address(RVA = "0x192C8FC", Offset = "0x192C8FC", VA = "0x192C8FC")]
			public ClusterNode(ClusterNode a, ClusterNode b, int index, int h, float dist, ClusterNode[] clusters)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200062E")]
		public class item_s
		{
			[Token(Token = "0x4002843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4002844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 coord;

			[Token(Token = "0x60022C2")]
			[Address(RVA = "0x192CAA4", Offset = "0x192CAA4", VA = "0x192CAA4")]
			public item_s()
			{
			}
		}

		[Token(Token = "0x200062F")]
		public class ClusterDistance
		{
			[Token(Token = "0x4002845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ClusterNode a;

			[Token(Token = "0x4002846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ClusterNode b;

			[Token(Token = "0x60022C3")]
			[Address(RVA = "0x192C80C", Offset = "0x192C80C", VA = "0x192C80C")]
			public ClusterDistance(ClusterNode aa, ClusterNode bb)
			{
			}
		}

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<item_s> items;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClusterNode[] clusters;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool wasCanceled;

		[Token(Token = "0x4002839")]
		private const int MAX_PRIORITY_Q_SIZE = 2048;

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x1967D78", Offset = "0x1967D78", VA = "0x1967D78")]
		private float euclidean_distance(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x1967D80", Offset = "0x1967D80", VA = "0x1967D80")]
		public bool agglomerate(ProgressUpdateCancelableDelegate progFunc)
		{
			return default(bool);
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x1968D80", Offset = "0x1968D80", VA = "0x1968D80")]
		private float _RefillPriorityQWithSome(PriorityQueue<float, ClusterDistance> pq, List<ClusterNode> unclustered, ClusterNode[] clusters, ProgressUpdateCancelableDelegate progFunc)
		{
			return default(float);
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x19691F8", Offset = "0x19691F8", VA = "0x19691F8")]
		public int TestRun(List<GameObject> gos)
		{
			return default(int);
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x19693AC", Offset = "0x19693AC", VA = "0x19693AC")]
		public static void Main()
		{
		}

		[Token(Token = "0x60022BB")]
		public static T NthSmallestElement<T>(List<T> array, int n) where T : IComparable<T>
		{
			return (T)null;
		}

		[Token(Token = "0x60022BC")]
		private static List<T> QuickSelectSmallest<T>(List<T> input, int n) where T : IComparable<T>
		{
			return null;
		}

		[Token(Token = "0x60022BD")]
		private static int QuickSelectPartition<T>(List<T> array, int startIndex, int endIndex, int pivotIndex) where T : IComparable<T>
		{
			return default(int);
		}

		[Token(Token = "0x60022BE")]
		private static void Swap<T>(List<T> array, int index1, int index2)
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x1969528", Offset = "0x1969528", VA = "0x1969528")]
		public MB3_AgglomerativeClustering()
		{
		}
	}
	[Token(Token = "0x2000630")]
	public class MB3_CopyBoneWeights
	{
		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x19696E8", Offset = "0x19696E8", VA = "0x19696E8")]
		public static void CopyBoneWeightsFromSeamMeshToOtherMeshes(float radius, Mesh seamMesh, Mesh[] targetMeshes)
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x196A090", Offset = "0x196A090", VA = "0x196A090")]
		public MB3_CopyBoneWeights()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000631")]
	public abstract class MB3_MeshCombiner
	{
		[Token(Token = "0x2000632")]
		public delegate void GenerateUV2Delegate(Mesh m, float hardAngle, float packMargin);

		[Token(Token = "0x2000633")]
		public class MBBlendShapeKey
		{
			[Token(Token = "0x400285C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int gameObjecID;

			[Token(Token = "0x400285D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int blendShapeIndexInSrc;

			[Token(Token = "0x600230C")]
			[Address(RVA = "0x192D654", Offset = "0x192D654", VA = "0x192D654")]
			public MBBlendShapeKey(int srcSkinnedMeshRenderGameObjectID, int blendShapeIndexInSource)
			{
			}

			[Token(Token = "0x600230D")]
			[Address(RVA = "0x192D68C", Offset = "0x192D68C", VA = "0x192D68C", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600230E")]
			[Address(RVA = "0x192D734", Offset = "0x192D734", VA = "0x192D734", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000634")]
		public class MBBlendShapeValue
		{
			[Token(Token = "0x400285E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject combinedMeshGameObject;

			[Token(Token = "0x400285F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int blendShapeIndex;

			[Token(Token = "0x600230F")]
			[Address(RVA = "0x192D750", Offset = "0x192D750", VA = "0x192D750")]
			public MBBlendShapeValue()
			{
			}
		}

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected MB2_LogLevel _LOG_LEVEL;

		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected MB2_ValidationLevel _validationLevel;

		[Token(Token = "0x4002849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string _name;

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected MB2_TextureBakeResults _textureBakeResults;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GameObject _resultSceneObject;

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Renderer _targetRenderer;

		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected MB_RenderType _renderType;

		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected MB2_OutputOptions _outputOption;

		[Token(Token = "0x400284F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected MB2_LightmapOptions _lightmapOption;

		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected bool _doNorm;

		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		protected bool _doTan;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[SerializeField]
		protected bool _doCol;

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[SerializeField]
		protected bool _doUV;

		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected bool _doUV3;

		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		protected bool _doUV4;

		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		protected bool _doBlendShapes;

		[Token(Token = "0x4002857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[SerializeField]
		protected bool _recenterVertsToBoundsCenter;

		[Token(Token = "0x4002858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public bool _optimizeAfterBake;

		[Token(Token = "0x4002859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public float uv2UnwrappingParamsHardAngle;

		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public float uv2UnwrappingParamsPackMargin;

		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool _usingTemporaryTextureBakeResult;

		[Token(Token = "0x170004B5")]
		public static bool EVAL_VERSION
		{
			[Token(Token = "0x60022C6")]
			[Address(RVA = "0x1971480", Offset = "0x1971480", VA = "0x1971480")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B6")]
		public virtual MB2_LogLevel LOG_LEVEL
		{
			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x1971488", Offset = "0x1971488", VA = "0x1971488", Slot = "4")]
			get
			{
				return default(MB2_LogLevel);
			}
			[Token(Token = "0x60022C8")]
			[Address(RVA = "0x1971490", Offset = "0x1971490", VA = "0x1971490", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170004B7")]
		public virtual MB2_ValidationLevel validationLevel
		{
			[Token(Token = "0x60022C9")]
			[Address(RVA = "0x1971498", Offset = "0x1971498", VA = "0x1971498", Slot = "6")]
			get
			{
				return default(MB2_ValidationLevel);
			}
			[Token(Token = "0x60022CA")]
			[Address(RVA = "0x19714A0", Offset = "0x19714A0", VA = "0x19714A0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170004B8")]
		public string name
		{
			[Token(Token = "0x60022CB")]
			[Address(RVA = "0x19714A8", Offset = "0x19714A8", VA = "0x19714A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022CC")]
			[Address(RVA = "0x19714B0", Offset = "0x19714B0", VA = "0x19714B0")]
			set
			{
			}
		}

		[Token(Token = "0x170004B9")]
		public virtual MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x60022CD")]
			[Address(RVA = "0x19714B8", Offset = "0x19714B8", VA = "0x19714B8", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022CE")]
			[Address(RVA = "0x19714C0", Offset = "0x19714C0", VA = "0x19714C0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170004BA")]
		public virtual GameObject resultSceneObject
		{
			[Token(Token = "0x60022CF")]
			[Address(RVA = "0x19714C8", Offset = "0x19714C8", VA = "0x19714C8", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022D0")]
			[Address(RVA = "0x19714D0", Offset = "0x19714D0", VA = "0x19714D0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x170004BB")]
		public virtual Renderer targetRenderer
		{
			[Token(Token = "0x60022D1")]
			[Address(RVA = "0x19714D8", Offset = "0x19714D8", VA = "0x19714D8", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022D2")]
			[Address(RVA = "0x19714E0", Offset = "0x19714E0", VA = "0x19714E0", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x170004BC")]
		public virtual MB_RenderType renderType
		{
			[Token(Token = "0x60022D3")]
			[Address(RVA = "0x19715E0", Offset = "0x19715E0", VA = "0x19715E0", Slot = "14")]
			get
			{
				return default(MB_RenderType);
			}
			[Token(Token = "0x60022D4")]
			[Address(RVA = "0x19715E8", Offset = "0x19715E8", VA = "0x19715E8", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x170004BD")]
		public virtual MB2_OutputOptions outputOption
		{
			[Token(Token = "0x60022D5")]
			[Address(RVA = "0x19715F0", Offset = "0x19715F0", VA = "0x19715F0", Slot = "16")]
			get
			{
				return default(MB2_OutputOptions);
			}
			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x19715F8", Offset = "0x19715F8", VA = "0x19715F8", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x170004BE")]
		public virtual MB2_LightmapOptions lightmapOption
		{
			[Token(Token = "0x60022D7")]
			[Address(RVA = "0x1971600", Offset = "0x1971600", VA = "0x1971600", Slot = "18")]
			get
			{
				return default(MB2_LightmapOptions);
			}
			[Token(Token = "0x60022D8")]
			[Address(RVA = "0x1971608", Offset = "0x1971608", VA = "0x1971608", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170004BF")]
		public virtual bool doNorm
		{
			[Token(Token = "0x60022D9")]
			[Address(RVA = "0x1971610", Offset = "0x1971610", VA = "0x1971610", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022DA")]
			[Address(RVA = "0x1971618", Offset = "0x1971618", VA = "0x1971618", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170004C0")]
		public virtual bool doTan
		{
			[Token(Token = "0x60022DB")]
			[Address(RVA = "0x1971624", Offset = "0x1971624", VA = "0x1971624", Slot = "22")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022DC")]
			[Address(RVA = "0x197162C", Offset = "0x197162C", VA = "0x197162C", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170004C1")]
		public virtual bool doCol
		{
			[Token(Token = "0x60022DD")]
			[Address(RVA = "0x1971638", Offset = "0x1971638", VA = "0x1971638", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022DE")]
			[Address(RVA = "0x1971640", Offset = "0x1971640", VA = "0x1971640", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170004C2")]
		public virtual bool doUV
		{
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0x197164C", Offset = "0x197164C", VA = "0x197164C", Slot = "26")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022E0")]
			[Address(RVA = "0x1971654", Offset = "0x1971654", VA = "0x1971654", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x170004C3")]
		public virtual bool doUV1
		{
			[Token(Token = "0x60022E1")]
			[Address(RVA = "0x1971660", Offset = "0x1971660", VA = "0x1971660", Slot = "28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022E2")]
			[Address(RVA = "0x1971668", Offset = "0x1971668", VA = "0x1971668", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x170004C4")]
		public virtual bool doUV3
		{
			[Token(Token = "0x60022E4")]
			[Address(RVA = "0x1971690", Offset = "0x1971690", VA = "0x1971690", Slot = "31")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022E5")]
			[Address(RVA = "0x1971698", Offset = "0x1971698", VA = "0x1971698", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170004C5")]
		public virtual bool doUV4
		{
			[Token(Token = "0x60022E6")]
			[Address(RVA = "0x19716A4", Offset = "0x19716A4", VA = "0x19716A4", Slot = "33")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022E7")]
			[Address(RVA = "0x19716AC", Offset = "0x19716AC", VA = "0x19716AC", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170004C6")]
		public virtual bool doBlendShapes
		{
			[Token(Token = "0x60022E8")]
			[Address(RVA = "0x19716B8", Offset = "0x19716B8", VA = "0x19716B8", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022E9")]
			[Address(RVA = "0x19716C0", Offset = "0x19716C0", VA = "0x19716C0", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170004C7")]
		public virtual bool recenterVertsToBoundsCenter
		{
			[Token(Token = "0x60022EA")]
			[Address(RVA = "0x19716CC", Offset = "0x19716CC", VA = "0x19716CC", Slot = "37")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022EB")]
			[Address(RVA = "0x19716D4", Offset = "0x19716D4", VA = "0x19716D4", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x170004C8")]
		public bool optimizeAfterBake
		{
			[Token(Token = "0x60022EC")]
			[Address(RVA = "0x19716E0", Offset = "0x19716E0", VA = "0x19716E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022ED")]
			[Address(RVA = "0x19716E8", Offset = "0x19716E8", VA = "0x19716E8")]
			set
			{
			}
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x197166C", Offset = "0x197166C", VA = "0x197166C", Slot = "30")]
		public virtual bool doUV2()
		{
			return default(bool);
		}

		[Token(Token = "0x60022EE")]
		public abstract int GetLightmapIndex();

		[Token(Token = "0x60022EF")]
		public abstract void ClearBuffers();

		[Token(Token = "0x60022F0")]
		public abstract void ClearMesh();

		[Token(Token = "0x60022F1")]
		public abstract void DestroyMesh();

		[Token(Token = "0x60022F2")]
		public abstract void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods);

		[Token(Token = "0x60022F3")]
		public abstract List<GameObject> GetObjectsInCombined();

		[Token(Token = "0x60022F4")]
		public abstract int GetNumObjectsInCombined();

		[Token(Token = "0x60022F5")]
		public abstract int GetNumVerticesFor(GameObject go);

		[Token(Token = "0x60022F6")]
		public abstract int GetNumVerticesFor(int instanceID);

		[Token(Token = "0x60022F7")]
		public abstract Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap();

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x19716F4", Offset = "0x19716F4", VA = "0x19716F4", Slot = "49")]
		public virtual void Apply()
		{
		}

		[Token(Token = "0x60022F9")]
		public abstract void Apply(GenerateUV2Delegate uv2GenerationMethod);

		[Token(Token = "0x60022FA")]
		public abstract void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapeFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod);

		[Token(Token = "0x60022FB")]
		public abstract void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false);

		[Token(Token = "0x60022FC")]
		public abstract bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true);

		[Token(Token = "0x60022FD")]
		public abstract bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource);

		[Token(Token = "0x60022FE")]
		public abstract bool CombinedMeshContains(GameObject go);

		[Token(Token = "0x60022FF")]
		public abstract void UpdateSkinnedMeshApproximateBounds();

		[Token(Token = "0x6002300")]
		public abstract void UpdateSkinnedMeshApproximateBoundsFromBones();

		[Token(Token = "0x6002301")]
		public abstract void CheckIntegrity();

		[Token(Token = "0x6002302")]
		public abstract void UpdateSkinnedMeshApproximateBoundsFromBounds();

		[Token(Token = "0x6002303")]
		[Address(RVA = "0x19675E0", Offset = "0x19675E0", VA = "0x19675E0")]
		public static void UpdateSkinnedMeshApproximateBoundsFromBonesStatic(Transform[] bs, SkinnedMeshRenderer smr)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x1967BD0", Offset = "0x1967BD0", VA = "0x1967BD0")]
		public static void UpdateSkinnedMeshApproximateBoundsFromBoundsStatic(List<GameObject> objectsInCombined, SkinnedMeshRenderer smr)
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x1971708", Offset = "0x1971708", VA = "0x1971708", Slot = "60")]
		protected virtual bool _CreateTemporaryTextrueBakeResult(GameObject[] gos, List<Material> matsOnTargetRenderer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002306")]
		public abstract List<Material> GetMaterialsOnTargetRenderer();

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x19717D8", Offset = "0x19717D8", VA = "0x19717D8")]
		protected MB3_MeshCombiner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000635")]
	public class MB3_MeshCombinerSingle : MB3_MeshCombiner
	{
		[Serializable]
		[Token(Token = "0x2000636")]
		public class SerializableIntArray
		{
			[Token(Token = "0x4002875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] data;

			[Token(Token = "0x6002350")]
			[Address(RVA = "0x1930364", Offset = "0x1930364", VA = "0x1930364")]
			public SerializableIntArray()
			{
			}

			[Token(Token = "0x6002351")]
			[Address(RVA = "0x193036C", Offset = "0x193036C", VA = "0x193036C")]
			public SerializableIntArray(int len)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000637")]
		public class MB_DynamicGameObject : IComparable<MB_DynamicGameObject>
		{
			[Token(Token = "0x4002876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int instanceID;

			[Token(Token = "0x4002877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4002878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int vertIdx;

			[Token(Token = "0x4002879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int blendShapeIdx;

			[Token(Token = "0x400287A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int numVerts;

			[Token(Token = "0x400287B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int numBlendShapes;

			[Token(Token = "0x400287C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] indexesOfBonesUsed;

			[Token(Token = "0x400287D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int lightmapIndex;

			[Token(Token = "0x400287E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector4 lightmapTilingOffset;

			[Token(Token = "0x400287F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 meshSize;

			[Token(Token = "0x4002880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool show;

			[Token(Token = "0x4002881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool invertTriangles;

			[Token(Token = "0x4002882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int[] submeshTriIdxs;

			[Token(Token = "0x4002883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int[] submeshNumTris;

			[Token(Token = "0x4002884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int[] targetSubmeshIdxs;

			[Token(Token = "0x4002885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Rect[] uvRects;

			[Token(Token = "0x4002886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Rect[] encapsulatingRect;

			[Token(Token = "0x4002887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Rect[] sourceMaterialTiling;

			[Token(Token = "0x4002888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Rect[] obUVRects;

			[Token(Token = "0x4002889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public bool _beingDeleted;

			[Token(Token = "0x400288A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public int _triangleIdxAdjustment;

			[NonSerialized]
			[Token(Token = "0x400288B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public SerializableIntArray[] _tmpSubmeshTris;

			[NonSerialized]
			[Token(Token = "0x400288C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Transform[] _tmpCachedBones;

			[NonSerialized]
			[Token(Token = "0x400288D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Matrix4x4[] _tmpCachedBindposes;

			[NonSerialized]
			[Token(Token = "0x400288E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public BoneWeight[] _tmpCachedBoneWeights;

			[NonSerialized]
			[Token(Token = "0x400288F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public int[] _tmpIndexesOfSourceBonesUsed;

			[Token(Token = "0x6002352")]
			[Address(RVA = "0x192D9D0", Offset = "0x192D9D0", VA = "0x192D9D0", Slot = "4")]
			public int CompareTo(MB_DynamicGameObject b)
			{
				return default(int);
			}

			[Token(Token = "0x6002353")]
			[Address(RVA = "0x192D9F0", Offset = "0x192D9F0", VA = "0x192D9F0")]
			public MB_DynamicGameObject()
			{
			}
		}

		[Token(Token = "0x2000638")]
		public class MeshChannels
		{
			[Token(Token = "0x4002890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x4002891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x4002892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4002893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2[] uv0raw;

			[Token(Token = "0x4002894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv0modified;

			[Token(Token = "0x4002895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2[] uv2;

			[Token(Token = "0x4002896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2[] uv3;

			[Token(Token = "0x4002897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector2[] uv4;

			[Token(Token = "0x4002898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Color[] colors;

			[Token(Token = "0x4002899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public BoneWeight[] boneWeights;

			[Token(Token = "0x400289A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Matrix4x4[] bindPoses;

			[Token(Token = "0x400289B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int[] triangles;

			[Token(Token = "0x400289C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public MBBlendShape[] blendShapes;

			[Token(Token = "0x6002354")]
			[Address(RVA = "0x192DAA0", Offset = "0x192DAA0", VA = "0x192DAA0")]
			public MeshChannels()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000639")]
		public class MBBlendShapeFrame
		{
			[Token(Token = "0x400289D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float frameWeight;

			[Token(Token = "0x400289E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] vertices;

			[Token(Token = "0x400289F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3[] normals;

			[Token(Token = "0x40028A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3[] tangents;

			[Token(Token = "0x6002355")]
			[Address(RVA = "0x192D9C8", Offset = "0x192D9C8", VA = "0x192D9C8")]
			public MBBlendShapeFrame()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200063A")]
		public class MBBlendShape
		{
			[Token(Token = "0x40028A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int gameObjectID;

			[Token(Token = "0x40028A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x40028A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int indexInSource;

			[Token(Token = "0x40028A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MBBlendShapeFrame[] frames;

			[Token(Token = "0x6002356")]
			[Address(RVA = "0x192D9C0", Offset = "0x192D9C0", VA = "0x192D9C0")]
			public MBBlendShape()
			{
			}
		}

		[Token(Token = "0x200063B")]
		public class MeshChannelsCache
		{
			[Token(Token = "0x40028A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB3_MeshCombinerSingle mc;

			[Token(Token = "0x40028A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected Dictionary<int, MeshChannels> meshID2MeshChannels;

			[Token(Token = "0x40028A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector2 _HALF_UV;

			[Token(Token = "0x6002357")]
			[Address(RVA = "0x192DAA8", Offset = "0x192DAA8", VA = "0x192DAA8")]
			public MeshChannelsCache(MB3_MeshCombinerSingle mcs)
			{
			}

			[Token(Token = "0x6002358")]
			[Address(RVA = "0x192DB3C", Offset = "0x192DB3C", VA = "0x192DB3C")]
			internal Vector3[] GetVertices(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002359")]
			[Address(RVA = "0x192DC58", Offset = "0x192DC58", VA = "0x192DC58")]
			internal Vector3[] GetNormals(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600235A")]
			[Address(RVA = "0x192E008", Offset = "0x192E008", VA = "0x192E008")]
			internal Vector4[] GetTangents(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600235B")]
			[Address(RVA = "0x192BDE8", Offset = "0x192BDE8", VA = "0x192BDE8")]
			internal Vector2[] GetUv0Raw(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600235C")]
			[Address(RVA = "0x192E690", Offset = "0x192E690", VA = "0x192E690")]
			internal Vector2[] GetUv0Modified(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600235D")]
			[Address(RVA = "0x192E794", Offset = "0x192E794", VA = "0x192E794")]
			internal Vector2[] GetUv2(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600235E")]
			[Address(RVA = "0x192EBCC", Offset = "0x192EBCC", VA = "0x192EBCC")]
			internal Vector2[] GetUv3(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600235F")]
			[Address(RVA = "0x192ED04", Offset = "0x192ED04", VA = "0x192ED04")]
			internal Vector2[] GetUv4(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002360")]
			[Address(RVA = "0x192EE3C", Offset = "0x192EE3C", VA = "0x192EE3C")]
			internal Color[] GetColors(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002361")]
			[Address(RVA = "0x192F1FC", Offset = "0x192F1FC", VA = "0x192F1FC")]
			internal Matrix4x4[] GetBindposes(Renderer r)
			{
				return null;
			}

			[Token(Token = "0x6002362")]
			[Address(RVA = "0x192F4EC", Offset = "0x192F4EC", VA = "0x192F4EC")]
			internal BoneWeight[] GetBoneWeights(Renderer r, int numVertsInMeshBeingAdded)
			{
				return null;
			}

			[Token(Token = "0x6002363")]
			[Address(RVA = "0x192F860", Offset = "0x192F860", VA = "0x192F860")]
			internal int[] GetTriangles(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002364")]
			[Address(RVA = "0x192F97C", Offset = "0x192F97C", VA = "0x192F97C")]
			internal MBBlendShape[] GetBlendShapes(Mesh m, int gameObjectID)
			{
				return null;
			}

			[Token(Token = "0x6002365")]
			[Address(RVA = "0x192EF58", Offset = "0x192EF58", VA = "0x192EF58")]
			private Color[] _getMeshColors(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002366")]
			[Address(RVA = "0x192DD74", Offset = "0x192DD74", VA = "0x192DD74")]
			private Vector3[] _getMeshNormals(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002367")]
			[Address(RVA = "0x192E124", Offset = "0x192E124", VA = "0x192E124")]
			private Vector4[] _getMeshTangents(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002368")]
			[Address(RVA = "0x192E400", Offset = "0x192E400", VA = "0x192E400")]
			private Vector2[] _getMeshUVs(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002369")]
			[Address(RVA = "0x192E8B0", Offset = "0x192E8B0", VA = "0x192E8B0")]
			private Vector2[] _getMeshUV2s(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600236A")]
			[Address(RVA = "0x192F334", Offset = "0x192F334", VA = "0x192F334")]
			public static Matrix4x4[] _getBindPoses(Renderer r)
			{
				return null;
			}

			[Token(Token = "0x600236B")]
			[Address(RVA = "0x192F62C", Offset = "0x192F62C", VA = "0x192F62C")]
			public static BoneWeight[] _getBoneWeights(Renderer r, int numVertsInMeshBeingAdded)
			{
				return null;
			}

			[Token(Token = "0x600236C")]
			[Address(RVA = "0x192FE84", Offset = "0x192FE84", VA = "0x192FE84")]
			private void _generateTangents(int[] triangles, Vector3[] verts, Vector2[] uvs, Vector3[] normals, Vector4[] outTangents)
			{
			}
		}

		[Token(Token = "0x200063C")]
		public struct BoneAndBindpose
		{
			[Token(Token = "0x40028A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform bone;

			[Token(Token = "0x40028A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Matrix4x4 bindPose;

			[Token(Token = "0x600236D")]
			[Address(RVA = "0x192D7C0", Offset = "0x192D7C0", VA = "0x192D7C0")]
			public BoneAndBindpose(Transform t, Matrix4x4 bp)
			{
			}

			[Token(Token = "0x600236E")]
			[Address(RVA = "0x192D7E0", Offset = "0x192D7E0", VA = "0x192D7E0", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600236F")]
			[Address(RVA = "0x192D93C", Offset = "0x192D93C", VA = "0x192D93C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8A80", Offset = "0xAA8A80")]
		private sealed class <>c__DisplayClass55_0
		{
			[Token(Token = "0x40028AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject[] _goToAdd;

			[Token(Token = "0x40028AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int i;

			[Token(Token = "0x40028AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<int> <>9__0;

			[Token(Token = "0x6002370")]
			[Address(RVA = "0x192D758", Offset = "0x192D758", VA = "0x192D758")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x6002371")]
			[Address(RVA = "0x192D760", Offset = "0x192D760", VA = "0x192D760")]
			internal bool <_addToCombined>b__0(int o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected List<GameObject> objectsInCombinedMesh;

		[Token(Token = "0x4002861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int lightmapIndex;

		[Token(Token = "0x4002862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<MB_DynamicGameObject> mbDynamicObjectsInCombinedMesh;

		[Token(Token = "0x4002863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<int, MB_DynamicGameObject> _instance2combined_map;

		[Token(Token = "0x4002864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector3[] verts;

		[Token(Token = "0x4002865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3[] normals;

		[Token(Token = "0x4002866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Vector4[] tangents;

		[Token(Token = "0x4002867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Vector2[] uvs;

		[Token(Token = "0x4002868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Vector2[] uv2s;

		[Token(Token = "0x4002869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Vector2[] uv3s;

		[Token(Token = "0x400286A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Vector2[] uv4s;

		[Token(Token = "0x400286B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color[] colors;

		[Token(Token = "0x400286C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Matrix4x4[] bindPoses;

		[Token(Token = "0x400286D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Transform[] bones;

		[Token(Token = "0x400286E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		internal MBBlendShape[] blendShapes;

		[Token(Token = "0x400286F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		internal MBBlendShape[] blendShapesInCombined;

		[Token(Token = "0x4002870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private SerializableIntArray[] submeshTris;

		[Token(Token = "0x4002871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private BoneWeight[] boneWeights;

		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GameObject[] empty;

		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int[] emptyIDs;

		[Token(Token = "0x170004C9")]
		public override MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x6002310")]
			[Address(RVA = "0x1971810", Offset = "0x1971810", VA = "0x1971810", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170004CA")]
		public override MB_RenderType renderType
		{
			[Token(Token = "0x6002311")]
			[Address(RVA = "0x197194C", Offset = "0x197194C", VA = "0x197194C", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x170004CB")]
		public override GameObject resultSceneObject
		{
			[Token(Token = "0x6002312")]
			[Address(RVA = "0x1971A0C", Offset = "0x1971A0C", VA = "0x1971A0C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x1971B1C", Offset = "0x1971B1C", VA = "0x1971B1C")]
		private MB_DynamicGameObject instance2Combined_MapGet(int gameObjectID)
		{
			return null;
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x1971B80", Offset = "0x1971B80", VA = "0x1971B80")]
		private void instance2Combined_MapAdd(int gameObjectID, MB_DynamicGameObject dgo)
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x1971BEC", Offset = "0x1971BEC", VA = "0x1971BEC")]
		private void instance2Combined_MapRemove(int gameObjectID)
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x1971C50", Offset = "0x1971C50", VA = "0x1971C50")]
		private bool instance2Combined_MapTryGetValue(int gameObjectID, out MB_DynamicGameObject dgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x1971CBC", Offset = "0x1971CBC", VA = "0x1971CBC")]
		private int instance2Combined_MapCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x1971D10", Offset = "0x1971D10", VA = "0x1971D10")]
		private void instance2Combined_MapClear()
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x1971D64", Offset = "0x1971D64", VA = "0x1971D64")]
		private bool instance2Combined_MapContainsKey(int gameObjectID)
		{
			return default(bool);
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x1971DC8", Offset = "0x1971DC8", VA = "0x1971DC8", Slot = "45")]
		public override int GetNumObjectsInCombined()
		{
			return default(int);
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x1971E14", Offset = "0x1971E14", VA = "0x1971E14", Slot = "44")]
		public override List<GameObject> GetObjectsInCombined()
		{
			return null;
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x1971EB0", Offset = "0x1971EB0", VA = "0x1971EB0")]
		public Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x1971F5C", Offset = "0x1971F5C", VA = "0x1971F5C")]
		public Transform[] GetBones()
		{
			return null;
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x1971F64", Offset = "0x1971F64", VA = "0x1971F64", Slot = "39")]
		public override int GetLightmapIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x1971FBC", Offset = "0x1971FBC", VA = "0x1971FBC", Slot = "46")]
		public override int GetNumVerticesFor(GameObject go)
		{
			return default(int);
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x1972000", Offset = "0x1972000", VA = "0x1972000", Slot = "47")]
		public override int GetNumVerticesFor(int instanceID)
		{
			return default(int);
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x1972040", Offset = "0x1972040", VA = "0x1972040", Slot = "48")]
		public override Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
		{
			return null;
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x19721CC", Offset = "0x19721CC", VA = "0x19721CC")]
		private void _initialize(int numResultMats)
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x1972944", Offset = "0x1972944", VA = "0x1972944")]
		private bool _collectMaterialTriangles(Mesh m, MB_DynamicGameObject dgo, Material[] sharedMaterials, OrderedDictionary sourceMats2submeshIdx_map)
		{
			return default(bool);
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x1972FB4", Offset = "0x1972FB4", VA = "0x1972FB4")]
		private bool _collectOutOfBoundsUVRects2(Mesh m, MB_DynamicGameObject dgo, Material[] sharedMaterials, OrderedDictionary sourceMats2submeshIdx_map, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisResults, MeshChannelsCache meshChannelCache)
		{
			return default(bool);
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x19732FC", Offset = "0x19732FC", VA = "0x19732FC")]
		private bool _validateTextureBakeResults()
		{
			return default(bool);
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x1973464", Offset = "0x1973464", VA = "0x1973464")]
		private bool _validateMeshFlags()
		{
			return default(bool);
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x1973678", Offset = "0x1973678", VA = "0x1973678")]
		private bool _showHide(GameObject[] goToShow, GameObject[] goToHide)
		{
			return default(bool);
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x197399C", Offset = "0x197399C", VA = "0x197399C")]
		private bool _addToCombined(GameObject[] goToAdd, int[] goToDelete, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x1978FF0", Offset = "0x1978FF0", VA = "0x1978FF0")]
		private void _copyAndAdjustUVsFromMesh(MB_DynamicGameObject dgo, Mesh mesh, int vertsIdx, MeshChannelsCache meshChannelsCache)
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x19795FC", Offset = "0x19795FC", VA = "0x19795FC")]
		private void _copyAndAdjustUV2FromMesh(MB_DynamicGameObject dgo, Mesh mesh, int vertsIdx, MeshChannelsCache meshChannelsCache)
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x197A138", Offset = "0x197A138", VA = "0x197A138", Slot = "56")]
		public override void UpdateSkinnedMeshApproximateBounds()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x197A148", Offset = "0x197A148", VA = "0x197A148", Slot = "57")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBones()
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x197A468", Offset = "0x197A468", VA = "0x197A468", Slot = "59")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBounds()
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x197A794", Offset = "0x197A794", VA = "0x197A794")]
		private int _getNumBones(Renderer r)
		{
			return default(int);
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x197A8DC", Offset = "0x197A8DC", VA = "0x197A8DC")]
		private Transform[] _getBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x197A8E8", Offset = "0x197A8E8", VA = "0x197A8E8", Slot = "50")]
		public override void Apply(GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x197A9F0", Offset = "0x197A9F0", VA = "0x197A9F0", Slot = "62")]
		public virtual void ApplyShowHide()
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x197B3F4", Offset = "0x197B3F4", VA = "0x197B3F4", Slot = "51")]
		public override void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x197B1B8", Offset = "0x197B1B8", VA = "0x197B1B8")]
		private int _numNonZeroLengthSubmeshTris(SerializableIntArray[] subTris)
		{
			return default(int);
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x197B22C", Offset = "0x197B22C", VA = "0x197B22C")]
		private void _updateMaterialsOnTargetRenderer(SerializableIntArray[] subTris, int numNonZeroLengthSubmeshTris)
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x197ADD8", Offset = "0x197ADD8", VA = "0x197ADD8")]
		public SerializableIntArray[] GetSubmeshTrisWithShowHideApplied()
		{
			return null;
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x197CB3C", Offset = "0x197CB3C", VA = "0x197CB3C", Slot = "52")]
		public override void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false)
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x197CB88", Offset = "0x197CB88", VA = "0x197CB88")]
		private void _updateGameObjects(GameObject[] gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo)
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x197CE94", Offset = "0x197CE94", VA = "0x197CE94")]
		private void _updateGameObject(GameObject go, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x196B39C", Offset = "0x196B39C", VA = "0x196B39C")]
		public bool ShowHideGameObjects(GameObject[] toShow, GameObject[] toHide)
		{
			return default(bool);
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x197D808", Offset = "0x197D808", VA = "0x197D808", Slot = "53")]
		public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x197DA1C", Offset = "0x197DA1C", VA = "0x197DA1C", Slot = "54")]
		public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x197DFC8", Offset = "0x197DFC8", VA = "0x197DFC8", Slot = "55")]
		public override bool CombinedMeshContains(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x197E02C", Offset = "0x197E02C", VA = "0x197E02C", Slot = "40")]
		public override void ClearBuffers()
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x197E3AC", Offset = "0x197E3AC", VA = "0x197E3AC", Slot = "41")]
		public override void ClearMesh()
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x197E470", Offset = "0x197E470", VA = "0x197E470", Slot = "42")]
		public override void DestroyMesh()
		{
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x197E604", Offset = "0x197E604", VA = "0x197E604", Slot = "43")]
		public override void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x1977FAC", Offset = "0x1977FAC", VA = "0x1977FAC")]
		public bool ValidateTargRendererAndMeshAndResultSceneObj()
		{
			return default(bool);
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x197E818", Offset = "0x197E818", VA = "0x197E818")]
		internal static Renderer BuildSceneHierarchPreBake(MB3_MeshCombinerSingle mom, GameObject root, Mesh m, bool createNewChild = false, [Optional] GameObject[] objsToBeAdded)
		{
			return null;
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x197F474", Offset = "0x197F474", VA = "0x197F474")]
		public static void BuildPrefabHierarchy(MB3_MeshCombinerSingle mom, GameObject instantiatedPrefabRoot, Mesh m, bool createNewChild = false, [Optional] GameObject[] objsToBeAdded)
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x197F120", Offset = "0x197F120", VA = "0x197F120")]
		private static void _ConfigureSceneHierarch(MB3_MeshCombinerSingle mom, GameObject root, MeshRenderer mr, MeshFilter mf, SkinnedMeshRenderer smr, Mesh m, [Optional] GameObject[] objsToBeAdded)
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x196B270", Offset = "0x196B270", VA = "0x196B270")]
		public void BuildSceneMeshObject([Optional] GameObject[] gos, bool createNewChild = false)
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x1978A34", Offset = "0x1978A34", VA = "0x1978A34")]
		private bool IsMirrored(Matrix4x4 tm)
		{
			return default(bool);
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x197FA7C", Offset = "0x197FA7C", VA = "0x197FA7C", Slot = "58")]
		public override void CheckIntegrity()
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x197CABC", Offset = "0x197CABC", VA = "0x197CABC")]
		private void _ZeroArray(Vector3[] arr, int idx, int length)
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x197837C", Offset = "0x197837C", VA = "0x197837C")]
		private List<MB_DynamicGameObject>[] _buildBoneIdx2dgoMap()
		{
			return null;
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x1978560", Offset = "0x1978560", VA = "0x1978560")]
		private void _CollectBonesToAddForDGO(MB_DynamicGameObject dgo, Dictionary<Transform, int> bone2idx, HashSet<int> boneIdxsToDelete, HashSet<BoneAndBindpose> bonesToAdd, Renderer r, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x1978B18", Offset = "0x1978B18", VA = "0x1978B18")]
		private void _CopyBonesWeAreKeepingToNewBonesArrayAndAdjustBWIndexes(HashSet<int> boneIdxsToDeleteHS, HashSet<BoneAndBindpose> bonesToAdd, Transform[] nbones, Matrix4x4[] nbindPoses, BoneWeight[] nboneWeights, int totalDeleteVerts)
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x1979804", Offset = "0x1979804", VA = "0x1979804")]
		private void _AddBonesToNewBonesArrayAndAdjustBWIndexes(MB_DynamicGameObject dgo, Renderer r, int vertsIdx, Transform[] nbones, BoneWeight[] nboneWeights, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x1979CDC", Offset = "0x1979CDC", VA = "0x1979CDC")]
		private void _copyUV2unchangedToSeparateRects()
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x197FF90", Offset = "0x197FF90", VA = "0x197FF90", Slot = "61")]
		public override List<Material> GetMaterialsOnTargetRenderer()
		{
			return null;
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x196B670", Offset = "0x196B670", VA = "0x196B670")]
		public MB3_MeshCombinerSingle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200063E")]
	public class MB3_MultiMeshCombiner : MB3_MeshCombiner
	{
		[Serializable]
		[Token(Token = "0x200063F")]
		public class CombinedMesh
		{
			[Token(Token = "0x40028B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB3_MeshCombinerSingle combinedMesh;

			[Token(Token = "0x40028B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int extraSpace;

			[Token(Token = "0x40028B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numVertsInListToDelete;

			[Token(Token = "0x40028B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numVertsInListToAdd;

			[Token(Token = "0x40028B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<GameObject> gosToAdd;

			[Token(Token = "0x40028B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<int> gosToDelete;

			[Token(Token = "0x40028B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<GameObject> gosToUpdate;

			[Token(Token = "0x40028B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool isDirty;

			[Token(Token = "0x6002394")]
			[Address(RVA = "0x19303D8", Offset = "0x19303D8", VA = "0x19303D8")]
			public CombinedMesh(int maxNumVertsInMesh, GameObject resultSceneObject, MB2_LogLevel ll)
			{
			}

			[Token(Token = "0x6002395")]
			[Address(RVA = "0x1930538", Offset = "0x1930538", VA = "0x1930538")]
			public bool isEmpty()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40028AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject[] empty;

		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[] emptyIDs;

		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<int, CombinedMesh> obj2MeshCombinerMap;

		[Token(Token = "0x40028B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public List<CombinedMesh> meshCombiners;

		[Token(Token = "0x40028B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int _maxVertsInMesh;

		[Token(Token = "0x170004CC")]
		public override MB2_LogLevel LOG_LEVEL
		{
			[Token(Token = "0x6002372")]
			[Address(RVA = "0x1AA0630", Offset = "0x1AA0630", VA = "0x1AA0630", Slot = "4")]
			get
			{
				return default(MB2_LogLevel);
			}
			[Token(Token = "0x6002373")]
			[Address(RVA = "0x1AA0638", Offset = "0x1AA0638", VA = "0x1AA0638", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170004CD")]
		public override MB2_ValidationLevel validationLevel
		{
			[Token(Token = "0x6002375")]
			[Address(RVA = "0x1AA07A8", Offset = "0x1AA07A8", VA = "0x1AA07A8", Slot = "6")]
			get
			{
				return default(MB2_ValidationLevel);
			}
			[Token(Token = "0x6002374")]
			[Address(RVA = "0x1AA06F0", Offset = "0x1AA06F0", VA = "0x1AA06F0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170004CE")]
		public int maxVertsInMesh
		{
			[Token(Token = "0x6002376")]
			[Address(RVA = "0x1AA07B0", Offset = "0x1AA07B0", VA = "0x1AA07B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002377")]
			[Address(RVA = "0x1AA07B8", Offset = "0x1AA07B8", VA = "0x1AA07B8")]
			set
			{
			}
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x1AA09FC", Offset = "0x1AA09FC", VA = "0x1AA09FC", Slot = "45")]
		public override int GetNumObjectsInCombined()
		{
			return default(int);
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x1AA0A50", Offset = "0x1AA0A50", VA = "0x1AA0A50", Slot = "46")]
		public override int GetNumVerticesFor(GameObject go)
		{
			return default(int);
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x1AA0B04", Offset = "0x1AA0B04", VA = "0x1AA0B04", Slot = "47")]
		public override int GetNumVerticesFor(int gameObjectID)
		{
			return default(int);
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x1AA0BA4", Offset = "0x1AA0BA4", VA = "0x1AA0BA4", Slot = "44")]
		public override List<GameObject> GetObjectsInCombined()
		{
			return null;
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x1AA0CC4", Offset = "0x1AA0CC4", VA = "0x1AA0CC4", Slot = "39")]
		public override int GetLightmapIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x1AA0D54", Offset = "0x1AA0D54", VA = "0x1AA0D54", Slot = "55")]
		public override bool CombinedMeshContains(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x1AA0DCC", Offset = "0x1AA0DCC", VA = "0x1AA0DCC")]
		private bool _validateTextureBakeResults()
		{
			return default(bool);
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x1AA0F34", Offset = "0x1AA0F34", VA = "0x1AA0F34", Slot = "50")]
		public override void Apply(GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x1AA1050", Offset = "0x1AA1050", VA = "0x1AA1050", Slot = "51")]
		public override void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x1AA121C", Offset = "0x1AA121C", VA = "0x1AA121C", Slot = "56")]
		public override void UpdateSkinnedMeshApproximateBounds()
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x1AA12CC", Offset = "0x1AA12CC", VA = "0x1AA12CC", Slot = "57")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBones()
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x1AA137C", Offset = "0x1AA137C", VA = "0x1AA137C", Slot = "59")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBounds()
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x1AA142C", Offset = "0x1AA142C", VA = "0x1AA142C", Slot = "52")]
		public override void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false)
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x1AA18DC", Offset = "0x1AA18DC", VA = "0x1AA18DC", Slot = "53")]
		public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x1AA1AF0", Offset = "0x1AA1AF0", VA = "0x1AA1AF0", Slot = "54")]
		public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x1AA200C", Offset = "0x1AA200C", VA = "0x1AA200C")]
		private bool _validate(GameObject[] gos, int[] deleteGOinstanceIDs)
		{
			return default(bool);
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0x1AA25D0", Offset = "0x1AA25D0", VA = "0x1AA25D0")]
		private void _distributeAmongBakers(GameObject[] gos, int[] deleteGOinstanceIDs)
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x1AA2F4C", Offset = "0x1AA2F4C", VA = "0x1AA2F4C")]
		private bool _bakeStep1(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x1AA3F10", Offset = "0x1AA3F10", VA = "0x1AA3F10", Slot = "48")]
		public override Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
		{
			return null;
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x1AA417C", Offset = "0x1AA417C", VA = "0x1AA417C", Slot = "40")]
		public override void ClearBuffers()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x1AA4250", Offset = "0x1AA4250", VA = "0x1AA4250", Slot = "41")]
		public override void ClearMesh()
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x1AA4260", Offset = "0x1AA4260", VA = "0x1AA4260", Slot = "42")]
		public override void DestroyMesh()
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x1AA4434", Offset = "0x1AA4434", VA = "0x1AA4434", Slot = "43")]
		public override void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x1AA3CC8", Offset = "0x1AA3CC8", VA = "0x1AA3CC8")]
		private void _setMBValues(MB3_MeshCombinerSingle targ)
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x1AA469C", Offset = "0x1AA469C", VA = "0x1AA469C", Slot = "61")]
		public override List<Material> GetMaterialsOnTargetRenderer()
		{
			return null;
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x1AA47FC", Offset = "0x1AA47FC", VA = "0x1AA47FC", Slot = "58")]
		public override void CheckIntegrity()
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x1AA0570", Offset = "0x1AA0570", VA = "0x1AA0570")]
		public MB3_MultiMeshCombiner()
		{
		}
	}
	[Token(Token = "0x2000640")]
	public class PriorityQueue<TPriority, TValue> : ICollection<KeyValuePair<TPriority, TValue>>, IEnumerable<KeyValuePair<TPriority, TValue>>, IEnumerable
	{
		[Token(Token = "0x40028BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<KeyValuePair<TPriority, TValue>> _baseHeap;

		[Token(Token = "0x40028BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IComparer<TPriority> _comparer;

		[Token(Token = "0x170004CF")]
		public bool IsEmpty
		{
			[Token(Token = "0x60023A3")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D0")]
		public int Count
		{
			[Token(Token = "0x60023AD")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004D1")]
		public bool IsReadOnly
		{
			[Token(Token = "0x60023AF")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002396")]
		public PriorityQueue()
		{
		}

		[Token(Token = "0x6002397")]
		public PriorityQueue(int capacity)
		{
		}

		[Token(Token = "0x6002398")]
		public PriorityQueue(int capacity, IComparer<TPriority> comparer)
		{
		}

		[Token(Token = "0x6002399")]
		public PriorityQueue(IComparer<TPriority> comparer)
		{
		}

		[Token(Token = "0x600239A")]
		public PriorityQueue(IEnumerable<KeyValuePair<TPriority, TValue>> data)
		{
		}

		[Token(Token = "0x600239B")]
		public PriorityQueue(IEnumerable<KeyValuePair<TPriority, TValue>> data, IComparer<TPriority> comparer)
		{
		}

		[Token(Token = "0x600239C")]
		public static PriorityQueue<TPriority, TValue> MergeQueues(PriorityQueue<TPriority, TValue> pq1, PriorityQueue<TPriority, TValue> pq2)
		{
			return null;
		}

		[Token(Token = "0x600239D")]
		public static PriorityQueue<TPriority, TValue> MergeQueues(PriorityQueue<TPriority, TValue> pq1, PriorityQueue<TPriority, TValue> pq2, IComparer<TPriority> comparer)
		{
			return null;
		}

		[Token(Token = "0x600239E")]
		public void Enqueue(TPriority priority, TValue value)
		{
		}

		[Token(Token = "0x600239F")]
		public KeyValuePair<TPriority, TValue> Dequeue()
		{
			return default(KeyValuePair<TPriority, TValue>);
		}

		[Token(Token = "0x60023A0")]
		public TValue DequeueValue()
		{
			return (TValue)null;
		}

		[Token(Token = "0x60023A1")]
		public KeyValuePair<TPriority, TValue> Peek()
		{
			return default(KeyValuePair<TPriority, TValue>);
		}

		[Token(Token = "0x60023A2")]
		public TValue PeekValue()
		{
			return (TValue)null;
		}

		[Token(Token = "0x60023A4")]
		private void ExchangeElements(int pos1, int pos2)
		{
		}

		[Token(Token = "0x60023A5")]
		private void Insert(TPriority priority, TValue value)
		{
		}

		[Token(Token = "0x60023A6")]
		private int HeapifyFromEndToBeginning(int pos)
		{
			return default(int);
		}

		[Token(Token = "0x60023A7")]
		private void DeleteRoot()
		{
		}

		[Token(Token = "0x60023A8")]
		private void HeapifyFromBeginningToEnd(int pos)
		{
		}

		[Token(Token = "0x60023A9")]
		public void Add(KeyValuePair<TPriority, TValue> item)
		{
		}

		[Token(Token = "0x60023AA")]
		public void Clear()
		{
		}

		[Token(Token = "0x60023AB")]
		public bool Contains(KeyValuePair<TPriority, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x60023AC")]
		public bool TryFindValue(TPriority item, out TValue foundVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x60023AE")]
		public void CopyTo(KeyValuePair<TPriority, TValue>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60023B0")]
		public bool Remove(KeyValuePair<TPriority, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x60023B1")]
		public IEnumerator<KeyValuePair<TPriority, TValue>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60023B2")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000641")]
	public struct DVector2
	{
		[Token(Token = "0x40028BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static double epsilon;

		[Token(Token = "0x40028BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x40028BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x108A260", Offset = "0x108A260", VA = "0x108A260")]
		public static DVector2 Subtract(DVector2 a, DVector2 b)
		{
			return default(DVector2);
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x1089D64", Offset = "0x1089D64", VA = "0x1089D64")]
		public DVector2(double xx, double yy)
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x108A26C", Offset = "0x108A26C", VA = "0x108A26C")]
		public DVector2(DVector2 r)
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x108A274", Offset = "0x108A274", VA = "0x108A274")]
		public Vector2 GetVector2()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x108A284", Offset = "0x108A284", VA = "0x108A284")]
		public bool IsContainedIn(DRect r)
		{
			return default(bool);
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x108A2C4", Offset = "0x108A2C4", VA = "0x108A2C4")]
		public bool IsContainedInWithMargin(DRect r)
		{
			return default(bool);
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x108A408", Offset = "0x108A408", VA = "0x108A408", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x108A4B4", Offset = "0x108A4B4", VA = "0x108A4B4")]
		public string ToString(string formatS)
		{
			return null;
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x108A53C", Offset = "0x108A53C", VA = "0x108A53C")]
		public static double Distance(DVector2 a, DVector2 b)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000642")]
	public struct DRect
	{
		[Token(Token = "0x40028BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x40028C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x40028C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double width;

		[Token(Token = "0x40028C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double height;

		[Token(Token = "0x170004D2")]
		public DVector2 minD
		{
			[Token(Token = "0x60023C3")]
			[Address(RVA = "0x1089D5C", Offset = "0x1089D5C", VA = "0x1089D5C")]
			get
			{
				return default(DVector2);
			}
		}

		[Token(Token = "0x170004D3")]
		public DVector2 maxD
		{
			[Token(Token = "0x60023C4")]
			[Address(RVA = "0x1089D6C", Offset = "0x1089D6C", VA = "0x1089D6C")]
			get
			{
				return default(DVector2);
			}
		}

		[Token(Token = "0x170004D4")]
		public Vector2 min
		{
			[Token(Token = "0x60023C5")]
			[Address(RVA = "0x1089D7C", Offset = "0x1089D7C", VA = "0x1089D7C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170004D5")]
		public Vector2 max
		{
			[Token(Token = "0x60023C6")]
			[Address(RVA = "0x1089D8C", Offset = "0x1089D8C", VA = "0x1089D8C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170004D6")]
		public Vector2 size
		{
			[Token(Token = "0x60023C7")]
			[Address(RVA = "0x1089DA0", Offset = "0x1089DA0", VA = "0x1089DA0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170004D7")]
		public DVector2 center
		{
			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x1089DB0", Offset = "0x1089DB0", VA = "0x1089DB0")]
			get
			{
				return default(DVector2);
			}
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x1089C48", Offset = "0x1089C48", VA = "0x1089C48")]
		public DRect(Rect r)
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x1089CC4", Offset = "0x1089CC4", VA = "0x1089CC4")]
		public DRect(Vector2 o, Vector2 s)
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x1089CE0", Offset = "0x1089CE0", VA = "0x1089CE0")]
		public DRect(DRect r)
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x1089CEC", Offset = "0x1089CEC", VA = "0x1089CEC")]
		public DRect(float xx, float yy, float w, float h)
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x1089D08", Offset = "0x1089D08", VA = "0x1089D08")]
		public DRect(double xx, double yy, double w, double h)
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x1089D14", Offset = "0x1089D14", VA = "0x1089D14")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x1089DC8", Offset = "0x1089DC8", VA = "0x1089DC8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x1089E90", Offset = "0x1089E90", VA = "0x1089E90")]
		public static bool operator ==(DRect a, DRect b)
		{
			return default(bool);
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x1089F28", Offset = "0x1089F28", VA = "0x1089F28")]
		public static bool operator !=(DRect a, DRect b)
		{
			return default(bool);
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x1089FC4", Offset = "0x1089FC4", VA = "0x1089FC4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x108A160", Offset = "0x108A160", VA = "0x108A160")]
		public void Expand(float amt)
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x108A188", Offset = "0x108A188", VA = "0x108A188")]
		public bool Encloses(DRect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x108A1F8", Offset = "0x108A1F8", VA = "0x108A1F8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000643")]
	public class MB3_UVTransformUtility
	{
		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x1AB3B94", Offset = "0x1AB3B94", VA = "0x1AB3B94")]
		public static void Test()
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x1AB3EC4", Offset = "0x1AB3EC4", VA = "0x1AB3EC4")]
		public static float TransformX(DRect r, double x)
		{
			return default(float);
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x1AAADB8", Offset = "0x1AAADB8", VA = "0x1AAADB8")]
		public static DRect CombineTransforms(ref DRect r1, ref DRect r2)
		{
			return default(DRect);
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x1AB3ED4", Offset = "0x1AB3ED4", VA = "0x1AB3ED4")]
		public static Rect CombineTransforms(ref Rect r1, ref Rect r2)
		{
			return default(Rect);
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x1AAAD90", Offset = "0x1AAAD90", VA = "0x1AAAD90")]
		public static DRect InverseTransform(ref DRect t)
		{
			return default(DRect);
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x1AAAE14", Offset = "0x1AAAE14", VA = "0x1AAAE14")]
		public static DRect GetShiftTransformToFitBinA(ref DRect A, ref DRect B)
		{
			return default(DRect);
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x1AACAE4", Offset = "0x1AACAE4", VA = "0x1AACAE4")]
		public static DRect GetEncapsulatingRectShifted(ref DRect uvRect1, ref DRect willBeIn)
		{
			return default(DRect);
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x1AB3FEC", Offset = "0x1AB3FEC", VA = "0x1AB3FEC")]
		public static DRect GetEncapsulatingRect(ref DRect uvRect1, ref DRect uvRect2)
		{
			return default(DRect);
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x1AB4088", Offset = "0x1AB4088", VA = "0x1AB4088")]
		public static bool RectContainsShifted(ref DRect bucket, ref DRect tryFit)
		{
			return default(bool);
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x1AB41DC", Offset = "0x1AB41DC", VA = "0x1AB41DC")]
		public static bool RectContainsShifted(ref Rect bucket, ref Rect tryFit)
		{
			return default(bool);
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x1AB4494", Offset = "0x1AB4494", VA = "0x1AB4494")]
		public static bool LineSegmentContainsShifted(float bucketOffset, float bucketLength, float tryFitOffset, float tryFitLength)
		{
			return default(bool);
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x1AB4588", Offset = "0x1AB4588", VA = "0x1AB4588")]
		public static bool RectContains(ref DRect bigRect, ref DRect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x1AB4304", Offset = "0x1AB4304", VA = "0x1AB4304")]
		public static bool RectContains(ref Rect bigRect, ref Rect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x1AB3EA4", Offset = "0x1AB3EA4", VA = "0x1AB3EA4")]
		public static Vector2 TransformPoint(ref DRect r, Vector2 p)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x1AB4628", Offset = "0x1AB4628", VA = "0x1AB4628")]
		public static DVector2 TransformPoint(ref DRect r, DVector2 p)
		{
			return default(DVector2);
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x1AB466C", Offset = "0x1AB466C", VA = "0x1AB466C")]
		public MB3_UVTransformUtility()
		{
		}
	}
	[Token(Token = "0x2000644")]
	public static class MB_TGAWriter
	{
		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x1AB6C9C", Offset = "0x1AB6C9C", VA = "0x1AB6C9C")]
		public static void Write(Color[] pixels, int width, int height, string path)
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x1AB6D04", Offset = "0x1AB6D04", VA = "0x1AB6D04")]
		public static void Write(Color[] pixels, int width, int height, Stream output)
		{
		}
	}
	[Token(Token = "0x2000645")]
	public class MB_Utility
	{
		[Token(Token = "0x2000646")]
		public struct MeshAnalysisResult
		{
			[Token(Token = "0x40028C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rect uvRect;

			[Token(Token = "0x40028C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasOutOfBoundsUVs;

			[Token(Token = "0x40028C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool hasOverlappingSubmeshVerts;

			[Token(Token = "0x40028C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool hasOverlappingSubmeshTris;

			[Token(Token = "0x40028C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			public bool hasUVs;

			[Token(Token = "0x40028C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float submeshArea;
		}

		[Token(Token = "0x2000647")]
		private class MB_Triangle
		{
			[Token(Token = "0x40028C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int submeshIdx;

			[Token(Token = "0x40028CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int[] vs;

			[Token(Token = "0x60023F3")]
			[Address(RVA = "0xDAB2DC", Offset = "0xDAB2DC", VA = "0xDAB2DC")]
			public bool isSame(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60023F4")]
			[Address(RVA = "0xDAB404", Offset = "0xDAB404", VA = "0xDAB404")]
			public bool sharesVerts(MB_Triangle obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60023F5")]
			[Address(RVA = "0xDAB534", Offset = "0xDAB534", VA = "0xDAB534")]
			public void Initialize(int[] ts, int idx, int sIdx)
			{
			}

			[Token(Token = "0x60023F6")]
			[Address(RVA = "0xDAB63C", Offset = "0xDAB63C", VA = "0xDAB63C")]
			public MB_Triangle()
			{
			}
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x1A091DC", Offset = "0x1A091DC", VA = "0x1A091DC")]
		public static Texture2D createTextureCopy(Texture2D source)
		{
			return null;
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x1A092A4", Offset = "0x1A092A4", VA = "0x1A092A4")]
		public static bool ArrayBIsSubsetOfA(object[] a, object[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x1A09348", Offset = "0x1A09348", VA = "0x1A09348")]
		public static Material[] GetGOMaterials(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x1A09968", Offset = "0x1A09968", VA = "0x1A09968")]
		public static Mesh GetMesh(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x1A09B5C", Offset = "0x1A09B5C", VA = "0x1A09B5C")]
		public static void SetMesh(GameObject go, Mesh m)
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x1A09CC8", Offset = "0x1A09CC8", VA = "0x1A09CC8")]
		public static Renderer GetRenderer(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x1A09E00", Offset = "0x1A09E00", VA = "0x1A09E00")]
		public static void DisableRendererInSource(GameObject go)
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x1A09F54", Offset = "0x1A09F54", VA = "0x1A09F54")]
		public static bool hasOutOfBoundsUVs(Mesh m, ref Rect uvBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x1A09F9C", Offset = "0x1A09F9C", VA = "0x1A09F9C")]
		public static bool hasOutOfBoundsUVs(Mesh m, ref MeshAnalysisResult putResultHere, int submeshIndex = -1, int uvChannel = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x1A0A0B4", Offset = "0x1A0A0B4", VA = "0x1A0A0B4")]
		public static bool hasOutOfBoundsUVs(Vector2[] uvs, Mesh m, ref MeshAnalysisResult putResultHere, int submeshIndex = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x1A0A2D8", Offset = "0x1A0A2D8", VA = "0x1A0A2D8")]
		public static void setSolidColor(Texture2D t, Color c)
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x1A0A388", Offset = "0x1A0A388", VA = "0x1A0A388")]
		public static Texture2D resampleTexture(Texture2D source, int newWidth, int newHeight)
		{
			return null;
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x1A0A520", Offset = "0x1A0A520", VA = "0x1A0A520")]
		public static bool AreAllSharedMaterialsDistinct(Material[] sharedMaterials)
		{
			return default(bool);
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x1A0A644", Offset = "0x1A0A644", VA = "0x1A0A644")]
		public static int doSubmeshesShareVertsOrTris(Mesh m, ref MeshAnalysisResult mar)
		{
			return default(int);
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x1A0A950", Offset = "0x1A0A950", VA = "0x1A0A950")]
		public static bool GetBounds(GameObject go, out Bounds b)
		{
			return default(bool);
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x1A07028", Offset = "0x1A07028", VA = "0x1A07028")]
		public static void Destroy(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x1A0ABE0", Offset = "0x1A0ABE0", VA = "0x1A0ABE0")]
		public MB_Utility()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000648")]
	public struct AtlasPadding
	{
		[Token(Token = "0x40028CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int topBottom;

		[Token(Token = "0x40028CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int leftRight;

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x13491F0", Offset = "0x13491F0", VA = "0x13491F0")]
		public AtlasPadding(int p)
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x13491F8", Offset = "0x13491F8", VA = "0x13491F8")]
		public AtlasPadding(int px, int py)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000649")]
	public class AtlasPackingResult
	{
		[Token(Token = "0x40028CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int atlasX;

		[Token(Token = "0x40028CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int atlasY;

		[Token(Token = "0x40028CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int usedW;

		[Token(Token = "0x40028D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int usedH;

		[Token(Token = "0x40028D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rect[] rects;

		[Token(Token = "0x40028D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AtlasPadding[] padding;

		[Token(Token = "0x40028D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] srcImgIdxs;

		[Token(Token = "0x40028D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public object data;

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x1348DF8", Offset = "0x1348DF8", VA = "0x1348DF8")]
		public AtlasPackingResult(AtlasPadding[] pds)
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x1348E24", Offset = "0x1348E24", VA = "0x1348E24")]
		public void CalcUsedWidthAndHeight()
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x1348FF0", Offset = "0x1348FF0", VA = "0x1348FF0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200064A")]
	public abstract class MB2_TexturePacker
	{
		[Token(Token = "0x200064B")]
		internal enum NodeType
		{
			[Token(Token = "0x40028D8")]
			Container,
			[Token(Token = "0x40028D9")]
			maxDim,
			[Token(Token = "0x40028DA")]
			regular
		}

		[Token(Token = "0x200064C")]
		internal class PixRect
		{
			[Token(Token = "0x40028DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int x;

			[Token(Token = "0x40028DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int y;

			[Token(Token = "0x40028DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int w;

			[Token(Token = "0x40028DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int h;

			[Token(Token = "0x6002403")]
			[Address(RVA = "0x192C0FC", Offset = "0x192C0FC", VA = "0x192C0FC")]
			public PixRect()
			{
			}

			[Token(Token = "0x6002404")]
			[Address(RVA = "0x192C104", Offset = "0x192C104", VA = "0x192C104")]
			public PixRect(int xx, int yy, int ww, int hh)
			{
			}

			[Token(Token = "0x6002405")]
			[Address(RVA = "0x192C150", Offset = "0x192C150", VA = "0x192C150", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x200064D")]
		internal class Image
		{
			[Token(Token = "0x40028DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int imgId;

			[Token(Token = "0x40028E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int w;

			[Token(Token = "0x40028E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int h;

			[Token(Token = "0x40028E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int x;

			[Token(Token = "0x40028E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int y;

			[Token(Token = "0x6002406")]
			[Address(RVA = "0x192BF04", Offset = "0x192BF04", VA = "0x192BF04")]
			public Image(int id, int tw, int th, AtlasPadding padding, int minImageSizeX, int minImageSizeY)
			{
			}

			[Token(Token = "0x6002407")]
			[Address(RVA = "0x192BF8C", Offset = "0x192BF8C", VA = "0x192BF8C")]
			public Image(Image im)
			{
			}
		}

		[Token(Token = "0x200064E")]
		internal class ImgIDComparer : IComparer<Image>
		{
			[Token(Token = "0x6002408")]
			[Address(RVA = "0x192C0B8", Offset = "0x192C0B8", VA = "0x192C0B8", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6002409")]
			[Address(RVA = "0x192C0F4", Offset = "0x192C0F4", VA = "0x192C0F4")]
			public ImgIDComparer()
			{
			}
		}

		[Token(Token = "0x200064F")]
		internal class ImageHeightComparer : IComparer<Image>
		{
			[Token(Token = "0x600240A")]
			[Address(RVA = "0x192C030", Offset = "0x192C030", VA = "0x192C030", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x600240B")]
			[Address(RVA = "0x192C06C", Offset = "0x192C06C", VA = "0x192C06C")]
			public ImageHeightComparer()
			{
			}
		}

		[Token(Token = "0x2000650")]
		internal class ImageWidthComparer : IComparer<Image>
		{
			[Token(Token = "0x600240C")]
			[Address(RVA = "0x192C074", Offset = "0x192C074", VA = "0x192C074", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x600240D")]
			[Address(RVA = "0x192C0B0", Offset = "0x192C0B0", VA = "0x192C0B0")]
			public ImageWidthComparer()
			{
			}
		}

		[Token(Token = "0x2000651")]
		internal class ImageAreaComparer : IComparer<Image>
		{
			[Token(Token = "0x600240E")]
			[Address(RVA = "0x192BFE4", Offset = "0x192BFE4", VA = "0x192BFE4", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x600240F")]
			[Address(RVA = "0x192C028", Offset = "0x192C028", VA = "0x192C028")]
			public ImageAreaComparer()
			{
			}
		}

		[Token(Token = "0x40028D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x40028D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool atlasMustBePowerOfTwo;

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x24EA08C", Offset = "0x24EA08C", VA = "0x24EA08C")]
		public static int RoundToNearestPositivePowerOfTwo(int x)
		{
			return default(int);
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x24EA0E8", Offset = "0x24EA0E8", VA = "0x24EA0E8")]
		public static int CeilToNearestPowerOfTwo(int x)
		{
			return default(int);
		}

		[Token(Token = "0x60023FE")]
		public abstract AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, int maxDimensionX, int maxDimensionY, int padding);

		[Token(Token = "0x60023FF")]
		public abstract AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, bool doMultiAtlas);

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x24EA13C", Offset = "0x24EA13C", VA = "0x24EA13C")]
		internal bool ScaleAtlasToFitMaxDim(Vector2 rootWH, List<Image> images, int maxDimensionX, int maxDimensionY, AtlasPadding padding, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, ref int outW, ref int outH, out float padX, out float padY, out int newMinSizeX, out int newMinSizeY)
		{
			return default(bool);
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x24EA61C", Offset = "0x24EA61C", VA = "0x24EA61C")]
		public void normalizeRects(AtlasPackingResult rr, AtlasPadding padding)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x24EA7D8", Offset = "0x24EA7D8", VA = "0x24EA7D8")]
		protected MB2_TexturePacker()
		{
		}
	}
	[Token(Token = "0x2000652")]
	public class MB2_TexturePackerRegular : MB2_TexturePacker
	{
		[Token(Token = "0x2000653")]
		private class ProbeResult
		{
			[Token(Token = "0x40028E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int w;

			[Token(Token = "0x40028E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int h;

			[Token(Token = "0x40028E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int outW;

			[Token(Token = "0x40028E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int outH;

			[Token(Token = "0x40028EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Node root;

			[Token(Token = "0x40028EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool largerOrEqualToMaxDim;

			[Token(Token = "0x40028EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float efficiency;

			[Token(Token = "0x40028ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float squareness;

			[Token(Token = "0x40028EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float totalAtlasArea;

			[Token(Token = "0x40028EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int numAtlases;

			[Token(Token = "0x600241E")]
			[Address(RVA = "0x192C760", Offset = "0x192C760", VA = "0x192C760")]
			public void Set(int ww, int hh, int outw, int outh, Node r, bool fits, float e, float sq)
			{
			}

			[Token(Token = "0x600241F")]
			[Address(RVA = "0x192C77C", Offset = "0x192C77C", VA = "0x192C77C")]
			public float GetScore(bool doPowerOfTwoScore)
			{
				return default(float);
			}

			[Token(Token = "0x6002420")]
			[Address(RVA = "0x192C7B4", Offset = "0x192C7B4", VA = "0x192C7B4")]
			public void PrintTree()
			{
			}

			[Token(Token = "0x6002421")]
			[Address(RVA = "0x192C804", Offset = "0x192C804", VA = "0x192C804")]
			public ProbeResult()
			{
			}
		}

		[Token(Token = "0x2000654")]
		internal class Node
		{
			[Token(Token = "0x40028F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal NodeType isFullAtlas;

			[Token(Token = "0x40028F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Node[] child;

			[Token(Token = "0x40028F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal PixRect r;

			[Token(Token = "0x40028F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Image img;

			[Token(Token = "0x40028F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ProbeResult bestRoot;

			[Token(Token = "0x6002422")]
			[Address(RVA = "0x192C308", Offset = "0x192C308", VA = "0x192C308")]
			internal Node(NodeType rootType)
			{
			}

			[Token(Token = "0x6002423")]
			[Address(RVA = "0x192C378", Offset = "0x192C378", VA = "0x192C378")]
			private bool isLeaf()
			{
				return default(bool);
			}

			[Token(Token = "0x6002424")]
			[Address(RVA = "0x192C3D0", Offset = "0x192C3D0", VA = "0x192C3D0")]
			internal Node Insert(Image im, bool handed)
			{
				return null;
			}
		}

		[Token(Token = "0x40028E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ProbeResult bestRoot;

		[Token(Token = "0x40028E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int atlasY;

		[Token(Token = "0x6002410")]
		[Address(RVA = "0x24ED014", Offset = "0x24ED014", VA = "0x24ED014")]
		private static void printTree(Node r, string spc)
		{
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0x24ED2A8", Offset = "0x24ED2A8", VA = "0x24ED2A8")]
		private static void flattenTree(Node r, List<Image> putHere)
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x24ED390", Offset = "0x24ED390", VA = "0x24ED390")]
		private static void drawGizmosNode(Node r)
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x24ED578", Offset = "0x24ED578", VA = "0x24ED578")]
		private static Texture2D createFilledTex(Color c, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x24ED67C", Offset = "0x24ED67C", VA = "0x24ED67C")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x24ED6FC", Offset = "0x24ED6FC", VA = "0x24ED6FC")]
		private bool ProbeSingleAtlas(Image[] imgsToAdd, int idealAtlasW, int idealAtlasH, float imgArea, int maxAtlasDimX, int maxAtlasDimY, ProbeResult pr)
		{
			return default(bool);
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x24EDEC0", Offset = "0x24EDEC0", VA = "0x24EDEC0")]
		private bool ProbeMultiAtlas(Image[] imgsToAdd, int idealAtlasW, int idealAtlasH, float imgArea, int maxAtlasDimX, int maxAtlasDimY, ProbeResult pr)
		{
			return default(bool);
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x24EDDE0", Offset = "0x24EDDE0", VA = "0x24EDDE0")]
		internal void GetExtent(Node r, ref int x, ref int y)
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x24EE2DC", Offset = "0x24EE2DC", VA = "0x24EE2DC")]
		private int StepWidthHeight(int oldVal, int step, int maxDim)
		{
			return default(int);
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x24EE30C", Offset = "0x24EE30C", VA = "0x24EE30C", Slot = "4")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, int maxDimensionX, int maxDimensionY, int atPadding)
		{
			return null;
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x24EE424", Offset = "0x24EE424", VA = "0x24EE424", Slot = "5")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, bool doMultiAtlas)
		{
			return null;
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x24EF934", Offset = "0x24EF934", VA = "0x24EF934")]
		private AtlasPackingResult _GetRectsSingleAtlas(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, int recursionDepth)
		{
			return null;
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x24EE614", Offset = "0x24EE614", VA = "0x24EE614")]
		private AtlasPackingResult[] _GetRectsMultiAtlas(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionPassedX, int maxDimensionPassedY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY)
		{
			return null;
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x24F1478", Offset = "0x24F1478", VA = "0x24F1478")]
		public MB2_TexturePackerRegular()
		{
		}
	}
	[Token(Token = "0x2000655")]
	public class MB2_TexturePackerHorizontalVert : MB2_TexturePacker
	{
		[Token(Token = "0x2000656")]
		public enum TexturePackingOrientation
		{
			[Token(Token = "0x40028F8")]
			horizontal,
			[Token(Token = "0x40028F9")]
			vertical
		}

		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TexturePackingOrientation packingOrientation;

		[Token(Token = "0x40028F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool stretchImagesToEdges;

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x24EA7F0", Offset = "0x24EA7F0", VA = "0x24EA7F0", Slot = "4")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, int maxDimensionX, int maxDimensionY, int padding)
		{
			return null;
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x24EA914", Offset = "0x24EA914", VA = "0x24EA914", Slot = "5")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, bool doMultiAtlas)
		{
			return null;
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x24EC024", Offset = "0x24EC024", VA = "0x24EC024")]
		private AtlasPackingResult _GetRectsSingleAtlas(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, int recursionDepth)
		{
			return null;
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x24EAB30", Offset = "0x24EAB30", VA = "0x24EAB30")]
		private AtlasPackingResult[] _GetRectsMultiAtlasVertical(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionPassedX, int maxDimensionPassedY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY)
		{
			return null;
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x24EB5B8", Offset = "0x24EB5B8", VA = "0x24EB5B8")]
		private AtlasPackingResult[] _GetRectsMultiAtlasHorizontal(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionPassedX, int maxDimensionPassedY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY)
		{
			return null;
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x24ECEE0", Offset = "0x24ECEE0", VA = "0x24ECEE0")]
		private Image PopLargestThatFits(List<Image> images, int spaceRemaining, int maxDim, bool emptyAtlas)
		{
			return null;
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x24ECFF8", Offset = "0x24ECFF8", VA = "0x24ECFF8")]
		public MB2_TexturePackerHorizontalVert()
		{
		}
	}
	[Token(Token = "0x2000657")]
	internal interface MB_ITextureCombinerPacker
	{
		[Token(Token = "0x600242C")]
		IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x600242D")]
		AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x600242E")]
		IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL);
	}
	[Token(Token = "0x2000658")]
	internal abstract class MB3_TextureCombinerPackerRoot : MB_ITextureCombinerPacker
	{
		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8A90", Offset = "0xAA8A90")]
		private sealed class <ConvertTexturesToReadableFormats>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x40028FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x40028FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x170004D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002439")]
				[Address(RVA = "0x1937768", Offset = "0x1937768", VA = "0x1937768", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600243B")]
				[Address(RVA = "0x19377B0", Offset = "0x19377B0", VA = "0x19377B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002436")]
			[Address(RVA = "0x193747C", Offset = "0x193747C", VA = "0x193747C")]
			[DebuggerHidden]
			public <ConvertTexturesToReadableFormats>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002437")]
			[Address(RVA = "0x19374A8", Offset = "0x19374A8", VA = "0x19374A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002438")]
			[Address(RVA = "0x19374AC", Offset = "0x19374AC", VA = "0x19374AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600243A")]
			[Address(RVA = "0x1937770", Offset = "0x1937770", VA = "0x1937770", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x1AB0B50", Offset = "0x1AB0B50", VA = "0x1AB0B50")]
		internal static void CreateTemporaryTexturesForAtlas(List<MB_TexSet> distinctMaterialTextures, MB3_TextureCombiner combiner, int propIdx, MB3_TextureCombinerPipeline.TexturePipelineData data)
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x1AAF330", Offset = "0x1AAF330", VA = "0x1AAF330")]
		public static AtlasPackingResult[] CalculateAtlasRectanglesStatic(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x1AB0DF4", Offset = "0x1AB0DF4", VA = "0x1AB0DF4")]
		public static void MakeProceduralTexturesReadable(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x1AB0E68", Offset = "0x1AB0E68", VA = "0x1AB0E68", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1734", Offset = "0xAC1734")]
		public virtual IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x1AB0EE8", Offset = "0x1AB0EE8", VA = "0x1AB0EE8", Slot = "8")]
		public virtual AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002434")]
		public abstract IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x1AAF2C0", Offset = "0x1AAF2C0", VA = "0x1AAF2C0")]
		protected MB3_TextureCombinerPackerRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200065A")]
	public class ShaderTextureProperty
	{
		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isNormalMap;

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x1043360", Offset = "0x1043360", VA = "0x1043360")]
		public ShaderTextureProperty(string n, bool norm)
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x10433A0", Offset = "0x10433A0", VA = "0x10433A0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x1043460", Offset = "0x1043460", VA = "0x1043460", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x1043468", Offset = "0x1043468", VA = "0x1043468")]
		public static string[] GetNames(List<ShaderTextureProperty> props)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200065B")]
	public class MB3_TextureCombiner
	{
		[Token(Token = "0x200065C")]
		private class TemporaryTexture
		{
			[Token(Token = "0x4002910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string property;

			[Token(Token = "0x4002911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Texture2D texture;

			[Token(Token = "0x6002468")]
			[Address(RVA = "0x1934150", Offset = "0x1934150", VA = "0x1934150")]
			public TemporaryTexture(string prop, Texture2D tex)
			{
			}
		}

		[Token(Token = "0x200065D")]
		public class CombineTexturesIntoAtlasesCoroutineResult
		{
			[Token(Token = "0x4002912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool success;

			[Token(Token = "0x4002913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool isFinished;

			[Token(Token = "0x6002469")]
			[Address(RVA = "0x1931CC4", Offset = "0x1931CC4", VA = "0x1931CC4")]
			public CombineTexturesIntoAtlasesCoroutineResult()
			{
			}
		}

		[Token(Token = "0x200065E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8AA0", Offset = "0xAA8AA0")]
		private sealed class <CombineTexturesIntoAtlasesCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombineTexturesIntoAtlasesCoroutineResult coroutineResult;

			[Token(Token = "0x4002917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxTimePerFrame;

			[Token(Token = "0x4002918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4002919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x400291A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x400291B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material resultMaterial;

			[Token(Token = "0x400291C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x400291D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x400291E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x400291F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public List<AtlasPackingResult> packingResults;

			[Token(Token = "0x4002920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool onlyPackRects;

			[Token(Token = "0x170004E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600246D")]
				[Address(RVA = "0x19324C0", Offset = "0x19324C0", VA = "0x19324C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600246F")]
				[Address(RVA = "0x1932508", Offset = "0x1932508", VA = "0x1932508", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600246A")]
			[Address(RVA = "0x193227C", Offset = "0x193227C", VA = "0x193227C")]
			[DebuggerHidden]
			public <CombineTexturesIntoAtlasesCoroutine>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600246B")]
			[Address(RVA = "0x19322A8", Offset = "0x19322A8", VA = "0x19322A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600246C")]
			[Address(RVA = "0x19322AC", Offset = "0x19322AC", VA = "0x19322AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600246E")]
			[Address(RVA = "0x19324C8", Offset = "0x19324C8", VA = "0x19324C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200065F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8AB0", Offset = "0xAA8AB0")]
		private sealed class <_CombineTexturesIntoAtlases>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4002924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4002925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x4002926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4002927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4002928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material resultMaterial;

			[Token(Token = "0x4002929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x400292A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool onlyPackRects;

			[Token(Token = "0x400292B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<AtlasPackingResult> atlasPackingResult;

			[Token(Token = "0x400292C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x400292D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Stopwatch <sw>5__2;

			[Token(Token = "0x170004E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002474")]
				[Address(RVA = "0x193301C", Offset = "0x193301C", VA = "0x193301C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002476")]
				[Address(RVA = "0x1933064", Offset = "0x1933064", VA = "0x1933064", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002470")]
			[Address(RVA = "0x1932510", Offset = "0x1932510", VA = "0x1932510")]
			[DebuggerHidden]
			public <_CombineTexturesIntoAtlases>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6002471")]
			[Address(RVA = "0x193253C", Offset = "0x193253C", VA = "0x193253C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002472")]
			[Address(RVA = "0x193279C", Offset = "0x193279C", VA = "0x193279C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002473")]
			[Address(RVA = "0x1932568", Offset = "0x1932568", VA = "0x1932568")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002475")]
			[Address(RVA = "0x1933024", Offset = "0x1933024", VA = "0x1933024", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8AC0", Offset = "0xAA8AC0")]
		private sealed class <__CombineTexturesIntoAtlases>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400292E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400292F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4002931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4002932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4002933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4002934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4002935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4002936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private StringBuilder <report>5__2;

			[Token(Token = "0x4002937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private MB_ITextureCombinerPacker <texturePaker>5__3;

			[Token(Token = "0x170004E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600247A")]
				[Address(RVA = "0x1933B80", Offset = "0x1933B80", VA = "0x1933B80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600247C")]
				[Address(RVA = "0x1933BC8", Offset = "0x1933BC8", VA = "0x1933BC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002477")]
			[Address(RVA = "0x193306C", Offset = "0x193306C", VA = "0x193306C")]
			[DebuggerHidden]
			public <__CombineTexturesIntoAtlases>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x6002478")]
			[Address(RVA = "0x1933098", Offset = "0x1933098", VA = "0x1933098", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002479")]
			[Address(RVA = "0x193309C", Offset = "0x193309C", VA = "0x193309C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600247B")]
			[Address(RVA = "0x1933B88", Offset = "0x1933B88", VA = "0x1933B88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8AD0", Offset = "0xAA8AD0")]
		private sealed class <__RunTexturePacker>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400293A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x400293B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x400293C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x400293D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x400293E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<AtlasPackingResult> packingResult;

			[Token(Token = "0x170004EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002480")]
				[Address(RVA = "0x1934100", Offset = "0x1934100", VA = "0x1934100", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002482")]
				[Address(RVA = "0x1934148", Offset = "0x1934148", VA = "0x1934148", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600247D")]
			[Address(RVA = "0x1933BD0", Offset = "0x1933BD0", VA = "0x1933BD0")]
			[DebuggerHidden]
			public <__RunTexturePacker>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x600247E")]
			[Address(RVA = "0x1933BFC", Offset = "0x1933BFC", VA = "0x1933BFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600247F")]
			[Address(RVA = "0x1933C00", Offset = "0x1933C00", VA = "0x1933C00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002481")]
			[Address(RVA = "0x1934108", Offset = "0x1934108", VA = "0x1934108", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x4002902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected MB2_TextureBakeResults _textureBakeResults;

		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int _atlasPadding;

		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int _maxAtlasSize;

		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected bool _resizePowerOfTwoTextures;

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		protected bool _fixOutOfBoundsUVs;

		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected int _maxTilingBakeSize;

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _saveAtlasesAsAssets;

		[Token(Token = "0x4002909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected MB2_PackingAlgorithmEnum _packingAlgorithm;

		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected bool _meshBakerTexturePackerForcePowerOfTwo;

		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected List<ShaderTextureProperty> _customShaderPropNames;

		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected bool _normalizeTexelDensity;

		[Token(Token = "0x400290D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		protected bool _considerNonTextureProperties;

		[Token(Token = "0x400290E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<TemporaryTexture> _temporaryTextures;

		[Token(Token = "0x400290F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _RunCorutineWithoutPauseIsRunning;

		[Token(Token = "0x170004DA")]
		public MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x6002440")]
			[Address(RVA = "0x1AA76B0", Offset = "0x1AA76B0", VA = "0x1AA76B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002441")]
			[Address(RVA = "0x1AA76B8", Offset = "0x1AA76B8", VA = "0x1AA76B8")]
			set
			{
			}
		}

		[Token(Token = "0x170004DB")]
		public int atlasPadding
		{
			[Token(Token = "0x6002442")]
			[Address(RVA = "0x1AA76C0", Offset = "0x1AA76C0", VA = "0x1AA76C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002443")]
			[Address(RVA = "0x1AA76C8", Offset = "0x1AA76C8", VA = "0x1AA76C8")]
			set
			{
			}
		}

		[Token(Token = "0x170004DC")]
		public int maxAtlasSize
		{
			[Token(Token = "0x6002444")]
			[Address(RVA = "0x1AA76D0", Offset = "0x1AA76D0", VA = "0x1AA76D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002445")]
			[Address(RVA = "0x1AA76D8", Offset = "0x1AA76D8", VA = "0x1AA76D8")]
			set
			{
			}
		}

		[Token(Token = "0x170004DD")]
		public bool resizePowerOfTwoTextures
		{
			[Token(Token = "0x6002446")]
			[Address(RVA = "0x1AA76E0", Offset = "0x1AA76E0", VA = "0x1AA76E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002447")]
			[Address(RVA = "0x1AA76E8", Offset = "0x1AA76E8", VA = "0x1AA76E8")]
			set
			{
			}
		}

		[Token(Token = "0x170004DE")]
		public bool fixOutOfBoundsUVs
		{
			[Token(Token = "0x6002448")]
			[Address(RVA = "0x1AA76F4", Offset = "0x1AA76F4", VA = "0x1AA76F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002449")]
			[Address(RVA = "0x1AA76FC", Offset = "0x1AA76FC", VA = "0x1AA76FC")]
			set
			{
			}
		}

		[Token(Token = "0x170004DF")]
		public int maxTilingBakeSize
		{
			[Token(Token = "0x600244A")]
			[Address(RVA = "0x1AA7708", Offset = "0x1AA7708", VA = "0x1AA7708")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600244B")]
			[Address(RVA = "0x1AA7710", Offset = "0x1AA7710", VA = "0x1AA7710")]
			set
			{
			}
		}

		[Token(Token = "0x170004E0")]
		public bool saveAtlasesAsAssets
		{
			[Token(Token = "0x600244C")]
			[Address(RVA = "0x1AA7718", Offset = "0x1AA7718", VA = "0x1AA7718")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600244D")]
			[Address(RVA = "0x1AA7720", Offset = "0x1AA7720", VA = "0x1AA7720")]
			set
			{
			}
		}

		[Token(Token = "0x170004E1")]
		public MB2_PackingAlgorithmEnum packingAlgorithm
		{
			[Token(Token = "0x600244E")]
			[Address(RVA = "0x1AA772C", Offset = "0x1AA772C", VA = "0x1AA772C")]
			get
			{
				return default(MB2_PackingAlgorithmEnum);
			}
			[Token(Token = "0x600244F")]
			[Address(RVA = "0x1AA7734", Offset = "0x1AA7734", VA = "0x1AA7734")]
			set
			{
			}
		}

		[Token(Token = "0x170004E2")]
		public bool meshBakerTexturePackerForcePowerOfTwo
		{
			[Token(Token = "0x6002450")]
			[Address(RVA = "0x1AA773C", Offset = "0x1AA773C", VA = "0x1AA773C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002451")]
			[Address(RVA = "0x1AA7744", Offset = "0x1AA7744", VA = "0x1AA7744")]
			set
			{
			}
		}

		[Token(Token = "0x170004E3")]
		public List<ShaderTextureProperty> customShaderPropNames
		{
			[Token(Token = "0x6002452")]
			[Address(RVA = "0x1AA7750", Offset = "0x1AA7750", VA = "0x1AA7750")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002453")]
			[Address(RVA = "0x1AA7758", Offset = "0x1AA7758", VA = "0x1AA7758")]
			set
			{
			}
		}

		[Token(Token = "0x170004E4")]
		public bool considerNonTextureProperties
		{
			[Token(Token = "0x6002454")]
			[Address(RVA = "0x1AA7760", Offset = "0x1AA7760", VA = "0x1AA7760")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002455")]
			[Address(RVA = "0x1AA7768", Offset = "0x1AA7768", VA = "0x1AA7768")]
			set
			{
			}
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x1AA6100", Offset = "0x1AA6100", VA = "0x1AA6100")]
		public static void RunCorutineWithoutPause(IEnumerator cor, int recursionDepth)
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x1AA7774", Offset = "0x1AA7774", VA = "0x1AA7774")]
		public bool CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, [Optional] MB2_EditorMethodsInterface textureEditorMethods, [Optional] List<AtlasPackingResult> packingResults, bool onlyPackRects = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x1AA7958", Offset = "0x1AA7958", VA = "0x1AA7958")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC17E4", Offset = "0xAC17E4")]
		public IEnumerator CombineTexturesIntoAtlasesCoroutine(ProgressUpdateDelegate progressInfo, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, [Optional] MB2_EditorMethodsInterface textureEditorMethods, [Optional] CombineTexturesIntoAtlasesCoroutineResult coroutineResult, float maxTimePerFrame = 0.01f, [Optional] List<AtlasPackingResult> packingResults, bool onlyPackRects = false)
		{
			return null;
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x1AA7890", Offset = "0x1AA7890", VA = "0x1AA7890")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1844", Offset = "0xAC1844")]
		private IEnumerator _CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, CombineTexturesIntoAtlasesCoroutineResult result, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, MB2_EditorMethodsInterface textureEditorMethods, List<AtlasPackingResult> atlasPackingResult, bool onlyPackRects)
		{
			return null;
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x1AA7A30", Offset = "0x1AA7A30", VA = "0x1AA7A30")]
		private MB3_TextureCombinerPipeline.TexturePipelineData LoadPipelineData(Material resultMaterial, List<ShaderTextureProperty> texPropertyNames, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, List<MB_TexSet> distinctMaterialTextures)
		{
			return null;
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x1AA7B30", Offset = "0x1AA7B30", VA = "0x1AA7B30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC18A4", Offset = "0xAC18A4")]
		private IEnumerator __CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, CombineTexturesIntoAtlasesCoroutineResult result, MB_AtlasesAndRects resultAtlasesAndRects, MB3_TextureCombinerPipeline.TexturePipelineData data, MB2_EditorMethodsInterface textureEditorMethods)
		{
			return null;
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x1AA7BD0", Offset = "0x1AA7BD0", VA = "0x1AA7BD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1904", Offset = "0xAC1904")]
		private IEnumerator __RunTexturePacker(CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB2_EditorMethodsInterface textureEditorMethods, List<AtlasPackingResult> packingResult)
		{
			return null;
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x1AA7C64", Offset = "0x1AA7C64", VA = "0x1AA7C64")]
		internal int _getNumTemporaryTextures()
		{
			return default(int);
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x1AA7CB0", Offset = "0x1AA7CB0", VA = "0x1AA7CB0")]
		public Texture2D _createTemporaryTexture(string propertyName, int w, int h, TextureFormat texFormat, bool mipMaps)
		{
			return null;
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x1AA7E68", Offset = "0x1AA7E68", VA = "0x1AA7E68")]
		internal Texture2D _createTextureCopy(string propertyName, Texture2D t)
		{
			return null;
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x1AA7FF8", Offset = "0x1AA7FF8", VA = "0x1AA7FF8")]
		internal Texture2D _resizeTexture(string propertyName, Texture2D t, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x1AA8178", Offset = "0x1AA8178", VA = "0x1AA8178")]
		internal void _destroyAllTemporaryTextures()
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x1AA82E8", Offset = "0x1AA82E8", VA = "0x1AA82E8")]
		internal void _destroyTemporaryTextures(string propertyName)
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x1AA8620", Offset = "0x1AA8620", VA = "0x1AA8620")]
		public void _restoreProceduralMaterials()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x1AA8624", Offset = "0x1AA8624", VA = "0x1AA8624")]
		public void SuggestTreatment(List<GameObject> objsToMesh, Material[] resultMaterials, List<ShaderTextureProperty> _customShaderPropNames)
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x1AAAA68", Offset = "0x1AAAA68", VA = "0x1AAAA68")]
		private string PrintList(List<GameObject> gos)
		{
			return null;
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x1AA678C", Offset = "0x1AA678C", VA = "0x1AA678C")]
		public MB3_TextureCombiner()
		{
		}
	}
	[Token(Token = "0x2000662")]
	public class MeshBakerMaterialTexture
	{
		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Texture2D _t;

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float texelDensity;

		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool readyToBuildAtlases;

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DRect encapsulatingSamplingRect;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8D74", Offset = "0xAB8D74")]
		private DRect <matTilingRect>k__BackingField;

		[Token(Token = "0x170004ED")]
		public Texture2D t
		{
			[Token(Token = "0x6002483")]
			[Address(RVA = "0xBE9820", Offset = "0xBE9820", VA = "0xBE9820")]
			set
			{
			}
		}

		[Token(Token = "0x170004EE")]
		public DRect matTilingRect
		{
			[Token(Token = "0x6002484")]
			[Address(RVA = "0xBE9828", Offset = "0xBE9828", VA = "0xBE9828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1AA4", Offset = "0xAC1AA4")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x6002485")]
			[Address(RVA = "0xBE9834", Offset = "0xBE9834", VA = "0xBE9834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1AB4", Offset = "0xAC1AB4")]
			private set
			{
			}
		}

		[Token(Token = "0x170004EF")]
		public bool isNull
		{
			[Token(Token = "0x600248C")]
			[Address(RVA = "0xBE9C48", Offset = "0xBE9C48", VA = "0xBE9C48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F0")]
		public int width
		{
			[Token(Token = "0x600248D")]
			[Address(RVA = "0xBE9CB4", Offset = "0xBE9CB4", VA = "0xBE9CB4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004F1")]
		public int height
		{
			[Token(Token = "0x600248E")]
			[Address(RVA = "0xBE9D84", Offset = "0xBE9D84", VA = "0xBE9D84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xBE9840", Offset = "0xBE9840", VA = "0xBE9840")]
		public MeshBakerMaterialTexture()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0xBE9848", Offset = "0xBE9848", VA = "0xBE9848")]
		public MeshBakerMaterialTexture(Texture tx)
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xBE998C", Offset = "0xBE998C", VA = "0xBE998C")]
		public MeshBakerMaterialTexture(Texture tx, Vector2 matTilingOffset, Vector2 matTilingScale, float texelDens)
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0xBE9B2C", Offset = "0xBE9B2C", VA = "0xBE9B2C")]
		public DRect GetEncapsulatingSamplingRect()
		{
			return default(DRect);
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xBE9B38", Offset = "0xBE9B38", VA = "0xBE9B38")]
		public void SetEncapsulatingSamplingRect(MB_TexSet ts, DRect r)
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xBE9B44", Offset = "0xBE9B44", VA = "0xBE9B44")]
		public Texture2D GetTexture2D()
		{
			return null;
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xBE9E54", Offset = "0xBE9E54", VA = "0xBE9E54")]
		public string GetTexName()
		{
			return null;
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xBE9EFC", Offset = "0xBE9EFC", VA = "0xBE9EFC")]
		public bool AreTexturesEqual(MeshBakerMaterialTexture b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000663")]
	public class MatAndTransformToMerged
	{
		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material mat;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8D84", Offset = "0xAB8D84")]
		private DRect <obUVRectIfTilingSame>k__BackingField;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8D94", Offset = "0xAB8D94")]
		private DRect <samplingRectMatAndUVTiling>k__BackingField;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8DA4", Offset = "0xAB8DA4")]
		private DRect <materialTiling>k__BackingField;

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string objName;

		[Token(Token = "0x170004F2")]
		public DRect obUVRectIfTilingSame
		{
			[Token(Token = "0x6002492")]
			[Address(RVA = "0x1A15BE8", Offset = "0x1A15BE8", VA = "0x1A15BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1AC4", Offset = "0xAC1AC4")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x6002493")]
			[Address(RVA = "0x1A15BF4", Offset = "0x1A15BF4", VA = "0x1A15BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1AD4", Offset = "0xAC1AD4")]
			private set
			{
			}
		}

		[Token(Token = "0x170004F3")]
		public DRect samplingRectMatAndUVTiling
		{
			[Token(Token = "0x6002494")]
			[Address(RVA = "0x1A15C00", Offset = "0x1A15C00", VA = "0x1A15C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1AE4", Offset = "0xAC1AE4")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x6002495")]
			[Address(RVA = "0x1A15C0C", Offset = "0x1A15C0C", VA = "0x1A15C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1AF4", Offset = "0xAC1AF4")]
			private set
			{
			}
		}

		[Token(Token = "0x170004F4")]
		public DRect materialTiling
		{
			[Token(Token = "0x6002496")]
			[Address(RVA = "0x1A15C18", Offset = "0x1A15C18", VA = "0x1A15C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1B04", Offset = "0xAC1B04")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x6002497")]
			[Address(RVA = "0x1A15C24", Offset = "0x1A15C24", VA = "0x1A15C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1B14", Offset = "0xAC1B14")]
			private set
			{
			}
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x1A15C30", Offset = "0x1A15C30", VA = "0x1A15C30")]
		public MatAndTransformToMerged(DRect obUVrect, bool fixOutOfBoundsUVs)
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x1A15D00", Offset = "0x1A15D00", VA = "0x1A15D00")]
		public MatAndTransformToMerged(DRect obUVrect, bool fixOutOfBoundsUVs, Material m)
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x1A15C94", Offset = "0x1A15C94", VA = "0x1A15C94")]
		private void _init(DRect obUVrect, bool fixOutOfBoundsUVs, Material m)
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x1A15D70", Offset = "0x1A15D70", VA = "0x1A15D70", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x1A15E60", Offset = "0x1A15E60", VA = "0x1A15E60", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x1A15EEC", Offset = "0x1A15EEC", VA = "0x1A15EEC")]
		public string GetMaterialName()
		{
			return null;
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x1A15FC4", Offset = "0x1A15FC4", VA = "0x1A15FC4")]
		public void AssignInitialValuesForMaterialTilingAndSamplingRectMatAndUVTiling(bool allTexturesUseSameMatTiling, DRect matTiling)
		{
		}
	}
	[Token(Token = "0x2000664")]
	public class MatsAndGOs
	{
		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<MatAndTransformToMerged> mats;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> gos;

		[Token(Token = "0x600249F")]
		[Address(RVA = "0xBE82E8", Offset = "0xBE82E8", VA = "0xBE82E8")]
		public MatsAndGOs()
		{
		}
	}
	[Token(Token = "0x2000665")]
	public class MB_TexSet
	{
		[Token(Token = "0x2000666")]
		private interface PipelineVariation
		{
			[Token(Token = "0x60024BE")]
			void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect);

			[Token(Token = "0x60024BF")]
			void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment);

			[Token(Token = "0x60024C0")]
			Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex);

			[Token(Token = "0x60024C1")]
			void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props);
		}

		[Token(Token = "0x2000667")]
		private class PipelineVariationAllTexturesUseSameMatTiling : PipelineVariation
		{
			[Token(Token = "0x4002955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB_TexSet texSet;

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x193C528", Offset = "0x193C528", VA = "0x193C528")]
			public PipelineVariationAllTexturesUseSameMatTiling(MB_TexSet ts)
			{
			}

			[Token(Token = "0x60024C3")]
			[Address(RVA = "0x193C554", Offset = "0x193C554", VA = "0x193C554", Slot = "4")]
			public void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect)
			{
			}

			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x193C660", Offset = "0x193C660", VA = "0x193C660", Slot = "5")]
			public void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment)
			{
			}

			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x193C7D0", Offset = "0x193C7D0", VA = "0x193C7D0", Slot = "6")]
			public Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex)
			{
				return default(Rect);
			}

			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x193C880", Offset = "0x193C880", VA = "0x193C880", Slot = "7")]
			public void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props)
			{
			}
		}

		[Token(Token = "0x2000668")]
		private class PipelineVariationSomeTexturesUseDifferentMatTiling : PipelineVariation
		{
			[Token(Token = "0x4002956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB_TexSet texSet;

			[Token(Token = "0x60024C7")]
			[Address(RVA = "0xDAAE00", Offset = "0xDAAE00", VA = "0xDAAE00")]
			public PipelineVariationSomeTexturesUseDifferentMatTiling(MB_TexSet ts)
			{
			}

			[Token(Token = "0x60024C8")]
			[Address(RVA = "0xDAAE2C", Offset = "0xDAAE2C", VA = "0xDAAE2C", Slot = "4")]
			public void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect)
			{
			}

			[Token(Token = "0x60024C9")]
			[Address(RVA = "0xDAAF54", Offset = "0xDAAF54", VA = "0xDAAF54", Slot = "5")]
			public void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment)
			{
			}

			[Token(Token = "0x60024CA")]
			[Address(RVA = "0xDAB0C4", Offset = "0xDAB0C4", VA = "0xDAB0C4", Slot = "6")]
			public Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex)
			{
				return default(Rect);
			}

			[Token(Token = "0x60024CB")]
			[Address(RVA = "0xDAB104", Offset = "0xDAB104", VA = "0xDAB104", Slot = "7")]
			public void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props)
			{
			}
		}

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshBakerMaterialTexture[] ts;

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MatsAndGOs matsAndGOs;

		[Token(Token = "0x400294D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8DB4", Offset = "0xAB8DB4")]
		private bool <allTexturesUseSameMatTiling>k__BackingField;

		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8DC4", Offset = "0xAB8DC4")]
		private bool <thisIsOnlyTexSetInAtlas>k__BackingField;

		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8DD4", Offset = "0xAB8DD4")]
		private MB_TextureTilingTreatment <tilingTreatment>k__BackingField;

		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8DE4", Offset = "0xAB8DE4")]
		private Vector2 <obUVoffset>k__BackingField;

		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8DF4", Offset = "0xAB8DF4")]
		private Vector2 <obUVscale>k__BackingField;

		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int idealWidth;

		[Token(Token = "0x4002953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int idealHeight;

		[Token(Token = "0x4002954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PipelineVariation pipelineVariation;

		[Token(Token = "0x170004F5")]
		public bool allTexturesUseSameMatTiling
		{
			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x1AB705C", Offset = "0x1AB705C", VA = "0x1AB705C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1B24", Offset = "0xAC1B24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024A1")]
			[Address(RVA = "0x1AB7064", Offset = "0x1AB7064", VA = "0x1AB7064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1B34", Offset = "0xAC1B34")]
			private set
			{
			}
		}

		[Token(Token = "0x170004F6")]
		public bool thisIsOnlyTexSetInAtlas
		{
			[Token(Token = "0x60024A2")]
			[Address(RVA = "0x1AB7070", Offset = "0x1AB7070", VA = "0x1AB7070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1B44", Offset = "0xAC1B44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024A3")]
			[Address(RVA = "0x1AB7078", Offset = "0x1AB7078", VA = "0x1AB7078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1B54", Offset = "0xAC1B54")]
			private set
			{
			}
		}

		[Token(Token = "0x170004F7")]
		public MB_TextureTilingTreatment tilingTreatment
		{
			[Token(Token = "0x60024A4")]
			[Address(RVA = "0x1AB7084", Offset = "0x1AB7084", VA = "0x1AB7084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1B64", Offset = "0xAC1B64")]
			get
			{
				return default(MB_TextureTilingTreatment);
			}
			[Token(Token = "0x60024A5")]
			[Address(RVA = "0x1AB708C", Offset = "0x1AB708C", VA = "0x1AB708C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1B74", Offset = "0xAC1B74")]
			private set
			{
			}
		}

		[Token(Token = "0x170004F8")]
		public Vector2 obUVoffset
		{
			[Token(Token = "0x60024A6")]
			[Address(RVA = "0x1AB7094", Offset = "0x1AB7094", VA = "0x1AB7094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1B84", Offset = "0xAC1B84")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60024A7")]
			[Address(RVA = "0x1AB709C", Offset = "0x1AB709C", VA = "0x1AB709C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1B94", Offset = "0xAC1B94")]
			private set
			{
			}
		}

		[Token(Token = "0x170004F9")]
		public Vector2 obUVscale
		{
			[Token(Token = "0x60024A8")]
			[Address(RVA = "0x1AB70A4", Offset = "0x1AB70A4", VA = "0x1AB70A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1BA4", Offset = "0xAC1BA4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60024A9")]
			[Address(RVA = "0x1AB70AC", Offset = "0x1AB70AC", VA = "0x1AB70AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC1BB4", Offset = "0xAC1BB4")]
			private set
			{
			}
		}

		[Token(Token = "0x170004FA")]
		internal DRect obUVrect
		{
			[Token(Token = "0x60024AA")]
			[Address(RVA = "0x1AB70B4", Offset = "0x1AB70B4", VA = "0x1AB70B4")]
			get
			{
				return default(DRect);
			}
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x1AA5934", Offset = "0x1AA5934", VA = "0x1AA5934")]
		public MB_TexSet(MeshBakerMaterialTexture[] tss, Vector2 uvOffset, Vector2 uvScale, MB_TextureTilingTreatment treatment)
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x1AB70F0", Offset = "0x1AB70F0", VA = "0x1AB70F0")]
		internal bool IsEqual(object obj, bool fixOutOfBoundsUVs, bool considerNonTextureProperties, MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender)
		{
			return default(bool);
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x1AB735C", Offset = "0x1AB735C", VA = "0x1AB735C")]
		private Rect GetEncapsulatingSamplingRectIfTilingSame()
		{
			return default(Rect);
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x1AACCA4", Offset = "0x1AACCA4", VA = "0x1AACCA4")]
		public void SetEncapsulatingSamplingRectWhenMergingTexSets(DRect newEncapsulatingSamplingRect)
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x1AB73F0", Offset = "0x1AB73F0", VA = "0x1AB73F0")]
		public void SetEncapsulatingSamplingRectForTesting(int propIdx, DRect newEncapsulatingSamplingRect)
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x1AB743C", Offset = "0x1AB743C", VA = "0x1AB743C")]
		public void SetEncapsulatingRect(int propIdx, bool considerMeshUVs)
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x1AB0D48", Offset = "0x1AB0D48", VA = "0x1AB0D48")]
		public void CreateColoredTexToReplaceNull(string propName, int propIdx, bool considerMeshUVs, MB3_TextureCombiner combiner, Color col)
		{
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x1AB74F8", Offset = "0x1AB74F8", VA = "0x1AB74F8")]
		public void SetThisIsOnlyTexSetInAtlasTrue()
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x1AAC4BC", Offset = "0x1AAC4BC", VA = "0x1AAC4BC")]
		public void SetAllTexturesUseSameMatTilingTrue()
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x1AB7504", Offset = "0x1AB7504", VA = "0x1AB7504")]
		public void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props)
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x1AAFE08", Offset = "0x1AAFE08", VA = "0x1AAFE08")]
		public void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment)
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x1AB75CC", Offset = "0x1AB75CC", VA = "0x1AB75CC")]
		internal void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect)
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x1AB7690", Offset = "0x1AB7690", VA = "0x1AB7690")]
		internal Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex)
		{
			return default(Rect);
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x1AAC524", Offset = "0x1AAC524", VA = "0x1AAC524")]
		internal void CalcInitialFullSamplingRects(bool fixOutOfBoundsUVs)
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x1AAC72C", Offset = "0x1AAC72C", VA = "0x1AAC72C")]
		internal void CalcMatAndUVSamplingRects()
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1AAC88C", Offset = "0x1AAC88C", VA = "0x1AAC88C")]
		public bool AllTexturesAreSameForMerge(MB_TexSet other, bool considerNonTextureProperties, MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender)
		{
			return default(bool);
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x1AB7750", Offset = "0x1AB7750", VA = "0x1AB7750")]
		internal void DrawRectsToMergeGizmos(Color encC, Color innerC)
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x1AAC1A0", Offset = "0x1AAC1A0", VA = "0x1AAC1A0")]
		internal string GetDescription()
		{
			return null;
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x1AB79B8", Offset = "0x1AB79B8", VA = "0x1AB79B8")]
		internal string GetMatSubrectDescriptions()
		{
			return null;
		}
	}
	[Token(Token = "0x2000669")]
	public class MB3_TextureCombinerMerging
	{
		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _considerNonTextureProperties;

		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool fixOutOfBoundsUVs;

		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool LOG_LEVEL_TRACE_MERGE_MAT_SUBRECTS;

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x1AAABA0", Offset = "0x1AAABA0", VA = "0x1AAABA0")]
		public static Rect BuildTransformMeshUV2AtlasRect(bool considerMeshUVs, Rect _atlasRect, Rect _obUVRect, Rect _sourceMaterialTiling, Rect _encapsulatingRect)
		{
			return default(Rect);
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x1AAAF50", Offset = "0x1AAAF50", VA = "0x1AAAF50")]
		public MB3_TextureCombinerMerging(bool considerNonTextureProps, MB3_TextureCombinerNonTextureProperties resultMaterialTexBlender, bool fixObUVs, MB2_LogLevel logLevel)
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x1AAAFBC", Offset = "0x1AAAFBC", VA = "0x1AAAFBC")]
		public void MergeOverlappingDistinctMaterialTexturesAndCalcMaterialSubrects(List<MB_TexSet> distinctMaterialTextures)
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x1AACD44", Offset = "0x1AACD44", VA = "0x1AACD44")]
		public void DoIntegrityCheckMergedEncapsulatingSamplingRects(List<MB_TexSet> distinctMaterialTextures)
		{
		}
	}
	[Token(Token = "0x200066A")]
	public class MB3_TextureCombinerNonTextureProperties
	{
		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool _considerNonTextureProperties;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextureBlender resultMaterialTextureBlender;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextureBlender[] textureBlenders;

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x1AAD6A4", Offset = "0x1AAD6A4", VA = "0x1AAD6A4")]
		public TextureBlender GetTextureBlender()
		{
			return null;
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x1AAD6AC", Offset = "0x1AAD6AC", VA = "0x1AAD6AC")]
		public MB3_TextureCombinerNonTextureProperties(MB2_LogLevel ll, bool considerNonTextureProps)
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x1AAD730", Offset = "0x1AAD730", VA = "0x1AAD730")]
		private static bool InterfaceFilter(Type typeObj, object criteriaObj)
		{
			return default(bool);
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x1AAD784", Offset = "0x1AAD784", VA = "0x1AAD784")]
		internal void FindBestTextureBlender(Material resultMaterial)
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x1AADA24", Offset = "0x1AADA24", VA = "0x1AADA24")]
		internal void LoadTextureBlenders()
		{
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x1AAE000", Offset = "0x1AAE000", VA = "0x1AAE000")]
		internal Color GetColorIfNoTexture(Material m, ShaderTextureProperty shaderPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x1AAE0C8", Offset = "0x1AAE0C8", VA = "0x1AAE0C8")]
		internal bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x1AAE190", Offset = "0x1AAE190", VA = "0x1AAE190")]
		internal Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName)
		{
			return null;
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x1AAD8F4", Offset = "0x1AAD8F4", VA = "0x1AAD8F4")]
		internal TextureBlender FindMatchingTextureBlender(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x1AAE554", Offset = "0x1AAE554", VA = "0x1AAE554")]
		internal void AdjustNonTextureProperties(Material mat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, bool considerTintColor, MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x1AAEF30", Offset = "0x1AAEF30", VA = "0x1AAEF30")]
		internal static Color GetColorIfNoTexture(bool considerNonTextureProps, MB3_TextureCombinerNonTextureProperties blender, Material matIfBlender, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x1AAEF50", Offset = "0x1AAEF50", VA = "0x1AAEF50")]
		private static Color GetColorIfNoTextureIfNoBlender(ShaderTextureProperty texProperty)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x200066B")]
	internal class MB3_TextureCombinerPackerMeshBaker : MB3_TextureCombinerPackerRoot
	{
		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8AE0", Offset = "0xAA8AE0")]
		private sealed class <CreateAtlases>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AtlasPackingResult packedAtlasRects;

			[Token(Token = "0x4002963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4002964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4002965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x4002966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4002967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4002968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Texture2D[] atlases;

			[Token(Token = "0x4002969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Rect[] <uvRects>5__2;

			[Token(Token = "0x400296A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <atlasSizeX>5__3;

			[Token(Token = "0x400296B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <atlasSizeY>5__4;

			[Token(Token = "0x400296C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <propIdx>5__5;

			[Token(Token = "0x400296D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ShaderTextureProperty <property>5__6;

			[Token(Token = "0x400296E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Color[][] <atlasPixels>5__7;

			[Token(Token = "0x400296F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private bool <isNormalMap>5__8;

			[Token(Token = "0x4002970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private int <texSetIdx>5__9;

			[Token(Token = "0x170004FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024E3")]
				[Address(RVA = "0x1935DB8", Offset = "0x1935DB8", VA = "0x1935DB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024E5")]
				[Address(RVA = "0x1935E00", Offset = "0x1935E00", VA = "0x1935E00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024E0")]
			[Address(RVA = "0x1934C14", Offset = "0x1934C14", VA = "0x1934C14")]
			[DebuggerHidden]
			public <CreateAtlases>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x1934C40", Offset = "0x1934C40", VA = "0x1934C40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024E2")]
			[Address(RVA = "0x1934C44", Offset = "0x1934C44", VA = "0x1934C44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024E4")]
			[Address(RVA = "0x1935DC0", Offset = "0x1935DC0", VA = "0x1935DC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8AF0", Offset = "0xAA8AF0")]
		private sealed class <CopyScaledAndTiledToAtlas>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshBakerMaterialTexture source;

			[Token(Token = "0x4002974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4002975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int targX;

			[Token(Token = "0x4002976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int targY;

			[Token(Token = "0x4002977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int targW;

			[Token(Token = "0x4002978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int targH;

			[Token(Token = "0x4002979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public AtlasPadding padding;

			[Token(Token = "0x400297A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public DRect srcSamplingRect;

			[Token(Token = "0x400297B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x400297C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x400297D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public ShaderTextureProperty shaderPropertyName;

			[Token(Token = "0x400297E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public MB_TexSet sourceMaterial;

			[Token(Token = "0x400297F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4002980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Color[][] atlasPixels;

			[Token(Token = "0x4002981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private int <w>5__2;

			[Token(Token = "0x4002982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private int <h>5__3;

			[Token(Token = "0x4002983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private int <i>5__4;

			[Token(Token = "0x4002984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private int <j>5__5;

			[Token(Token = "0x170004FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024E9")]
				[Address(RVA = "0x1934BC4", Offset = "0x1934BC4", VA = "0x1934BC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024EB")]
				[Address(RVA = "0x1934C0C", Offset = "0x1934C0C", VA = "0x1934C0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024E6")]
			[Address(RVA = "0x1934188", Offset = "0x1934188", VA = "0x1934188")]
			[DebuggerHidden]
			public <CopyScaledAndTiledToAtlas>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60024E7")]
			[Address(RVA = "0x19341B4", Offset = "0x19341B4", VA = "0x19341B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024E8")]
			[Address(RVA = "0x19341B8", Offset = "0x19341B8", VA = "0x19341B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024EA")]
			[Address(RVA = "0x1934BCC", Offset = "0x1934BCC", VA = "0x1934BCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x1AAF110", Offset = "0x1AAF110", VA = "0x1AAF110", Slot = "9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1BC4", Offset = "0xAC1BC4")]
		public override IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x1AAF1BC", Offset = "0x1AAF1BC", VA = "0x1AAF1BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1C24", Offset = "0xAC1C24")]
		internal static IEnumerator CopyScaledAndTiledToAtlas(MeshBakerMaterialTexture source, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName, DRect srcSamplingRect, int targX, int targY, int targW, int targH, AtlasPadding padding, Color[][] atlasPixels, bool isNormalMap, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, [Optional] ProgressUpdateDelegate progressInfo, MB2_LogLevel LOG_LEVEL = MB2_LogLevel.info)
		{
			return null;
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x1AAF2B8", Offset = "0x1AAF2B8", VA = "0x1AAF2B8")]
		public MB3_TextureCombinerPackerMeshBaker()
		{
		}
	}
	[Token(Token = "0x200066E")]
	internal class MB3_TextureCombinerPackerMeshBakerFast : MB_ITextureCombinerPacker
	{
		[Token(Token = "0x200066F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8B00", Offset = "0xAA8B00")]
		private sealed class <ConvertTexturesToReadableFormats>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170004FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024F3")]
				[Address(RVA = "0x1935E50", Offset = "0x1935E50", VA = "0x1935E50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000500")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024F5")]
				[Address(RVA = "0x1935E98", Offset = "0x1935E98", VA = "0x1935E98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024F0")]
			[Address(RVA = "0x1935E08", Offset = "0x1935E08", VA = "0x1935E08")]
			[DebuggerHidden]
			public <ConvertTexturesToReadableFormats>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60024F1")]
			[Address(RVA = "0x1935E34", Offset = "0x1935E34", VA = "0x1935E34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024F2")]
			[Address(RVA = "0x1935E38", Offset = "0x1935E38", VA = "0x1935E38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024F4")]
			[Address(RVA = "0x1935E58", Offset = "0x1935E58", VA = "0x1935E58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8B10", Offset = "0xAA8B10")]
		private sealed class <CreateAtlases>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AtlasPackingResult packedAtlasRects;

			[Token(Token = "0x400298A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x400298B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x400298C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x400298D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x400298E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Texture2D[] atlases;

			[Token(Token = "0x400298F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x17000501")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024F9")]
				[Address(RVA = "0x193704C", Offset = "0x193704C", VA = "0x193704C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000502")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024FB")]
				[Address(RVA = "0x1937094", Offset = "0x1937094", VA = "0x1937094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024F6")]
			[Address(RVA = "0x1935EA0", Offset = "0x1935EA0", VA = "0x1935EA0")]
			[DebuggerHidden]
			public <CreateAtlases>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60024F7")]
			[Address(RVA = "0x1935ECC", Offset = "0x1935ECC", VA = "0x1935ECC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024F8")]
			[Address(RVA = "0x1935ED0", Offset = "0x1935ED0", VA = "0x1935ED0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x1937054", Offset = "0x1937054", VA = "0x1937054", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x1AAF2C8", Offset = "0x1AAF2C8", VA = "0x1AAF2C8", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1D24", Offset = "0xAC1D24")]
		public IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x1AAF324", Offset = "0x1AAF324", VA = "0x1AAF324", Slot = "7")]
		public virtual AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x1AAF5BC", Offset = "0x1AAF5BC", VA = "0x1AAF5BC", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1D84", Offset = "0xAC1D84")]
		public IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x1AAF668", Offset = "0x1AAF668", VA = "0x1AAF668")]
		public MB3_TextureCombinerPackerMeshBakerFast()
		{
		}
	}
	[Token(Token = "0x2000671")]
	internal class MB3_TextureCombinerPackerMeshBakerHorizontalVertical : MB3_TextureCombinerPackerMeshBaker
	{
		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x1AAF670", Offset = "0x1AAF670", VA = "0x1AAF670", Slot = "8")]
		public override AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x1AB0000", Offset = "0x1AB0000", VA = "0x1AB0000")]
		public static AtlasPackingResult MergeAtlasPackingResultStackBonA(AtlasPackingResult a, AtlasPackingResult b, int maxHeightDim, int maxWidthDim, bool stretchBToAtlasWidth)
		{
			return null;
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x1AB06C8", Offset = "0x1AB06C8", VA = "0x1AB06C8")]
		public MB3_TextureCombinerPackerMeshBakerHorizontalVertical()
		{
		}
	}
	[Token(Token = "0x2000672")]
	internal class MB3_TextureCombinerPackerOneTextureInAtlas : MB_ITextureCombinerPacker
	{
		[Token(Token = "0x2000673")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8B20", Offset = "0xAA8B20")]
		private sealed class <ConvertTexturesToReadableFormats>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000503")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002506")]
				[Address(RVA = "0x19370E4", Offset = "0x19370E4", VA = "0x19370E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000504")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002508")]
				[Address(RVA = "0x193712C", Offset = "0x193712C", VA = "0x193712C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002503")]
			[Address(RVA = "0x193709C", Offset = "0x193709C", VA = "0x193709C")]
			[DebuggerHidden]
			public <ConvertTexturesToReadableFormats>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002504")]
			[Address(RVA = "0x19370C8", Offset = "0x19370C8", VA = "0x19370C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002505")]
			[Address(RVA = "0x19370CC", Offset = "0x19370CC", VA = "0x19370CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002507")]
			[Address(RVA = "0x19370EC", Offset = "0x19370EC", VA = "0x19370EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8B30", Offset = "0xAA8B30")]
		private sealed class <CreateAtlases>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4002995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4002996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Texture2D[] atlases;

			[Token(Token = "0x17000505")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600250C")]
				[Address(RVA = "0x193742C", Offset = "0x193742C", VA = "0x193742C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000506")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600250E")]
				[Address(RVA = "0x1937474", Offset = "0x1937474", VA = "0x1937474", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002509")]
			[Address(RVA = "0x1937134", Offset = "0x1937134", VA = "0x1937134")]
			[DebuggerHidden]
			public <CreateAtlases>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600250A")]
			[Address(RVA = "0x1937160", Offset = "0x1937160", VA = "0x1937160", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600250B")]
			[Address(RVA = "0x1937164", Offset = "0x1937164", VA = "0x1937164", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600250D")]
			[Address(RVA = "0x1937434", Offset = "0x1937434", VA = "0x1937434", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x1AB06D0", Offset = "0x1AB06D0", VA = "0x1AB06D0", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1E84", Offset = "0xAC1E84")]
		public IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x1AB072C", Offset = "0x1AB072C", VA = "0x1AB072C", Slot = "5")]
		public AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x1AB0AC8", Offset = "0x1AB0AC8", VA = "0x1AB0AC8", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1EE4", Offset = "0xAC1EE4")]
		public IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x1AB0B48", Offset = "0x1AB0B48", VA = "0x1AB0B48")]
		public MB3_TextureCombinerPackerOneTextureInAtlas()
		{
		}
	}
	[Token(Token = "0x2000675")]
	internal class MB3_TextureCombinerPackerUnity : MB3_TextureCombinerPackerRoot
	{
		[Token(Token = "0x2000676")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8B40", Offset = "0xAA8B40")]
		private sealed class <CreateAtlases>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AtlasPackingResult packedAtlasRects;

			[Token(Token = "0x400299A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x400299B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x400299C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x400299D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x400299E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x400299F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Texture2D[] atlases;

			[Token(Token = "0x17000507")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002517")]
				[Address(RVA = "0x19387CC", Offset = "0x19387CC", VA = "0x19387CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000508")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002519")]
				[Address(RVA = "0x1938814", Offset = "0x1938814", VA = "0x1938814", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002514")]
			[Address(RVA = "0x19377B8", Offset = "0x19377B8", VA = "0x19377B8")]
			[DebuggerHidden]
			public <CreateAtlases>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002515")]
			[Address(RVA = "0x19377E4", Offset = "0x19377E4", VA = "0x19377E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002516")]
			[Address(RVA = "0x19377E8", Offset = "0x19377E8", VA = "0x19377E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002518")]
			[Address(RVA = "0x19387D4", Offset = "0x19387D4", VA = "0x19387D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x1AB0EF4", Offset = "0x1AB0EF4", VA = "0x1AB0EF4", Slot = "8")]
		public override AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x1AB0FEC", Offset = "0x1AB0FEC", VA = "0x1AB0FEC", Slot = "9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC1FE4", Offset = "0xAC1FE4")]
		public override IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x1AB1094", Offset = "0x1AB1094", VA = "0x1AB1094")]
		internal static Texture2D _copyTexturesIntoAtlas(Texture2D[] texToPack, int padding, Rect[] rs, int w, int h, MB3_TextureCombiner combiner)
		{
			return null;
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x1AB1318", Offset = "0x1AB1318", VA = "0x1AB1318")]
		internal static Texture2D GetAdjustedForScaleAndOffset2(string propertyName, MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x1AB1B78", Offset = "0x1AB1B78", VA = "0x1AB1B78")]
		public MB3_TextureCombinerPackerUnity()
		{
		}
	}
	[Token(Token = "0x2000677")]
	public class MB3_TextureCombinerPipeline
	{
		[Token(Token = "0x2000678")]
		public struct CreateAtlasForProperty
		{
			[Token(Token = "0x40029A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool allTexturesAreNull;

			[Token(Token = "0x40029A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool allTexturesAreSame;

			[Token(Token = "0x40029A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool allNonTexturePropsAreSame;

			[Token(Token = "0x600252C")]
			[Address(RVA = "0x193C3D0", Offset = "0x193C3D0", VA = "0x193C3D0", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x2000679")]
		internal class TexturePipelineData
		{
			[Token(Token = "0x40029A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal MB2_TextureBakeResults _textureBakeResults;

			[Token(Token = "0x40029A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int _atlasPadding;

			[Token(Token = "0x40029A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int _maxAtlasSize;

			[Token(Token = "0x40029A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool _resizePowerOfTwoTextures;

			[Token(Token = "0x40029A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			internal bool _fixOutOfBoundsUVs;

			[Token(Token = "0x40029A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int _maxTilingBakeSize;

			[Token(Token = "0x40029AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool _saveAtlasesAsAssets;

			[Token(Token = "0x40029AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal MB2_PackingAlgorithmEnum _packingAlgorithm;

			[Token(Token = "0x40029AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool _meshBakerTexturePackerForcePowerOfTwo;

			[Token(Token = "0x40029AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal List<ShaderTextureProperty> _customShaderPropNames;

			[Token(Token = "0x40029AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool _normalizeTexelDensity;

			[Token(Token = "0x40029AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			internal bool _considerNonTextureProperties;

			[Token(Token = "0x40029B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal MB3_TextureCombinerNonTextureProperties nonTexturePropertyBlender;

			[Token(Token = "0x40029B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal List<MB_TexSet> distinctMaterialTextures;

			[Token(Token = "0x40029B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal List<GameObject> allObjsToMesh;

			[Token(Token = "0x40029B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal List<Material> allowedMaterialsFilter;

			[Token(Token = "0x40029B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x40029B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal CreateAtlasForProperty[] allTexturesAreNullAndSameColor;

			[Token(Token = "0x40029B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal Material resultMaterial;

			[Token(Token = "0x17000509")]
			internal int numAtlases
			{
				[Token(Token = "0x600252D")]
				[Address(RVA = "0x1935D68", Offset = "0x1935D68", VA = "0x1935D68")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600252E")]
			[Address(RVA = "0x1933AF8", Offset = "0x1933AF8", VA = "0x1933AF8")]
			internal bool OnlyOneTextureInAtlasReuseTextures()
			{
				return default(bool);
			}

			[Token(Token = "0x600252F")]
			[Address(RVA = "0x193C498", Offset = "0x193C498", VA = "0x193C498")]
			public TexturePipelineData()
			{
			}
		}

		[Token(Token = "0x200067A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8B50", Offset = "0xAA8B50")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40029B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TexturePipelineData data;

			[Token(Token = "0x40029B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int i;

			[Token(Token = "0x40029B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<ShaderTextureProperty> <>9__0;

			[Token(Token = "0x6002530")]
			[Address(RVA = "0x193881C", Offset = "0x193881C", VA = "0x193881C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002531")]
			[Address(RVA = "0x1938824", Offset = "0x1938824", VA = "0x1938824")]
			internal bool <_CollectPropertyNames>b__0(ShaderTextureProperty x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8B60", Offset = "0xAA8B60")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40029BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TexturePipelineData data;

			[Token(Token = "0x6002532")]
			[Address(RVA = "0x19388C0", Offset = "0x19388C0", VA = "0x19388C0")]
			public <>c__DisplayClass7_0()
			{
			}
		}

		[Token(Token = "0x200067C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8B70", Offset = "0xAA8B70")]
		private sealed class <>c__DisplayClass7_1
		{
			[Token(Token = "0x40029BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB_TexSet setOfTexs;

			[Token(Token = "0x40029BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass7_0 CS$<>8__locals1;

			[Token(Token = "0x6002533")]
			[Address(RVA = "0x19388C8", Offset = "0x19388C8", VA = "0x19388C8")]
			public <>c__DisplayClass7_1()
			{
			}

			[Token(Token = "0x6002534")]
			[Address(RVA = "0x19388D0", Offset = "0x19388D0", VA = "0x19388D0")]
			internal bool <__Step1_CollectDistinctMatTexturesAndUsedObjects>b__0(MB_TexSet x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200067D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8B80", Offset = "0xAA8B80")]
		private sealed class <__Step1_CollectDistinctMatTexturesAndUsedObjects>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TexturePipelineData data;

			[Token(Token = "0x40029C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x40029C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x40029C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x40029C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x40029C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<GameObject> usedObjsToMesh;

			[Token(Token = "0x1700050A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002538")]
				[Address(RVA = "0x193B5B8", Offset = "0x193B5B8", VA = "0x193B5B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600253A")]
				[Address(RVA = "0x193B600", Offset = "0x193B600", VA = "0x193B600", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002535")]
			[Address(RVA = "0x1939A28", Offset = "0x1939A28", VA = "0x1939A28")]
			[DebuggerHidden]
			public <__Step1_CollectDistinctMatTexturesAndUsedObjects>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002536")]
			[Address(RVA = "0x1939A54", Offset = "0x1939A54", VA = "0x1939A54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002537")]
			[Address(RVA = "0x1939A58", Offset = "0x1939A58", VA = "0x1939A58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002539")]
			[Address(RVA = "0x193B5C0", Offset = "0x193B5C0", VA = "0x193B5C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200067E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8B90", Offset = "0xAA8B90")]
		private sealed class <CalculateIdealSizesForTexturesInAtlasAndPadding>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TexturePipelineData data;

			[Token(Token = "0x40029C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x1700050C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600253E")]
				[Address(RVA = "0x19399D8", Offset = "0x19399D8", VA = "0x19399D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002540")]
				[Address(RVA = "0x1939A20", Offset = "0x1939A20", VA = "0x1939A20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600253B")]
			[Address(RVA = "0x1938914", Offset = "0x1938914", VA = "0x1938914")]
			[DebuggerHidden]
			public <CalculateIdealSizesForTexturesInAtlasAndPadding>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600253C")]
			[Address(RVA = "0x1938940", Offset = "0x1938940", VA = "0x1938940", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600253D")]
			[Address(RVA = "0x1938944", Offset = "0x1938944", VA = "0x1938944", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600253F")]
			[Address(RVA = "0x19399E0", Offset = "0x19399E0", VA = "0x19399E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8BA0", Offset = "0xAA8BA0")]
		private sealed class <__Step3_BuildAndSaveAtlasesAndStoreResults>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TexturePipelineData data;

			[Token(Token = "0x40029CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x40029CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB_ITextureCombinerPacker packer;

			[Token(Token = "0x40029CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x40029CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x40029D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public AtlasPackingResult atlasPackingResult;

			[Token(Token = "0x40029D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x40029D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public StringBuilder report;

			[Token(Token = "0x40029D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x40029D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Stopwatch <sw>5__2;

			[Token(Token = "0x40029D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Texture2D[] <atlases>5__3;

			[Token(Token = "0x1700050E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002544")]
				[Address(RVA = "0x193C380", Offset = "0x193C380", VA = "0x193C380", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002546")]
				[Address(RVA = "0x193C3C8", Offset = "0x193C3C8", VA = "0x193C3C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002541")]
			[Address(RVA = "0x193B608", Offset = "0x193B608", VA = "0x193B608")]
			[DebuggerHidden]
			public <__Step3_BuildAndSaveAtlasesAndStoreResults>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002542")]
			[Address(RVA = "0x193B634", Offset = "0x193B634", VA = "0x193B634", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002543")]
			[Address(RVA = "0x193B638", Offset = "0x193B638", VA = "0x193B638", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002545")]
			[Address(RVA = "0x193C388", Offset = "0x193C388", VA = "0x193C388", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ShaderTextureProperty[] shaderTexPropertyNames;

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x1AB1B80", Offset = "0x1AB1B80", VA = "0x1AB1B80")]
		internal static bool _ShouldWeCreateAtlasForThisProperty(int propertyIndex, bool considerNonTextureProperties, CreateAtlasForProperty[] allTexturesAreNullAndSameColor)
		{
			return default(bool);
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x1AAA0BC", Offset = "0x1AAA0BC", VA = "0x1AAA0BC")]
		internal static bool _CollectPropertyNames(TexturePipelineData data, MB2_LogLevel LOG_LEVEL)
		{
			return default(bool);
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x1AB1BE8", Offset = "0x1AB1BE8", VA = "0x1AB1BE8")]
		internal static bool _ShouldWeCreateAtlasForThisProperty(int propertyIndex, CreateAtlasForProperty[] allTexturesAreNullAndSameColor, TexturePipelineData data)
		{
			return default(bool);
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x1AAA92C", Offset = "0x1AAA92C", VA = "0x1AAA92C")]
		public static Texture GetTextureConsideringStandardShaderKeywords(string shaderName, Material mat, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x1AB1C58", Offset = "0x1AB1C58", VA = "0x1AB1C58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC2094", Offset = "0xAC2094")]
		internal static IEnumerator __Step1_CollectDistinctMatTexturesAndUsedObjects(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, List<GameObject> usedObjsToMesh, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x1AB1CFC", Offset = "0x1AB1CFC", VA = "0x1AB1CFC")]
		private static CreateAtlasForProperty[] CalculateAllTexturesAreNullAndSameColor(TexturePipelineData data, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x1AB228C", Offset = "0x1AB228C", VA = "0x1AB228C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC20F4", Offset = "0xAC20F4")]
		internal static IEnumerator CalculateIdealSizesForTexturesInAtlasAndPadding(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x1AB2308", Offset = "0x1AB2308", VA = "0x1AB2308")]
		internal static AtlasPackingResult[] __Step3_RunTexturePacker(TexturePipelineData data, MB_ITextureCombinerPacker texturePacker, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x1AB252C", Offset = "0x1AB252C", VA = "0x1AB252C")]
		internal static MB_ITextureCombinerPacker CreatePacker(bool onlyOneTextureInAtlasReuseTextures, MB2_PackingAlgorithmEnum packingAlgorithm)
		{
			return null;
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x1AB25F8", Offset = "0x1AB25F8", VA = "0x1AB25F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC2154", Offset = "0xAC2154")]
		internal static IEnumerator __Step3_BuildAndSaveAtlasesAndStoreResults(MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, ProgressUpdateDelegate progressInfo, TexturePipelineData data, MB3_TextureCombiner combiner, MB_ITextureCombinerPacker packer, AtlasPackingResult atlasPackingResult, MB2_EditorMethodsInterface textureEditorMethods, MB_AtlasesAndRects resultAtlasesAndRects, StringBuilder report, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x1AB26B0", Offset = "0x1AB26B0", VA = "0x1AB26B0")]
		internal static StringBuilder GenerateReport(TexturePipelineData data)
		{
			return null;
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x1AAFECC", Offset = "0x1AAFECC", VA = "0x1AAFECC")]
		internal static MB2_TexturePacker CreateTexturePacker(MB2_PackingAlgorithmEnum _packingAlgorithm)
		{
			return null;
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x1AB17E8", Offset = "0x1AB17E8", VA = "0x1AB17E8")]
		internal static Vector2 GetAdjustedForScaleAndOffset2Dimensions(MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, TexturePipelineData data, MB2_LogLevel LOG_LEVEL)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x1AB31E0", Offset = "0x1AB31E0", VA = "0x1AB31E0")]
		internal static Color32 ConvertNormalFormatFromUnity_ToStandard(Color32 c)
		{
			return default(Color32);
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x1AB32B8", Offset = "0x1AB32B8", VA = "0x1AB32B8")]
		internal static float GetSubmeshArea(Mesh m, int submeshIdx)
		{
			return default(float);
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x1AB3448", Offset = "0x1AB3448", VA = "0x1AB3448")]
		internal static bool IsPowerOfTwo(int x)
		{
			return default(bool);
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x1AB3458", Offset = "0x1AB3458", VA = "0x1AB3458")]
		public MB3_TextureCombinerPipeline()
		{
		}
	}
}
namespace HoloToolkit.Unity
{
	[Token(Token = "0x2000680")]
	public static class HapticsExtensions
	{
		[Token(Token = "0x40029D6")]
		private const ushort ContinuousBuzzWaveform = 4100;
	}
}
namespace HoloToolkit.Unity.Playspace
{
	[Token(Token = "0x2000681")]
	public class PlayspaceManager : MonoBehaviour
	{
		[Token(Token = "0x40029D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8E04", Offset = "0xAB8E04")]
		public GameObject FloorQuad;

		[Token(Token = "0x40029D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject floorQuadInstance;

		[Token(Token = "0x40029D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform FloorRoot;

		[Token(Token = "0x40029DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8E3C", Offset = "0xAB8E3C")]
		public Material PlayspaceBoundsMaterial;

		[Token(Token = "0x40029DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform PlayspaceBoundsRoot;

		[Token(Token = "0x40029DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool updatePlayspaceBounds;

		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> boundingBoxLines;

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x161D024", Offset = "0x161D024", VA = "0x161D024")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x161D084", Offset = "0x161D084", VA = "0x161D084")]
		private void Start()
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x161D1D0", Offset = "0x161D1D0", VA = "0x161D1D0")]
		private void Update()
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x161D1E0", Offset = "0x161D1E0", VA = "0x161D1E0")]
		private void UpdatePlayspaceBounds()
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x161D38C", Offset = "0x161D38C", VA = "0x161D38C")]
		private void DrawLine(Vector3 start, Vector3 end)
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x161D550", Offset = "0x161D550", VA = "0x161D550")]
		private void StageRoot_OnTrackingChanged(bool located)
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x161D24C", Offset = "0x161D24C", VA = "0x161D24C")]
		private void RemoveBoundingBox()
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x161D5F0", Offset = "0x161D5F0", VA = "0x161D5F0")]
		public PlayspaceManager()
		{
		}
	}
}
namespace easy
{
	[Token(Token = "0x2000682")]
	public class Crypto
	{
		[Token(Token = "0x600254F")]
		[Address(RVA = "0x1088944", Offset = "0x1088944", VA = "0x1088944")]
		public static byte[] encrypt(string toEncrypt, string key)
		{
			return null;
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x1088B98", Offset = "0x1088B98", VA = "0x1088B98")]
		public static string decrypt(byte[] toEncryptArray, string key)
		{
			return null;
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x1088DEC", Offset = "0x1088DEC", VA = "0x1088DEC")]
		public Crypto()
		{
		}
	}
}
namespace Scingularity
{
	[Serializable]
	[Token(Token = "0x2000683")]
	[ExecuteInEditMode]
	public class DisableAllFrustumCulling : MonoBehaviour
	{
		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new bool enabled;

		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float distance;

		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool executeInEditMode;

		[Token(Token = "0x40029E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera target;

		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool wasOrthographic;

		[Token(Token = "0x40029E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float oldSize;

		[Token(Token = "0x40029E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 oldPosition;

		[Token(Token = "0x40029E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float oldFarClipPlane;

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x108F9E4", Offset = "0x108F9E4", VA = "0x108F9E4", Slot = "4")]
		public virtual void OnPreCull()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x108FCB8", Offset = "0x108FCB8", VA = "0x108FCB8", Slot = "5")]
		public virtual void OnPreRender()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x108FDC8", Offset = "0x108FDC8", VA = "0x108FDC8")]
		public DisableAllFrustumCulling()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000684")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA8BC0", Offset = "0xAA8BC0")]
	public class MouseOrbitOmni4 : MonoBehaviour
	{
		[Token(Token = "0x40029E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40029E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float distance;

		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode key;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool follow;

		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8E74", Offset = "0xAB8E74")]
		public bool rotate;

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8EAC", Offset = "0xAB8EAC")]
		public Vector3 up;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion offsetRotation;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion delta;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float oldDistance;

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xBF02C4", Offset = "0xBF02C4", VA = "0xBF02C4", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0xBF05F0", Offset = "0xBF05F0", VA = "0xBF05F0")]
		public void Zoom(float distance)
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0xBF05F8", Offset = "0xBF05F8", VA = "0xBF05F8", Slot = "5")]
		public virtual void Orient(Vector3 up)
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xBF0680", Offset = "0xBF0680", VA = "0xBF0680", Slot = "6")]
		public virtual void Orient(Transform gravitySource)
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xBF06FC", Offset = "0xBF06FC", VA = "0xBF06FC")]
		public MouseOrbitOmni4()
		{
		}
	}
}
namespace UnityStandardAssets.Characters.FirstPerson
{
	[Token(Token = "0x2000685")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8BF8", Offset = "0xAA8BF8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8BF8", Offset = "0xAA8BF8")]
	public class FirstPersonController : MonoBehaviour
	{
		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_IsWalking;

		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_WalkSpeed;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_RunSpeed;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB8F14", Offset = "0xAB8F14")]
		private float m_RunstepLenghten;

		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_StickToGroundForce;

		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MouseLook m_MouseLook;

		[Token(Token = "0x40029F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseFovKick;

		[Token(Token = "0x40029FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityStandardAssets.Utility.FOVKick m_FovKick;

		[Token(Token = "0x40029FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_UseHeadBob;

		[Token(Token = "0x40029FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityStandardAssets.Utility.CurveControlledBob m_HeadBob;

		[Token(Token = "0x40029FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityStandardAssets.Utility.LerpControlledBob m_JumpBob;

		[Token(Token = "0x40029FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_StepInterval;

		[Token(Token = "0x40029FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip[] m_FootstepSounds;

		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip m_JumpSound;

		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioClip m_LandSound;

		[Token(Token = "0x4002A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Camera m_Camera;

		[Token(Token = "0x4002A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_Jump;

		[Token(Token = "0x4002A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_YRotation;

		[Token(Token = "0x4002A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 m_Input;

		[Token(Token = "0x4002A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x4002A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4002A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_StepCycle;

		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_NextStep;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool m_Jumping;

		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x13C1418", Offset = "0x13C1418", VA = "0x13C1418")]
		private void Start()
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x13C1530", Offset = "0x13C1530", VA = "0x13C1530")]
		private void Update()
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x13C16AC", Offset = "0x13C16AC", VA = "0x13C16AC")]
		private void PlayLandingSound()
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0x13C1700", Offset = "0x13C1700", VA = "0x13C1700")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x13C1B68", Offset = "0x13C1B68", VA = "0x13C1B68")]
		private void PlayJumpSound()
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x13C1BA8", Offset = "0x13C1BA8", VA = "0x13C1BA8")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x13C1E74", Offset = "0x13C1E74", VA = "0x13C1E74")]
		private void PlayFootStepAudio()
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x13C1CAC", Offset = "0x13C1CAC", VA = "0x13C1CAC")]
		private void UpdateCameraPosition(float speed)
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x13C19A8", Offset = "0x13C19A8", VA = "0x13C19A8")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x13C1654", Offset = "0x13C1654", VA = "0x13C1654")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x13C1FC0", Offset = "0x13C1FC0", VA = "0x13C1FC0")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x13C20FC", Offset = "0x13C20FC", VA = "0x13C20FC")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x2000686")]
	public class HeadBob : MonoBehaviour
	{
		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera Camera;

		[Token(Token = "0x4002A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityStandardAssets.Utility.CurveControlledBob motionBob;

		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityStandardAssets.Utility.LerpControlledBob jumpAndLandingBob;

		[Token(Token = "0x4002A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RigidbodyFirstPersonController rigidbodyFirstPersonController;

		[Token(Token = "0x4002A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float StrideInterval;

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB9024", Offset = "0xAB9024")]
		public float RunningStrideLengthen;

		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x122493C", Offset = "0x122493C", VA = "0x122493C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x1224998", Offset = "0x1224998", VA = "0x1224998")]
		private void Update()
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x1224BA4", Offset = "0x1224BA4", VA = "0x1224BA4")]
		public HeadBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000687")]
	public class MouseLook
	{
		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float XSensitivity;

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float YSensitivity;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clampVerticalRotation;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinimumX;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaximumX;

		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool smooth;

		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4002A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x4002A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x4002A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_cursorIsLocked;

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xBEEE9C", Offset = "0xBEEE9C", VA = "0xBEEE9C")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xBEEEF0", Offset = "0xBEEEF0", VA = "0xBEEEF0")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xBEF240", Offset = "0xBEF240", VA = "0xBEF240")]
		public void SetCursorLock(bool value)
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xBEF230", Offset = "0xBEF230", VA = "0xBEF230")]
		public void UpdateCursorLock()
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0xBEF274", Offset = "0xBEF274", VA = "0xBEF274")]
		private void InternalLockUpdate()
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xBEF1C8", Offset = "0xBEF1C8", VA = "0xBEF1C8")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xBEF2F0", Offset = "0xBEF2F0", VA = "0xBEF2F0")]
		public MouseLook()
		{
		}
	}
	[Token(Token = "0x2000688")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8C8C", Offset = "0xAA8C8C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8C8C", Offset = "0xAA8C8C")]
	public class RigidbodyFirstPersonController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000689")]
		public class MovementSettings
		{
			[Token(Token = "0x4002A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float ForwardSpeed;

			[Token(Token = "0x4002A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float BackwardSpeed;

			[Token(Token = "0x4002A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float StrafeSpeed;

			[Token(Token = "0x4002A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float RunMultiplier;

			[Token(Token = "0x4002A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode RunKey;

			[Token(Token = "0x4002A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float JumpForce;

			[Token(Token = "0x4002A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve SlopeCurveModifier;

			[Token(Token = "0x4002A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[HideInInspector]
			public float CurrentTargetSpeed;

			[Token(Token = "0x4002A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool m_Running;

			[Token(Token = "0x17000514")]
			public bool Running
			{
				[Token(Token = "0x600257E")]
				[Address(RVA = "0xE6634C", Offset = "0xE6634C", VA = "0xE6634C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600257D")]
			[Address(RVA = "0xE6628C", Offset = "0xE6628C", VA = "0xE6628C")]
			public void UpdateDesiredTargetSpeed(Vector2 input)
			{
			}

			[Token(Token = "0x600257F")]
			[Address(RVA = "0xE66354", Offset = "0xE66354", VA = "0xE66354")]
			public MovementSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200068A")]
		public class AdvancedSettings
		{
			[Token(Token = "0x4002A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float groundCheckDistance;

			[Token(Token = "0x4002A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float stickToGroundHelperDistance;

			[Token(Token = "0x4002A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float slowDownRate;

			[Token(Token = "0x4002A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool airControl;

			[Token(Token = "0x4002A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB904C", Offset = "0xAB904C")]
			public float shellOffset;

			[Token(Token = "0x6002580")]
			[Address(RVA = "0xE66270", Offset = "0xE66270", VA = "0xE66270")]
			public AdvancedSettings()
			{
			}
		}

		[Token(Token = "0x4002A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x4002A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovementSettings movementSettings;

		[Token(Token = "0x4002A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MouseLook mouseLook;

		[Token(Token = "0x4002A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AdvancedSettings advancedSettings;

		[Token(Token = "0x4002A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_RigidBody;

		[Token(Token = "0x4002A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x4002A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_YRotation;

		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_GroundContactNormal;

		[Token(Token = "0x4002A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_Jump;

		[Token(Token = "0x4002A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4002A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_Jumping;

		[Token(Token = "0x4002A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool m_IsGrounded;

		[Token(Token = "0x17000510")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6002570")]
			[Address(RVA = "0xE74B5C", Offset = "0xE74B5C", VA = "0xE74B5C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000511")]
		public bool Grounded
		{
			[Token(Token = "0x6002571")]
			[Address(RVA = "0xE74B78", Offset = "0xE74B78", VA = "0xE74B78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000512")]
		public bool Jumping
		{
			[Token(Token = "0x6002572")]
			[Address(RVA = "0xE74B80", Offset = "0xE74B80", VA = "0xE74B80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000513")]
		public bool Running
		{
			[Token(Token = "0x6002573")]
			[Address(RVA = "0xE74B88", Offset = "0xE74B88", VA = "0xE74B88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xE74BA4", Offset = "0xE74BA4", VA = "0xE74BA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xE74C5C", Offset = "0xE74C5C", VA = "0xE74C5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xE74E6C", Offset = "0xE74E6C", VA = "0xE74E6C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xE753A0", Offset = "0xE753A0", VA = "0xE753A0")]
		private float SlopeMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xE75414", Offset = "0xE75414", VA = "0xE75414")]
		private void StickToGroundHelper()
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xE752D0", Offset = "0xE752D0", VA = "0xE752D0")]
		private Vector2 GetInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xE74CF4", Offset = "0xE74CF4", VA = "0xE74CF4")]
		private void RotateView()
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0xE75150", Offset = "0xE75150", VA = "0xE75150")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xE755EC", Offset = "0xE755EC", VA = "0xE755EC")]
		public RigidbodyFirstPersonController()
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Serializable]
	[Token(Token = "0x200068B")]
	public class CurveControlledBob
	{
		[Token(Token = "0x4002A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x4002A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x4002A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x4002A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x4002A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x4002A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4002A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x1089374", Offset = "0x1089374", VA = "0x1089374")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x1089418", Offset = "0x1089418", VA = "0x1089418")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x1089514", Offset = "0x1089514", VA = "0x1089514")]
		public CurveControlledBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200068C")]
	public class FOVKick
	{
		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8D20", Offset = "0xAA8D20")]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x4002A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000515")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600258D")]
				[Address(RVA = "0xCB91BC", Offset = "0xCB91BC", VA = "0xCB91BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000516")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600258F")]
				[Address(RVA = "0xCB9204", Offset = "0xCB9204", VA = "0xCB9204", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600258A")]
			[Address(RVA = "0xCB905C", Offset = "0xCB905C", VA = "0xCB905C")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600258B")]
			[Address(RVA = "0xCB9088", Offset = "0xCB9088", VA = "0xCB9088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600258C")]
			[Address(RVA = "0xCB908C", Offset = "0xCB908C", VA = "0xCB908C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600258E")]
			[Address(RVA = "0xCB91C4", Offset = "0xCB91C4", VA = "0xCB91C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8D30", Offset = "0xAA8D30")]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x4002A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000517")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002593")]
				[Address(RVA = "0xCB900C", Offset = "0xCB900C", VA = "0xCB900C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000518")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002595")]
				[Address(RVA = "0xCB9054", Offset = "0xCB9054", VA = "0xCB9054", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002590")]
			[Address(RVA = "0xCB8E98", Offset = "0xCB8E98", VA = "0xCB8E98")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002591")]
			[Address(RVA = "0xCB8EC4", Offset = "0xCB8EC4", VA = "0xCB8EC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002592")]
			[Address(RVA = "0xCB8EC8", Offset = "0xCB8EC8", VA = "0xCB8EC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002594")]
			[Address(RVA = "0xCB9014", Offset = "0xCB9014", VA = "0xCB9014", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x4002A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x1C3B624", Offset = "0x1C3B624", VA = "0x1C3B624")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x1C3B664", Offset = "0x1C3B664", VA = "0x1C3B664")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x1C3B750", Offset = "0x1C3B750", VA = "0x1C3B750")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x1C3B758", Offset = "0x1C3B758", VA = "0x1C3B758")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC22A4", Offset = "0xAC22A4")]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x1C3B7C4", Offset = "0x1C3B7C4", VA = "0x1C3B7C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC2304", Offset = "0xAC2304")]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x1C3B830", Offset = "0x1C3B830", VA = "0x1C3B830")]
		public FOVKick()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200068F")]
	public class LerpControlledBob
	{
		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAA8D40", Offset = "0xAA8D40")]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpControlledBob <>4__this;

			[Token(Token = "0x4002A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000519")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600259C")]
				[Address(RVA = "0xCC2C48", Offset = "0xCC2C48", VA = "0xCC2C48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600259E")]
				[Address(RVA = "0xCC2C90", Offset = "0xCC2C90", VA = "0xCC2C90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002599")]
			[Address(RVA = "0xCC2A8C", Offset = "0xCC2A8C", VA = "0xCC2A8C")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600259A")]
			[Address(RVA = "0xCC2AB8", Offset = "0xCC2AB8", VA = "0xCC2AB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600259B")]
			[Address(RVA = "0xCC2ABC", Offset = "0xCC2ABC", VA = "0xCC2ABC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600259D")]
			[Address(RVA = "0xCC2C50", Offset = "0xCC2C50", VA = "0xCC2C50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xBD4F28", Offset = "0xBD4F28", VA = "0xBD4F28")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0xBD4F30", Offset = "0xBD4F30", VA = "0xBD4F30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAC2404", Offset = "0xAC2404")]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0xBD4F9C", Offset = "0xBD4F9C", VA = "0xBD4F9C")]
		public LerpControlledBob()
		{
		}
	}
}
namespace UnityStandardAssets.CinematicEffects
{
	[Token(Token = "0x2000691")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xAA8D50", Offset = "0xAA8D50")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAA8D50", Offset = "0xAA8D50")]
	[ExecuteInEditMode]
	[ImageEffectAllowedInSceneView]
	public class Bloom_RFX4 : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000692")]
		public struct Settings
		{
			[Token(Token = "0x4002A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB90DC", Offset = "0xAB90DC")]
			public float threshold;

			[Token(Token = "0x4002A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB9128", Offset = "0xAB9128")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB9128", Offset = "0xAB9128")]
			public float softKnee;

			[Token(Token = "0x4002A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB918C", Offset = "0xAB918C")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB918C", Offset = "0xAB918C")]
			public float radius;

			[Token(Token = "0x4002A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB91F0", Offset = "0xAB91F0")]
			public float intensity;

			[Token(Token = "0x4002A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB923C", Offset = "0xAB923C")]
			[SerializeField]
			public bool highQuality;

			[Token(Token = "0x4002A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB9288", Offset = "0xAB9288")]
			[SerializeField]
			public bool antiFlicker;

			[Token(Token = "0x4002A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB92D4", Offset = "0xAB92D4")]
			public Texture dirtTexture;

			[Token(Token = "0x4002A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB930C", Offset = "0xAB930C")]
			[AttributeAttribute(Name = "MinAttribute_RFX4", RVA = "0xAB930C", Offset = "0xAB930C")]
			public float dirtIntensity;

			[Token(Token = "0x1700051D")]
			public float thresholdGamma
			{
				[Token(Token = "0x60025A7")]
				[Address(RVA = "0xE90C60", Offset = "0xE90C60", VA = "0xE90C60")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60025A6")]
				[Address(RVA = "0xE90C58", Offset = "0xE90C58", VA = "0xE90C58")]
				set
				{
				}
			}

			[Token(Token = "0x1700051E")]
			public float thresholdLinear
			{
				[Token(Token = "0x60025A9")]
				[Address(RVA = "0xE90C98", Offset = "0xE90C98", VA = "0xE90C98")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60025A8")]
				[Address(RVA = "0xE90C70", Offset = "0xE90C70", VA = "0xE90C70")]
				set
				{
				}
			}

			[Token(Token = "0x1700051F")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60025AA")]
				[Address(RVA = "0xE90CBC", Offset = "0xE90CBC", VA = "0xE90CBC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4002A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x4002A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private Shader m_Shader;

		[Token(Token = "0x4002A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_Material;

		[Token(Token = "0x4002A5D")]
		private const int kMaxIterations = 16;

		[Token(Token = "0x4002A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture[] m_blurBuffer1;

		[Token(Token = "0x4002A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture[] m_blurBuffer2;

		[Token(Token = "0x4002A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_Threshold;

		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_Curve;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_PrefilterOffs;

		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_SampleScale;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_Intensity;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_DirtTex;

		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_DirtIntensity;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_BaseTex;

		[Token(Token = "0x1700051B")]
		public Shader shader
		{
			[Token(Token = "0x600259F")]
			[Address(RVA = "0xFFD768", Offset = "0xFFD768", VA = "0xFFD768")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051C")]
		public Material material
		{
			[Token(Token = "0x60025A0")]
			[Address(RVA = "0xFFD808", Offset = "0xFFD808", VA = "0xFFD808")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xFFD898", Offset = "0xFFD898", VA = "0xFFD898")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xFFD9E8", Offset = "0xFFD9E8", VA = "0xFFD9E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xFFDA38", Offset = "0xFFDA38", VA = "0xFFDA38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0xFFDAE0", Offset = "0xFFDAE0", VA = "0xFFDAE0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0xFFE270", Offset = "0xFFE270", VA = "0xFFE270")]
		public Bloom_RFX4()
		{
		}
	}
	[Token(Token = "0x2000693")]
	public static class ImageEffectHelper_RFX4
	{
		[Token(Token = "0x17000520")]
		public static bool supportsDX11
		{
			[Token(Token = "0x60025AD")]
			[Address(RVA = "0x122A63C", Offset = "0x122A63C", VA = "0x122A63C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x122A268", Offset = "0x122A268", VA = "0x122A268")]
		public static bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x122A568", Offset = "0x122A568", VA = "0x122A568")]
		public static Material CheckShaderAndCreateMaterial(Shader s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000694")]
	public sealed class MinAttribute_RFX4 : PropertyAttribute
	{
		[Token(Token = "0x4002A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0xBEB684", Offset = "0xBEB684", VA = "0xBEB684")]
		public MinAttribute_RFX4(float min)
		{
		}
	}
	[Token(Token = "0x2000695")]
	public class RenderTextureUtility_RFX4
	{
		[Token(Token = "0x4002A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0xE736EC", Offset = "0xE736EC", VA = "0xE736EC")]
		public RenderTexture GetTemporaryRenderTexture(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, FilterMode filterMode = FilterMode.Bilinear)
		{
			return null;
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0xE737D8", Offset = "0xE737D8", VA = "0xE737D8")]
		public void ReleaseTemporaryRenderTexture(RenderTexture rt)
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0xE73984", Offset = "0xE73984", VA = "0xE73984")]
		public void ReleaseAllTemporaryRenderTextures()
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0xE73A40", Offset = "0xE73A40", VA = "0xE73A40")]
		public RenderTextureUtility_RFX4()
		{
		}
	}
}
namespace UnityStandardAssets.SceneUtils
{
	[Token(Token = "0x2000696")]
	public class PlaceTargetWithMouse : MonoBehaviour
	{
		[Token(Token = "0x4002A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float surfaceOffset;

		[Token(Token = "0x4002A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject setTargetOn;

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xCD88C8", Offset = "0xCD88C8", VA = "0xCD88C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xCD89FC", Offset = "0xCD89FC", VA = "0xCD89FC")]
		public PlaceTargetWithMouse()
		{
		}
	}
}
namespace Dynamite3D.RealIvy
{
	[Token(Token = "0x2000697")]
	public class IvyCaster : MonoBehaviour
	{
		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IvyPreset[] ivyPresets;

		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<IvyController> ivys;

		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IvyController prefabIvyController;

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x122D698", Offset = "0x122D698", VA = "0x122D698")]
		public void CastIvyByPresetName(string presetName, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x122D7C0", Offset = "0x122D7C0", VA = "0x122D7C0")]
		public void CastIvy(IvyPreset ivyPreset, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x122DB2C", Offset = "0x122DB2C", VA = "0x122DB2C")]
		public void CastRandomIvy(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x122D9D0", Offset = "0x122D9D0", VA = "0x122D9D0")]
		private IvyController GetFreeIvy()
		{
			return null;
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x122D718", Offset = "0x122D718", VA = "0x122D718")]
		private IvyPreset GetPresetByName(string presetName)
		{
			return null;
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x122DBE8", Offset = "0x122DBE8", VA = "0x122DBE8")]
		public IvyCaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000698")]
	public class BranchContainer : ScriptableObject
	{
		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BranchPoint> branchPoints;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 growDirection;

		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<LeafPoint> leaves;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float totalLenght;

		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fallIteration;

		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool falling;

		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion rotationOnFallIteration;

		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int branchSense;

		[Token(Token = "0x4002A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float heightParameter;

		[Token(Token = "0x4002A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float randomizeHeight;

		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float heightVar;

		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float currentHeight;

		[Token(Token = "0x4002A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float deltaHeight;

		[Token(Token = "0x4002A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float newHeight;

		[Token(Token = "0x4002A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BranchPoint originPointOfThisBranch;

		[Token(Token = "0x4002A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int branchNumber;

		[Token(Token = "0x4002A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Dictionary<int, List<LeafPoint>> dictRTLeavesByInitSegment;

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0xFFF9C4", Offset = "0xFFF9C4", VA = "0xFFF9C4")]
		public int GetNumLeaves()
		{
			return default(int);
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0xFFFA10", Offset = "0xFFFA10", VA = "0xFFFA10")]
		public void SetValues(Vector3 growDirection, float randomizeHeight, float currentHeight, float heightParameter, int branchSense, BranchPoint originPointOfThisBranch)
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0xFFFB40", Offset = "0xFFFB40", VA = "0xFFFB40")]
		public void AddBranchPoint(BranchPoint branchPoint, float length, float stepSize)
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xFFFBAC", Offset = "0xFFFBAC", VA = "0xFFFBAC")]
		public void Init(int branchPointsSize, int numLeaves)
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0xFFFC74", Offset = "0xFFFC74", VA = "0xFFFC74")]
		public void Init()
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0xFFFC80", Offset = "0xFFFC80", VA = "0xFFFC80")]
		public void PrepareRTLeavesDict()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xFFFEF0", Offset = "0xFFFEF0", VA = "0xFFFEF0")]
		public void UpdateLeavesDictEntry(int initSegmentIdx, LeafPoint leaf)
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x1000038", Offset = "0x1000038", VA = "0x1000038")]
		public void AddBranchPoint(BranchPoint branchPoint)
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x10000D4", Offset = "0x10000D4", VA = "0x10000D4")]
		public void AddBranchPoint(Vector3 point, Vector3 grabVector)
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x10000E0", Offset = "0x10000E0", VA = "0x10000E0")]
		public void AddBranchPoint(Vector3 point, Vector3 grabVector, bool isNewBranch, int newBranchIndex)
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x10002C4", Offset = "0x10002C4", VA = "0x10002C4")]
		public BranchPoint InsertBranchPoint(Vector3 point, Vector3 grabVector, int index)
		{
			return null;
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x1000554", Offset = "0x1000554", VA = "0x1000554")]
		public void GetLeavesInSegmentRT(int initSegmentIdx, int endSegmentIdx, List<LeafPoint> res)
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0xFFFDE4", Offset = "0xFFFDE4", VA = "0xFFFDE4")]
		public void GetLeavesInSegment(BranchPoint initSegment, List<LeafPoint> res)
		{
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x100063C", Offset = "0x100063C", VA = "0x100063C")]
		public List<LeafPoint> GetLeavesInSegment(BranchPoint initSegment)
		{
			return null;
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x10006C8", Offset = "0x10006C8", VA = "0x10006C8")]
		public LeafPoint AddRandomLeaf(Vector3 pointWS, BranchPoint initSegment, BranchPoint endSegment, int leafIndex, InfoPool infoPool)
		{
			return null;
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x1000910", Offset = "0x1000910", VA = "0x1000910")]
		public void RepositionLeavesAfterAdd02(BranchPoint newPoint)
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x1000F28", Offset = "0x1000F28", VA = "0x1000F28")]
		public void RepositionLeavesAfterRemove02(BranchPoint removedPoint)
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x1001204", Offset = "0x1001204", VA = "0x1001204")]
		public void RemoveBranchPoint(int indexToRemove)
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x1001424", Offset = "0x1001424", VA = "0x1001424")]
		public void RemoveRange(int index, int count)
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x10016E8", Offset = "0x10016E8", VA = "0x10016E8")]
		public BranchPoint GetNearestPointFrom(Vector3 from)
		{
			return null;
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x1001830", Offset = "0x1001830", VA = "0x1001830")]
		public BranchPoint GetNearestPointWSFrom(Vector3 from)
		{
			return null;
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x1001978", Offset = "0x1001978", VA = "0x1001978")]
		public BranchPoint GetNearestPointSSFrom(Vector2 from)
		{
			return null;
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x1001AA4", Offset = "0x1001AA4", VA = "0x1001AA4")]
		public Vector3[] GetSegmentPoints(Vector3 worldPoint)
		{
			return null;
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x1001C48", Offset = "0x1001C48", VA = "0x1001C48")]
		public BranchPoint GetLastBranchPoint()
		{
			return null;
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x1001CBC", Offset = "0x1001CBC", VA = "0x1001CBC")]
		public void AddLeaf(LeafPoint leafPoint)
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x1001D20", Offset = "0x1001D20", VA = "0x1001D20")]
		public LeafPoint AddLeaf(Vector3 leafPoint, float lpLength, Vector3 lpForward, Vector3 lpUpward, int chosenLeave, BranchPoint initSegment, BranchPoint endSegment)
		{
			return null;
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x10007D8", Offset = "0x10007D8", VA = "0x10007D8")]
		public LeafPoint InsertLeaf(Vector3 leafPoint, float lpLength, Vector3 lpForward, Vector3 lpUpward, int chosenLeave, int leafIndex, BranchPoint initSegment, BranchPoint endSegment)
		{
			return null;
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x1001E38", Offset = "0x1001E38", VA = "0x1001E38")]
		public void RemoveLeaves(List<LeafPoint> leaves)
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x1001F00", Offset = "0x1001F00", VA = "0x1001F00")]
		public void DrawLeavesVectors(List<BranchPoint> branchPointsToFilter)
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x1001FA0", Offset = "0x1001FA0", VA = "0x1001FA0")]
		public void GetInitIdxEndIdxLeaves(int initIdxBranchPoint, float stepSize, out int initIdxLeaves, out int endIdxLeaves)
		{
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x10020D8", Offset = "0x10020D8", VA = "0x10020D8")]
		public void ReleasePoint(int indexPoint)
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x100217C", Offset = "0x100217C", VA = "0x100217C")]
		public void GetInitIdxEndIdxLeaves(int initIdxBranchPoint, int endIdxBranchPoint, float stepSize, out int initIdxLeaves, out int endIdxLeaves)
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x10022C0", Offset = "0x10022C0", VA = "0x10022C0")]
		public BranchContainer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000699")]
	public class BranchPoint
	{
		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 originalPoint;

		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 point;

		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 grabVector;

		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 pointSS;

		[Token(Token = "0x4002A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float length;

		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 initialGrowDir;

		[Token(Token = "0x4002A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BranchContainer branchContainer;

		[Token(Token = "0x4002A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int index;

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool newBranch;

		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int newBranchNumber;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float radius;

		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float currentRadius;

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Quaternion forwardRotation;

		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<RTVertexData> verticesLoop;

		[Token(Token = "0x4002A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 firstVector;

		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 axis;

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x10022C8", Offset = "0x10022C8", VA = "0x10022C8")]
		public void SetValues(Vector3 point, Vector3 grabVector, Vector2 pointSS, BranchContainer branchContainer, int index, bool blocked, bool newBranch, int newBranchNumber, float length)
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x1002428", Offset = "0x1002428", VA = "0x1002428")]
		public BranchPoint()
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x1002430", Offset = "0x1002430", VA = "0x1002430")]
		public void InitializeRuntime(IvyParameters ivyParameters)
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x10001F4", Offset = "0x10001F4", VA = "0x10001F4")]
		public BranchPoint(Vector3 point, Vector3 grabVector, int index, bool newBranch, int newBranchNumber, float length, BranchContainer branchContainer)
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x1000494", Offset = "0x1000494", VA = "0x1000494")]
		public BranchPoint(Vector3 point, Vector3 grabVector, int index, float length, BranchContainer branchContainer)
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x10024BC", Offset = "0x10024BC", VA = "0x10024BC")]
		public BranchPoint(Vector3 point, int index, float length, BranchContainer branchContainer)
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x1002584", Offset = "0x1002584", VA = "0x1002584")]
		public void SetOriginalPoint()
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x1000E90", Offset = "0x1000E90", VA = "0x1000E90")]
		public BranchPoint GetNextPoint()
		{
			return null;
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x1000E0C", Offset = "0x1000E0C", VA = "0x1000E0C")]
		public BranchPoint GetPreviousPoint()
		{
			return null;
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x1002598", Offset = "0x1002598", VA = "0x1002598")]
		public void Move(Vector3 newPosition)
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x10025A4", Offset = "0x10025A4", VA = "0x10025A4")]
		public void InitBranchInThisPoint(int branchNumber)
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x100216C", Offset = "0x100216C", VA = "0x100216C")]
		public void ReleasePoint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200069A")]
	public class BranchSegment
	{
		[Token(Token = "0x4002A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<LeafPoint> leaves;

		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BranchPoint initSegment;

		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BranchPoint endSegment;

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x10025B4", Offset = "0x10025B4", VA = "0x10025B4")]
		public BranchSegment()
		{
		}
	}
	[Token(Token = "0x200069B")]
	public static class Constants
	{
		[Token(Token = "0x4002A9B")]
		public const string EXTENSION_PREFAB = "prefab";

		[Token(Token = "0x4002A9C")]
		public const string LABEL_IVY_PRESET = "IvyPreset";

		[Token(Token = "0x4002A9D")]
		public const int VERTEX_LIMIT_16 = 65535;

		[Token(Token = "0x4002A9E")]
		public const int VERTEX_LIMIT_32 = 4000000;

		[Token(Token = "0x4002A9F")]
		public const string IVY_MESH_NAME = "IvyMesh";

		[Token(Token = "0x4002AA0")]
		public const string NO_IVY_SELECTED_MESSAGE = "Select or create an editable ivy first.";

		[Token(Token = "0x4002AA1")]
		public const string CANNOT_EDIT_GROWING_IVY = "Can't edit a growing ivy.";

		[Token(Token = "0x4002AA2")]
		public const string CONFIRM_SAVE_IVY = "Saving the ivy means that editability will be lost. Are you sure?";

		[Token(Token = "0x4002AA3")]
		public const string LIGHTMAP_UVS_WARNING = "Lightmap UVs will be generated when you save the ivy either in a scene or as prefab.";

		[Token(Token = "0x4002AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GUIContent TOOL_PAINT_GUICONTENT;

		[Token(Token = "0x4002AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static GUIContent TOOL_MOVE_GUICONTENT;

		[Token(Token = "0x4002AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static GUIContent TOOL_SMOOTH_GUICONTENT;

		[Token(Token = "0x4002AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static GUIContent TOOL_REFINE_GUICONTENT;

		[Token(Token = "0x4002AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static GUIContent TOOL_OPTIMIZE_GUICONTENT;

		[Token(Token = "0x4002AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static GUIContent TOOL_CUT_GUICONTENT;

		[Token(Token = "0x4002AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static GUIContent TOOL_DELETE_GUICONTENT;

		[Token(Token = "0x4002AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static GUIContent TOOL_SHAVE_GUICONTENT;

		[Token(Token = "0x4002AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static GUIContent TOOL_ADDLEAVE_GUICONTENT;

		[Token(Token = "0x4002AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static GUIContent TOOL_TOGGLEPANEL_GUICONTENT;
	}
	[Token(Token = "0x200069C")]
	public class EditorIvyGrowth : GrowthBuilder
	{
		[Token(Token = "0x4002AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Random.State randomstate;

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x1C2F92C", Offset = "0x1C2F92C", VA = "0x1C2F92C")]
		public void Initialize(Vector3 firstPoint, Vector3 firstGrabVector)
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x1C2FC9C", Offset = "0x1C2FC9C", VA = "0x1C2FC9C")]
		private void CalculateNewHeight(BranchContainer branch)
		{
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x1C2FDC0", Offset = "0x1C2FDC0", VA = "0x1C2FDC0")]
		private int ChooseBranchSense()
		{
			return default(int);
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x1C2FDE8", Offset = "0x1C2FDE8", VA = "0x1C2FDE8")]
		public void Step()
		{
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x1C2FF04", Offset = "0x1C2FF04", VA = "0x1C2FF04")]
		private void CalculateNewPoint(BranchContainer branch)
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x1C2FF5C", Offset = "0x1C2FF5C", VA = "0x1C2FF5C")]
		private void CheckWall(BranchContainer branch)
		{
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x1C30444", Offset = "0x1C30444", VA = "0x1C30444")]
		private void CheckFloor(BranchContainer branch, BranchPoint potentialPoint, Vector3 oldSurfaceNormal)
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x1C30954", Offset = "0x1C30954", VA = "0x1C30954")]
		private void CheckCorner(BranchContainer branch, BranchPoint potentialPoint, Vector3 oldSurfaceNormal)
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x1C30238", Offset = "0x1C30238", VA = "0x1C30238")]
		private void CheckFall(BranchContainer branch)
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x1C30E2C", Offset = "0x1C30E2C", VA = "0x1C30E2C")]
		private void CheckGrabPoint(BranchContainer branch)
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x1C3064C", Offset = "0x1C3064C", VA = "0x1C3064C")]
		public void AddPoint(BranchContainer branch, Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x1C30BB4", Offset = "0x1C30BB4", VA = "0x1C30BB4")]
		private void AddFallingPoint(BranchContainer branch)
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x1C31600", Offset = "0x1C31600", VA = "0x1C31600")]
		private void AddLeave(BranchContainer branch)
		{
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x1C318D8", Offset = "0x1C318D8", VA = "0x1C318D8")]
		public void DeleteLastBranch()
		{
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x1C3149C", Offset = "0x1C3149C", VA = "0x1C3149C")]
		public void AddBranch(BranchContainer branch, BranchPoint originBranchPoint, Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x1C30814", Offset = "0x1C30814", VA = "0x1C30814")]
		private void NewGrowDirection(BranchContainer branch)
		{
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x1C30610", Offset = "0x1C30610", VA = "0x1C30610")]
		private void NewGrowDirectionAfterWall(BranchContainer branch, Vector3 oldSurfaceNormal, Vector3 newSurfaceNormal)
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x1C31100", Offset = "0x1C31100", VA = "0x1C31100")]
		private void NewGrowDirectionFalling(BranchContainer branch)
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x1C313C4", Offset = "0x1C313C4", VA = "0x1C313C4")]
		private void NewGrowDirectionAfterFall(BranchContainer branch, Vector3 newSurfaceNormal)
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x1C3144C", Offset = "0x1C3144C", VA = "0x1C3144C")]
		private void NewGrowDirectionAfterGrab(BranchContainer branch, Vector3 newSurfaceNormal)
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x1C30DE4", Offset = "0x1C30DE4", VA = "0x1C30DE4")]
		private void NewGrowDirectionAfterCorner(BranchContainer branch, Vector3 oldSurfaceNormal, Vector3 newSurfaceNormal)
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x1C31950", Offset = "0x1C31950", VA = "0x1C31950")]
		private void Refine(BranchContainer branch)
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x1C31E94", Offset = "0x1C31E94", VA = "0x1C31E94")]
		public void Optimize()
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x1C322C0", Offset = "0x1C322C0", VA = "0x1C322C0")]
		public EditorIvyGrowth()
		{
		}
	}
	[Token(Token = "0x200069D")]
	public class EditorMeshBuilder : ScriptableObject
	{
		[Token(Token = "0x4002AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InfoPool infoPool;

		[Token(Token = "0x4002AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh ivyMesh;

		[Token(Token = "0x4002AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, int[]> branchesLeavesIndices;

		[Token(Token = "0x4002AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] verts;

		[Token(Token = "0x4002AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] normals;

		[Token(Token = "0x4002AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2[] uvs;

		[Token(Token = "0x4002AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color[] vColor;

		[Token(Token = "0x4002AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[] trisBranches;

		[Token(Token = "0x4002AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<List<int>> trisLeaves;

		[Token(Token = "0x4002AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float angle;

		[Token(Token = "0x4002AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Material> leavesMaterials;

		[Token(Token = "0x4002ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<List<int>> typesByMat;

		[Token(Token = "0x4002ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Rect[] uv2Rects;

		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool leavesDataInitialized;

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x1C322C8", Offset = "0x1C322C8", VA = "0x1C322C8")]
		public void InitLeavesData()
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x1C328E8", Offset = "0x1C328E8", VA = "0x1C328E8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x1C32F28", Offset = "0x1C32F28", VA = "0x1C32F28")]
		private void BuildLeaves(int b, ref int vertCount)
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x1C33D4C", Offset = "0x1C33D4C", VA = "0x1C33D4C")]
		public void BuildGeometry()
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x1C35020", Offset = "0x1C35020", VA = "0x1C35020")]
		private Vector3[] CalculateVectors(Vector3 branchPoint, int p, int b)
		{
			return null;
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x1C34FB4", Offset = "0x1C34FB4", VA = "0x1C34FB4")]
		private float CalculateRadius(float lenght, float totalLenght)
		{
			return default(float);
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x1C355D8", Offset = "0x1C355D8", VA = "0x1C355D8")]
		private float GetTipInfluence(float lenght, float totalLenght)
		{
			return default(float);
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0x1C35630", Offset = "0x1C35630", VA = "0x1C35630")]
		private void TriangulateBranch(int b, ref int triCount, int vertCount, int lastVertCount)
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x1C359AC", Offset = "0x1C359AC", VA = "0x1C359AC")]
		public EditorMeshBuilder()
		{
		}
	}
	[Token(Token = "0x200069E")]
	public class GrowthBuilder : ScriptableObject
	{
		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InfoPool infoPool;

		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 origin;

		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool growing;

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x24D996C", Offset = "0x24D996C", VA = "0x24D996C")]
		public GrowthBuilder()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200069F")]
	public class InfoPool : ScriptableObject
	{
		[Token(Token = "0x4002AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IvyContainer ivyContainer;

		[Token(Token = "0x4002AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorMeshBuilder meshBuilder;

		[Token(Token = "0x4002AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IvyParameters ivyParameters;

		[Token(Token = "0x4002AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EditorIvyGrowth growth;

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x122AA7C", Offset = "0x122AA7C", VA = "0x122AA7C")]
		public InfoPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A0")]
	public class IvyParameterInt : IvyParameter
	{
		[Token(Token = "0x600260C")]
		[Address(RVA = "0x122E9E0", Offset = "0x122E9E0", VA = "0x122E9E0")]
		public IvyParameterInt(int value)
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x122EA10", Offset = "0x122EA10", VA = "0x122EA10", Slot = "4")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x122EA38", Offset = "0x122EA38", VA = "0x122EA38")]
		public static implicit operator int(IvyParameterInt intParameter)
		{
			return default(int);
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x122EA6C", Offset = "0x122EA6C", VA = "0x122EA6C")]
		public static implicit operator IvyParameterInt(int intValue)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20006A1")]
	public class IvyParameterFloat : IvyParameter
	{
		[Token(Token = "0x6002610")]
		[Address(RVA = "0x122E924", Offset = "0x122E924", VA = "0x122E924")]
		public IvyParameterFloat(float value)
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x122E958", Offset = "0x122E958", VA = "0x122E958", Slot = "4")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x122E960", Offset = "0x122E960", VA = "0x122E960")]
		public static implicit operator float(IvyParameterFloat floatParameter)
		{
			return default(float);
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x122E978", Offset = "0x122E978", VA = "0x122E978")]
		public static implicit operator IvyParameterFloat(float floatValue)
		{
			return null;
		}
	}
	[Token(Token = "0x20006A2")]
	public abstract class IvyParameter
	{
		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float value;

		[Token(Token = "0x6002614")]
		public abstract void UpdateValue(float value);

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x122E91C", Offset = "0x122E91C", VA = "0x122E91C")]
		protected IvyParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A3")]
	public class IvyParametersGUI : ScriptableObject
	{
		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IvyParameterFloat stepSize;

		[Token(Token = "0x4002AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IvyParameterFloat branchProvability;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IvyParameterInt maxBranchs;

		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask layerMask;

		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IvyParameterFloat minDistanceToSurface;

		[Token(Token = "0x4002ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IvyParameterFloat maxDistanceToSurface;

		[Token(Token = "0x4002ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IvyParameterFloat DTSFrequency;

		[Token(Token = "0x4002ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IvyParameterFloat DTSRandomness;

		[Token(Token = "0x4002ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IvyParameterFloat directionFrequency;

		[Token(Token = "0x4002ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IvyParameterFloat directionAmplitude;

		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IvyParameterFloat directionRandomness;

		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IvyParameterFloat gravityX;

		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IvyParameterFloat gravityY;

		[Token(Token = "0x4002AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IvyParameterFloat gravityZ;

		[Token(Token = "0x4002AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IvyParameterFloat grabProvabilityOnFall;

		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IvyParameterFloat stiffness;

		[Token(Token = "0x4002AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IvyParameterFloat optAngleBias;

		[Token(Token = "0x4002AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IvyParameterInt leaveEvery;

		[Token(Token = "0x4002AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IvyParameterInt randomLeaveEvery;

		[Token(Token = "0x4002AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool buffer32Bits;

		[Token(Token = "0x4002AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool halfgeom;

		[Token(Token = "0x4002ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public IvyParameterInt sides;

		[Token(Token = "0x4002ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public IvyParameterFloat minRadius;

		[Token(Token = "0x4002ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IvyParameterFloat maxRadius;

		[Token(Token = "0x4002ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public IvyParameterFloat radiusVarFreq;

		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public IvyParameterFloat radiusVarOffset;

		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public IvyParameterFloat tipInfluence;

		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public IvyParameterFloat uvScaleX;

		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public IvyParameterFloat uvScaleY;

		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public IvyParameterFloat uvOffsetX;

		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public IvyParameterFloat uvOffsetY;

		[Token(Token = "0x4002AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public IvyParameterFloat minScale;

		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public IvyParameterFloat maxScale;

		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool globalOrientation;

		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public IvyParameterFloat globalRotationX;

		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public IvyParameterFloat globalRotationY;

		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public IvyParameterFloat globalRotationZ;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public IvyParameterFloat rotationX;

		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public IvyParameterFloat rotationY;

		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public IvyParameterFloat rotationZ;

		[Token(Token = "0x4002AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public IvyParameterFloat randomRotationX;

		[Token(Token = "0x4002AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public IvyParameterFloat randomRotationY;

		[Token(Token = "0x4002AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public IvyParameterFloat randomRotationZ;

		[Token(Token = "0x4002AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public IvyParameterFloat offsetX;

		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public IvyParameterFloat offsetY;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public IvyParameterFloat offsetZ;

		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float LMUVPadding;

		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Material branchesMaterial;

		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public List<GameObject> leavesPrefabs;

		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public List<float> leavesProb;

		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool generateBranches;

		[Token(Token = "0x4002AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		public bool generateLeaves;

		[Token(Token = "0x4002AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A2")]
		public bool generateLightmapUVs;

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x122F9B8", Offset = "0x122F9B8", VA = "0x122F9B8")]
		public void CopyFrom(IvyPreset ivyPreset)
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x122F9D0", Offset = "0x122F9D0", VA = "0x122F9D0")]
		public void CopyFrom(IvyParameters copyFrom)
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x122FD80", Offset = "0x122FD80", VA = "0x122FD80")]
		public IvyParametersGUI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A4")]
	public class IvyContainer : ScriptableObject
	{
		[Token(Token = "0x4002AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int lastNumberAssigned;

		[Token(Token = "0x4002AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ivyGO;

		[Token(Token = "0x4002AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<BranchContainer> branches;

		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 firstVertexVector;

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x122DBF0", Offset = "0x122DBF0", VA = "0x122DBF0")]
		private IvyContainer()
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x122DC70", Offset = "0x122DC70", VA = "0x122DC70")]
		public void Clear()
		{
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x122DCC8", Offset = "0x122DCC8", VA = "0x122DCC8")]
		public void RemoveBranch(BranchContainer branchToDelete)
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x122DD4C", Offset = "0x122DD4C", VA = "0x122DD4C")]
		public BranchContainer GetBranchContainerByBranchNumber(int branchNumber)
		{
			return null;
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x122DE2C", Offset = "0x122DE2C", VA = "0x122DE2C")]
		public BranchPoint[] GetNearestSegmentSSBelowDistance(Vector2 pointSS, float distanceThreshold)
		{
			return null;
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x122E0C0", Offset = "0x122E0C0", VA = "0x122E0C0")]
		public BranchPoint[] GetNearestSegmentSS(Vector2 pointSS)
		{
			return null;
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x122E0CC", Offset = "0x122E0CC", VA = "0x122E0CC")]
		public void AddBranch(BranchContainer newBranchContainer)
		{
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0x122E148", Offset = "0x122E148", VA = "0x122E148")]
		public BranchPoint GetNearestPointAllBranchesSSFrom(Vector2 pointSS)
		{
			return null;
		}
	}
	[Token(Token = "0x20006A5")]
	public class IvyInfo : MonoBehaviour
	{
		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IvyPreset originalPreset;

		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InfoPool infoPool;

		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x122E908", Offset = "0x122E908", VA = "0x122E908")]
		public void Setup(InfoPool infoPool, MeshFilter meshFilter, MeshRenderer meshRenderer, IvyPreset originalPreset)
		{
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0x122E914", Offset = "0x122E914", VA = "0x122E914")]
		public IvyInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A6")]
	public class IvyParameters
	{
		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float stepSize;

		[Token(Token = "0x4002B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int randomSeed;

		[Token(Token = "0x4002B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float branchProvability;

		[Token(Token = "0x4002B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxBranchs;

		[Token(Token = "0x4002B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask layerMask;

		[Token(Token = "0x4002B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minDistanceToSurface;

		[Token(Token = "0x4002B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxDistanceToSurface;

		[Token(Token = "0x4002B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DTSFrequency;

		[Token(Token = "0x4002B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float DTSRandomness;

		[Token(Token = "0x4002B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float directionFrequency;

		[Token(Token = "0x4002B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float directionAmplitude;

		[Token(Token = "0x4002B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float directionRandomness;

		[Token(Token = "0x4002B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 gravity;

		[Token(Token = "0x4002B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float grabProvabilityOnFall;

		[Token(Token = "0x4002B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stiffness;

		[Token(Token = "0x4002B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float optAngleBias;

		[Token(Token = "0x4002B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int leaveEvery;

		[Token(Token = "0x4002B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int randomLeaveEvery;

		[Token(Token = "0x4002B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool buffer32Bits;

		[Token(Token = "0x4002B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool halfgeom;

		[Token(Token = "0x4002B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int sides;

		[Token(Token = "0x4002B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float minRadius;

		[Token(Token = "0x4002B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float maxRadius;

		[Token(Token = "0x4002B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float radiusVarFreq;

		[Token(Token = "0x4002B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float radiusVarOffset;

		[Token(Token = "0x4002B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float tipInfluence;

		[Token(Token = "0x4002B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector2 uvScale;

		[Token(Token = "0x4002B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector2 uvOffset;

		[Token(Token = "0x4002B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float minScale;

		[Token(Token = "0x4002B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float maxScale;

		[Token(Token = "0x4002B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool globalOrientation;

		[Token(Token = "0x4002B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 globalRotation;

		[Token(Token = "0x4002B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 rotation;

		[Token(Token = "0x4002B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Vector3 randomRotation;

		[Token(Token = "0x4002B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector3 offset;

		[Token(Token = "0x4002B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float LMUVPadding;

		[Token(Token = "0x4002B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Material branchesMaterial;

		[Token(Token = "0x4002B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject[] leavesPrefabs;

		[Token(Token = "0x4002B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float[] leavesProb;

		[Token(Token = "0x4002B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Dictionary<int, Vector2> UV2IslesSizes;

		[Token(Token = "0x4002B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool generateBranches;

		[Token(Token = "0x4002B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		public bool generateLeaves;

		[Token(Token = "0x4002B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		public bool generateLightmapUVs;

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x122EAD0", Offset = "0x122EAD0", VA = "0x122EAD0")]
		public IvyParameters()
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x122EC4C", Offset = "0x122EC4C", VA = "0x122EC4C")]
		public IvyParameters(IvyParameters copyFrom)
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x122F0A8", Offset = "0x122F0A8", VA = "0x122F0A8")]
		public void CopyFrom(IvyPreset ivyPreset)
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0x122F0C0", Offset = "0x122F0C0", VA = "0x122F0C0")]
		public void CopyFrom(IvyParametersGUI copyFrom)
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x122EDE0", Offset = "0x122EDE0", VA = "0x122EDE0")]
		public void CopyFrom(IvyParameters copyFrom)
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0x122F5A4", Offset = "0x122F5A4", VA = "0x122F5A4")]
		public bool IsEqualTo(IvyParameters compareTo)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20006A7")]
	public class IvyPreset : ScriptableObject
	{
		[Token(Token = "0x4002B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string presetName;

		[Token(Token = "0x4002B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IvyParameters ivyParameters;

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x1230098", Offset = "0x1230098", VA = "0x1230098")]
		public void CopyFrom(IvyParametersGUI copyFrom)
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x12300B0", Offset = "0x12300B0", VA = "0x12300B0")]
		public IvyPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A8")]
	public class LeafPoint
	{
		[Token(Token = "0x4002B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 point;

		[Token(Token = "0x4002B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 pointSS;

		[Token(Token = "0x4002B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float lpLength;

		[Token(Token = "0x4002B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 left;

		[Token(Token = "0x4002B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 lpForward;

		[Token(Token = "0x4002B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 lpUpward;

		[Token(Token = "0x4002B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int chosenLeave;

		[Token(Token = "0x4002B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Quaternion forwarRot;

		[Token(Token = "0x4002B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int initSegmentIdx;

		[Token(Token = "0x4002B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int endSegmentIdx;

		[Token(Token = "0x4002B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float displacementFromInitSegment;

		[Token(Token = "0x4002B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Quaternion leafRotation;

		[Token(Token = "0x4002B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float currentScale;

		[Token(Token = "0x4002B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float dstScale;

		[Token(Token = "0x4002B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 leafCenter;

		[Token(Token = "0x4002B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<RTVertexData> verticesLeaves;

		[Token(Token = "0x4002B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float leafScale;

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xBD4290", Offset = "0xBD4290", VA = "0xBD4290")]
		public void InitializeRuntime()
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0xBD4304", Offset = "0xBD4304", VA = "0xBD4304")]
		public LeafPoint()
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xBD430C", Offset = "0xBD430C", VA = "0xBD430C")]
		public LeafPoint(Vector3 point, float lpLength, Vector3 lpForward, Vector3 lpUpward, int chosenLeave, BranchPoint initSegment, BranchPoint endSegment)
		{
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xBD43BC", Offset = "0xBD43BC", VA = "0xBD43BC")]
		public void SetValues(Vector3 point, float lpLength, Vector3 lpForward, Vector3 lpUpward, int chosenLeave, BranchPoint initSegment, BranchPoint endSegment)
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xBD4534", Offset = "0xBD4534", VA = "0xBD4534")]
		public void DrawVectors()
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xBD46EC", Offset = "0xBD46EC", VA = "0xBD46EC")]
		public float GetLengthFactor(BranchContainer branchContainer, float correctionFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0xBD4728", Offset = "0xBD4728", VA = "0xBD4728")]
		public void CreateVertices(IvyParameters ivyParameters, RTMeshData leafMeshData, GameObject ivyGO)
		{
		}
	}
	[Token(Token = "0x20006A9")]
	public static class RealIvyMathUtils
	{
		[Token(Token = "0x20006AA")]
		public struct Segment
		{
			[Token(Token = "0x4002B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 a;

			[Token(Token = "0x4002B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 b;
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xE6F234", Offset = "0xE6F234", VA = "0xE6F234")]
		public static float DistanceBetweenPointAndSegmentSS(Vector2 point, Vector2 a, Vector2 b)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20006AB")]
	public class RTBakedMeshBuilder
	{
		[Token(Token = "0x4002B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IvyParameters ivyParameters;

		[Token(Token = "0x4002B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RTIvyContainer rtIvyContainer;

		[Token(Token = "0x4002B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RTIvyContainer rtBakedIvyContainer;

		[Token(Token = "0x4002B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ivyGO;

		[Token(Token = "0x4002B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4002B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool onOptimizedStretch;

		[Token(Token = "0x4002B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshFilter leavesMeshFilter;

		[Token(Token = "0x4002B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshRenderer leavesMeshRenderer;

		[Token(Token = "0x4002B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer mrProcessedMesh;

		[Token(Token = "0x4002B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Mesh processedMesh;

		[Token(Token = "0x4002B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh ivyMesh;

		[Token(Token = "0x4002B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<RTBranchContainer> activeBranches;

		[Token(Token = "0x4002B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public RTMeshData bakedMeshData;

		[Token(Token = "0x4002B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public RTMeshData buildingMeshData;

		[Token(Token = "0x4002B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public RTMeshData processedMeshData;

		[Token(Token = "0x4002B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<List<int>> processedVerticesIndicesPerBranch;

		[Token(Token = "0x4002B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<List<int>> processedBranchesVerticesIndicesPerBranch;

		[Token(Token = "0x4002B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int[] vertCountsPerBranch;

		[Token(Token = "0x4002B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int[] lastTriangleIndexPerBranch;

		[Token(Token = "0x4002B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int[] vertCountLeavesPerBranch;

		[Token(Token = "0x4002B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int lastPointCopied;

		[Token(Token = "0x4002B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int vertCount;

		[Token(Token = "0x4002B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int lastVertCount;

		[Token(Token = "0x4002B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int triCount;

		[Token(Token = "0x4002B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int lastVerticesCountProcessed;

		[Token(Token = "0x4002B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int lastLeafVertProcessed;

		[Token(Token = "0x4002B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int submeshCount;

		[Token(Token = "0x4002B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int[] submeshByChoseLeaf;

		[Token(Token = "0x4002B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int initIdxLeaves;

		[Token(Token = "0x4002B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int endIdxLeaves;

		[Token(Token = "0x4002B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int backtrackingPoints;

		[Token(Token = "0x4002B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int[] fromTo;

		[Token(Token = "0x4002B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3[] vectors;

		[Token(Token = "0x4002B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RTMeshData[] leavesMeshesByChosenLeaf;

		[Token(Token = "0x4002B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int lastVertexIndex;

		[Token(Token = "0x4002B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float angle;

		[Token(Token = "0x4002B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public List<Material> leavesMaterials;

		[Token(Token = "0x4002B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public List<List<int>> typesByMat;

		[Token(Token = "0x4002B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Rect[] uv2Rects;

		[Token(Token = "0x4002B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool leavesDataInitialized;

		[Token(Token = "0x4002B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float growthSpeed;

		[Token(Token = "0x4002B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float leafLengthCorrrectionFactor;

		[Token(Token = "0x4002B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Vector3 ivyGoPosition;

		[Token(Token = "0x4002B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Quaternion ivyGoRotation;

		[Token(Token = "0x4002B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Quaternion ivyGoInverseRotation;

		[Token(Token = "0x4002B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 zeroVector3;

		[Token(Token = "0x4002B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Vector2 zeroVector2;

		[Token(Token = "0x4002B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Color blackColor;

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x1512F24", Offset = "0x1512F24", VA = "0x1512F24")]
		public void InitializeMeshBuilder(IvyParameters ivyParameters, RTIvyContainer ivyContainer, RTIvyContainer bakedIvyContainer, GameObject ivyGO, Mesh bakedMesh, MeshRenderer meshRenderer, MeshFilter meshFilter, int numBranches, Mesh processedMesh, float growSpeed, MeshRenderer mrProcessedMesh, int backtrackingPoints, int[] submeshByChoseLeaf, RTMeshData[] leavesMeshesByChosenLeaf, Material[] materials)
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x151335C", Offset = "0x151335C", VA = "0x151335C")]
		public void InitializeMeshesDataBaked(Mesh bakedMesh, int numBranches)
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x15136BC", Offset = "0x15136BC", VA = "0x15136BC")]
		public void InitializeMeshesDataProcedural(Mesh bakedMesh, int numBranches, float lifetime, float velocity)
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x15133A8", Offset = "0x15133A8", VA = "0x15133A8")]
		public void CreateBuildingMeshData(Mesh bakedMesh, int numBranches)
		{
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x1513518", Offset = "0x1513518", VA = "0x1513518")]
		public void CreateBakedMeshData(Mesh bakedMesh)
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0x1513720", Offset = "0x1513720", VA = "0x1513720")]
		public void CreateProcessedMeshDataProcedural(Mesh bakedMesh, float lifetime, float velocity)
		{
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x1513580", Offset = "0x1513580", VA = "0x1513580")]
		public void CreateProcessedMeshData(Mesh bakedMesh)
		{
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0x1513BF4", Offset = "0x1513BF4", VA = "0x1513BF4")]
		public void SetLeafLengthCorrectionFactor(float leafLengthCorrrectionFactor)
		{
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0x1513BFC", Offset = "0x1513BFC", VA = "0x1513BFC")]
		public void ClearMesh()
		{
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0x1513C18", Offset = "0x1513C18", VA = "0x1513C18")]
		public RTBakedMeshBuilder()
		{
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0x1513C74", Offset = "0x1513C74", VA = "0x1513C74")]
		public RTBakedMeshBuilder(RTIvyContainer ivyContainer, GameObject ivyGo)
		{
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x1513CEC", Offset = "0x1513CEC", VA = "0x1513CEC")]
		private void ClearTipMesh()
		{
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x1513DE8", Offset = "0x1513DE8", VA = "0x1513DE8")]
		public void CheckCopyMesh(int branchIndex, List<RTBranchContainer> bakedBranches)
		{
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x15146B0", Offset = "0x15146B0", VA = "0x15146B0")]
		public void BuildGeometry02(List<RTBranchContainer> activeBakedBranches, List<RTBranchContainer> activeBuildingBranches)
		{
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x15154B8", Offset = "0x15154B8", VA = "0x15154B8")]
		private float CalculateRadius(BranchPoint branchPoint, BranchContainer buildingBranchContainer)
		{
			return default(float);
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x1514DC8", Offset = "0x1514DC8", VA = "0x1514DC8")]
		private void SetTriangles(RTBranchContainer branch, int vertCount, int initIndex, int branchIndex)
		{
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0x1515010", Offset = "0x1515010", VA = "0x1515010")]
		private void BuildLeaves(int branchIndex, RTBranchContainer buildingBranchContainer, RTBranchContainer bakedBranchContainer)
		{
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x1513EE0", Offset = "0x1513EE0", VA = "0x1513EE0")]
		public void CopyToFixedMesh(int branchIndex, int initSegmentIdx, int endSegmentIdx, RTBranchContainer branchContainer, RTBranchContainer bakedBranchContainer)
		{
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x151564C", Offset = "0x151564C", VA = "0x151564C")]
		public void RefreshProcessedMesh()
		{
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x1515340", Offset = "0x1515340", VA = "0x1515340")]
		private void RefreshMesh()
		{
		}
	}
	[Token(Token = "0x20006AC")]
	public abstract class RTIvy : MonoBehaviour
	{
		[Token(Token = "0x4002B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected IvyParameters ivyParameters;

		[Token(Token = "0x4002B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected RTIvyContainer rtIvyContainer;

		[Token(Token = "0x4002B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected RTIvyContainer rtBuildingIvyContainer;

		[Token(Token = "0x4002B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4002B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshRenderer mrProcessedMesh;

		[Token(Token = "0x4002B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshFilter mfProcessedMesh;

		[Token(Token = "0x4002B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected List<RTBranchContainer> activeBakedBranches;

		[Token(Token = "0x4002B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<RTBranchContainer> activeBuildingBranches;

		[Token(Token = "0x4002B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int lastIdxActiveBranch;

		[Token(Token = "0x4002B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<float> srcTotalLengthPerBranch;

		[Token(Token = "0x4002B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<float> dstTotalLengthPerBranch;

		[Token(Token = "0x4002B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<float> growingFactorPerBranch;

		[Token(Token = "0x4002B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<float> lengthPerBranch;

		[Token(Token = "0x4002B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected List<int> lastCopiedIndexPerBranch;

		[Token(Token = "0x4002B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected List<Vector3> srcPoints;

		[Token(Token = "0x4002B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected List<Vector3> dstPoints;

		[Token(Token = "0x4002B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected List<LeafPoint> leavesToCopyMesh;

		[Token(Token = "0x4002B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public RTBakedMeshBuilder meshBuilder;

		[Token(Token = "0x4002B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Mesh bakedMesh;

		[Token(Token = "0x4002B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Mesh processedMesh;

		[Token(Token = "0x4002B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool refreshProcessedMesh;

		[Token(Token = "0x4002B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int backtrackingPoints;

		[Token(Token = "0x4002B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected float currentLifetime;

		[Token(Token = "0x4002B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float currentSpeed;

		[Token(Token = "0x4002B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected float currentGrowthSpeed;

		[Token(Token = "0x4002B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float leafLengthCorrrectionFactor;

		[Token(Token = "0x4002B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected float currentTimer;

		[Token(Token = "0x4002B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected RuntimeGrowthParameters growthParameters;

		[Token(Token = "0x4002B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected List<Material> leavesMaterials;

		[Token(Token = "0x4002B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected RTMeshData[] leavesMeshesByChosenLeaf;

		[Token(Token = "0x4002B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected int[] submeshByChoseLeaf;

		[Token(Token = "0x4002B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected int maxBranches;

		[Token(Token = "0x6002647")]
		[Address(RVA = "0x1516A00", Offset = "0x1516A00", VA = "0x1516A00")]
		public void AwakeInit()
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x1516A48", Offset = "0x1516A48", VA = "0x1516A48", Slot = "4")]
		protected virtual void Init(IvyContainer ivyContainer, IvyParameters ivyParameters)
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x15175EC", Offset = "0x15175EC", VA = "0x15175EC")]
		private void SetUpMaxBranches(IvyContainer ivyContainer)
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x1517838", Offset = "0x1517838", VA = "0x1517838")]
		protected void InitMeshBuilder()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x1517998", Offset = "0x1517998", VA = "0x1517998", Slot = "5")]
		protected virtual void AddFirstBranch()
		{
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0x1517810", Offset = "0x1517810", VA = "0x1517810")]
		private int GetBacktrackingPoints()
		{
			return default(int);
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x15179A8", Offset = "0x15179A8", VA = "0x15179A8", Slot = "6")]
		public virtual void UpdateIvy(float deltaTime)
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x1517AF8", Offset = "0x1517AF8", VA = "0x1517AF8", Slot = "7")]
		protected virtual void Growing(int branchIndex, float deltaTime)
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x1517F00", Offset = "0x1517F00", VA = "0x1517F00", Slot = "8")]
		protected virtual void NextPoints(int branchIndex)
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x1517EA0", Offset = "0x1517EA0", VA = "0x1517EA0")]
		private void CalculateFactors(Vector3 srcPoint, Vector3 dstPoint)
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x15185EC", Offset = "0x15185EC", VA = "0x15185EC", Slot = "9")]
		protected virtual void AddNextBranch(int branchNumber)
		{
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x151833C", Offset = "0x151833C", VA = "0x151833C")]
		private void UpdateGrowingPoints(int branchIndex)
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x1517AD8", Offset = "0x1517AD8", VA = "0x1517AD8")]
		private void RefreshGeometry()
		{
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x1517A64", Offset = "0x1517A64", VA = "0x1517A64")]
		private void UpdateGrowthSpeed()
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x15185A4", Offset = "0x15185A4", VA = "0x15185A4")]
		public bool IsVertexLimitReached()
		{
			return default(bool);
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x15176B0", Offset = "0x15176B0", VA = "0x15176B0")]
		private Vector3 CalculateFirstVertexVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x1517080", Offset = "0x1517080", VA = "0x1517080")]
		private void CreateLeavesDict()
		{
		}

		[Token(Token = "0x6002658")]
		protected abstract void InitializeMeshesData(Mesh bakedMesh, int numBranches);

		[Token(Token = "0x6002659")]
		protected abstract float GetNormalizedLifeTime();

		[Token(Token = "0x600265A")]
		protected abstract int GetMaxNumPoints();

		[Token(Token = "0x600265B")]
		protected abstract int GetMaxNumLeaves();

		[Token(Token = "0x600265C")]
		public abstract bool IsGrowingFinished();

		[Token(Token = "0x600265D")]
		public abstract void InitIvy(RuntimeGrowthParameters growthParameters, IvyContainer ivyContainer, IvyParameters ivyParameters);

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x1518850", Offset = "0x1518850", VA = "0x1518850")]
		protected RTIvy()
		{
		}
	}
	[Token(Token = "0x20006AD")]
	public class RuntimeBakedIvy : RTIvy
	{
		[Token(Token = "0x600265F")]
		[Address(RVA = "0xE77D3C", Offset = "0xE77D3C", VA = "0xE77D3C", Slot = "14")]
		public override bool IsGrowingFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0xE77E98", Offset = "0xE77E98", VA = "0xE77E98", Slot = "4")]
		protected override void Init(IvyContainer ivyContainer, IvyParameters ivyParameters)
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0xE77EC0", Offset = "0xE77EC0", VA = "0xE77EC0")]
		private void CalculateLifetime()
		{
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xE77F90", Offset = "0xE77F90", VA = "0xE77F90", Slot = "11")]
		protected override float GetNormalizedLifeTime()
		{
			return default(float);
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xE7804C", Offset = "0xE7804C", VA = "0xE7804C", Slot = "10")]
		protected override void InitializeMeshesData(Mesh bakedMesh, int numBranches)
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0xE78068", Offset = "0xE78068", VA = "0xE78068", Slot = "12")]
		protected override int GetMaxNumPoints()
		{
			return default(int);
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0xE78070", Offset = "0xE78070", VA = "0xE78070", Slot = "13")]
		protected override int GetMaxNumLeaves()
		{
			return default(int);
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xE78078", Offset = "0xE78078", VA = "0xE78078", Slot = "15")]
		public override void InitIvy(RuntimeGrowthParameters growthParameters, IvyContainer ivyContainer, IvyParameters ivyParameters)
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xE780C8", Offset = "0xE780C8", VA = "0xE780C8")]
		public void InitIvyEditor(RuntimeGrowthParameters growthParameters, IvyContainer ivyContainer, IvyParameters ivyParameters)
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xE780E4", Offset = "0xE780E4", VA = "0xE780E4")]
		public RuntimeBakedIvy()
		{
		}
	}
	[Token(Token = "0x20006AE")]
	public class IvyController : MonoBehaviour
	{
		[Token(Token = "0x20006AF")]
		public enum State
		{
			[Token(Token = "0x4002B9E")]
			GROWTH_NOT_STARTED,
			[Token(Token = "0x4002B9F")]
			WAITING_FOR_DELAY,
			[Token(Token = "0x4002BA0")]
			PAUSED,
			[Token(Token = "0x4002BA1")]
			GROWING,
			[Token(Token = "0x4002BA2")]
			GROWTH_FINISHED
		}

		[Token(Token = "0x4002B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float currentTimer;

		[Token(Token = "0x4002B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RTIvy rtIvy;

		[Token(Token = "0x4002B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IvyContainer ivyContainer;

		[Token(Token = "0x4002B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IvyParameters ivyParameters;

		[Token(Token = "0x4002B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RuntimeGrowthParameters growthParameters;

		[Token(Token = "0x4002B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private State state;

		[Token(Token = "0x14000027")]
		public event Action OnGrowthStarted
		{
			[Token(Token = "0x6002669")]
			[Address(RVA = "0x122E348", Offset = "0x122E348", VA = "0x122E348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC24B4", Offset = "0xAC24B4")]
			add
			{
			}
			[Token(Token = "0x600266A")]
			[Address(RVA = "0x122E3E8", Offset = "0x122E3E8", VA = "0x122E3E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC24C4", Offset = "0xAC24C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event Action OnGrowthPaused
		{
			[Token(Token = "0x600266B")]
			[Address(RVA = "0x122E488", Offset = "0x122E488", VA = "0x122E488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC24D4", Offset = "0xAC24D4")]
			add
			{
			}
			[Token(Token = "0x600266C")]
			[Address(RVA = "0x122E528", Offset = "0x122E528", VA = "0x122E528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC24E4", Offset = "0xAC24E4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action OnGrowthFinished
		{
			[Token(Token = "0x600266D")]
			[Address(RVA = "0x122E5C8", Offset = "0x122E5C8", VA = "0x122E5C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC24F4", Offset = "0xAC24F4")]
			add
			{
			}
			[Token(Token = "0x600266E")]
			[Address(RVA = "0x122E668", Offset = "0x122E668", VA = "0x122E668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAC2504", Offset = "0xAC2504")]
			remove
			{
			}
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0x122E708", Offset = "0x122E708", VA = "0x122E708")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0x122DAB0", Offset = "0x122DAB0", VA = "0x122DAB0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xAC2514", Offset = "0xAC2514")]
		public void StartGrowth()
		{
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x122E75C", Offset = "0x122E75C", VA = "0x122E75C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xAC254C", Offset = "0xAC254C")]
		public void PauseGrowth()
		{
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x122E784", Offset = "0x122E784", VA = "0x122E784")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xAC2584", Offset = "0xAC2584")]
		public void ResumeGrowth()
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x122E7A0", Offset = "0x122E7A0", VA = "0x122E7A0")]
		public State GetState()
		{
			return default(State);
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x122E7A8", Offset = "0x122E7A8", VA = "0x122E7A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x122E820", Offset = "0x122E820", VA = "0x122E820")]
		private void UpdateWaitingForDelayState(float deltaTime)
		{
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0x122E85C", Offset = "0x122E85C", VA = "0x122E85C")]
		private void UpdateGrowingState(float deltaTime)
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0x122E900", Offset = "0x122E900", VA = "0x122E900")]
		public IvyController()
		{
		}
	}
	[Token(Token = "0x20006B0")]
	public class RuntimeIvyGrowth
	{
		[Token(Token = "0x4002BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RTIvyContainer rtIvyContainer;

		[Token(Token = "0x4002BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IvyParameters ivyParameters;

		[Token(Token = "0x4002BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject ivyGO;

		[Token(Token = "0x4002BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RTMeshData[] leavesMeshesByChosenLeaf;

		[Token(Token = "0x4002BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RTBranchContainer[] branchesPool;

		[Token(Token = "0x4002BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int branchesPoolIndex;

		[Token(Token = "0x4002BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RTBranchPoint[] branchPointsPool;

		[Token(Token = "0x4002BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int branchPointPoolIndex;

		[Token(Token = "0x4002BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RTLeafPoint[] leavesPool;

		[Token(Token = "0x4002BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int leavesPoolIndex;

		[Token(Token = "0x4002BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int numPoints;

		[Token(Token = "0x4002BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int numLeaves;

		[Token(Token = "0x4002BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int maxNumVerticesPerLeaf;

		[Token(Token = "0x4002BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEngine.Random.State randomstate;

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xE782F4", Offset = "0xE782F4", VA = "0xE782F4")]
		public void Init(RTIvyContainer ivyContainer, IvyParameters ivyParameters, GameObject ivyGO, RTMeshData[] leavesMeshesByChosenLeaf, int numPoints, int numLeaves, int maxNumVerticesPerLeaf)
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0xE78B54", Offset = "0xE78B54", VA = "0xE78B54")]
		private void CalculateNewHeight(RTBranchContainer branch)
		{
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xE78C3C", Offset = "0xE78C3C", VA = "0xE78C3C")]
		private int ChooseBranchSense()
		{
			return default(int);
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xE78C64", Offset = "0xE78C64", VA = "0xE78C64")]
		public void Step()
		{
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0xE78D68", Offset = "0xE78D68", VA = "0xE78D68")]
		private void CalculateNewPoint(RTBranchContainer branch)
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xE78DC0", Offset = "0xE78DC0", VA = "0xE78DC0")]
		private void CheckWall(RTBranchContainer branch)
		{
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xE7924C", Offset = "0xE7924C", VA = "0xE7924C")]
		private void CheckFloor(RTBranchContainer branch, RTBranchPoint potentialPoint, Vector3 oldSurfaceNormal)
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0xE79758", Offset = "0xE79758", VA = "0xE79758")]
		private void CheckCorner(RTBranchContainer branch, RTBranchPoint potentialPoint, Vector3 oldSurfaceNormal)
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xE79058", Offset = "0xE79058", VA = "0xE79058")]
		private void CheckFall(RTBranchContainer branch)
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xE79C44", Offset = "0xE79C44", VA = "0xE79C44")]
		private void CheckGrabPoint(RTBranchContainer branch)
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xE7943C", Offset = "0xE7943C", VA = "0xE7943C")]
		public void AddPoint(RTBranchContainer branch, Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xE7A658", Offset = "0xE7A658", VA = "0xE7A658")]
		private float CalculateRadius(float lenght)
		{
			return default(float);
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xE7A6B4", Offset = "0xE7A6B4", VA = "0xE7A6B4")]
		private float CalculateLeafScale(BranchContainer branch, LeafPoint leafPoint)
		{
			return default(float);
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xE7A748", Offset = "0xE7A748", VA = "0xE7A748")]
		private Quaternion CalculateLeafRotation(LeafPoint leafPoint)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0xE799A8", Offset = "0xE799A8", VA = "0xE799A8")]
		private void AddFallingPoint(RTBranchContainer branch)
		{
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0xE78A10", Offset = "0xE78A10", VA = "0xE78A10")]
		private void CalculateVerticesLastPoint(RTBranchContainer rtBranchContainer)
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xE7A3C4", Offset = "0xE7A3C4", VA = "0xE7A3C4")]
		private void AddLeave(RTBranchContainer branch)
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xE7AE20", Offset = "0xE7AE20", VA = "0xE7AE20")]
		public void DeleteLastBranch()
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0xE7A270", Offset = "0xE7A270", VA = "0xE7A270")]
		public void AddBranch(RTBranchContainer branch, RTBranchPoint originBranchPoint, Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0xE79630", Offset = "0xE79630", VA = "0xE79630")]
		private void NewGrowDirection(RTBranchContainer branch)
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0xE79400", Offset = "0xE79400", VA = "0xE79400")]
		private void NewGrowDirectionAfterWall(RTBranchContainer branch, Vector3 oldSurfaceNormal, Vector3 newSurfaceNormal)
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0xE79F00", Offset = "0xE79F00", VA = "0xE79F00")]
		private void NewGrowDirectionFalling(RTBranchContainer branch)
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0xE7A198", Offset = "0xE7A198", VA = "0xE7A198")]
		private void NewGrowDirectionAfterFall(RTBranchContainer branch, Vector3 newSurfaceNormal)
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0xE7A220", Offset = "0xE7A220", VA = "0xE7A220")]
		private void NewGrowDirectionAfterGrab(RTBranchContainer branch, Vector3 newSurfaceNormal)
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0xE79BFC", Offset = "0xE79BFC", VA = "0xE79BFC")]
		private void NewGrowDirectionAfterCorner(RTBranchContainer branch, Vector3 oldSurfaceNormal, Vector3 newSurfaceNormal)
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xE7AB3C", Offset = "0xE7AB3C", VA = "0xE7AB3C")]
		public Vector3 GetFirstVector(RTBranchPoint rtBranchPoint, RTBranchContainer rtBranchContainer, RTIvyContainer rtIvyContainer, IvyParameters ivyParameters, Vector3 axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xE7AA0C", Offset = "0xE7AA0C", VA = "0xE7AA0C")]
		public Vector3 GetLoopAxis(RTBranchPoint rtBranchPoint, RTBranchContainer rtBranchContainer, RTIvyContainer rtIvyContainer, GameObject ivyGo)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xE788B4", Offset = "0xE788B4", VA = "0xE788B4")]
		private RTBranchPoint GetNextFreeBranchPoint()
		{
			return null;
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xE7ACB4", Offset = "0xE7ACB4", VA = "0xE7ACB4")]
		private RTLeafPoint GetNextLeafPoint()
		{
			return null;
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0xE78868", Offset = "0xE78868", VA = "0xE78868")]
		private RTBranchContainer GetNextBranchContainer()
		{
			return null;
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0xE7AE90", Offset = "0xE7AE90", VA = "0xE7AE90")]
		public RuntimeIvyGrowth()
		{
		}
	}
	[Token(Token = "0x20006B1")]
	public class RuntimeProceduralIvy : RTIvy
	{
		[Token(Token = "0x4002BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RuntimeIvyGrowth rtIvyGrowth;

		[Token(Token = "0x6002697")]
		[Address(RVA = "0xE7AE98", Offset = "0xE7AE98", VA = "0xE7AE98", Slot = "4")]
		protected override void Init(IvyContainer ivyContainer, IvyParameters ivyParameters)
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0xE7B058", Offset = "0xE7B058", VA = "0xE7B058", Slot = "8")]
		protected override void NextPoints(int branchIndex)
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0xE7B088", Offset = "0xE7B088", VA = "0xE7B088", Slot = "14")]
		public override bool IsGrowingFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0xE7B09C", Offset = "0xE7B09C", VA = "0xE7B09C", Slot = "11")]
		protected override float GetNormalizedLifeTime()
		{
			return default(float);
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0xE7B0D0", Offset = "0xE7B0D0", VA = "0xE7B0D0")]
		public void SetIvyParameters(IvyPreset ivyPreset)
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xE7B0EC", Offset = "0xE7B0EC", VA = "0xE7B0EC", Slot = "10")]
		protected override void InitializeMeshesData(Mesh bakedMesh, int numBranches)
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0xE7B118", Offset = "0xE7B118", VA = "0xE7B118", Slot = "12")]
		protected override int GetMaxNumPoints()
		{
			return default(int);
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0xE7B16C", Offset = "0xE7B16C", VA = "0xE7B16C", Slot = "13")]
		protected override int GetMaxNumLeaves()
		{
			return default(int);
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0xE7B178", Offset = "0xE7B178", VA = "0xE7B178", Slot = "15")]
		public override void InitIvy(RuntimeGrowthParameters growthParameters, IvyContainer ivyContainer, IvyParameters ivyParameters)
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0xE7AFD4", Offset = "0xE7AFD4", VA = "0xE7AFD4")]
		private int GetMaxNumVerticesPerLeaf()
		{
			return default(int);
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0xE7B1C8", Offset = "0xE7B1C8", VA = "0xE7B1C8")]
		public RuntimeProceduralIvy()
		{
		}
	}
	[Token(Token = "0x20006B2")]
	public class RTBranchContainer
	{
		[Token(Token = "0x4002BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<RTBranchPoint> branchPoints;

		[Token(Token = "0x4002BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RTLeafPoint[][] leavesOrderedByInitSegment;

		[Token(Token = "0x4002BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float totalLength;

		[Token(Token = "0x4002BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 growDirection;

		[Token(Token = "0x4002BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float randomizeHeight;

		[Token(Token = "0x4002BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float heightVar;

		[Token(Token = "0x4002BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float newHeight;

		[Token(Token = "0x4002BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float heightParameter;

		[Token(Token = "0x4002BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float deltaHeight;

		[Token(Token = "0x4002BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float currentHeight;

		[Token(Token = "0x4002BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int branchSense;

		[Token(Token = "0x4002BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool falling;

		[Token(Token = "0x4002BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Quaternion rotationOnFallIteration;

		[Token(Token = "0x4002BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float fallIteration;

		[Token(Token = "0x4002BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int branchNumber;

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x15157B4", Offset = "0x15157B4", VA = "0x15157B4")]
		public RTBranchContainer(BranchContainer branchContainer, IvyParameters ivyParameters, RTIvyContainer rtIvyContainer, GameObject ivyGO, RTMeshData[] leavesMeshesByChosenLeaf)
		{
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x1514D94", Offset = "0x1514D94", VA = "0x1514D94")]
		public Vector2 GetLastUV(IvyParameters ivyParameters)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x1516518", Offset = "0x1516518", VA = "0x1516518")]
		public RTBranchContainer(int numPoints, int numLeaves)
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x1516548", Offset = "0x1516548", VA = "0x1516548")]
		private void Init(int numPoints, int numLeaves)
		{
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0x151669C", Offset = "0x151669C", VA = "0x151669C")]
		public void AddBranchPoint(RTBranchPoint rtBranchPoint, float deltaLength)
		{
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x1516740", Offset = "0x1516740", VA = "0x1516740")]
		public RTBranchPoint GetLastBranchPoint()
		{
			return null;
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x15167B4", Offset = "0x15167B4", VA = "0x15167B4")]
		public void AddLeaf(RTLeafPoint leafAdded)
		{
		}
	}
	[Token(Token = "0x20006B3")]
	public class RTBranchPoint
	{
		[Token(Token = "0x4002BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 point;

		[Token(Token = "0x4002BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 grabVector;

		[Token(Token = "0x4002BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float length;

		[Token(Token = "0x4002BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int index;

		[Token(Token = "0x4002BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool newBranch;

		[Token(Token = "0x4002BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int newBranchNumber;

		[Token(Token = "0x4002BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float radius;

		[Token(Token = "0x4002BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 firstVector;

		[Token(Token = "0x4002BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 axis;

		[Token(Token = "0x4002BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 centerLoop;

		[Token(Token = "0x4002BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RTBranchContainer branchContainer;

		[Token(Token = "0x4002BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RTVertexData[] verticesLoop;

		[Token(Token = "0x4002BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 lastVectorNormal;

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x1516900", Offset = "0x1516900", VA = "0x1516900")]
		public RTBranchPoint()
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x1515BF4", Offset = "0x1515BF4", VA = "0x1515BF4")]
		public RTBranchPoint(BranchPoint branchPoint, RTBranchContainer rtBranchContainer)
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x1515D88", Offset = "0x1515D88", VA = "0x1515D88")]
		public void PreInit(IvyParameters ivyParameters)
		{
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x1516908", Offset = "0x1516908", VA = "0x1516908")]
		public void SetValues(Vector3 point, Vector3 grabVector)
		{
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x1516924", Offset = "0x1516924", VA = "0x1516924")]
		public void SetValues(Vector3 point, Vector3 grabVector, bool newBranch, int newBranchNumber)
		{
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x1516940", Offset = "0x1516940", VA = "0x1516940")]
		public void InitBranchInThisPoint(int branchNumber)
		{
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x1516950", Offset = "0x1516950", VA = "0x1516950")]
		public void CalculateVerticesLoop(IvyParameters ivyParameters, RTIvyContainer rtIvyContainer, GameObject ivyGO, Vector3 firstVector, Vector3 axis, float radius)
		{
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x1515DF4", Offset = "0x1515DF4", VA = "0x1515DF4")]
		public void CalculateVerticesLoop(IvyParameters ivyParameters, RTIvyContainer rtIvyContainer, GameObject ivyGO)
		{
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x1515C9C", Offset = "0x1515C9C", VA = "0x1515C9C")]
		public void CalculateCenterLoop(GameObject ivyGO)
		{
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x1516988", Offset = "0x1516988", VA = "0x1516988")]
		public RTBranchPoint GetNextPoint()
		{
			return null;
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x1514D1C", Offset = "0x1514D1C", VA = "0x1514D1C")]
		public RTBranchPoint GetPreviousPoint()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20006B4")]
	public class RTIvyContainer
	{
		[Token(Token = "0x4002BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int lastBranchNumberAssigned;

		[Token(Token = "0x4002BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RTBranchContainer> branches;

		[Token(Token = "0x4002BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 firstVertexVector;

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x1517778", Offset = "0x1517778", VA = "0x1517778")]
		public void Initialize(Vector3 firstVertexVector)
		{
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x15173E0", Offset = "0x15173E0", VA = "0x15173E0")]
		public void Initialize(IvyContainer ivyContainer, IvyParameters ivyParameters, GameObject ivyGO, RTMeshData[] leavesMeshesByChosenLeaf, Vector3 firstVertexVector)
		{
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x151757C", Offset = "0x151757C", VA = "0x151757C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x15187D0", Offset = "0x15187D0", VA = "0x15187D0")]
		public void AddBranch(RTBranchContainer rtBranch)
		{
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x151825C", Offset = "0x151825C", VA = "0x151825C")]
		public RTBranchContainer GetBranchContainerByBranchNumber(int newBranchNumber)
		{
			return null;
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x1517078", Offset = "0x1517078", VA = "0x1517078")]
		public RTIvyContainer()
		{
		}
	}
	[Token(Token = "0x20006B5")]
	public class RTLeafPoint
	{
		[Token(Token = "0x4002BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 point;

		[Token(Token = "0x4002BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lpLength;

		[Token(Token = "0x4002BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 left;

		[Token(Token = "0x4002BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 lpForward;

		[Token(Token = "0x4002BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 lpUpward;

		[Token(Token = "0x4002BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int initSegmentIdx;

		[Token(Token = "0x4002BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int endSegmentIdx;

		[Token(Token = "0x4002BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int chosenLeave;

		[Token(Token = "0x4002BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RTVertexData[] vertices;

		[Token(Token = "0x4002BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 leafCenter;

		[Token(Token = "0x4002BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion leafRotation;

		[Token(Token = "0x4002BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float leafScale;

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x1518858", Offset = "0x1518858", VA = "0x1518858")]
		public void InitializeRuntime()
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x151885C", Offset = "0x151885C", VA = "0x151885C")]
		public RTLeafPoint()
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x15160F0", Offset = "0x15160F0", VA = "0x15160F0")]
		public RTLeafPoint(LeafPoint leafPoint, IvyParameters ivyParameters)
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x1518AE8", Offset = "0x1518AE8", VA = "0x1518AE8")]
		public void PreInit(int numVertices)
		{
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x1518B48", Offset = "0x1518B48", VA = "0x1518B48")]
		public void PreInit(RTMeshData leafMeshData)
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x1518BB8", Offset = "0x1518BB8", VA = "0x1518BB8")]
		public void SetValues(Vector3 point, float lpLength, Vector3 lpForward, Vector3 lpUpward, int chosenLeave, RTBranchPoint initSegment, RTBranchPoint endSegment, float leafScale, IvyParameters ivyParameters)
		{
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x1518864", Offset = "0x1518864", VA = "0x1518864")]
		private void CalculateLeafRotation(IvyParameters ivyParameters)
		{
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x15161F4", Offset = "0x15161F4", VA = "0x15161F4")]
		public void CreateVertices(IvyParameters ivyParameters, RTMeshData leafMeshData, GameObject ivyGO)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B6")]
	public class RTMeshData
	{
		[Token(Token = "0x4002BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int vertCount;

		[Token(Token = "0x4002BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int vertexIndex;

		[Token(Token = "0x4002BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x4002BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x4002BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2[] uv;

		[Token(Token = "0x4002BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[] uv2;

		[Token(Token = "0x4002BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color[] colors;

		[Token(Token = "0x4002BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int[] triangleIndices;

		[Token(Token = "0x4002BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int[][] triangles;

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x1513888", Offset = "0x1513888", VA = "0x1513888")]
		public RTMeshData(int numVertices, int numSubmeshes, List<int> numTrianglesPerSubmesh)
		{
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x1513A78", Offset = "0x1513A78", VA = "0x1513A78")]
		public RTMeshData(Mesh mesh)
		{
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x1518C74", Offset = "0x1518C74", VA = "0x1518C74")]
		private void SetValues(Vector3[] vertices, Vector3[] normals, Vector2[] uv, Color[] colors, int[][] triangles)
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x1518D10", Offset = "0x1518D10", VA = "0x1518D10")]
		public void CopyDataFromIndex(int index, int lastTriCount, int numTris, RTMeshData copyFrom)
		{
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x151551C", Offset = "0x151551C", VA = "0x151551C")]
		public void AddTriangle(int sumbesh, int value)
		{
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x1514BE4", Offset = "0x1514BE4", VA = "0x1514BE4")]
		public void AddVertex(Vector3 vertexValue, Vector3 normalValue, Vector2 uvValue, Color color)
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x1518E00", Offset = "0x1518E00", VA = "0x1518E00")]
		private void Resize()
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x1518EC4", Offset = "0x1518EC4", VA = "0x1518EC4")]
		public int VertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x1513D90", Offset = "0x1513D90", VA = "0x1513D90")]
		public void Clear()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B7")]
	public struct RTVertexData
	{
		[Token(Token = "0x4002BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 vertex;

		[Token(Token = "0x4002BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x4002BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 uv;

		[Token(Token = "0x4002BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 uv2;

		[Token(Token = "0x4002BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x1516964", Offset = "0x1516964", VA = "0x1516964")]
		public RTVertexData(Vector3 vertex, Vector3 normal, Vector2 uv, Vector2 uv2, Color color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B8")]
	public class RuntimeGrowthParameters
	{
		[Token(Token = "0x4002BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float growthSpeed;

		[Token(Token = "0x4002BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float lifetime;

		[Token(Token = "0x4002BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool speedOverLifetimeEnabled;

		[Token(Token = "0x4002BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve speedOverLifetimeCurve;

		[Token(Token = "0x4002BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4002BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool startGrowthOnAwake;

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0xE780EC", Offset = "0xE780EC", VA = "0xE780EC")]
		public RuntimeGrowthParameters()
		{
		}
	}
}
