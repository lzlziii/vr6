using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters.Binary;
using System.Threading;
using System.Timers;
using System.Xml.Linq;
using AK.Wwise;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Options;
using Il2CppDummyDll;
using Oculus.Spatializer.Propagation;
using Sirenix.OdinInspector;
using StudioNyx.Network;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Serializable]
[Token(Token = "0x2000002")]
public class LightControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float intensity;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bounceIntensity;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float range;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xD842F4", Offset = "0xD842F4", VA = "0xD842F4")]
	public LightControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000003")]
public class LightControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightControlBehaviour template;

	[Token(Token = "0x17000001")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xD84338", Offset = "0xD84338", VA = "0xD84338", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xD84340", Offset = "0xD84340", VA = "0xD84340", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xD843E0", Offset = "0xD843E0", VA = "0xD843E0")]
	public LightControlClip()
	{
	}
}
[Token(Token = "0x2000004")]
public class LightControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_DefaultIntensity;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_DefaultBounceIntensity;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_DefaultRange;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light m_TrackBinding;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xD84444", Offset = "0xD84444", VA = "0xD84444", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xD84810", Offset = "0xD84810", VA = "0xD84810", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xD848EC", Offset = "0xD848EC", VA = "0xD848EC")]
	public LightControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77BCB8", Offset = "0x77BCB8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77BCB8", Offset = "0x77BCB8")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x77BCB8", Offset = "0x77BCB8")]
public class LightControlTrack : TrackAsset
{
	[Token(Token = "0x6000008")]
	[Address(RVA = "0xD848F4", Offset = "0xD848F4", VA = "0xD848F4", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xD8498C", Offset = "0xD8498C", VA = "0xD8498C", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xD84994", Offset = "0xD84994", VA = "0xD84994")]
	public LightControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000006")]
public class NavMeshAgentControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform destination;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destinationSet;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xF3C300", Offset = "0xF3C300", VA = "0xF3C300", Slot = "15")]
	public override void OnPlayableCreate(Playable playable)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xF3C308", Offset = "0xF3C308", VA = "0xF3C308")]
	public NavMeshAgentControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000007")]
public class NavMeshAgentControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Transform> destination;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public NavMeshAgentControlBehaviour template;

	[Token(Token = "0x17000002")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600000D")]
		[Address(RVA = "0xF3C310", Offset = "0xF3C310", VA = "0xF3C310", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xF3C318", Offset = "0xF3C318", VA = "0xF3C318", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xF3C424", Offset = "0xF3C424", VA = "0xF3C424")]
	public NavMeshAgentControlClip()
	{
	}
}
[Token(Token = "0x2000008")]
public class NavMeshAgentControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6000010")]
	[Address(RVA = "0xF3C48C", Offset = "0xF3C48C", VA = "0xF3C48C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xF3C6BC", Offset = "0xF3C6BC", VA = "0xF3C6BC")]
	public NavMeshAgentControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77BD6C", Offset = "0x77BD6C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77BD6C", Offset = "0x77BD6C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x77BD6C", Offset = "0x77BD6C")]
public class NavMeshAgentControlTrack : TrackAsset
{
	[Token(Token = "0x6000012")]
	[Address(RVA = "0xF3C6C4", Offset = "0xF3C6C4", VA = "0xF3C6C4", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xF3C75C", Offset = "0xF3C75C", VA = "0xF3C75C")]
	public NavMeshAgentControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200000A")]
public class ScreenFaderBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xCC3104", Offset = "0xCC3104", VA = "0xCC3104")]
	public ScreenFaderBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200000B")]
public class ScreenFaderClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScreenFaderBehaviour template;

	[Token(Token = "0x17000003")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000015")]
		[Address(RVA = "0xCC3138", Offset = "0xCC3138", VA = "0xCC3138", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xCC3140", Offset = "0xCC3140", VA = "0xCC3140", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xCC31E0", Offset = "0xCC31E0", VA = "0xCC31E0")]
	public ScreenFaderClip()
	{
	}
}
[Token(Token = "0x200000C")]
public class ScreenFaderMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image m_TrackBinding;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xCC3244", Offset = "0xCC3244", VA = "0xCC3244", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xCC3558", Offset = "0xCC3558", VA = "0xCC3558", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xCC3600", Offset = "0xCC3600", VA = "0xCC3600")]
	public ScreenFaderMixerBehaviour()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77BE20", Offset = "0x77BE20")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77BE20", Offset = "0x77BE20")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x77BE20", Offset = "0x77BE20")]
public class ScreenFaderTrack : TrackAsset
{
	[Token(Token = "0x600001B")]
	[Address(RVA = "0xCC3608", Offset = "0xCC3608", VA = "0xCC3608", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xCC36A0", Offset = "0xCC36A0", VA = "0xCC36A0", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xCC36A8", Offset = "0xCC36A8", VA = "0xCC36A8")]
	public ScreenFaderTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public class TextSwitcherBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fontSize;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xCD396C", Offset = "0xCD396C", VA = "0xCD396C")]
	public TextSwitcherBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200000F")]
public class TextSwitcherClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextSwitcherBehaviour template;

	[Token(Token = "0x17000004")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0xCD39A8", Offset = "0xCD39A8", VA = "0xCD39A8", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xCD39B0", Offset = "0xCD39B0", VA = "0xCD39B0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xCD3A50", Offset = "0xCD3A50", VA = "0xCD3A50")]
	public TextSwitcherClip()
	{
	}
}
[Token(Token = "0x2000010")]
public class TextSwitcherMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_DefaultFontSize;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_DefaultText;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text m_TrackBinding;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xCD3AB4", Offset = "0xCD3AB4", VA = "0xCD3AB4", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xCD3EE8", Offset = "0xCD3EE8", VA = "0xCD3EE8", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xCD3FC0", Offset = "0xCD3FC0", VA = "0xCD3FC0")]
	public TextSwitcherMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77BED0", Offset = "0x77BED0")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77BED0", Offset = "0x77BED0")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x77BED0", Offset = "0x77BED0")]
public class TextSwitcherTrack : TrackAsset
{
	[Token(Token = "0x6000025")]
	[Address(RVA = "0xCD3FC8", Offset = "0xCD3FC8", VA = "0xCD3FC8", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xCD4060", Offset = "0xCD4060", VA = "0xCD4060", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xCD4068", Offset = "0xCD4068", VA = "0xCD4068")]
	public TextSwitcherTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class TimeDilationBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeScale;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xCD40D0", Offset = "0xCD40D0", VA = "0xCD40D0")]
	public TimeDilationBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000013")]
public class TimeDilationClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeDilationBehaviour template;

	[Token(Token = "0x17000005")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0xCD40E0", Offset = "0xCD40E0", VA = "0xCD40E0", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xCD40E8", Offset = "0xCD40E8", VA = "0xCD40E8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xCD4188", Offset = "0xCD4188", VA = "0xCD4188")]
	public TimeDilationClip()
	{
	}
}
[Token(Token = "0x2000014")]
public class TimeDilationMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly float defaultTimeScale;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xCD41F8", Offset = "0xCD41F8", VA = "0xCD41F8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xCD43C4", Offset = "0xCD43C4", VA = "0xCD43C4", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xCD43D0", Offset = "0xCD43D0", VA = "0xCD43D0", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xCD43DC", Offset = "0xCD43DC", VA = "0xCD43DC", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xCD43E8", Offset = "0xCD43E8", VA = "0xCD43E8")]
	public TimeDilationMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77BF84", Offset = "0x77BF84")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77BF84", Offset = "0x77BF84")]
public class TimeDilationTrack : TrackAsset
{
	[Token(Token = "0x6000031")]
	[Address(RVA = "0xCD43F8", Offset = "0xCD43F8", VA = "0xCD43F8", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xCD4490", Offset = "0xCD4490", VA = "0xCD4490")]
	public TimeDilationTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class TransformTweenBehaviour : PlayableBehaviour
{
	[Token(Token = "0x20001CB")]
	public enum TweenType
	{
		[Token(Token = "0x4000994")]
		Linear,
		[Token(Token = "0x4000995")]
		Deceleration,
		[Token(Token = "0x4000996")]
		Harmonic,
		[Token(Token = "0x4000997")]
		Custom
	}

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform startLocation;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform endLocation;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool tweenPosition;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool tweenRotation;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TweenType tweenType;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve customCurve;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 startingPosition;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion startingRotation;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve m_LinearCurve;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve m_DecelerationCurve;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimationCurve m_HarmonicCurve;

	[Token(Token = "0x400002C")]
	private const float k_RightAngleInRads = (float)Math.PI / 2f;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xCD47F8", Offset = "0xCD47F8", VA = "0xCD47F8", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xCD48A0", Offset = "0xCD48A0", VA = "0xCD48A0")]
	public float EvaluateCurrentCurve(float time)
	{
		return default(float);
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xCD4998", Offset = "0xCD4998", VA = "0xCD4998")]
	private bool IsCustomCurveNormalised()
	{
		return default(bool);
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xCD4BC0", Offset = "0xCD4BC0", VA = "0xCD4BC0")]
	public TransformTweenBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000017")]
public class TransformTweenClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TransformTweenBehaviour template;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<Transform> startLocation;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExposedReference<Transform> endLocation;

	[Token(Token = "0x17000006")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000037")]
		[Address(RVA = "0xCD4DA4", Offset = "0xCD4DA4", VA = "0xCD4DA4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xCD4DAC", Offset = "0xCD4DAC", VA = "0xCD4DAC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xCD4EDC", Offset = "0xCD4EDC", VA = "0xCD4EDC")]
	public TransformTweenClip()
	{
	}
}
[Token(Token = "0x2000018")]
public class TransformTweenMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xCD4F40", Offset = "0xCD4F40", VA = "0xCD4F40", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xCD5668", Offset = "0xCD5668", VA = "0xCD5668", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xCD5654", Offset = "0xCD5654", VA = "0xCD5654")]
	private static Quaternion AddQuaternions(Quaternion first, Quaternion second)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xCD5640", Offset = "0xCD5640", VA = "0xCD5640")]
	private static Quaternion ScaleQuaternion(Quaternion rotation, float multiplier)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xCD5670", Offset = "0xCD5670", VA = "0xCD5670")]
	private static float QuaternionMagnitude(Quaternion rotation)
	{
		return default(float);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xCD5550", Offset = "0xCD5550", VA = "0xCD5550")]
	private static Quaternion NormalizeQuaternion(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xCD575C", Offset = "0xCD575C", VA = "0xCD575C")]
	public TransformTweenMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77C010", Offset = "0x77C010")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77C010", Offset = "0x77C010")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x77C010", Offset = "0x77C010")]
public class TransformTweenTrack : TrackAsset
{
	[Token(Token = "0x6000041")]
	[Address(RVA = "0xCD5764", Offset = "0xCD5764", VA = "0xCD5764", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xCD57FC", Offset = "0xCD57FC", VA = "0xCD57FC", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xCD5804", Offset = "0xCD5804", VA = "0xCD5804")]
	public TransformTweenTrack()
	{
	}
}
[Token(Token = "0x200001A")]
public static class BinarySerializationHelper
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BinaryFormatter formatter;

	[Token(Token = "0x6000044")]
	public static void Serialize<T>(Stream stream, T obj)
	{
	}

	[Token(Token = "0x6000045")]
	public static T Deserialize<T>(Stream stream)
	{
		return (T)null;
	}
}
[Token(Token = "0x200001B")]
internal class BindChanger : SerializationBinder
{
	[Token(Token = "0x6000047")]
	[Address(RVA = "0xD67138", Offset = "0xD67138", VA = "0xD67138", Slot = "5")]
	public override Type BindToType(string assemblyName, string typeName)
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xD67214", Offset = "0xD67214", VA = "0xD67214")]
	public BindChanger()
	{
	}
}
[Token(Token = "0x200001C")]
public class DebugText : MonoBehaviour
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string receivedMessage;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text receivedText;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xD69F1C", Offset = "0xD69F1C", VA = "0xD69F1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xD69F74", Offset = "0xD69F74", VA = "0xD69F74")]
	private void Update()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xD69FE0", Offset = "0xD69FE0", VA = "0xD69FE0")]
	public DebugText()
	{
	}
}
[Token(Token = "0x200001D")]
public class AvatarBorders : MonoBehaviour
{
	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _circleBorder;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer _cylinderMeshRenderer;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform[] _playerTransforms;

	[Token(Token = "0x4000037")]
	private const float DrawCylinderDistance = 1.2f;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int StartHeight;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xD65C7C", Offset = "0xD65C7C", VA = "0xD65C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xD65FB8", Offset = "0xD65FB8", VA = "0xD65FB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xD66188", Offset = "0xD66188", VA = "0xD66188")]
	private void UpdateCircle()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xD66440", Offset = "0xD66440", VA = "0xD66440")]
	private void UpdateCylinder()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xD66700", Offset = "0xD66700", VA = "0xD66700")]
	public AvatarBorders()
	{
	}
}
[Token(Token = "0x200001E")]
public class AvatarDistanceFade : MonoBehaviour
{
	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77DA98", Offset = "0x77DA98")]
	private float _visibleDistance;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _colorName;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _isColor;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material _material;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _mainCameraTransform;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xD6676C", Offset = "0xD6676C", VA = "0xD6676C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xD667EC", Offset = "0xD667EC", VA = "0xD667EC")]
	private void DistanceFade()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xD66994", Offset = "0xD66994", VA = "0xD66994")]
	private void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xD66998", Offset = "0xD66998", VA = "0xD66998")]
	public AvatarDistanceFade()
	{
	}
}
[Token(Token = "0x200001F")]
public class AvatarHands : MonoBehaviour
{
	[Token(Token = "0x6000056")]
	[Address(RVA = "0xD669A0", Offset = "0xD669A0", VA = "0xD669A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xD66B04", Offset = "0xD66B04", VA = "0xD66B04")]
	private void InputEnable(bool obj)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xD66B38", Offset = "0xD66B38", VA = "0xD66B38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xD66C9C", Offset = "0xD66C9C", VA = "0xD66C9C")]
	public AvatarHands()
	{
	}
}
[Token(Token = "0x2000020")]
public class CameraFadeToBlack : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D564", Offset = "0x77D564")]
	private sealed class <>c
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static TweenCallback <>9__1_0;

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xD68A30", Offset = "0xD68A30", VA = "0xD68A30")]
		public <>c()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xD68A38", Offset = "0xD68A38", VA = "0xD68A38")]
		internal void <FadeToBlack>b__1_0()
		{
		}
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xD68844", Offset = "0xD68844", VA = "0xD68844")]
	private void Start()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xD68848", Offset = "0xD68848", VA = "0xD68848")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x783070", Offset = "0x783070")]
	private void FadeToBlack()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xD689C4", Offset = "0xD689C4", VA = "0xD689C4")]
	public CameraFadeToBlack()
	{
	}
}
[Token(Token = "0x2000021")]
public class CameraTransitionFade : MonoBehaviour
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77DB04", Offset = "0x77DB04")]
	private Action <_onFadeIn>k__BackingField;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _isFadingIn;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _isFadingOut;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _fadeValue;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _fadeTime;

	[Token(Token = "0x17000007")]
	private Action _onFadeIn
	{
		[Token(Token = "0x600005D")]
		[Address(RVA = "0xD68A40", Offset = "0xD68A40", VA = "0xD68A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783080", Offset = "0x783080")]
		get
		{
			return null;
		}
		[Token(Token = "0x600005E")]
		[Address(RVA = "0xD68A48", Offset = "0xD68A48", VA = "0xD68A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783090", Offset = "0x783090")]
		set
		{
		}
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xD68A50", Offset = "0xD68A50", VA = "0xD68A50")]
	public void FadeIn(Action onFadeIn)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xD68AA0", Offset = "0xD68AA0", VA = "0xD68AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xD68C28", Offset = "0xD68C28", VA = "0xD68C28")]
	public CameraTransitionFade()
	{
	}
}
[Token(Token = "0x2000022")]
public class DelayedEvent : MonoBehaviour
{
	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent _event;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _delay;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _isEventCanceled;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xD6B0E8", Offset = "0xD6B0E8", VA = "0xD6B0E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xD6B140", Offset = "0xD6B140", VA = "0xD6B140")]
	public void CancelEvent()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xD6B14C", Offset = "0xD6B14C", VA = "0xD6B14C")]
	private void CallEvent()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xD6B168", Offset = "0xD6B168", VA = "0xD6B168")]
	public DelayedEvent()
	{
	}
}
[Token(Token = "0x2000023")]
public class MariekeRoomSynchronizer : MonoBehaviour
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x77DB24", Offset = "0x77DB24")]
	[SerializeField]
	private PlayableDirector _MariekeTimeline;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _playTimeline;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xD85388", Offset = "0xD85388", VA = "0xD85388")]
	private void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xD855E8", Offset = "0xD855E8", VA = "0xD855E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xD855FC", Offset = "0xD855FC", VA = "0xD855FC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7830A0", Offset = "0x7830A0")]
	public void BeginMariekeSequence()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xD8564C", Offset = "0xD8564C", VA = "0xD8564C")]
	public MariekeRoomSynchronizer()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xD85654", Offset = "0xD85654", VA = "0xD85654")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7830B0", Offset = "0x7830B0")]
	private void <Start>b__2_0(INetworkMessage NetworkManager)
	{
	}
}
[Serializable]
[Token(Token = "0x2000024")]
public class SpawnedObjectDestroyMessage : BaseNetworkMessage
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string TargetIP;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xCC5F18", Offset = "0xCC5F18", VA = "0xCC5F18")]
	public SpawnedObjectDestroyMessage(string targetIP)
	{
	}
}
[Serializable]
[Token(Token = "0x2000025")]
public class BurnBooksMessage : BaseNetworkMessage
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SerializableVector3 FirePosition;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xD68530", Offset = "0xD68530", VA = "0xD68530")]
	public BurnBooksMessage(Vector3 pos)
	{
	}
}
[Serializable]
[Token(Token = "0x2000026")]
public class MatchBoxOpenMessage : BaseNetworkMessage
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsOpen;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xD85660", Offset = "0xD85660", VA = "0xD85660")]
	public MatchBoxOpenMessage(bool isOpen)
	{
	}
}
[Serializable]
[Token(Token = "0x2000027")]
public class MatchBoxOwnerMessage : BaseNetworkMessage
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string OwnerID;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xD85690", Offset = "0xD85690", VA = "0xD85690")]
	public MatchBoxOwnerMessage(string ownerID)
	{
	}
}
[Token(Token = "0x2000028")]
public class MatchCounter : MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int matchCount;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static TransformSynchronizer lastMatch;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MatchboxSynchronizer _matchboxSynchronizer;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xD856BC", Offset = "0xD856BC", VA = "0xD856BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xD85928", Offset = "0xD85928", VA = "0xD85928")]
	public void OnMatchGrabbed()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xD859C8", Offset = "0xD859C8", VA = "0xD859C8")]
	public void OnMatchReleased()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xD85B64", Offset = "0xD85B64", VA = "0xD85B64")]
	public MatchCounter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000029")]
public class MatchGrabbedMessage : BaseNetworkMessage
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string HandID;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string MatchID;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsGrabbed;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xD85B6C", Offset = "0xD85B6C", VA = "0xD85B6C")]
	public MatchGrabbedMessage(string matchID, bool isGrabbed, string handID)
	{
	}
}
[Serializable]
[Token(Token = "0x200002A")]
public class MatchLitMessage : BaseNetworkMessage
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string MatchID;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsLit;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xD85BB0", Offset = "0xD85BB0", VA = "0xD85BB0")]
	public MatchLitMessage(string matchID, bool isLit)
	{
	}
}
[Token(Token = "0x200002B")]
public class MatchboxSynchronizer : MonoBehaviour
{
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D574", Offset = "0x77D574")]
	private sealed class <SetOwnerCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MatchboxSynchronizer <>4__this;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0xD87394", Offset = "0xD87394", VA = "0xD87394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0xD873FC", Offset = "0xD873FC", VA = "0xD873FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xD86B54", Offset = "0xD86B54", VA = "0xD86B54")]
		[DebuggerHidden]
		public <SetOwnerCoroutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xD87218", Offset = "0xD87218", VA = "0xD87218", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xD8721C", Offset = "0xD8721C", VA = "0xD8721C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xD8739C", Offset = "0xD8739C", VA = "0xD8739C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D584", Offset = "0x77D584")]
	private sealed class <GrabMatchCoroutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableGrab interactableGrab;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0xD871A8", Offset = "0xD871A8", VA = "0xD871A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0xD87210", Offset = "0xD87210", VA = "0xD87210", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xD86CDC", Offset = "0xD86CDC", VA = "0xD86CDC")]
		[DebuggerHidden]
		public <GrabMatchCoroutine>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xD87000", Offset = "0xD87000", VA = "0xD87000", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xD87004", Offset = "0xD87004", VA = "0xD87004", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xD871B0", Offset = "0xD871B0", VA = "0xD871B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _originalParent;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractableGrab matchbox;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform matchboxInside;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandPose _matchBoxPose;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandPose _matchPose;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BookFireStarter _bookFireStarter;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _updateParent;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _ownerID;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _lastOwnerID;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _updateOpen;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _shouldOpen;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool _burnBooks;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _firePos;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _updateMatchLight;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool _isMatchLit;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _matchId;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _updateMatchGrab;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _handID;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _isMatchGrabbed;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _grabbedMatchID;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform _grabbedMatch;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xD85BF0", Offset = "0xD85BF0", VA = "0xD85BF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xD85FCC", Offset = "0xD85FCC", VA = "0xD85FCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xD86688", Offset = "0xD86688", VA = "0xD86688")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xD86780", Offset = "0xD86780", VA = "0xD86780")]
	private void MatchGrabbed(INetworkMessage obj)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xD86830", Offset = "0xD86830", VA = "0xD86830")]
	private void OnMatchboxOwnerChange(INetworkMessage obj)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xD868D8", Offset = "0xD868D8", VA = "0xD868D8")]
	private void OnMatchboxOpen(INetworkMessage obj)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xD86970", Offset = "0xD86970", VA = "0xD86970")]
	private void OnMatchLit(INetworkMessage obj)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xD86A10", Offset = "0xD86A10", VA = "0xD86A10")]
	private void BurnBooks(INetworkMessage obj)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xD86AB8", Offset = "0xD86AB8", VA = "0xD86AB8")]
	public void SetAsOwner()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xD86AE4", Offset = "0xD86AE4", VA = "0xD86AE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7830C0", Offset = "0x7830C0")]
	private IEnumerator SetOwnerCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xD86B80", Offset = "0xD86B80", VA = "0xD86B80")]
	public void Release()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xD8599C", Offset = "0xD8599C", VA = "0xD8599C")]
	public void GrabMatch(InteractableGrab interactableGrab)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xD86C6C", Offset = "0xD86C6C", VA = "0xD86C6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783124", Offset = "0x783124")]
	private IEnumerator GrabMatchCoroutine(InteractableGrab interactableGrab)
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xD85A2C", Offset = "0xD85A2C", VA = "0xD85A2C")]
	public void ReleaseMatch(InteractableGrab interactableGrab)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xD86D08", Offset = "0xD86D08", VA = "0xD86D08")]
	public void SetOpenMatchBox(bool value)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xD86DE4", Offset = "0xD86DE4", VA = "0xD86DE4")]
	public void StartFire(Vector3 firePos)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xD86EE0", Offset = "0xD86EE0", VA = "0xD86EE0")]
	public void SetMatchLit(GameObject go, bool isLit)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xD86FF8", Offset = "0xD86FF8", VA = "0xD86FF8")]
	public MatchboxSynchronizer()
	{
	}
}
[Token(Token = "0x200002C")]
public class ServerMatchBox : MonoBehaviour
{
	[Token(Token = "0x6000087")]
	[Address(RVA = "0xCC43BC", Offset = "0xCC43BC", VA = "0xCC43BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xCC43C0", Offset = "0xCC43C0", VA = "0xCC43C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xCC43C4", Offset = "0xCC43C4", VA = "0xCC43C4")]
	public ServerMatchBox()
	{
	}
}
[Token(Token = "0x200002D")]
public class SynchronizedMatch : MonoBehaviour
{
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator _animator;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator _flameAnimator;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xCD0FB4", Offset = "0xCD0FB4", VA = "0xCD0FB4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x783188", Offset = "0x783188")]
	public void SetLit(bool value)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xCD1050", Offset = "0xCD1050", VA = "0xCD1050")]
	public SynchronizedMatch()
	{
	}
}
[Token(Token = "0x200002E")]
public class LanguageMessageReceiver : MonoBehaviour
{
	[Token(Token = "0x600008C")]
	[Address(RVA = "0xD83C58", Offset = "0xD83C58", VA = "0xD83C58")]
	private void Start()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xD83E18", Offset = "0xD83E18", VA = "0xD83E18")]
	public void SelectLanguage(INetworkMessage message)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xD747CC", Offset = "0xD747CC", VA = "0xD747CC")]
	public static void SetWwiseLanguage()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xD83ECC", Offset = "0xD83ECC", VA = "0xD83ECC")]
	public LanguageMessageReceiver()
	{
	}
}
[Token(Token = "0x200002F")]
public class LanguageMessageSender : MonoBehaviour
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _currentLanguage;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Dropdown _TMPDropdown;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xD83ED4", Offset = "0xD83ED4", VA = "0xD83ED4")]
	public void SelectLanguage()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xD84004", Offset = "0xD84004", VA = "0xD84004")]
	public LanguageMessageSender()
	{
	}
}
[Token(Token = "0x2000030")]
public class Locomotion : MonoBehaviour
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _movementSpeed;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _rotateSpeed;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _maxAllowedDistanceFromCenter;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _debugMode;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputDevice _leftInputDevice;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputDevice _rightInputDevice;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _clickToMove;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _VrCameraTransform;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CapsuleCollider _capsuleCollider;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xD84AEC", Offset = "0xD84AEC", VA = "0xD84AEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xD84E40", Offset = "0xD84E40", VA = "0xD84E40")]
	private void SceneManager_activeSceneChanged(Scene arg0, Scene arg1)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xD84C14", Offset = "0xD84C14", VA = "0xD84C14")]
	private void InputDevices_deviceConnected(InputDevice obj)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xD84F1C", Offset = "0xD84F1C", VA = "0xD84F1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xD84F48", Offset = "0xD84F48", VA = "0xD84F48")]
	private void MovePlayer(InputDevice inputDevice)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xD85370", Offset = "0xD85370", VA = "0xD85370")]
	public Locomotion()
	{
	}
}
[Token(Token = "0x2000031")]
public class PlaygroundCenter : MonoBehaviour
{
	[Token(Token = "0x6000098")]
	[Address(RVA = "0xCC0CAC", Offset = "0xCC0CAC", VA = "0xCC0CAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xCC0D38", Offset = "0xCC0D38", VA = "0xCC0D38")]
	public PlaygroundCenter()
	{
	}
}
[Token(Token = "0x2000032")]
public class PostRenderAction : MonoBehaviour
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77DBC0", Offset = "0x77DBC0")]
	private Action <PostRender>k__BackingField;

	[Token(Token = "0x17000008")]
	public Action PostRender
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0xCC1428", Offset = "0xCC1428", VA = "0xCC1428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783198", Offset = "0x783198")]
		get
		{
			return null;
		}
		[Token(Token = "0x600009B")]
		[Address(RVA = "0xCC1430", Offset = "0xCC1430", VA = "0xCC1430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7831A8", Offset = "0x7831A8")]
		set
		{
		}
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xCC1438", Offset = "0xCC1438", VA = "0xCC1438")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xCC144C", Offset = "0xCC144C", VA = "0xCC144C")]
	public PostRenderAction()
	{
	}
}
[Token(Token = "0x2000033")]
public class RandomAvatar : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77DBD0", Offset = "0x77DBD0")]
	private float _visibleDistance;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _mainCameraTransform;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _childIndex;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _avatarNeck;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _headRot;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _eyesGameObject;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkinnedMeshRenderer _blinkSkinnedMeshRenderer;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _nextBlinkTime;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _eyeLidBlendValue;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _animateEyeLids;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _eyeLidBlendValueTimeMultiplier;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xCC15C4", Offset = "0xCC15C4", VA = "0xCC15C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xCC182C", Offset = "0xCC182C", VA = "0xCC182C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xCC1A64", Offset = "0xCC1A64", VA = "0xCC1A64")]
	private void FixHeadOrientation()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xCC1B7C", Offset = "0xCC1B7C", VA = "0xCC1B7C")]
	private void PostRender()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xCC1850", Offset = "0xCC1850", VA = "0xCC1850")]
	private void DistanceFade()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xCC1944", Offset = "0xCC1944", VA = "0xCC1944")]
	private void EyeBlink()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xCC1C24", Offset = "0xCC1C24", VA = "0xCC1C24")]
	public RandomAvatar()
	{
	}
}
[Token(Token = "0x2000034")]
public class SendLogMessage : MonoBehaviour
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string message;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xCC3EE0", Offset = "0xCC3EE0", VA = "0xCC3EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xCC40AC", Offset = "0xCC40AC", VA = "0xCC40AC")]
	public SendLogMessage()
	{
	}
}
[Token(Token = "0x2000035")]
public class QuitApp : SerializedMonoBehaviour
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<IResetable> Resetables;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xCC1454", Offset = "0xCC1454", VA = "0xCC1454")]
	public void Reset()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xCC15B4", Offset = "0xCC15B4", VA = "0xCC15B4")]
	public void Quit()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xCC15BC", Offset = "0xCC15BC", VA = "0xCC15BC")]
	public QuitApp()
	{
	}
}
[Token(Token = "0x2000036")]
public interface IResetable
{
	[Token(Token = "0x60000AA")]
	void OnServerReset();
}
[Serializable]
[Token(Token = "0x2000037")]
public struct SerializableQuaternion
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float w;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xCC40B4", Offset = "0xCC40B4", VA = "0xCC40B4")]
	public SerializableQuaternion(float rX, float rY, float rZ, float rW)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xCC40C0", Offset = "0xCC40C0", VA = "0xCC40C0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xCC4264", Offset = "0xCC4264", VA = "0xCC4264")]
	public static implicit operator Quaternion(SerializableQuaternion rValue)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xCC4294", Offset = "0xCC4294", VA = "0xCC4294")]
	public static implicit operator SerializableQuaternion(Quaternion rValue)
	{
		return default(SerializableQuaternion);
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public struct SerializableVector3
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xCC4298", Offset = "0xCC4298", VA = "0xCC4298")]
	public SerializableVector3(float rX, float rY, float rZ)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xCC42A4", Offset = "0xCC42A4", VA = "0xCC42A4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xCC4364", Offset = "0xCC4364", VA = "0xCC4364")]
	public static implicit operator Vector3(SerializableVector3 rValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xCC4398", Offset = "0xCC4398", VA = "0xCC4398")]
	public static implicit operator SerializableVector3(Vector3 rValue)
	{
		return default(SerializableVector3);
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xCC439C", Offset = "0xCC439C", VA = "0xCC439C")]
	public static SerializableVector3 operator +(SerializableVector3 Vec1, SerializableVector3 Vec2)
	{
		return default(SerializableVector3);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xCC43AC", Offset = "0xCC43AC", VA = "0xCC43AC")]
	public static SerializableVector3 operator -(SerializableVector3 Vec1, SerializableVector3 Vec2)
	{
		return default(SerializableVector3);
	}
}
[Token(Token = "0x2000039")]
public class MessageUI : MonoBehaviour
{
	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textUI;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField textInput;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string receivedText;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMessage _textMessage;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NetworkManager _networkManager;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xF3B8A8", Offset = "0xF3B8A8", VA = "0xF3B8A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xF3BA18", Offset = "0xF3BA18", VA = "0xF3BA18")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xF3BA44", Offset = "0xF3BA44", VA = "0xF3BA44")]
	public void OnTextChange()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xF3BA84", Offset = "0xF3BA84", VA = "0xF3BA84")]
	public MessageUI()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xF3BA8C", Offset = "0xF3BA8C", VA = "0xF3BA8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7831B8", Offset = "0x7831B8")]
	private void <Start>b__5_0(INetworkMessage message)
	{
	}
}
[Token(Token = "0x200003A")]
public class PingUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D594", Offset = "0x77D594")]
	private sealed class <>c
	{
		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<INetworkMessage> <>9__2_0;

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xF50F58", Offset = "0xF50F58", VA = "0xF50F58")]
		public <>c()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xF50F60", Offset = "0xF50F60", VA = "0xF50F60")]
		internal void <Start>b__2_0(INetworkMessage ping)
		{
		}
	}

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private System.Timers.Timer _sendTimer;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xF50C60", Offset = "0xF50C60", VA = "0xF50C60")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xF50E00", Offset = "0xF50E00", VA = "0xF50E00")]
	private void SendTransform(object sender, ElapsedEventArgs e)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xF50EEC", Offset = "0xF50EEC", VA = "0xF50EEC")]
	public PingUI()
	{
	}
}
[Token(Token = "0x200003B")]
public class DelayActive : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D5A4", Offset = "0x77D5A4")]
	private sealed class <Delay>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelayActive <>4__this;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer[] <>7__wrap2;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap3;

		[Token(Token = "0x17000223")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0xD6B078", Offset = "0xD6B078", VA = "0xD6B078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0xD6B0E0", Offset = "0xD6B0E0", VA = "0xD6B0E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xD6AF18", Offset = "0xD6AF18", VA = "0xD6AF18")]
		[DebuggerHidden]
		public <Delay>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xD6AF4C", Offset = "0xD6AF4C", VA = "0xD6AF4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xD6AF50", Offset = "0xD6AF50", VA = "0xD6AF50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xD6B080", Offset = "0xD6B080", VA = "0xD6B080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer[] objs;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xD6ADB0", Offset = "0xD6ADB0", VA = "0xD6ADB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xD6AEA8", Offset = "0xD6AEA8", VA = "0xD6AEA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7831C8", Offset = "0x7831C8")]
	private IEnumerator Delay()
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xD6AF44", Offset = "0xD6AF44", VA = "0xD6AF44")]
	public DelayActive()
	{
	}
}
[Token(Token = "0x200003C")]
public class AnimatorDisableGameObject : StateMachineBehaviour
{
	[Token(Token = "0x20001D1")]
	public enum State
	{
		[Token(Token = "0x40009A9")]
		OnEnter,
		[Token(Token = "0x40009AA")]
		OnExit
	}

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public State state;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xD639C4", Offset = "0xD639C4", VA = "0xD639C4", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xD63A04", Offset = "0xD63A04", VA = "0xD63A04", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xD63A48", Offset = "0xD63A48", VA = "0xD63A48")]
	public AnimatorDisableGameObject()
	{
	}
}
[Token(Token = "0x200003D")]
public class FrameSequencePlayer : MonoBehaviour
{
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D5B4", Offset = "0x77D5B4")]
	private sealed class <Ticker>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FrameSequencePlayer <>4__this;

		[Token(Token = "0x17000225")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0xD71628", Offset = "0xD71628", VA = "0xD71628", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0xD71690", Offset = "0xD71690", VA = "0xD71690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xD713A0", Offset = "0xD713A0", VA = "0xD713A0")]
		[DebuggerHidden]
		public <Ticker>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xD714D8", Offset = "0xD714D8", VA = "0xD714D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xD714DC", Offset = "0xD714DC", VA = "0xD714DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xD71630", Offset = "0xD71630", VA = "0xD71630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PlayOnEnable;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77DC2C", Offset = "0x77DC2C")]
	public int FrameRate;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Loop;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ShaderProperty;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material SpecificMaterial;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool UseSharedMaterial;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D[] Frames;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _material;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture _originalTexture;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine _ticker;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer _renderer;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _frameIndex;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _playing;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xD70FB8", Offset = "0xD70FB8", VA = "0xD70FB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xD71288", Offset = "0xD71288", VA = "0xD71288")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xD71224", Offset = "0xD71224", VA = "0xD71224")]
	public void Play()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xD71370", Offset = "0xD71370", VA = "0xD71370")]
	public void Pause()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xD712C4", Offset = "0xD712C4", VA = "0xD712C4")]
	public void Stop()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xD71300", Offset = "0xD71300", VA = "0xD71300")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x78322C", Offset = "0x78322C")]
	private IEnumerator Ticker()
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xD713CC", Offset = "0xD713CC", VA = "0xD713CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xD71468", Offset = "0xD71468", VA = "0xD71468")]
	public FrameSequencePlayer()
	{
	}
}
[Token(Token = "0x200003E")]
public class HandAnimator : MonoBehaviour
{
	[Token(Token = "0x20001D3")]
	public enum PoseId
	{
		[Token(Token = "0x40009AF")]
		Idle,
		[Token(Token = "0x40009B0")]
		Up,
		[Token(Token = "0x40009B1")]
		Touch,
		[Token(Token = "0x40009B2")]
		Down
	}

	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D5C4", Offset = "0x77D5C4")]
	private sealed class <TransitionResponsiveHandPoses>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandAnimator <>4__this;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float target;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <endTime>5__2;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <sw>5__3;

		[Token(Token = "0x17000227")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0xD73108", Offset = "0xD73108", VA = "0xD73108", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xD73170", Offset = "0xD73170", VA = "0xD73170", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xD72F78", Offset = "0xD72F78", VA = "0xD72F78")]
		[DebuggerHidden]
		public <TransitionResponsiveHandPoses>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xD72FA4", Offset = "0xD72FA4", VA = "0xD72FA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xD72FA8", Offset = "0xD72FA8", VA = "0xD72FA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xD73110", Offset = "0xD73110", VA = "0xD73110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string IdleParameter;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x77DC48", Offset = "0x77DC48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77DC48", Offset = "0x77DC48")]
	public Transform Pivot1;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Pivot2;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Pivot3;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Pivot4;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform Pivot5;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Pivot6;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Pivot7;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int ThumbPoseId;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int IndexPoseId;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int ThreePoseId;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int m_thumbLayer;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int m_indexLayer;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int m_threeLayer;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77DC94", Offset = "0x77DC94")]
	private bool <isPosing>k__BackingField;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine m_layerCoroutine;

	[Token(Token = "0x17000009")]
	public bool isPosing
	{
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xD716DC", Offset = "0xD716DC", VA = "0xD716DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783290", Offset = "0x783290")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xD716E4", Offset = "0xD716E4", VA = "0xD716E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7832A0", Offset = "0x7832A0")]
		set
		{
		}
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xD716F0", Offset = "0xD716F0", VA = "0xD716F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xD71854", Offset = "0xD71854", VA = "0xD71854")]
	public void PlayPose(HandPose pose)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xD717C4", Offset = "0xD717C4", VA = "0xD717C4")]
	public void PlayIdle()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xD71B30", Offset = "0xD71B30", VA = "0xD71B30")]
	public void SetThumbPoseId(PoseId id)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xD71BF4", Offset = "0xD71BF4", VA = "0xD71BF4")]
	public void SetIndexPoseId(PoseId id)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xD71CB8", Offset = "0xD71CB8", VA = "0xD71CB8")]
	public void SetThreePoseId(PoseId id)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xD71988", Offset = "0xD71988", VA = "0xD71988")]
	public void DisableResponsiveHandPoses()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xD71AB0", Offset = "0xD71AB0", VA = "0xD71AB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7832B0", Offset = "0x7832B0")]
	private IEnumerator TransitionResponsiveHandPoses(float target)
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xD71D7C", Offset = "0xD71D7C", VA = "0xD71D7C")]
	private void SetAllLayersWeight(float weight)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xD71E7C", Offset = "0xD71E7C", VA = "0xD71E7C")]
	public HandAnimator()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C0C4", Offset = "0x77C0C4")]
public class MaterialAnimator : MonoBehaviour
{
	[Token(Token = "0x20001D5")]
	public enum PropertyTypes
	{
		[Token(Token = "0x40009BA")]
		Int,
		[Token(Token = "0x40009BB")]
		Float,
		[Token(Token = "0x40009BC")]
		Color,
		[Token(Token = "0x40009BD")]
		Vector,
		[Token(Token = "0x40009BE")]
		Texture
	}

	[Serializable]
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D5D4", Offset = "0x77D5D4")]
	private sealed class <>c
	{
		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Material> <>9__23_0;

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xD88E88", Offset = "0xD88E88", VA = "0xD88E88")]
		public <>c()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xD88E90", Offset = "0xD88E90", VA = "0xD88E90")]
		internal bool <Awake>b__23_0(Material m)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] SharedMaterials;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MaterialSet[] materialSets;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x77DCA4", Offset = "0x77DCA4")]
	public string PropertyName;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PropertyTypes PropertyType;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool SetPropertyOnStart;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool SetPropertyOnEnable;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x77DCB4", Offset = "0x77DCB4")]
	public bool setOnUpdate;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77DCEC", Offset = "0x77DCEC")]
	public int IntValue;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77DD24", Offset = "0x77DD24")]
	public float FloatValue;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77DD5C", Offset = "0x77DD5C")]
	public Color ColorValue;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool onlyAlpha;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77DD94", Offset = "0x77DD94")]
	public Vector4 VectorValue;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77DDCC", Offset = "0x77DDCC")]
	public Texture Texture;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x77DE04", Offset = "0x77DE04")]
	public bool applyGammaToAlpha;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int[] m_intValues;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float[] m_floatValues;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color[] m_colorValues;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector4[] m_vectorValues;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Texture[] m_textures;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool m_animationMove;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Material> m_materials;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int m_prop;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xD87A34", Offset = "0xD87A34", VA = "0xD87A34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xD88098", Offset = "0xD88098", VA = "0xD88098")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xD8863C", Offset = "0xD8863C", VA = "0xD8863C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xD8864C", Offset = "0xD8864C", VA = "0xD8864C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xD880A8", Offset = "0xD880A8", VA = "0xD880A8")]
	private void SetProperties()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xD8865C", Offset = "0xD8865C", VA = "0xD8865C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xD88C10", Offset = "0xD88C10", VA = "0xD88C10")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xD88D38", Offset = "0xD88D38", VA = "0xD88D38")]
	public MaterialAnimator()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xD88DF0", Offset = "0xD88DF0", VA = "0xD88DF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783314", Offset = "0x783314")]
	private bool <Awake>b__23_1(Material m)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000040")]
public class ParticleUpdater : MonoBehaviour
{
	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool EnablePlayback;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem _ps;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xF4F958", Offset = "0xF4F958", VA = "0xF4F958")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xF4FA2C", Offset = "0xF4FA2C", VA = "0xF4FA2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xF4FAA0", Offset = "0xF4FAA0", VA = "0xF4FAA0")]
	private void UpdateParticles()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xF4FBBC", Offset = "0xF4FBBC", VA = "0xF4FBBC")]
	public ParticleUpdater()
	{
	}
}
[Token(Token = "0x2000041")]
public class ShakeAnimation : MonoBehaviour
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _targetTransform;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _shakeFrequency;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _shakeStrength;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _shakeTime;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlaySound _audioSource;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _shakeCount;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _isEnabled;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xCC4CA4", Offset = "0xCC4CA4", VA = "0xCC4CA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xCC4D28", Offset = "0xCC4D28", VA = "0xCC4D28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xCC4D30", Offset = "0xCC4D30", VA = "0xCC4D30")]
	public ShakeAnimation()
	{
	}
}
[Token(Token = "0x2000042")]
public class AppManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001D7")]
	public class SceneKey
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode key;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sceneIndex;

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xD64BC4", Offset = "0xD64BC4", VA = "0xD64BC4")]
		public SceneKey(KeyCode keyCode, int index)
		{
		}
	}

	[Token(Token = "0x20001D8")]
	public delegate void FrameTick();

	[Token(Token = "0x20001D9")]
	public delegate void LateFrameTick();

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool singleUser;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77DE84", Offset = "0x77DE84")]
	public int frameRate;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77DEA0", Offset = "0x77DEA0")]
	public bool allowFastForward;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77DED8", Offset = "0x77DED8")]
	public KeyCode fullscreenKey;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77DF10", Offset = "0x77DF10")]
	public KeyCode vsyncKey;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77DF48", Offset = "0x77DF48")]
	public SceneKey[] sceneKeys;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77DF80", Offset = "0x77DF80")]
	public KeyCode restartKey;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int restartIndex;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77DFB8", Offset = "0x77DFB8")]
	public KeyCode quitKey;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string quitScene;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float FrameRateDelta;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float SteppedTime;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AppManager instance;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77E010", Offset = "0x77E010")]
	private static bool <firstRun>k__BackingField;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77E020", Offset = "0x77E020")]
	private static bool <isSingleUser>k__BackingField;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _prevTime;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _updates;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _lateUpdates;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private static bool m_allowFastForward;

	[Token(Token = "0x1700000A")]
	public static bool firstRun
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0xD63D30", Offset = "0xD63D30", VA = "0xD63D30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783364", Offset = "0x783364")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0xD63D80", Offset = "0xD63D80", VA = "0xD63D80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783374", Offset = "0x783374")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public static bool isSingleUser
	{
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0xD63DD8", Offset = "0xD63DD8", VA = "0xD63DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783384", Offset = "0x783384")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0xD63E28", Offset = "0xD63E28", VA = "0xD63E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783394", Offset = "0x783394")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public static event FrameTick OnFrameTick
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xD63A50", Offset = "0xD63A50", VA = "0xD63A50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783324", Offset = "0x783324")]
		add
		{
		}
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0xD63B08", Offset = "0xD63B08", VA = "0xD63B08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783334", Offset = "0x783334")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event LateFrameTick OnLateFrameTick
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xD63BC0", Offset = "0xD63BC0", VA = "0xD63BC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783344", Offset = "0x783344")]
		add
		{
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xD63C78", Offset = "0xD63C78", VA = "0xD63C78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783354", Offset = "0x783354")]
		remove
		{
		}
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xD63E80", Offset = "0xD63E80", VA = "0xD63E80")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xD64030", Offset = "0xD64030", VA = "0xD64030")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xD64704", Offset = "0xD64704", VA = "0xD64704")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xD643A0", Offset = "0xD643A0", VA = "0xD643A0")]
	private void FrameTicker()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xD6466C", Offset = "0xD6466C", VA = "0xD6466C")]
	public void LoadIndex(int sceneIndex)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xD642C8", Offset = "0xD642C8", VA = "0xD642C8")]
	public void Restart()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xD64334", Offset = "0xD64334", VA = "0xD64334")]
	public void Quit()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xD6498C", Offset = "0xD6498C", VA = "0xD6498C")]
	public AppManager()
	{
	}
}
[Token(Token = "0x2000043")]
public class AppMenu : MonoBehaviour
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E030", Offset = "0x77E030")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x77E030", Offset = "0x77E030")]
	public VRController.Button viveButton;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public VRController.Button oculusButton;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77E090", Offset = "0x77E090")]
	public float holdTime;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject toggleGroup;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E0A8", Offset = "0x77E0A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77E0A8", Offset = "0x77E0A8")]
	public float height;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77E0FC", Offset = "0x77E0FC")]
	public float distance;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E114", Offset = "0x77E114")]
	public Transform dot;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform line;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool hideOnAwake;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public LayerMask layerMask;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform m_leftDot;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform m_rightDot;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform m_leftLine;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform m_rightLine;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_holdTime;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_canBeHidden;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xD64C8C", Offset = "0xD64C8C", VA = "0xD64C8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xD64F20", Offset = "0xD64F20", VA = "0xD64F20")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xD654DC", Offset = "0xD654DC", VA = "0xD654DC")]
	private void Show()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xD652C0", Offset = "0xD652C0", VA = "0xD652C0")]
	private void CheckHit(VRController controller, Transform line, Transform dot)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xD65774", Offset = "0xD65774", VA = "0xD65774")]
	public AppMenu()
	{
	}
}
[Token(Token = "0x2000044")]
public class AutoReset : MonoBehaviour
{
	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xD65C08", Offset = "0xD65C08", VA = "0xD65C08")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xD65C74", Offset = "0xD65C74", VA = "0xD65C74")]
	public AutoReset()
	{
	}
}
[Token(Token = "0x2000045")]
public class ControllerTips : MonoBehaviour
{
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D5E4", Offset = "0x77D5E4")]
	private sealed class <InputDevices_deviceConnected>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerTips <>4__this;

		[Token(Token = "0x17000229")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0xD69DE4", Offset = "0xD69DE4", VA = "0xD69DE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0xD69E4C", Offset = "0xD69E4C", VA = "0xD69E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xD69CA4", Offset = "0xD69CA4", VA = "0xD69CA4")]
		[DebuggerHidden]
		public <InputDevices_deviceConnected>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xD69CD8", Offset = "0xD69CD8", VA = "0xD69CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xD69CDC", Offset = "0xD69CDC", VA = "0xD69CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xD69DEC", Offset = "0xD69DEC", VA = "0xD69DEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _oculusTips;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _viveTips;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<InputDevice> _leftHandDevices;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xD69BB8", Offset = "0xD69BB8", VA = "0xD69BB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xD69C34", Offset = "0xD69C34", VA = "0xD69C34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7833A4", Offset = "0x7833A4")]
	private IEnumerator InputDevices_deviceConnected()
	{
		return null;
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xD69CD0", Offset = "0xD69CD0", VA = "0xD69CD0")]
	public ControllerTips()
	{
	}
}
[Token(Token = "0x2000046")]
public class CreditsImageSelector : MonoBehaviour
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite _englishCredits;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite _frenchCredits;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xD69E54", Offset = "0xD69E54", VA = "0xD69E54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xD69F0C", Offset = "0xD69F0C", VA = "0xD69F0C")]
	public CreditsImageSelector()
	{
	}
}
[Token(Token = "0x2000047")]
public class DebugUI : MonoBehaviour
{
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D5F4", Offset = "0x77D5F4")]
	private sealed class <UpdateLoop>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugUI <>4__this;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSecondsRealtime <wait>5__2;

		[Token(Token = "0x1700022B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0xD6AD40", Offset = "0xD6AD40", VA = "0xD6AD40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0xD6ADA8", Offset = "0xD6ADA8", VA = "0xD6ADA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xD6A400", Offset = "0xD6A400", VA = "0xD6A400")]
		[DebuggerHidden]
		public <UpdateLoop>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xD6AC68", Offset = "0xD6AC68", VA = "0xD6AC68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xD6AC6C", Offset = "0xD6AC6C", VA = "0xD6AC6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xD6AD48", Offset = "0xD6AD48", VA = "0xD6AD48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x77E16C", Offset = "0x77E16C")]
	public KeyCode toggleKey;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI infoText;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Canvas m_canvas;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool m_canvasEnabled;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine m_update;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_frameCount;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_lastTime;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xD69FE8", Offset = "0xD69FE8", VA = "0xD69FE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xD6A080", Offset = "0xD6A080", VA = "0xD6A080")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xD6A1DC", Offset = "0xD6A1DC", VA = "0xD6A1DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xD6A1F0", Offset = "0xD6A1F0", VA = "0xD6A1F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xD6A16C", Offset = "0xD6A16C", VA = "0xD6A16C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783408", Offset = "0x783408")]
	private IEnumerator UpdateLoop()
	{
		return null;
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xD6A2C0", Offset = "0xD6A2C0", VA = "0xD6A2C0")]
	private void UpdateStatus()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xD6A42C", Offset = "0xD6A42C", VA = "0xD6A42C")]
	private string GetFrameRate()
	{
		return null;
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xD6A644", Offset = "0xD6A644", VA = "0xD6A644")]
	private string GetVRStatus()
	{
		return null;
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xD6A530", Offset = "0xD6A530", VA = "0xD6A530")]
	private string GetRunningTime()
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xD6A894", Offset = "0xD6A894", VA = "0xD6A894")]
	private string GetHeight()
	{
		return null;
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xD6A974", Offset = "0xD6A974", VA = "0xD6A974")]
	private string GetResolution()
	{
		return null;
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xD6AA1C", Offset = "0xD6AA1C", VA = "0xD6AA1C")]
	private string GetVSync()
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xD6AAA0", Offset = "0xD6AAA0", VA = "0xD6AAA0")]
	private string GetSmoothVRSpectator()
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xD6AC04", Offset = "0xD6AC04", VA = "0xD6AC04")]
	public DebugUI()
	{
	}
}
[Token(Token = "0x2000048")]
public class ExitBehaviour : MonoBehaviour
{
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D604", Offset = "0x77D604")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x1700022D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0xD6EEC4", Offset = "0xD6EEC4", VA = "0xD6EEC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0xD6EF2C", Offset = "0xD6EF2C", VA = "0xD6EF2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xD6ED6C", Offset = "0xD6ED6C", VA = "0xD6ED6C")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xD6EDA0", Offset = "0xD6EDA0", VA = "0xD6EDA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xD6EDA4", Offset = "0xD6EDA4", VA = "0xD6EDA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xD6EECC", Offset = "0xD6EECC", VA = "0xD6EECC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xD6ED0C", Offset = "0xD6ED0C", VA = "0xD6ED0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x78346C", Offset = "0x78346C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xD6ED98", Offset = "0xD6ED98", VA = "0xD6ED98")]
	public ExitBehaviour()
	{
	}
}
[Token(Token = "0x2000049")]
public class HardQuit : MonoBehaviour
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputDevice _leftInputDevice;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputDevice _rightInputDevice;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isSteamVR;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xD76E34", Offset = "0xD76E34", VA = "0xD76E34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xD76EB8", Offset = "0xD76EB8", VA = "0xD76EB8")]
	private void InputDevices_deviceConnected(InputDevice obj)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xD770E4", Offset = "0xD770E4", VA = "0xD770E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xD771E4", Offset = "0xD771E4", VA = "0xD771E4")]
	public HardQuit()
	{
	}
}
[Token(Token = "0x200004A")]
public class ImageSequence : MonoBehaviour
{
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D614", Offset = "0x77D614")]
	private sealed class <ShowCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImageSequence <>4__this;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700022F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0xD79358", Offset = "0xD79358", VA = "0xD79358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0xD793C0", Offset = "0xD793C0", VA = "0xD793C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xD7915C", Offset = "0xD7915C", VA = "0xD7915C")]
		[DebuggerHidden]
		public <ShowCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xD791AC", Offset = "0xD791AC", VA = "0xD791AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xD791B0", Offset = "0xD791B0", VA = "0xD791B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xD79360", Offset = "0xD79360", VA = "0xD79360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SpriteRenderer> _logoList;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _showDuration;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent OnComplete;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xD790C0", Offset = "0xD790C0", VA = "0xD790C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xD790EC", Offset = "0xD790EC", VA = "0xD790EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7834D0", Offset = "0x7834D0")]
	private IEnumerator ShowCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xD79188", Offset = "0xD79188", VA = "0xD79188")]
	public ImageSequence()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xD79198", Offset = "0xD79198", VA = "0xD79198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783534", Offset = "0x783534")]
	private void <ShowCoroutine>b__4_0()
	{
	}
}
[Token(Token = "0x200004B")]
public class LanguageSelector : MonoBehaviour
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string CurrentLanguage;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xD8405C", Offset = "0xD8405C", VA = "0xD8405C")]
	private void Start()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xD840E4", Offset = "0xD840E4", VA = "0xD840E4")]
	public void SelectLanguage(int index)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xD84290", Offset = "0xD84290", VA = "0xD84290")]
	public LanguageSelector()
	{
	}
}
[Token(Token = "0x200004C")]
public class LoadUI : MonoBehaviour
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI textUI;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SceneLoader sceneLoader;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xD849FC", Offset = "0xD849FC", VA = "0xD849FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xD84AE4", Offset = "0xD84AE4", VA = "0xD84AE4")]
	public LoadUI()
	{
	}
}
[Token(Token = "0x200004D")]
public class MenuElement : MonoBehaviour
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E1D4", Offset = "0x77E1D4")]
	public TextMeshProUGUI uiText;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color focusColor;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform progressBar;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isFillProgress;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject border;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E20C", Offset = "0x77E20C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77E20C", Offset = "0x77E20C")]
	public float holdTime;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent pressEvent;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_hasFocus;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Color m_defaultColor;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77E260", Offset = "0x77E260")]
	private bool <pressed>k__BackingField;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_holdTime;

	[Token(Token = "0x1700000C")]
	public bool pressed
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0xF3B4C0", Offset = "0xF3B4C0", VA = "0xF3B4C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783544", Offset = "0x783544")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000124")]
		[Address(RVA = "0xF3B4C8", Offset = "0xF3B4C8", VA = "0xF3B4C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783554", Offset = "0x783554")]
		set
		{
		}
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xF3B4D4", Offset = "0xF3B4D4", VA = "0xF3B4D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xF3B5BC", Offset = "0xF3B5BC", VA = "0xF3B5BC")]
	public void Focus()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xF3B5C8", Offset = "0xF3B5C8", VA = "0xF3B5C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xF3B7F0", Offset = "0xF3B7F0", VA = "0xF3B7F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xF3B7F8", Offset = "0xF3B7F8", VA = "0xF3B7F8")]
	private void Reset()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xF3B86C", Offset = "0xF3B86C", VA = "0xF3B86C")]
	public MenuElement()
	{
	}
}
[Token(Token = "0x200004E")]
public class SceneLoader : MonoBehaviour
{
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D624", Offset = "0x77D624")]
	private sealed class <DelayedAwake>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x17000231")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0xCC2844", Offset = "0xCC2844", VA = "0xCC2844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xCC28AC", Offset = "0xCC28AC", VA = "0xCC28AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xCC24F8", Offset = "0xCC24F8", VA = "0xCC24F8")]
		[DebuggerHidden]
		public <DelayedAwake>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xCC27B4", Offset = "0xCC27B4", VA = "0xCC27B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xCC27B8", Offset = "0xCC27B8", VA = "0xCC27B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xCC284C", Offset = "0xCC284C", VA = "0xCC284C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D634", Offset = "0x77D634")]
	private sealed class <LoadSceneAsync>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <load>5__2;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Scene <scene>5__3;

		[Token(Token = "0x17000233")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xCC2B64", Offset = "0xCC2B64", VA = "0xCC2B64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0xCC2BCC", Offset = "0xCC2BCC", VA = "0xCC2BCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xCC2720", Offset = "0xCC2720", VA = "0xCC2720")]
		[DebuggerHidden]
		public <LoadSceneAsync>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xCC28B4", Offset = "0xCC28B4", VA = "0xCC28B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xCC28B8", Offset = "0xCC28B8", VA = "0xCC28B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xCC2B6C", Offset = "0xCC2B6C", VA = "0xCC2B6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D644", Offset = "0x77D644")]
	private sealed class <LoadSceneAsyncImmediate>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <load>5__2;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Scene <scene>5__3;

		[Token(Token = "0x17000235")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0xCC2DE0", Offset = "0xCC2DE0", VA = "0xCC2DE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0xCC2E48", Offset = "0xCC2E48", VA = "0xCC2E48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xCC274C", Offset = "0xCC274C", VA = "0xCC274C")]
		[DebuggerHidden]
		public <LoadSceneAsyncImmediate>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xCC2BD4", Offset = "0xCC2BD4", VA = "0xCC2BD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xCC2BD8", Offset = "0xCC2BD8", VA = "0xCC2BD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xCC2DE8", Offset = "0xCC2DE8", VA = "0xCC2DE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D654", Offset = "0x77D654")]
	private sealed class <UnloadSceneAsync>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <unload>5__2;

		[Token(Token = "0x17000237")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001202")]
			[Address(RVA = "0xCC3094", Offset = "0xCC3094", VA = "0xCC3094", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0xCC30FC", Offset = "0xCC30FC", VA = "0xCC30FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xCC2778", Offset = "0xCC2778", VA = "0xCC2778")]
		[DebuggerHidden]
		public <UnloadSceneAsync>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xCC2E50", Offset = "0xCC2E50", VA = "0xCC2E50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xCC2E54", Offset = "0xCC2E54", VA = "0xCC2E54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xCC309C", Offset = "0xCC309C", VA = "0xCC309C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onSceneActivated;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string loadScenePath;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool autoPreload;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool autoActivate;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public LoadSceneMode loadMode;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string unloadScenePath;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public UnloadSceneOptions unloadMode;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77E2D0", Offset = "0x77E2D0")]
	private float <loadProgress>k__BackingField;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77E2E0", Offset = "0x77E2E0")]
	private float <unloadProgress>k__BackingField;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_allowActivation;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine m_loadCoroutine;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine m_unloadCoroutine;

	[Token(Token = "0x1700000D")]
	public float loadProgress
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0xCC243C", Offset = "0xCC243C", VA = "0xCC243C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783564", Offset = "0x783564")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600012C")]
		[Address(RVA = "0xCC2444", Offset = "0xCC2444", VA = "0xCC2444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783574", Offset = "0x783574")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public float unloadProgress
	{
		[Token(Token = "0x600012D")]
		[Address(RVA = "0xCC244C", Offset = "0xCC244C", VA = "0xCC244C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783584", Offset = "0x783584")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600012E")]
		[Address(RVA = "0xCC2454", Offset = "0xCC2454", VA = "0xCC2454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783594", Offset = "0x783594")]
		private set
		{
		}
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xCC245C", Offset = "0xCC245C", VA = "0xCC245C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xCC2488", Offset = "0xCC2488", VA = "0xCC2488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7835A4", Offset = "0x7835A4")]
	private IEnumerator DelayedAwake()
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xCC2524", Offset = "0xCC2524", VA = "0xCC2524")]
	public void Load()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xCC25D4", Offset = "0xCC25D4", VA = "0xCC25D4")]
	public void LoadImmediate()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xCC2670", Offset = "0xCC2670", VA = "0xCC2670")]
	public void Unload()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xCC270C", Offset = "0xCC270C", VA = "0xCC270C")]
	public void AllowActivation()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xCC2718", Offset = "0xCC2718", VA = "0xCC2718")]
	public void DisallowActivation()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xCC2564", Offset = "0xCC2564", VA = "0xCC2564")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783608", Offset = "0x783608")]
	private IEnumerator LoadSceneAsync()
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xCC2600", Offset = "0xCC2600", VA = "0xCC2600")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x78366C", Offset = "0x78366C")]
	private IEnumerator LoadSceneAsyncImmediate()
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xCC269C", Offset = "0xCC269C", VA = "0xCC269C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7836D0", Offset = "0x7836D0")]
	private IEnumerator UnloadSceneAsync()
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xCC27A4", Offset = "0xCC27A4", VA = "0xCC27A4")]
	public SceneLoader()
	{
	}
}
[Token(Token = "0x200004F")]
public class DebugButtonAttribute : Attribute
{
	[Token(Token = "0x600013A")]
	[Address(RVA = "0xD69F14", Offset = "0xD69F14", VA = "0xD69F14")]
	public DebugButtonAttribute()
	{
	}
}
[Token(Token = "0x2000050")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x77C128", Offset = "0x77C128")]
public class HelpAttribute : PropertyAttribute
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string text;

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xD78AAC", Offset = "0xD78AAC", VA = "0xD78AAC")]
	public HelpAttribute(string text)
	{
	}
}
[Token(Token = "0x2000051")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C160", Offset = "0x77C160")]
public class AudioFader : MonoBehaviour
{
	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D664", Offset = "0x77D664")]
	private sealed class <FadeAudio>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioFader <>4__this;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fadeIn;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <from>5__2;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <to>5__3;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <endTime>5__4;

		[Token(Token = "0x17000239")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0xD65B1C", Offset = "0xD65B1C", VA = "0xD65B1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0xD65B84", Offset = "0xD65B84", VA = "0xD65B84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xD65934", Offset = "0xD65934", VA = "0xD65934")]
		[DebuggerHidden]
		public <FadeAudio>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xD65978", Offset = "0xD65978", VA = "0xD65978", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xD6597C", Offset = "0xD6597C", VA = "0xD6597C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xD65B24", Offset = "0xD65B24", VA = "0xD65B24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxVolume;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fadeInDuration;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeOutDuration;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine m_coroutine;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xD657A0", Offset = "0xD657A0", VA = "0xD657A0")]
	private void Reset()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xD657F8", Offset = "0xD657F8", VA = "0xD657F8")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xD658E0", Offset = "0xD658E0", VA = "0xD658E0")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xD6584C", Offset = "0xD6584C", VA = "0xD6584C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783734", Offset = "0x783734")]
	private IEnumerator FadeAudio(float duration, bool fadeIn)
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xD65960", Offset = "0xD65960", VA = "0xD65960")]
	public AudioFader()
	{
	}
}
[Token(Token = "0x2000052")]
public class AudioTester : MonoBehaviour
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlaySound playSound;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xD65B8C", Offset = "0xD65B8C", VA = "0xD65B8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xD65BE4", Offset = "0xD65BE4", VA = "0xD65BE4")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x783798", Offset = "0x783798")]
	private void TestOneshotSound()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xD65C00", Offset = "0xD65C00", VA = "0xD65C00")]
	public AudioTester()
	{
	}
}
[Token(Token = "0x2000053")]
public class FadeOutMixer : MonoBehaviour
{
	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot Snapshot;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xD6EF34", Offset = "0xD6EF34", VA = "0xD6EF34")]
	public void FadeOut(float t)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xD6EF50", Offset = "0xD6EF50", VA = "0xD6EF50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xD6EF54", Offset = "0xD6EF54", VA = "0xD6EF54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xD6EF58", Offset = "0xD6EF58", VA = "0xD6EF58")]
	public FadeOutMixer()
	{
	}
}
[Token(Token = "0x2000054")]
public class FixTheDamnTimeline : MonoBehaviour
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip clip;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xD6F310", Offset = "0xD6F310", VA = "0xD6F310")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xD6F374", Offset = "0xD6F374", VA = "0xD6F374")]
	public FixTheDamnTimeline()
	{
	}
}
[Token(Token = "0x2000055")]
public class PaperAudio : MonoBehaviour
{
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D674", Offset = "0x77D674")]
	private sealed class <Slowing>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float t;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PaperAudio <>4__this;

		[Token(Token = "0x1700023B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600120E")]
			[Address(RVA = "0xF4F3DC", Offset = "0xF4F3DC", VA = "0xF4F3DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0xF4F444", Offset = "0xF4F444", VA = "0xF4F444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xF4F2E8", Offset = "0xF4F2E8", VA = "0xF4F2E8")]
		[DebuggerHidden]
		public <Slowing>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xF4F31C", Offset = "0xF4F31C", VA = "0xF4F31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xF4F320", Offset = "0xF4F320", VA = "0xF4F320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xF4F3E4", Offset = "0xF4F3E4", VA = "0xF4F3E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnStartFlap;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnStartBurn;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnSlowDown;

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xF4F204", Offset = "0xF4F204", VA = "0xF4F204")]
	public void StartFlap()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xF4F220", Offset = "0xF4F220", VA = "0xF4F220")]
	public void StartBurn()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xF4F23C", Offset = "0xF4F23C", VA = "0xF4F23C")]
	public void SlowDown(float t)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xF4F268", Offset = "0xF4F268", VA = "0xF4F268")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7837D0", Offset = "0x7837D0")]
	private IEnumerator Slowing(float t)
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xF4F314", Offset = "0xF4F314", VA = "0xF4F314")]
	public PaperAudio()
	{
	}
}
[Token(Token = "0x2000056")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C1C4", Offset = "0x77C1C4")]
public class PlayAudio : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource m_audioSource;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xF50F64", Offset = "0xF50F64", VA = "0xF50F64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xF50FBC", Offset = "0xF50FBC", VA = "0xF50FBC")]
	public void PlayOneShot()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xF51054", Offset = "0xF51054", VA = "0xF51054")]
	public PlayAudio()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C228", Offset = "0x77C228")]
public class PlaySound : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E2F0", Offset = "0x77E2F0")]
	public AudioClip[] waveFile;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E328", Offset = "0x77E328")]
	public bool stopOnPlay;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E360", Offset = "0x77E360")]
	public bool disableOnEnd;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E398", Offset = "0x77E398")]
	public bool looping;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E3D0", Offset = "0x77E3D0")]
	public bool stopOnEnd;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E408", Offset = "0x77E408")]
	public bool playOnAwakeWithDelay;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E440", Offset = "0x77E440")]
	public bool useRandomVolume;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E478", Offset = "0x77E478")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77E478", Offset = "0x77E478")]
	public float volMin;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E4CC", Offset = "0x77E4CC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77E4CC", Offset = "0x77E4CC")]
	public float volMax;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E520", Offset = "0x77E520")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E520", Offset = "0x77E520")]
	public bool useRandomPitch;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E580", Offset = "0x77E580")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77E580", Offset = "0x77E580")]
	public float pitchMin;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E5D4", Offset = "0x77E5D4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77E5D4", Offset = "0x77E5D4")]
	public float pitchMax;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E628", Offset = "0x77E628")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E628", Offset = "0x77E628")]
	public bool useRetriggerTime;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E688", Offset = "0x77E688")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77E688", Offset = "0x77E688")]
	public float timeInitial;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E6E0", Offset = "0x77E6E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77E6E0", Offset = "0x77E6E0")]
	public float timeMin;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E738", Offset = "0x77E738")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77E738", Offset = "0x77E738")]
	public float timeMax;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E790", Offset = "0x77E790")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E790", Offset = "0x77E790")]
	public bool useRandomSilence;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E7F0", Offset = "0x77E7F0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77E7F0", Offset = "0x77E7F0")]
	public float percentToNotPlay;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E844", Offset = "0x77E844")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77E844", Offset = "0x77E844")]
	public float delayOffsetTime;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E8A4", Offset = "0x77E8A4")]
	public bool useRandomSampleOffset;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource audioSource;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioClip clip;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xF5105C", Offset = "0xF5105C", VA = "0xF5105C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xF5118C", Offset = "0xF5118C", VA = "0xF5118C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xF5119C", Offset = "0xF5119C", VA = "0xF5119C")]
	public void PlayWithDelay(float delayTime)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xF512D8", Offset = "0xF512D8", VA = "0xF512D8")]
	public AudioClip PlayOneShotSound()
	{
		return null;
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xF51214", Offset = "0xF51214", VA = "0xF51214")]
	public AudioClip PlayLooping()
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xF51508", Offset = "0xF51508", VA = "0xF51508")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xF51530", Offset = "0xF51530", VA = "0xF51530")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xF513A0", Offset = "0xF513A0", VA = "0xF513A0")]
	private void SetAudioSource()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xF5154C", Offset = "0xF5154C", VA = "0xF5154C")]
	public PlaySound()
	{
	}
}
[Token(Token = "0x2000058")]
public class SoundExampleClass : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E4")]
	public class SlideEvent : UnityEvent<float>
	{
		[Token(Token = "0x6001211")]
		[Address(RVA = "0xCC5AC4", Offset = "0xCC5AC4", VA = "0xCC5AC4")]
		public SlideEvent()
		{
		}
	}

	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D684", Offset = "0x77D684")]
	private sealed class <Sliding>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundExampleClass <>4__this;

		[Token(Token = "0x1700023D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0xCC5A54", Offset = "0xCC5A54", VA = "0xCC5A54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001217")]
			[Address(RVA = "0xCC5ABC", Offset = "0xCC5ABC", VA = "0xCC5ABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xCC5954", Offset = "0xCC5954", VA = "0xCC5954")]
		[DebuggerHidden]
		public <Sliding>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xCC599C", Offset = "0xCC599C", VA = "0xCC599C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xCC59A0", Offset = "0xCC59A0", VA = "0xCC59A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xCC5A5C", Offset = "0xCC5A5C", VA = "0xCC5A5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E8DC", Offset = "0x77E8DC")]
	public InteractableGrab GrabObject;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractablePull DragObject;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E914", Offset = "0x77E914")]
	public PlaySound PlaySound;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float shakeCoolDown;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E94C", Offset = "0x77E94C")]
	public UnityEvent OnGrabBegin;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E984", Offset = "0x77E984")]
	public UnityEvent OnGrabEnd;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E9BC", Offset = "0x77E9BC")]
	public UnityEvent OnDragInteractionBegin;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77E9F4", Offset = "0x77E9F4")]
	public UnityEvent OnDragInteractionEnd;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EA2C", Offset = "0x77EA2C")]
	public UnityEvent OnGrabShake;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EA64", Offset = "0x77EA64")]
	public UnityEvent OnSlideStart;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EA9C", Offset = "0x77EA9C")]
	public UnityEvent OnSlideEnd;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SlideEvent OnSlide;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SlideEvent OnGrabbed;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool canShake;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine _slideCoroutine;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool grabbed;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xCC4F3C", Offset = "0xCC4F3C", VA = "0xCC4F3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xCC5260", Offset = "0xCC5260", VA = "0xCC5260")]
	private void GrabInteractionBegin()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xCC5288", Offset = "0xCC5288", VA = "0xCC5288")]
	private void GrabInteractionEnd()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xCC52AC", Offset = "0xCC52AC", VA = "0xCC52AC")]
	private void ResetShake()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xCC52B8", Offset = "0xCC52B8", VA = "0xCC52B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xCC55DC", Offset = "0xCC55DC", VA = "0xCC55DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xCC5770", Offset = "0xCC5770", VA = "0xCC5770")]
	private void DragInteractionBegin()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xCC578C", Offset = "0xCC578C", VA = "0xCC578C")]
	private void DragInteractionEnd()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xCC57A8", Offset = "0xCC57A8", VA = "0xCC57A8")]
	private void GrabShake(float force, float forceLastFrame)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xCC582C", Offset = "0xCC582C", VA = "0xCC582C")]
	private void DragHitStart(float force)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xCC5848", Offset = "0xCC5848", VA = "0xCC5848")]
	private void DragHitEnd(float force)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xCC5864", Offset = "0xCC5864", VA = "0xCC5864")]
	private void DragSlideBegin()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xCC5914", Offset = "0xCC5914", VA = "0xCC5914")]
	private void DragSlideEnd()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xCC58A4", Offset = "0xCC58A4", VA = "0xCC58A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783834", Offset = "0x783834")]
	private IEnumerator Sliding()
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xCC5980", Offset = "0xCC5980", VA = "0xCC5980")]
	public SoundExampleClass()
	{
	}
}
[Token(Token = "0x2000059")]
public class SpawnAndBurnAudio : MonoBehaviour
{
	[Token(Token = "0x20001E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D694", Offset = "0x77D694")]
	private sealed class <Spawning>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnAndBurnAudio <>4__this;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700023F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600121B")]
			[Address(RVA = "0xCC5EA8", Offset = "0xCC5EA8", VA = "0xCC5EA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000240")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600121D")]
			[Address(RVA = "0xCC5F10", Offset = "0xCC5F10", VA = "0xCC5F10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xCC5C80", Offset = "0xCC5C80", VA = "0xCC5C80")]
		[DebuggerHidden]
		public <Spawning>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xCC5D1C", Offset = "0xCC5D1C", VA = "0xCC5D1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xCC5D20", Offset = "0xCC5D20", VA = "0xCC5D20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xCC5EB0", Offset = "0xCC5EB0", VA = "0xCC5EB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EAD4", Offset = "0x77EAD4")]
	public List<GameObject> papers;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> times;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> stops;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EB0C", Offset = "0x77EB0C")]
	public TextAsset ObjectsTxt;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextAsset TimesTxt;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextAsset StopTxt;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float totalStartTime;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float totalEndTime;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xCC5B14", Offset = "0xCC5B14", VA = "0xCC5B14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xCC5C10", Offset = "0xCC5C10", VA = "0xCC5C10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783898", Offset = "0x783898")]
	private IEnumerator Spawning()
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xCC5CAC", Offset = "0xCC5CAC", VA = "0xCC5CAC")]
	public SpawnAndBurnAudio()
	{
	}
}
[Token(Token = "0x200005A")]
public static class Util
{
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D6A4", Offset = "0x77D6A4")]
	private sealed class <WrapCoroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator coroutine;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onCoroutineFinished;

		[Token(Token = "0x17000241")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001221")]
			[Address(RVA = "0x14C819C", Offset = "0x14C819C", VA = "0x14C819C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001223")]
			[Address(RVA = "0x14C8204", Offset = "0x14C8204", VA = "0x14C8204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x14C8008", Offset = "0x14C8008", VA = "0x14C8008")]
		[DebuggerHidden]
		public <WrapCoroutine>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x14C8034", Offset = "0x14C8034", VA = "0x14C8034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x14C8038", Offset = "0x14C8038", VA = "0x14C8038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x14C81A4", Offset = "0x14C81A4", VA = "0x14C81A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D6B4", Offset = "0x77D6B4")]
	private sealed class <>c__47<T>
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__47<T> <>9;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<T, T> <>9__47_0;

		[Token(Token = "0x6001225")]
		public <>c__47()
		{
		}

		[Token(Token = "0x6001226")]
		internal T <Median>b__47_0(T x)
		{
			return (T)null;
		}
	}

	[Token(Token = "0x400015D")]
	public const float FeetToMeters = 0.3048f;

	[Token(Token = "0x400015E")]
	public const float FeetToCentimeters = 30.48f;

	[Token(Token = "0x400015F")]
	public const float InchesToMeters = 0.0254f;

	[Token(Token = "0x4000160")]
	public const float InchesToCentimeters = 2.54f;

	[Token(Token = "0x4000161")]
	public const float MetersToFeet = 3.28084f;

	[Token(Token = "0x4000162")]
	public const float MetersToInches = 39.3701f;

	[Token(Token = "0x4000163")]
	public const float CentimetersToFeet = 0.0328084f;

	[Token(Token = "0x4000164")]
	public const float CentimetersToInches = 0.393701f;

	[Token(Token = "0x4000165")]
	public const float KilometersToMiles = 0.621371f;

	[Token(Token = "0x4000166")]
	public const float MilesToKilometers = 1.60934f;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xCD74F4", Offset = "0xCD74F4", VA = "0xCD74F4")]
	public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xCC569C", Offset = "0xCC569C", VA = "0xCC569C")]
	public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xCD7510", Offset = "0xCD7510", VA = "0xCD7510")]
	public static float Approach(float target, float value, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xCD7538", Offset = "0xCD7538", VA = "0xCD7538")]
	public static Vector3 BezierInterpolate3(Vector3 p0, Vector3 c0, Vector3 p1, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xCD7650", Offset = "0xCD7650", VA = "0xCD7650")]
	public static Vector3 BezierInterpolate4(Vector3 p0, Vector3 c0, Vector3 c1, Vector3 p1, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xCD7828", Offset = "0xCD7828", VA = "0xCD7828")]
	public static Vector3 Vector3FromString(string szString)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xCD7964", Offset = "0xCD7964", VA = "0xCD7964")]
	public static Vector2 Vector2FromString(string szString)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xCD7AA0", Offset = "0xCD7AA0", VA = "0xCD7AA0")]
	public static float Normalize(float value, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xCD7AB0", Offset = "0xCD7AB0", VA = "0xCD7AB0")]
	public static Vector3 Vector2AsVector3(Vector2 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xCD7AEC", Offset = "0xCD7AEC", VA = "0xCD7AEC")]
	public static Vector2 Vector3AsVector2(Vector3 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xCD7B1C", Offset = "0xCD7B1C", VA = "0xCD7B1C")]
	public static float AngleOf(Vector2 v)
	{
		return default(float);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xCD7BD4", Offset = "0xCD7BD4", VA = "0xCD7BD4")]
	public static float YawOf(Vector3 v)
	{
		return default(float);
	}

	[Token(Token = "0x6000179")]
	public static void Swap<T>(ref T lhs, ref T rhs)
	{
	}

	[Token(Token = "0x600017A")]
	public static void Shuffle<T>(T[] array)
	{
	}

	[Token(Token = "0x600017B")]
	public static void Shuffle<T>(List<T> list)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xCD7C9C", Offset = "0xCD7C9C", VA = "0xCD7C9C")]
	public static int RandomWithLookback(int min, int max, List<int> history, int historyCount)
	{
		return default(int);
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xCD7D9C", Offset = "0xCD7D9C", VA = "0xCD7D9C")]
	public static Transform FindChild(Transform parent, string name)
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	public static bool IsNullOrEmpty<T>(T[] array)
	{
		return default(bool);
	}

	[Token(Token = "0x600017F")]
	public static bool IsValidIndex<T>(T[] array, int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6000180")]
	public static bool IsValidIndex<T>(List<T> list, int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6000181")]
	public static int FindOrAdd<T>(List<T> list, T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000182")]
	public static List<T> FindAndRemove<T>(List<T> list, Predicate<T> match)
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	public static T FindOrAddComponent<T>(GameObject gameObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000184")]
	public static void FastRemove<T>(List<T> list, int index)
	{
	}

	[Token(Token = "0x6000185")]
	public static void ReplaceGameObject<T, U>(T replace, U replaceWith) where T : MonoBehaviour where U : MonoBehaviour
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xCD8098", Offset = "0xCD8098", VA = "0xCD8098")]
	public static void SwitchLayerRecursively(Transform transform, int fromLayer, int toLayer)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xCD8150", Offset = "0xCD8150", VA = "0xCD8150")]
	public static void DrawCross(Vector3 origin, Color crossColor, float size)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xCD8444", Offset = "0xCD8444", VA = "0xCD8444")]
	public static void ResetTransform(Transform t, bool resetScale = true)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xCD8540", Offset = "0xCD8540", VA = "0xCD8540")]
	public static Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xCD872C", Offset = "0xCD872C", VA = "0xCD872C")]
	public static void AfterTimer(GameObject go, float _time, Action callback, bool trigger_if_destroyed_early = false)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xCD87B8", Offset = "0xCD87B8", VA = "0xCD87B8")]
	public static void SendPhysicsMessage(Collider collider, string message, SendMessageOptions sendMessageOptions)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xCD88D4", Offset = "0xCD88D4", VA = "0xCD88D4")]
	public static void SendPhysicsMessage(Collider collider, string message, object arg, SendMessageOptions sendMessageOptions)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xCD8A04", Offset = "0xCD8A04", VA = "0xCD8A04")]
	public static void IgnoreCollisions(GameObject goA, GameObject goB)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xCD8B4C", Offset = "0xCD8B4C", VA = "0xCD8B4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7838FC", Offset = "0x7838FC")]
	public static IEnumerator WrapCoroutine(IEnumerator coroutine, Action onCoroutineFinished)
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xCD8BC8", Offset = "0xCD8BC8", VA = "0xCD8BC8")]
	public static Color ColorWithAlpha(this Color color, float alpha)
	{
		return default(Color);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xCD8BD0", Offset = "0xCD8BD0", VA = "0xCD8BD0")]
	public static void Quit()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xCD8BF4", Offset = "0xCD8BF4", VA = "0xCD8BF4")]
	public static decimal FloatToDecimal(float value, int decimalPlaces = 2)
	{
		return default(decimal);
	}

	[Token(Token = "0x6000192")]
	public static T Median<T>(this IEnumerable<T> source)
	{
		return (T)null;
	}

	[Token(Token = "0x6000193")]
	public static void ForEach<T>(this IEnumerable<T> source, Action<T> action)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xCD8CAC", Offset = "0xCD8CAC", VA = "0xCD8CAC")]
	public static string FixupNewlines(string text)
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xCD8D5C", Offset = "0xCD8D5C", VA = "0xCD8D5C")]
	public static float PathLength(NavMeshPath path)
	{
		return default(float);
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xCD8ED8", Offset = "0xCD8ED8", VA = "0xCD8ED8")]
	public static bool HasCommandLineArgument(string argumentName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xCD8F6C", Offset = "0xCD8F6C", VA = "0xCD8F6C")]
	public static int GetCommandLineArgValue(string argumentName, int nDefaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xCD9038", Offset = "0xCD9038", VA = "0xCD9038")]
	public static float GetCommandLineArgValue(string argumentName, float flDefaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xCD914C", Offset = "0xCD914C", VA = "0xCD914C")]
	public static void SetActive(GameObject gameObject, bool active)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xCD91F0", Offset = "0xCD91F0", VA = "0xCD91F0")]
	public static string CombinePaths(params string[] paths)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200005B")]
public class AfterTimer_Component : MonoBehaviour
{
	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D6C4", Offset = "0x77D6C4")]
	private sealed class <Wait>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AfterTimer_Component <>4__this;

		[Token(Token = "0x17000243")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600122A")]
			[Address(RVA = "0x10A36CC", Offset = "0x10A36CC", VA = "0x10A36CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600122C")]
			[Address(RVA = "0x10A3734", Offset = "0x10A3734", VA = "0x10A3734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x10A3544", Offset = "0x10A3544", VA = "0x10A3544")]
		[DebuggerHidden]
		public <Wait>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x10A35D8", Offset = "0x10A35D8", VA = "0x10A35D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x10A35DC", Offset = "0x10A35DC", VA = "0x10A35DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x10A36D4", Offset = "0x10A36D4", VA = "0x10A36D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action callback;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float triggerTime;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool timerActive;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool triggerOnEarlyDestroy;

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x10A3490", Offset = "0x10A3490", VA = "0x10A3490")]
	public void Init(float _time, Action _callback, bool earlydestroy)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x10A34D4", Offset = "0x10A34D4", VA = "0x10A34D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783990", Offset = "0x783990")]
	private IEnumerator Wait()
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x10A3570", Offset = "0x10A3570", VA = "0x10A3570")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x10A35D0", Offset = "0x10A35D0", VA = "0x10A35D0")]
	public AfterTimer_Component()
	{
	}
}
[Token(Token = "0x200005C")]
public class FollowTargetForward : MonoBehaviour
{
	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransform;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform thisTransform;

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xD70E48", Offset = "0xD70E48", VA = "0xD70E48")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xD70EA0", Offset = "0xD70EA0", VA = "0xD70EA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xD70FA8", Offset = "0xD70FA8", VA = "0xD70FA8")]
	public FollowTargetForward()
	{
	}
}
[Serializable]
[Token(Token = "0x200005D")]
public class BendingSegment
{
	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform firstTransform;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lastTransform;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thresholdAngleDifference;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bendingMultiplier;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxAngleDifference;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxBendingAngle;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float responsiveness;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	internal float angleH;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal float angleV;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal Vector3 dirUp;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal Vector3 referenceLookDir;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	internal Vector3 referenceUpDir;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal int chainLength;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	internal Quaternion[] origRotations;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xD66CA4", Offset = "0xD66CA4", VA = "0xD66CA4")]
	public BendingSegment()
	{
	}
}
[Serializable]
[Token(Token = "0x200005E")]
public class NonAffectedJoints
{
	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform joint;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effect;

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xF3C7C4", Offset = "0xF3C7C4", VA = "0xF3C7C4")]
	public NonAffectedJoints()
	{
	}
}
[Token(Token = "0x200005F")]
public class HeadLookController : MonoBehaviour
{
	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rootNode;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BendingSegment[] segments;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NonAffectedJoints[] nonAffectedJoints;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 headLookVector;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 headUpVector;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 target;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform targetTransform;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform VrCamTransform;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float effect;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool overrideAnimation;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool D_DrawTargetDirection;

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xD771EC", Offset = "0xD771EC", VA = "0xD771EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xD775BC", Offset = "0xD775BC", VA = "0xD775BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xD776A8", Offset = "0xD776A8", VA = "0xD776A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xD78848", Offset = "0xD78848", VA = "0xD78848")]
	public static float AngleAroundAxis(Vector3 dirA, Vector3 dirB, Vector3 axis)
	{
		return default(float);
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xD78A0C", Offset = "0xD78A0C", VA = "0xD78A0C")]
	public HeadLookController()
	{
	}
}
[Token(Token = "0x2000060")]
public class Billboard : MonoBehaviour
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyRotateY;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xD66CB8", Offset = "0xD66CB8", VA = "0xD66CB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xD670C4", Offset = "0xD670C4", VA = "0xD670C4")]
	public Billboard()
	{
	}
}
[Token(Token = "0x2000061")]
public class BlackRoomMiniatureBehaviour : MonoBehaviour
{
	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x77EB54", Offset = "0x77EB54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EB54", Offset = "0x77EB54")]
	public Vector3 startPosition;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 startRotation;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x77EBB4", Offset = "0x77EBB4")]
	public float startScale;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x77EBEC", Offset = "0x77EBEC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EBEC", Offset = "0x77EBEC")]
	public Vector3 endPosition;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 endRotation;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x77EC4C", Offset = "0x77EC4C")]
	public float endScale;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xD6721C", Offset = "0xD6721C", VA = "0xD6721C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xD67220", Offset = "0xD67220", VA = "0xD67220")]
	public void SetStartTransform()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xD6731C", Offset = "0xD6731C", VA = "0xD6731C")]
	public void SetEndTransform()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xD67484", Offset = "0xD67484", VA = "0xD67484")]
	private void Reset()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xD6751C", Offset = "0xD6751C", VA = "0xD6751C")]
	public BlackRoomMiniatureBehaviour()
	{
	}
}
[Token(Token = "0x2000062")]
public class BookFireMeshAnimation : MonoBehaviour
{
	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D6D4", Offset = "0x77D6D4")]
	private sealed class <Fade>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BookFireMeshAnimation <>4__this;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <endTime>5__2;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color[] <colors>5__3;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color[] <endColors>5__4;

		[Token(Token = "0x17000245")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001230")]
			[Address(RVA = "0xD67C48", Offset = "0xD67C48", VA = "0xD67C48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001232")]
			[Address(RVA = "0xD67CB0", Offset = "0xD67CB0", VA = "0xD67CB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xD6786C", Offset = "0xD6786C", VA = "0xD6786C")]
		[DebuggerHidden]
		public <Fade>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xD678F8", Offset = "0xD678F8", VA = "0xD678F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xD678FC", Offset = "0xD678FC", VA = "0xD678FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xD67C50", Offset = "0xD67C50", VA = "0xD67C50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int frameRate;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string fadeProperty;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] materials;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BookFireTextureAnimation[] textureAnimations;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_nextTime;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int m_fadeProp;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine m_fadeRoutine;

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xD675D8", Offset = "0xD675D8", VA = "0xD675D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xD67604", Offset = "0xD67604", VA = "0xD67604")]
	public void FadeOutFire(float fadeTime)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xD676B0", Offset = "0xD676B0", VA = "0xD676B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xD6772C", Offset = "0xD6772C", VA = "0xD6772C")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7839F4", Offset = "0x7839F4")]
	public void NextFrame()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xD67630", Offset = "0xD67630", VA = "0xD67630")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783A2C", Offset = "0x783A2C")]
	private IEnumerator Fade(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xD67898", Offset = "0xD67898", VA = "0xD67898")]
	public BookFireMeshAnimation()
	{
	}
}
[Serializable]
[Token(Token = "0x2000063")]
public class StartFireCallback : UnityEvent<Vector3>
{
	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xCC63CC", Offset = "0xCC63CC", VA = "0xCC63CC")]
	public StartFireCallback()
	{
	}
}
[Token(Token = "0x2000064")]
public class BookFireStarter : MonoBehaviour
{
	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D6E4", Offset = "0x77D6E4")]
	private sealed class <DelayedEvents>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BookFireStarter <>4__this;

		[Token(Token = "0x17000247")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xD68344", Offset = "0xD68344", VA = "0xD68344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xD683AC", Offset = "0xD683AC", VA = "0xD683AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xD68130", Offset = "0xD68130", VA = "0xD68130")]
		[DebuggerHidden]
		public <DelayedEvents>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xD68280", Offset = "0xD68280", VA = "0xD68280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xD68284", Offset = "0xD68284", VA = "0xD68284", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xD6834C", Offset = "0xD6834C", VA = "0xD6834C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform fire;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fireCountdown;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EC84", Offset = "0x77EC84")]
	public StartFireCallback startFireEvent;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77ECBC", Offset = "0x77ECBC")]
	public UnityEvent fireStartEvents;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77ECF4", Offset = "0x77ECF4")]
	public float delay;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent postDelayEvents;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77ED2C", Offset = "0x77ED2C")]
	private int <triggerCount>k__BackingField;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77ED3C", Offset = "0x77ED3C")]
	private Vector3 <firePosition>k__BackingField;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BookFireStarter Instance;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_fireStarted;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_holdTime;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_timeLineHoldTime;

	[Token(Token = "0x1700000F")]
	public int triggerCount
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xD67CB8", Offset = "0xD67CB8", VA = "0xD67CB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783A90", Offset = "0x783A90")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xD67CC0", Offset = "0xD67CC0", VA = "0xD67CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783AA0", Offset = "0x783AA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Vector3 firePosition
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xD67CC8", Offset = "0xD67CC8", VA = "0xD67CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783AB0", Offset = "0x783AB0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xD67CD4", Offset = "0xD67CD4", VA = "0xD67CD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783AC0", Offset = "0x783AC0")]
		set
		{
		}
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xD67CE0", Offset = "0xD67CE0", VA = "0xD67CE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xD67DB8", Offset = "0xD67DB8", VA = "0xD67DB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xD67E34", Offset = "0xD67E34", VA = "0xD67E34")]
	public void StartFire(Vector3 firePos)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xD680C0", Offset = "0xD680C0", VA = "0xD680C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783AD0", Offset = "0x783AD0")]
	private IEnumerator DelayedEvents()
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xD6815C", Offset = "0xD6815C", VA = "0xD6815C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xD681F8", Offset = "0xD681F8", VA = "0xD681F8")]
	public BookFireStarter()
	{
	}
}
[Token(Token = "0x2000065")]
public class BookFireTextureAnimation : MonoBehaviour
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77ED4C", Offset = "0x77ED4C")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x77ED4C", Offset = "0x77ED4C")]
	public string textureProperty;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] startClip;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D[] loopClip;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_textureProp;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int m_index;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nextFrameCount;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material m_material;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine m_coroutine;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer m_renderer;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock m_materialPropertyBlock;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xD683B4", Offset = "0xD683B4", VA = "0xD683B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xD67794", Offset = "0xD67794", VA = "0xD67794")]
	public void NextFrame()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xD684D8", Offset = "0xD684D8", VA = "0xD684D8")]
	public BookFireTextureAnimation()
	{
	}
}
[Token(Token = "0x2000066")]
public class CharacterHeadTracking : MonoBehaviour
{
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D6F4", Offset = "0x77D6F4")]
	private sealed class <Transition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharacterHeadTracking <>4__this;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool transitionIn;

		[Token(Token = "0x17000249")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xD699B8", Offset = "0xD699B8", VA = "0xD699B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0xD69A20", Offset = "0xD69A20", VA = "0xD69A20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xD695CC", Offset = "0xD695CC", VA = "0xD695CC")]
		[DebuggerHidden]
		public <Transition>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xD69868", Offset = "0xD69868", VA = "0xD69868", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xD6986C", Offset = "0xD6986C", VA = "0xD6986C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xD699C0", Offset = "0xD699C0", VA = "0xD699C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EDAC", Offset = "0x77EDAC")]
	public bool Look;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform LookAt;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EDE4", Offset = "0x77EDE4")]
	public Transform HeadBone;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform HeadForward;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform HeadUp;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77EE1C", Offset = "0x77EE1C")]
	public float HeadDot;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77EE34", Offset = "0x77EE34")]
	public float HeadWeight;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77EE4C", Offset = "0x77EE4C")]
	public float TrackingSpeed;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77EE68", Offset = "0x77EE68")]
	public float FallbackSpeed;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EE84", Offset = "0x77EE84")]
	public Transform LeftEye;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightEye;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 UpVector;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion _leftEyeRotation;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion _rightEyeRotation;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion _headRotation;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Quaternion _headDiff;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _deltaTime;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _lastTime;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _lastSum;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float _weight;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool _look;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool _animationChanged;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	private bool _transitioningOut;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine _coroutine;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xD68C3C", Offset = "0xD68C3C", VA = "0xD68C3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xD68DFC", Offset = "0xD68DFC", VA = "0xD68DFC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xD68F68", Offset = "0xD68F68", VA = "0xD68F68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783B34", Offset = "0x783B34")]
	private IEnumerator Transition(bool transitionIn, float time = 2f)
	{
		return null;
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xD68F1C", Offset = "0xD68F1C", VA = "0xD68F1C")]
	private void CheckAnimationChange()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xD68FFC", Offset = "0xD68FFC", VA = "0xD68FFC")]
	private void LookUpdate()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xD68DB0", Offset = "0xD68DB0", VA = "0xD68DB0")]
	private float GetSum()
	{
		return default(float);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xD695F8", Offset = "0xD695F8", VA = "0xD695F8")]
	private bool FloatEqual(float a, float b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xD69678", Offset = "0xD69678", VA = "0xD69678")]
	public void EnableLook()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xD697D4", Offset = "0xD697D4", VA = "0xD697D4")]
	public void DisableLook()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xD697DC", Offset = "0xD697DC", VA = "0xD697DC")]
	public CharacterHeadTracking()
	{
	}
}
[Token(Token = "0x2000067")]
public class CloudMovement : MonoBehaviour
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xD69A28", Offset = "0xD69A28", VA = "0xD69A28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xD69BA4", Offset = "0xD69BA4", VA = "0xD69BA4")]
	public CloudMovement()
	{
	}
}
[Token(Token = "0x2000068")]
public class DioramaManager : MonoBehaviour
{
	[Token(Token = "0x20001ED")]
	public enum DioramaName
	{
		[Token(Token = "0x4000A0E")]
		Hub = 0,
		[Token(Token = "0x4000A0F")]
		Emil = 5,
		[Token(Token = "0x4000A10")]
		Jonas = 3,
		[Token(Token = "0x4000A11")]
		Morten = 4,
		[Token(Token = "0x4000A12")]
		Zeliko = 2
	}

	[Token(Token = "0x20001EE")]
	private enum SetType
	{
		[Token(Token = "0x4000A14")]
		Room,
		[Token(Token = "0x4000A15")]
		Portal
	}

	[Serializable]
	[Token(Token = "0x20001EF")]
	public class Diorama
	{
		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DioramaName dioramaName;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject portal;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MaterialSet roomSet;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MaterialSet portalSet;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MaterialSet stencilSet;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782ACC", Offset = "0x782ACC")]
		private readonly int <compareProp>k__BackingField;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782ADC", Offset = "0x782ADC")]
		private readonly int <passOpProp>k__BackingField;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782AEC", Offset = "0x782AEC")]
		private bool <visited>k__BackingField;

		[Token(Token = "0x1700024B")]
		public int compareProp
		{
			[Token(Token = "0x600123F")]
			[Address(RVA = "0xD6C1E4", Offset = "0xD6C1E4", VA = "0xD6C1E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x785D4C", Offset = "0x785D4C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700024C")]
		public int passOpProp
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0xD6C1EC", Offset = "0xD6C1EC", VA = "0xD6C1EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x785D5C", Offset = "0x785D5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700024D")]
		public bool visited
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0xD6C1F4", Offset = "0xD6C1F4", VA = "0xD6C1F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x785D6C", Offset = "0x785D6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001242")]
			[Address(RVA = "0xD6C1FC", Offset = "0xD6C1FC", VA = "0xD6C1FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x785D7C", Offset = "0x785D7C")]
			set
			{
			}
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xD6C208", Offset = "0xD6C208", VA = "0xD6C208")]
		public Diorama()
		{
		}
	}

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneLoader sceneHandler;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector fadeInTimeline;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayableDirector fadeOutTimeline;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer hubBackdrop;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isSinglePlayer;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<int> onToggleHub;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x77EEBC", Offset = "0x77EEBC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EEBC", Offset = "0x77EEBC")]
	public Diorama[] dioramas;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xD6B170", Offset = "0xD6B170", VA = "0xD6B170")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xD6B76C", Offset = "0xD6B76C", VA = "0xD6B76C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xD6B8D0", Offset = "0xD6B8D0", VA = "0xD6B8D0")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x783B98", Offset = "0x783B98")]
	public void ToggleHub()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xD6BA50", Offset = "0xD6BA50", VA = "0xD6BA50")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x783BD0", Offset = "0x783BD0")]
	public void ToggleZeliko()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xD6BAD0", Offset = "0xD6BAD0", VA = "0xD6BAD0")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x783C08", Offset = "0x783C08")]
	public void ToggleJonas()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xD6BB50", Offset = "0xD6BB50", VA = "0xD6BB50")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x783C40", Offset = "0x783C40")]
	public void ToggleMorten()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xD6BBD0", Offset = "0xD6BBD0", VA = "0xD6BBD0")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x783C78", Offset = "0x783C78")]
	public void ToggleEmil()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xD6B2E0", Offset = "0xD6B2E0", VA = "0xD6B2E0")]
	private void Toggle(DioramaName name, bool duringAwake = false)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xD6BE04", Offset = "0xD6BE04", VA = "0xD6BE04")]
	private void EnableStencil(Diorama diorama, SetType set)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xD6BC50", Offset = "0xD6BC50", VA = "0xD6BC50")]
	private void DisableStencil(Diorama diorama, SetType set)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xD6BFB8", Offset = "0xD6BFB8", VA = "0xD6BFB8")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x783CB0", Offset = "0x783CB0")]
	private void DisableAllStencils()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xD6C100", Offset = "0xD6C100", VA = "0xD6C100")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xD6C1DC", Offset = "0xD6C1DC", VA = "0xD6C1DC")]
	public DioramaManager()
	{
	}
}
[Token(Token = "0x2000069")]
public class DioramaTransition : MonoBehaviour
{
	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D704", Offset = "0x77D704")]
	private sealed class <Transition>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DioramaTransition <>4__this;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float radius;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <st>5__2;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] <startRadius>5__3;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xD6D05C", Offset = "0xD6D05C", VA = "0xD6D05C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001249")]
			[Address(RVA = "0xD6D0C4", Offset = "0xD6D0C4", VA = "0xD6D0C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xD6C908", Offset = "0xD6C908", VA = "0xD6C908")]
		[DebuggerHidden]
		public <Transition>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xD6CD30", Offset = "0xD6CD30", VA = "0xD6CD30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xD6CD34", Offset = "0xD6CD34", VA = "0xD6CD34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xD6D064", Offset = "0xD6D064", VA = "0xD6D064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialSet materialSet;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform inPosition;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform outPosition;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float inRadius;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float outRadius;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve easing;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EF08", Offset = "0x77EF08")]
	public float sphereRadius;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D noiseTex;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float noiseTiling;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float noiseRadius;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly int m_posProp;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private readonly int m_radiusProp;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine m_coroutine;

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xD6C288", Offset = "0xD6C288", VA = "0xD6C288")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xD6C5B4", Offset = "0xD6C5B4", VA = "0xD6C5B4")]
	public void TransitionIn(float duration)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xD6C7A0", Offset = "0xD6C7A0", VA = "0xD6C7A0")]
	public void TransitionOut(float duration)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xD6C71C", Offset = "0xD6C71C", VA = "0xD6C71C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783CE8", Offset = "0x783CE8")]
	private IEnumerator Transition(float duration, float radius)
	{
		return null;
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xD6C2AC", Offset = "0xD6C2AC", VA = "0xD6C2AC")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x783D4C", Offset = "0x783D4C")]
	private void SetIn()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xD6C934", Offset = "0xD6C934", VA = "0xD6C934")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x783D84", Offset = "0x783D84")]
	private void SetOut()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xD6C448", Offset = "0xD6C448", VA = "0xD6C448")]
	private void SetShaderProperties()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xD6CAD0", Offset = "0xD6CAD0", VA = "0xD6CAD0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xD6CC7C", Offset = "0xD6CC7C", VA = "0xD6CC7C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xD6CC80", Offset = "0xD6CC80", VA = "0xD6CC80")]
	public DioramaTransition()
	{
	}
}
[Token(Token = "0x200006A")]
[ExecuteAlways]
public class DioramaVideoPlayer : MonoBehaviour
{
	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool prepareVideoDuringAwake;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform source;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform target;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xD6D0CC", Offset = "0xD6D0CC", VA = "0xD6D0CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xD6D174", Offset = "0xD6D174", VA = "0xD6D174")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xD6D2BC", Offset = "0xD6D2BC", VA = "0xD6D2BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xD6D404", Offset = "0xD6D404", VA = "0xD6D404")]
	private void FrameUpdate(VideoPlayer src, long frameIdx)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xD6D444", Offset = "0xD6D444", VA = "0xD6D444")]
	private void Reset()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xD6D49C", Offset = "0xD6D49C", VA = "0xD6D49C")]
	public DioramaVideoPlayer()
	{
	}
}
[Token(Token = "0x200006B")]
public class DistanceFade : MonoBehaviour
{
	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pivotObject;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minDistance;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxDistance;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float changeSpeed;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onVisible;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onHidden;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_colorProp;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool m_active;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_currentDistance;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_smoothDistance;

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xD6D5C4", Offset = "0xD6D5C4", VA = "0xD6D5C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xD6D75C", Offset = "0xD6D75C", VA = "0xD6D75C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xD6DA50", Offset = "0xD6DA50", VA = "0xD6DA50")]
	public DistanceFade()
	{
	}
}
[Token(Token = "0x200006C")]
public class HingePullBehaviour : MonoBehaviour
{
	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform puller;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77EF40", Offset = "0x77EF40")]
	public Vector3 axis;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 openAxis;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float force;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float tolerance;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform m_transform;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HingeJoint m_joint;

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xD78AD8", Offset = "0xD78AD8", VA = "0xD78AD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xD78B80", Offset = "0xD78B80", VA = "0xD78B80")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xD78E98", Offset = "0xD78E98", VA = "0xD78E98")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xD78D8C", Offset = "0xD78D8C", VA = "0xD78D8C")]
	private float ProjectedSignedAngle(Vector3 from, Vector3 to, Vector3 planeNormal)
	{
		return default(float);
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xD7902C", Offset = "0xD7902C", VA = "0xD7902C")]
	public HingePullBehaviour()
	{
	}
}
[Token(Token = "0x200006D")]
public class InstrumentOrientation : MonoBehaviour
{
	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D714", Offset = "0x77D714")]
	private sealed class <Orient>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InstrumentOrientation <>4__this;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <player>5__2;

		[Token(Token = "0x17000250")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0xD797D4", Offset = "0xD797D4", VA = "0xD797D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600124F")]
			[Address(RVA = "0xD7983C", Offset = "0xD7983C", VA = "0xD7983C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xD79484", Offset = "0xD79484", VA = "0xD79484")]
		[DebuggerHidden]
		public <Orient>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xD794B8", Offset = "0xD794B8", VA = "0xD794B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xD794BC", Offset = "0xD794BC", VA = "0xD794BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xD797DC", Offset = "0xD797DC", VA = "0xD797DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine m_coroutine;

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xD793C8", Offset = "0xD793C8", VA = "0xD793C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xD79414", Offset = "0xD79414", VA = "0xD79414")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783DBC", Offset = "0x783DBC")]
	private IEnumerator Orient()
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xD794B0", Offset = "0xD794B0", VA = "0xD794B0")]
	public InstrumentOrientation()
	{
	}
}
[Token(Token = "0x200006E")]
public class MusicBrain : MonoBehaviour
{
	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer mixer;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerSnapshot mute;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerSnapshot musicLouder;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource[] disableSpatialized;

	[Token(Token = "0x40001F6")]
	private const float beatInMs = 1667f;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77EF78", Offset = "0x77EF78")]
	public float choirDelay;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xF3C090", Offset = "0xF3C090", VA = "0xF3C090")]
	private int RandomEvenNumber(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xF3C0C8", Offset = "0xF3C0C8", VA = "0xF3C0C8")]
	public void MusicLouder()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xF3C0E8", Offset = "0xF3C0E8", VA = "0xF3C0E8")]
	public void MuteMixer()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xF3C170", Offset = "0xF3C170", VA = "0xF3C170")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x783E20", Offset = "0x783E20")]
	private void MakeRandomNumber()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xF3C208", Offset = "0xF3C208", VA = "0xF3C208")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xF3C298", Offset = "0xF3C298", VA = "0xF3C298")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xF3C2F8", Offset = "0xF3C2F8", VA = "0xF3C2F8")]
	public MusicBrain()
	{
	}
}
[Token(Token = "0x200006F")]
public class OrbitPivot : MonoBehaviour
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool fixedUpdate;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 pivot;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform m_transform;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xF4F064", Offset = "0xF4F064", VA = "0xF4F064")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xF4F08C", Offset = "0xF4F08C", VA = "0xF4F08C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xF4F174", Offset = "0xF4F174", VA = "0xF4F174")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xF4F09C", Offset = "0xF4F09C", VA = "0xF4F09C")]
	private void Rotate()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xF4F184", Offset = "0xF4F184", VA = "0xF4F184")]
	public OrbitPivot()
	{
	}
}
[Token(Token = "0x2000070")]
public static class PianoUtils
{
	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D724", Offset = "0x77D724")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int note;

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xF50BDC", Offset = "0xF50BDC", VA = "0xF50BDC")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xF50BE4", Offset = "0xF50BE4", VA = "0xF50BE4")]
		internal long <GetClosestNoteInscale>b__0(int x)
		{
			return default(long);
		}
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xF50274", Offset = "0xF50274", VA = "0xF50274")]
	public static int KeyToOctave(int key)
	{
		return default(int);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xF502F8", Offset = "0xF502F8", VA = "0xF502F8")]
	public static int KeyToNote(int key)
	{
		return default(int);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xF501A8", Offset = "0xF501A8", VA = "0xF501A8")]
	public static int KeyNumber(PianoKeyBehaviour key)
	{
		return default(int);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xF503EC", Offset = "0xF503EC", VA = "0xF503EC")]
	public static int OctaveAndNoteToKey(int oct, int note)
	{
		return default(int);
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xF50320", Offset = "0xF50320", VA = "0xF50320")]
	public static int GetClosestNoteInscale(int note, int octave, int[] scale)
	{
		return default(int);
	}
}
[Token(Token = "0x2000071")]
public class PianoBehaviour : MonoBehaviour
{
	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77EF90", Offset = "0x77EF90")]
	public float maxAngle;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77EFA8", Offset = "0x77EFA8")]
	public float playThreshold;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77EFC0", Offset = "0x77EFC0")]
	public float velocityModifier;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77EFDC", Offset = "0x77EFDC")]
	public int[] scale;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F014", Offset = "0x77F014")]
	public PianoKeyBehaviour[] keys;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F04C", Offset = "0x77F04C")]
	public AudioClip[] keySamples;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<PianoKeyBehaviour> m_activeKeys;

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xF4FBC4", Offset = "0xF4FBC4", VA = "0xF4FBC4")]
	private void Reset()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xF4FC68", Offset = "0xF4FC68", VA = "0xF4FC68")]
	private void Update()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xF4FC6C", Offset = "0xF4FC6C", VA = "0xF4FC6C")]
	private void PlayKeys()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xF503FC", Offset = "0xF503FC", VA = "0xF503FC")]
	public void AddActiveKey(PianoKeyBehaviour key)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xF50494", Offset = "0xF50494", VA = "0xF50494")]
	public void RemoveActiveKey(PianoKeyBehaviour key)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xF5052C", Offset = "0xF5052C", VA = "0xF5052C")]
	public PianoBehaviour()
	{
	}
}
[Token(Token = "0x2000072")]
public class PianoFingerBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRController.Hand hand;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77F084", Offset = "0x77F084")]
	private Vector3 <velocity>k__BackingField;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F094", Offset = "0x77F094")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x77F094", Offset = "0x77F094")]
	public Vector3 translationOffset;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform m_transform;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_lastPosition;

	[Token(Token = "0x17000011")]
	public Vector3 velocity
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0xF505E0", Offset = "0xF505E0", VA = "0xF505E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783E58", Offset = "0x783E58")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000210")]
		[Address(RVA = "0xF505EC", Offset = "0xF505EC", VA = "0xF505EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783E68", Offset = "0x783E68")]
		private set
		{
		}
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xF505F8", Offset = "0xF505F8", VA = "0xF505F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xF50774", Offset = "0xF50774", VA = "0xF50774")]
	private void Update()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xF508D0", Offset = "0xF508D0", VA = "0xF508D0")]
	public PianoFingerBehaviour()
	{
	}
}
[Token(Token = "0x2000073")]
public class PianoKeyBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PianoBehaviour piano;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77F0F4", Offset = "0x77F0F4")]
	private Transform <meshPivot>k__BackingField;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77F104", Offset = "0x77F104")]
	private Transform <fingerPivot>k__BackingField;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77F114", Offset = "0x77F114")]
	private bool <played>k__BackingField;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77F124", Offset = "0x77F124")]
	private PianoFingerBehaviour <finger>k__BackingField;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion m_defaultRotation;

	[Token(Token = "0x17000012")]
	public Transform meshPivot
	{
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xF50938", Offset = "0xF50938", VA = "0xF50938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783E78", Offset = "0x783E78")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000215")]
		[Address(RVA = "0xF50940", Offset = "0xF50940", VA = "0xF50940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783E88", Offset = "0x783E88")]
		private set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Transform fingerPivot
	{
		[Token(Token = "0x6000216")]
		[Address(RVA = "0xF50948", Offset = "0xF50948", VA = "0xF50948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783E98", Offset = "0x783E98")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000217")]
		[Address(RVA = "0xF50950", Offset = "0xF50950", VA = "0xF50950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783EA8", Offset = "0x783EA8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public bool played
	{
		[Token(Token = "0x6000218")]
		[Address(RVA = "0xF50958", Offset = "0xF50958", VA = "0xF50958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783EB8", Offset = "0x783EB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000219")]
		[Address(RVA = "0xF50960", Offset = "0xF50960", VA = "0xF50960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783EC8", Offset = "0x783EC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public PianoFingerBehaviour finger
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0xF5096C", Offset = "0xF5096C", VA = "0xF5096C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783ED8", Offset = "0x783ED8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600021B")]
		[Address(RVA = "0xF50974", Offset = "0xF50974", VA = "0xF50974")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783EE8", Offset = "0x783EE8")]
		set
		{
		}
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xF5097C", Offset = "0xF5097C", VA = "0xF5097C")]
	private void Reset()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xF509D4", Offset = "0xF509D4", VA = "0xF509D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xF50A24", Offset = "0xF50A24", VA = "0xF50A24")]
	public void MouseThePiano()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xF50A60", Offset = "0xF50A60", VA = "0xF50A60")]
	public void UnMouseThePiano()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xF50AD0", Offset = "0xF50AD0", VA = "0xF50AD0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xF50BA0", Offset = "0xF50BA0", VA = "0xF50BA0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xF50A94", Offset = "0xF50A94", VA = "0xF50A94")]
	public void Revert()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xF50BD4", Offset = "0xF50BD4", VA = "0xF50BD4")]
	public PianoKeyBehaviour()
	{
	}
}
[Token(Token = "0x2000074")]
public class PlaygroundManager : MonoBehaviour
{
	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F134", Offset = "0x77F134")]
	public UnityEvent gramophoneCallback;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x77F16C", Offset = "0x77F16C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F16C", Offset = "0x77F16C")]
	public UnityEvent pianoCallback;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x77F1B8", Offset = "0x77F1B8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F1B8", Offset = "0x77F1B8")]
	public UnityEvent teacupCallback;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x77F204", Offset = "0x77F204")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F204", Offset = "0x77F204")]
	public UnityEvent nightstandCallback;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77F250", Offset = "0x77F250")]
	private static PlaygroundManager <instance>k__BackingField;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_gramophonePlayed;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool m_pianoPlayed;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool m_teacupPlayed;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool m_nightstandPlayed;

	[Token(Token = "0x17000016")]
	public static PlaygroundManager instance
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0xCC0D40", Offset = "0xCC0D40", VA = "0xCC0D40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783EF8", Offset = "0x783EF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0xCC0D90", Offset = "0xCC0D90", VA = "0xCC0D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783F08", Offset = "0x783F08")]
		private set
		{
		}
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xCC0DE4", Offset = "0xCC0DE4", VA = "0xCC0DE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xCC0F08", Offset = "0xCC0F08", VA = "0xCC0F08")]
	public void PlayedGramophone()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xCC0F48", Offset = "0xCC0F48", VA = "0xCC0F48")]
	public void PlayedPiano()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xCC0F88", Offset = "0xCC0F88", VA = "0xCC0F88")]
	public void PlayedTeacup()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xCC0FC8", Offset = "0xCC0FC8", VA = "0xCC0FC8")]
	public void PlayedNightstand()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xCC1008", Offset = "0xCC1008", VA = "0xCC1008")]
	public PlaygroundManager()
	{
	}
}
[Token(Token = "0x2000075")]
public class PortalBehaviour : MonoBehaviour
{
	[Token(Token = "0x20001F3")]
	private struct TransformData
	{
		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 localScale;
	}

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F260", Offset = "0x77F260")]
	public Transform[] doors;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F298", Offset = "0x77F298")]
	public bool checkStatusOnEnable;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F2D0", Offset = "0x77F2D0")]
	public UnityEvent anyOpened;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent allClosed;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_openedPortals;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool m_open;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TransformData[] m_doorData;

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xCC1010", Offset = "0xCC1010", VA = "0xCC1010")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xCC11D4", Offset = "0xCC11D4", VA = "0xCC11D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xCC1250", Offset = "0xCC1250", VA = "0xCC1250")]
	public void Open()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xCC1264", Offset = "0xCC1264", VA = "0xCC1264")]
	public void Close()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xCC11E8", Offset = "0xCC11E8", VA = "0xCC11E8")]
	private void Handler(bool forceOpenCheck = false)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xCC127C", Offset = "0xCC127C", VA = "0xCC127C")]
	public void ResetDoors()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xCC1418", Offset = "0xCC1418", VA = "0xCC1418")]
	public PortalBehaviour()
	{
	}
}
[Token(Token = "0x2000076")]
public class ReorientObject : MonoBehaviour
{
	[Token(Token = "0x20001F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D734", Offset = "0x77D734")]
	private sealed class <Reorient>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReorientObject <>4__this;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <player>5__2;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <origin>5__3;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform <trans>5__4;

		[Token(Token = "0x17000252")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xCC23CC", Offset = "0xCC23CC", VA = "0xCC23CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001257")]
			[Address(RVA = "0xCC2434", Offset = "0xCC2434", VA = "0xCC2434", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xCC1D14", Offset = "0xCC1D14", VA = "0xCC1D14")]
		[DebuggerHidden]
		public <Reorient>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xCC1D58", Offset = "0xCC1D58", VA = "0xCC1D58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xCC1D5C", Offset = "0xCC1D5C", VA = "0xCC1D5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xCC23D4", Offset = "0xCC23D4", VA = "0xCC23D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform customTransform;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x77F308", Offset = "0x77F308")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77F308", Offset = "0x77F308")]
	public float centerRadius;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool lookAtCenter;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 rotationOffset;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F35C", Offset = "0x77F35C")]
	public FloatingInteractable floatingInteractable;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F394", Offset = "0x77F394")]
	public UnityEvent orientedCallback;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine m_coroutine;

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xCC1C34", Offset = "0xCC1C34", VA = "0xCC1C34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xCC1CE4", Offset = "0xCC1CE4", VA = "0xCC1CE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xCC1C74", Offset = "0xCC1C74", VA = "0xCC1C74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783F18", Offset = "0x783F18")]
	private IEnumerator Reorient()
	{
		return null;
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xCC1D40", Offset = "0xCC1D40", VA = "0xCC1D40")]
	public ReorientObject()
	{
	}
}
[Token(Token = "0x2000077")]
public class SetFire : MonoBehaviour
{
	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask matchLayer;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xCC43CC", Offset = "0xCC43CC", VA = "0xCC43CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xCC4518", Offset = "0xCC4518", VA = "0xCC4518")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xCC45E0", Offset = "0xCC45E0", VA = "0xCC45E0")]
	public SetFire()
	{
	}
}
[Token(Token = "0x2000078")]
[ExecuteAlways]
public class SpriteToMaterialTexture : MonoBehaviour
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material targetMaterial;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string property;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_propId;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D m_tex;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_hasVideo;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool m_videoUpdate;

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xCC5FC8", Offset = "0xCC5FC8", VA = "0xCC5FC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xCC5FF4", Offset = "0xCC5FF4", VA = "0xCC5FF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xCC60E4", Offset = "0xCC60E4", VA = "0xCC60E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xCC61B8", Offset = "0xCC61B8", VA = "0xCC61B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xCC6310", Offset = "0xCC6310", VA = "0xCC6310")]
	private void VideoPlayerOnFrameReady(VideoPlayer source, long frameIdx)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xCC61F0", Offset = "0xCC61F0", VA = "0xCC61F0")]
	private void UpdateTexture()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xCC631C", Offset = "0xCC631C", VA = "0xCC631C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xCC6374", Offset = "0xCC6374", VA = "0xCC6374")]
	public SpriteToMaterialTexture()
	{
	}
}
[Token(Token = "0x2000079")]
public class TeabagBehaviour : MonoBehaviour
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F3CC", Offset = "0x77F3CC")]
	public float airDrag;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float teaDrag;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F404", Offset = "0x77F404")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x77F404", Offset = "0x77F404")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x77F404", Offset = "0x77F404")]
	public Rigidbody[] rigidbodies;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xCD2F9C", Offset = "0xCD2F9C", VA = "0xCD2F9C")]
	public void EnterTea()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xCD3054", Offset = "0xCD3054", VA = "0xCD3054")]
	public void ExitTea()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xCD30D0", Offset = "0xCD30D0", VA = "0xCD30D0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xCD31C0", Offset = "0xCD31C0", VA = "0xCD31C0")]
	public TeabagBehaviour()
	{
	}
}
[Token(Token = "0x200007A")]
public class TeacupBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TeabagBehaviour teabag;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject drip;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource synthSource;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource bassSource;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioMixerGroup[] teacupGroups;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string teabagTag;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] bassNotes;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] synthDrips;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Queue<AudioClip> bassClips;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] m_dripPool;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int m_dripPoolIndex;

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xCD31D4", Offset = "0xCD31D4", VA = "0xCD31D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xCD3368", Offset = "0xCD3368", VA = "0xCD3368")]
	private void PlaySynthDrip()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xCD3480", Offset = "0xCD3480", VA = "0xCD3480")]
	private void PlayBassNote()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xCD3540", Offset = "0xCD3540", VA = "0xCD3540")]
	private void PlayTeacupAudio()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xCD35E4", Offset = "0xCD35E4", VA = "0xCD35E4")]
	private void PoolDrip()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xCD3704", Offset = "0xCD3704", VA = "0xCD3704")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xCD37C4", Offset = "0xCD37C4", VA = "0xCD37C4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xCD387C", Offset = "0xCD387C", VA = "0xCD387C")]
	private void Reset()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xCD38D4", Offset = "0xCD38D4", VA = "0xCD38D4")]
	public TeacupBehaviour()
	{
	}
}
[Token(Token = "0x200007B")]
public class UserPresenceEvent : MonoBehaviour
{
	[Token(Token = "0x20001F5")]
	public enum UserState
	{
		[Token(Token = "0x4000A36")]
		OnLeave,
		[Token(Token = "0x4000A37")]
		OnPresent
	}

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool checkFromBeginning;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77F488", Offset = "0x77F488")]
	private bool <isChecking>k__BackingField;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UserState state;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent events;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_present;

	[Token(Token = "0x17000017")]
	public bool isChecking
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xCD7344", Offset = "0xCD7344", VA = "0xCD7344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783F7C", Offset = "0x783F7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000250")]
		[Address(RVA = "0xCD734C", Offset = "0xCD734C", VA = "0xCD734C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x783F8C", Offset = "0x783F8C")]
		set
		{
		}
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xCD7358", Offset = "0xCD7358", VA = "0xCD7358")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xCD7374", Offset = "0xCD7374", VA = "0xCD7374")]
	private void Update()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xCD74EC", Offset = "0xCD74EC", VA = "0xCD74EC")]
	public UserPresenceEvent()
	{
	}
}
[Token(Token = "0x200007C")]
public class CameraFade : MonoBehaviour
{
	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F498", Offset = "0x77F498")]
	public Shader FadeShader;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F4D0", Offset = "0x77F4D0")]
	public Color FadeColor;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77F508", Offset = "0x77F508")]
	public float Blend;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F520", Offset = "0x77F520")]
	public CameraFade MasterCameraFade;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _material;

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xD6858C", Offset = "0xD6858C", VA = "0xD6858C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xD68640", Offset = "0xD68640", VA = "0xD68640")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xD687EC", Offset = "0xD687EC", VA = "0xD687EC")]
	public CameraFade()
	{
	}
}
[Token(Token = "0x200007D")]
public class SmoothVRSpectator : MonoBehaviour
{
	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera spectatorCamera;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float followSpeed;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77F558", Offset = "0x77F558")]
	public bool autoReplace;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F590", Offset = "0x77F590")]
	public bool enabledFromStart;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode toggleKey;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode zoomInKey;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode zoomOutKey;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F5C8", Offset = "0x77F5C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77F5C8", Offset = "0x77F5C8")]
	public bool stabilizeRoll;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SmoothVRSpectator instance;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xCC4D40", Offset = "0xCC4D40", VA = "0xCC4D40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xCC4EB0", Offset = "0xCC4EB0", VA = "0xCC4EB0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xCC4F08", Offset = "0xCC4F08", VA = "0xCC4F08")]
	public SmoothVRSpectator()
	{
	}
}
[Token(Token = "0x200007E")]
public static class TransformExtensions
{
	[Token(Token = "0x600025A")]
	[Address(RVA = "0xCD44F8", Offset = "0xCD44F8", VA = "0xCD44F8")]
	public static Vector3 TransformPointUnscaled(this Transform transform, Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xCD4664", Offset = "0xCD4664", VA = "0xCD4664")]
	public static Vector3 InverseTransformPointUnscaled(this Transform transform, Vector3 position)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200007F")]
public class DrawerBehaviour : InteractablePull
{
	[Serializable]
	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D744", Offset = "0x77D744")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Interactable> <>9__9_0;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Interactable> <>9__9_1;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Interactable> <>9__9_2;

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xD6E150", Offset = "0xD6E150", VA = "0xD6E150")]
		public <>c()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xD6E158", Offset = "0xD6E158", VA = "0xD6E158")]
		internal void <ToggleInteractables>b__9_0(Interactable o)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xD6E17C", Offset = "0xD6E17C", VA = "0xD6E17C")]
		internal void <ToggleInteractables>b__9_1(Interactable o)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xD6E1A0", Offset = "0xD6E1A0", VA = "0xD6E1A0")]
		internal void <ToggleInteractables>b__9_2(Interactable o)
		{
		}
	}

	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D754", Offset = "0x77D754")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Interactable interactable;

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xD6DFE4", Offset = "0xD6DFE4", VA = "0xD6DFE4")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xD6E1C4", Offset = "0xD6E1C4", VA = "0xD6E1C4")]
		internal bool <OnCollisionEnter>b__1(Interactable o)
		{
			return default(bool);
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xD6E1D4", Offset = "0xD6E1D4", VA = "0xD6E1D4")]
		internal bool <OnCollisionEnter>b__0(Interactable o)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F628", Offset = "0x77F628")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77F628", Offset = "0x77F628")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77F628", Offset = "0x77F628")]
	public float DragPercentageToEnableOthers;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77F6A0", Offset = "0x77F6A0")]
	public bool AllowNewInteractables;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public UnityEvent OnOpen;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public UnityEvent OnClose;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<Interactable> _enableOnFirstInteraction;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<Interactable> _enableWhileInteracting;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool _activated;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xD6DA6C", Offset = "0xD6DA6C", VA = "0xD6DA6C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xD6DB18", Offset = "0xD6DB18", VA = "0xD6DB18", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xD6DB40", Offset = "0xD6DB40", VA = "0xD6DB40")]
	private void ToggleInteractables()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xD6DE04", Offset = "0xD6DE04", VA = "0xD6DE04", Slot = "8")]
	public override void EnableOtherInteractables()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xD6DE08", Offset = "0xD6DE08", VA = "0xD6DE08", Slot = "9")]
	public override void DisableOtherInteractables()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xD6DE0C", Offset = "0xD6DE0C", VA = "0xD6DE0C", Slot = "11")]
	public override void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xD6DFEC", Offset = "0xD6DFEC", VA = "0xD6DFEC")]
	private void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xD6E0DC", Offset = "0xD6E0DC", VA = "0xD6E0DC")]
	public DrawerBehaviour()
	{
	}
}
[Token(Token = "0x2000080")]
public class EventOnLook : MonoBehaviour
{
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D764", Offset = "0x77D764")]
	private sealed class <PlayAfterPause>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventOnLook <>4__this;

		[Token(Token = "0x17000254")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xD6EA5C", Offset = "0xD6EA5C", VA = "0xD6EA5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0xD6EAC4", Offset = "0xD6EAC4", VA = "0xD6EAC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xD6E8CC", Offset = "0xD6E8CC", VA = "0xD6E8CC")]
		[DebuggerHidden]
		public <PlayAfterPause>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xD6E9E4", Offset = "0xD6E9E4", VA = "0xD6E9E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xD6E9E8", Offset = "0xD6E9E8", VA = "0xD6E9E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xD6EA64", Offset = "0xD6EA64", VA = "0xD6EA64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x77F6D8", Offset = "0x77F6D8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77F6D8", Offset = "0x77F6D8")]
	public float angle;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool setPlayableToPlayAfterPaused;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector playable;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent events;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_wasTriggered;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xD6E4B0", Offset = "0xD6E4B0", VA = "0xD6E4B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xD6E85C", Offset = "0xD6E85C", VA = "0xD6E85C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x783FBC", Offset = "0x783FBC")]
	private IEnumerator PlayAfterPause()
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xD6E8F8", Offset = "0xD6E8F8", VA = "0xD6E8F8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xD6E9D4", Offset = "0xD6E9D4", VA = "0xD6E9D4")]
	public EventOnLook()
	{
	}
}
[Token(Token = "0x2000081")]
public class EventOnTrigger : MonoBehaviour
{
	[Token(Token = "0x20001F9")]
	public enum Condition
	{
		[Token(Token = "0x4000A41")]
		Enter,
		[Token(Token = "0x4000A42")]
		Stay,
		[Token(Token = "0x4000A43")]
		Exit
	}

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Condition condition;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask layerMask;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent triggerEvent;

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xD6EACC", Offset = "0xD6EACC", VA = "0xD6EACC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xD6EB34", Offset = "0xD6EB34", VA = "0xD6EB34")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xD6EBD0", Offset = "0xD6EBD0", VA = "0xD6EBD0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xD6EC54", Offset = "0xD6EC54", VA = "0xD6EC54")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xD6EBB4", Offset = "0xD6EBB4", VA = "0xD6EBB4")]
	private void Action()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xD6ECD8", Offset = "0xD6ECD8", VA = "0xD6ECD8")]
	public EventOnTrigger()
	{
	}
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C2CC", Offset = "0x77C2CC")]
public class FireZone : MonoBehaviour
{
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D774", Offset = "0x77D774")]
	private sealed class <Ignite>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireZone <>4__this;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MatchstickBehaviour behaviour;

		[Token(Token = "0x17000256")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0xD6F2A0", Offset = "0xD6F2A0", VA = "0xD6F2A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0xD6F308", Offset = "0xD6F308", VA = "0xD6F308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xD6F180", Offset = "0xD6F180", VA = "0xD6F180")]
		[DebuggerHidden]
		public <Ignite>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xD6F1BC", Offset = "0xD6F1BC", VA = "0xD6F1BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xD6F1C0", Offset = "0xD6F1C0", VA = "0xD6F1C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xD6F2A8", Offset = "0xD6F2A8", VA = "0xD6F2A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77F730", Offset = "0x77F730")]
	public float timeToIgnite;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F748", Offset = "0x77F748")]
	public UnityEvent onIgnite;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_isBurning;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine m_coroutine;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xD6EF60", Offset = "0xD6EF60", VA = "0xD6EF60")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xD6F0BC", Offset = "0xD6F0BC", VA = "0xD6F0BC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xD6F040", Offset = "0xD6F040", VA = "0xD6F040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784020", Offset = "0x784020")]
	private IEnumerator Ignite(MatchstickBehaviour behaviour)
	{
		return null;
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xD6F1AC", Offset = "0xD6F1AC", VA = "0xD6F1AC")]
	public FireZone()
	{
	}
}
[Token(Token = "0x2000083")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C330", Offset = "0x77C330")]
public class Flick : MonoBehaviour
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77F780", Offset = "0x77F780")]
	public float TargetVelocity;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool OnlyOnce;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool OnlyWhenInteracting;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool VibrateOnFlick;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool _wasTriggered;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77F79C", Offset = "0x77F79C")]
	private Interactable <FlickInteractable>k__BackingField;

	[Token(Token = "0x17000018")]
	public Interactable FlickInteractable
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xD6F37C", Offset = "0xD6F37C", VA = "0xD6F37C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784084", Offset = "0x784084")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000273")]
		[Address(RVA = "0xD6F384", Offset = "0xD6F384", VA = "0xD6F384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784094", Offset = "0x784094")]
		private set
		{
		}
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xD6F38C", Offset = "0xD6F38C", VA = "0xD6F38C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xD6F3E4", Offset = "0xD6F3E4", VA = "0xD6F3E4", Slot = "4")]
	public virtual bool OnFlick()
	{
		return default(bool);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xD6F4EC", Offset = "0xD6F4EC", VA = "0xD6F4EC")]
	public Flick()
	{
	}
}
[Token(Token = "0x2000084")]
public class FlickReceiver : MonoBehaviour
{
	[Token(Token = "0x20001FB")]
	public delegate void StrokeAction(Flick flick, float force);

	[Token(Token = "0x20001FC")]
	public delegate void FlickAction(Flick flick, float force);

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyOnce;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77F7AC", Offset = "0x77F7AC")]
	public bool CallMethodOnFlick;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent FlickEvent;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _triggeredOnce;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _wasTriggered;

	[Token(Token = "0x14000003")]
	public event StrokeAction OnStroke
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xD6F504", Offset = "0xD6F504", VA = "0xD6F504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7840A4", Offset = "0x7840A4")]
		add
		{
		}
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xD6F5A8", Offset = "0xD6F5A8", VA = "0xD6F5A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7840B4", Offset = "0x7840B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event FlickAction OnFlick
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xD6F64C", Offset = "0xD6F64C", VA = "0xD6F64C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7840C4", Offset = "0x7840C4")]
		add
		{
		}
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xD6F6F0", Offset = "0xD6F6F0", VA = "0xD6F6F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7840D4", Offset = "0x7840D4")]
		remove
		{
		}
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xD6F794", Offset = "0xD6F794", VA = "0xD6F794")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xD700FC", Offset = "0xD700FC", VA = "0xD700FC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xD70110", Offset = "0xD70110", VA = "0xD70110")]
	public FlickReceiver()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C394", Offset = "0x77C394")]
public class FloatingInteractable : MonoBehaviour
{
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D784", Offset = "0x77D784")]
	private sealed class <Float>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatingInteractable <>4__this;

		[Token(Token = "0x17000258")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0xD70A4C", Offset = "0xD70A4C", VA = "0xD70A4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0xD70AB4", Offset = "0xD70AB4", VA = "0xD70AB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xD7062C", Offset = "0xD7062C", VA = "0xD7062C")]
		[DebuggerHidden]
		public <Float>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xD7067C", Offset = "0xD7067C", VA = "0xD7067C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xD70680", Offset = "0xD70680", VA = "0xD70680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xD70A54", Offset = "0xD70A54", VA = "0xD70A54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77F804", Offset = "0x77F804")]
	public bool moveUpDown;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MoveAmount;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MoveFrequency;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float SpinSpeed;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x77F83C", Offset = "0x77F83C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F83C", Offset = "0x77F83C")]
	public float minHeight;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxHeight;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxThrowRadius;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Interactable _interactable;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine _floatCoroutine;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77F888", Offset = "0x77F888")]
	private Vector3 <startPosition>k__BackingField;

	[Token(Token = "0x17000019")]
	public Vector3 startPosition
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xD70290", Offset = "0xD70290", VA = "0xD70290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7840E4", Offset = "0x7840E4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xD7029C", Offset = "0xD7029C", VA = "0xD7029C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7840F4", Offset = "0x7840F4")]
		set
		{
		}
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xD702A8", Offset = "0xD702A8", VA = "0xD702A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xD703E4", Offset = "0xD703E4", VA = "0xD703E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xD70374", Offset = "0xD70374", VA = "0xD70374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784104", Offset = "0x784104")]
	private IEnumerator Float()
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xD70658", Offset = "0xD70658", VA = "0xD70658")]
	public FloatingInteractable()
	{
	}
}
[Token(Token = "0x2000086")]
public class FloatingObject : MonoBehaviour
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool localSpace;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveAmount;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveFrequency;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 spinAxis;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spinSpeed;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 m_startPosition;

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xD70ABC", Offset = "0xD70ABC", VA = "0xD70ABC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xD70B08", Offset = "0xD70B08", VA = "0xD70B08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xD70DC4", Offset = "0xD70DC4", VA = "0xD70DC4")]
	public FloatingObject()
	{
	}
}
[Token(Token = "0x2000087")]
public class HandPoseZone : MonoBehaviour
{
	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandPose pose;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xD731D0", Offset = "0xD731D0", VA = "0xD731D0")]
	public void SetPose(HandAnimator handAnimator)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xD731F4", Offset = "0xD731F4", VA = "0xD731F4")]
	public void RemovePose(HandAnimator handAnimator)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xD73210", Offset = "0xD73210", VA = "0xD73210")]
	public HandPoseZone()
	{
	}
}
[Token(Token = "0x2000088")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C3F8", Offset = "0x77C3F8")]
public class HandZone : MonoBehaviour
{
	[Token(Token = "0x20001FE")]
	public enum FadePropertyType
	{
		[Token(Token = "0x4000A4C")]
		ColorAlpha,
		[Token(Token = "0x4000A4D")]
		Float
	}

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve FallOff;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77F898", Offset = "0x77F898")]
	private SphereCollider <SphereCollider>k__BackingField;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int ZoneCount;

	[Token(Token = "0x1700001A")]
	public SphereCollider SphereCollider
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xD73218", Offset = "0xD73218", VA = "0xD73218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784168", Offset = "0x784168")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xD73220", Offset = "0xD73220", VA = "0xD73220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784178", Offset = "0x784178")]
		private set
		{
		}
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xD73228", Offset = "0xD73228", VA = "0xD73228")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xD73280", Offset = "0xD73280", VA = "0xD73280")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xD732D8", Offset = "0xD732D8", VA = "0xD732D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xD73388", Offset = "0xD73388", VA = "0xD73388")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xD734B8", Offset = "0xD734B8", VA = "0xD734B8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xD735E8", Offset = "0xD735E8", VA = "0xD735E8")]
	public HandZone()
	{
	}
}
[Token(Token = "0x2000089")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C45C", Offset = "0x77C45C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C45C", Offset = "0x77C45C")]
public class HandZoneClient : MonoBehaviour
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x77F8A8", Offset = "0x77F8A8")]
	public VRController.Hand hand;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x77F8E0", Offset = "0x77F8E0")]
	public Renderer handMesh;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F918", Offset = "0x77F918")]
	public HandZone.FadePropertyType PropertyType;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string PropertyName;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77F950", Offset = "0x77F950")]
	public float MinValue;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<HandZone> _handZones;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _insideZone;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _material;

	[Token(Token = "0x1700001B")]
	public bool Interacting
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xD73778", Offset = "0xD73778", VA = "0xD73778")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xD73844", Offset = "0xD73844", VA = "0xD73844")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xD739FC", Offset = "0xD739FC", VA = "0xD739FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xD73A68", Offset = "0xD73A68", VA = "0xD73A68")]
	private void ZoneEvaluation()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xD738F4", Offset = "0xD738F4", VA = "0xD738F4")]
	private void SetShaderProperty(Material mat, float value)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xD73D64", Offset = "0xD73D64", VA = "0xD73D64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xD73DD0", Offset = "0xD73DD0", VA = "0xD73DD0")]
	private void InsideZoneEval()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xD73448", Offset = "0xD73448", VA = "0xD73448")]
	public void AddZone(HandZone zone)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xD73578", Offset = "0xD73578", VA = "0xD73578")]
	public void RemoveZone(HandZone zone)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xD73EA4", Offset = "0xD73EA4", VA = "0xD73EA4")]
	public HandZoneClient()
	{
	}
}
[Token(Token = "0x200008A")]
public class Interactable : MonoBehaviour
{
	[Token(Token = "0x20001FF")]
	public delegate void EndInteractionDelegate(object sender);

	[Serializable]
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D794", Offset = "0x77D794")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Interactable> <>9__52_0;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Interactable> <>9__52_1;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Interactable> <>9__53_0;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Interactable> <>9__54_0;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<Interactable> <>9__54_1;

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xD7AB90", Offset = "0xD7AB90", VA = "0xD7AB90")]
		public <>c()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xD7AB98", Offset = "0xD7AB98", VA = "0xD7AB98")]
		internal void <EnableOtherInteractables>b__52_0(Interactable o)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xD7ABBC", Offset = "0xD7ABBC", VA = "0xD7ABBC")]
		internal void <EnableOtherInteractables>b__52_1(Interactable o)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xD7ABE0", Offset = "0xD7ABE0", VA = "0xD7ABE0")]
		internal void <DisableOtherInteractables>b__53_0(Interactable o)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xD7AC04", Offset = "0xD7AC04", VA = "0xD7AC04")]
		internal void <DisableOtherInteractablesOnAwake>b__54_0(Interactable o)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xD7AC28", Offset = "0xD7AC28", VA = "0xD7AC28")]
		internal void <DisableOtherInteractablesOnAwake>b__54_1(Interactable o)
		{
		}
	}

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandPose Pose;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F968", Offset = "0x77F968")]
	public bool EnablePhysics;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool CanInteract;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool CanSwitchHands;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool IsTriggerWhileInteracting;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x77F9A0", Offset = "0x77F9A0")]
	public bool UseGravityAfterInteraction;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool IsKinematicAfterInteraction;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77F9D8", Offset = "0x77F9D8")]
	public bool VibrateOnCollision;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77FA10", Offset = "0x77FA10")]
	public float VibrationDuration;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77FA28", Offset = "0x77FA28")]
	public List<Interactable> EnableOnFirstInteraction;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Interactable> EnableWhileInteracting;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77FA60", Offset = "0x77FA60")]
	public UnityEvent beginInteractionEvents;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent endInteractionEvents;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77FA98", Offset = "0x77FA98")]
	private bool <Interacting>k__BackingField;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77FAA8", Offset = "0x77FAA8")]
	private VRController <interactableController>k__BackingField;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77FAB8", Offset = "0x77FAB8")]
	private Rigidbody <InteractableRigidbody>k__BackingField;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77FAC8", Offset = "0x77FAC8")]
	private Collider <InteractableCollider>k__BackingField;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77FAD8", Offset = "0x77FAD8")]
	private bool <WasTrigger>k__BackingField;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77FAE8", Offset = "0x77FAE8")]
	private float <VelocityFactor>k__BackingField;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77FAF8", Offset = "0x77FAF8")]
	private float <RotationFactor>k__BackingField;

	[Token(Token = "0x1700001C")]
	public bool Interacting
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0xD79844", Offset = "0xD79844", VA = "0xD79844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784188", Offset = "0x784188")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xD7984C", Offset = "0xD7984C", VA = "0xD7984C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784198", Offset = "0x784198")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public VRController interactableController
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xD79858", Offset = "0xD79858", VA = "0xD79858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7841A8", Offset = "0x7841A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600029F")]
		[Address(RVA = "0xD79860", Offset = "0xD79860", VA = "0xD79860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7841B8", Offset = "0x7841B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	protected Rigidbody InteractableRigidbody
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xD79868", Offset = "0xD79868", VA = "0xD79868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7841C8", Offset = "0x7841C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xD79870", Offset = "0xD79870", VA = "0xD79870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7841D8", Offset = "0x7841D8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	protected Collider InteractableCollider
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xD79878", Offset = "0xD79878", VA = "0xD79878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7841E8", Offset = "0x7841E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xD79880", Offset = "0xD79880", VA = "0xD79880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7841F8", Offset = "0x7841F8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000020")]
	protected bool WasTrigger
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xD79888", Offset = "0xD79888", VA = "0xD79888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784208", Offset = "0x784208")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xD79890", Offset = "0xD79890", VA = "0xD79890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784218", Offset = "0x784218")]
		private set
		{
		}
	}

	[Token(Token = "0x17000021")]
	protected float VelocityFactor
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xD7989C", Offset = "0xD7989C", VA = "0xD7989C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784228", Offset = "0x784228")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xD798A4", Offset = "0xD798A4", VA = "0xD798A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784238", Offset = "0x784238")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	protected float RotationFactor
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xD798AC", Offset = "0xD798AC", VA = "0xD798AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784248", Offset = "0x784248")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xD798B4", Offset = "0xD798B4", VA = "0xD798B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784258", Offset = "0x784258")]
		set
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event EndInteractionDelegate OnEndInteraction
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xD798BC", Offset = "0xD798BC", VA = "0xD798BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784268", Offset = "0x784268")]
		add
		{
		}
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xD79970", Offset = "0xD79970", VA = "0xD79970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784278", Offset = "0x784278")]
		remove
		{
		}
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xD79A24", Offset = "0xD79A24", VA = "0xD79A24", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xD79D38", Offset = "0xD79D38", VA = "0xD79D38", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xD79D3C", Offset = "0xD79D3C", VA = "0xD79D3C")]
	private void Reset()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xD79E24", Offset = "0xD79E24", VA = "0xD79E24", Slot = "6")]
	public virtual bool BeginInteraction(VRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xD79FF0", Offset = "0xD79FF0", VA = "0xD79FF0", Slot = "7")]
	public virtual void EndInteraction(VRController controller)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xD7A1D4", Offset = "0xD7A1D4", VA = "0xD7A1D4")]
	public void ForceEndInteraction()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xD7A08C", Offset = "0xD7A08C", VA = "0xD7A08C")]
	private void CancelInteraction()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xD7A608", Offset = "0xD7A608", VA = "0xD7A608", Slot = "8")]
	public virtual void EnableOtherInteractables()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xD7A7A8", Offset = "0xD7A7A8", VA = "0xD7A7A8", Slot = "9")]
	public virtual void DisableOtherInteractables()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xD79B98", Offset = "0xD79B98", VA = "0xD79B98")]
	public void DisableOtherInteractablesOnAwake()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xD7A8A0", Offset = "0xD7A8A0", VA = "0xD7A8A0")]
	public void ReplaceInteractable(Interactable interactable, [Optional] VRController controller)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xD7A9B8", Offset = "0xD7A9B8", VA = "0xD7A9B8", Slot = "10")]
	public virtual void SetCanInteract(bool value)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xD7A9C4", Offset = "0xD7A9C4", VA = "0xD7A9C4", Slot = "11")]
	public virtual void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xD7A9D4", Offset = "0xD7A9D4", VA = "0xD7A9D4")]
	public void TriggerVibration()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xD7AA74", Offset = "0xD7AA74", VA = "0xD7AA74")]
	public Rigidbody GetRigidbody()
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xD7AA7C", Offset = "0xD7AA7C", VA = "0xD7AA7C")]
	public Interactable()
	{
	}
}
[Token(Token = "0x200008B")]
public class InteractableGrab : Interactable
{
	[Token(Token = "0x2000201")]
	public enum HandSnapPivot
	{
		[Token(Token = "0x4000A55")]
		None,
		[Token(Token = "0x4000A56")]
		Pivot1,
		[Token(Token = "0x4000A57")]
		Pivot2,
		[Token(Token = "0x4000A58")]
		Pivot3,
		[Token(Token = "0x4000A59")]
		Pivot4,
		[Token(Token = "0x4000A5A")]
		Pivot5,
		[Token(Token = "0x4000A5B")]
		Pivot6,
		[Token(Token = "0x4000A5C")]
		Pivot7
	}

	[Token(Token = "0x2000202")]
	public delegate void InteractionBeginAction();

	[Token(Token = "0x2000203")]
	public delegate void InteractionEndAction();

	[Token(Token = "0x2000204")]
	public delegate void ShakeAction(float force, float forceLastFrame);

	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D7A4", Offset = "0x77D7A4")]
	private sealed class <Snap>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableGrab <>4__this;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <smoothedPosition>5__2;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <smoothedRotation>5__3;

		[Token(Token = "0x1700025A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0xD7CBF0", Offset = "0xD7CBF0", VA = "0xD7CBF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001296")]
			[Address(RVA = "0xD7CC58", Offset = "0xD7CC58", VA = "0xD7CC58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xD7B298", Offset = "0xD7B298", VA = "0xD7B298")]
		[DebuggerHidden]
		public <Snap>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xD7BFB4", Offset = "0xD7BFB4", VA = "0xD7BFB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xD7BFB8", Offset = "0xD7BFB8", VA = "0xD7BFB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xD7CBF8", Offset = "0xD7CBF8", VA = "0xD7CBF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77FB18", Offset = "0x77FB18")]
	public HandSnapPivot SnapPivot;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool ReturnToOrigin;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77FB50", Offset = "0x77FB50")]
	public bool Shake;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool VibrateOnShake;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77FB88", Offset = "0x77FB88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77FB88", Offset = "0x77FB88")]
	public float ShakeSensivity;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77FC0C", Offset = "0x77FC0C")]
	private Transform <SnapTransform>k__BackingField;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77FC1C", Offset = "0x77FC1C")]
	private Transform <ObjectTransform>k__BackingField;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 _originPos;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion _originRot;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform _offsetSnap;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 _shakeLastVelocity;

	[Token(Token = "0x17000023")]
	public Transform SnapTransform
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xD7B064", Offset = "0xD7B064", VA = "0xD7B064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7842E8", Offset = "0x7842E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xD7B06C", Offset = "0xD7B06C", VA = "0xD7B06C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7842F8", Offset = "0x7842F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public Transform ObjectTransform
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xD7B074", Offset = "0xD7B074", VA = "0xD7B074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784308", Offset = "0x784308")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xD7B07C", Offset = "0xD7B07C", VA = "0xD7B07C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784318", Offset = "0x784318")]
		private set
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event InteractionBeginAction OnInteractionBegin
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xD7AC8C", Offset = "0xD7AC8C", VA = "0xD7AC8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784288", Offset = "0x784288")]
		add
		{
		}
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xD7AD30", Offset = "0xD7AD30", VA = "0xD7AD30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784298", Offset = "0x784298")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event InteractionEndAction OnInteractionEnd
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xD7ADD4", Offset = "0xD7ADD4", VA = "0xD7ADD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7842A8", Offset = "0x7842A8")]
		add
		{
		}
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xD7AE78", Offset = "0xD7AE78", VA = "0xD7AE78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7842B8", Offset = "0x7842B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event ShakeAction OnShake
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xD7AF1C", Offset = "0xD7AF1C", VA = "0xD7AF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7842C8", Offset = "0x7842C8")]
		add
		{
		}
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xD7AFC0", Offset = "0xD7AFC0", VA = "0xD7AFC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7842D8", Offset = "0x7842D8")]
		remove
		{
		}
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xD7B084", Offset = "0xD7B084", VA = "0xD7B084", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xD7B228", Offset = "0xD7B228", VA = "0xD7B228")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784328", Offset = "0x784328")]
	private IEnumerator Snap()
	{
		return null;
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xD7B2C4", Offset = "0xD7B2C4", VA = "0xD7B2C4")]
	public void SetSnap([Optional] VRController controller)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xD7B0BC", Offset = "0xD7B0BC", VA = "0xD7B0BC")]
	public void Initialize([Optional] Transform t)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xD7B58C", Offset = "0xD7B58C", VA = "0xD7B58C", Slot = "6")]
	public override bool BeginInteraction(VRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xD7B8B8", Offset = "0xD7B8B8", VA = "0xD7B8B8", Slot = "7")]
	public override void EndInteraction(VRController controller)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xD7BBEC", Offset = "0xD7BBEC", VA = "0xD7BBEC")]
	public void DetectShake(VRController controller)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xD7BFA4", Offset = "0xD7BFA4", VA = "0xD7BFA4")]
	public InteractableGrab()
	{
	}
}
[Token(Token = "0x200008C")]
public class InteractableGramophone : Interactable
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77FC2C", Offset = "0x77FC2C")]
	public Transform tonearm;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77FC64", Offset = "0x77FC64")]
	public AudioSource tonearmAudioSource;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector2 xLimits;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector2 yLimits;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float fallSpeed;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77FC9C", Offset = "0x77FC9C")]
	public float bounce;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float startRecordThreshold;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77FCB4", Offset = "0x77FCB4")]
	public Transform record;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource recordAudioSource;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool continuous;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float recordSpeed;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77FCEC", Offset = "0x77FCEC")]
	public float pitchVariation;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77FD04", Offset = "0x77FD04")]
	private float m_fallVelocity;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion m_controllerOffset;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float m_currentRecordSpeed;

	[Token(Token = "0x40002C0")]
	private const float RecordAcceleration = 70f;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool m_interactionSwitch;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Quaternion m_rotationOffset;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float m_recordVolume;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool m_recordIsSpinning;

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xD7CDAC", Offset = "0xD7CDAC", VA = "0xD7CDAC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xD7CE18", Offset = "0xD7CE18", VA = "0xD7CE18", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xD7D5C0", Offset = "0xD7D5C0", VA = "0xD7D5C0", Slot = "6")]
	public override bool BeginInteraction(VRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xD7D5C4", Offset = "0xD7D5C4", VA = "0xD7D5C4", Slot = "7")]
	public override void EndInteraction(VRController controller)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xD7CE3C", Offset = "0xD7CE3C", VA = "0xD7CE3C")]
	private Vector3 MoveTonearm()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xD7D358", Offset = "0xD7D358", VA = "0xD7D358")]
	private void SpinRecord(Vector3 tonearmRotation)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xD7D690", Offset = "0xD7D690", VA = "0xD7D690")]
	private Quaternion InverseTransformRotation(Quaternion parentRotation, Quaternion worldSpaceRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xD7D758", Offset = "0xD7D758", VA = "0xD7D758")]
	private float ConvertAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xD7D7A8", Offset = "0xD7D7A8", VA = "0xD7D7A8")]
	public InteractableGramophone()
	{
	}
}
[Token(Token = "0x200008D")]
public class InteractableHinge : Interactable
{
	[Token(Token = "0x2000206")]
	public enum RotationAxis
	{
		[Token(Token = "0x4000A63")]
		XAxis,
		[Token(Token = "0x4000A64")]
		YAxis,
		[Token(Token = "0x4000A65")]
		ZAxis
	}

	[Token(Token = "0x2000207")]
	public delegate void CloseAction();

	[Token(Token = "0x2000208")]
	public delegate void OpenAction();

	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D7B4", Offset = "0x77D7B4")]
	private sealed class <Rotate>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableHinge <>4__this;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <a>5__2;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <b>5__3;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <axis>5__4;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <startVector>5__5;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 <controllerPos>5__6;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <startAngle>5__7;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 <startRotation>5__8;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WaitForEndOfFrame <waitForEndOfFrame>5__9;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool <positiveAngle>5__10;

		[Token(Token = "0x1700025C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0xD7EF40", Offset = "0xD7EF40", VA = "0xD7EF40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0xD7EFA8", Offset = "0xD7EFA8", VA = "0xD7EFA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xD7E288", Offset = "0xD7E288", VA = "0xD7E288")]
		[DebuggerHidden]
		public <Rotate>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xD7E730", Offset = "0xD7E730", VA = "0xD7E730", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xD7E734", Offset = "0xD7E734", VA = "0xD7E734", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xD7EF48", Offset = "0xD7EF48", VA = "0xD7EF48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77FD3C", Offset = "0x77FD3C")]
	public Transform Pivot;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RotationAxis LocalRotationAxis;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool Momentum;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77FD74", Offset = "0x77FD74")]
	public float Drag;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool LimitedRotation;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77FD8C", Offset = "0x77FD8C")]
	public float MinRotation;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77FDAC", Offset = "0x77FDAC")]
	public float MaxRotation;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77FDCC", Offset = "0x77FDCC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77FDCC", Offset = "0x77FDCC")]
	public float closeRotation;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77FE2C", Offset = "0x77FE2C")]
	public float closedThreshold;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77FE64", Offset = "0x77FE64")]
	public float openedThreshold;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UnityEvent closeActions;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent openActions;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool m_wasClosed;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool m_wasOpened;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float m_angleVelocity;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine _rotateRoutine;

	[Token(Token = "0x14000009")]
	public event CloseAction OnClose
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xD7D890", Offset = "0xD7D890", VA = "0xD7D890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78438C", Offset = "0x78438C")]
		add
		{
		}
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xD7D934", Offset = "0xD7D934", VA = "0xD7D934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78439C", Offset = "0x78439C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event OpenAction OnOpen
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xD7D9D8", Offset = "0xD7D9D8", VA = "0xD7D9D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7843AC", Offset = "0x7843AC")]
		add
		{
		}
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xD7DA7C", Offset = "0xD7DA7C", VA = "0xD7DA7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7843BC", Offset = "0x7843BC")]
		remove
		{
		}
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xD7DB20", Offset = "0xD7DB20", VA = "0xD7DB20", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xD7DE3C", Offset = "0xD7DE3C", VA = "0xD7DE3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xD7DFF8", Offset = "0xD7DFF8", VA = "0xD7DFF8", Slot = "6")]
	public override bool BeginInteraction(VRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xD7E0C8", Offset = "0xD7E0C8", VA = "0xD7E0C8", Slot = "7")]
	public override void EndInteraction(VRController controller)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xD7E0CC", Offset = "0xD7E0CC", VA = "0xD7E0CC")]
	private void GetProjectedVectorsOnPlane(ref Vector3 a, ref Vector3 b, ref Vector3 axis, Vector3 startVector, Vector3 controllerPos)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xD7E058", Offset = "0xD7E058", VA = "0xD7E058")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7843CC", Offset = "0x7843CC")]
	private IEnumerator Rotate()
	{
		return null;
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xD7DE44", Offset = "0xD7DE44", VA = "0xD7DE44")]
	private void HandleOpenClose(bool onlyCheckOpen = false)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xD7DBC4", Offset = "0xD7DBC4", VA = "0xD7DBC4")]
	private void ClampRotation()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xD7E6CC", Offset = "0xD7E6CC", VA = "0xD7E6CC")]
	private void Reset()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xD7E704", Offset = "0xD7E704", VA = "0xD7E704")]
	public InteractableHinge()
	{
	}
}
[Token(Token = "0x200008E")]
public class InteractableInstantiateGrab : InteractableGrab
{
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D7C4", Offset = "0x77D7C4")]
	private sealed class <DelayEnable>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform prefab;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform snap;

		[Token(Token = "0x1700025E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0xD7F644", Offset = "0xD7F644", VA = "0xD7F644", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0xD7F6AC", Offset = "0xD7F6AC", VA = "0xD7F6AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xD7F34C", Offset = "0xD7F34C", VA = "0xD7F34C")]
		[DebuggerHidden]
		public <DelayEnable>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xD7F524", Offset = "0xD7F524", VA = "0xD7F524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xD7F528", Offset = "0xD7F528", VA = "0xD7F528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xD7F64C", Offset = "0xD7F64C", VA = "0xD7F64C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D7D4", Offset = "0x77D7D4")]
	private sealed class <DelayCollider>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider col;

		[Token(Token = "0x17000260")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012AE")]
			[Address(RVA = "0xD7F4B4", Offset = "0xD7F4B4", VA = "0xD7F4B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B0")]
			[Address(RVA = "0xD7F51C", Offset = "0xD7F51C", VA = "0xD7F51C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xD7F378", Offset = "0xD7F378", VA = "0xD7F378")]
		[DebuggerHidden]
		public <DelayCollider>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xD7F3B8", Offset = "0xD7F3B8", VA = "0xD7F3B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xD7F3BC", Offset = "0xD7F3BC", VA = "0xD7F3BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xD7F4BC", Offset = "0xD7F4BC", VA = "0xD7F4BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77FEBC", Offset = "0x77FEBC")]
	public Transform Prefab;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private InteractableGrab _interactable;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xD7F040", Offset = "0xD7F040", VA = "0xD7F040", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xD7F0A0", Offset = "0xD7F0A0", VA = "0xD7F0A0", Slot = "6")]
	public override bool BeginInteraction(VRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xD7F260", Offset = "0xD7F260", VA = "0xD7F260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784430", Offset = "0x784430")]
	private IEnumerator DelayEnable(Transform prefab, Transform snap)
	{
		return null;
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xD7F2DC", Offset = "0xD7F2DC", VA = "0xD7F2DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784494", Offset = "0x784494")]
	private IEnumerator DelayCollider(Collider col)
	{
		return null;
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xD7F3A4", Offset = "0xD7F3A4", VA = "0xD7F3A4", Slot = "7")]
	public override void EndInteraction(VRController controller)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xD7F3A8", Offset = "0xD7F3A8", VA = "0xD7F3A8")]
	public InteractableInstantiateGrab()
	{
	}
}
[Token(Token = "0x200008F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C4E8", Offset = "0x77C4E8")]
public class InteractableKill : MonoBehaviour
{
	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D7E4", Offset = "0x77D7E4")]
	private sealed class <Kill>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider other;

		[Token(Token = "0x17000262")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0xD7F970", Offset = "0xD7F970", VA = "0xD7F970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xD7F9D8", Offset = "0xD7F9D8", VA = "0xD7F9D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xD7F7F8", Offset = "0xD7F7F8", VA = "0xD7F7F8")]
		[DebuggerHidden]
		public <Kill>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xD7F834", Offset = "0xD7F834", VA = "0xD7F834", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xD7F838", Offset = "0xD7F838", VA = "0xD7F838", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xD7F978", Offset = "0xD7F978", VA = "0xD7F978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x77FEF4", Offset = "0x77FEF4")]
	public bool DestroyWhenOutside;

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xD7F6B4", Offset = "0xD7F6B4", VA = "0xD7F6B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xD7F718", Offset = "0xD7F718", VA = "0xD7F718")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xD7F7C0", Offset = "0xD7F7C0", VA = "0xD7F7C0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xD7F750", Offset = "0xD7F750", VA = "0xD7F750")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7844F8", Offset = "0x7844F8")]
	private IEnumerator Kill(Collider other)
	{
		return null;
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xD7F824", Offset = "0xD7F824", VA = "0xD7F824")]
	public InteractableKill()
	{
	}
}
[Token(Token = "0x2000090")]
public class InteractablePull : Interactable
{
	[Token(Token = "0x200020D")]
	public delegate void InteractionBeginAction();

	[Token(Token = "0x200020E")]
	public delegate void InteractionEndAction();

	[Token(Token = "0x200020F")]
	public delegate void HitStartAction(float force);

	[Token(Token = "0x2000210")]
	public delegate void HitEndAction(float force);

	[Token(Token = "0x2000211")]
	public delegate void SlideBeginAction();

	[Token(Token = "0x2000212")]
	public delegate void SlideEndAction();

	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D7F4", Offset = "0x77D7F4")]
	private sealed class <Pull>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractablePull <>4__this;

		[Token(Token = "0x17000264")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xD82C08", Offset = "0xD82C08", VA = "0xD82C08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0xD82C70", Offset = "0xD82C70", VA = "0xD82C70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xD81070", Offset = "0xD81070", VA = "0xD81070")]
		[DebuggerHidden]
		public <Pull>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xD8296C", Offset = "0xD8296C", VA = "0xD8296C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xD82970", Offset = "0xD82970", VA = "0xD82970", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xD82C10", Offset = "0xD82C10", VA = "0xD82C10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77FF2C", Offset = "0x77FF2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77FF2C", Offset = "0x77FF2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x77FF2C", Offset = "0x77FF2C")]
	public float PercentDraggedOnStart;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool ResetWhenInteractionDisabled;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77FFA4", Offset = "0x77FFA4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x77FFA4", Offset = "0x77FFA4")]
	public float dampening;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x77FFF8", Offset = "0x77FFF8")]
	public bool ShowHandle;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x780030", Offset = "0x780030")]
	public InteractablePullSound interactablePullSound;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x780068", Offset = "0x780068")]
	private float <percentDragged>k__BackingField;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x780078", Offset = "0x780078")]
	private bool <isSliding>k__BackingField;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x780088", Offset = "0x780088")]
	private float <dragForce>k__BackingField;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool m_hasHitStartBoundary;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool m_hasHitEndBoundary;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	private bool m_slideSoundActive;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 m_localStartPoint;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 m_localEndPoint;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 m_localControllerPosition;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 m_controllerOffset;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 m_lastDragPosition;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Vector3 _endPoint;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 m_velocity;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool hasDetected;

	[Token(Token = "0x17000025")]
	public Vector3 EndPoint
	{
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xD7F9E0", Offset = "0xD7F9E0", VA = "0xD7F9E0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xD7F9F0", Offset = "0xD7F9F0", VA = "0xD7F9F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public Vector3 StartPointWorld
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xD7FA00", Offset = "0xD7FA00", VA = "0xD7FA00")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000027")]
	public Vector3 EndPointWorld
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xD7FACC", Offset = "0xD7FACC", VA = "0xD7FACC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000028")]
	public float percentDragged
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xD7FB98", Offset = "0xD7FB98", VA = "0xD7FB98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78455C", Offset = "0x78455C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xD7FBA0", Offset = "0xD7FBA0", VA = "0xD7FBA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78456C", Offset = "0x78456C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public bool isSliding
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xD7FBA8", Offset = "0xD7FBA8", VA = "0xD7FBA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78457C", Offset = "0x78457C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0xD7FBB0", Offset = "0xD7FBB0", VA = "0xD7FBB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78458C", Offset = "0x78458C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public float dragForce
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xD7FBBC", Offset = "0xD7FBBC", VA = "0xD7FBBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78459C", Offset = "0x78459C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xD7FBC4", Offset = "0xD7FBC4", VA = "0xD7FBC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7845AC", Offset = "0x7845AC")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event InteractionBeginAction OnInteractionBegin
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xD7FBCC", Offset = "0xD7FBCC", VA = "0xD7FBCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7845BC", Offset = "0x7845BC")]
		add
		{
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xD7FC70", Offset = "0xD7FC70", VA = "0xD7FC70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7845CC", Offset = "0x7845CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event InteractionEndAction OnInteractionEnd
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xD7FD14", Offset = "0xD7FD14", VA = "0xD7FD14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7845DC", Offset = "0x7845DC")]
		add
		{
		}
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xD7FDB8", Offset = "0xD7FDB8", VA = "0xD7FDB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7845EC", Offset = "0x7845EC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event HitStartAction OnHitStartBoundary
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xD7FE5C", Offset = "0xD7FE5C", VA = "0xD7FE5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7845FC", Offset = "0x7845FC")]
		add
		{
		}
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xD7FF00", Offset = "0xD7FF00", VA = "0xD7FF00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78460C", Offset = "0x78460C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event HitEndAction OnHitEndBoundary
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0xD7FFA4", Offset = "0xD7FFA4", VA = "0xD7FFA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78461C", Offset = "0x78461C")]
		add
		{
		}
		[Token(Token = "0x6000301")]
		[Address(RVA = "0xD80048", Offset = "0xD80048", VA = "0xD80048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78462C", Offset = "0x78462C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event SlideBeginAction OnSlideBegin
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0xD800EC", Offset = "0xD800EC", VA = "0xD800EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78463C", Offset = "0x78463C")]
		add
		{
		}
		[Token(Token = "0x6000303")]
		[Address(RVA = "0xD80190", Offset = "0xD80190", VA = "0xD80190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78464C", Offset = "0x78464C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event SlideEndAction OnSlideEnd
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0xD80234", Offset = "0xD80234", VA = "0xD80234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78465C", Offset = "0x78465C")]
		add
		{
		}
		[Token(Token = "0x6000305")]
		[Address(RVA = "0xD802D8", Offset = "0xD802D8", VA = "0xD802D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78466C", Offset = "0x78466C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xD8037C", Offset = "0xD8037C", VA = "0xD8037C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xD80380", Offset = "0xD80380", VA = "0xD80380")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xD807C4", Offset = "0xD807C4", VA = "0xD807C4", Slot = "6")]
	public override bool BeginInteraction(VRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xD80A94", Offset = "0xD80A94", VA = "0xD80A94", Slot = "7")]
	public override void EndInteraction(VRController controller)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xD80F8C", Offset = "0xD80F8C", VA = "0xD80F8C", Slot = "10")]
	public override void SetCanInteract(bool value)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xD80818", Offset = "0xD80818", VA = "0xD80818")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x78467C", Offset = "0x78467C")]
	private IEnumerator Pull()
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xD8109C", Offset = "0xD8109C", VA = "0xD8109C", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xD81B88", Offset = "0xD81B88", VA = "0xD81B88")]
	private void DetectDrag()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xD80670", Offset = "0xD80670", VA = "0xD80670")]
	public void UpdatePercentDragged()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xD81840", Offset = "0xD81840", VA = "0xD81840")]
	private bool HitStart()
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xD8193C", Offset = "0xD8193C", VA = "0xD8193C")]
	private bool HitEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xD81A38", Offset = "0xD81A38", VA = "0xD81A38")]
	private void Slide(Vector3 projection)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xD82504", Offset = "0xD82504", VA = "0xD82504")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xD8189C", Offset = "0xD8189C", VA = "0xD8189C")]
	public void CloseSound()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xD81998", Offset = "0xD81998", VA = "0xD81998")]
	public void OpenSound()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xD81C3C", Offset = "0xD81C3C", VA = "0xD81C3C")]
	public void PullSound()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xD81CDC", Offset = "0xD81CDC", VA = "0xD81CDC")]
	public void ChoirSound()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xD817A8", Offset = "0xD817A8", VA = "0xD817A8")]
	public void PlayPullSound()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xD81708", Offset = "0xD81708", VA = "0xD81708")]
	public void StopPullSound()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xD828D0", Offset = "0xD828D0", VA = "0xD828D0")]
	public InteractablePull()
	{
	}
}
[Token(Token = "0x2000091")]
public class InteractablePullSound : MonoBehaviour
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float volumeMultiplier;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve volumeResponse;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x780108", Offset = "0x780108")]
	public AudioSource closeSource;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource openSource;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource slideSource;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource choirSource;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] choirClips;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_slideSwitch;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xD82EE8", Offset = "0xD82EE8", VA = "0xD82EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xD82EEC", Offset = "0xD82EEC", VA = "0xD82EEC")]
	public void PlayChoirSound()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xD81DC0", Offset = "0xD81DC0", VA = "0xD81DC0")]
	public void SwitchChoirSound()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xD827B0", Offset = "0xD827B0", VA = "0xD827B0")]
	public void UpdateChoirSound(float velocity)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xD8257C", Offset = "0xD8257C", VA = "0xD8257C")]
	public void PlayCloseSound(float velocity)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xD82634", Offset = "0xD82634", VA = "0xD82634")]
	public void PlayOpenSound(float velocity)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xD826EC", Offset = "0xD826EC", VA = "0xD826EC")]
	public void UpdateSlideSound(float velocity)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xD82874", Offset = "0xD82874", VA = "0xD82874")]
	public void PlaySlideSound()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xD828B4", Offset = "0xD828B4", VA = "0xD828B4")]
	public void StopSlideSound()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xD82F50", Offset = "0xD82F50", VA = "0xD82F50")]
	public InteractablePullSound()
	{
	}
}
[Token(Token = "0x2000092")]
public class MatchstickBehaviour : Flick
{
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D804", Offset = "0x77D804")]
	private sealed class <Burn>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MatchstickBehaviour <>4__this;

		[Token(Token = "0x17000266")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0xD879C4", Offset = "0xD879C4", VA = "0xD879C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0xD87A2C", Offset = "0xD87A2C", VA = "0xD87A2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xD87714", Offset = "0xD87714", VA = "0xD87714")]
		[DebuggerHidden]
		public <Burn>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xD87908", Offset = "0xD87908", VA = "0xD87908", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xD8790C", Offset = "0xD8790C", VA = "0xD8790C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xD879CC", Offset = "0xD879CC", VA = "0xD879CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x780140", Offset = "0x780140")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x780140", Offset = "0x780140")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x780140", Offset = "0x780140")]
	public float BurnTime;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7801A8", Offset = "0x7801A8")]
	public Animator FlameAnimator;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string StartTrigger;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string StopTrigger;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7801B8", Offset = "0x7801B8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7801B8", Offset = "0x7801B8")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x7801B8", Offset = "0x7801B8")]
	public PlayableDirector TimelineOnIgnite;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayableDirector TimelineOnExtinguish;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x780228", Offset = "0x780228")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x780228", Offset = "0x780228")]
	public UnityEvent OnIgnite;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x780274", Offset = "0x780274")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x780274", Offset = "0x780274")]
	public UnityEvent OnExtinguish;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MatchboxSynchronizer MatchboxSynchronizer;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7802C0", Offset = "0x7802C0")]
	private bool <IsBurning>k__BackingField;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator _animator;

	[Token(Token = "0x1700002B")]
	public bool IsBurning
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0xD87404", Offset = "0xD87404", VA = "0xD87404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7846E0", Offset = "0x7846E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xD8740C", Offset = "0xD8740C", VA = "0xD8740C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7846F0", Offset = "0x7846F0")]
		set
		{
		}
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xD87418", Offset = "0xD87418", VA = "0xD87418")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xD87470", Offset = "0xD87470", VA = "0xD87470")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xD874D8", Offset = "0xD874D8", VA = "0xD874D8", Slot = "4")]
	public override bool OnFlick()
	{
		return default(bool);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xD87514", Offset = "0xD87514", VA = "0xD87514")]
	private void Ignite()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xD876A4", Offset = "0xD876A4", VA = "0xD876A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784700", Offset = "0x784700")]
	private IEnumerator Burn()
	{
		return null;
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xD87740", Offset = "0xD87740", VA = "0xD87740")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x784764", Offset = "0x784764")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xD87748", Offset = "0xD87748", VA = "0xD87748")]
	private void SelfExtinguish(object sender)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xD87898", Offset = "0xD87898", VA = "0xD87898")]
	public MatchstickBehaviour()
	{
	}
}
[Token(Token = "0x2000093")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C54C", Offset = "0x77C54C")]
public class TriggerOnInteraction : MonoBehaviour
{
	[Token(Token = "0x2000215")]
	public enum TriggerMode
	{
		[Token(Token = "0x4000A83")]
		OnInteractionBegin,
		[Token(Token = "0x4000A84")]
		WhileInteracting,
		[Token(Token = "0x4000A85")]
		OnInteractionEnd
	}

	[Token(Token = "0x2000216")]
	public enum PlayMode
	{
		[Token(Token = "0x4000A87")]
		Play,
		[Token(Token = "0x4000A88")]
		Pause,
		[Token(Token = "0x4000A89")]
		Stop
	}

	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D814", Offset = "0x77D814")]
	private sealed class <TriggerObjects>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerOnInteraction <>4__this;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool temporary;

		[Token(Token = "0x17000268")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0xCD5F38", Offset = "0xCD5F38", VA = "0xCD5F38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0xCD5FA0", Offset = "0xCD5FA0", VA = "0xCD5FA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xCD59C8", Offset = "0xCD59C8", VA = "0xCD59C8")]
		[DebuggerHidden]
		public <TriggerObjects>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xCD5A14", Offset = "0xCD5A14", VA = "0xCD5A14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xCD5A18", Offset = "0xCD5A18", VA = "0xCD5A18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xCD5F40", Offset = "0xCD5F40", VA = "0xCD5F40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TriggerMode Behaviour;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Delay;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7802D0", Offset = "0x7802D0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7802D0", Offset = "0x7802D0")]
	public bool SetActive;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] GameObjects;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x78031C", Offset = "0x78031C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x78031C", Offset = "0x78031C")]
	public PlayMode SetTimelineTo;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780368", Offset = "0x780368")]
	public PlayMode RevertTimelineTo;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayableDirector[] Timelines;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7803A0", Offset = "0x7803A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7803A0", Offset = "0x7803A0")]
	public bool CanInteract;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Interactable[] Interactables;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7803EC", Offset = "0x7803EC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7803EC", Offset = "0x7803EC")]
	public PlayMode SetFrameSequenceTo;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780438", Offset = "0x780438")]
	public PlayMode RevertFrameSequenceTo;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FrameSequencePlayer[] FrameSequencePlayers;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x780470", Offset = "0x780470")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x780470", Offset = "0x780470")]
	public bool BehaviourState;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Behaviour[] Behaviours;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Interactable _interactable;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _wasTriggered;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xCD586C", Offset = "0xCD586C", VA = "0xCD586C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xCD58C4", Offset = "0xCD58C4", VA = "0xCD58C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xCD5944", Offset = "0xCD5944", VA = "0xCD5944")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x78479C", Offset = "0x78479C")]
	private IEnumerator TriggerObjects(bool temporary = false)
	{
		return null;
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xCD59F4", Offset = "0xCD59F4", VA = "0xCD59F4")]
	public TriggerOnInteraction()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x77C5B0", Offset = "0x77C5B0")]
public class HandPose : ScriptableObject
{
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string TriggerName;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xD73178", Offset = "0xD73178", VA = "0xD73178")]
	public HandPose()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x77C604", Offset = "0x77C604")]
public class MaterialSet : ScriptableObject
{
	[Token(Token = "0x2000218")]
	public class ShaderProperty
	{
		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nameID;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ShaderDatabaseAsset.ShaderPropertyType propertyType;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float floatValue;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 vectorValue;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color colorValue;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture textureValue;

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xF3B488", Offset = "0xF3B488", VA = "0xF3B488")]
		public ShaderProperty(string name)
		{
		}
	}

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Material, ShaderProperty[]> m_materialProperties;

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xD88EFC", Offset = "0xD88EFC", VA = "0xD88EFC")]
	public void SaveMaterialProperties()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xD892B8", Offset = "0xD892B8", VA = "0xD892B8")]
	public void RevertMaterialProperties()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xD894A4", Offset = "0xD894A4", VA = "0xD894A4")]
	public MaterialSet()
	{
	}
}
[Token(Token = "0x2000096")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x77C658", Offset = "0x77C658")]
public class ShaderDatabaseAsset : ScriptableObject
{
	[Token(Token = "0x2000219")]
	public enum ShaderPropertyType
	{
		[Token(Token = "0x4000A95")]
		Color,
		[Token(Token = "0x4000A96")]
		Vector,
		[Token(Token = "0x4000A97")]
		Float,
		[Token(Token = "0x4000A98")]
		Range,
		[Token(Token = "0x4000A99")]
		TexEnv,
		[Token(Token = "0x4000A9A")]
		Undefined
	}

	[Serializable]
	[Token(Token = "0x200021A")]
	public class ShaderProperties
	{
		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] names;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] nameIDs;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShaderPropertyType[] propertyTypes;

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xCC4C04", Offset = "0xCC4C04", VA = "0xCC4C04")]
		public ShaderProperties(int count)
		{
		}
	}

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader[] shaders;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShaderProperties[] properties;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xCC4BFC", Offset = "0xCC4BFC", VA = "0xCC4BFC")]
	public ShaderDatabaseAsset()
	{
	}
}
[Token(Token = "0x2000097")]
public class DisableOn : MonoBehaviour
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onlyOnce;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DisabledOnAwake;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool DisabledOnStart;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool m_triggered;

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xD6D4A4", Offset = "0xD6D4A4", VA = "0xD6D4A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xD6D4F4", Offset = "0xD6D4F4", VA = "0xD6D4F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xD6D544", Offset = "0xD6D544", VA = "0xD6D544")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xD6D5B4", Offset = "0xD6D5B4", VA = "0xD6D5B4")]
	public DisableOn()
	{
	}
}
[Token(Token = "0x2000098")]
public class EnableMeshRendererOnVideoStart : MonoBehaviour
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer _mesh;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer _videoPlayer;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xD6E1E4", Offset = "0xD6E1E4", VA = "0xD6E1E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xD6E2F8", Offset = "0xD6E2F8", VA = "0xD6E2F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xD6E410", Offset = "0xD6E410", VA = "0xD6E410")]
	private void EnableMesh(VideoPlayer player)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xD6E4A8", Offset = "0xD6E4A8", VA = "0xD6E4A8")]
	public EnableMeshRendererOnVideoStart()
	{
	}
}
[Token(Token = "0x2000099")]
public class GameObjectActivationEvent : MonoBehaviour
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent _onStartEvent;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent _onEnableEvent;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent _onDisableEvent;

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xD71698", Offset = "0xD71698", VA = "0xD71698")]
	private void Start()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xD716AC", Offset = "0xD716AC", VA = "0xD716AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xD716C0", Offset = "0xD716C0", VA = "0xD716C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xD716D4", Offset = "0xD716D4", VA = "0xD716D4")]
	public GameObjectActivationEvent()
	{
	}
}
[Token(Token = "0x200009A")]
public class JournalFireBehaviour : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D824", Offset = "0x77D824")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<float, float> <>9__2_0;

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xD8331C", Offset = "0xD8331C", VA = "0xD8331C")]
		public <>c()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xD83324", Offset = "0xD83324", VA = "0xD83324")]
		internal float <OnEnable>b__2_0(float x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D834", Offset = "0x77D834")]
	private sealed class <EnableFlame>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject flame;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JournalFireBehaviour <>4__this;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int index;

		[Token(Token = "0x1700026A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0xD8342C", Offset = "0xD8342C", VA = "0xD8342C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0xD83494", Offset = "0xD83494", VA = "0xD83494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xD83214", Offset = "0xD83214", VA = "0xD83214")]
		[DebuggerHidden]
		public <EnableFlame>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xD83328", Offset = "0xD83328", VA = "0xD83328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xD8332C", Offset = "0xD8332C", VA = "0xD8332C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xD83434", Offset = "0xD83434", VA = "0xD83434", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x7804BC", Offset = "0x7804BC")]
	public float SpreadSec;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<float> _startTimes;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xD82F98", Offset = "0xD82F98", VA = "0xD82F98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xD83190", Offset = "0xD83190", VA = "0xD83190")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784800", Offset = "0x784800")]
	private IEnumerator EnableFlame(GameObject flame, int index)
	{
		return null;
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xD83240", Offset = "0xD83240", VA = "0xD83240")]
	public JournalFireBehaviour()
	{
	}
}
[Token(Token = "0x200009B")]
public class JournalStencilClient : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x7804F4", Offset = "0x7804F4")]
	public Shader StencilShader;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] Renderers;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Renderer> _renderers;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Material[]> _materialArrays;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material[]> _stencilMaterialArrays;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _zoneCount;

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xD8349C", Offset = "0xD8349C", VA = "0xD8349C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xD8382C", Offset = "0xD8382C", VA = "0xD8382C")]
	public void AddStencil()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xD83900", Offset = "0xD83900", VA = "0xD83900")]
	public void RemoveStencil()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xD839DC", Offset = "0xD839DC", VA = "0xD839DC")]
	public JournalStencilClient()
	{
	}
}
[Token(Token = "0x200009C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C6AC", Offset = "0x77C6AC")]
public class JournalStencilZone : MonoBehaviour
{
	[Token(Token = "0x600034A")]
	[Address(RVA = "0xD83A94", Offset = "0xD83A94", VA = "0xD83A94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xD83AF8", Offset = "0xD83AF8", VA = "0xD83AF8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xD83BA4", Offset = "0xD83BA4", VA = "0xD83BA4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xD83C50", Offset = "0xD83C50", VA = "0xD83C50")]
	public JournalStencilZone()
	{
	}
}
[Token(Token = "0x200009D")]
public class MoveInFrontOfPlayer : MonoBehaviour
{
	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x78052C", Offset = "0x78052C")]
	public float Distance;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xF3BE64", Offset = "0xF3BE64", VA = "0xF3BE64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xF3C07C", Offset = "0xF3C07C", VA = "0xF3C07C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xF3BE68", Offset = "0xF3BE68", VA = "0xF3BE68")]
	private void Reposition()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xF3C080", Offset = "0xF3C080", VA = "0xF3C080")]
	public MoveInFrontOfPlayer()
	{
	}
}
[Token(Token = "0x200009E")]
public class ObjectFollower : MonoBehaviour
{
	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ObjectToFollow;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool KeepOffset;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _offset;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xF4C940", Offset = "0xF4C940", VA = "0xF4C940")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xF4CA7C", Offset = "0xF4CA7C", VA = "0xF4CA7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xF4CA80", Offset = "0xF4CA80", VA = "0xF4CA80")]
	private void Transpose()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xF4CCE8", Offset = "0xF4CCE8", VA = "0xF4CCE8")]
	public ObjectFollower()
	{
	}
}
[Token(Token = "0x200009F")]
public class PaperPhysics : MonoBehaviour
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x780548", Offset = "0x780548")]
	public float Gravity;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 MaxVelocity;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float UprightTorque;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float DriftForce;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Interactable _interactable;

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xF4F44C", Offset = "0xF4F44C", VA = "0xF4F44C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xF4F4BC", Offset = "0xF4F4BC", VA = "0xF4F4BC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xF4F784", Offset = "0xF4F784", VA = "0xF4F784")]
	private Vector3 ClampVelocity(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xF4F8E0", Offset = "0xF4F8E0", VA = "0xF4F8E0")]
	public PaperPhysics()
	{
	}
}
[Token(Token = "0x20000A0")]
public class PlayTimelineDelayed : MonoBehaviour
{
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D844", Offset = "0x77D844")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayTimelineDelayed <>4__this;

		[Token(Token = "0x1700026C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0xCC0C3C", Offset = "0xCC0C3C", VA = "0xCC0C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0xCC0CA4", Offset = "0xCC0CA4", VA = "0xCC0CA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xCC0B3C", Offset = "0xCC0B3C", VA = "0xCC0B3C")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xCC0B78", Offset = "0xCC0B78", VA = "0xCC0B78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xCC0B7C", Offset = "0xCC0B7C", VA = "0xCC0B7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xCC0C44", Offset = "0xCC0C44", VA = "0xCC0C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector Director;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Delay;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xCC0ACC", Offset = "0xCC0ACC", VA = "0xCC0ACC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784864", Offset = "0x784864")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xCC0B68", Offset = "0xCC0B68", VA = "0xCC0B68")]
	public PlayTimelineDelayed()
	{
	}
}
[Token(Token = "0x20000A1")]
public class ScreenshotUtility : MonoBehaviour
{
	[Token(Token = "0x200021E")]
	public enum Format
	{
		[Token(Token = "0x4000AA9")]
		PNG,
		[Token(Token = "0x4000AAA")]
		JPEG,
		[Token(Token = "0x4000AAB")]
		EXR
	}

	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D854", Offset = "0x77D854")]
	private sealed class <Screenshot>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenshotUtility <>4__this;

		[Token(Token = "0x1700026E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0xCC3E70", Offset = "0xCC3E70", VA = "0xCC3E70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0xCC3ED8", Offset = "0xCC3ED8", VA = "0xCC3ED8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xCC3810", Offset = "0xCC3810", VA = "0xCC3810")]
		[DebuggerHidden]
		public <Screenshot>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xCC3A3C", Offset = "0xCC3A3C", VA = "0xCC3A3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xCC3A40", Offset = "0xCC3A40", VA = "0xCC3A40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xCC3E78", Offset = "0xCC3E78", VA = "0xCC3E78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x780580", Offset = "0x780580")]
	public KeyCode ScreenshotKey;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode PauseKey;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7805B8", Offset = "0x7805B8")]
	public Camera OptionalCamera;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7805F0", Offset = "0x7805F0")]
	public int Width;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int Height;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x780628", Offset = "0x780628")]
	public string Filename;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string ScreenshotFolder;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Format ImageFormat;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool TransparentBackground;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _prePauseTimeScale;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xCC3710", Offset = "0xCC3710", VA = "0xCC3710")]
	private void Update()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xCC37A0", Offset = "0xCC37A0", VA = "0xCC37A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7848C8", Offset = "0x7848C8")]
	private IEnumerator Screenshot()
	{
		return null;
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xCC383C", Offset = "0xCC383C", VA = "0xCC383C")]
	private string GetFullPath(string ext)
	{
		return null;
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xCC39C4", Offset = "0xCC39C4", VA = "0xCC39C4")]
	public ScreenshotUtility()
	{
	}
}
[Token(Token = "0x20000A2")]
public class ShaderController : MonoBehaviour
{
	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x780660", Offset = "0x780660")]
	public bool active;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShaderDatabaseAsset database;

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xCC45E8", Offset = "0xCC45E8", VA = "0xCC45E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xCC46C0", Offset = "0xCC46C0", VA = "0xCC46C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xCC4734", Offset = "0xCC4734", VA = "0xCC4734")]
	private void FrameTick()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xCC4840", Offset = "0xCC4840", VA = "0xCC4840")]
	public ShaderController()
	{
	}
}
[Token(Token = "0x20000A3")]
public static class ShaderDatabase
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ShaderDatabaseAsset database;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xCC4850", Offset = "0xCC4850", VA = "0xCC4850")]
	public static int GetPropertyCount(Shader shader)
	{
		return default(int);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xCC497C", Offset = "0xCC497C", VA = "0xCC497C")]
	public static string GetPropertyName(Shader shader, int index)
	{
		return null;
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xCC4ABC", Offset = "0xCC4ABC", VA = "0xCC4ABC")]
	public static ShaderDatabaseAsset.ShaderPropertyType GetPropertyType(Shader shader, int index)
	{
		return default(ShaderDatabaseAsset.ShaderPropertyType);
	}
}
[Token(Token = "0x20000A4")]
public class SpriteRendererShadows : MonoBehaviour
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool receiveShadows;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xCC5FB4", Offset = "0xCC5FB4", VA = "0xCC5FB4")]
	public SpriteRendererShadows()
	{
	}
}
[Token(Token = "0x20000A5")]
public class VRCameraRig : MonoBehaviour
{
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D864", Offset = "0x77D864")]
	private sealed class <EstimateHeight>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform <cam>5__2;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <total>5__3;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <j>5__4;

		[Token(Token = "0x17000270")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x14C9EDC", Offset = "0x14C9EDC", VA = "0x14C9EDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0x14C9F44", Offset = "0x14C9F44", VA = "0x14C9F44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x14C99D4", Offset = "0x14C99D4", VA = "0x14C99D4")]
		[DebuggerHidden]
		public <EstimateHeight>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x14C9AEC", Offset = "0x14C9AEC", VA = "0x14C9AEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x14C9AF0", Offset = "0x14C9AF0", VA = "0x14C9AF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x14C9EE4", Offset = "0x14C9EE4", VA = "0x14C9EE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x780698", Offset = "0x780698")]
	public Camera headCamera;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7806D0", Offset = "0x7806D0")]
	[SerializeField]
	private VRController leftController;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VRController rightController;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x78072C", Offset = "0x78072C")]
	public TrackingSpaceType spaceType;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool enable;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool drawSolid;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x780764", Offset = "0x780764")]
	public int width;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x78077C", Offset = "0x78077C")]
	public int depth;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x780794", Offset = "0x780794")]
	private static float <playerHeight>k__BackingField;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine m_heightCoroutine;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VRCameraRig instance;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<Scene, GameObject> m_sceneCameras;

	[Token(Token = "0x1700002C")]
	public static float playerHeight
	{
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x14C820C", Offset = "0x14C820C", VA = "0x14C820C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78492C", Offset = "0x78492C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000369")]
		[Address(RVA = "0x14C8274", Offset = "0x14C8274", VA = "0x14C8274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78493C", Offset = "0x78493C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public static VRCameraRig rig
	{
		[Token(Token = "0x600036A")]
		[Address(RVA = "0x14C82E8", Offset = "0x14C82E8", VA = "0x14C82E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002E")]
	public VRController LeftController
	{
		[Token(Token = "0x600036B")]
		[Address(RVA = "0x14C8350", Offset = "0x14C8350", VA = "0x14C8350")]
		get
		{
			return null;
		}
		[Token(Token = "0x600036C")]
		[Address(RVA = "0x14C8358", Offset = "0x14C8358", VA = "0x14C8358")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public VRController RightController
	{
		[Token(Token = "0x600036D")]
		[Address(RVA = "0x14C8360", Offset = "0x14C8360", VA = "0x14C8360")]
		get
		{
			return null;
		}
		[Token(Token = "0x600036E")]
		[Address(RVA = "0x14C8368", Offset = "0x14C8368", VA = "0x14C8368")]
		set
		{
		}
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x14C8370", Offset = "0x14C8370", VA = "0x14C8370")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x14C8810", Offset = "0x14C8810", VA = "0x14C8810")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x14C89AC", Offset = "0x14C89AC", VA = "0x14C89AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x14C8D90", Offset = "0x14C8D90", VA = "0x14C8D90")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x14C9010", Offset = "0x14C9010", VA = "0x14C9010")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x78494C", Offset = "0x78494C")]
	public void EnableInteraction()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x14C9270", Offset = "0x14C9270", VA = "0x14C9270")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x784984", Offset = "0x784984")]
	public void DisableInteraction()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x14C94CC", Offset = "0x14C94CC", VA = "0x14C94CC")]
	public static void EnableSceneCamera(Scene scene)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x14C9618", Offset = "0x14C9618", VA = "0x14C9618")]
	public static void DisableSceneCamera(Scene scene)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x14C9764", Offset = "0x14C9764", VA = "0x14C9764")]
	public static void TransferCameraRig(Scene fromScene, Scene toScene, bool worldSpace = true)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x14C87B0", Offset = "0x14C87B0", VA = "0x14C87B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7849BC", Offset = "0x7849BC")]
	private IEnumerator EstimateHeight()
	{
		return null;
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x14C9A00", Offset = "0x14C9A00", VA = "0x14C9A00")]
	private void Reset()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x14C9A58", Offset = "0x14C9A58", VA = "0x14C9A58")]
	public VRCameraRig()
	{
	}
}
[Token(Token = "0x20000A6")]
public class VRController : MonoBehaviour
{
	[Token(Token = "0x2000221")]
	public enum Button
	{
		[Token(Token = "0x4000AB5")]
		TriggerPress,
		[Token(Token = "0x4000AB6")]
		TriggerTouch,
		[Token(Token = "0x4000AB7")]
		TouchpadPress,
		[Token(Token = "0x4000AB8")]
		TouchpadTouch,
		[Token(Token = "0x4000AB9")]
		Grip,
		[Token(Token = "0x4000ABA")]
		PrimaryButtonPress,
		[Token(Token = "0x4000ABB")]
		PrimaryButtonTouch,
		[Token(Token = "0x4000ABC")]
		SecondaryButtonPress,
		[Token(Token = "0x4000ABD")]
		SecondaryButtonTouch,
		[Token(Token = "0x4000ABE")]
		MenuButton
	}

	[Token(Token = "0x2000222")]
	public enum Hand
	{
		[Token(Token = "0x4000AC0")]
		Left,
		[Token(Token = "0x4000AC1")]
		Right
	}

	[Token(Token = "0x2000223")]
	public enum ModelType
	{
		[Token(Token = "0x4000AC3")]
		Undefined,
		[Token(Token = "0x4000AC4")]
		Vive,
		[Token(Token = "0x4000AC5")]
		OculusTouch
	}

	[Serializable]
	[Token(Token = "0x2000224")]
	public class FingerTips
	{
		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform indexTransform;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform middleTransform;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform ringTransform;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform pinkyTransform;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform thumbTransform;

		[Token(Token = "0x17000272")]
		public Transform index
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0x14CDA1C", Offset = "0x14CDA1C", VA = "0x14CDA1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x14CDA24", Offset = "0x14CDA24", VA = "0x14CDA24")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public Transform middle
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x14CDA2C", Offset = "0x14CDA2C", VA = "0x14CDA2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x14CDA34", Offset = "0x14CDA34", VA = "0x14CDA34")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public Transform ring
		{
			[Token(Token = "0x6001302")]
			[Address(RVA = "0x14CDA3C", Offset = "0x14CDA3C", VA = "0x14CDA3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001303")]
			[Address(RVA = "0x14CDA44", Offset = "0x14CDA44", VA = "0x14CDA44")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public Transform pinky
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x14CDA4C", Offset = "0x14CDA4C", VA = "0x14CDA4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x14CDA54", Offset = "0x14CDA54", VA = "0x14CDA54")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public Transform thumb
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x14CDA5C", Offset = "0x14CDA5C", VA = "0x14CDA5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001307")]
			[Address(RVA = "0x14CDA64", Offset = "0x14CDA64", VA = "0x14CDA64")]
			set
			{
			}
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x14CDA6C", Offset = "0x14CDA6C", VA = "0x14CDA6C")]
		public FingerTips()
		{
		}
	}

	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D874", Offset = "0x77D874")]
	private sealed class <InitialDeviceCheck>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRController <>4__this;

		[Token(Token = "0x17000277")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0x14CD830", Offset = "0x14CD830", VA = "0x14CD830", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0x14CD898", Offset = "0x14CD898", VA = "0x14CD898", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x14CAC70", Offset = "0x14CAC70", VA = "0x14CAC70")]
		[DebuggerHidden]
		public <InitialDeviceCheck>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x14CD674", Offset = "0x14CD674", VA = "0x14CD674", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x14CD678", Offset = "0x14CD678", VA = "0x14CD678", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x14CD838", Offset = "0x14CD838", VA = "0x14CD838", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000226")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D884", Offset = "0x77D884")]
	private sealed class <FadeMaterial>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRController <>4__this;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float targetValue;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <prop>5__2;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color[] <colors>5__3;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startTime>5__4;

		[Token(Token = "0x17000279")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0x14CD604", Offset = "0x14CD604", VA = "0x14CD604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0x14CD66C", Offset = "0x14CD66C", VA = "0x14CD66C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x14CB664", Offset = "0x14CB664", VA = "0x14CB664")]
		[DebuggerHidden]
		public <FadeMaterial>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x14CD2C8", Offset = "0x14CD2C8", VA = "0x14CD2C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x14CD2CC", Offset = "0x14CD2CC", VA = "0x14CD2CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x14CD60C", Offset = "0x14CD60C", VA = "0x14CD60C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D894", Offset = "0x77D894")]
	private sealed class <Vibrate>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRController <>4__this;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private InputDevice <device>5__2;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__3;

		[Token(Token = "0x1700027B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001318")]
			[Address(RVA = "0x14CD9AC", Offset = "0x14CD9AC", VA = "0x14CD9AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600131A")]
			[Address(RVA = "0x14CDA14", Offset = "0x14CDA14", VA = "0x14CDA14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x14CBE44", Offset = "0x14CBE44", VA = "0x14CBE44")]
		[DebuggerHidden]
		public <Vibrate>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x14CD8A0", Offset = "0x14CD8A0", VA = "0x14CD8A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x14CD8A4", Offset = "0x14CD8A4", VA = "0x14CD8A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x14CD9B4", Offset = "0x14CD9B4", VA = "0x14CD9B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D8A4", Offset = "0x77D8A4")]
	private sealed class <AlignModel>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRController <>4__this;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <pos>5__2;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <rot>5__3;

		[Token(Token = "0x1700027D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0x14CD258", Offset = "0x14CD258", VA = "0x14CD258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001320")]
			[Address(RVA = "0x14CD2C0", Offset = "0x14CD2C0", VA = "0x14CD2C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x14CC2E0", Offset = "0x14CC2E0", VA = "0x14CC2E0")]
		[DebuggerHidden]
		public <AlignModel>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x14CD0B8", Offset = "0x14CD0B8", VA = "0x14CD0B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x14CD0BC", Offset = "0x14CD0BC", VA = "0x14CD0BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x14CD260", Offset = "0x14CD260", VA = "0x14CD260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D8B4", Offset = "0x77D8B4")]
	private sealed class <>c__DisplayClass68_0
	{
		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x14CCA48", Offset = "0x14CCA48", VA = "0x14CCA48")]
		public <>c__DisplayClass68_0()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x14CCEC8", Offset = "0x14CCEC8", VA = "0x14CCEC8")]
		internal float <FindInteractables>b__1(Collider o)
		{
			return default(float);
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x14CCFC0", Offset = "0x14CCFC0", VA = "0x14CCFC0")]
		internal float <FindInteractables>b__5(Collider o)
		{
			return default(float);
		}
	}

	[Serializable]
	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D8C4", Offset = "0x77D8C4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Collider, bool> <>9__68_0;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Collider, Interactable> <>9__68_2;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Interactable, bool> <>9__68_3;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Collider, bool> <>9__68_4;

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x14CCD10", Offset = "0x14CCD10", VA = "0x14CCD10")]
		public <>c()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x14CCD18", Offset = "0x14CCD18", VA = "0x14CCD18")]
		internal bool <FindInteractables>b__68_0(Collider hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x14CCDA4", Offset = "0x14CCDA4", VA = "0x14CCDA4")]
		internal Interactable <FindInteractables>b__68_2(Collider o)
		{
			return null;
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x14CCDFC", Offset = "0x14CCDFC", VA = "0x14CCDFC")]
		internal bool <FindInteractables>b__68_3(Interactable o)
		{
			return default(bool);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x14CCE3C", Offset = "0x14CCE3C", VA = "0x14CCE3C")]
		internal bool <FindInteractables>b__68_4(Collider hit)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRNode node;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform modelTransform;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandAnimator handAnimator;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7807A4", Offset = "0x7807A4")]
	private ModelType <modelType>k__BackingField;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7807B4", Offset = "0x7807B4")]
	[SerializeField]
	private float interactionDistance;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LayerMask interactionMask;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780810", Offset = "0x780810")]
	private HandPose interactionAvailablePose;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x78085C", Offset = "0x78085C")]
	public FingerTips fingerTips;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x780894", Offset = "0x780894")]
	[SerializeField]
	private VRModelSetting[] models;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public List<Interactable> Interactables;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7808F0", Offset = "0x7808F0")]
	private bool <canInteract>k__BackingField;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x780900", Offset = "0x780900")]
	private bool <isTracking>k__BackingField;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform m_transform;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int m_modelIndex;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer[] m_renderers;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material[] m_materials;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine m_materialFadeCoroutine;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Array m_buttonEnums;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private HandPoseZone m_handPoseZone;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<Button, bool> m_buttonStates;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x780910", Offset = "0x780910")]
	private Coroutine <alignCoroutine>k__BackingField;

	[Token(Token = "0x17000030")]
	public ModelType modelType
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x14C9F4C", Offset = "0x14C9F4C", VA = "0x14C9F4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784A20", Offset = "0x784A20")]
		get
		{
			return default(ModelType);
		}
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x14C9F54", Offset = "0x14C9F54", VA = "0x14C9F54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784A30", Offset = "0x784A30")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public bool canInteract
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x14C9F5C", Offset = "0x14C9F5C", VA = "0x14C9F5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784A40", Offset = "0x784A40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037F")]
		[Address(RVA = "0x14C9F64", Offset = "0x14C9F64", VA = "0x14C9F64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784A50", Offset = "0x784A50")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public bool isInteracting
	{
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x14C9F70", Offset = "0x14C9F70", VA = "0x14C9F70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000033")]
	public bool isTracking
	{
		[Token(Token = "0x6000381")]
		[Address(RVA = "0x14C9FE4", Offset = "0x14C9FE4", VA = "0x14C9FE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784A60", Offset = "0x784A60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000382")]
		[Address(RVA = "0x14C9FEC", Offset = "0x14C9FEC", VA = "0x14C9FEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784A70", Offset = "0x784A70")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public Coroutine alignCoroutine
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x14CC220", Offset = "0x14CC220", VA = "0x14CC220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784BAC", Offset = "0x784BAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x14CC228", Offset = "0x14CC228", VA = "0x14CC228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784BBC", Offset = "0x784BBC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x14C9FF8", Offset = "0x14C9FF8", VA = "0x14C9FF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x14CA2E4", Offset = "0x14CA2E4", VA = "0x14CA2E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x14CA3B8", Offset = "0x14CA3B8", VA = "0x14CA3B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x14CA48C", Offset = "0x14CA48C", VA = "0x14CA48C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x14CA57C", Offset = "0x14CA57C", VA = "0x14CA57C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x14CA274", Offset = "0x14CA274", VA = "0x14CA274")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784A80", Offset = "0x784A80")]
	private IEnumerator InitialDeviceCheck()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x14CAC9C", Offset = "0x14CAC9C", VA = "0x14CAC9C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x14CAF20", Offset = "0x14CAF20", VA = "0x14CAF20")]
	private void TrackingAcquired(XRNodeState nodeState)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x14CB340", Offset = "0x14CB340", VA = "0x14CB340")]
	private void TrackingLost(XRNodeState nodeState)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x14CB420", Offset = "0x14CB420", VA = "0x14CB420")]
	public void EnableInteraction(float duration = 2f)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x14CB520", Offset = "0x14CB520", VA = "0x14CB520")]
	public void DisableInteraction(float duration = 2f)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x14CB49C", Offset = "0x14CB49C", VA = "0x14CB49C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784AE4", Offset = "0x784AE4")]
	private IEnumerator FadeMaterial(float targetValue, float duration = 2f)
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x14CB210", Offset = "0x14CB210", VA = "0x14CB210")]
	private void SetControllerVisibility(bool enable)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x14CB00C", Offset = "0x14CB00C", VA = "0x14CB00C")]
	private void RefreshDevice()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x14CB6F0", Offset = "0x14CB6F0", VA = "0x14CB6F0")]
	private InputDevice GetXRDevice()
	{
		return default(InputDevice);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x14CACA0", Offset = "0x14CACA0", VA = "0x14CACA0")]
	private void SetButtonStates()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x14CB6FC", Offset = "0x14CB6FC", VA = "0x14CB6FC")]
	public bool GetButton(Button button, out bool buttonValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x14CBA84", Offset = "0x14CBA84", VA = "0x14CBA84")]
	public bool GetAxis(Button button, out float axisValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x14CBBE0", Offset = "0x14CBBE0", VA = "0x14CBBE0")]
	public bool GetButtonDown(Button button, out bool buttonValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x14CBC9C", Offset = "0x14CBC9C", VA = "0x14CBC9C")]
	public bool GetButtonUp(Button button, out bool buttonValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x14CBD58", Offset = "0x14CBD58", VA = "0x14CBD58")]
	public void TriggerVibration(float duration = 0.1f)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x14CBDC4", Offset = "0x14CBDC4", VA = "0x14CBDC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784B48", Offset = "0x784B48")]
	private IEnumerator Vibrate(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x14CBE70", Offset = "0x14CBE70", VA = "0x14CBE70")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x14CC088", Offset = "0x14CC088", VA = "0x14CC088")]
	public Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x14CA600", Offset = "0x14CA600", VA = "0x14CA600")]
	private void UpdateXRPose()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x14CC230", Offset = "0x14CC230", VA = "0x14CC230")]
	public void EnterAlignModelMode()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x14CC270", Offset = "0x14CC270", VA = "0x14CC270")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784BCC", Offset = "0x784BCC")]
	private IEnumerator AlignModel()
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x14CC30C", Offset = "0x14CC30C", VA = "0x14CC30C")]
	public void MirrorModelSettings()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x14CA8D4", Offset = "0x14CA8D4", VA = "0x14CA8D4")]
	private void HandleInteractions()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x14CC588", Offset = "0x14CC588", VA = "0x14CC588")]
	public void FindInteractables()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x14CAAF0", Offset = "0x14CAAF0", VA = "0x14CAAF0")]
	private void ResponsiveHandPose()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x14CCA50", Offset = "0x14CCA50", VA = "0x14CCA50")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x14CCAA0", Offset = "0x14CCAA0", VA = "0x14CCAA0")]
	public VRController()
	{
	}
}
[Token(Token = "0x20000A7")]
public class VRHelper : MonoBehaviour
{
	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x14CDA74", Offset = "0x14CDA74", VA = "0x14CDA74")]
	public void EnableInteraction()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x14CDAD4", Offset = "0x14CDAD4", VA = "0x14CDAD4")]
	public void EnableInteraction(float duration = 2f)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x14CDB40", Offset = "0x14CDB40", VA = "0x14CDB40")]
	public void DisableInteraction()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x14CDBA0", Offset = "0x14CDBA0", VA = "0x14CDBA0")]
	public void DisableInteraction(float duration = 2f)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x14CDC0C", Offset = "0x14CDC0C", VA = "0x14CDC0C")]
	public void EnableInteractionSingleUserOnly()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x14CDCD0", Offset = "0x14CDCD0", VA = "0x14CDCD0")]
	public void DisableInteractionSingleUserOnly()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x14CDD94", Offset = "0x14CDD94", VA = "0x14CDD94")]
	public VRHelper()
	{
	}
}
[Token(Token = "0x20000A8")]
public class VRInput : MonoBehaviour
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isActive;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x780920", Offset = "0x780920")]
	private static Transform <head>k__BackingField;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<Transform> m_heads;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static VRController leftHandController;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static VRController rightHandController;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x780930", Offset = "0x780930")]
	private static Action<bool> <OnInputEnable>k__BackingField;

	[Token(Token = "0x17000035")]
	public static Transform head
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x14CDD9C", Offset = "0x14CDD9C", VA = "0x14CDD9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784C30", Offset = "0x784C30")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x14CDE04", Offset = "0x14CDE04", VA = "0x14CDE04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784C40", Offset = "0x784C40")]
		private set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public static Action<bool> OnInputEnable
	{
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x14CDE70", Offset = "0x14CDE70", VA = "0x14CDE70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784C50", Offset = "0x784C50")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x14CDED8", Offset = "0x14CDED8", VA = "0x14CDED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784C60", Offset = "0x784C60")]
		set
		{
		}
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x14CB690", Offset = "0x14CB690", VA = "0x14CB690")]
	public static string GetModel()
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x14CDF44", Offset = "0x14CDF44", VA = "0x14CDF44")]
	public static VRController GetControllerFromHand(VRController.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x14C9070", Offset = "0x14C9070", VA = "0x14C9070")]
	public static void EnableInteractionStatic(float duration = 2f)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x14C92D0", Offset = "0x14C92D0", VA = "0x14C92D0")]
	public static void DisableInteractionStatic(float duration = 2f)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x14C88D4", Offset = "0x14C88D4", VA = "0x14C88D4")]
	public static void SetHead(Transform t)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x14C8A70", Offset = "0x14C8A70", VA = "0x14C8A70")]
	public static void RemoveHead(Transform t)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x14C9D28", Offset = "0x14C9D28", VA = "0x14C9D28")]
	public static bool IsHeadTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x14CDFF8", Offset = "0x14CDFF8", VA = "0x14CDFF8")]
	public static bool IsUserPresent()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x14CE018", Offset = "0x14CE018", VA = "0x14CE018")]
	public VRInput()
	{
	}
}
[Token(Token = "0x20000A9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x77C710", Offset = "0x77C710")]
public class VRModelSetting : ScriptableObject
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780940", Offset = "0x780940")]
	public string modelName;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRController.ModelType modelType;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 localPosition;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 localRotation;

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x14CE0A4", Offset = "0x14CE0A4", VA = "0x14CE0A4")]
	public VRModelSetting()
	{
	}
}
[Token(Token = "0x20000AA")]
public class WwisePlaySound : MonoBehaviour
{
	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _namePlayAkEvent;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string _nameStopAkEvent;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x14CE590", Offset = "0x14CE590", VA = "0x14CE590")]
	public void playEventSound()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x14CE614", Offset = "0x14CE614", VA = "0x14CE614")]
	public void stopEventSound()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x14CE698", Offset = "0x14CE698", VA = "0x14CE698")]
	public WwisePlaySound()
	{
	}
}
[Token(Token = "0x20000AB")]
public class Wwise_Setrtpc : MonoBehaviour
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string rtpcName;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rtpcValue;

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x14CED40", Offset = "0x14CED40", VA = "0x14CED40")]
	public void setRTPCValue()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x14CEDBC", Offset = "0x14CEDBC", VA = "0x14CEDBC")]
	public Wwise_Setrtpc()
	{
	}
}
[Token(Token = "0x20000AC")]
public class Wwise_rtpc_FadeIn : MonoBehaviour
{
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D8D4", Offset = "0x77D8D4")]
	private sealed class <FadeRTPC>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Wwise_rtpc_FadeIn <>4__this;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <endTime>5__2;

		[Token(Token = "0x1700027F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0x14CF020", Offset = "0x14CF020", VA = "0x14CF020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x14CF088", Offset = "0x14CF088", VA = "0x14CF088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x14CEE94", Offset = "0x14CEE94", VA = "0x14CEE94")]
		[DebuggerHidden]
		public <FadeRTPC>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x14CEEC8", Offset = "0x14CEEC8", VA = "0x14CEEC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x14CEECC", Offset = "0x14CEECC", VA = "0x14CEECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x14CF028", Offset = "0x14CF028", VA = "0x14CF028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rtpcFadeDurantion;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string rtpcName;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rtpcValue;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine m_coroutine;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x14CEDC4", Offset = "0x14CEDC4", VA = "0x14CEDC4")]
	public void RTPCFadeIn()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x14CEE14", Offset = "0x14CEE14", VA = "0x14CEE14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x784C70", Offset = "0x784C70")]
	private IEnumerator FadeRTPC(float duration)
	{
		return null;
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x14CEEC0", Offset = "0x14CEEC0", VA = "0x14CEEC0")]
	public Wwise_rtpc_FadeIn()
	{
	}
}
[Token(Token = "0x20000AD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77C764", Offset = "0x77C764")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200022C")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000AED")]
		MouseXAndY,
		[Token(Token = "0x4000AEE")]
		MouseX,
		[Token(Token = "0x4000AEF")]
		MouseY
	}

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xF3BB24", Offset = "0xF3BB24", VA = "0xF3BB24")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xF3BD84", Offset = "0xF3BD84", VA = "0xF3BD84")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xF3BE44", Offset = "0xF3BE44", VA = "0xF3BE44")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000AE")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200022D")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000AF1")]
		Uninitialized = -1,
		[Token(Token = "0x4000AF2")]
		NotEnabled,
		[Token(Token = "0x4000AF3")]
		Success,
		[Token(Token = "0x4000AF4")]
		StreamError,
		[Token(Token = "0x4000AF5")]
		ProcessError,
		[Token(Token = "0x4000AF6")]
		MaxStatValue
	}

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000037")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xF3C7CC", Offset = "0xF3C7CC", VA = "0xF3C7CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xF3C7D4", Offset = "0xF3C7D4", VA = "0xF3C7D4")]
		set
		{
		}
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xF3C7E0", Offset = "0xF3C7E0", VA = "0xF3C7E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xF3CA14", Offset = "0xF3CA14", VA = "0xF3CA14")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xF3CC64", Offset = "0xF3CC64", VA = "0xF3CC64")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000AF")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200022E")]
	private enum Parameters
	{
		[Token(Token = "0x4000AF8")]
		P_GAIN,
		[Token(Token = "0x4000AF9")]
		P_USEINVSQR,
		[Token(Token = "0x4000AFA")]
		P_NEAR,
		[Token(Token = "0x4000AFB")]
		P_FAR,
		[Token(Token = "0x4000AFC")]
		P_RADIUS,
		[Token(Token = "0x4000AFD")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000AFE")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000AFF")]
		P_AMBISTAT,
		[Token(Token = "0x4000B00")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000B01")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000B02")]
		P_SENDLEVEL,
		[Token(Token = "0x4000B03")]
		P_NUM
	}

	[Token(Token = "0x4000389")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000038")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xF3CFD0", Offset = "0xF3CFD0", VA = "0xF3CFD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xF3CFD8", Offset = "0xF3CFD8", VA = "0xF3CFD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public float Gain
	{
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xF3CFE4", Offset = "0xF3CFE4", VA = "0xF3CFE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xF3CFEC", Offset = "0xF3CFEC", VA = "0xF3CFEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xF3D070", Offset = "0xF3D070", VA = "0xF3D070")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xF3D078", Offset = "0xF3D078", VA = "0xF3D078")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public float Near
	{
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xF3D084", Offset = "0xF3D084", VA = "0xF3D084")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xF3D08C", Offset = "0xF3D08C", VA = "0xF3D08C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public float Far
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xF3D114", Offset = "0xF3D114", VA = "0xF3D114")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xF3D11C", Offset = "0xF3D11C", VA = "0xF3D11C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xF3D1A4", Offset = "0xF3D1A4", VA = "0xF3D1A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xF3D1AC", Offset = "0xF3D1AC", VA = "0xF3D1AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float ReverbSend
	{
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xF3D234", Offset = "0xF3D234", VA = "0xF3D234")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xF3D23C", Offset = "0xF3D23C", VA = "0xF3D23C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xF3D2C4", Offset = "0xF3D2C4", VA = "0xF3D2C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xF3D2CC", Offset = "0xF3D2CC", VA = "0xF3D2CC")]
		set
		{
		}
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xF3CCE8", Offset = "0xF3CCE8", VA = "0xF3CCE8")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x784CD4", Offset = "0x784CD4")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xF3CEF0", Offset = "0xF3CEF0", VA = "0xF3CEF0")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xF3D2D8", Offset = "0xF3D2D8", VA = "0xF3D2D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xF3D44C", Offset = "0xF3D44C", VA = "0xF3D44C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xF3D450", Offset = "0xF3D450", VA = "0xF3D450")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xF3D344", Offset = "0xF3D344", VA = "0xF3D344")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xF3D518", Offset = "0xF3D518", VA = "0xF3D518")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xF3D978", Offset = "0xF3D978", VA = "0xF3D978")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xF3CE70", Offset = "0xF3CE70", VA = "0xF3CE70")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xF3DA48", Offset = "0xF3DA48", VA = "0xF3DA48")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000394")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000396")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xF3DA68", Offset = "0xF3DA68", VA = "0xF3DA68")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xF3DA74", Offset = "0xF3DA74", VA = "0xF3DA74")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xF3DB2C", Offset = "0xF3DB2C", VA = "0xF3DB2C")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xF3DAAC", Offset = "0xF3DAAC", VA = "0xF3DAAC")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xF3DBAC", Offset = "0xF3DBAC", VA = "0xF3DBAC")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000B1")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200022F")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000230")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400039D")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000040")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xF40628", Offset = "0xF40628", VA = "0xF40628")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000041")]
	public string filePath
	{
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xF406B4", Offset = "0xF406B4", VA = "0xF406B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xF4072C", Offset = "0xF4072C", VA = "0xF4072C")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xF40874", Offset = "0xF40874", VA = "0xF40874")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xF40878", Offset = "0xF40878", VA = "0xF40878")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xF40DD8", Offset = "0xF40DD8", VA = "0xF40DD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xF41170", Offset = "0xF41170", VA = "0xF41170")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xF412CC", Offset = "0xF412CC", VA = "0xF412CC")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xF419A4", Offset = "0xF419A4", VA = "0xF419A4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xF419E0", Offset = "0xF419E0", VA = "0xF419E0")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xF43184", Offset = "0xF43184", VA = "0xF43184")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xF4305C", Offset = "0xF4305C", VA = "0xF4305C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xF40C10", Offset = "0xF40C10", VA = "0xF40C10")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xF40A44", Offset = "0xF40A44", VA = "0xF40A44")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xF43798", Offset = "0xF43798", VA = "0xF43798")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xF43BD4", Offset = "0xF43BD4", VA = "0xF43BD4")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000B2")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000231")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000B0A")]
		Int8,
		[Token(Token = "0x4000B0B")]
		UInt8,
		[Token(Token = "0x4000B0C")]
		Int16,
		[Token(Token = "0x4000B0D")]
		UInt16,
		[Token(Token = "0x4000B0E")]
		Int32,
		[Token(Token = "0x4000B0F")]
		UInt32,
		[Token(Token = "0x4000B10")]
		Int64,
		[Token(Token = "0x4000B11")]
		UInt64,
		[Token(Token = "0x4000B12")]
		Float16,
		[Token(Token = "0x4000B13")]
		Float32,
		[Token(Token = "0x4000B14")]
		Float64
	}

	[Token(Token = "0x2000232")]
	public class ClientType
	{
		[Token(Token = "0x4000B15")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000B16")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000B17")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000B18")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000B19")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000B1A")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000B1B")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000B1C")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000B1D")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000B1E")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000B1F")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000B20")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000B21")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000B22")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000B23")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xF3E060", Offset = "0xF3E060", VA = "0xF3E060")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000233")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001331")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001332")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6001333")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6001334")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001335")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6001336")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001337")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001338")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001339")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600133A")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600133B")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600133C")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x600133D")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600133E")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600133F")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000234")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000B24")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000281")]
		private IntPtr context
		{
			[Token(Token = "0x6001340")]
			[Address(RVA = "0xF3ECD0", Offset = "0xF3ECD0", VA = "0xF3ECD0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001341")]
		[Address(RVA = "0xF3ED34", Offset = "0xF3ED34", VA = "0xF3ED34")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001342")]
		[Address(RVA = "0xF3EDC4", Offset = "0xF3EDC4", VA = "0xF3EDC4")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xF3EE54", Offset = "0xF3EE54", VA = "0xF3EE54", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001344")]
		[Address(RVA = "0xF3EE78", Offset = "0xF3EE78", VA = "0xF3EE78")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xF3EF08", Offset = "0xF3EF08", VA = "0xF3EF08", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001346")]
		[Address(RVA = "0xF3EF2C", Offset = "0xF3EF2C", VA = "0xF3EF2C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xF3EFB8", Offset = "0xF3EFB8", VA = "0xF3EFB8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001348")]
		[Address(RVA = "0xF3EFDC", Offset = "0xF3EFDC", VA = "0xF3EFDC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xF3F05C", Offset = "0xF3F05C", VA = "0xF3F05C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600134A")]
		[Address(RVA = "0xF3F064", Offset = "0xF3F064", VA = "0xF3F064")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xF3F184", Offset = "0xF3F184", VA = "0xF3F184", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600134C")]
		[Address(RVA = "0xF3F27C", Offset = "0xF3F27C", VA = "0xF3F27C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xF3F314", Offset = "0xF3F314", VA = "0xF3F314", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600134E")]
		[Address(RVA = "0xF3F320", Offset = "0xF3F320", VA = "0xF3F320")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xF3F44C", Offset = "0xF3F44C", VA = "0xF3F44C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001350")]
		[Address(RVA = "0xF3F458", Offset = "0xF3F458", VA = "0xF3F458")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xF3F504", Offset = "0xF3F504", VA = "0xF3F504", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001352")]
		[Address(RVA = "0xF3F510", Offset = "0xF3F510", VA = "0xF3F510")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xF3F5BC", Offset = "0xF3F5BC", VA = "0xF3F5BC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001354")]
		[Address(RVA = "0xF3F5C8", Offset = "0xF3F5C8", VA = "0xF3F5C8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xF3F674", Offset = "0xF3F674", VA = "0xF3F674", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001356")]
		[Address(RVA = "0xF3F680", Offset = "0xF3F680", VA = "0xF3F680")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xF3F70C", Offset = "0xF3F70C", VA = "0xF3F70C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001358")]
		[Address(RVA = "0xF3F730", Offset = "0xF3F730", VA = "0xF3F730")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xF3F7B0", Offset = "0xF3F7B0", VA = "0xF3F7B0", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600135A")]
		[Address(RVA = "0xF3F7B8", Offset = "0xF3F7B8", VA = "0xF3F7B8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xF3F860", Offset = "0xF3F860", VA = "0xF3F860", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600135C")]
		[Address(RVA = "0xF3F86C", Offset = "0xF3F86C", VA = "0xF3F86C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xF3F914", Offset = "0xF3F914", VA = "0xF3F914", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600135E")]
		[Address(RVA = "0xF3F924", Offset = "0xF3F924", VA = "0xF3F924")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xF3F9B4", Offset = "0xF3F9B4", VA = "0xF3F9B4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xF3E00C", Offset = "0xF3E00C", VA = "0xF3E00C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000235")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000B26")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000282")]
		private IntPtr context
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0xF3F9C0", Offset = "0xF3F9C0", VA = "0xF3F9C0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001362")]
		[Address(RVA = "0xF3DE54", Offset = "0xF3DE54", VA = "0xF3DE54")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001363")]
		[Address(RVA = "0xF3FA24", Offset = "0xF3FA24", VA = "0xF3FA24")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xF3FAB4", Offset = "0xF3FAB4", VA = "0xF3FAB4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001365")]
		[Address(RVA = "0xF3FAD8", Offset = "0xF3FAD8", VA = "0xF3FAD8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xF3FB68", Offset = "0xF3FB68", VA = "0xF3FB68", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001367")]
		[Address(RVA = "0xF3FB8C", Offset = "0xF3FB8C", VA = "0xF3FB8C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xF3FC1C", Offset = "0xF3FC1C", VA = "0xF3FC1C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001369")]
		[Address(RVA = "0xF3FC40", Offset = "0xF3FC40", VA = "0xF3FC40")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xF3FCC0", Offset = "0xF3FCC0", VA = "0xF3FCC0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600136B")]
		[Address(RVA = "0xF3FCC8", Offset = "0xF3FCC8", VA = "0xF3FCC8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xF3FDE8", Offset = "0xF3FDE8", VA = "0xF3FDE8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600136D")]
		[Address(RVA = "0xF3FEE0", Offset = "0xF3FEE0", VA = "0xF3FEE0")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xF3FF78", Offset = "0xF3FF78", VA = "0xF3FF78", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600136F")]
		[Address(RVA = "0xF3FF84", Offset = "0xF3FF84", VA = "0xF3FF84")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xF400B0", Offset = "0xF400B0", VA = "0xF400B0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001371")]
		[Address(RVA = "0xF400BC", Offset = "0xF400BC", VA = "0xF400BC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xF40168", Offset = "0xF40168", VA = "0xF40168", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001373")]
		[Address(RVA = "0xF40174", Offset = "0xF40174", VA = "0xF40174")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xF40220", Offset = "0xF40220", VA = "0xF40220", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001375")]
		[Address(RVA = "0xF4022C", Offset = "0xF4022C", VA = "0xF4022C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xF402D8", Offset = "0xF402D8", VA = "0xF402D8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001377")]
		[Address(RVA = "0xF402E4", Offset = "0xF402E4", VA = "0xF402E4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xF40374", Offset = "0xF40374", VA = "0xF40374", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001379")]
		[Address(RVA = "0xF40398", Offset = "0xF40398", VA = "0xF40398")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xF40418", Offset = "0xF40418", VA = "0xF40418", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600137B")]
		[Address(RVA = "0xF40420", Offset = "0xF40420", VA = "0xF40420")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xF404C8", Offset = "0xF404C8", VA = "0xF404C8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600137D")]
		[Address(RVA = "0xF404D4", Offset = "0xF404D4", VA = "0xF404D4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xF4057C", Offset = "0xF4057C", VA = "0xF4057C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600137F")]
		[Address(RVA = "0xF4058C", Offset = "0xF4058C", VA = "0xF4058C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xF4061C", Offset = "0xF4061C", VA = "0xF4061C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xF3DEE4", Offset = "0xF3DEE4", VA = "0xF3DEE4")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000236")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000B28")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000283")]
		private IntPtr context
		{
			[Token(Token = "0x6001382")]
			[Address(RVA = "0xF3E068", Offset = "0xF3E068", VA = "0xF3E068")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001383")]
		[Address(RVA = "0xF3DF30", Offset = "0xF3DF30", VA = "0xF3DF30")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001384")]
		[Address(RVA = "0xF3E0CC", Offset = "0xF3E0CC", VA = "0xF3E0CC")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xF3E15C", Offset = "0xF3E15C", VA = "0xF3E15C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001386")]
		[Address(RVA = "0xF3E180", Offset = "0xF3E180", VA = "0xF3E180")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xF3E210", Offset = "0xF3E210", VA = "0xF3E210", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001388")]
		[Address(RVA = "0xF3E234", Offset = "0xF3E234", VA = "0xF3E234")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xF3E2C4", Offset = "0xF3E2C4", VA = "0xF3E2C4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600138A")]
		[Address(RVA = "0xF3E2E8", Offset = "0xF3E2E8", VA = "0xF3E2E8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xF3E368", Offset = "0xF3E368", VA = "0xF3E368", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600138C")]
		[Address(RVA = "0xF3E370", Offset = "0xF3E370", VA = "0xF3E370")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xF3E490", Offset = "0xF3E490", VA = "0xF3E490", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600138E")]
		[Address(RVA = "0xF3E588", Offset = "0xF3E588", VA = "0xF3E588")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xF3E620", Offset = "0xF3E620", VA = "0xF3E620", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001390")]
		[Address(RVA = "0xF3E62C", Offset = "0xF3E62C", VA = "0xF3E62C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xF3E758", Offset = "0xF3E758", VA = "0xF3E758", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001392")]
		[Address(RVA = "0xF3E764", Offset = "0xF3E764", VA = "0xF3E764")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xF3E810", Offset = "0xF3E810", VA = "0xF3E810", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001394")]
		[Address(RVA = "0xF3E81C", Offset = "0xF3E81C", VA = "0xF3E81C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xF3E8C8", Offset = "0xF3E8C8", VA = "0xF3E8C8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001396")]
		[Address(RVA = "0xF3E8D4", Offset = "0xF3E8D4", VA = "0xF3E8D4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xF3E980", Offset = "0xF3E980", VA = "0xF3E980", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001398")]
		[Address(RVA = "0xF3E98C", Offset = "0xF3E98C", VA = "0xF3E98C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xF3EA1C", Offset = "0xF3EA1C", VA = "0xF3EA1C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600139A")]
		[Address(RVA = "0xF3EA40", Offset = "0xF3EA40", VA = "0xF3EA40")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xF3EAC0", Offset = "0xF3EAC0", VA = "0xF3EAC0", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600139C")]
		[Address(RVA = "0xF3EAC8", Offset = "0xF3EAC8", VA = "0xF3EAC8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xF3EB70", Offset = "0xF3EB70", VA = "0xF3EB70", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600139E")]
		[Address(RVA = "0xF3EB7C", Offset = "0xF3EB7C", VA = "0xF3EB7C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xF3EC24", Offset = "0xF3EC24", VA = "0xF3EC24", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xF3EC34", Offset = "0xF3EC34", VA = "0xF3EC34")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xF3ECC4", Offset = "0xF3ECC4", VA = "0xF3ECC4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xF3DFC0", Offset = "0xF3DFC0", VA = "0xF3DFC0")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000042")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xF3DBBC", Offset = "0xF3DBBC", VA = "0xF3DBBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xF3DC2C", Offset = "0xF3DC2C", VA = "0xF3DC2C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xF3E058", Offset = "0xF3E058", VA = "0xF3E058")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000B3")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000237")]
	public enum Preset
	{
		[Token(Token = "0x4000B2B")]
		Custom,
		[Token(Token = "0x4000B2C")]
		AcousticTile,
		[Token(Token = "0x4000B2D")]
		Brick,
		[Token(Token = "0x4000B2E")]
		BrickPainted,
		[Token(Token = "0x4000B2F")]
		Carpet,
		[Token(Token = "0x4000B30")]
		CarpetHeavy,
		[Token(Token = "0x4000B31")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000B32")]
		CeramicTile,
		[Token(Token = "0x4000B33")]
		Concrete,
		[Token(Token = "0x4000B34")]
		ConcreteRough,
		[Token(Token = "0x4000B35")]
		ConcreteBlock,
		[Token(Token = "0x4000B36")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000B37")]
		Curtain,
		[Token(Token = "0x4000B38")]
		Foliage,
		[Token(Token = "0x4000B39")]
		Glass,
		[Token(Token = "0x4000B3A")]
		GlassHeavy,
		[Token(Token = "0x4000B3B")]
		Grass,
		[Token(Token = "0x4000B3C")]
		Gravel,
		[Token(Token = "0x4000B3D")]
		GypsumBoard,
		[Token(Token = "0x4000B3E")]
		PlasterOnBrick,
		[Token(Token = "0x4000B3F")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000B40")]
		Soil,
		[Token(Token = "0x4000B41")]
		SoundProof,
		[Token(Token = "0x4000B42")]
		Snow,
		[Token(Token = "0x4000B43")]
		Steel,
		[Token(Token = "0x4000B44")]
		Water,
		[Token(Token = "0x4000B45")]
		WoodThin,
		[Token(Token = "0x4000B46")]
		WoodThick,
		[Token(Token = "0x4000B47")]
		WoodFloor,
		[Token(Token = "0x4000B48")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000238")]
	public sealed class Point
	{
		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xF4BAA8", Offset = "0xF4BAA8", VA = "0xF4BAA8")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xF4BBF0", Offset = "0xF4BBF0", VA = "0xF4BBF0")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xF4BC60", Offset = "0xF4BC60", VA = "0xF4BC60")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x77D8E4", Offset = "0x77D8E4")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200027F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77DA78", Offset = "0x77DA78")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6001497")]
			[Address(RVA = "0xF4C0B8", Offset = "0xF4C0B8", VA = "0xF4C0B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001498")]
			[Address(RVA = "0xF4C0C0", Offset = "0xF4C0C0", VA = "0xF4C0C0")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6001499")]
			[Address(RVA = "0xF4C0D8", Offset = "0xF4C0D8", VA = "0xF4C0D8")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000284")]
		public float Item
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0xF4BC98", Offset = "0xF4BC98", VA = "0xF4BC98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xF4BB78", Offset = "0xF4BB78", VA = "0xF4BB78")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780A08", Offset = "0x780A08")]
	public Spectrum absorption;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780A40", Offset = "0x780A40")]
	public Spectrum transmission;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780A78", Offset = "0x780A78")]
	public Spectrum scattering;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000043")]
	public Preset preset
	{
		[Token(Token = "0x6000401")]
		[Address(RVA = "0xF43CAC", Offset = "0xF43CAC", VA = "0xF43CAC")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000402")]
		[Address(RVA = "0xF43CB4", Offset = "0xF43CB4", VA = "0xF43CB4")]
		set
		{
		}
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xF43CDC", Offset = "0xF43CDC", VA = "0xF43CDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xF4362C", Offset = "0xF4362C", VA = "0xF4362C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xF4428C", Offset = "0xF4428C", VA = "0xF4428C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xF44290", Offset = "0xF44290", VA = "0xF44290")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xF43CE0", Offset = "0xF43CE0", VA = "0xF43CE0")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xF42EC8", Offset = "0xF42EC8", VA = "0xF42EC8")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xF44374", Offset = "0xF44374", VA = "0xF44374")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xF447D4", Offset = "0xF447D4", VA = "0xF447D4")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xF44C34", Offset = "0xF44C34", VA = "0xF44C34")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xF45094", Offset = "0xF45094", VA = "0xF45094")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xF454F4", Offset = "0xF454F4", VA = "0xF454F4")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xF45954", Offset = "0xF45954", VA = "0xF45954")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xF45DB4", Offset = "0xF45DB4", VA = "0xF45DB4")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xF46214", Offset = "0xF46214", VA = "0xF46214")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xF46674", Offset = "0xF46674", VA = "0xF46674")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xF46AD4", Offset = "0xF46AD4", VA = "0xF46AD4")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xF46F34", Offset = "0xF46F34", VA = "0xF46F34")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xF47394", Offset = "0xF47394", VA = "0xF47394")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xF477F4", Offset = "0xF477F4", VA = "0xF477F4")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xF47C54", Offset = "0xF47C54", VA = "0xF47C54")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xF480AC", Offset = "0xF480AC", VA = "0xF480AC")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xF4850C", Offset = "0xF4850C", VA = "0xF4850C")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xF48848", Offset = "0xF48848", VA = "0xF48848")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xF48B84", Offset = "0xF48B84", VA = "0xF48B84")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xF48FE4", Offset = "0xF48FE4", VA = "0xF48FE4")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xF49444", Offset = "0xF49444", VA = "0xF49444")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xF498A4", Offset = "0xF498A4", VA = "0xF498A4")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xF49BE0", Offset = "0xF49BE0", VA = "0xF49BE0")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xF49D3C", Offset = "0xF49D3C", VA = "0xF49D3C")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xF4A078", Offset = "0xF4A078", VA = "0xF4A078")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xF4A4D0", Offset = "0xF4A4D0", VA = "0xF4A4D0")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xF4A930", Offset = "0xF4A930", VA = "0xF4A930")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xF4AD88", Offset = "0xF4AD88", VA = "0xF4AD88")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xF4B1E8", Offset = "0xF4B1E8", VA = "0xF4B1E8")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xF4B648", Offset = "0xF4B648", VA = "0xF4B648")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xF4BAE0", Offset = "0xF4BAE0", VA = "0xF4BAE0")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000B4")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xF4C0F0", Offset = "0xF4C0F0", VA = "0xF4C0F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xF4C1C0", Offset = "0xF4C1C0", VA = "0xF4C1C0")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000B5")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000044")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000429")]
		[Address(RVA = "0xF3CD5C", Offset = "0xF3CD5C", VA = "0xF3CD5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xF4C77C", Offset = "0xF4C77C", VA = "0xF4C77C")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000B6")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40003A8")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x600042B")]
	[Address(RVA = "0xF4C78C", Offset = "0xF4C78C", VA = "0xF4C78C")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xF4C824", Offset = "0xF4C824", VA = "0xF4C824")]
	private void Awake()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xF4C930", Offset = "0xF4C930", VA = "0xF4C930")]
	private void Start()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xF4C934", Offset = "0xF4C934", VA = "0xF4C934")]
	private void Update()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xF4C938", Offset = "0xF4C938", VA = "0xF4C938")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000B7")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200023A")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x40003B7")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40003BD")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xF4CEC0", Offset = "0xF4CEC0", VA = "0xF4CEC0")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xF4CCF0", Offset = "0xF4CCF0", VA = "0xF4CCF0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x784CE8", Offset = "0x784CE8")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xF4CEF8", Offset = "0xF4CEF8", VA = "0xF4CEF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xF4D02C", Offset = "0xF4D02C", VA = "0xF4D02C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xF4D120", Offset = "0xF4D120", VA = "0xF4D120")]
	private void Update()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xF4DAD8", Offset = "0xF4DAD8", VA = "0xF4DAD8")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000436")]
	[Address(RVA = "0xF4CF98", Offset = "0xF4CF98", VA = "0xF4CF98")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000437")]
	[Address(RVA = "0xF4D090", Offset = "0xF4D090", VA = "0xF4D090")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000438")]
	[Address(RVA = "0xF4D840", Offset = "0xF4D840", VA = "0xF4D840")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000439")]
	[Address(RVA = "0xF4D8C0", Offset = "0xF4D8C0", VA = "0xF4D8C0")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x600043A")]
	[Address(RVA = "0xF4D948", Offset = "0xF4D948", VA = "0xF4D948")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x600043B")]
	[Address(RVA = "0xF4D9D0", Offset = "0xF4D9D0", VA = "0xF4D9D0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x600043C")]
	[Address(RVA = "0xF4DA50", Offset = "0xF4DA50", VA = "0xF4DA50")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x600043D")]
	[Address(RVA = "0xF4E910", Offset = "0xF4E910", VA = "0xF4E910")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x600043E")]
	[Address(RVA = "0xF4E9B8", Offset = "0xF4E9B8", VA = "0xF4E9B8")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xF4EA60", Offset = "0xF4EA60", VA = "0xF4EA60")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000B8")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000B9")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xF4C1D0", Offset = "0xF4C1D0", VA = "0xF4C1D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xF4C1D4", Offset = "0xF4C1D4", VA = "0xF4C1D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xF4C1D8", Offset = "0xF4C1D8", VA = "0xF4C1D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xF4C340", Offset = "0xF4C340", VA = "0xF4C340")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xF4C224", Offset = "0xF4C224", VA = "0xF4C224")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xF4C2B4", Offset = "0xF4C2B4", VA = "0xF4C2B4")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xF4C38C", Offset = "0xF4C38C", VA = "0xF4C38C")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xF4C424", Offset = "0xF4C424", VA = "0xF4C424")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xF4C58C", Offset = "0xF4C58C", VA = "0xF4C58C")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xF4C6F4", Offset = "0xF4C6F4", VA = "0xF4C6F4")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000BA")]
public enum AkAudioAPI
{
	[Token(Token = "0x40003C5")]
	AkAudioAPI_AAudio = 1,
	[Token(Token = "0x40003C6")]
	AkAudioAPI_OpenSL_ES,
	[Token(Token = "0x40003C7")]
	AkAudioAPI_Default
}
[Token(Token = "0x20000BB")]
public class AkCommunicationSettings : IDisposable
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000045")]
	public uint uPoolSize
	{
		[Token(Token = "0x6000453")]
		[Address(RVA = "0x10B23F8", Offset = "0x10B23F8", VA = "0x10B23F8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000452")]
		[Address(RVA = "0x10B1644", Offset = "0x10B1644", VA = "0x10B1644")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public ushort uDiscoveryBroadcastPort
	{
		[Token(Token = "0x6000455")]
		[Address(RVA = "0x10B2464", Offset = "0x10B2464", VA = "0x10B2464")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000454")]
		[Address(RVA = "0x10B16C0", Offset = "0x10B16C0", VA = "0x10B16C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public ushort uCommandPort
	{
		[Token(Token = "0x6000457")]
		[Address(RVA = "0x10B24D0", Offset = "0x10B24D0", VA = "0x10B24D0")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000456")]
		[Address(RVA = "0x10B173C", Offset = "0x10B173C", VA = "0x10B173C")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public ushort uNotificationPort
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0x10B253C", Offset = "0x10B253C", VA = "0x10B253C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000458")]
		[Address(RVA = "0x10B17B8", Offset = "0x10B17B8", VA = "0x10B17B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public bool bInitSystemLib
	{
		[Token(Token = "0x600045B")]
		[Address(RVA = "0x10B25A8", Offset = "0x10B25A8", VA = "0x10B25A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600045A")]
		[Address(RVA = "0x10B1834", Offset = "0x10B1834", VA = "0x10B1834")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public string szAppNetworkName
	{
		[Token(Token = "0x600045D")]
		[Address(RVA = "0x10B2614", Offset = "0x10B2614", VA = "0x10B2614")]
		get
		{
			return null;
		}
		[Token(Token = "0x600045C")]
		[Address(RVA = "0x10B18B0", Offset = "0x10B18B0", VA = "0x10B18B0")]
		set
		{
		}
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x10B2198", Offset = "0x10B2198", VA = "0x10B2198")]
	internal AkCommunicationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x10B21D8", Offset = "0x10B21D8", VA = "0x10B21D8")]
	internal static IntPtr getCPtr(AkCommunicationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x10B2228", Offset = "0x10B2228", VA = "0x10B2228", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x10B225C", Offset = "0x10B225C", VA = "0x10B225C", Slot = "1")]
	~AkCommunicationSettings()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x10B22CC", Offset = "0x10B22CC", VA = "0x10B22CC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x10AC6FC", Offset = "0x10AC6FC", VA = "0x10AC6FC")]
	public AkCommunicationSettings()
	{
	}
}
[Token(Token = "0x20000BC")]
public enum AkMemPoolAttributes
{
	[Token(Token = "0x40003CB")]
	AkNoAlloc = 0,
	[Token(Token = "0x40003CC")]
	AkMalloc = 1,
	[Token(Token = "0x40003CD")]
	AkAllocMask = 1,
	[Token(Token = "0x40003CE")]
	AkFixedSizeBlocksMode = 8,
	[Token(Token = "0x40003CF")]
	AkBlockMgmtMask = 8
}
[Token(Token = "0x20000BD")]
public class AkPlatformInitSettings : IDisposable
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700004B")]
	public AkThreadProperties threadLEngine
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0x120767C", Offset = "0x120767C", VA = "0x120767C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000463")]
		[Address(RVA = "0x12075EC", Offset = "0x12075EC", VA = "0x12075EC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public AkThreadProperties threadOutputMgr
	{
		[Token(Token = "0x6000466")]
		[Address(RVA = "0x12077BC", Offset = "0x12077BC", VA = "0x12077BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000465")]
		[Address(RVA = "0x120772C", Offset = "0x120772C", VA = "0x120772C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public AkThreadProperties threadBankManager
	{
		[Token(Token = "0x6000468")]
		[Address(RVA = "0x12078FC", Offset = "0x12078FC", VA = "0x12078FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000467")]
		[Address(RVA = "0x120786C", Offset = "0x120786C", VA = "0x120786C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public AkThreadProperties threadMonitor
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0x1207A3C", Offset = "0x1207A3C", VA = "0x1207A3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000469")]
		[Address(RVA = "0x12079AC", Offset = "0x12079AC", VA = "0x12079AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float fLEngineDefaultPoolRatioThreshold
	{
		[Token(Token = "0x600046C")]
		[Address(RVA = "0x1207B68", Offset = "0x1207B68", VA = "0x1207B68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600046B")]
		[Address(RVA = "0x1207AEC", Offset = "0x1207AEC", VA = "0x1207AEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public uint uLEngineDefaultPoolSize
	{
		[Token(Token = "0x600046E")]
		[Address(RVA = "0x1207C50", Offset = "0x1207C50", VA = "0x1207C50")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600046D")]
		[Address(RVA = "0x1207BD4", Offset = "0x1207BD4", VA = "0x1207BD4")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public AkAudioAPI eAudioAPI
	{
		[Token(Token = "0x6000470")]
		[Address(RVA = "0x1207D38", Offset = "0x1207D38", VA = "0x1207D38")]
		get
		{
			return default(AkAudioAPI);
		}
		[Token(Token = "0x600046F")]
		[Address(RVA = "0x1207CBC", Offset = "0x1207CBC", VA = "0x1207CBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public uint uSampleRate
	{
		[Token(Token = "0x6000472")]
		[Address(RVA = "0x1207E20", Offset = "0x1207E20", VA = "0x1207E20")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000471")]
		[Address(RVA = "0x1207DA4", Offset = "0x1207DA4", VA = "0x1207DA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public ushort uNumRefillsInVoice
	{
		[Token(Token = "0x6000474")]
		[Address(RVA = "0x1207F08", Offset = "0x1207F08", VA = "0x1207F08")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000473")]
		[Address(RVA = "0x1207E8C", Offset = "0x1207E8C", VA = "0x1207E8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public uint uChannelMask
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0x1207FF0", Offset = "0x1207FF0", VA = "0x1207FF0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000475")]
		[Address(RVA = "0x1207F74", Offset = "0x1207F74", VA = "0x1207F74")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public bool bRoundFrameSizeToHWSize
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0x12080D8", Offset = "0x12080D8", VA = "0x12080D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000477")]
		[Address(RVA = "0x120805C", Offset = "0x120805C", VA = "0x120805C")]
		set
		{
		}
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x11FBA34", Offset = "0x11FBA34", VA = "0x11FBA34")]
	internal AkPlatformInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x11FB934", Offset = "0x11FB934", VA = "0x11FB934")]
	internal static IntPtr getCPtr(AkPlatformInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x120741C", Offset = "0x120741C", VA = "0x120741C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1207450", Offset = "0x1207450", VA = "0x1207450", Slot = "1")]
	~AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x12074C0", Offset = "0x12074C0", VA = "0x12074C0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x1208144", Offset = "0x1208144", VA = "0x1208144")]
	public AkPlatformInitSettings()
	{
	}
}
[Token(Token = "0x20000BE")]
internal class AkSoundEnginePINVOKE
{
	[Token(Token = "0x600047A")]
	[Address(RVA = "0xDC113C", Offset = "0xDC113C", VA = "0xDC113C")]
	static AkSoundEnginePINVOKE()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600047B")]
	[Address(RVA = "0xDA5C18", Offset = "0xDA5C18", VA = "0xDA5C18")]
	public static extern uint CSharp_AK_SOUNDBANK_VERSION_get();

	[PreserveSig]
	[Token(Token = "0x600047C")]
	[Address(RVA = "0xDC1140", Offset = "0xDC1140", VA = "0xDC1140")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600047D")]
	[Address(RVA = "0xDC11D0", Offset = "0xDC11D0", VA = "0xDC11D0")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600047E")]
	[Address(RVA = "0xDC1250", Offset = "0xDC1250", VA = "0xDC1250")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerSecond_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600047F")]
	[Address(RVA = "0xDC12E0", Offset = "0xDC12E0", VA = "0xDC12E0")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerSecond_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000480")]
	[Address(RVA = "0xDC1360", Offset = "0xDC1360", VA = "0xDC1360")]
	public static extern IntPtr CSharp_new_AkAudioSettings();

	[PreserveSig]
	[Token(Token = "0x6000481")]
	[Address(RVA = "0xDC13D4", Offset = "0xDC13D4", VA = "0xDC13D4")]
	public static extern void CSharp_delete_AkAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000482")]
	[Address(RVA = "0xDC1454", Offset = "0xDC1454", VA = "0xDC1454")]
	public static extern void CSharp_AkVector_Zero(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000483")]
	[Address(RVA = "0xDC14D4", Offset = "0xDC14D4", VA = "0xDC14D4")]
	public static extern void CSharp_AkVector_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000484")]
	[Address(RVA = "0xDC1564", Offset = "0xDC1564", VA = "0xDC1564")]
	public static extern float CSharp_AkVector_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000485")]
	[Address(RVA = "0xDC15E4", Offset = "0xDC15E4", VA = "0xDC15E4")]
	public static extern void CSharp_AkVector_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000486")]
	[Address(RVA = "0xDC1674", Offset = "0xDC1674", VA = "0xDC1674")]
	public static extern float CSharp_AkVector_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000487")]
	[Address(RVA = "0xDC16F4", Offset = "0xDC16F4", VA = "0xDC16F4")]
	public static extern void CSharp_AkVector_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000488")]
	[Address(RVA = "0xDC1784", Offset = "0xDC1784", VA = "0xDC1784")]
	public static extern float CSharp_AkVector_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000489")]
	[Address(RVA = "0xDC1804", Offset = "0xDC1804", VA = "0xDC1804")]
	public static extern IntPtr CSharp_new_AkVector();

	[PreserveSig]
	[Token(Token = "0x600048A")]
	[Address(RVA = "0xDC1878", Offset = "0xDC1878", VA = "0xDC1878")]
	public static extern void CSharp_delete_AkVector(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600048B")]
	[Address(RVA = "0xDC18F8", Offset = "0xDC18F8", VA = "0xDC18F8")]
	public static extern IntPtr CSharp_AkTransform_Position(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600048C")]
	[Address(RVA = "0xDC1978", Offset = "0xDC1978", VA = "0xDC1978")]
	public static extern IntPtr CSharp_AkTransform_OrientationFront(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600048D")]
	[Address(RVA = "0xDC19F8", Offset = "0xDC19F8", VA = "0xDC19F8")]
	public static extern IntPtr CSharp_AkTransform_OrientationTop(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600048E")]
	[Address(RVA = "0xDC1A78", Offset = "0xDC1A78", VA = "0xDC1A78")]
	public static extern void CSharp_AkTransform_Set__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x600048F")]
	[Address(RVA = "0xDC1B20", Offset = "0xDC1B20", VA = "0xDC1B20")]
	public static extern void CSharp_AkTransform_Set__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6000490")]
	[Address(RVA = "0xDC1C08", Offset = "0xDC1C08", VA = "0xDC1C08")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000491")]
	[Address(RVA = "0xDC1C98", Offset = "0xDC1C98", VA = "0xDC1C98")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000492")]
	[Address(RVA = "0xDC1D40", Offset = "0xDC1D40", VA = "0xDC1D40")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000493")]
	[Address(RVA = "0xDC1DD8", Offset = "0xDC1DD8", VA = "0xDC1DD8")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

	[PreserveSig]
	[Token(Token = "0x6000494")]
	[Address(RVA = "0xDC1EA0", Offset = "0xDC1EA0", VA = "0xDC1EA0")]
	public static extern IntPtr CSharp_new_AkTransform();

	[PreserveSig]
	[Token(Token = "0x6000495")]
	[Address(RVA = "0xDC1F14", Offset = "0xDC1F14", VA = "0xDC1F14")]
	public static extern void CSharp_delete_AkTransform(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000496")]
	[Address(RVA = "0xDC1F94", Offset = "0xDC1F94", VA = "0xDC1F94")]
	public static extern void CSharp_AkObstructionOcclusionValues_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000497")]
	[Address(RVA = "0xDC2024", Offset = "0xDC2024", VA = "0xDC2024")]
	public static extern float CSharp_AkObstructionOcclusionValues_occlusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000498")]
	[Address(RVA = "0xDC20A4", Offset = "0xDC20A4", VA = "0xDC20A4")]
	public static extern void CSharp_AkObstructionOcclusionValues_obstruction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000499")]
	[Address(RVA = "0xDC2134", Offset = "0xDC2134", VA = "0xDC2134")]
	public static extern float CSharp_AkObstructionOcclusionValues_obstruction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600049A")]
	[Address(RVA = "0xDC21B4", Offset = "0xDC21B4", VA = "0xDC21B4")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600049B")]
	[Address(RVA = "0xDC2234", Offset = "0xDC2234", VA = "0xDC2234")]
	public static extern int CSharp_AkObstructionOcclusionValues_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600049C")]
	[Address(RVA = "0xDC22A8", Offset = "0xDC22A8", VA = "0xDC22A8")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600049D")]
	[Address(RVA = "0xDC2338", Offset = "0xDC2338", VA = "0xDC2338")]
	public static extern IntPtr CSharp_new_AkObstructionOcclusionValues();

	[PreserveSig]
	[Token(Token = "0x600049E")]
	[Address(RVA = "0xDC23AC", Offset = "0xDC23AC", VA = "0xDC23AC")]
	public static extern void CSharp_delete_AkObstructionOcclusionValues(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600049F")]
	[Address(RVA = "0xDC242C", Offset = "0xDC242C", VA = "0xDC242C")]
	public static extern void CSharp_AkChannelEmitter_position_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xDC24BC", Offset = "0xDC24BC", VA = "0xDC24BC")]
	public static extern IntPtr CSharp_AkChannelEmitter_position_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xDC253C", Offset = "0xDC253C", VA = "0xDC253C")]
	public static extern void CSharp_AkChannelEmitter_uInputChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xDC25CC", Offset = "0xDC25CC", VA = "0xDC25CC")]
	public static extern uint CSharp_AkChannelEmitter_uInputChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xDC264C", Offset = "0xDC264C", VA = "0xDC264C")]
	public static extern void CSharp_delete_AkChannelEmitter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xDC26CC", Offset = "0xDC26CC", VA = "0xDC26CC")]
	public static extern void CSharp_AkAuxSendValue_listenerID_set(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xDC275C", Offset = "0xDC275C", VA = "0xDC275C")]
	public static extern ulong CSharp_AkAuxSendValue_listenerID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xDC27DC", Offset = "0xDC27DC", VA = "0xDC27DC")]
	public static extern void CSharp_AkAuxSendValue_auxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xDC286C", Offset = "0xDC286C", VA = "0xDC286C")]
	public static extern uint CSharp_AkAuxSendValue_auxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xDC28EC", Offset = "0xDC28EC", VA = "0xDC28EC")]
	public static extern void CSharp_AkAuxSendValue_fControlValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xDC297C", Offset = "0xDC297C", VA = "0xDC297C")]
	public static extern float CSharp_AkAuxSendValue_fControlValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xDC29FC", Offset = "0xDC29FC", VA = "0xDC29FC")]
	public static extern void CSharp_AkAuxSendValue_Set(IntPtr jarg1, ulong jarg2, uint jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xDC2AA4", Offset = "0xDC2AA4", VA = "0xDC2AA4")]
	public static extern bool CSharp_AkAuxSendValue_IsSame(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xDC2B44", Offset = "0xDC2B44", VA = "0xDC2B44")]
	public static extern int CSharp_AkAuxSendValue_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xDC2BB8", Offset = "0xDC2BB8", VA = "0xDC2BB8")]
	public static extern void CSharp_delete_AkAuxSendValue(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xDC2C38", Offset = "0xDC2C38", VA = "0xDC2C38")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xDC2CAC", Offset = "0xDC2CAC", VA = "0xDC2CAC")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_1(float jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xDC2D3C", Offset = "0xDC2D3C", VA = "0xDC2D3C")]
	public static extern void CSharp_AkRamp_fPrev_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xDC2DCC", Offset = "0xDC2DCC", VA = "0xDC2DCC")]
	public static extern float CSharp_AkRamp_fPrev_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xDC2E4C", Offset = "0xDC2E4C", VA = "0xDC2E4C")]
	public static extern void CSharp_AkRamp_fNext_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xDC2EDC", Offset = "0xDC2EDC", VA = "0xDC2EDC")]
	public static extern float CSharp_AkRamp_fNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xDC2F5C", Offset = "0xDC2F5C", VA = "0xDC2F5C")]
	public static extern void CSharp_delete_AkRamp(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xDA5CE8", Offset = "0xDA5CE8", VA = "0xDA5CE8")]
	public static extern ushort CSharp_AK_INT_get();

	[PreserveSig]
	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xDA5DB8", Offset = "0xDA5DB8", VA = "0xDA5DB8")]
	public static extern ushort CSharp_AK_FLOAT_get();

	[PreserveSig]
	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xDA5E88", Offset = "0xDA5E88", VA = "0xDA5E88")]
	public static extern byte CSharp_AK_INTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xDA5F58", Offset = "0xDA5F58", VA = "0xDA5F58")]
	public static extern byte CSharp_AK_NONINTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xDA6028", Offset = "0xDA6028", VA = "0xDA6028")]
	public static extern uint CSharp_AK_LE_NATIVE_BITSPERSAMPLE_get();

	[PreserveSig]
	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xDA60F8", Offset = "0xDA60F8", VA = "0xDA60F8")]
	public static extern uint CSharp_AK_LE_NATIVE_SAMPLETYPE_get();

	[PreserveSig]
	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xDA61C8", Offset = "0xDA61C8", VA = "0xDA61C8")]
	public static extern uint CSharp_AK_LE_NATIVE_INTERLEAVE_get();

	[PreserveSig]
	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xDC2FDC", Offset = "0xDC2FDC", VA = "0xDC2FDC")]
	public static extern void CSharp_AkAudioFormat_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xDC306C", Offset = "0xDC306C", VA = "0xDC306C")]
	public static extern uint CSharp_AkAudioFormat_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xDC30EC", Offset = "0xDC30EC", VA = "0xDC30EC")]
	public static extern void CSharp_AkAudioFormat_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xDC317C", Offset = "0xDC317C", VA = "0xDC317C")]
	public static extern IntPtr CSharp_AkAudioFormat_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xDC31FC", Offset = "0xDC31FC", VA = "0xDC31FC")]
	public static extern void CSharp_AkAudioFormat_uBitsPerSample_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xDC328C", Offset = "0xDC328C", VA = "0xDC328C")]
	public static extern uint CSharp_AkAudioFormat_uBitsPerSample_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xDC330C", Offset = "0xDC330C", VA = "0xDC330C")]
	public static extern void CSharp_AkAudioFormat_uBlockAlign_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xDC339C", Offset = "0xDC339C", VA = "0xDC339C")]
	public static extern uint CSharp_AkAudioFormat_uBlockAlign_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xDC341C", Offset = "0xDC341C", VA = "0xDC341C")]
	public static extern void CSharp_AkAudioFormat_uTypeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xDC34AC", Offset = "0xDC34AC", VA = "0xDC34AC")]
	public static extern uint CSharp_AkAudioFormat_uTypeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xDC352C", Offset = "0xDC352C", VA = "0xDC352C")]
	public static extern void CSharp_AkAudioFormat_uInterleaveID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xDC35BC", Offset = "0xDC35BC", VA = "0xDC35BC")]
	public static extern uint CSharp_AkAudioFormat_uInterleaveID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xDC363C", Offset = "0xDC363C", VA = "0xDC363C")]
	public static extern uint CSharp_AkAudioFormat_GetNumChannels(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xDC36BC", Offset = "0xDC36BC", VA = "0xDC36BC")]
	public static extern uint CSharp_AkAudioFormat_GetBitsPerSample(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xDC373C", Offset = "0xDC373C", VA = "0xDC373C")]
	public static extern uint CSharp_AkAudioFormat_GetBlockAlign(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xDC37BC", Offset = "0xDC37BC", VA = "0xDC37BC")]
	public static extern uint CSharp_AkAudioFormat_GetTypeID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xDC383C", Offset = "0xDC383C", VA = "0xDC383C")]
	public static extern uint CSharp_AkAudioFormat_GetInterleaveID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xDC38BC", Offset = "0xDC38BC", VA = "0xDC38BC")]
	public static extern void CSharp_AkAudioFormat_SetAll(IntPtr jarg1, uint jarg2, IntPtr jarg3, uint jarg4, uint jarg5, uint jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xDC3984", Offset = "0xDC3984", VA = "0xDC3984")]
	public static extern bool CSharp_AkAudioFormat_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xDC3A0C", Offset = "0xDC3A0C", VA = "0xDC3A0C")]
	public static extern IntPtr CSharp_new_AkAudioFormat();

	[PreserveSig]
	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xDC3A80", Offset = "0xDC3A80", VA = "0xDC3A80")]
	public static extern void CSharp_delete_AkAudioFormat(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xDC3B00", Offset = "0xDC3B00", VA = "0xDC3B00")]
	public static extern void CSharp_AkIterator_pItem_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xDC3B90", Offset = "0xDC3B90", VA = "0xDC3B90")]
	public static extern IntPtr CSharp_AkIterator_pItem_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xDC3C10", Offset = "0xDC3C10", VA = "0xDC3C10")]
	public static extern IntPtr CSharp_AkIterator_NextIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xDC3C90", Offset = "0xDC3C90", VA = "0xDC3C90")]
	public static extern IntPtr CSharp_AkIterator_PrevIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xDC3D10", Offset = "0xDC3D10", VA = "0xDC3D10")]
	public static extern IntPtr CSharp_AkIterator_GetItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xDC3D90", Offset = "0xDC3D90", VA = "0xDC3D90")]
	public static extern bool CSharp_AkIterator_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xDC3E28", Offset = "0xDC3E28", VA = "0xDC3E28")]
	public static extern bool CSharp_AkIterator_IsDifferentFrom(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xDC3EC0", Offset = "0xDC3EC0", VA = "0xDC3EC0")]
	public static extern IntPtr CSharp_new_AkIterator();

	[PreserveSig]
	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xDC3F34", Offset = "0xDC3F34", VA = "0xDC3F34")]
	public static extern void CSharp_delete_AkIterator(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xDC3FB4", Offset = "0xDC3FB4", VA = "0xDC3FB4")]
	public static extern int CSharp__ArrayPoolDefault_Get();

	[PreserveSig]
	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xDC4028", Offset = "0xDC4028", VA = "0xDC4028")]
	public static extern IntPtr CSharp_new__ArrayPoolDefault();

	[PreserveSig]
	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xDC409C", Offset = "0xDC409C", VA = "0xDC409C")]
	public static extern void CSharp_delete__ArrayPoolDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xDC411C", Offset = "0xDC411C", VA = "0xDC411C")]
	public static extern int CSharp__ArrayPoolLEngineDefault_Get();

	[PreserveSig]
	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xDC4190", Offset = "0xDC4190", VA = "0xDC4190")]
	public static extern IntPtr CSharp_new__ArrayPoolLEngineDefault();

	[PreserveSig]
	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xDC4204", Offset = "0xDC4204", VA = "0xDC4204")]
	public static extern void CSharp_delete__ArrayPoolLEngineDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xDC4284", Offset = "0xDC4284", VA = "0xDC4284")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xDC42F8", Offset = "0xDC42F8", VA = "0xDC42F8")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xDC4378", Offset = "0xDC4378", VA = "0xDC4378")]
	public static extern void CSharp_delete_AkPlaylistItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xDC43F8", Offset = "0xDC43F8", VA = "0xDC43F8")]
	public static extern IntPtr CSharp_AkPlaylistItem_Assign(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xDC4488", Offset = "0xDC4488", VA = "0xDC4488")]
	public static extern bool CSharp_AkPlaylistItem_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xDC4520", Offset = "0xDC4520", VA = "0xDC4520")]
	public static extern int CSharp_AkPlaylistItem_SetExternalSources(IntPtr jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xDC45B8", Offset = "0xDC45B8", VA = "0xDC45B8")]
	public static extern void CSharp_AkPlaylistItem_audioNodeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xDC4648", Offset = "0xDC4648", VA = "0xDC4648")]
	public static extern uint CSharp_AkPlaylistItem_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xDC46C8", Offset = "0xDC46C8", VA = "0xDC46C8")]
	public static extern void CSharp_AkPlaylistItem_msDelay_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xDC4758", Offset = "0xDC4758", VA = "0xDC4758")]
	public static extern int CSharp_AkPlaylistItem_msDelay_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xDC47D8", Offset = "0xDC47D8", VA = "0xDC47D8")]
	public static extern void CSharp_AkPlaylistItem_pCustomInfo_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xDC4868", Offset = "0xDC4868", VA = "0xDC4868")]
	public static extern IntPtr CSharp_AkPlaylistItem_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xDC48E8", Offset = "0xDC48E8", VA = "0xDC48E8")]
	public static extern IntPtr CSharp_new_AkPlaylistArray();

	[PreserveSig]
	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xDC495C", Offset = "0xDC495C", VA = "0xDC495C")]
	public static extern void CSharp_delete_AkPlaylistArray(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xDC49DC", Offset = "0xDC49DC", VA = "0xDC49DC")]
	public static extern IntPtr CSharp_AkPlaylistArray_Begin(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xDC4A5C", Offset = "0xDC4A5C", VA = "0xDC4A5C")]
	public static extern IntPtr CSharp_AkPlaylistArray_End(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xDC4ADC", Offset = "0xDC4ADC", VA = "0xDC4ADC")]
	public static extern IntPtr CSharp_AkPlaylistArray_FindEx(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xDC4B6C", Offset = "0xDC4B6C", VA = "0xDC4B6C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Erase__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xDC4BFC", Offset = "0xDC4BFC", VA = "0xDC4BFC")]
	public static extern void CSharp_AkPlaylistArray_Erase__SWIG_1(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xDC4C8C", Offset = "0xDC4C8C", VA = "0xDC4C8C")]
	public static extern IntPtr CSharp_AkPlaylistArray_EraseSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xDC4D1C", Offset = "0xDC4D1C", VA = "0xDC4D1C")]
	public static extern int CSharp_AkPlaylistArray_Reserve(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xDC4DAC", Offset = "0xDC4DAC", VA = "0xDC4DAC")]
	public static extern uint CSharp_AkPlaylistArray_Reserved(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xDC4E2C", Offset = "0xDC4E2C", VA = "0xDC4E2C")]
	public static extern void CSharp_AkPlaylistArray_Term(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xDC4EAC", Offset = "0xDC4EAC", VA = "0xDC4EAC")]
	public static extern uint CSharp_AkPlaylistArray_Length(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xDC4F2C", Offset = "0xDC4F2C", VA = "0xDC4F2C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Data(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xDC4FAC", Offset = "0xDC4FAC", VA = "0xDC4FAC")]
	public static extern bool CSharp_AkPlaylistArray_IsEmpty(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xDC5034", Offset = "0xDC5034", VA = "0xDC5034")]
	public static extern IntPtr CSharp_AkPlaylistArray_Exists(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xDC50C4", Offset = "0xDC50C4", VA = "0xDC50C4")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_0(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xDC5144", Offset = "0xDC5144", VA = "0xDC5144")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_1(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xDC51D4", Offset = "0xDC51D4", VA = "0xDC51D4")]
	public static extern IntPtr CSharp_AkPlaylistArray_Last(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xDC5254", Offset = "0xDC5254", VA = "0xDC5254")]
	public static extern void CSharp_AkPlaylistArray_RemoveLast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xDC52D4", Offset = "0xDC52D4", VA = "0xDC52D4")]
	public static extern int CSharp_AkPlaylistArray_Remove(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000500")]
	[Address(RVA = "0xDC5364", Offset = "0xDC5364", VA = "0xDC5364")]
	public static extern int CSharp_AkPlaylistArray_RemoveSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000501")]
	[Address(RVA = "0xDC53F4", Offset = "0xDC53F4", VA = "0xDC53F4")]
	public static extern void CSharp_AkPlaylistArray_RemoveAll(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000502")]
	[Address(RVA = "0xDC5474", Offset = "0xDC5474", VA = "0xDC5474")]
	public static extern IntPtr CSharp_AkPlaylistArray_ItemAtIndex(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000503")]
	[Address(RVA = "0xDC5504", Offset = "0xDC5504", VA = "0xDC5504")]
	public static extern IntPtr CSharp_AkPlaylistArray_Insert(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000504")]
	[Address(RVA = "0xDC5594", Offset = "0xDC5594", VA = "0xDC5594")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_0(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000505")]
	[Address(RVA = "0xDC562C", Offset = "0xDC562C", VA = "0xDC562C")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000506")]
	[Address(RVA = "0xDC56B4", Offset = "0xDC56B4", VA = "0xDC56B4")]
	public static extern bool CSharp_AkPlaylistArray_Resize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000507")]
	[Address(RVA = "0xDC574C", Offset = "0xDC574C", VA = "0xDC574C")]
	public static extern void CSharp_AkPlaylistArray_Transfer(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000508")]
	[Address(RVA = "0xDC57DC", Offset = "0xDC57DC", VA = "0xDC57DC")]
	public static extern int CSharp_AkPlaylistArray_Copy(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000509")]
	[Address(RVA = "0xDC586C", Offset = "0xDC586C", VA = "0xDC586C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_0(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6);

	[PreserveSig]
	[Token(Token = "0x600050A")]
	[Address(RVA = "0xDC592C", Offset = "0xDC592C", VA = "0xDC592C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_1(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600050B")]
	[Address(RVA = "0xDC59DC", Offset = "0xDC59DC", VA = "0xDC59DC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_2(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x600050C")]
	[Address(RVA = "0xDC5A84", Offset = "0xDC5A84", VA = "0xDC5A84")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600050D")]
	[Address(RVA = "0xDC5B1C", Offset = "0xDC5B1C", VA = "0xDC5B1C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_4(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600050E")]
	[Address(RVA = "0xDC5BAC", Offset = "0xDC5BAC", VA = "0xDC5BAC")]
	public static extern IntPtr CSharp_new_AkPlaylist();

	[PreserveSig]
	[Token(Token = "0x600050F")]
	[Address(RVA = "0xDC5C20", Offset = "0xDC5C20", VA = "0xDC5C20")]
	public static extern void CSharp_delete_AkPlaylist(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000510")]
	[Address(RVA = "0xDA648C", Offset = "0xDA648C", VA = "0xDA648C")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_0(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000511")]
	[Address(RVA = "0xDA6698", Offset = "0xDA6698", VA = "0xDA6698")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_1(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000512")]
	[Address(RVA = "0xDA6818", Offset = "0xDA6818", VA = "0xDA6818")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_2(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000513")]
	[Address(RVA = "0xDA68FC", Offset = "0xDA68FC", VA = "0xDA68FC")]
	public static extern int CSharp_DynamicSequenceClose(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000514")]
	[Address(RVA = "0xDA69F8", Offset = "0xDA69F8", VA = "0xDA69F8")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000515")]
	[Address(RVA = "0xDA6B04", Offset = "0xDA6B04", VA = "0xDA6B04")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000516")]
	[Address(RVA = "0xDA6BF8", Offset = "0xDA6BF8", VA = "0xDA6BF8")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000517")]
	[Address(RVA = "0xDA6CF4", Offset = "0xDA6CF4", VA = "0xDA6CF4")]
	public static extern int CSharp_DynamicSequencePause__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000518")]
	[Address(RVA = "0xDA6E00", Offset = "0xDA6E00", VA = "0xDA6E00")]
	public static extern int CSharp_DynamicSequencePause__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000519")]
	[Address(RVA = "0xDA6EF4", Offset = "0xDA6EF4", VA = "0xDA6EF4")]
	public static extern int CSharp_DynamicSequencePause__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600051A")]
	[Address(RVA = "0xDA6FF0", Offset = "0xDA6FF0", VA = "0xDA6FF0")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600051B")]
	[Address(RVA = "0xDA70FC", Offset = "0xDA70FC", VA = "0xDA70FC")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600051C")]
	[Address(RVA = "0xDA71F0", Offset = "0xDA71F0", VA = "0xDA71F0")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600051D")]
	[Address(RVA = "0xDA72EC", Offset = "0xDA72EC", VA = "0xDA72EC")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600051E")]
	[Address(RVA = "0xDA73F8", Offset = "0xDA73F8", VA = "0xDA73F8")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600051F")]
	[Address(RVA = "0xDA74EC", Offset = "0xDA74EC", VA = "0xDA74EC")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000520")]
	[Address(RVA = "0xDA75D0", Offset = "0xDA75D0", VA = "0xDA75D0")]
	public static extern int CSharp_DynamicSequenceBreak(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000521")]
	[Address(RVA = "0xDA76CC", Offset = "0xDA76CC", VA = "0xDA76CC")]
	public static extern int CSharp_DynamicSequenceGetPauseTimes(uint jarg1, out uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000522")]
	[Address(RVA = "0xDA780C", Offset = "0xDA780C", VA = "0xDA780C")]
	public static extern IntPtr CSharp_DynamicSequenceLockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000523")]
	[Address(RVA = "0xDA78F0", Offset = "0xDA78F0", VA = "0xDA78F0")]
	public static extern int CSharp_DynamicSequenceUnlockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000524")]
	[Address(RVA = "0xDC5CA0", Offset = "0xDC5CA0", VA = "0xDC5CA0")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000525")]
	[Address(RVA = "0xDC5D14", Offset = "0xDC5D14", VA = "0xDC5D14")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_1(string jarg1, uint jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000526")]
	[Address(RVA = "0xDC5DD4", Offset = "0xDC5DD4", VA = "0xDC5DD4")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_2(string jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000527")]
	[Address(RVA = "0xDC5E84", Offset = "0xDC5E84", VA = "0xDC5E84")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_3(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000528")]
	[Address(RVA = "0xDC5F2C", Offset = "0xDC5F2C", VA = "0xDC5F2C")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_4(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000529")]
	[Address(RVA = "0xDC5FC4", Offset = "0xDC5FC4", VA = "0xDC5FC4")]
	public static extern void CSharp_AkOutputSettings_audioDeviceShareset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600052A")]
	[Address(RVA = "0xDC6054", Offset = "0xDC6054", VA = "0xDC6054")]
	public static extern uint CSharp_AkOutputSettings_audioDeviceShareset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600052B")]
	[Address(RVA = "0xDC60D4", Offset = "0xDC60D4", VA = "0xDC60D4")]
	public static extern void CSharp_AkOutputSettings_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600052C")]
	[Address(RVA = "0xDC6164", Offset = "0xDC6164", VA = "0xDC6164")]
	public static extern uint CSharp_AkOutputSettings_idDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600052D")]
	[Address(RVA = "0xDC61E4", Offset = "0xDC61E4", VA = "0xDC61E4")]
	public static extern void CSharp_AkOutputSettings_ePanningRule_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600052E")]
	[Address(RVA = "0xDC6274", Offset = "0xDC6274", VA = "0xDC6274")]
	public static extern int CSharp_AkOutputSettings_ePanningRule_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600052F")]
	[Address(RVA = "0xDC62F4", Offset = "0xDC62F4", VA = "0xDC62F4")]
	public static extern void CSharp_AkOutputSettings_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000530")]
	[Address(RVA = "0xDC6384", Offset = "0xDC6384", VA = "0xDC6384")]
	public static extern IntPtr CSharp_AkOutputSettings_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000531")]
	[Address(RVA = "0xDC6404", Offset = "0xDC6404", VA = "0xDC6404")]
	public static extern void CSharp_delete_AkOutputSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000532")]
	[Address(RVA = "0xDC6484", Offset = "0xDC6484", VA = "0xDC6484")]
	public static extern void CSharp_AkTaskContext_uIdxThread_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000533")]
	[Address(RVA = "0xDC6514", Offset = "0xDC6514", VA = "0xDC6514")]
	public static extern uint CSharp_AkTaskContext_uIdxThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000534")]
	[Address(RVA = "0xDC6594", Offset = "0xDC6594", VA = "0xDC6594")]
	public static extern IntPtr CSharp_new_AkTaskContext();

	[PreserveSig]
	[Token(Token = "0x6000535")]
	[Address(RVA = "0xDC6608", Offset = "0xDC6608", VA = "0xDC6608")]
	public static extern void CSharp_delete_AkTaskContext(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000536")]
	[Address(RVA = "0xDC6688", Offset = "0xDC6688", VA = "0xDC6688")]
	public static extern void CSharp_AkInitSettings_uMaxNumPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000537")]
	[Address(RVA = "0xDC6718", Offset = "0xDC6718", VA = "0xDC6718")]
	public static extern uint CSharp_AkInitSettings_uMaxNumPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000538")]
	[Address(RVA = "0xDC6798", Offset = "0xDC6798", VA = "0xDC6798")]
	public static extern void CSharp_AkInitSettings_uDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000539")]
	[Address(RVA = "0xDC6828", Offset = "0xDC6828", VA = "0xDC6828")]
	public static extern uint CSharp_AkInitSettings_uDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600053A")]
	[Address(RVA = "0xDC68A8", Offset = "0xDC68A8", VA = "0xDC68A8")]
	public static extern void CSharp_AkInitSettings_fDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600053B")]
	[Address(RVA = "0xDC6938", Offset = "0xDC6938", VA = "0xDC6938")]
	public static extern float CSharp_AkInitSettings_fDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600053C")]
	[Address(RVA = "0xDC69B8", Offset = "0xDC69B8", VA = "0xDC69B8")]
	public static extern void CSharp_AkInitSettings_uCommandQueueSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600053D")]
	[Address(RVA = "0xDC6A48", Offset = "0xDC6A48", VA = "0xDC6A48")]
	public static extern uint CSharp_AkInitSettings_uCommandQueueSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600053E")]
	[Address(RVA = "0xDC6AC8", Offset = "0xDC6AC8", VA = "0xDC6AC8")]
	public static extern void CSharp_AkInitSettings_uPrepareEventMemoryPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600053F")]
	[Address(RVA = "0xDC6B58", Offset = "0xDC6B58", VA = "0xDC6B58")]
	public static extern int CSharp_AkInitSettings_uPrepareEventMemoryPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000540")]
	[Address(RVA = "0xDC6BD8", Offset = "0xDC6BD8", VA = "0xDC6BD8")]
	public static extern void CSharp_AkInitSettings_bEnableGameSyncPreparation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000541")]
	[Address(RVA = "0xDC6C68", Offset = "0xDC6C68", VA = "0xDC6C68")]
	public static extern bool CSharp_AkInitSettings_bEnableGameSyncPreparation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000542")]
	[Address(RVA = "0xDC6CF0", Offset = "0xDC6CF0", VA = "0xDC6CF0")]
	public static extern void CSharp_AkInitSettings_uContinuousPlaybackLookAhead_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000543")]
	[Address(RVA = "0xDC6D80", Offset = "0xDC6D80", VA = "0xDC6D80")]
	public static extern uint CSharp_AkInitSettings_uContinuousPlaybackLookAhead_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000544")]
	[Address(RVA = "0xDC6E00", Offset = "0xDC6E00", VA = "0xDC6E00")]
	public static extern void CSharp_AkInitSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000545")]
	[Address(RVA = "0xDC6E90", Offset = "0xDC6E90", VA = "0xDC6E90")]
	public static extern uint CSharp_AkInitSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000546")]
	[Address(RVA = "0xDC6F10", Offset = "0xDC6F10", VA = "0xDC6F10")]
	public static extern void CSharp_AkInitSettings_uMonitorPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000547")]
	[Address(RVA = "0xDC6FA0", Offset = "0xDC6FA0", VA = "0xDC6FA0")]
	public static extern uint CSharp_AkInitSettings_uMonitorPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000548")]
	[Address(RVA = "0xDC7020", Offset = "0xDC7020", VA = "0xDC7020")]
	public static extern void CSharp_AkInitSettings_uMonitorQueuePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000549")]
	[Address(RVA = "0xDC70B0", Offset = "0xDC70B0", VA = "0xDC70B0")]
	public static extern uint CSharp_AkInitSettings_uMonitorQueuePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600054A")]
	[Address(RVA = "0xDC7130", Offset = "0xDC7130", VA = "0xDC7130")]
	public static extern void CSharp_AkInitSettings_settingsMainOutput_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600054B")]
	[Address(RVA = "0xDC71C0", Offset = "0xDC71C0", VA = "0xDC71C0")]
	public static extern IntPtr CSharp_AkInitSettings_settingsMainOutput_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600054C")]
	[Address(RVA = "0xDC7240", Offset = "0xDC7240", VA = "0xDC7240")]
	public static extern void CSharp_AkInitSettings_uMaxHardwareTimeoutMs_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600054D")]
	[Address(RVA = "0xDC72D0", Offset = "0xDC72D0", VA = "0xDC72D0")]
	public static extern uint CSharp_AkInitSettings_uMaxHardwareTimeoutMs_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600054E")]
	[Address(RVA = "0xDC7350", Offset = "0xDC7350", VA = "0xDC7350")]
	public static extern void CSharp_AkInitSettings_bUseSoundBankMgrThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600054F")]
	[Address(RVA = "0xDC73E0", Offset = "0xDC73E0", VA = "0xDC73E0")]
	public static extern bool CSharp_AkInitSettings_bUseSoundBankMgrThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000550")]
	[Address(RVA = "0xDC7468", Offset = "0xDC7468", VA = "0xDC7468")]
	public static extern void CSharp_AkInitSettings_bUseLEngineThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000551")]
	[Address(RVA = "0xDC74F8", Offset = "0xDC74F8", VA = "0xDC74F8")]
	public static extern bool CSharp_AkInitSettings_bUseLEngineThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000552")]
	[Address(RVA = "0xDC7580", Offset = "0xDC7580", VA = "0xDC7580")]
	public static extern void CSharp_AkInitSettings_szPluginDLLPath_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000553")]
	[Address(RVA = "0xDC7624", Offset = "0xDC7624", VA = "0xDC7624")]
	public static extern IntPtr CSharp_AkInitSettings_szPluginDLLPath_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000554")]
	[Address(RVA = "0xDC76A4", Offset = "0xDC76A4", VA = "0xDC76A4")]
	public static extern void CSharp_AkInitSettings_eFloorPlane_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000555")]
	[Address(RVA = "0xDC7734", Offset = "0xDC7734", VA = "0xDC7734")]
	public static extern int CSharp_AkInitSettings_eFloorPlane_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000556")]
	[Address(RVA = "0xDC77B4", Offset = "0xDC77B4", VA = "0xDC77B4")]
	public static extern void CSharp_AkInitSettings_fDebugOutOfRangeLimit_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000557")]
	[Address(RVA = "0xDC7844", Offset = "0xDC7844", VA = "0xDC7844")]
	public static extern float CSharp_AkInitSettings_fDebugOutOfRangeLimit_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000558")]
	[Address(RVA = "0xDC78C4", Offset = "0xDC78C4", VA = "0xDC78C4")]
	public static extern void CSharp_AkInitSettings_bDebugOutOfRangeCheckEnabled_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000559")]
	[Address(RVA = "0xDC7954", Offset = "0xDC7954", VA = "0xDC7954")]
	public static extern bool CSharp_AkInitSettings_bDebugOutOfRangeCheckEnabled_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600055A")]
	[Address(RVA = "0xDC79DC", Offset = "0xDC79DC", VA = "0xDC79DC")]
	public static extern IntPtr CSharp_new_AkInitSettings();

	[PreserveSig]
	[Token(Token = "0x600055B")]
	[Address(RVA = "0xDC7A50", Offset = "0xDC7A50", VA = "0xDC7A50")]
	public static extern void CSharp_delete_AkInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600055C")]
	[Address(RVA = "0xDC7AD0", Offset = "0xDC7AD0", VA = "0xDC7AD0")]
	public static extern void CSharp_AkSourceSettings_sourceID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600055D")]
	[Address(RVA = "0xDC7B60", Offset = "0xDC7B60", VA = "0xDC7B60")]
	public static extern uint CSharp_AkSourceSettings_sourceID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600055E")]
	[Address(RVA = "0xDC7BE0", Offset = "0xDC7BE0", VA = "0xDC7BE0")]
	public static extern void CSharp_AkSourceSettings_pMediaMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600055F")]
	[Address(RVA = "0xDC7C70", Offset = "0xDC7C70", VA = "0xDC7C70")]
	public static extern IntPtr CSharp_AkSourceSettings_pMediaMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000560")]
	[Address(RVA = "0xDC7CF0", Offset = "0xDC7CF0", VA = "0xDC7CF0")]
	public static extern void CSharp_AkSourceSettings_uMediaSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000561")]
	[Address(RVA = "0xDC7D80", Offset = "0xDC7D80", VA = "0xDC7D80")]
	public static extern uint CSharp_AkSourceSettings_uMediaSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000562")]
	[Address(RVA = "0xDC7E00", Offset = "0xDC7E00", VA = "0xDC7E00")]
	public static extern void CSharp_AkSourceSettings_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000563")]
	[Address(RVA = "0xDC7E80", Offset = "0xDC7E80", VA = "0xDC7E80")]
	public static extern int CSharp_AkSourceSettings_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000564")]
	[Address(RVA = "0xDC7EF4", Offset = "0xDC7EF4", VA = "0xDC7EF4")]
	public static extern void CSharp_AkSourceSettings_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000565")]
	[Address(RVA = "0xDC7F84", Offset = "0xDC7F84", VA = "0xDC7F84")]
	public static extern IntPtr CSharp_new_AkSourceSettings();

	[PreserveSig]
	[Token(Token = "0x6000566")]
	[Address(RVA = "0xDC7FF8", Offset = "0xDC7FF8", VA = "0xDC7FF8")]
	public static extern void CSharp_delete_AkSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000567")]
	[Address(RVA = "0xDA79CC", Offset = "0xDA79CC", VA = "0xDA79CC")]
	public static extern bool CSharp_IsInitialized();

	[PreserveSig]
	[Token(Token = "0x6000568")]
	[Address(RVA = "0xDA7AC0", Offset = "0xDA7AC0", VA = "0xDA7AC0")]
	public static extern int CSharp_GetAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000569")]
	[Address(RVA = "0xDA7BD8", Offset = "0xDA7BD8", VA = "0xDA7BD8")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600056A")]
	[Address(RVA = "0xDA7CE8", Offset = "0xDA7CE8", VA = "0xDA7CE8")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x600056B")]
	[Address(RVA = "0xDA7DD0", Offset = "0xDA7DD0", VA = "0xDA7DD0")]
	public static extern int CSharp_GetPanningRule__SWIG_0(out int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600056C")]
	[Address(RVA = "0xDA7EC4", Offset = "0xDA7EC4", VA = "0xDA7EC4")]
	public static extern int CSharp_GetPanningRule__SWIG_1(out int jarg1);

	[PreserveSig]
	[Token(Token = "0x600056D")]
	[Address(RVA = "0xDA7FB8", Offset = "0xDA7FB8", VA = "0xDA7FB8")]
	public static extern int CSharp_SetPanningRule__SWIG_0(int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600056E")]
	[Address(RVA = "0xDA80AC", Offset = "0xDA80AC", VA = "0xDA80AC")]
	public static extern int CSharp_SetPanningRule__SWIG_1(int jarg1);

	[PreserveSig]
	[Token(Token = "0x600056F")]
	[Address(RVA = "0xDA81B8", Offset = "0xDA81B8", VA = "0xDA81B8")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_0([In][Out] float[] jarg1, ref uint jarg2, out float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000570")]
	[Address(RVA = "0xDA82E4", Offset = "0xDA82E4", VA = "0xDA82E4")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_1([In][Out] float[] jarg1, ref uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000571")]
	[Address(RVA = "0xDA8410", Offset = "0xDA8410", VA = "0xDA8410")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_0([In] float[] jarg1, uint jarg2, float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000572")]
	[Address(RVA = "0xDA8544", Offset = "0xDA8544", VA = "0xDA8544")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_1([In] float[] jarg1, uint jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000573")]
	[Address(RVA = "0xDA8658", Offset = "0xDA8658", VA = "0xDA8658")]
	public static extern int CSharp_SetVolumeThreshold(float jarg1);

	[PreserveSig]
	[Token(Token = "0x6000574")]
	[Address(RVA = "0xDA8744", Offset = "0xDA8744", VA = "0xDA8744")]
	public static extern int CSharp_SetMaxNumVoicesLimit(ushort jarg1);

	[PreserveSig]
	[Token(Token = "0x6000575")]
	[Address(RVA = "0xDA8828", Offset = "0xDA8828", VA = "0xDA8828")]
	public static extern int CSharp_RenderAudio__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000576")]
	[Address(RVA = "0xDA8904", Offset = "0xDA8904", VA = "0xDA8904")]
	public static extern int CSharp_RenderAudio__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000577")]
	[Address(RVA = "0xDA89EC", Offset = "0xDA89EC", VA = "0xDA89EC")]
	public static extern int CSharp_RegisterPluginDLL__SWIG_0(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000578")]
	[Address(RVA = "0xDA8B10", Offset = "0xDA8B10", VA = "0xDA8B10")]
	public static extern int CSharp_RegisterPluginDLL__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000579")]
	[Address(RVA = "0xDA8C0C", Offset = "0xDA8C0C", VA = "0xDA8C0C")]
	public static extern uint CSharp_GetIDFromString(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600057A")]
	[Address(RVA = "0xDA8E3C", Offset = "0xDA8E3C", VA = "0xDA8E3C")]
	public static extern uint CSharp_PostEvent__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x600057B")]
	[Address(RVA = "0xDA909C", Offset = "0xDA909C", VA = "0xDA909C")]
	public static extern uint CSharp_PostEvent__SWIG_1(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x600057C")]
	[Address(RVA = "0xDA92C8", Offset = "0xDA92C8", VA = "0xDA92C8")]
	public static extern uint CSharp_PostEvent__SWIG_2(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x600057D")]
	[Address(RVA = "0xDA9460", Offset = "0xDA9460", VA = "0xDA9460")]
	public static extern uint CSharp_PostEvent__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600057E")]
	[Address(RVA = "0xDA9688", Offset = "0xDA9688", VA = "0xDA9688")]
	public static extern uint CSharp_PostEvent__SWIG_4(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x600057F")]
	[Address(RVA = "0xDA9900", Offset = "0xDA9900", VA = "0xDA9900")]
	public static extern uint CSharp_PostEvent__SWIG_5(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000580")]
	[Address(RVA = "0xDA9B44", Offset = "0xDA9B44", VA = "0xDA9B44")]
	public static extern uint CSharp_PostEvent__SWIG_6(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000581")]
	[Address(RVA = "0xDA9CF4", Offset = "0xDA9CF4", VA = "0xDA9CF4")]
	public static extern uint CSharp_PostEvent__SWIG_7(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000582")]
	[Address(RVA = "0xDA9E78", Offset = "0xDA9E78", VA = "0xDA9E78")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_0(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000583")]
	[Address(RVA = "0xDAA004", Offset = "0xDAA004", VA = "0xDAA004")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_1(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000584")]
	[Address(RVA = "0xDAA178", Offset = "0xDAA178", VA = "0xDAA178")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_2(uint jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000585")]
	[Address(RVA = "0xDAA2D4", Offset = "0xDAA2D4", VA = "0xDAA2D4")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_3(uint jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000586")]
	[Address(RVA = "0xDAA3E0", Offset = "0xDAA3E0", VA = "0xDAA3E0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_4(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000587")]
	[Address(RVA = "0xDAA54C", Offset = "0xDAA54C", VA = "0xDAA54C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_5(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000588")]
	[Address(RVA = "0xDAA6F0", Offset = "0xDAA6F0", VA = "0xDAA6F0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_6(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000589")]
	[Address(RVA = "0xDAA87C", Offset = "0xDAA87C", VA = "0xDAA87C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_7(string jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x600058A")]
	[Address(RVA = "0xDAA9F0", Offset = "0xDAA9F0", VA = "0xDAA9F0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_8(string jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x600058B")]
	[Address(RVA = "0xDAAB14", Offset = "0xDAAB14", VA = "0xDAAB14")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_9(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600058C")]
	[Address(RVA = "0xDAAC8C", Offset = "0xDAAC8C", VA = "0xDAAC8C")]
	public static extern int CSharp_PostMIDIOnEvent(uint jarg1, ulong jarg2, IntPtr jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x600058D")]
	[Address(RVA = "0xDAADE0", Offset = "0xDAADE0", VA = "0xDAADE0")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600058E")]
	[Address(RVA = "0xDAAED4", Offset = "0xDAAED4", VA = "0xDAAED4")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600058F")]
	[Address(RVA = "0xDAAFB0", Offset = "0xDAAFB0", VA = "0xDAAFB0")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_2();

	[PreserveSig]
	[Token(Token = "0x6000590")]
	[Address(RVA = "0xDAB0A0", Offset = "0xDAB0A0", VA = "0xDAB0A0")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_0(uint jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6000591")]
	[Address(RVA = "0xDAB1B4", Offset = "0xDAB1B4", VA = "0xDAB1B4")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_1(string jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6000592")]
	[Address(RVA = "0xDAB2C8", Offset = "0xDAB2C8", VA = "0xDAB2C8")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_0(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000593")]
	[Address(RVA = "0xDAB3AC", Offset = "0xDAB3AC", VA = "0xDAB3AC")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000594")]
	[Address(RVA = "0xDAB4C0", Offset = "0xDAB4C0", VA = "0xDAB4C0")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_0(uint jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000595")]
	[Address(RVA = "0xDAB5D4", Offset = "0xDAB5D4", VA = "0xDAB5D4")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_1(string jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000596")]
	[Address(RVA = "0xDAB750", Offset = "0xDAB750", VA = "0xDAB750")]
	public static extern int CSharp_SeekOnEvent__SWIG_0(uint jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000597")]
	[Address(RVA = "0xDAB8C4", Offset = "0xDAB8C4", VA = "0xDAB8C4")]
	public static extern int CSharp_SeekOnEvent__SWIG_1(uint jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000598")]
	[Address(RVA = "0xDABA20", Offset = "0xDABA20", VA = "0xDABA20")]
	public static extern int CSharp_SeekOnEvent__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000599")]
	[Address(RVA = "0xDABB84", Offset = "0xDABB84", VA = "0xDABB84")]
	public static extern int CSharp_SeekOnEvent__SWIG_3(string jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600059A")]
	[Address(RVA = "0xDABD10", Offset = "0xDABD10", VA = "0xDABD10")]
	public static extern int CSharp_SeekOnEvent__SWIG_4(string jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x600059B")]
	[Address(RVA = "0xDABE84", Offset = "0xDABE84", VA = "0xDABE84")]
	public static extern int CSharp_SeekOnEvent__SWIG_5(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600059C")]
	[Address(RVA = "0xDAC008", Offset = "0xDAC008", VA = "0xDAC008")]
	public static extern int CSharp_SeekOnEvent__SWIG_6(uint jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600059D")]
	[Address(RVA = "0xDAC184", Offset = "0xDAC184", VA = "0xDAC184")]
	public static extern int CSharp_SeekOnEvent__SWIG_7(uint jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x600059E")]
	[Address(RVA = "0xDAC2E8", Offset = "0xDAC2E8", VA = "0xDAC2E8")]
	public static extern int CSharp_SeekOnEvent__SWIG_8(uint jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600059F")]
	[Address(RVA = "0xDAC45C", Offset = "0xDAC45C", VA = "0xDAC45C")]
	public static extern int CSharp_SeekOnEvent__SWIG_9(string jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xDAC5F0", Offset = "0xDAC5F0", VA = "0xDAC5F0")]
	public static extern int CSharp_SeekOnEvent__SWIG_10(string jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xDAC76C", Offset = "0xDAC76C", VA = "0xDAC76C")]
	public static extern int CSharp_SeekOnEvent__SWIG_11(string jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xDC8078", Offset = "0xDC8078", VA = "0xDC8078")]
	public static extern void CSharp_CancelEventCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xDAC928", Offset = "0xDAC928", VA = "0xDAC928")]
	public static extern void CSharp_CancelEventCallbackGameObject(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xDC80F8", Offset = "0xDC80F8", VA = "0xDC80F8")]
	public static extern void CSharp_CancelEventCallback(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xDACA8C", Offset = "0xDACA8C", VA = "0xDACA8C")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_0(uint jarg1, out int jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xDACB98", Offset = "0xDACB98", VA = "0xDACB98")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_1(uint jarg1, out int jarg2);

	[PreserveSig]
	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xDACCA4", Offset = "0xDACCA4", VA = "0xDACCA4")]
	public static extern int CSharp_GetSourceStreamBuffering(uint jarg1, out int jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xDACDD8", Offset = "0xDACDD8", VA = "0xDACDD8")]
	public static extern void CSharp_StopAll__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xDACEB4", Offset = "0xDACEB4", VA = "0xDACEB4")]
	public static extern void CSharp_StopAll__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xDACFA0", Offset = "0xDACFA0", VA = "0xDACFA0")]
	public static extern void CSharp_StopPlayingID__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xDAD0AC", Offset = "0xDAD0AC", VA = "0xDAD0AC")]
	public static extern void CSharp_StopPlayingID__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xDAD1A0", Offset = "0xDAD1A0", VA = "0xDAD1A0")]
	public static extern void CSharp_StopPlayingID__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xDAD2AC", Offset = "0xDAD2AC", VA = "0xDAD2AC")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_0(int jarg1, uint jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xDAD3D0", Offset = "0xDAD3D0", VA = "0xDAD3D0")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_1(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xDAD4DC", Offset = "0xDAD4DC", VA = "0xDAD4DC")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_2(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xDAD5D0", Offset = "0xDAD5D0", VA = "0xDAD5D0")]
	public static extern void CSharp_SetRandomSeed(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xDAD6B4", Offset = "0xDAD6B4", VA = "0xDAD6B4")]
	public static extern void CSharp_MuteBackgroundMusic(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xDAD790", Offset = "0xDAD790", VA = "0xDAD790")]
	public static extern bool CSharp_GetBackgroundMusicMute();

	[PreserveSig]
	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xDAD8F0", Offset = "0xDAD8F0", VA = "0xDAD8F0")]
	public static extern int CSharp_SendPluginCustomGameData(uint jarg1, ulong jarg2, int jarg3, uint jarg4, uint jarg5, IntPtr jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xDADA14", Offset = "0xDADA14", VA = "0xDADA14")]
	public static extern int CSharp_UnregisterAllGameObj();

	[PreserveSig]
	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xDADB4C", Offset = "0xDADB4C", VA = "0xDADB4C")]
	public static extern int CSharp_SetMultiplePositions__SWIG_0(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xDADCA8", Offset = "0xDADCA8", VA = "0xDADCA8")]
	public static extern int CSharp_SetMultiplePositions__SWIG_1(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xDADE04", Offset = "0xDADE04", VA = "0xDADE04")]
	public static extern int CSharp_SetMultiplePositions__SWIG_2(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xDADF60", Offset = "0xDADF60", VA = "0xDADF60")]
	public static extern int CSharp_SetMultiplePositions__SWIG_3(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xDAE09C", Offset = "0xDAE09C", VA = "0xDAE09C")]
	public static extern int CSharp_SetScalingFactor(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xDAE188", Offset = "0xDAE188", VA = "0xDAE188")]
	public static extern int CSharp_ClearBanks();

	[PreserveSig]
	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xDAE270", Offset = "0xDAE270", VA = "0xDAE270")]
	public static extern int CSharp_SetBankLoadIOSettings(float jarg1, sbyte jarg2);

	[PreserveSig]
	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xDAE37C", Offset = "0xDAE37C", VA = "0xDAE37C")]
	public static extern int CSharp_LoadBank__SWIG_0(string jarg1, int jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xDAE4A0", Offset = "0xDAE4A0", VA = "0xDAE4A0")]
	public static extern int CSharp_LoadBank__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xDAE5AC", Offset = "0xDAE5AC", VA = "0xDAE5AC")]
	public static extern int CSharp_LoadBank__SWIG_2(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xDAE6D0", Offset = "0xDAE6D0", VA = "0xDAE6D0")]
	public static extern int CSharp_LoadBank__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3, out uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xDAE858", Offset = "0xDAE858", VA = "0xDAE858")]
	public static extern int CSharp_LoadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xDAE9F8", Offset = "0xDAE9F8", VA = "0xDAE9F8")]
	public static extern int CSharp_LoadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xDAEB80", Offset = "0xDAEB80", VA = "0xDAEB80")]
	public static extern int CSharp_LoadBank__SWIG_6(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xDAED20", Offset = "0xDAED20", VA = "0xDAED20")]
	public static extern int CSharp_LoadBank__SWIG_7(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xDAEE5C", Offset = "0xDAEE5C", VA = "0xDAEE5C")]
	public static extern int CSharp_UnloadBank__SWIG_0(string jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xDAEF80", Offset = "0xDAEF80", VA = "0xDAEF80")]
	public static extern int CSharp_UnloadBank__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xDAF0A4", Offset = "0xDAF0A4", VA = "0xDAF0A4")]
	public static extern int CSharp_UnloadBank__SWIG_2(uint jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xDAF1B0", Offset = "0xDAF1B0", VA = "0xDAF1B0")]
	public static extern int CSharp_UnloadBank__SWIG_3(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xDAF318", Offset = "0xDAF318", VA = "0xDAF318")]
	public static extern int CSharp_UnloadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xDAF4B0", Offset = "0xDAF4B0", VA = "0xDAF4B0")]
	public static extern int CSharp_UnloadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xDC8178", Offset = "0xDC8178", VA = "0xDC8178")]
	public static extern void CSharp_CancelBankCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xDAF63C", Offset = "0xDAF63C", VA = "0xDAF63C")]
	public static extern int CSharp_PrepareBank__SWIG_0(int jarg1, string jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xDAF764", Offset = "0xDAF764", VA = "0xDAF764")]
	public static extern int CSharp_PrepareBank__SWIG_1(int jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xDAF88C", Offset = "0xDAF88C", VA = "0xDAF88C")]
	public static extern int CSharp_PrepareBank__SWIG_2(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xDAF998", Offset = "0xDAF998", VA = "0xDAF998")]
	public static extern int CSharp_PrepareBank__SWIG_3(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xDAFB08", Offset = "0xDAFB08", VA = "0xDAFB08")]
	public static extern int CSharp_PrepareBank__SWIG_4(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xDAFCAC", Offset = "0xDAFCAC", VA = "0xDAFCAC")]
	public static extern int CSharp_PrepareBank__SWIG_5(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xDAFE50", Offset = "0xDAFE50", VA = "0xDAFE50")]
	public static extern int CSharp_PrepareBank__SWIG_6(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xDAFFD8", Offset = "0xDAFFD8", VA = "0xDAFFD8")]
	public static extern int CSharp_PrepareBank__SWIG_7(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xDB00DC", Offset = "0xDB00DC", VA = "0xDB00DC")]
	public static extern int CSharp_ClearPreparedEvents();

	[PreserveSig]
	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xDB03E8", Offset = "0xDB03E8", VA = "0xDB03E8")]
	public static extern int CSharp_PrepareEvent__SWIG_0(int jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xDB04FC", Offset = "0xDB04FC", VA = "0xDB04FC")]
	public static extern int CSharp_PrepareEvent__SWIG_1(int jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xDB0898", Offset = "0xDB0898", VA = "0xDB0898")]
	public static extern int CSharp_PrepareEvent__SWIG_2(int jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xDB0A28", Offset = "0xDB0A28", VA = "0xDB0A28")]
	public static extern int CSharp_PrepareEvent__SWIG_3(int jarg1, [In] uint[] jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xDB0B60", Offset = "0xDB0B60", VA = "0xDB0B60")]
	public static extern int CSharp_SetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xDB0C70", Offset = "0xDB0C70", VA = "0xDB0C70")]
	public static extern int CSharp_UnsetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xDB0FA8", Offset = "0xDB0FA8", VA = "0xDB0FA8")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_0(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xDB1108", Offset = "0xDB1108", VA = "0xDB1108")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_1(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xDB14CC", Offset = "0xDB14CC", VA = "0xDB14CC")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_2(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xDB16A8", Offset = "0xDB16A8", VA = "0xDB16A8")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_3(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xDB183C", Offset = "0xDB183C", VA = "0xDB183C")]
	public static extern int CSharp_AddListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xDB1990", Offset = "0xDB1990", VA = "0xDB1990")]
	public static extern int CSharp_RemoveListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xDB1ABC", Offset = "0xDB1ABC", VA = "0xDB1ABC")]
	public static extern int CSharp_AddDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xDB1BD8", Offset = "0xDB1BD8", VA = "0xDB1BD8")]
	public static extern int CSharp_RemoveDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xDB1CF4", Offset = "0xDB1CF4", VA = "0xDB1CF4")]
	public static extern int CSharp_ResetListenersToDefault(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xDB1E4C", Offset = "0xDB1E4C", VA = "0xDB1E4C")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_0(ulong jarg1, bool jarg2, IntPtr jarg3, [In] float[] jarg4);

	[PreserveSig]
	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xDB1FC4", Offset = "0xDB1FC4", VA = "0xDB1FC4")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_1(ulong jarg1, bool jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xDB2138", Offset = "0xDB2138", VA = "0xDB2138")]
	public static extern int CSharp_SetRTPCValue__SWIG_0(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xDB22CC", Offset = "0xDB22CC", VA = "0xDB22CC")]
	public static extern int CSharp_SetRTPCValue__SWIG_1(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xDB2448", Offset = "0xDB2448", VA = "0xDB2448")]
	public static extern int CSharp_SetRTPCValue__SWIG_2(uint jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xDB25AC", Offset = "0xDB25AC", VA = "0xDB25AC")]
	public static extern int CSharp_SetRTPCValue__SWIG_3(uint jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xDB26C0", Offset = "0xDB26C0", VA = "0xDB26C0")]
	public static extern int CSharp_SetRTPCValue__SWIG_4(uint jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xDB282C", Offset = "0xDB282C", VA = "0xDB282C")]
	public static extern int CSharp_SetRTPCValue__SWIG_5(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xDB29D8", Offset = "0xDB29D8", VA = "0xDB29D8")]
	public static extern int CSharp_SetRTPCValue__SWIG_6(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xDB2B6C", Offset = "0xDB2B6C", VA = "0xDB2B6C")]
	public static extern int CSharp_SetRTPCValue__SWIG_7(string jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xDB2CE8", Offset = "0xDB2CE8", VA = "0xDB2CE8")]
	public static extern int CSharp_SetRTPCValue__SWIG_8(string jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xDB2E14", Offset = "0xDB2E14", VA = "0xDB2E14")]
	public static extern int CSharp_SetRTPCValue__SWIG_9(string jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xDB2F60", Offset = "0xDB2F60", VA = "0xDB2F60")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_0(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xDB30BC", Offset = "0xDB30BC", VA = "0xDB30BC")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_1(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xDB3200", Offset = "0xDB3200", VA = "0xDB3200")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_2(uint jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xDB332C", Offset = "0xDB332C", VA = "0xDB332C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_3(uint jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xDB3470", Offset = "0xDB3470", VA = "0xDB3470")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_4(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xDB35E4", Offset = "0xDB35E4", VA = "0xDB35E4")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_5(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xDB3740", Offset = "0xDB3740", VA = "0xDB3740")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_6(string jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xDB3884", Offset = "0xDB3884", VA = "0xDB3884")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_7(string jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xDB3A08", Offset = "0xDB3A08", VA = "0xDB3A08")]
	public static extern int CSharp_ResetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xDB3B7C", Offset = "0xDB3B7C", VA = "0xDB3B7C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_1(uint jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xDB3CD8", Offset = "0xDB3CD8", VA = "0xDB3CD8")]
	public static extern int CSharp_ResetRTPCValue__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xDB3E1C", Offset = "0xDB3E1C", VA = "0xDB3E1C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xDB3F10", Offset = "0xDB3F10", VA = "0xDB3F10")]
	public static extern int CSharp_ResetRTPCValue__SWIG_4(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xDB405C", Offset = "0xDB405C", VA = "0xDB405C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_5(string jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xDB41E8", Offset = "0xDB41E8", VA = "0xDB41E8")]
	public static extern int CSharp_ResetRTPCValue__SWIG_6(string jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xDB435C", Offset = "0xDB435C", VA = "0xDB435C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_7(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xDB44B8", Offset = "0xDB44B8", VA = "0xDB44B8")]
	public static extern int CSharp_ResetRTPCValue__SWIG_8(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000600")]
	[Address(RVA = "0xDB45C4", Offset = "0xDB45C4", VA = "0xDB45C4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_9(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000601")]
	[Address(RVA = "0xDB4710", Offset = "0xDB4710", VA = "0xDB4710")]
	public static extern int CSharp_SetSwitch__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000602")]
	[Address(RVA = "0xDB485C", Offset = "0xDB485C", VA = "0xDB485C")]
	public static extern int CSharp_SetSwitch__SWIG_1(string jarg1, string jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000603")]
	[Address(RVA = "0xDB49CC", Offset = "0xDB49CC", VA = "0xDB49CC")]
	public static extern int CSharp_PostTrigger__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000604")]
	[Address(RVA = "0xDB4B08", Offset = "0xDB4B08", VA = "0xDB4B08")]
	public static extern int CSharp_PostTrigger__SWIG_1(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000605")]
	[Address(RVA = "0xDB4C24", Offset = "0xDB4C24", VA = "0xDB4C24")]
	public static extern int CSharp_SetState__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000606")]
	[Address(RVA = "0xDB4D28", Offset = "0xDB4D28", VA = "0xDB4D28")]
	public static extern int CSharp_SetState__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000607")]
	[Address(RVA = "0xDB4EA8", Offset = "0xDB4EA8", VA = "0xDB4EA8")]
	public static extern int CSharp_SetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000608")]
	[Address(RVA = "0xDB5014", Offset = "0xDB5014", VA = "0xDB5014")]
	public static extern int CSharp_SetGameObjectOutputBusVolume(ulong jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000609")]
	[Address(RVA = "0xDB5130", Offset = "0xDB5130", VA = "0xDB5130")]
	public static extern int CSharp_SetActorMixerEffect(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600060A")]
	[Address(RVA = "0xDB5244", Offset = "0xDB5244", VA = "0xDB5244")]
	public static extern int CSharp_SetBusEffect__SWIG_0(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600060B")]
	[Address(RVA = "0xDB5358", Offset = "0xDB5358", VA = "0xDB5358")]
	public static extern int CSharp_SetBusEffect__SWIG_1(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600060C")]
	[Address(RVA = "0xDB547C", Offset = "0xDB547C", VA = "0xDB547C")]
	public static extern int CSharp_SetMixer__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600060D")]
	[Address(RVA = "0xDB5580", Offset = "0xDB5580", VA = "0xDB5580")]
	public static extern int CSharp_SetMixer__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600060E")]
	[Address(RVA = "0xDB56B0", Offset = "0xDB56B0", VA = "0xDB56B0")]
	public static extern int CSharp_SetBusConfig__SWIG_0(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600060F")]
	[Address(RVA = "0xDB57C8", Offset = "0xDB57C8", VA = "0xDB57C8")]
	public static extern int CSharp_SetBusConfig__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000610")]
	[Address(RVA = "0xDB594C", Offset = "0xDB594C", VA = "0xDB594C")]
	public static extern int CSharp_SetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000611")]
	[Address(RVA = "0xDB5ADC", Offset = "0xDB5ADC", VA = "0xDB5ADC")]
	public static extern int CSharp_SetMultipleObstructionAndOcclusion(ulong jarg1, ulong jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000612")]
	[Address(RVA = "0xDB5BE8", Offset = "0xDB5BE8", VA = "0xDB5BE8")]
	public static extern int CSharp_StartOutputCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000613")]
	[Address(RVA = "0xDB5CDC", Offset = "0xDB5CDC", VA = "0xDB5CDC")]
	public static extern int CSharp_StopOutputCapture();

	[PreserveSig]
	[Token(Token = "0x6000614")]
	[Address(RVA = "0xDB5DB4", Offset = "0xDB5DB4", VA = "0xDB5DB4")]
	public static extern int CSharp_AddOutputCaptureMarker(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000615")]
	[Address(RVA = "0xDB5EB0", Offset = "0xDB5EB0", VA = "0xDB5EB0")]
	public static extern int CSharp_StartProfilerCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000616")]
	[Address(RVA = "0xDB5FA4", Offset = "0xDB5FA4", VA = "0xDB5FA4")]
	public static extern int CSharp_StopProfilerCapture();

	[PreserveSig]
	[Token(Token = "0x6000617")]
	[Address(RVA = "0xDB607C", Offset = "0xDB607C", VA = "0xDB607C")]
	public static extern int CSharp_RemoveOutput(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000618")]
	[Address(RVA = "0xDB618C", Offset = "0xDB618C", VA = "0xDB618C")]
	public static extern int CSharp_ReplaceOutput__SWIG_0(IntPtr jarg1, ulong jarg2, out ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000619")]
	[Address(RVA = "0xDB62AC", Offset = "0xDB62AC", VA = "0xDB62AC")]
	public static extern int CSharp_ReplaceOutput__SWIG_1(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600061A")]
	[Address(RVA = "0xDB63B0", Offset = "0xDB63B0", VA = "0xDB63B0")]
	public static extern ulong CSharp_GetOutputID__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600061B")]
	[Address(RVA = "0xDB64B4", Offset = "0xDB64B4", VA = "0xDB64B4")]
	public static extern ulong CSharp_GetOutputID__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600061C")]
	[Address(RVA = "0xDB65D0", Offset = "0xDB65D0", VA = "0xDB65D0")]
	public static extern int CSharp_SetBusDevice__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600061D")]
	[Address(RVA = "0xDB66D4", Offset = "0xDB66D4", VA = "0xDB66D4")]
	public static extern int CSharp_SetBusDevice__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600061E")]
	[Address(RVA = "0xDB6808", Offset = "0xDB6808", VA = "0xDB6808")]
	public static extern int CSharp_SetOutputVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600061F")]
	[Address(RVA = "0xDB68FC", Offset = "0xDB68FC", VA = "0xDB68FC")]
	public static extern int CSharp_GetDeviceSpatialAudioSupport(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000620")]
	[Address(RVA = "0xDB69E0", Offset = "0xDB69E0", VA = "0xDB69E0")]
	public static extern int CSharp_Suspend__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000621")]
	[Address(RVA = "0xDB6ABC", Offset = "0xDB6ABC", VA = "0xDB6ABC")]
	public static extern int CSharp_Suspend__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000622")]
	[Address(RVA = "0xDB6B8C", Offset = "0xDB6B8C", VA = "0xDB6B8C")]
	public static extern int CSharp_WakeupFromSuspend();

	[PreserveSig]
	[Token(Token = "0x6000623")]
	[Address(RVA = "0xDB6C5C", Offset = "0xDB6C5C", VA = "0xDB6C5C")]
	public static extern uint CSharp_GetBufferTick();

	[PreserveSig]
	[Token(Token = "0x6000624")]
	[Address(RVA = "0xDA4208", Offset = "0xDA4208", VA = "0xDA4208")]
	public static extern void CSharp_AkSegmentInfo_iCurrentPosition_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000625")]
	[Address(RVA = "0xDA4300", Offset = "0xDA4300", VA = "0xDA4300")]
	public static extern int CSharp_AkSegmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000626")]
	[Address(RVA = "0xDA43F8", Offset = "0xDA43F8", VA = "0xDA43F8")]
	public static extern void CSharp_AkSegmentInfo_iPreEntryDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000627")]
	[Address(RVA = "0xDA44F0", Offset = "0xDA44F0", VA = "0xDA44F0")]
	public static extern int CSharp_AkSegmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000628")]
	[Address(RVA = "0xDA45E8", Offset = "0xDA45E8", VA = "0xDA45E8")]
	public static extern void CSharp_AkSegmentInfo_iActiveDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000629")]
	[Address(RVA = "0xDA46E0", Offset = "0xDA46E0", VA = "0xDA46E0")]
	public static extern int CSharp_AkSegmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600062A")]
	[Address(RVA = "0xDA47D8", Offset = "0xDA47D8", VA = "0xDA47D8")]
	public static extern void CSharp_AkSegmentInfo_iPostExitDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600062B")]
	[Address(RVA = "0xDA48D0", Offset = "0xDA48D0", VA = "0xDA48D0")]
	public static extern int CSharp_AkSegmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600062C")]
	[Address(RVA = "0xDA49C8", Offset = "0xDA49C8", VA = "0xDA49C8")]
	public static extern void CSharp_AkSegmentInfo_iRemainingLookAheadTime_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600062D")]
	[Address(RVA = "0xDA4AC0", Offset = "0xDA4AC0", VA = "0xDA4AC0")]
	public static extern int CSharp_AkSegmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600062E")]
	[Address(RVA = "0xDA4BB8", Offset = "0xDA4BB8", VA = "0xDA4BB8")]
	public static extern void CSharp_AkSegmentInfo_fBeatDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600062F")]
	[Address(RVA = "0xDA4CB0", Offset = "0xDA4CB0", VA = "0xDA4CB0")]
	public static extern float CSharp_AkSegmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000630")]
	[Address(RVA = "0xDA4DA8", Offset = "0xDA4DA8", VA = "0xDA4DA8")]
	public static extern void CSharp_AkSegmentInfo_fBarDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000631")]
	[Address(RVA = "0xDA4EA0", Offset = "0xDA4EA0", VA = "0xDA4EA0")]
	public static extern float CSharp_AkSegmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000632")]
	[Address(RVA = "0xDA4F98", Offset = "0xDA4F98", VA = "0xDA4F98")]
	public static extern void CSharp_AkSegmentInfo_fGridDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000633")]
	[Address(RVA = "0xDA5090", Offset = "0xDA5090", VA = "0xDA5090")]
	public static extern float CSharp_AkSegmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000634")]
	[Address(RVA = "0xDA5188", Offset = "0xDA5188", VA = "0xDA5188")]
	public static extern void CSharp_AkSegmentInfo_fGridOffset_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000635")]
	[Address(RVA = "0xDA5280", Offset = "0xDA5280", VA = "0xDA5280")]
	public static extern float CSharp_AkSegmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000636")]
	[Address(RVA = "0xDA5380", Offset = "0xDA5380", VA = "0xDA5380")]
	public static extern IntPtr CSharp_new_AkSegmentInfo();

	[PreserveSig]
	[Token(Token = "0x6000637")]
	[Address(RVA = "0xDA4110", Offset = "0xDA4110", VA = "0xDA4110")]
	public static extern void CSharp_delete_AkSegmentInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000638")]
	[Address(RVA = "0xDB6D2C", Offset = "0xDB6D2C", VA = "0xDB6D2C")]
	public static extern byte CSharp_AK_INVALID_MIDI_CHANNEL_get();

	[PreserveSig]
	[Token(Token = "0x6000639")]
	[Address(RVA = "0xDB6DFC", Offset = "0xDB6DFC", VA = "0xDB6DFC")]
	public static extern byte CSharp_AK_INVALID_MIDI_NOTE_get();

	[PreserveSig]
	[Token(Token = "0x600063A")]
	[Address(RVA = "0xDC81F8", Offset = "0xDC81F8", VA = "0xDC81F8")]
	public static extern void CSharp_AkMIDIEvent_byChan_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600063B")]
	[Address(RVA = "0xDC8288", Offset = "0xDC8288", VA = "0xDC8288")]
	public static extern byte CSharp_AkMIDIEvent_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600063C")]
	[Address(RVA = "0xDC8308", Offset = "0xDC8308", VA = "0xDC8308")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam1_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600063D")]
	[Address(RVA = "0xDC8398", Offset = "0xDC8398", VA = "0xDC8398")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600063E")]
	[Address(RVA = "0xDC8418", Offset = "0xDC8418", VA = "0xDC8418")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam2_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600063F")]
	[Address(RVA = "0xDC84A8", Offset = "0xDC84A8", VA = "0xDC84A8")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000640")]
	[Address(RVA = "0xDC8528", Offset = "0xDC8528", VA = "0xDC8528")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tGen();

	[PreserveSig]
	[Token(Token = "0x6000641")]
	[Address(RVA = "0xDC859C", Offset = "0xDC859C", VA = "0xDC859C")]
	public static extern void CSharp_delete_AkMIDIEvent_tGen(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000642")]
	[Address(RVA = "0xDC861C", Offset = "0xDC861C", VA = "0xDC861C")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000643")]
	[Address(RVA = "0xDC86AC", Offset = "0xDC86AC", VA = "0xDC86AC")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000644")]
	[Address(RVA = "0xDC872C", Offset = "0xDC872C", VA = "0xDC872C")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000645")]
	[Address(RVA = "0xDC87BC", Offset = "0xDC87BC", VA = "0xDC87BC")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000646")]
	[Address(RVA = "0xDC883C", Offset = "0xDC883C", VA = "0xDC883C")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteOnOff();

	[PreserveSig]
	[Token(Token = "0x6000647")]
	[Address(RVA = "0xDC88B0", Offset = "0xDC88B0", VA = "0xDC88B0")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteOnOff(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000648")]
	[Address(RVA = "0xDC8930", Offset = "0xDC8930", VA = "0xDC8930")]
	public static extern void CSharp_AkMIDIEvent_tCc_byCc_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000649")]
	[Address(RVA = "0xDC89C0", Offset = "0xDC89C0", VA = "0xDC89C0")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600064A")]
	[Address(RVA = "0xDC8A40", Offset = "0xDC8A40", VA = "0xDC8A40")]
	public static extern void CSharp_AkMIDIEvent_tCc_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600064B")]
	[Address(RVA = "0xDC8AD0", Offset = "0xDC8AD0", VA = "0xDC8AD0")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600064C")]
	[Address(RVA = "0xDC8B50", Offset = "0xDC8B50", VA = "0xDC8B50")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tCc();

	[PreserveSig]
	[Token(Token = "0x600064D")]
	[Address(RVA = "0xDC8BC4", Offset = "0xDC8BC4", VA = "0xDC8BC4")]
	public static extern void CSharp_delete_AkMIDIEvent_tCc(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600064E")]
	[Address(RVA = "0xDC8C44", Offset = "0xDC8C44", VA = "0xDC8C44")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600064F")]
	[Address(RVA = "0xDC8CD4", Offset = "0xDC8CD4", VA = "0xDC8CD4")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000650")]
	[Address(RVA = "0xDC8D54", Offset = "0xDC8D54", VA = "0xDC8D54")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000651")]
	[Address(RVA = "0xDC8DE4", Offset = "0xDC8DE4", VA = "0xDC8DE4")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000652")]
	[Address(RVA = "0xDC8E64", Offset = "0xDC8E64", VA = "0xDC8E64")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tPitchBend();

	[PreserveSig]
	[Token(Token = "0x6000653")]
	[Address(RVA = "0xDC8ED8", Offset = "0xDC8ED8", VA = "0xDC8ED8")]
	public static extern void CSharp_delete_AkMIDIEvent_tPitchBend(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000654")]
	[Address(RVA = "0xDC8F58", Offset = "0xDC8F58", VA = "0xDC8F58")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000655")]
	[Address(RVA = "0xDC8FE8", Offset = "0xDC8FE8", VA = "0xDC8FE8")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000656")]
	[Address(RVA = "0xDC9068", Offset = "0xDC9068", VA = "0xDC9068")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000657")]
	[Address(RVA = "0xDC90F8", Offset = "0xDC90F8", VA = "0xDC90F8")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000658")]
	[Address(RVA = "0xDC9178", Offset = "0xDC9178", VA = "0xDC9178")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteAftertouch();

	[PreserveSig]
	[Token(Token = "0x6000659")]
	[Address(RVA = "0xDC91EC", Offset = "0xDC91EC", VA = "0xDC91EC")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600065A")]
	[Address(RVA = "0xDC926C", Offset = "0xDC926C", VA = "0xDC926C")]
	public static extern void CSharp_AkMIDIEvent_tChanAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600065B")]
	[Address(RVA = "0xDC92FC", Offset = "0xDC92FC", VA = "0xDC92FC")]
	public static extern byte CSharp_AkMIDIEvent_tChanAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600065C")]
	[Address(RVA = "0xDC937C", Offset = "0xDC937C", VA = "0xDC937C")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tChanAftertouch();

	[PreserveSig]
	[Token(Token = "0x600065D")]
	[Address(RVA = "0xDC93F0", Offset = "0xDC93F0", VA = "0xDC93F0")]
	public static extern void CSharp_delete_AkMIDIEvent_tChanAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600065E")]
	[Address(RVA = "0xDC9470", Offset = "0xDC9470", VA = "0xDC9470")]
	public static extern void CSharp_AkMIDIEvent_tProgramChange_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600065F")]
	[Address(RVA = "0xDC9500", Offset = "0xDC9500", VA = "0xDC9500")]
	public static extern byte CSharp_AkMIDIEvent_tProgramChange_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000660")]
	[Address(RVA = "0xDC9580", Offset = "0xDC9580", VA = "0xDC9580")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tProgramChange();

	[PreserveSig]
	[Token(Token = "0x6000661")]
	[Address(RVA = "0xDC95F4", Offset = "0xDC95F4", VA = "0xDC95F4")]
	public static extern void CSharp_delete_AkMIDIEvent_tProgramChange(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000662")]
	[Address(RVA = "0xDC9674", Offset = "0xDC9674", VA = "0xDC9674")]
	public static extern void CSharp_AkMIDIEvent_Gen_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000663")]
	[Address(RVA = "0xDC9704", Offset = "0xDC9704", VA = "0xDC9704")]
	public static extern IntPtr CSharp_AkMIDIEvent_Gen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000664")]
	[Address(RVA = "0xDC9784", Offset = "0xDC9784", VA = "0xDC9784")]
	public static extern void CSharp_AkMIDIEvent_Cc_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000665")]
	[Address(RVA = "0xDC9814", Offset = "0xDC9814", VA = "0xDC9814")]
	public static extern IntPtr CSharp_AkMIDIEvent_Cc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000666")]
	[Address(RVA = "0xDC9894", Offset = "0xDC9894", VA = "0xDC9894")]
	public static extern void CSharp_AkMIDIEvent_NoteOnOff_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000667")]
	[Address(RVA = "0xDC9924", Offset = "0xDC9924", VA = "0xDC9924")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteOnOff_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000668")]
	[Address(RVA = "0xDC99A4", Offset = "0xDC99A4", VA = "0xDC99A4")]
	public static extern void CSharp_AkMIDIEvent_PitchBend_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000669")]
	[Address(RVA = "0xDC9A34", Offset = "0xDC9A34", VA = "0xDC9A34")]
	public static extern IntPtr CSharp_AkMIDIEvent_PitchBend_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600066A")]
	[Address(RVA = "0xDC9AB4", Offset = "0xDC9AB4", VA = "0xDC9AB4")]
	public static extern void CSharp_AkMIDIEvent_NoteAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600066B")]
	[Address(RVA = "0xDC9B44", Offset = "0xDC9B44", VA = "0xDC9B44")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600066C")]
	[Address(RVA = "0xDC9BC4", Offset = "0xDC9BC4", VA = "0xDC9BC4")]
	public static extern void CSharp_AkMIDIEvent_ChanAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600066D")]
	[Address(RVA = "0xDC9C54", Offset = "0xDC9C54", VA = "0xDC9C54")]
	public static extern IntPtr CSharp_AkMIDIEvent_ChanAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600066E")]
	[Address(RVA = "0xDC9CD4", Offset = "0xDC9CD4", VA = "0xDC9CD4")]
	public static extern void CSharp_AkMIDIEvent_ProgramChange_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600066F")]
	[Address(RVA = "0xDC9D64", Offset = "0xDC9D64", VA = "0xDC9D64")]
	public static extern IntPtr CSharp_AkMIDIEvent_ProgramChange_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000670")]
	[Address(RVA = "0xDC9DE4", Offset = "0xDC9DE4", VA = "0xDC9DE4")]
	public static extern void CSharp_AkMIDIEvent_byType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000671")]
	[Address(RVA = "0xDC9E74", Offset = "0xDC9E74", VA = "0xDC9E74")]
	public static extern int CSharp_AkMIDIEvent_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000672")]
	[Address(RVA = "0xDC9EF4", Offset = "0xDC9EF4", VA = "0xDC9EF4")]
	public static extern void CSharp_AkMIDIEvent_byOnOffNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000673")]
	[Address(RVA = "0xDC9F84", Offset = "0xDC9F84", VA = "0xDC9F84")]
	public static extern byte CSharp_AkMIDIEvent_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000674")]
	[Address(RVA = "0xDCA004", Offset = "0xDCA004", VA = "0xDCA004")]
	public static extern void CSharp_AkMIDIEvent_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000675")]
	[Address(RVA = "0xDCA094", Offset = "0xDCA094", VA = "0xDCA094")]
	public static extern byte CSharp_AkMIDIEvent_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000676")]
	[Address(RVA = "0xDCA114", Offset = "0xDCA114", VA = "0xDCA114")]
	public static extern void CSharp_AkMIDIEvent_byCc_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000677")]
	[Address(RVA = "0xDCA1A4", Offset = "0xDCA1A4", VA = "0xDCA1A4")]
	public static extern int CSharp_AkMIDIEvent_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000678")]
	[Address(RVA = "0xDCA224", Offset = "0xDCA224", VA = "0xDCA224")]
	public static extern void CSharp_AkMIDIEvent_byCcValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000679")]
	[Address(RVA = "0xDCA2B4", Offset = "0xDCA2B4", VA = "0xDCA2B4")]
	public static extern byte CSharp_AkMIDIEvent_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600067A")]
	[Address(RVA = "0xDCA334", Offset = "0xDCA334", VA = "0xDCA334")]
	public static extern void CSharp_AkMIDIEvent_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600067B")]
	[Address(RVA = "0xDCA3C4", Offset = "0xDCA3C4", VA = "0xDCA3C4")]
	public static extern byte CSharp_AkMIDIEvent_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600067C")]
	[Address(RVA = "0xDCA444", Offset = "0xDCA444", VA = "0xDCA444")]
	public static extern void CSharp_AkMIDIEvent_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600067D")]
	[Address(RVA = "0xDCA4D4", Offset = "0xDCA4D4", VA = "0xDCA4D4")]
	public static extern byte CSharp_AkMIDIEvent_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600067E")]
	[Address(RVA = "0xDCA554", Offset = "0xDCA554", VA = "0xDCA554")]
	public static extern void CSharp_AkMIDIEvent_byAftertouchNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600067F")]
	[Address(RVA = "0xDCA5E4", Offset = "0xDCA5E4", VA = "0xDCA5E4")]
	public static extern byte CSharp_AkMIDIEvent_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000680")]
	[Address(RVA = "0xDCA664", Offset = "0xDCA664", VA = "0xDCA664")]
	public static extern void CSharp_AkMIDIEvent_byNoteAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000681")]
	[Address(RVA = "0xDCA6F4", Offset = "0xDCA6F4", VA = "0xDCA6F4")]
	public static extern byte CSharp_AkMIDIEvent_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000682")]
	[Address(RVA = "0xDCA774", Offset = "0xDCA774", VA = "0xDCA774")]
	public static extern void CSharp_AkMIDIEvent_byChanAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000683")]
	[Address(RVA = "0xDCA804", Offset = "0xDCA804", VA = "0xDCA804")]
	public static extern byte CSharp_AkMIDIEvent_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000684")]
	[Address(RVA = "0xDCA884", Offset = "0xDCA884", VA = "0xDCA884")]
	public static extern void CSharp_AkMIDIEvent_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000685")]
	[Address(RVA = "0xDCA914", Offset = "0xDCA914", VA = "0xDCA914")]
	public static extern byte CSharp_AkMIDIEvent_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000686")]
	[Address(RVA = "0xDCA994", Offset = "0xDCA994", VA = "0xDCA994")]
	public static extern IntPtr CSharp_new_AkMIDIEvent();

	[PreserveSig]
	[Token(Token = "0x6000687")]
	[Address(RVA = "0xDCAA08", Offset = "0xDCAA08", VA = "0xDCAA08")]
	public static extern void CSharp_delete_AkMIDIEvent(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000688")]
	[Address(RVA = "0xDCAA88", Offset = "0xDCAA88", VA = "0xDCAA88")]
	public static extern void CSharp_AkMIDIPost_uOffset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000689")]
	[Address(RVA = "0xDCAB18", Offset = "0xDCAB18", VA = "0xDCAB18")]
	public static extern uint CSharp_AkMIDIPost_uOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600068A")]
	[Address(RVA = "0xDCAB98", Offset = "0xDCAB98", VA = "0xDCAB98")]
	public static extern int CSharp_AkMIDIPost_PostOnEvent(IntPtr jarg1, uint jarg2, ulong jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x600068B")]
	[Address(RVA = "0xDCAC40", Offset = "0xDCAC40", VA = "0xDCAC40")]
	public static extern void CSharp_AkMIDIPost_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600068C")]
	[Address(RVA = "0xDCACD0", Offset = "0xDCACD0", VA = "0xDCACD0")]
	public static extern int CSharp_AkMIDIPost_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600068D")]
	[Address(RVA = "0xDCAD44", Offset = "0xDCAD44", VA = "0xDCAD44")]
	public static extern IntPtr CSharp_new_AkMIDIPost();

	[PreserveSig]
	[Token(Token = "0x600068E")]
	[Address(RVA = "0xDCADB8", Offset = "0xDCADB8", VA = "0xDCADB8")]
	public static extern void CSharp_delete_AkMIDIPost(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600068F")]
	[Address(RVA = "0xDCAE38", Offset = "0xDCAE38", VA = "0xDCAE38")]
	public static extern IntPtr CSharp_new_AkMemSettings();

	[PreserveSig]
	[Token(Token = "0x6000690")]
	[Address(RVA = "0xDCAEAC", Offset = "0xDCAEAC", VA = "0xDCAEAC")]
	public static extern void CSharp_AkMemSettings_uMaxNumPools_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000691")]
	[Address(RVA = "0xDCAF3C", Offset = "0xDCAF3C", VA = "0xDCAF3C")]
	public static extern uint CSharp_AkMemSettings_uMaxNumPools_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000692")]
	[Address(RVA = "0xDCAFBC", Offset = "0xDCAFBC", VA = "0xDCAFBC")]
	public static extern void CSharp_AkMemSettings_uDebugFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000693")]
	[Address(RVA = "0xDCB04C", Offset = "0xDCB04C", VA = "0xDCB04C")]
	public static extern uint CSharp_AkMemSettings_uDebugFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000694")]
	[Address(RVA = "0xDCB0CC", Offset = "0xDCB0CC", VA = "0xDCB0CC")]
	public static extern void CSharp_delete_AkMemSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000695")]
	[Address(RVA = "0xDCB14C", Offset = "0xDCB14C", VA = "0xDCB14C")]
	public static extern void CSharp_AkMusicSettings_fStreamingLookAheadRatio_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000696")]
	[Address(RVA = "0xDCB1DC", Offset = "0xDCB1DC", VA = "0xDCB1DC")]
	public static extern float CSharp_AkMusicSettings_fStreamingLookAheadRatio_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000697")]
	[Address(RVA = "0xDCB25C", Offset = "0xDCB25C", VA = "0xDCB25C")]
	public static extern IntPtr CSharp_new_AkMusicSettings();

	[PreserveSig]
	[Token(Token = "0x6000698")]
	[Address(RVA = "0xDCB2D0", Offset = "0xDCB2D0", VA = "0xDCB2D0")]
	public static extern void CSharp_delete_AkMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000699")]
	[Address(RVA = "0xDB6F18", Offset = "0xDB6F18", VA = "0xDB6F18")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_0(uint jarg1, IntPtr jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x600069A")]
	[Address(RVA = "0xDB7050", Offset = "0xDB7050", VA = "0xDB7050")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600069B")]
	[Address(RVA = "0xDA5738", Offset = "0xDA5738", VA = "0xDA5738")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pPackage_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600069C")]
	[Address(RVA = "0xDA5864", Offset = "0xDA5864", VA = "0xDA5864")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600069D")]
	[Address(RVA = "0xDA594C", Offset = "0xDA594C", VA = "0xDA594C")]
	public static extern int CSharp_AkSerializedCallbackHeader_eType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600069E")]
	[Address(RVA = "0xDA5A34", Offset = "0xDA5A34", VA = "0xDA5A34")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_GetData(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600069F")]
	[Address(RVA = "0xDA5B34", Offset = "0xDA5B34", VA = "0xDA5B34")]
	public static extern IntPtr CSharp_new_AkSerializedCallbackHeader();

	[PreserveSig]
	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xDA5650", Offset = "0xDA5650", VA = "0xDA5650")]
	public static extern void CSharp_delete_AkSerializedCallbackHeader(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xDCB350", Offset = "0xDCB350", VA = "0xDCB350")]
	public static extern IntPtr CSharp_AkCallbackInfo_pCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xDCB3D0", Offset = "0xDCB3D0", VA = "0xDCB3D0")]
	public static extern ulong CSharp_AkCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xDCB450", Offset = "0xDCB450", VA = "0xDCB450")]
	public static extern IntPtr CSharp_new_AkCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xDCB4C4", Offset = "0xDCB4C4", VA = "0xDCB4C4")]
	public static extern void CSharp_delete_AkCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xDCB544", Offset = "0xDCB544", VA = "0xDCB544")]
	public static extern uint CSharp_AkEventCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xDCB5C4", Offset = "0xDCB5C4", VA = "0xDCB5C4")]
	public static extern uint CSharp_AkEventCallbackInfo_eventID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xDCB644", Offset = "0xDCB644", VA = "0xDCB644")]
	public static extern IntPtr CSharp_new_AkEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xDCB6B8", Offset = "0xDCB6B8", VA = "0xDCB6B8")]
	public static extern void CSharp_delete_AkEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xDCB738", Offset = "0xDCB738", VA = "0xDCB738")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xDCB7B8", Offset = "0xDCB7B8", VA = "0xDCB7B8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xDCB838", Offset = "0xDCB838", VA = "0xDCB838")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xDCB8B8", Offset = "0xDCB8B8", VA = "0xDCB8B8")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xDCB938", Offset = "0xDCB938", VA = "0xDCB938")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xDCB9B8", Offset = "0xDCB9B8", VA = "0xDCB9B8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xDCBA38", Offset = "0xDCBA38", VA = "0xDCBA38")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xDCBAB8", Offset = "0xDCBAB8", VA = "0xDCBAB8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xDCBB38", Offset = "0xDCBB38", VA = "0xDCBB38")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xDCBBB8", Offset = "0xDCBBB8", VA = "0xDCBBB8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xDCBC38", Offset = "0xDCBC38", VA = "0xDCBC38")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xDCBCB8", Offset = "0xDCBCB8", VA = "0xDCBCB8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xDCBD38", Offset = "0xDCBD38", VA = "0xDCBD38")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xDCBDB8", Offset = "0xDCBDB8", VA = "0xDCBDB8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xDCBE38", Offset = "0xDCBE38", VA = "0xDCBE38")]
	public static extern IntPtr CSharp_new_AkMIDIEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xDCBEAC", Offset = "0xDCBEAC", VA = "0xDCBEAC")]
	public static extern void CSharp_delete_AkMIDIEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xDCBF2C", Offset = "0xDCBF2C", VA = "0xDCBF2C")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uIdentifier_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xDCBFAC", Offset = "0xDCBFAC", VA = "0xDCBFAC")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xDCC02C", Offset = "0xDCC02C", VA = "0xDCC02C")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_strLabel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xDCC0AC", Offset = "0xDCC0AC", VA = "0xDCC0AC")]
	public static extern IntPtr CSharp_new_AkMarkerCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xDCC120", Offset = "0xDCC120", VA = "0xDCC120")]
	public static extern void CSharp_delete_AkMarkerCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xDCC1A0", Offset = "0xDCC1A0", VA = "0xDCC1A0")]
	public static extern float CSharp_AkDurationCallbackInfo_fDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xDCC220", Offset = "0xDCC220", VA = "0xDCC220")]
	public static extern float CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xDCC2A0", Offset = "0xDCC2A0", VA = "0xDCC2A0")]
	public static extern uint CSharp_AkDurationCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xDCC320", Offset = "0xDCC320", VA = "0xDCC320")]
	public static extern uint CSharp_AkDurationCallbackInfo_mediaID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xDCC3A0", Offset = "0xDCC3A0", VA = "0xDCC3A0")]
	public static extern bool CSharp_AkDurationCallbackInfo_bStreaming_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xDCC428", Offset = "0xDCC428", VA = "0xDCC428")]
	public static extern IntPtr CSharp_new_AkDurationCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xDCC49C", Offset = "0xDCC49C", VA = "0xDCC49C")]
	public static extern void CSharp_delete_AkDurationCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xDCC51C", Offset = "0xDCC51C", VA = "0xDCC51C")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xDCC59C", Offset = "0xDCC59C", VA = "0xDCC59C")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xDCC61C", Offset = "0xDCC61C", VA = "0xDCC61C")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xDCC69C", Offset = "0xDCC69C", VA = "0xDCC69C")]
	public static extern IntPtr CSharp_new_AkDynamicSequenceItemCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xDCC710", Offset = "0xDCC710", VA = "0xDCC710")]
	public static extern void CSharp_delete_AkDynamicSequenceItemCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xDCC790", Offset = "0xDCC790", VA = "0xDCC790")]
	public static extern uint CSharp_AkMusicSyncCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xDCC810", Offset = "0xDCC810", VA = "0xDCC810")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xDCC890", Offset = "0xDCC890", VA = "0xDCC890")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xDCC910", Offset = "0xDCC910", VA = "0xDCC910")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xDCC990", Offset = "0xDCC990", VA = "0xDCC990")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xDCCA10", Offset = "0xDCCA10", VA = "0xDCCA10")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xDCCA90", Offset = "0xDCCA90", VA = "0xDCCA90")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xDCCB10", Offset = "0xDCCB10", VA = "0xDCCB10")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xDCCB90", Offset = "0xDCCB90", VA = "0xDCCB90")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xDCCC10", Offset = "0xDCCC10", VA = "0xDCCC10")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xDCCC90", Offset = "0xDCCC90", VA = "0xDCCC90")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_musicSyncType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xDCCD10", Offset = "0xDCCD10", VA = "0xDCCD10")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_userCueName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xDCCD90", Offset = "0xDCCD90", VA = "0xDCCD90")]
	public static extern IntPtr CSharp_new_AkMusicSyncCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xDCCE04", Offset = "0xDCCE04", VA = "0xDCCE04")]
	public static extern void CSharp_delete_AkMusicSyncCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xDCCE84", Offset = "0xDCCE84", VA = "0xDCCE84")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_playlistID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xDCCF04", Offset = "0xDCCF04", VA = "0xDCCF04")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uNumPlaylistItems_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xDCCF84", Offset = "0xDCCF84", VA = "0xDCCF84")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistSelection_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xDCD004", Offset = "0xDCD004", VA = "0xDCD004")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistItemDone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xDCD084", Offset = "0xDCD084", VA = "0xDCD084")]
	public static extern IntPtr CSharp_new_AkMusicPlaylistCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xDCD0F8", Offset = "0xDCD0F8", VA = "0xDCD0F8")]
	public static extern void CSharp_delete_AkMusicPlaylistCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xDCD178", Offset = "0xDCD178", VA = "0xDCD178")]
	public static extern uint CSharp_AkBankCallbackInfo_bankID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xDCD1F8", Offset = "0xDCD1F8", VA = "0xDCD1F8")]
	public static extern IntPtr CSharp_AkBankCallbackInfo_inMemoryBankPtr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xDCD278", Offset = "0xDCD278", VA = "0xDCD278")]
	public static extern int CSharp_AkBankCallbackInfo_loadResult_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xDCD2F8", Offset = "0xDCD2F8", VA = "0xDCD2F8")]
	public static extern int CSharp_AkBankCallbackInfo_memPoolId_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xDCD378", Offset = "0xDCD378", VA = "0xDCD378")]
	public static extern IntPtr CSharp_new_AkBankCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xDCD3EC", Offset = "0xDCD3EC", VA = "0xDCD3EC")]
	public static extern void CSharp_delete_AkBankCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xDCD46C", Offset = "0xDCD46C", VA = "0xDCD46C")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorCode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xDCD4EC", Offset = "0xDCD4EC", VA = "0xDCD4EC")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xDCD56C", Offset = "0xDCD56C", VA = "0xDCD56C")]
	public static extern uint CSharp_AkMonitoringCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xDCD5EC", Offset = "0xDCD5EC", VA = "0xDCD5EC")]
	public static extern ulong CSharp_AkMonitoringCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xDCD66C", Offset = "0xDCD66C", VA = "0xDCD66C")]
	public static extern IntPtr CSharp_AkMonitoringCallbackInfo_message_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xDCD6EC", Offset = "0xDCD6EC", VA = "0xDCD6EC")]
	public static extern IntPtr CSharp_new_AkMonitoringCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xDCD760", Offset = "0xDCD760", VA = "0xDCD760")]
	public static extern void CSharp_delete_AkMonitoringCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xDCD7E0", Offset = "0xDCD7E0", VA = "0xDCD7E0")]
	public static extern bool CSharp_AkAudioInterruptionCallbackInfo_bEnterInterruption_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xDCD868", Offset = "0xDCD868", VA = "0xDCD868")]
	public static extern IntPtr CSharp_new_AkAudioInterruptionCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xDCD8DC", Offset = "0xDCD8DC", VA = "0xDCD8DC")]
	public static extern void CSharp_delete_AkAudioInterruptionCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xDCD95C", Offset = "0xDCD95C", VA = "0xDCD95C")]
	public static extern bool CSharp_AkAudioSourceChangeCallbackInfo_bOtherAudioPlaying_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xDCD9E4", Offset = "0xDCD9E4", VA = "0xDCD9E4")]
	public static extern IntPtr CSharp_new_AkAudioSourceChangeCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xDCDA58", Offset = "0xDCDA58", VA = "0xDCDA58")]
	public static extern void CSharp_delete_AkAudioSourceChangeCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xDCDAD8", Offset = "0xDCDAD8", VA = "0xDCDAD8")]
	public static extern int CSharp_AkCallbackSerializer_Init(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xDCDB68", Offset = "0xDCDB68", VA = "0xDCDB68")]
	public static extern void CSharp_AkCallbackSerializer_Term();

	[PreserveSig]
	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xDCDBD8", Offset = "0xDCDBD8", VA = "0xDCDBD8")]
	public static extern IntPtr CSharp_AkCallbackSerializer_Lock();

	[PreserveSig]
	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xDCDC4C", Offset = "0xDCDC4C", VA = "0xDCDC4C")]
	public static extern void CSharp_AkCallbackSerializer_SetLocalOutput(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xDCDCCC", Offset = "0xDCDCCC", VA = "0xDCDCCC")]
	public static extern void CSharp_AkCallbackSerializer_Unlock();

	[PreserveSig]
	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xDCDD3C", Offset = "0xDCDD3C", VA = "0xDCDD3C")]
	public static extern int CSharp_AkCallbackSerializer_AudioSourceChangeCallbackFunc(bool jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xDCDDCC", Offset = "0xDCDDCC", VA = "0xDCDDCC")]
	public static extern IntPtr CSharp_new_AkCallbackSerializer();

	[PreserveSig]
	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xDCDE40", Offset = "0xDCDE40", VA = "0xDCDE40")]
	public static extern void CSharp_delete_AkCallbackSerializer(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xDB71BC", Offset = "0xDB71BC", VA = "0xDB71BC")]
	public static extern int CSharp_PostCode__SWIG_0(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xDB7348", Offset = "0xDB7348", VA = "0xDB7348")]
	public static extern int CSharp_PostCode__SWIG_1(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xDB74BC", Offset = "0xDB74BC", VA = "0xDB74BC")]
	public static extern int CSharp_PostCode__SWIG_2(int jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xDB75E0", Offset = "0xDB75E0", VA = "0xDB75E0")]
	public static extern int CSharp_PostCode__SWIG_3(int jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xDB76EC", Offset = "0xDB76EC", VA = "0xDB76EC")]
	public static extern int CSharp_PostCode__SWIG_4(int jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xDB7858", Offset = "0xDB7858", VA = "0xDB7858")]
	public static extern int CSharp_PostString__SWIG_0(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xDB79FC", Offset = "0xDB79FC", VA = "0xDB79FC")]
	public static extern int CSharp_PostString__SWIG_1(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000700")]
	[Address(RVA = "0xDB7B88", Offset = "0xDB7B88", VA = "0xDB7B88")]
	public static extern int CSharp_PostString__SWIG_2(string jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000701")]
	[Address(RVA = "0xDB7CC4", Offset = "0xDB7CC4", VA = "0xDB7CC4")]
	public static extern int CSharp_PostString__SWIG_3(string jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000702")]
	[Address(RVA = "0xDB7DE8", Offset = "0xDB7DE8", VA = "0xDB7DE8")]
	public static extern int CSharp_PostString__SWIG_4(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000703")]
	[Address(RVA = "0xDB7EEC", Offset = "0xDB7EEC", VA = "0xDB7EEC")]
	public static extern int CSharp_GetTimeStamp();

	[PreserveSig]
	[Token(Token = "0x6000704")]
	[Address(RVA = "0xDB7FC4", Offset = "0xDB7FC4", VA = "0xDB7FC4")]
	public static extern uint CSharp_GetNumNonZeroBits(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000705")]
	[Address(RVA = "0xDB80BC", Offset = "0xDB80BC", VA = "0xDB80BC")]
	public static extern void CSharp_AkGetDefaultHighPriorityThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000706")]
	[Address(RVA = "0xDB81C8", Offset = "0xDB81C8", VA = "0xDB81C8")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_0(uint jarg1, [In] uint[] jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000707")]
	[Address(RVA = "0xDB82F4", Offset = "0xDB82F4", VA = "0xDB82F4")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_1(uint jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000708")]
	[Address(RVA = "0xDB8410", Offset = "0xDB8410", VA = "0xDB8410")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000709")]
	[Address(RVA = "0xDB8524", Offset = "0xDB8524", VA = "0xDB8524")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x600070A")]
	[Address(RVA = "0xDCDEC0", Offset = "0xDCDEC0", VA = "0xDCDEC0")]
	public static extern void CSharp_AkPositioningInfo_fCenterPct_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600070B")]
	[Address(RVA = "0xDCDF50", Offset = "0xDCDF50", VA = "0xDCDF50")]
	public static extern float CSharp_AkPositioningInfo_fCenterPct_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600070C")]
	[Address(RVA = "0xDCDFD0", Offset = "0xDCDFD0", VA = "0xDCDFD0")]
	public static extern void CSharp_AkPositioningInfo_pannerType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600070D")]
	[Address(RVA = "0xDCE060", Offset = "0xDCE060", VA = "0xDCE060")]
	public static extern int CSharp_AkPositioningInfo_pannerType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600070E")]
	[Address(RVA = "0xDCE0E0", Offset = "0xDCE0E0", VA = "0xDCE0E0")]
	public static extern void CSharp_AkPositioningInfo_e3dPositioningType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600070F")]
	[Address(RVA = "0xDCE170", Offset = "0xDCE170", VA = "0xDCE170")]
	public static extern int CSharp_AkPositioningInfo_e3dPositioningType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000710")]
	[Address(RVA = "0xDCE1F0", Offset = "0xDCE1F0", VA = "0xDCE1F0")]
	public static extern void CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000711")]
	[Address(RVA = "0xDCE280", Offset = "0xDCE280", VA = "0xDCE280")]
	public static extern bool CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000712")]
	[Address(RVA = "0xDCE308", Offset = "0xDCE308", VA = "0xDCE308")]
	public static extern void CSharp_AkPositioningInfo_e3DSpatializationMode_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000713")]
	[Address(RVA = "0xDCE398", Offset = "0xDCE398", VA = "0xDCE398")]
	public static extern int CSharp_AkPositioningInfo_e3DSpatializationMode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000714")]
	[Address(RVA = "0xDCE418", Offset = "0xDCE418", VA = "0xDCE418")]
	public static extern void CSharp_AkPositioningInfo_bEnableAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000715")]
	[Address(RVA = "0xDCE4A8", Offset = "0xDCE4A8", VA = "0xDCE4A8")]
	public static extern bool CSharp_AkPositioningInfo_bEnableAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000716")]
	[Address(RVA = "0xDCE530", Offset = "0xDCE530", VA = "0xDCE530")]
	public static extern void CSharp_AkPositioningInfo_bUseConeAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000717")]
	[Address(RVA = "0xDCE5C0", Offset = "0xDCE5C0", VA = "0xDCE5C0")]
	public static extern bool CSharp_AkPositioningInfo_bUseConeAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000718")]
	[Address(RVA = "0xDCE648", Offset = "0xDCE648", VA = "0xDCE648")]
	public static extern void CSharp_AkPositioningInfo_fInnerAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000719")]
	[Address(RVA = "0xDCE6D8", Offset = "0xDCE6D8", VA = "0xDCE6D8")]
	public static extern float CSharp_AkPositioningInfo_fInnerAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600071A")]
	[Address(RVA = "0xDCE758", Offset = "0xDCE758", VA = "0xDCE758")]
	public static extern void CSharp_AkPositioningInfo_fOuterAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600071B")]
	[Address(RVA = "0xDCE7E8", Offset = "0xDCE7E8", VA = "0xDCE7E8")]
	public static extern float CSharp_AkPositioningInfo_fOuterAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600071C")]
	[Address(RVA = "0xDCE868", Offset = "0xDCE868", VA = "0xDCE868")]
	public static extern void CSharp_AkPositioningInfo_fConeMaxAttenuation_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600071D")]
	[Address(RVA = "0xDCE8F8", Offset = "0xDCE8F8", VA = "0xDCE8F8")]
	public static extern float CSharp_AkPositioningInfo_fConeMaxAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600071E")]
	[Address(RVA = "0xDCE978", Offset = "0xDCE978", VA = "0xDCE978")]
	public static extern void CSharp_AkPositioningInfo_LPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600071F")]
	[Address(RVA = "0xDCEA08", Offset = "0xDCEA08", VA = "0xDCEA08")]
	public static extern float CSharp_AkPositioningInfo_LPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000720")]
	[Address(RVA = "0xDCEA88", Offset = "0xDCEA88", VA = "0xDCEA88")]
	public static extern void CSharp_AkPositioningInfo_HPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000721")]
	[Address(RVA = "0xDCEB18", Offset = "0xDCEB18", VA = "0xDCEB18")]
	public static extern float CSharp_AkPositioningInfo_HPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000722")]
	[Address(RVA = "0xDCEB98", Offset = "0xDCEB98", VA = "0xDCEB98")]
	public static extern void CSharp_AkPositioningInfo_fMaxDistance_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000723")]
	[Address(RVA = "0xDCEC28", Offset = "0xDCEC28", VA = "0xDCEC28")]
	public static extern float CSharp_AkPositioningInfo_fMaxDistance_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000724")]
	[Address(RVA = "0xDCECA8", Offset = "0xDCECA8", VA = "0xDCECA8")]
	public static extern void CSharp_AkPositioningInfo_fVolDryAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000725")]
	[Address(RVA = "0xDCED38", Offset = "0xDCED38", VA = "0xDCED38")]
	public static extern float CSharp_AkPositioningInfo_fVolDryAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000726")]
	[Address(RVA = "0xDCEDB8", Offset = "0xDCEDB8", VA = "0xDCEDB8")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000727")]
	[Address(RVA = "0xDCEE48", Offset = "0xDCEE48", VA = "0xDCEE48")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000728")]
	[Address(RVA = "0xDCEEC8", Offset = "0xDCEEC8", VA = "0xDCEEC8")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000729")]
	[Address(RVA = "0xDCEF58", Offset = "0xDCEF58", VA = "0xDCEF58")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600072A")]
	[Address(RVA = "0xDCEFD8", Offset = "0xDCEFD8", VA = "0xDCEFD8")]
	public static extern void CSharp_AkPositioningInfo_LPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600072B")]
	[Address(RVA = "0xDCF068", Offset = "0xDCF068", VA = "0xDCF068")]
	public static extern float CSharp_AkPositioningInfo_LPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600072C")]
	[Address(RVA = "0xDCF0E8", Offset = "0xDCF0E8", VA = "0xDCF0E8")]
	public static extern void CSharp_AkPositioningInfo_HPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600072D")]
	[Address(RVA = "0xDCF178", Offset = "0xDCF178", VA = "0xDCF178")]
	public static extern float CSharp_AkPositioningInfo_HPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600072E")]
	[Address(RVA = "0xDCF1F8", Offset = "0xDCF1F8", VA = "0xDCF1F8")]
	public static extern IntPtr CSharp_new_AkPositioningInfo();

	[PreserveSig]
	[Token(Token = "0x600072F")]
	[Address(RVA = "0xDCF26C", Offset = "0xDCF26C", VA = "0xDCF26C")]
	public static extern void CSharp_delete_AkPositioningInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000730")]
	[Address(RVA = "0xDCF2EC", Offset = "0xDCF2EC", VA = "0xDCF2EC")]
	public static extern void CSharp_AkObjectInfo_objID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000731")]
	[Address(RVA = "0xDCF37C", Offset = "0xDCF37C", VA = "0xDCF37C")]
	public static extern uint CSharp_AkObjectInfo_objID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000732")]
	[Address(RVA = "0xDCF3FC", Offset = "0xDCF3FC", VA = "0xDCF3FC")]
	public static extern void CSharp_AkObjectInfo_parentID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000733")]
	[Address(RVA = "0xDCF48C", Offset = "0xDCF48C", VA = "0xDCF48C")]
	public static extern uint CSharp_AkObjectInfo_parentID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000734")]
	[Address(RVA = "0xDCF50C", Offset = "0xDCF50C", VA = "0xDCF50C")]
	public static extern void CSharp_AkObjectInfo_iDepth_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000735")]
	[Address(RVA = "0xDCF59C", Offset = "0xDCF59C", VA = "0xDCF59C")]
	public static extern int CSharp_AkObjectInfo_iDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000736")]
	[Address(RVA = "0xDCF61C", Offset = "0xDCF61C", VA = "0xDCF61C")]
	public static extern void CSharp_AkObjectInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000737")]
	[Address(RVA = "0xDCF69C", Offset = "0xDCF69C", VA = "0xDCF69C")]
	public static extern int CSharp_AkObjectInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000738")]
	[Address(RVA = "0xDCF710", Offset = "0xDCF710", VA = "0xDCF710")]
	public static extern void CSharp_AkObjectInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000739")]
	[Address(RVA = "0xDCF7A0", Offset = "0xDCF7A0", VA = "0xDCF7A0")]
	public static extern IntPtr CSharp_new_AkObjectInfo();

	[PreserveSig]
	[Token(Token = "0x600073A")]
	[Address(RVA = "0xDCF814", Offset = "0xDCF814", VA = "0xDCF814")]
	public static extern void CSharp_delete_AkObjectInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600073B")]
	[Address(RVA = "0xDB8670", Offset = "0xDB8670", VA = "0xDB8670")]
	public static extern int CSharp_GetPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600073C")]
	[Address(RVA = "0xDB87C0", Offset = "0xDB87C0", VA = "0xDB87C0")]
	public static extern int CSharp_GetListenerPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600073D")]
	[Address(RVA = "0xDB891C", Offset = "0xDB891C", VA = "0xDB891C")]
	public static extern int CSharp_GetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x600073E")]
	[Address(RVA = "0xDB8A98", Offset = "0xDB8A98", VA = "0xDB8A98")]
	public static extern int CSharp_GetRTPCValue__SWIG_1(string jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x600073F")]
	[Address(RVA = "0xDB8C14", Offset = "0xDB8C14", VA = "0xDB8C14")]
	public static extern int CSharp_GetSwitch__SWIG_0(uint jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000740")]
	[Address(RVA = "0xDB8D58", Offset = "0xDB8D58", VA = "0xDB8D58")]
	public static extern int CSharp_GetSwitch__SWIG_1(string jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000741")]
	[Address(RVA = "0xDB8E78", Offset = "0xDB8E78", VA = "0xDB8E78")]
	public static extern int CSharp_GetState__SWIG_0(uint jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000742")]
	[Address(RVA = "0xDB8F7C", Offset = "0xDB8F7C", VA = "0xDB8F7C")]
	public static extern int CSharp_GetState__SWIG_1(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000743")]
	[Address(RVA = "0xDB90E4", Offset = "0xDB90E4", VA = "0xDB90E4")]
	public static extern int CSharp_GetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000744")]
	[Address(RVA = "0xDB9248", Offset = "0xDB9248", VA = "0xDB9248")]
	public static extern int CSharp_GetGameObjectDryLevelValue(ulong jarg1, ulong jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000745")]
	[Address(RVA = "0xDB93BC", Offset = "0xDB93BC", VA = "0xDB93BC")]
	public static extern int CSharp_GetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, out float jarg3, out float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000746")]
	[Address(RVA = "0xDB94EC", Offset = "0xDB94EC", VA = "0xDB94EC")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_0(uint jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000747")]
	[Address(RVA = "0xDB960C", Offset = "0xDB960C", VA = "0xDB960C")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_1(string jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000748")]
	[Address(RVA = "0xDB9744", Offset = "0xDB9744", VA = "0xDB9744")]
	public static extern int CSharp_GetPositioningInfo(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000749")]
	[Address(RVA = "0xDB9870", Offset = "0xDB9870", VA = "0xDB9870")]
	public static extern bool CSharp_GetIsGameObjectActive(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600074A")]
	[Address(RVA = "0xDB9994", Offset = "0xDB9994", VA = "0xDB9994")]
	public static extern float CSharp_GetMaxRadius(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600074B")]
	[Address(RVA = "0xDB9A78", Offset = "0xDB9A78", VA = "0xDB9A78")]
	public static extern uint CSharp_GetEventIDFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600074C")]
	[Address(RVA = "0xDB9B5C", Offset = "0xDB9B5C", VA = "0xDB9B5C")]
	public static extern ulong CSharp_GetGameObjectFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600074D")]
	[Address(RVA = "0xDB9C90", Offset = "0xDB9C90", VA = "0xDB9C90")]
	public static extern int CSharp_GetPlayingIDsFromGameObject(ulong jarg1, ref uint jarg2, [Out] uint[] jarg3);

	[PreserveSig]
	[Token(Token = "0x600074E")]
	[Address(RVA = "0xDB9E34", Offset = "0xDB9E34", VA = "0xDB9E34")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x600074F")]
	[Address(RVA = "0xDB9F48", Offset = "0xDB9F48", VA = "0xDB9F48")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000750")]
	[Address(RVA = "0xDBA044", Offset = "0xDBA044", VA = "0xDBA044")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000751")]
	[Address(RVA = "0xDBA128", Offset = "0xDBA128", VA = "0xDBA128")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000752")]
	[Address(RVA = "0xDBA20C", Offset = "0xDBA20C", VA = "0xDBA20C")]
	public static extern void CSharp_AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000753")]
	[Address(RVA = "0xDBA2F0", Offset = "0xDBA2F0", VA = "0xDBA2F0")]
	public static extern byte CSharp_ChannelMaskToNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000754")]
	[Address(RVA = "0xDBA3D4", Offset = "0xDBA3D4", VA = "0xDBA3D4")]
	public static extern uint CSharp_ChannelMaskFromNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000755")]
	[Address(RVA = "0xDBA4C8", Offset = "0xDBA4C8", VA = "0xDBA4C8")]
	public static extern byte CSharp_ChannelBitToIndex(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000756")]
	[Address(RVA = "0xDBA5BC", Offset = "0xDBA5BC", VA = "0xDBA5BC")]
	public static extern bool CSharp_HasSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000757")]
	[Address(RVA = "0xDBA6A8", Offset = "0xDBA6A8", VA = "0xDBA6A8")]
	public static extern bool CSharp_HasStrictlyOnePairOfSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000758")]
	[Address(RVA = "0xDBA794", Offset = "0xDBA794", VA = "0xDBA794")]
	public static extern bool CSharp_HasSideAndRearChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000759")]
	[Address(RVA = "0xDBA880", Offset = "0xDBA880", VA = "0xDBA880")]
	public static extern bool CSharp_HasHeightChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600075A")]
	[Address(RVA = "0xDBA96C", Offset = "0xDBA96C", VA = "0xDBA96C")]
	public static extern uint CSharp_BackToSideChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600075B")]
	[Address(RVA = "0xDBAA68", Offset = "0xDBAA68", VA = "0xDBAA68")]
	public static extern uint CSharp_StdChannelIndexToDisplayIndex(int jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600075C")]
	[Address(RVA = "0xDCF894", Offset = "0xDCF894", VA = "0xDCF894")]
	public static extern void CSharp_AkChannelConfig_uNumChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600075D")]
	[Address(RVA = "0xDCF924", Offset = "0xDCF924", VA = "0xDCF924")]
	public static extern uint CSharp_AkChannelConfig_uNumChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600075E")]
	[Address(RVA = "0xDCF9A4", Offset = "0xDCF9A4", VA = "0xDCF9A4")]
	public static extern void CSharp_AkChannelConfig_eConfigType_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600075F")]
	[Address(RVA = "0xDCFA34", Offset = "0xDCFA34", VA = "0xDCFA34")]
	public static extern uint CSharp_AkChannelConfig_eConfigType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000760")]
	[Address(RVA = "0xDCFAB4", Offset = "0xDCFAB4", VA = "0xDCFAB4")]
	public static extern void CSharp_AkChannelConfig_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000761")]
	[Address(RVA = "0xDCFB44", Offset = "0xDCFB44", VA = "0xDCFB44")]
	public static extern uint CSharp_AkChannelConfig_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000762")]
	[Address(RVA = "0xDCFBC4", Offset = "0xDCFBC4", VA = "0xDCFBC4")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000763")]
	[Address(RVA = "0xDCFC38", Offset = "0xDCFC38", VA = "0xDCFC38")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000764")]
	[Address(RVA = "0xDCFCC8", Offset = "0xDCFCC8", VA = "0xDCFCC8")]
	public static extern void CSharp_AkChannelConfig_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000765")]
	[Address(RVA = "0xDCFD48", Offset = "0xDCFD48", VA = "0xDCFD48")]
	public static extern void CSharp_AkChannelConfig_SetStandard(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000766")]
	[Address(RVA = "0xDCFDD8", Offset = "0xDCFDD8", VA = "0xDCFDD8")]
	public static extern void CSharp_AkChannelConfig_SetStandardOrAnonymous(IntPtr jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000767")]
	[Address(RVA = "0xDCFE70", Offset = "0xDCFE70", VA = "0xDCFE70")]
	public static extern void CSharp_AkChannelConfig_SetAnonymous(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000768")]
	[Address(RVA = "0xDCFF00", Offset = "0xDCFF00", VA = "0xDCFF00")]
	public static extern void CSharp_AkChannelConfig_SetAmbisonic(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000769")]
	[Address(RVA = "0xDCFF90", Offset = "0xDCFF90", VA = "0xDCFF90")]
	public static extern bool CSharp_AkChannelConfig_IsValid(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600076A")]
	[Address(RVA = "0xDD0018", Offset = "0xDD0018", VA = "0xDD0018")]
	public static extern uint CSharp_AkChannelConfig_Serialize(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600076B")]
	[Address(RVA = "0xDD0098", Offset = "0xDD0098", VA = "0xDD0098")]
	public static extern void CSharp_AkChannelConfig_Deserialize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600076C")]
	[Address(RVA = "0xDD0128", Offset = "0xDD0128", VA = "0xDD0128")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveLFE(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600076D")]
	[Address(RVA = "0xDD01A8", Offset = "0xDD01A8", VA = "0xDD01A8")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveCenter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600076E")]
	[Address(RVA = "0xDD0228", Offset = "0xDD0228", VA = "0xDD0228")]
	public static extern bool CSharp_AkChannelConfig_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600076F")]
	[Address(RVA = "0xDD02B0", Offset = "0xDD02B0", VA = "0xDD02B0")]
	public static extern void CSharp_delete_AkChannelConfig(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000770")]
	[Address(RVA = "0xDD0330", Offset = "0xDD0330", VA = "0xDD0330")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000771")]
	[Address(RVA = "0xDD03A4", Offset = "0xDD03A4", VA = "0xDD03A4")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000772")]
	[Address(RVA = "0xDD043C", Offset = "0xDD043C", VA = "0xDD043C")]
	public static extern void CSharp_AkImageSourceParams_sourcePosition_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000773")]
	[Address(RVA = "0xDD04CC", Offset = "0xDD04CC", VA = "0xDD04CC")]
	public static extern IntPtr CSharp_AkImageSourceParams_sourcePosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000774")]
	[Address(RVA = "0xDD054C", Offset = "0xDD054C", VA = "0xDD054C")]
	public static extern void CSharp_AkImageSourceParams_fDistanceScalingFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000775")]
	[Address(RVA = "0xDD05DC", Offset = "0xDD05DC", VA = "0xDD05DC")]
	public static extern float CSharp_AkImageSourceParams_fDistanceScalingFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000776")]
	[Address(RVA = "0xDD065C", Offset = "0xDD065C", VA = "0xDD065C")]
	public static extern void CSharp_AkImageSourceParams_fLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000777")]
	[Address(RVA = "0xDD06EC", Offset = "0xDD06EC", VA = "0xDD06EC")]
	public static extern float CSharp_AkImageSourceParams_fLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000778")]
	[Address(RVA = "0xDD076C", Offset = "0xDD076C", VA = "0xDD076C")]
	public static extern void CSharp_AkImageSourceParams_fDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000779")]
	[Address(RVA = "0xDD07FC", Offset = "0xDD07FC", VA = "0xDD07FC")]
	public static extern float CSharp_AkImageSourceParams_fDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600077A")]
	[Address(RVA = "0xDD087C", Offset = "0xDD087C", VA = "0xDD087C")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionEmitterSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600077B")]
	[Address(RVA = "0xDD090C", Offset = "0xDD090C", VA = "0xDD090C")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionEmitterSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600077C")]
	[Address(RVA = "0xDD098C", Offset = "0xDD098C", VA = "0xDD098C")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionListenerSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600077D")]
	[Address(RVA = "0xDD0A1C", Offset = "0xDD0A1C", VA = "0xDD0A1C")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionListenerSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600077E")]
	[Address(RVA = "0xDD0A9C", Offset = "0xDD0A9C", VA = "0xDD0A9C")]
	public static extern void CSharp_delete_AkImageSourceParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600077F")]
	[Address(RVA = "0xDBAB5C", Offset = "0xDBAB5C", VA = "0xDBAB5C")]
	public static extern float CSharp_kDefaultMaxPathLength_get();

	[PreserveSig]
	[Token(Token = "0x6000780")]
	[Address(RVA = "0xDBAC28", Offset = "0xDBAC28", VA = "0xDBAC28")]
	public static extern uint CSharp_kDefaultDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x6000781")]
	[Address(RVA = "0xDBACF8", Offset = "0xDBACF8", VA = "0xDBACF8")]
	public static extern uint CSharp_kDefaultDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6000782")]
	[Address(RVA = "0xDBADC8", Offset = "0xDBADC8", VA = "0xDBADC8")]
	public static extern float CSharp_kMaxDiffraction_get();

	[PreserveSig]
	[Token(Token = "0x6000783")]
	[Address(RVA = "0xDBAE94", Offset = "0xDBAE94", VA = "0xDBAE94")]
	public static extern uint CSharp_kListenerDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x6000784")]
	[Address(RVA = "0xDBAF64", Offset = "0xDBAF64", VA = "0xDBAF64")]
	public static extern uint CSharp_kListenerDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6000785")]
	[Address(RVA = "0xDBB034", Offset = "0xDBB034", VA = "0xDBB034")]
	public static extern uint CSharp_kPortalToPortalDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6000786")]
	[Address(RVA = "0xDBB10C", Offset = "0xDBB10C", VA = "0xDBB10C")]
	public static extern void CSharp_g_SpatialAudioPoolId_set(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000787")]
	[Address(RVA = "0xDBB1E8", Offset = "0xDBB1E8", VA = "0xDBB1E8")]
	public static extern int CSharp_g_SpatialAudioPoolId_get();

	[PreserveSig]
	[Token(Token = "0x6000788")]
	[Address(RVA = "0xDD0B1C", Offset = "0xDD0B1C", VA = "0xDD0B1C")]
	public static extern int CSharp__ArrayPoolSpatialAudio_Get();

	[PreserveSig]
	[Token(Token = "0x6000789")]
	[Address(RVA = "0xDD0B90", Offset = "0xDD0B90", VA = "0xDD0B90")]
	public static extern IntPtr CSharp_new__ArrayPoolSpatialAudio();

	[PreserveSig]
	[Token(Token = "0x600078A")]
	[Address(RVA = "0xDD0C04", Offset = "0xDD0C04", VA = "0xDD0C04")]
	public static extern void CSharp_delete__ArrayPoolSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600078B")]
	[Address(RVA = "0xDD0C84", Offset = "0xDD0C84", VA = "0xDD0C84")]
	public static extern IntPtr CSharp_new_AkSpatialAudioInitSettings();

	[PreserveSig]
	[Token(Token = "0x600078C")]
	[Address(RVA = "0xDD0CF8", Offset = "0xDD0CF8", VA = "0xDD0CF8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600078D")]
	[Address(RVA = "0xDD0D88", Offset = "0xDD0D88", VA = "0xDD0D88")]
	public static extern int CSharp_AkSpatialAudioInitSettings_uPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600078E")]
	[Address(RVA = "0xDD0E08", Offset = "0xDD0E08", VA = "0xDD0E08")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600078F")]
	[Address(RVA = "0xDD0E98", Offset = "0xDD0E98", VA = "0xDD0E98")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000790")]
	[Address(RVA = "0xDD0F18", Offset = "0xDD0F18", VA = "0xDD0F18")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000791")]
	[Address(RVA = "0xDD0FA8", Offset = "0xDD0FA8", VA = "0xDD0FA8")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000792")]
	[Address(RVA = "0xDD1028", Offset = "0xDD1028", VA = "0xDD1028")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000793")]
	[Address(RVA = "0xDD10B8", Offset = "0xDD10B8", VA = "0xDD10B8")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000794")]
	[Address(RVA = "0xDD1138", Offset = "0xDD1138", VA = "0xDD1138")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000795")]
	[Address(RVA = "0xDD11C8", Offset = "0xDD11C8", VA = "0xDD11C8")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000796")]
	[Address(RVA = "0xDD1248", Offset = "0xDD1248", VA = "0xDD1248")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000797")]
	[Address(RVA = "0xDD12D8", Offset = "0xDD12D8", VA = "0xDD12D8")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000798")]
	[Address(RVA = "0xDD1358", Offset = "0xDD1358", VA = "0xDD1358")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fMovementThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000799")]
	[Address(RVA = "0xDD13E8", Offset = "0xDD13E8", VA = "0xDD13E8")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fMovementThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600079A")]
	[Address(RVA = "0xDD1468", Offset = "0xDD1468", VA = "0xDD1468")]
	public static extern void CSharp_delete_AkSpatialAudioInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600079B")]
	[Address(RVA = "0xDD14E8", Offset = "0xDD14E8", VA = "0xDD14E8")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600079C")]
	[Address(RVA = "0xDD155C", Offset = "0xDD155C", VA = "0xDD155C")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600079D")]
	[Address(RVA = "0xDD15F4", Offset = "0xDD15F4", VA = "0xDD15F4")]
	public static extern void CSharp_delete_AkImageSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600079E")]
	[Address(RVA = "0xDD1674", Offset = "0xDD1674", VA = "0xDD1674")]
	public static extern void CSharp_AkImageSourceSettings_SetOneTexture(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600079F")]
	[Address(RVA = "0xDD1704", Offset = "0xDD1704", VA = "0xDD1704")]
	public static extern void CSharp_AkImageSourceSettings_SetName(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xDD17A8", Offset = "0xDD17A8", VA = "0xDD17A8")]
	public static extern void CSharp_AkImageSourceSettings_params__set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xDD1838", Offset = "0xDD1838", VA = "0xDD1838")]
	public static extern IntPtr CSharp_AkImageSourceSettings_params__get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xDD18B8", Offset = "0xDD18B8", VA = "0xDD18B8")]
	public static extern IntPtr CSharp_new_AkEmitterSettings();

	[PreserveSig]
	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xDD192C", Offset = "0xDD192C", VA = "0xDD192C")]
	public static extern void CSharp_AkEmitterSettings_reflectAuxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xDD19BC", Offset = "0xDD19BC", VA = "0xDD19BC")]
	public static extern uint CSharp_AkEmitterSettings_reflectAuxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xDD1A3C", Offset = "0xDD1A3C", VA = "0xDD1A3C")]
	public static extern void CSharp_AkEmitterSettings_reflectionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xDD1ACC", Offset = "0xDD1ACC", VA = "0xDD1ACC")]
	public static extern float CSharp_AkEmitterSettings_reflectionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xDD1B4C", Offset = "0xDD1B4C", VA = "0xDD1B4C")]
	public static extern void CSharp_AkEmitterSettings_reflectionsAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xDD1BDC", Offset = "0xDD1BDC", VA = "0xDD1BDC")]
	public static extern float CSharp_AkEmitterSettings_reflectionsAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xDD1C5C", Offset = "0xDD1C5C", VA = "0xDD1C5C")]
	public static extern void CSharp_AkEmitterSettings_reflectionsOrder_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xDD1CEC", Offset = "0xDD1CEC", VA = "0xDD1CEC")]
	public static extern uint CSharp_AkEmitterSettings_reflectionsOrder_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xDD1D6C", Offset = "0xDD1D6C", VA = "0xDD1D6C")]
	public static extern void CSharp_AkEmitterSettings_reflectorFilterMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xDD1DFC", Offset = "0xDD1DFC", VA = "0xDD1DFC")]
	public static extern uint CSharp_AkEmitterSettings_reflectorFilterMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xDD1E7C", Offset = "0xDD1E7C", VA = "0xDD1E7C")]
	public static extern void CSharp_AkEmitterSettings_roomReverbAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xDD1F0C", Offset = "0xDD1F0C", VA = "0xDD1F0C")]
	public static extern float CSharp_AkEmitterSettings_roomReverbAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xDD1F8C", Offset = "0xDD1F8C", VA = "0xDD1F8C")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxEdges_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xDD201C", Offset = "0xDD201C", VA = "0xDD201C")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxEdges_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xDD209C", Offset = "0xDD209C", VA = "0xDD209C")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xDD212C", Offset = "0xDD212C", VA = "0xDD212C")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xDD21AC", Offset = "0xDD21AC", VA = "0xDD21AC")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xDD223C", Offset = "0xDD223C", VA = "0xDD223C")]
	public static extern float CSharp_AkEmitterSettings_diffractionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xDD22BC", Offset = "0xDD22BC", VA = "0xDD22BC")]
	public static extern void CSharp_AkEmitterSettings_useImageSources_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xDD234C", Offset = "0xDD234C", VA = "0xDD234C")]
	public static extern byte CSharp_AkEmitterSettings_useImageSources_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xDD23CC", Offset = "0xDD23CC", VA = "0xDD23CC")]
	public static extern void CSharp_delete_AkEmitterSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xDD244C", Offset = "0xDD244C", VA = "0xDD244C")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xDD24C0", Offset = "0xDD24C0", VA = "0xDD24C0")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_1(float jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xDD2560", Offset = "0xDD2560", VA = "0xDD2560")]
	public static extern void CSharp_AkVertex_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xDD25F0", Offset = "0xDD25F0", VA = "0xDD25F0")]
	public static extern float CSharp_AkVertex_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xDD2670", Offset = "0xDD2670", VA = "0xDD2670")]
	public static extern void CSharp_AkVertex_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xDD2700", Offset = "0xDD2700", VA = "0xDD2700")]
	public static extern float CSharp_AkVertex_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xDD2780", Offset = "0xDD2780", VA = "0xDD2780")]
	public static extern void CSharp_AkVertex_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xDD2810", Offset = "0xDD2810", VA = "0xDD2810")]
	public static extern float CSharp_AkVertex_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xDD2890", Offset = "0xDD2890", VA = "0xDD2890")]
	public static extern void CSharp_AkVertex_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xDD2910", Offset = "0xDD2910", VA = "0xDD2910")]
	public static extern int CSharp_AkVertex_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xDD2984", Offset = "0xDD2984", VA = "0xDD2984")]
	public static extern void CSharp_AkVertex_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xDD2A14", Offset = "0xDD2A14", VA = "0xDD2A14")]
	public static extern void CSharp_delete_AkVertex(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xDD2A94", Offset = "0xDD2A94", VA = "0xDD2A94")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xDD2B08", Offset = "0xDD2B08", VA = "0xDD2B08")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_1(ushort jarg1, ushort jarg2, ushort jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xDD2BB0", Offset = "0xDD2BB0", VA = "0xDD2BB0")]
	public static extern void CSharp_AkTriangle_point0_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xDD2C40", Offset = "0xDD2C40", VA = "0xDD2C40")]
	public static extern ushort CSharp_AkTriangle_point0_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xDD2CC0", Offset = "0xDD2CC0", VA = "0xDD2CC0")]
	public static extern void CSharp_AkTriangle_point1_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xDD2D50", Offset = "0xDD2D50", VA = "0xDD2D50")]
	public static extern ushort CSharp_AkTriangle_point1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xDD2DD0", Offset = "0xDD2DD0", VA = "0xDD2DD0")]
	public static extern void CSharp_AkTriangle_point2_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xDD2E60", Offset = "0xDD2E60", VA = "0xDD2E60")]
	public static extern ushort CSharp_AkTriangle_point2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xDD2EE0", Offset = "0xDD2EE0", VA = "0xDD2EE0")]
	public static extern void CSharp_AkTriangle_surface_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xDD2F70", Offset = "0xDD2F70", VA = "0xDD2F70")]
	public static extern ushort CSharp_AkTriangle_surface_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xDD2FF0", Offset = "0xDD2FF0", VA = "0xDD2FF0")]
	public static extern void CSharp_AkTriangle_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xDD3070", Offset = "0xDD3070", VA = "0xDD3070")]
	public static extern int CSharp_AkTriangle_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xDD30E4", Offset = "0xDD30E4", VA = "0xDD30E4")]
	public static extern void CSharp_AkTriangle_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xDD3174", Offset = "0xDD3174", VA = "0xDD3174")]
	public static extern void CSharp_delete_AkTriangle(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xDD31F4", Offset = "0xDD31F4", VA = "0xDD31F4")]
	public static extern IntPtr CSharp_new_AkAcousticSurface();

	[PreserveSig]
	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xDD3268", Offset = "0xDD3268", VA = "0xDD3268")]
	public static extern void CSharp_AkAcousticSurface_textureID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xDD32F8", Offset = "0xDD32F8", VA = "0xDD32F8")]
	public static extern uint CSharp_AkAcousticSurface_textureID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xDD3378", Offset = "0xDD3378", VA = "0xDD3378")]
	public static extern void CSharp_AkAcousticSurface_reflectorChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xDD3408", Offset = "0xDD3408", VA = "0xDD3408")]
	public static extern uint CSharp_AkAcousticSurface_reflectorChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xDD3488", Offset = "0xDD3488", VA = "0xDD3488")]
	public static extern void CSharp_AkAcousticSurface_strName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xDD352C", Offset = "0xDD352C", VA = "0xDD352C")]
	public static extern IntPtr CSharp_AkAcousticSurface_strName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xDD35AC", Offset = "0xDD35AC", VA = "0xDD35AC")]
	public static extern void CSharp_AkAcousticSurface_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xDD362C", Offset = "0xDD362C", VA = "0xDD362C")]
	public static extern void CSharp_AkAcousticSurface_DeleteName(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xDD36AC", Offset = "0xDD36AC", VA = "0xDD36AC")]
	public static extern int CSharp_AkAcousticSurface_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xDD3720", Offset = "0xDD3720", VA = "0xDD3720")]
	public static extern void CSharp_AkAcousticSurface_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xDD37B0", Offset = "0xDD37B0", VA = "0xDD37B0")]
	public static extern void CSharp_delete_AkAcousticSurface(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xDD3830", Offset = "0xDD3830", VA = "0xDD3830")]
	public static extern void CSharp_AkReflectionPathInfo_imageSource_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xDD38C0", Offset = "0xDD38C0", VA = "0xDD38C0")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_imageSource_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xDD3940", Offset = "0xDD3940", VA = "0xDD3940")]
	public static extern void CSharp_AkReflectionPathInfo_numPathPoints_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xDD39D0", Offset = "0xDD39D0", VA = "0xDD39D0")]
	public static extern uint CSharp_AkReflectionPathInfo_numPathPoints_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xDD3A50", Offset = "0xDD3A50", VA = "0xDD3A50")]
	public static extern void CSharp_AkReflectionPathInfo_numReflections_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xDD3AE0", Offset = "0xDD3AE0", VA = "0xDD3AE0")]
	public static extern uint CSharp_AkReflectionPathInfo_numReflections_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xDD3B60", Offset = "0xDD3B60", VA = "0xDD3B60")]
	public static extern void CSharp_AkReflectionPathInfo_level_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xDD3BF0", Offset = "0xDD3BF0", VA = "0xDD3BF0")]
	public static extern float CSharp_AkReflectionPathInfo_level_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xDD3C70", Offset = "0xDD3C70", VA = "0xDD3C70")]
	public static extern void CSharp_AkReflectionPathInfo_isOccluded_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xDD3D00", Offset = "0xDD3D00", VA = "0xDD3D00")]
	public static extern bool CSharp_AkReflectionPathInfo_isOccluded_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xDD3D88", Offset = "0xDD3D88", VA = "0xDD3D88")]
	public static extern int CSharp_AkReflectionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xDD3DFC", Offset = "0xDD3DFC", VA = "0xDD3DFC")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetPathPoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xDD3E8C", Offset = "0xDD3E8C", VA = "0xDD3E8C")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetAcousticSurface(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xDD3F1C", Offset = "0xDD3F1C", VA = "0xDD3F1C")]
	public static extern float CSharp_AkReflectionPathInfo_GetDiffraction(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xDD3FAC", Offset = "0xDD3FAC", VA = "0xDD3FAC")]
	public static extern void CSharp_AkReflectionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xDD403C", Offset = "0xDD403C", VA = "0xDD403C")]
	public static extern IntPtr CSharp_new_AkReflectionPathInfo();

	[PreserveSig]
	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xDD40B0", Offset = "0xDD40B0", VA = "0xDD40B0")]
	public static extern void CSharp_delete_AkReflectionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xDD4130", Offset = "0xDD4130", VA = "0xDD4130")]
	public static extern void CSharp_AkDiffractionPathInfo_virtualPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xDD41C0", Offset = "0xDD41C0", VA = "0xDD41C0")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_virtualPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xDD4240", Offset = "0xDD4240", VA = "0xDD4240")]
	public static extern void CSharp_AkDiffractionPathInfo_nodeCount_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xDD42D0", Offset = "0xDD42D0", VA = "0xDD42D0")]
	public static extern uint CSharp_AkDiffractionPathInfo_nodeCount_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xDD4350", Offset = "0xDD4350", VA = "0xDD4350")]
	public static extern void CSharp_AkDiffractionPathInfo_diffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xDD43E0", Offset = "0xDD43E0", VA = "0xDD43E0")]
	public static extern float CSharp_AkDiffractionPathInfo_diffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xDD4460", Offset = "0xDD4460", VA = "0xDD4460")]
	public static extern void CSharp_AkDiffractionPathInfo_totLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xDD44F0", Offset = "0xDD44F0", VA = "0xDD44F0")]
	public static extern float CSharp_AkDiffractionPathInfo_totLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xDD4570", Offset = "0xDD4570", VA = "0xDD4570")]
	public static extern void CSharp_AkDiffractionPathInfo_obstructionValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xDD4600", Offset = "0xDD4600", VA = "0xDD4600")]
	public static extern float CSharp_AkDiffractionPathInfo_obstructionValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xDD4680", Offset = "0xDD4680", VA = "0xDD4680")]
	public static extern int CSharp_AkDiffractionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xDD46F4", Offset = "0xDD46F4", VA = "0xDD46F4")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_GetNodes(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xDD4784", Offset = "0xDD4784", VA = "0xDD4784")]
	public static extern float CSharp_AkDiffractionPathInfo_GetAngles(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xDD4814", Offset = "0xDD4814", VA = "0xDD4814")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetPortals(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xDD48A4", Offset = "0xDD48A4", VA = "0xDD48A4")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetRooms(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xDD4934", Offset = "0xDD4934", VA = "0xDD4934")]
	public static extern void CSharp_AkDiffractionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xDD49C4", Offset = "0xDD49C4", VA = "0xDD49C4")]
	public static extern IntPtr CSharp_new_AkDiffractionPathInfo();

	[PreserveSig]
	[Token(Token = "0x6000800")]
	[Address(RVA = "0xDD4A38", Offset = "0xDD4A38", VA = "0xDD4A38")]
	public static extern void CSharp_delete_AkDiffractionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000801")]
	[Address(RVA = "0xDD4AB8", Offset = "0xDD4AB8", VA = "0xDD4AB8")]
	public static extern IntPtr CSharp_new_AkRoomParams();

	[PreserveSig]
	[Token(Token = "0x6000802")]
	[Address(RVA = "0xDD4B2C", Offset = "0xDD4B2C", VA = "0xDD4B2C")]
	public static extern void CSharp_AkRoomParams_Up_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000803")]
	[Address(RVA = "0xDD4BBC", Offset = "0xDD4BBC", VA = "0xDD4BBC")]
	public static extern IntPtr CSharp_AkRoomParams_Up_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000804")]
	[Address(RVA = "0xDD4C3C", Offset = "0xDD4C3C", VA = "0xDD4C3C")]
	public static extern void CSharp_AkRoomParams_Front_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000805")]
	[Address(RVA = "0xDD4CCC", Offset = "0xDD4CCC", VA = "0xDD4CCC")]
	public static extern IntPtr CSharp_AkRoomParams_Front_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000806")]
	[Address(RVA = "0xDD4D4C", Offset = "0xDD4D4C", VA = "0xDD4D4C")]
	public static extern void CSharp_AkRoomParams_ReverbAuxBus_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000807")]
	[Address(RVA = "0xDD4DDC", Offset = "0xDD4DDC", VA = "0xDD4DDC")]
	public static extern uint CSharp_AkRoomParams_ReverbAuxBus_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000808")]
	[Address(RVA = "0xDD4E5C", Offset = "0xDD4E5C", VA = "0xDD4E5C")]
	public static extern void CSharp_AkRoomParams_ReverbLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000809")]
	[Address(RVA = "0xDD4EEC", Offset = "0xDD4EEC", VA = "0xDD4EEC")]
	public static extern float CSharp_AkRoomParams_ReverbLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600080A")]
	[Address(RVA = "0xDD4F6C", Offset = "0xDD4F6C", VA = "0xDD4F6C")]
	public static extern void CSharp_AkRoomParams_WallOcclusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600080B")]
	[Address(RVA = "0xDD4FFC", Offset = "0xDD4FFC", VA = "0xDD4FFC")]
	public static extern float CSharp_AkRoomParams_WallOcclusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600080C")]
	[Address(RVA = "0xDD507C", Offset = "0xDD507C", VA = "0xDD507C")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600080D")]
	[Address(RVA = "0xDD510C", Offset = "0xDD510C", VA = "0xDD510C")]
	public static extern float CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600080E")]
	[Address(RVA = "0xDD518C", Offset = "0xDD518C", VA = "0xDD518C")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_KeepRegistered_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600080F")]
	[Address(RVA = "0xDD521C", Offset = "0xDD521C", VA = "0xDD521C")]
	public static extern bool CSharp_AkRoomParams_RoomGameObj_KeepRegistered_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000810")]
	[Address(RVA = "0xDD52A4", Offset = "0xDD52A4", VA = "0xDD52A4")]
	public static extern void CSharp_delete_AkRoomParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000811")]
	[Address(RVA = "0xDBB2B8", Offset = "0xDBB2B8", VA = "0xDBB2B8")]
	public static extern int CSharp_GetPoolID();

	[PreserveSig]
	[Token(Token = "0x6000812")]
	[Address(RVA = "0xDBB3EC", Offset = "0xDBB3EC", VA = "0xDBB3EC")]
	public static extern int CSharp_RegisterEmitter(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000813")]
	[Address(RVA = "0xDBB518", Offset = "0xDBB518", VA = "0xDBB518")]
	public static extern int CSharp_UnregisterEmitter(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000814")]
	[Address(RVA = "0xDBB658", Offset = "0xDBB658", VA = "0xDBB658")]
	public static extern int CSharp_SetEmitterAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000815")]
	[Address(RVA = "0xDBB7D0", Offset = "0xDBB7D0", VA = "0xDBB7D0")]
	public static extern int CSharp_SetImageSource__SWIG_0(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4, ulong jarg5);

	[PreserveSig]
	[Token(Token = "0x6000816")]
	[Address(RVA = "0xDBB920", Offset = "0xDBB920", VA = "0xDBB920")]
	public static extern int CSharp_SetImageSource__SWIG_1(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000817")]
	[Address(RVA = "0xDBBA7C", Offset = "0xDBBA7C", VA = "0xDBBA7C")]
	public static extern int CSharp_RemoveImageSource__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000818")]
	[Address(RVA = "0xDBBB88", Offset = "0xDBBB88", VA = "0xDBBB88")]
	public static extern int CSharp_RemoveImageSource__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000819")]
	[Address(RVA = "0xDBBC7C", Offset = "0xDBBC7C", VA = "0xDBBC7C")]
	public static extern int CSharp_RemoveGeometry(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600081A")]
	[Address(RVA = "0xDBBDF4", Offset = "0xDBBDF4", VA = "0xDBBDF4")]
	public static extern int CSharp_QueryReflectionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600081B")]
	[Address(RVA = "0xDBBF08", Offset = "0xDBBF08", VA = "0xDBBF08")]
	public static extern int CSharp_RemoveRoom(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600081C")]
	[Address(RVA = "0xDBBFEC", Offset = "0xDBBFEC", VA = "0xDBBFEC")]
	public static extern int CSharp_RemovePortal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600081D")]
	[Address(RVA = "0xDBC118", Offset = "0xDBC118", VA = "0xDBC118")]
	public static extern int CSharp_SetGameObjectInRoom(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600081E")]
	[Address(RVA = "0xDBC25C", Offset = "0xDBC25C", VA = "0xDBC25C")]
	public static extern int CSharp_SetEmitterObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600081F")]
	[Address(RVA = "0xDBC2F4", Offset = "0xDBC2F4", VA = "0xDBC2F4")]
	public static extern int CSharp_SetPortalObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000820")]
	[Address(RVA = "0xDBC400", Offset = "0xDBC400", VA = "0xDBC400")]
	public static extern int CSharp_QueryWetDiffraction(ulong jarg1, out float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000821")]
	[Address(RVA = "0xDD5324", Offset = "0xDD5324", VA = "0xDD5324")]
	public static extern void CSharp_AkPlatformInitSettings_threadLEngine_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000822")]
	[Address(RVA = "0xDD53B4", Offset = "0xDD53B4", VA = "0xDD53B4")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadLEngine_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000823")]
	[Address(RVA = "0xDD5434", Offset = "0xDD5434", VA = "0xDD5434")]
	public static extern void CSharp_AkPlatformInitSettings_threadOutputMgr_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000824")]
	[Address(RVA = "0xDD54C4", Offset = "0xDD54C4", VA = "0xDD54C4")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadOutputMgr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000825")]
	[Address(RVA = "0xDD5544", Offset = "0xDD5544", VA = "0xDD5544")]
	public static extern void CSharp_AkPlatformInitSettings_threadBankManager_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000826")]
	[Address(RVA = "0xDD55D4", Offset = "0xDD55D4", VA = "0xDD55D4")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadBankManager_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000827")]
	[Address(RVA = "0xDD5654", Offset = "0xDD5654", VA = "0xDD5654")]
	public static extern void CSharp_AkPlatformInitSettings_threadMonitor_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000828")]
	[Address(RVA = "0xDD56E4", Offset = "0xDD56E4", VA = "0xDD56E4")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadMonitor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000829")]
	[Address(RVA = "0xDD5764", Offset = "0xDD5764", VA = "0xDD5764")]
	public static extern void CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600082A")]
	[Address(RVA = "0xDD57F4", Offset = "0xDD57F4", VA = "0xDD57F4")]
	public static extern float CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600082B")]
	[Address(RVA = "0xDD5874", Offset = "0xDD5874", VA = "0xDD5874")]
	public static extern void CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600082C")]
	[Address(RVA = "0xDD5904", Offset = "0xDD5904", VA = "0xDD5904")]
	public static extern uint CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600082D")]
	[Address(RVA = "0xDD5984", Offset = "0xDD5984", VA = "0xDD5984")]
	public static extern void CSharp_AkPlatformInitSettings_eAudioAPI_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600082E")]
	[Address(RVA = "0xDD5A14", Offset = "0xDD5A14", VA = "0xDD5A14")]
	public static extern int CSharp_AkPlatformInitSettings_eAudioAPI_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600082F")]
	[Address(RVA = "0xDD5A94", Offset = "0xDD5A94", VA = "0xDD5A94")]
	public static extern void CSharp_AkPlatformInitSettings_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000830")]
	[Address(RVA = "0xDD5B24", Offset = "0xDD5B24", VA = "0xDD5B24")]
	public static extern uint CSharp_AkPlatformInitSettings_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000831")]
	[Address(RVA = "0xDD5BA4", Offset = "0xDD5BA4", VA = "0xDD5BA4")]
	public static extern void CSharp_AkPlatformInitSettings_uNumRefillsInVoice_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000832")]
	[Address(RVA = "0xDD5C34", Offset = "0xDD5C34", VA = "0xDD5C34")]
	public static extern ushort CSharp_AkPlatformInitSettings_uNumRefillsInVoice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000833")]
	[Address(RVA = "0xDD5CB4", Offset = "0xDD5CB4", VA = "0xDD5CB4")]
	public static extern void CSharp_AkPlatformInitSettings_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000834")]
	[Address(RVA = "0xDD5D44", Offset = "0xDD5D44", VA = "0xDD5D44")]
	public static extern uint CSharp_AkPlatformInitSettings_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000835")]
	[Address(RVA = "0xDD5DC4", Offset = "0xDD5DC4", VA = "0xDD5DC4")]
	public static extern void CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000836")]
	[Address(RVA = "0xDD5E54", Offset = "0xDD5E54", VA = "0xDD5E54")]
	public static extern bool CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000837")]
	[Address(RVA = "0xDD5EDC", Offset = "0xDD5EDC", VA = "0xDD5EDC")]
	public static extern IntPtr CSharp_new_AkPlatformInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000838")]
	[Address(RVA = "0xDD5F50", Offset = "0xDD5F50", VA = "0xDD5F50")]
	public static extern void CSharp_delete_AkPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000839")]
	[Address(RVA = "0xDBC528", Offset = "0xDBC528", VA = "0xDBC528")]
	public static extern int CSharp_GetFastPathSettings(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600083A")]
	[Address(RVA = "0xDD5FD0", Offset = "0xDD5FD0", VA = "0xDD5FD0")]
	public static extern void CSharp_AkStreamMgrSettings_uMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600083B")]
	[Address(RVA = "0xDD6060", Offset = "0xDD6060", VA = "0xDD6060")]
	public static extern uint CSharp_AkStreamMgrSettings_uMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600083C")]
	[Address(RVA = "0xDD60E0", Offset = "0xDD60E0", VA = "0xDD60E0")]
	public static extern IntPtr CSharp_new_AkStreamMgrSettings();

	[PreserveSig]
	[Token(Token = "0x600083D")]
	[Address(RVA = "0xDD6154", Offset = "0xDD6154", VA = "0xDD6154")]
	public static extern void CSharp_delete_AkStreamMgrSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600083E")]
	[Address(RVA = "0xDD61D4", Offset = "0xDD61D4", VA = "0xDD61D4")]
	public static extern void CSharp_AkDeviceSettings_pIOMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600083F")]
	[Address(RVA = "0xDD6264", Offset = "0xDD6264", VA = "0xDD6264")]
	public static extern IntPtr CSharp_AkDeviceSettings_pIOMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000840")]
	[Address(RVA = "0xDD62E4", Offset = "0xDD62E4", VA = "0xDD62E4")]
	public static extern void CSharp_AkDeviceSettings_uIOMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000841")]
	[Address(RVA = "0xDD6374", Offset = "0xDD6374", VA = "0xDD6374")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000842")]
	[Address(RVA = "0xDD63F4", Offset = "0xDD63F4", VA = "0xDD63F4")]
	public static extern void CSharp_AkDeviceSettings_uIOMemoryAlignment_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000843")]
	[Address(RVA = "0xDD6484", Offset = "0xDD6484", VA = "0xDD6484")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemoryAlignment_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000844")]
	[Address(RVA = "0xDD6504", Offset = "0xDD6504", VA = "0xDD6504")]
	public static extern void CSharp_AkDeviceSettings_ePoolAttributes_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000845")]
	[Address(RVA = "0xDD6594", Offset = "0xDD6594", VA = "0xDD6594")]
	public static extern int CSharp_AkDeviceSettings_ePoolAttributes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000846")]
	[Address(RVA = "0xDD6614", Offset = "0xDD6614", VA = "0xDD6614")]
	public static extern void CSharp_AkDeviceSettings_uGranularity_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000847")]
	[Address(RVA = "0xDD66A4", Offset = "0xDD66A4", VA = "0xDD66A4")]
	public static extern uint CSharp_AkDeviceSettings_uGranularity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000848")]
	[Address(RVA = "0xDD6724", Offset = "0xDD6724", VA = "0xDD6724")]
	public static extern void CSharp_AkDeviceSettings_uSchedulerTypeFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000849")]
	[Address(RVA = "0xDD67B4", Offset = "0xDD67B4", VA = "0xDD67B4")]
	public static extern uint CSharp_AkDeviceSettings_uSchedulerTypeFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600084A")]
	[Address(RVA = "0xDD6834", Offset = "0xDD6834", VA = "0xDD6834")]
	public static extern void CSharp_AkDeviceSettings_threadProperties_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600084B")]
	[Address(RVA = "0xDD68C4", Offset = "0xDD68C4", VA = "0xDD68C4")]
	public static extern IntPtr CSharp_AkDeviceSettings_threadProperties_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600084C")]
	[Address(RVA = "0xDD6944", Offset = "0xDD6944", VA = "0xDD6944")]
	public static extern void CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600084D")]
	[Address(RVA = "0xDD69D4", Offset = "0xDD69D4", VA = "0xDD69D4")]
	public static extern float CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600084E")]
	[Address(RVA = "0xDD6A54", Offset = "0xDD6A54", VA = "0xDD6A54")]
	public static extern void CSharp_AkDeviceSettings_uMaxConcurrentIO_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600084F")]
	[Address(RVA = "0xDD6AE4", Offset = "0xDD6AE4", VA = "0xDD6AE4")]
	public static extern uint CSharp_AkDeviceSettings_uMaxConcurrentIO_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000850")]
	[Address(RVA = "0xDD6B64", Offset = "0xDD6B64", VA = "0xDD6B64")]
	public static extern void CSharp_AkDeviceSettings_bUseStreamCache_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000851")]
	[Address(RVA = "0xDD6BF4", Offset = "0xDD6BF4", VA = "0xDD6BF4")]
	public static extern bool CSharp_AkDeviceSettings_bUseStreamCache_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000852")]
	[Address(RVA = "0xDD6C7C", Offset = "0xDD6C7C", VA = "0xDD6C7C")]
	public static extern void CSharp_AkDeviceSettings_uMaxCachePinnedBytes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000853")]
	[Address(RVA = "0xDD6D0C", Offset = "0xDD6D0C", VA = "0xDD6D0C")]
	public static extern uint CSharp_AkDeviceSettings_uMaxCachePinnedBytes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000854")]
	[Address(RVA = "0xDD6D8C", Offset = "0xDD6D8C", VA = "0xDD6D8C")]
	public static extern IntPtr CSharp_new_AkDeviceSettings();

	[PreserveSig]
	[Token(Token = "0x6000855")]
	[Address(RVA = "0xDD6E00", Offset = "0xDD6E00", VA = "0xDD6E00")]
	public static extern void CSharp_delete_AkDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000856")]
	[Address(RVA = "0xDD6E80", Offset = "0xDD6E80", VA = "0xDD6E80")]
	public static extern void CSharp_AkThreadProperties_nPriority_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000857")]
	[Address(RVA = "0xDD6F10", Offset = "0xDD6F10", VA = "0xDD6F10")]
	public static extern int CSharp_AkThreadProperties_nPriority_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000858")]
	[Address(RVA = "0xDD6F90", Offset = "0xDD6F90", VA = "0xDD6F90")]
	public static extern void CSharp_AkThreadProperties_uStackSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000859")]
	[Address(RVA = "0xDD7020", Offset = "0xDD7020", VA = "0xDD7020")]
	public static extern uint CSharp_AkThreadProperties_uStackSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600085A")]
	[Address(RVA = "0xDD70A0", Offset = "0xDD70A0", VA = "0xDD70A0")]
	public static extern void CSharp_AkThreadProperties_uSchedPolicy_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600085B")]
	[Address(RVA = "0xDD7130", Offset = "0xDD7130", VA = "0xDD7130")]
	public static extern int CSharp_AkThreadProperties_uSchedPolicy_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600085C")]
	[Address(RVA = "0xDD71B0", Offset = "0xDD71B0", VA = "0xDD71B0")]
	public static extern void CSharp_AkThreadProperties_dwAffinityMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600085D")]
	[Address(RVA = "0xDD7240", Offset = "0xDD7240", VA = "0xDD7240")]
	public static extern uint CSharp_AkThreadProperties_dwAffinityMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600085E")]
	[Address(RVA = "0xDD72C0", Offset = "0xDD72C0", VA = "0xDD72C0")]
	public static extern IntPtr CSharp_new_AkThreadProperties();

	[PreserveSig]
	[Token(Token = "0x600085F")]
	[Address(RVA = "0xDD7334", Offset = "0xDD7334", VA = "0xDD7334")]
	public static extern void CSharp_delete_AkThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000860")]
	[Address(RVA = "0xDBC61C", Offset = "0xDBC61C", VA = "0xDBC61C")]
	public static extern void CSharp_SetErrorLogger__SWIG_0(AkLogger.ErrorLoggerInteropDelegate jarg1);

	[PreserveSig]
	[Token(Token = "0x6000861")]
	[Address(RVA = "0xDBC6FC", Offset = "0xDBC6FC", VA = "0xDBC6FC")]
	public static extern void CSharp_SetErrorLogger__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000862")]
	[Address(RVA = "0xDBC7E0", Offset = "0xDBC7E0", VA = "0xDBC7E0")]
	public static extern void CSharp_SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate jarg1, AkAudioInputManager.AudioFormatInteropDelegate jarg2);

	[PreserveSig]
	[Token(Token = "0x6000863")]
	[Address(RVA = "0xDD73B4", Offset = "0xDD73B4", VA = "0xDD73B4")]
	public static extern void CSharp_AkPathParams_listenerPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000864")]
	[Address(RVA = "0xDD7444", Offset = "0xDD7444", VA = "0xDD7444")]
	public static extern IntPtr CSharp_AkPathParams_listenerPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000865")]
	[Address(RVA = "0xDD74C4", Offset = "0xDD74C4", VA = "0xDD74C4")]
	public static extern void CSharp_AkPathParams_emitterPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000866")]
	[Address(RVA = "0xDD7554", Offset = "0xDD7554", VA = "0xDD7554")]
	public static extern IntPtr CSharp_AkPathParams_emitterPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000867")]
	[Address(RVA = "0xDD75D4", Offset = "0xDD75D4", VA = "0xDD75D4")]
	public static extern void CSharp_AkPathParams_numValidPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000868")]
	[Address(RVA = "0xDD7664", Offset = "0xDD7664", VA = "0xDD7664")]
	public static extern uint CSharp_AkPathParams_numValidPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000869")]
	[Address(RVA = "0xDD76E4", Offset = "0xDD76E4", VA = "0xDD76E4")]
	public static extern IntPtr CSharp_new_AkPathParams();

	[PreserveSig]
	[Token(Token = "0x600086A")]
	[Address(RVA = "0xDD7758", Offset = "0xDD7758", VA = "0xDD7758")]
	public static extern void CSharp_delete_AkPathParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600086B")]
	[Address(RVA = "0xDD77D8", Offset = "0xDD77D8", VA = "0xDD77D8")]
	public static extern IntPtr CSharp_new_AkUnityPlatformSpecificSettings();

	[PreserveSig]
	[Token(Token = "0x600086C")]
	[Address(RVA = "0xDD784C", Offset = "0xDD784C", VA = "0xDD784C")]
	public static extern void CSharp_delete_AkUnityPlatformSpecificSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600086D")]
	[Address(RVA = "0xDD78CC", Offset = "0xDD78CC", VA = "0xDD78CC")]
	public static extern IntPtr CSharp_new_AkCommunicationSettings();

	[PreserveSig]
	[Token(Token = "0x600086E")]
	[Address(RVA = "0xDD7940", Offset = "0xDD7940", VA = "0xDD7940")]
	public static extern void CSharp_AkCommunicationSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600086F")]
	[Address(RVA = "0xDD79D0", Offset = "0xDD79D0", VA = "0xDD79D0")]
	public static extern uint CSharp_AkCommunicationSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000870")]
	[Address(RVA = "0xDD7A50", Offset = "0xDD7A50", VA = "0xDD7A50")]
	public static extern void CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000871")]
	[Address(RVA = "0xDD7AE0", Offset = "0xDD7AE0", VA = "0xDD7AE0")]
	public static extern ushort CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000872")]
	[Address(RVA = "0xDD7B60", Offset = "0xDD7B60", VA = "0xDD7B60")]
	public static extern void CSharp_AkCommunicationSettings_uCommandPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000873")]
	[Address(RVA = "0xDD7BF0", Offset = "0xDD7BF0", VA = "0xDD7BF0")]
	public static extern ushort CSharp_AkCommunicationSettings_uCommandPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000874")]
	[Address(RVA = "0xDD7C70", Offset = "0xDD7C70", VA = "0xDD7C70")]
	public static extern void CSharp_AkCommunicationSettings_uNotificationPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000875")]
	[Address(RVA = "0xDD7D00", Offset = "0xDD7D00", VA = "0xDD7D00")]
	public static extern ushort CSharp_AkCommunicationSettings_uNotificationPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000876")]
	[Address(RVA = "0xDD7D80", Offset = "0xDD7D80", VA = "0xDD7D80")]
	public static extern void CSharp_AkCommunicationSettings_bInitSystemLib_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000877")]
	[Address(RVA = "0xDD7E10", Offset = "0xDD7E10", VA = "0xDD7E10")]
	public static extern bool CSharp_AkCommunicationSettings_bInitSystemLib_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000878")]
	[Address(RVA = "0xDD7E98", Offset = "0xDD7E98", VA = "0xDD7E98")]
	public static extern void CSharp_AkCommunicationSettings_szAppNetworkName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000879")]
	[Address(RVA = "0xDD7F3C", Offset = "0xDD7F3C", VA = "0xDD7F3C")]
	public static extern IntPtr CSharp_AkCommunicationSettings_szAppNetworkName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600087A")]
	[Address(RVA = "0xDD7FBC", Offset = "0xDD7FBC", VA = "0xDD7FBC")]
	public static extern void CSharp_delete_AkCommunicationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600087B")]
	[Address(RVA = "0xDD803C", Offset = "0xDD803C", VA = "0xDD803C")]
	public static extern IntPtr CSharp_new_AkInitializationSettings();

	[PreserveSig]
	[Token(Token = "0x600087C")]
	[Address(RVA = "0xDD80B0", Offset = "0xDD80B0", VA = "0xDD80B0")]
	public static extern void CSharp_delete_AkInitializationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600087D")]
	[Address(RVA = "0xDD8130", Offset = "0xDD8130", VA = "0xDD8130")]
	public static extern void CSharp_AkInitializationSettings_memSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600087E")]
	[Address(RVA = "0xDD81C0", Offset = "0xDD81C0", VA = "0xDD81C0")]
	public static extern IntPtr CSharp_AkInitializationSettings_memSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600087F")]
	[Address(RVA = "0xDD8240", Offset = "0xDD8240", VA = "0xDD8240")]
	public static extern void CSharp_AkInitializationSettings_streamMgrSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000880")]
	[Address(RVA = "0xDD82D0", Offset = "0xDD82D0", VA = "0xDD82D0")]
	public static extern IntPtr CSharp_AkInitializationSettings_streamMgrSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000881")]
	[Address(RVA = "0xDD8350", Offset = "0xDD8350", VA = "0xDD8350")]
	public static extern void CSharp_AkInitializationSettings_deviceSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000882")]
	[Address(RVA = "0xDD83E0", Offset = "0xDD83E0", VA = "0xDD83E0")]
	public static extern IntPtr CSharp_AkInitializationSettings_deviceSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000883")]
	[Address(RVA = "0xDD8460", Offset = "0xDD8460", VA = "0xDD8460")]
	public static extern void CSharp_AkInitializationSettings_initSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000884")]
	[Address(RVA = "0xDD84F0", Offset = "0xDD84F0", VA = "0xDD84F0")]
	public static extern IntPtr CSharp_AkInitializationSettings_initSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000885")]
	[Address(RVA = "0xDD8570", Offset = "0xDD8570", VA = "0xDD8570")]
	public static extern void CSharp_AkInitializationSettings_platformSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000886")]
	[Address(RVA = "0xDD8600", Offset = "0xDD8600", VA = "0xDD8600")]
	public static extern IntPtr CSharp_AkInitializationSettings_platformSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000887")]
	[Address(RVA = "0xDD8680", Offset = "0xDD8680", VA = "0xDD8680")]
	public static extern void CSharp_AkInitializationSettings_musicSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000888")]
	[Address(RVA = "0xDD8710", Offset = "0xDD8710", VA = "0xDD8710")]
	public static extern IntPtr CSharp_AkInitializationSettings_musicSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000889")]
	[Address(RVA = "0xDD8790", Offset = "0xDD8790", VA = "0xDD8790")]
	public static extern void CSharp_AkInitializationSettings_preparePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600088A")]
	[Address(RVA = "0xDD8820", Offset = "0xDD8820", VA = "0xDD8820")]
	public static extern uint CSharp_AkInitializationSettings_preparePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600088B")]
	[Address(RVA = "0xDD88A0", Offset = "0xDD88A0", VA = "0xDD88A0")]
	public static extern void CSharp_AkInitializationSettings_unityPlatformSpecificSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600088C")]
	[Address(RVA = "0xDD8930", Offset = "0xDD8930", VA = "0xDD8930")]
	public static extern IntPtr CSharp_AkInitializationSettings_unityPlatformSpecificSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600088D")]
	[Address(RVA = "0xDD89B0", Offset = "0xDD89B0", VA = "0xDD89B0")]
	public static extern void CSharp_AkInitializationSettings_useAsyncOpen_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600088E")]
	[Address(RVA = "0xDD8A40", Offset = "0xDD8A40", VA = "0xDD8A40")]
	public static extern bool CSharp_AkInitializationSettings_useAsyncOpen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600088F")]
	[Address(RVA = "0xDD8AC8", Offset = "0xDD8AC8", VA = "0xDD8AC8")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000890")]
	[Address(RVA = "0xDD8B3C", Offset = "0xDD8B3C", VA = "0xDD8B3C")]
	public static extern void CSharp_delete_AkExternalSourceInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000891")]
	[Address(RVA = "0xDD8BBC", Offset = "0xDD8BBC", VA = "0xDD8BBC")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_1(IntPtr jarg1, uint jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000892")]
	[Address(RVA = "0xDD8C64", Offset = "0xDD8C64", VA = "0xDD8C64")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_2(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000893")]
	[Address(RVA = "0xDD8D14", Offset = "0xDD8D14", VA = "0xDD8D14")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_3(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000894")]
	[Address(RVA = "0xDD8DAC", Offset = "0xDD8DAC", VA = "0xDD8DAC")]
	public static extern void CSharp_AkExternalSourceInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000895")]
	[Address(RVA = "0xDD8E2C", Offset = "0xDD8E2C", VA = "0xDD8E2C")]
	public static extern void CSharp_AkExternalSourceInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000896")]
	[Address(RVA = "0xDD8EBC", Offset = "0xDD8EBC", VA = "0xDD8EBC")]
	public static extern int CSharp_AkExternalSourceInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000897")]
	[Address(RVA = "0xDD8F30", Offset = "0xDD8F30", VA = "0xDD8F30")]
	public static extern void CSharp_AkExternalSourceInfo_iExternalSrcCookie_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000898")]
	[Address(RVA = "0xDD8FC0", Offset = "0xDD8FC0", VA = "0xDD8FC0")]
	public static extern uint CSharp_AkExternalSourceInfo_iExternalSrcCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000899")]
	[Address(RVA = "0xDD9040", Offset = "0xDD9040", VA = "0xDD9040")]
	public static extern void CSharp_AkExternalSourceInfo_idCodec_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600089A")]
	[Address(RVA = "0xDD90D0", Offset = "0xDD90D0", VA = "0xDD90D0")]
	public static extern uint CSharp_AkExternalSourceInfo_idCodec_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600089B")]
	[Address(RVA = "0xDD9150", Offset = "0xDD9150", VA = "0xDD9150")]
	public static extern void CSharp_AkExternalSourceInfo_szFile_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600089C")]
	[Address(RVA = "0xDD91F4", Offset = "0xDD91F4", VA = "0xDD91F4")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_szFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600089D")]
	[Address(RVA = "0xDD9274", Offset = "0xDD9274", VA = "0xDD9274")]
	public static extern void CSharp_AkExternalSourceInfo_pInMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600089E")]
	[Address(RVA = "0xDD9304", Offset = "0xDD9304", VA = "0xDD9304")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_pInMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600089F")]
	[Address(RVA = "0xDD9384", Offset = "0xDD9384", VA = "0xDD9384")]
	public static extern void CSharp_AkExternalSourceInfo_uiMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xDD9414", Offset = "0xDD9414", VA = "0xDD9414")]
	public static extern uint CSharp_AkExternalSourceInfo_uiMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xDD9494", Offset = "0xDD9494", VA = "0xDD9494")]
	public static extern void CSharp_AkExternalSourceInfo_idFile_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xDD9524", Offset = "0xDD9524", VA = "0xDD9524")]
	public static extern uint CSharp_AkExternalSourceInfo_idFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xDBC8FC", Offset = "0xDBC8FC", VA = "0xDBC8FC")]
	public static extern int CSharp_Init(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xDBC9F4", Offset = "0xDBC9F4", VA = "0xDBC9F4")]
	public static extern int CSharp_InitSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xDBCAEC", Offset = "0xDBCAEC", VA = "0xDBCAEC")]
	public static extern int CSharp_InitCommunication(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xDBCBC8", Offset = "0xDBCBC8", VA = "0xDBCBC8")]
	public static extern void CSharp_Term();

	[PreserveSig]
	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xDBCCCC", Offset = "0xDBCCCC", VA = "0xDBCCCC")]
	public static extern int CSharp_RegisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xDBCDE0", Offset = "0xDBCDE0", VA = "0xDBCDE0")]
	public static extern int CSharp_UnregisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xDBCF04", Offset = "0xDBCF04", VA = "0xDBCF04")]
	public static extern int CSharp_RegisterGameObjInternal_WithName(ulong jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xDBD014", Offset = "0xDBD014", VA = "0xDBD014")]
	public static extern int CSharp_SetBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xDBD110", Offset = "0xDBD110", VA = "0xDBD110")]
	public static extern int CSharp_SetCurrentLanguage(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xDBD224", Offset = "0xDBD224", VA = "0xDBD224")]
	public static extern int CSharp_LoadFilePackage(string jarg1, out uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xDBD338", Offset = "0xDBD338", VA = "0xDBD338")]
	public static extern int CSharp_AddBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xDBD434", Offset = "0xDBD434", VA = "0xDBD434")]
	public static extern int CSharp_SetGameName(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xDBD530", Offset = "0xDBD530", VA = "0xDBD530")]
	public static extern int CSharp_SetDecodedBankPath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xDBD644", Offset = "0xDBD644", VA = "0xDBD644")]
	public static extern int CSharp_LoadAndDecodeBank(string jarg1, bool jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xDBD798", Offset = "0xDBD798", VA = "0xDBD798")]
	public static extern int CSharp_LoadAndDecodeBankFromMemory(IntPtr jarg1, uint jarg2, bool jarg3, string jarg4, bool jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xDBD900", Offset = "0xDBD900", VA = "0xDBD900")]
	public static extern IntPtr CSharp_GetCurrentLanguage();

	[PreserveSig]
	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xDBDA3C", Offset = "0xDBDA3C", VA = "0xDBDA3C")]
	public static extern int CSharp_UnloadFilePackage(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xDBDB18", Offset = "0xDBDB18", VA = "0xDBDB18")]
	public static extern int CSharp_UnloadAllFilePackages();

	[PreserveSig]
	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xDBDC90", Offset = "0xDBDC90", VA = "0xDBDC90")]
	public static extern int CSharp_SetObjectPosition(ulong jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xDBDE1C", Offset = "0xDBDE1C", VA = "0xDBDE1C")]
	public static extern int CSharp_GetSourceMultiplePlayPositions(uint jarg1, [Out] uint[] jarg2, [Out] uint[] jarg3, [Out] int[] jarg4, ref uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xDBE0E0", Offset = "0xDBE0E0", VA = "0xDBE0E0")]
	public static extern int CSharp_SetListeners(ulong jarg1, ulong[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xDBE1F4", Offset = "0xDBE1F4", VA = "0xDBE1F4")]
	public static extern int CSharp_SetDefaultListeners(ulong[] jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xDBE32C", Offset = "0xDBE32C", VA = "0xDBE32C")]
	public static extern int CSharp_AddOutput(IntPtr jarg1, out ulong jarg2, ulong[] jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xDBE454", Offset = "0xDBE454", VA = "0xDBE454")]
	public static extern void CSharp_GetDefaultStreamSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xDBE54C", Offset = "0xDBE54C", VA = "0xDBE54C")]
	public static extern void CSharp_GetDefaultDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xDBE644", Offset = "0xDBE644", VA = "0xDBE644")]
	public static extern void CSharp_GetDefaultMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xDBE73C", Offset = "0xDBE73C", VA = "0xDBE73C")]
	public static extern void CSharp_GetDefaultInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xDBE834", Offset = "0xDBE834", VA = "0xDBE834")]
	public static extern void CSharp_GetDefaultPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xDBE910", Offset = "0xDBE910", VA = "0xDBE910")]
	public static extern uint CSharp_GetMajorMinorVersion();

	[PreserveSig]
	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xDBE9E0", Offset = "0xDBE9E0", VA = "0xDBE9E0")]
	public static extern uint CSharp_GetSubminorBuildVersion();

	[PreserveSig]
	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xDBEB34", Offset = "0xDBEB34", VA = "0xDBEB34")]
	public static extern int CSharp_QueryIndirectPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xDBECBC", Offset = "0xDBECBC", VA = "0xDBECBC")]
	public static extern int CSharp_QueryDiffractionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xDBEE28", Offset = "0xDBEE28", VA = "0xDBEE28")]
	public static extern int CSharp_SetRoomPortal(ulong jarg1, IntPtr jarg2, IntPtr jarg3, bool jarg4, ulong jarg5, ulong jarg6);

	[PreserveSig]
	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xDBEF78", Offset = "0xDBEF78", VA = "0xDBEF78")]
	public static extern int CSharp_SetRoom(ulong jarg1, IntPtr jarg2, string jarg3);

	[PreserveSig]
	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xDBF0C8", Offset = "0xDBF0C8", VA = "0xDBF0C8")]
	public static extern int CSharp_RegisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xDBF1E4", Offset = "0xDBF1E4", VA = "0xDBF1E4")]
	public static extern int CSharp_UnregisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xDBF394", Offset = "0xDBF394", VA = "0xDBF394")]
	public static extern int CSharp_SetGeometry(ulong jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, uint jarg7, ulong jarg8, bool jarg9, bool jarg10);

	[PreserveSig]
	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xDD95A4", Offset = "0xDD95A4", VA = "0xDD95A4")]
	public static extern IntPtr CSharp_AkPlaylist_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xDD9624", Offset = "0xDD9624", VA = "0xDD9624")]
	public static extern IntPtr CSharp_AkMIDIPost_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xDD96A4", Offset = "0xDD96A4", VA = "0xDD96A4")]
	public static extern IntPtr CSharp_AkEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xDD9724", Offset = "0xDD9724", VA = "0xDD9724")]
	public static extern IntPtr CSharp_AkMIDIEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xDD97A4", Offset = "0xDD97A4", VA = "0xDD97A4")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xDD9824", Offset = "0xDD9824", VA = "0xDD9824")]
	public static extern IntPtr CSharp_AkDurationCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xDD98A4", Offset = "0xDD98A4", VA = "0xDD98A4")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xDD9924", Offset = "0xDD9924", VA = "0xDD9924")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xDD99A4", Offset = "0xDD99A4", VA = "0xDD99A4")]
	public static extern IntPtr CSharp_AkMusicPlaylistCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xDD9A24", Offset = "0xDD9A24", VA = "0xDD9A24")]
	public AkSoundEnginePINVOKE()
	{
	}
}
[Token(Token = "0x20000BF")]
public class AkSoundEngine
{
	[Token(Token = "0x200023B")]
	public delegate ulong GameObjectHashFunction(GameObject gameObject);

	[Token(Token = "0x200023C")]
	private class AutoObject
	{
		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject gameObject;

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xDC07F0", Offset = "0xDC07F0", VA = "0xDC07F0")]
		public AutoObject(GameObject go)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xDC0A04", Offset = "0xDC0A04", VA = "0xDC0A04", Slot = "1")]
		~AutoObject()
		{
		}
	}

	[Token(Token = "0x40003D2")]
	public const int AK_SIMD_ALIGNMENT = 16;

	[Token(Token = "0x40003D3")]
	public const int AK_BUFFER_ALIGNMENT = 16;

	[Token(Token = "0x40003D4")]
	public const int AK_MAX_PATH = 260;

	[Token(Token = "0x40003D5")]
	public const int AK_BANK_PLATFORM_DATA_ALIGNMENT = 16;

	[Token(Token = "0x40003D6")]
	public const uint AK_INVALID_PLUGINID = uint.MaxValue;

	[Token(Token = "0x40003D7")]
	public const ulong AK_INVALID_GAME_OBJECT = ulong.MaxValue;

	[Token(Token = "0x40003D8")]
	public const uint AK_INVALID_UNIQUE_ID = 0u;

	[Token(Token = "0x40003D9")]
	public const uint AK_INVALID_RTPC_ID = 0u;

	[Token(Token = "0x40003DA")]
	public const uint AK_INVALID_LISTENER_INDEX = uint.MaxValue;

	[Token(Token = "0x40003DB")]
	public const uint AK_INVALID_PLAYING_ID = 0u;

	[Token(Token = "0x40003DC")]
	public const uint AK_DEFAULT_SWITCH_STATE = 0u;

	[Token(Token = "0x40003DD")]
	public const int AK_INVALID_POOL_ID = -1;

	[Token(Token = "0x40003DE")]
	public const int AK_DEFAULT_POOL_ID = -1;

	[Token(Token = "0x40003DF")]
	public const uint AK_INVALID_AUX_ID = 0u;

	[Token(Token = "0x40003E0")]
	public const uint AK_INVALID_FILE_ID = uint.MaxValue;

	[Token(Token = "0x40003E1")]
	public const uint AK_INVALID_DEVICE_ID = uint.MaxValue;

	[Token(Token = "0x40003E2")]
	public const uint AK_INVALID_BANK_ID = 0u;

	[Token(Token = "0x40003E3")]
	public const uint AK_FALLBACK_ARGUMENTVALUE_ID = 0u;

	[Token(Token = "0x40003E4")]
	public const uint AK_INVALID_CHANNELMASK = 0u;

	[Token(Token = "0x40003E5")]
	public const uint AK_INVALID_OUTPUT_DEVICE_ID = 0u;

	[Token(Token = "0x40003E6")]
	public const uint AK_MIXER_FX_SLOT = uint.MaxValue;

	[Token(Token = "0x40003E7")]
	public const ulong AK_DEFAULT_LISTENER_OBJ = 0uL;

	[Token(Token = "0x40003E8")]
	public const uint AK_DEFAULT_PRIORITY = 50u;

	[Token(Token = "0x40003E9")]
	public const uint AK_MIN_PRIORITY = 0u;

	[Token(Token = "0x40003EA")]
	public const uint AK_MAX_PRIORITY = 100u;

	[Token(Token = "0x40003EB")]
	public const uint AK_DEFAULT_BANK_IO_PRIORITY = 50u;

	[Token(Token = "0x40003EC")]
	public const double AK_DEFAULT_BANK_THROUGHPUT = 1048.576;

	[Token(Token = "0x40003ED")]
	public const uint AKCOMPANYID_AUDIOKINETIC = 0u;

	[Token(Token = "0x40003EE")]
	public const uint AK_LISTENERS_MASK_ALL = uint.MaxValue;

	[Token(Token = "0x40003EF")]
	public const int NULL = 0;

	[Token(Token = "0x40003F0")]
	public const int AKCURVEINTERPOLATION_NUM_STORAGE_BIT = 5;

	[Token(Token = "0x40003F1")]
	public const int AK_MAX_LANGUAGE_NAME_SIZE = 32;

	[Token(Token = "0x40003F2")]
	public const int AKCOMPANYID_PLUGINDEV_MIN = 64;

	[Token(Token = "0x40003F3")]
	public const int AKCOMPANYID_PLUGINDEV_MAX = 255;

	[Token(Token = "0x40003F4")]
	public const int AKCOMPANYID_AUDIOKINETIC_EXTERNAL = 1;

	[Token(Token = "0x40003F5")]
	public const int AKCOMPANYID_MCDSP = 256;

	[Token(Token = "0x40003F6")]
	public const int AKCOMPANYID_WAVEARTS = 257;

	[Token(Token = "0x40003F7")]
	public const int AKCOMPANYID_PHONETICARTS = 258;

	[Token(Token = "0x40003F8")]
	public const int AKCOMPANYID_IZOTOPE = 259;

	[Token(Token = "0x40003F9")]
	public const int AKCOMPANYID_CRANKCASEAUDIO = 261;

	[Token(Token = "0x40003FA")]
	public const int AKCOMPANYID_IOSONO = 262;

	[Token(Token = "0x40003FB")]
	public const int AKCOMPANYID_AUROTECHNOLOGIES = 263;

	[Token(Token = "0x40003FC")]
	public const int AKCOMPANYID_DOLBY = 264;

	[Token(Token = "0x40003FD")]
	public const int AKCOMPANYID_TWOBIGEARS = 265;

	[Token(Token = "0x40003FE")]
	public const int AKCOMPANYID_OCULUS = 266;

	[Token(Token = "0x40003FF")]
	public const int AKCOMPANYID_BLUERIPPLESOUND = 267;

	[Token(Token = "0x4000400")]
	public const int AKCOMPANYID_ENZIEN = 268;

	[Token(Token = "0x4000401")]
	public const int AKCOMPANYID_KROTOS = 269;

	[Token(Token = "0x4000402")]
	public const int AKCOMPANYID_NURULIZE = 270;

	[Token(Token = "0x4000403")]
	public const int AKCOMPANYID_SUPERPOWERED = 271;

	[Token(Token = "0x4000404")]
	public const int AKCOMPANYID_GOOGLE = 272;

	[Token(Token = "0x4000405")]
	public const int AKCOMPANYID_VISISONICS = 277;

	[Token(Token = "0x4000406")]
	public const int AKCODECID_BANK = 0;

	[Token(Token = "0x4000407")]
	public const int AKCODECID_PCM = 1;

	[Token(Token = "0x4000408")]
	public const int AKCODECID_ADPCM = 2;

	[Token(Token = "0x4000409")]
	public const int AKCODECID_XMA = 3;

	[Token(Token = "0x400040A")]
	public const int AKCODECID_VORBIS = 4;

	[Token(Token = "0x400040B")]
	public const int AKCODECID_WIIADPCM = 5;

	[Token(Token = "0x400040C")]
	public const int AKCODECID_PCMEX = 7;

	[Token(Token = "0x400040D")]
	public const int AKCODECID_EXTERNAL_SOURCE = 8;

	[Token(Token = "0x400040E")]
	public const int AKCODECID_XWMA = 9;

	[Token(Token = "0x400040F")]
	public const int AKCODECID_AAC = 10;

	[Token(Token = "0x4000410")]
	public const int AKCODECID_FILE_PACKAGE = 11;

	[Token(Token = "0x4000411")]
	public const int AKCODECID_ATRAC9 = 12;

	[Token(Token = "0x4000412")]
	public const int AKCODECID_VAG = 13;

	[Token(Token = "0x4000413")]
	public const int AKCODECID_PROFILERCAPTURE = 14;

	[Token(Token = "0x4000414")]
	public const int AKCODECID_ANALYSISFILE = 15;

	[Token(Token = "0x4000415")]
	public const int AKCODECID_MIDI = 16;

	[Token(Token = "0x4000416")]
	public const int AKCODECID_OPUSNX = 17;

	[Token(Token = "0x4000417")]
	public const int AKCODECID_CAF = 18;

	[Token(Token = "0x4000418")]
	public const int AKCODECID_AKOPUS = 19;

	[Token(Token = "0x4000419")]
	public const int AKPLUGINID_METER = 129;

	[Token(Token = "0x400041A")]
	public const int AKPLUGINID_RECORDER = 132;

	[Token(Token = "0x400041B")]
	public const int AKEXTENSIONID_SPATIALAUDIO = 800;

	[Token(Token = "0x400041C")]
	public const int AKEXTENSIONID_INTERACTIVEMUSIC = 801;

	[Token(Token = "0x400041D")]
	public const int AKEXTENSIONID_EVENTMGRTHREAD = 900;

	[Token(Token = "0x400041E")]
	public const int AK_WAVE_FORMAT_VAG = 65531;

	[Token(Token = "0x400041F")]
	public const int AK_WAVE_FORMAT_AT9 = 65532;

	[Token(Token = "0x4000420")]
	public const int AK_WAVE_FORMAT_VORBIS = 65535;

	[Token(Token = "0x4000421")]
	public const int AK_WAVE_FORMAT_AAC = 43712;

	[Token(Token = "0x4000422")]
	public const int AK_WAVE_FORMAT_OPUSNX = 12345;

	[Token(Token = "0x4000423")]
	public const int AK_WAVE_FORMAT_OPUS = 12352;

	[Token(Token = "0x4000424")]
	public const int WAVE_FORMAT_XMA2 = 358;

	[Token(Token = "0x4000425")]
	public const int AK_PANNER_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4000426")]
	public const int AK_POSSOURCE_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4000427")]
	public const int AK_SPAT_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4000428")]
	public const int AK_MAX_BITS_METERING_FLAGS = 5;

	[Token(Token = "0x4000429")]
	public const int AK_OS_STRUCT_ALIGN = 4;

	[Token(Token = "0x400042A")]
	public const int AK_64B_OS_STRUCT_ALIGN = 8;

	[Token(Token = "0x400042B")]
	public const bool AK_ASYNC_OPEN_DEFAULT = false;

	[Token(Token = "0x400042C")]
	public const int AK_COMM_DEFAULT_DISCOVERY_PORT = 24024;

	[Token(Token = "0x400042D")]
	public const int AK_MIDI_EVENT_TYPE_INVALID = 0;

	[Token(Token = "0x400042E")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_OFF = 128;

	[Token(Token = "0x400042F")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_ON = 144;

	[Token(Token = "0x4000430")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_AFTERTOUCH = 160;

	[Token(Token = "0x4000431")]
	public const int AK_MIDI_EVENT_TYPE_CONTROLLER = 176;

	[Token(Token = "0x4000432")]
	public const int AK_MIDI_EVENT_TYPE_PROGRAM_CHANGE = 192;

	[Token(Token = "0x4000433")]
	public const int AK_MIDI_EVENT_TYPE_CHANNEL_AFTERTOUCH = 208;

	[Token(Token = "0x4000434")]
	public const int AK_MIDI_EVENT_TYPE_PITCH_BEND = 224;

	[Token(Token = "0x4000435")]
	public const int AK_MIDI_EVENT_TYPE_SYSEX = 240;

	[Token(Token = "0x4000436")]
	public const int AK_MIDI_EVENT_TYPE_ESCAPE = 247;

	[Token(Token = "0x4000437")]
	public const int AK_MIDI_EVENT_TYPE_META = 255;

	[Token(Token = "0x4000438")]
	public const int AK_MIDI_CC_BANK_SELECT_COARSE = 0;

	[Token(Token = "0x4000439")]
	public const int AK_MIDI_CC_MOD_WHEEL_COARSE = 1;

	[Token(Token = "0x400043A")]
	public const int AK_MIDI_CC_BREATH_CTRL_COARSE = 2;

	[Token(Token = "0x400043B")]
	public const int AK_MIDI_CC_CTRL_3_COARSE = 3;

	[Token(Token = "0x400043C")]
	public const int AK_MIDI_CC_FOOT_PEDAL_COARSE = 4;

	[Token(Token = "0x400043D")]
	public const int AK_MIDI_CC_PORTAMENTO_COARSE = 5;

	[Token(Token = "0x400043E")]
	public const int AK_MIDI_CC_DATA_ENTRY_COARSE = 6;

	[Token(Token = "0x400043F")]
	public const int AK_MIDI_CC_VOLUME_COARSE = 7;

	[Token(Token = "0x4000440")]
	public const int AK_MIDI_CC_BALANCE_COARSE = 8;

	[Token(Token = "0x4000441")]
	public const int AK_MIDI_CC_CTRL_9_COARSE = 9;

	[Token(Token = "0x4000442")]
	public const int AK_MIDI_CC_PAN_POSITION_COARSE = 10;

	[Token(Token = "0x4000443")]
	public const int AK_MIDI_CC_EXPRESSION_COARSE = 11;

	[Token(Token = "0x4000444")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_COARSE = 12;

	[Token(Token = "0x4000445")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_COARSE = 13;

	[Token(Token = "0x4000446")]
	public const int AK_MIDI_CC_CTRL_14_COARSE = 14;

	[Token(Token = "0x4000447")]
	public const int AK_MIDI_CC_CTRL_15_COARSE = 15;

	[Token(Token = "0x4000448")]
	public const int AK_MIDI_CC_GEN_SLIDER_1 = 16;

	[Token(Token = "0x4000449")]
	public const int AK_MIDI_CC_GEN_SLIDER_2 = 17;

	[Token(Token = "0x400044A")]
	public const int AK_MIDI_CC_GEN_SLIDER_3 = 18;

	[Token(Token = "0x400044B")]
	public const int AK_MIDI_CC_GEN_SLIDER_4 = 19;

	[Token(Token = "0x400044C")]
	public const int AK_MIDI_CC_CTRL_20_COARSE = 20;

	[Token(Token = "0x400044D")]
	public const int AK_MIDI_CC_CTRL_21_COARSE = 21;

	[Token(Token = "0x400044E")]
	public const int AK_MIDI_CC_CTRL_22_COARSE = 22;

	[Token(Token = "0x400044F")]
	public const int AK_MIDI_CC_CTRL_23_COARSE = 23;

	[Token(Token = "0x4000450")]
	public const int AK_MIDI_CC_CTRL_24_COARSE = 24;

	[Token(Token = "0x4000451")]
	public const int AK_MIDI_CC_CTRL_25_COARSE = 25;

	[Token(Token = "0x4000452")]
	public const int AK_MIDI_CC_CTRL_26_COARSE = 26;

	[Token(Token = "0x4000453")]
	public const int AK_MIDI_CC_CTRL_27_COARSE = 27;

	[Token(Token = "0x4000454")]
	public const int AK_MIDI_CC_CTRL_28_COARSE = 28;

	[Token(Token = "0x4000455")]
	public const int AK_MIDI_CC_CTRL_29_COARSE = 29;

	[Token(Token = "0x4000456")]
	public const int AK_MIDI_CC_CTRL_30_COARSE = 30;

	[Token(Token = "0x4000457")]
	public const int AK_MIDI_CC_CTRL_31_COARSE = 31;

	[Token(Token = "0x4000458")]
	public const int AK_MIDI_CC_BANK_SELECT_FINE = 32;

	[Token(Token = "0x4000459")]
	public const int AK_MIDI_CC_MOD_WHEEL_FINE = 33;

	[Token(Token = "0x400045A")]
	public const int AK_MIDI_CC_BREATH_CTRL_FINE = 34;

	[Token(Token = "0x400045B")]
	public const int AK_MIDI_CC_CTRL_3_FINE = 35;

	[Token(Token = "0x400045C")]
	public const int AK_MIDI_CC_FOOT_PEDAL_FINE = 36;

	[Token(Token = "0x400045D")]
	public const int AK_MIDI_CC_PORTAMENTO_FINE = 37;

	[Token(Token = "0x400045E")]
	public const int AK_MIDI_CC_DATA_ENTRY_FINE = 38;

	[Token(Token = "0x400045F")]
	public const int AK_MIDI_CC_VOLUME_FINE = 39;

	[Token(Token = "0x4000460")]
	public const int AK_MIDI_CC_BALANCE_FINE = 40;

	[Token(Token = "0x4000461")]
	public const int AK_MIDI_CC_CTRL_9_FINE = 41;

	[Token(Token = "0x4000462")]
	public const int AK_MIDI_CC_PAN_POSITION_FINE = 42;

	[Token(Token = "0x4000463")]
	public const int AK_MIDI_CC_EXPRESSION_FINE = 43;

	[Token(Token = "0x4000464")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_FINE = 44;

	[Token(Token = "0x4000465")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_FINE = 45;

	[Token(Token = "0x4000466")]
	public const int AK_MIDI_CC_CTRL_14_FINE = 46;

	[Token(Token = "0x4000467")]
	public const int AK_MIDI_CC_CTRL_15_FINE = 47;

	[Token(Token = "0x4000468")]
	public const int AK_MIDI_CC_CTRL_20_FINE = 52;

	[Token(Token = "0x4000469")]
	public const int AK_MIDI_CC_CTRL_21_FINE = 53;

	[Token(Token = "0x400046A")]
	public const int AK_MIDI_CC_CTRL_22_FINE = 54;

	[Token(Token = "0x400046B")]
	public const int AK_MIDI_CC_CTRL_23_FINE = 55;

	[Token(Token = "0x400046C")]
	public const int AK_MIDI_CC_CTRL_24_FINE = 56;

	[Token(Token = "0x400046D")]
	public const int AK_MIDI_CC_CTRL_25_FINE = 57;

	[Token(Token = "0x400046E")]
	public const int AK_MIDI_CC_CTRL_26_FINE = 58;

	[Token(Token = "0x400046F")]
	public const int AK_MIDI_CC_CTRL_27_FINE = 59;

	[Token(Token = "0x4000470")]
	public const int AK_MIDI_CC_CTRL_28_FINE = 60;

	[Token(Token = "0x4000471")]
	public const int AK_MIDI_CC_CTRL_29_FINE = 61;

	[Token(Token = "0x4000472")]
	public const int AK_MIDI_CC_CTRL_30_FINE = 62;

	[Token(Token = "0x4000473")]
	public const int AK_MIDI_CC_CTRL_31_FINE = 63;

	[Token(Token = "0x4000474")]
	public const int AK_MIDI_CC_HOLD_PEDAL = 64;

	[Token(Token = "0x4000475")]
	public const int AK_MIDI_CC_PORTAMENTO_ON_OFF = 65;

	[Token(Token = "0x4000476")]
	public const int AK_MIDI_CC_SUSTENUTO_PEDAL = 66;

	[Token(Token = "0x4000477")]
	public const int AK_MIDI_CC_SOFT_PEDAL = 67;

	[Token(Token = "0x4000478")]
	public const int AK_MIDI_CC_LEGATO_PEDAL = 68;

	[Token(Token = "0x4000479")]
	public const int AK_MIDI_CC_HOLD_PEDAL_2 = 69;

	[Token(Token = "0x400047A")]
	public const int AK_MIDI_CC_SOUND_VARIATION = 70;

	[Token(Token = "0x400047B")]
	public const int AK_MIDI_CC_SOUND_TIMBRE = 71;

	[Token(Token = "0x400047C")]
	public const int AK_MIDI_CC_SOUND_RELEASE_TIME = 72;

	[Token(Token = "0x400047D")]
	public const int AK_MIDI_CC_SOUND_ATTACK_TIME = 73;

	[Token(Token = "0x400047E")]
	public const int AK_MIDI_CC_SOUND_BRIGHTNESS = 74;

	[Token(Token = "0x400047F")]
	public const int AK_MIDI_CC_SOUND_CTRL_6 = 75;

	[Token(Token = "0x4000480")]
	public const int AK_MIDI_CC_SOUND_CTRL_7 = 76;

	[Token(Token = "0x4000481")]
	public const int AK_MIDI_CC_SOUND_CTRL_8 = 77;

	[Token(Token = "0x4000482")]
	public const int AK_MIDI_CC_SOUND_CTRL_9 = 78;

	[Token(Token = "0x4000483")]
	public const int AK_MIDI_CC_SOUND_CTRL_10 = 79;

	[Token(Token = "0x4000484")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_1 = 80;

	[Token(Token = "0x4000485")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_2 = 81;

	[Token(Token = "0x4000486")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_3 = 82;

	[Token(Token = "0x4000487")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_4 = 83;

	[Token(Token = "0x4000488")]
	public const int AK_MIDI_CC_REVERB_LEVEL = 91;

	[Token(Token = "0x4000489")]
	public const int AK_MIDI_CC_TREMOLO_LEVEL = 92;

	[Token(Token = "0x400048A")]
	public const int AK_MIDI_CC_CHORUS_LEVEL = 93;

	[Token(Token = "0x400048B")]
	public const int AK_MIDI_CC_CELESTE_LEVEL = 94;

	[Token(Token = "0x400048C")]
	public const int AK_MIDI_CC_PHASER_LEVEL = 95;

	[Token(Token = "0x400048D")]
	public const int AK_MIDI_CC_DATA_BUTTON_P1 = 96;

	[Token(Token = "0x400048E")]
	public const int AK_MIDI_CC_DATA_BUTTON_M1 = 97;

	[Token(Token = "0x400048F")]
	public const int AK_MIDI_CC_NON_REGISTER_COARSE = 98;

	[Token(Token = "0x4000490")]
	public const int AK_MIDI_CC_NON_REGISTER_FINE = 99;

	[Token(Token = "0x4000491")]
	public const int AK_MIDI_CC_ALL_SOUND_OFF = 120;

	[Token(Token = "0x4000492")]
	public const int AK_MIDI_CC_ALL_CONTROLLERS_OFF = 121;

	[Token(Token = "0x4000493")]
	public const int AK_MIDI_CC_LOCAL_KEYBOARD = 122;

	[Token(Token = "0x4000494")]
	public const int AK_MIDI_CC_ALL_NOTES_OFF = 123;

	[Token(Token = "0x4000495")]
	public const int AK_MIDI_CC_OMNI_MODE_OFF = 124;

	[Token(Token = "0x4000496")]
	public const int AK_MIDI_CC_OMNI_MODE_ON = 125;

	[Token(Token = "0x4000497")]
	public const int AK_MIDI_CC_OMNI_MONOPHONIC_ON = 126;

	[Token(Token = "0x4000498")]
	public const int AK_MIDI_CC_OMNI_POLYPHONIC_ON = 127;

	[Token(Token = "0x4000499")]
	public const int AK_SPEAKER_FRONT_LEFT = 1;

	[Token(Token = "0x400049A")]
	public const int AK_SPEAKER_FRONT_RIGHT = 2;

	[Token(Token = "0x400049B")]
	public const int AK_SPEAKER_FRONT_CENTER = 4;

	[Token(Token = "0x400049C")]
	public const int AK_SPEAKER_LOW_FREQUENCY = 8;

	[Token(Token = "0x400049D")]
	public const int AK_SPEAKER_BACK_LEFT = 16;

	[Token(Token = "0x400049E")]
	public const int AK_SPEAKER_BACK_RIGHT = 32;

	[Token(Token = "0x400049F")]
	public const int AK_SPEAKER_BACK_CENTER = 256;

	[Token(Token = "0x40004A0")]
	public const int AK_SPEAKER_SIDE_LEFT = 512;

	[Token(Token = "0x40004A1")]
	public const int AK_SPEAKER_SIDE_RIGHT = 1024;

	[Token(Token = "0x40004A2")]
	public const int AK_SPEAKER_TOP = 2048;

	[Token(Token = "0x40004A3")]
	public const int AK_SPEAKER_HEIGHT_FRONT_LEFT = 4096;

	[Token(Token = "0x40004A4")]
	public const int AK_SPEAKER_HEIGHT_FRONT_CENTER = 8192;

	[Token(Token = "0x40004A5")]
	public const int AK_SPEAKER_HEIGHT_FRONT_RIGHT = 16384;

	[Token(Token = "0x40004A6")]
	public const int AK_SPEAKER_HEIGHT_BACK_LEFT = 32768;

	[Token(Token = "0x40004A7")]
	public const int AK_SPEAKER_HEIGHT_BACK_CENTER = 65536;

	[Token(Token = "0x40004A8")]
	public const int AK_SPEAKER_HEIGHT_BACK_RIGHT = 131072;

	[Token(Token = "0x40004A9")]
	public const int AK_SPEAKER_SETUP_MONO = 4;

	[Token(Token = "0x40004AA")]
	public const int AK_SPEAKER_SETUP_0POINT1 = 8;

	[Token(Token = "0x40004AB")]
	public const int AK_SPEAKER_SETUP_1POINT1 = 12;

	[Token(Token = "0x40004AC")]
	public const int AK_SPEAKER_SETUP_STEREO = 3;

	[Token(Token = "0x40004AD")]
	public const int AK_SPEAKER_SETUP_2POINT1 = 11;

	[Token(Token = "0x40004AE")]
	public const int AK_SPEAKER_SETUP_3STEREO = 7;

	[Token(Token = "0x40004AF")]
	public const int AK_SPEAKER_SETUP_3POINT1 = 15;

	[Token(Token = "0x40004B0")]
	public const int AK_SPEAKER_SETUP_4 = 1539;

	[Token(Token = "0x40004B1")]
	public const int AK_SPEAKER_SETUP_4POINT1 = 1547;

	[Token(Token = "0x40004B2")]
	public const int AK_SPEAKER_SETUP_5 = 1543;

	[Token(Token = "0x40004B3")]
	public const int AK_SPEAKER_SETUP_5POINT1 = 1551;

	[Token(Token = "0x40004B4")]
	public const int AK_SPEAKER_SETUP_6 = 1587;

	[Token(Token = "0x40004B5")]
	public const int AK_SPEAKER_SETUP_6POINT1 = 1595;

	[Token(Token = "0x40004B6")]
	public const int AK_SPEAKER_SETUP_7 = 1591;

	[Token(Token = "0x40004B7")]
	public const int AK_SPEAKER_SETUP_7POINT1 = 1599;

	[Token(Token = "0x40004B8")]
	public const int AK_SPEAKER_SETUP_SURROUND = 259;

	[Token(Token = "0x40004B9")]
	public const int AK_SPEAKER_SETUP_DPL2 = 1539;

	[Token(Token = "0x40004BA")]
	public const int AK_SPEAKER_SETUP_HEIGHT_4 = 184320;

	[Token(Token = "0x40004BB")]
	public const int AK_SPEAKER_SETUP_HEIGHT_5 = 192512;

	[Token(Token = "0x40004BC")]
	public const int AK_SPEAKER_SETUP_HEIGHT_ALL = 258048;

	[Token(Token = "0x40004BD")]
	public const int AK_SPEAKER_SETUP_AURO_222 = 22019;

	[Token(Token = "0x40004BE")]
	public const int AK_SPEAKER_SETUP_AURO_8 = 185859;

	[Token(Token = "0x40004BF")]
	public const int AK_SPEAKER_SETUP_AURO_9 = 185863;

	[Token(Token = "0x40004C0")]
	public const int AK_SPEAKER_SETUP_AURO_9POINT1 = 185871;

	[Token(Token = "0x40004C1")]
	public const int AK_SPEAKER_SETUP_AURO_10 = 187911;

	[Token(Token = "0x40004C2")]
	public const int AK_SPEAKER_SETUP_AURO_10POINT1 = 187919;

	[Token(Token = "0x40004C3")]
	public const int AK_SPEAKER_SETUP_AURO_11 = 196103;

	[Token(Token = "0x40004C4")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1 = 196111;

	[Token(Token = "0x40004C5")]
	public const int AK_SPEAKER_SETUP_AURO_11_740 = 185911;

	[Token(Token = "0x40004C6")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1_740 = 185919;

	[Token(Token = "0x40004C7")]
	public const int AK_SPEAKER_SETUP_AURO_13_751 = 196151;

	[Token(Token = "0x40004C8")]
	public const int AK_SPEAKER_SETUP_AURO_13POINT1_751 = 196159;

	[Token(Token = "0x40004C9")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_0_2 = 22023;

	[Token(Token = "0x40004CA")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_1_2 = 22031;

	[Token(Token = "0x40004CB")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_2 = 22067;

	[Token(Token = "0x40004CC")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_2 = 22075;

	[Token(Token = "0x40004CD")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_4 = 185907;

	[Token(Token = "0x40004CE")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_4 = 185915;

	[Token(Token = "0x40004CF")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_2 = 22071;

	[Token(Token = "0x40004D0")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_2 = 22079;

	[Token(Token = "0x40004D1")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_4 = 185911;

	[Token(Token = "0x40004D2")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_4 = 185919;

	[Token(Token = "0x40004D3")]
	public const int AK_SPEAKER_SETUP_ALL_SPEAKERS = 261951;

	[Token(Token = "0x40004D4")]
	public const int AK_IDX_SETUP_FRONT_LEFT = 0;

	[Token(Token = "0x40004D5")]
	public const int AK_IDX_SETUP_FRONT_RIGHT = 1;

	[Token(Token = "0x40004D6")]
	public const int AK_IDX_SETUP_CENTER = 2;

	[Token(Token = "0x40004D7")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_LEFT = 2;

	[Token(Token = "0x40004D8")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_RIGHT = 3;

	[Token(Token = "0x40004D9")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_LEFT = 4;

	[Token(Token = "0x40004DA")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_RIGHT = 5;

	[Token(Token = "0x40004DB")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_LEFT = 3;

	[Token(Token = "0x40004DC")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_RIGHT = 4;

	[Token(Token = "0x40004DD")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_LEFT = 5;

	[Token(Token = "0x40004DE")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_RIGHT = 6;

	[Token(Token = "0x40004DF")]
	public const int AK_IDX_SETUP_0_LFE = 0;

	[Token(Token = "0x40004E0")]
	public const int AK_IDX_SETUP_1_CENTER = 0;

	[Token(Token = "0x40004E1")]
	public const int AK_IDX_SETUP_1_LFE = 1;

	[Token(Token = "0x40004E2")]
	public const int AK_IDX_SETUP_2_LEFT = 0;

	[Token(Token = "0x40004E3")]
	public const int AK_IDX_SETUP_2_RIGHT = 1;

	[Token(Token = "0x40004E4")]
	public const int AK_IDX_SETUP_2_LFE = 2;

	[Token(Token = "0x40004E5")]
	public const int AK_IDX_SETUP_3_LEFT = 0;

	[Token(Token = "0x40004E6")]
	public const int AK_IDX_SETUP_3_RIGHT = 1;

	[Token(Token = "0x40004E7")]
	public const int AK_IDX_SETUP_3_CENTER = 2;

	[Token(Token = "0x40004E8")]
	public const int AK_IDX_SETUP_3_LFE = 3;

	[Token(Token = "0x40004E9")]
	public const int AK_IDX_SETUP_4_FRONTLEFT = 0;

	[Token(Token = "0x40004EA")]
	public const int AK_IDX_SETUP_4_FRONTRIGHT = 1;

	[Token(Token = "0x40004EB")]
	public const int AK_IDX_SETUP_4_REARLEFT = 2;

	[Token(Token = "0x40004EC")]
	public const int AK_IDX_SETUP_4_REARRIGHT = 3;

	[Token(Token = "0x40004ED")]
	public const int AK_IDX_SETUP_4_LFE = 4;

	[Token(Token = "0x40004EE")]
	public const int AK_IDX_SETUP_5_FRONTLEFT = 0;

	[Token(Token = "0x40004EF")]
	public const int AK_IDX_SETUP_5_FRONTRIGHT = 1;

	[Token(Token = "0x40004F0")]
	public const int AK_IDX_SETUP_5_CENTER = 2;

	[Token(Token = "0x40004F1")]
	public const int AK_IDX_SETUP_5_REARLEFT = 3;

	[Token(Token = "0x40004F2")]
	public const int AK_IDX_SETUP_5_REARRIGHT = 4;

	[Token(Token = "0x40004F3")]
	public const int AK_IDX_SETUP_5_LFE = 5;

	[Token(Token = "0x40004F4")]
	public const int AK_IDX_SETUP_6_FRONTLEFT = 0;

	[Token(Token = "0x40004F5")]
	public const int AK_IDX_SETUP_6_FRONTRIGHT = 1;

	[Token(Token = "0x40004F6")]
	public const int AK_IDX_SETUP_6_REARLEFT = 2;

	[Token(Token = "0x40004F7")]
	public const int AK_IDX_SETUP_6_REARRIGHT = 3;

	[Token(Token = "0x40004F8")]
	public const int AK_IDX_SETUP_6_SIDELEFT = 4;

	[Token(Token = "0x40004F9")]
	public const int AK_IDX_SETUP_6_SIDERIGHT = 5;

	[Token(Token = "0x40004FA")]
	public const int AK_IDX_SETUP_6_LFE = 6;

	[Token(Token = "0x40004FB")]
	public const int AK_IDX_SETUP_7_FRONTLEFT = 0;

	[Token(Token = "0x40004FC")]
	public const int AK_IDX_SETUP_7_FRONTRIGHT = 1;

	[Token(Token = "0x40004FD")]
	public const int AK_IDX_SETUP_7_CENTER = 2;

	[Token(Token = "0x40004FE")]
	public const int AK_IDX_SETUP_7_REARLEFT = 3;

	[Token(Token = "0x40004FF")]
	public const int AK_IDX_SETUP_7_REARRIGHT = 4;

	[Token(Token = "0x4000500")]
	public const int AK_IDX_SETUP_7_SIDELEFT = 5;

	[Token(Token = "0x4000501")]
	public const int AK_IDX_SETUP_7_SIDERIGHT = 6;

	[Token(Token = "0x4000502")]
	public const int AK_IDX_SETUP_7_LFE = 7;

	[Token(Token = "0x4000503")]
	public const int AK_SPEAKER_SETUP_0_1 = 8;

	[Token(Token = "0x4000504")]
	public const int AK_SPEAKER_SETUP_1_0_CENTER = 4;

	[Token(Token = "0x4000505")]
	public const int AK_SPEAKER_SETUP_1_1_CENTER = 12;

	[Token(Token = "0x4000506")]
	public const int AK_SPEAKER_SETUP_2_0 = 3;

	[Token(Token = "0x4000507")]
	public const int AK_SPEAKER_SETUP_2_1 = 11;

	[Token(Token = "0x4000508")]
	public const int AK_SPEAKER_SETUP_3_0 = 7;

	[Token(Token = "0x4000509")]
	public const int AK_SPEAKER_SETUP_3_1 = 15;

	[Token(Token = "0x400050A")]
	public const int AK_SPEAKER_SETUP_FRONT = 7;

	[Token(Token = "0x400050B")]
	public const int AK_SPEAKER_SETUP_4_0 = 1539;

	[Token(Token = "0x400050C")]
	public const int AK_SPEAKER_SETUP_4_1 = 1547;

	[Token(Token = "0x400050D")]
	public const int AK_SPEAKER_SETUP_5_0 = 1543;

	[Token(Token = "0x400050E")]
	public const int AK_SPEAKER_SETUP_5_1 = 1551;

	[Token(Token = "0x400050F")]
	public const int AK_SPEAKER_SETUP_6_0 = 1587;

	[Token(Token = "0x4000510")]
	public const int AK_SPEAKER_SETUP_6_1 = 1595;

	[Token(Token = "0x4000511")]
	public const int AK_SPEAKER_SETUP_7_0 = 1591;

	[Token(Token = "0x4000512")]
	public const int AK_SPEAKER_SETUP_7_1 = 1599;

	[Token(Token = "0x4000513")]
	public const int AK_SPEAKER_SETUP_DEFAULT_PLANE = 1599;

	[Token(Token = "0x4000514")]
	public const int AK_SUPPORTED_STANDARD_CHANNEL_MASK = 261951;

	[Token(Token = "0x4000515")]
	public const int AK_STANDARD_MAX_NUM_CHANNELS = 8;

	[Token(Token = "0x4000516")]
	public const int AK_NUM_SAMPLED_SPHERE_POINTS = 32;

	[Token(Token = "0x4000517")]
	public const int AK_MAX_NUM_TEXTURE = 4;

	[Token(Token = "0x4000518")]
	public const int AK_MAX_REFLECT_ORDER = 4;

	[Token(Token = "0x4000519")]
	public const int AK_MAX_REFLECTION_PATH_LENGTH = 6;

	[Token(Token = "0x400051A")]
	public const int AK_MAX_SOUND_PROPAGATION_DEPTH = 8;

	[Token(Token = "0x400051B")]
	public const double AK_DEFAULT_DIFFR_SHADOW_DEGREES = 30.0;

	[Token(Token = "0x400051C")]
	public const double AK_DEFAULT_DIFFR_SHADOW_ATTEN = 2.0;

	[Token(Token = "0x400051D")]
	public const double AK_DEFAULT_MOVEMENT_THRESHOLD = 1.0;

	[Token(Token = "0x400051E")]
	public const double AK_SA_EPSILON = 0.001;

	[Token(Token = "0x400051F")]
	public const double AK_SA_DIFFRACTION_EPSILON = 0.1;

	[Token(Token = "0x4000520")]
	public const double AK_SA_PLANE_THICKNESS_RATIO = 0.005;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObjectHashFunction gameObjectHash;

	[Token(Token = "0x4000522")]
	public const string Deprecation_2018_1_2 = "This functionality is deprecated as of Wwise v2018.1.2 and will be removed in a future release.";

	[Token(Token = "0x4000523")]
	public const string Deprecation_2018_1_6 = "This functionality is deprecated as of Wwise v2018.1.6 and will be removed in a future release.";

	[Token(Token = "0x4000524")]
	public const string Deprecation_2019_1_1 = "This functionality is deprecated as of Wwise v2019.1.1 and will be removed in a future release.";

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<ulong> RegisteredGameObjects;

	[Token(Token = "0x17000056")]
	public static uint AK_SOUNDBANK_VERSION
	{
		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xDA5BBC", Offset = "0xDA5BBC", VA = "0xDA5BBC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000057")]
	public static ushort AK_INT
	{
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xDA5C8C", Offset = "0xDA5C8C", VA = "0xDA5C8C")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000058")]
	public static ushort AK_FLOAT
	{
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xDA5D5C", Offset = "0xDA5D5C", VA = "0xDA5D5C")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000059")]
	public static byte AK_INTERLEAVED
	{
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xDA5E2C", Offset = "0xDA5E2C", VA = "0xDA5E2C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700005A")]
	public static byte AK_NONINTERLEAVED
	{
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xDA5EFC", Offset = "0xDA5EFC", VA = "0xDA5EFC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700005B")]
	public static uint AK_LE_NATIVE_BITSPERSAMPLE
	{
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xDA5FCC", Offset = "0xDA5FCC", VA = "0xDA5FCC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700005C")]
	public static uint AK_LE_NATIVE_SAMPLETYPE
	{
		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xDA609C", Offset = "0xDA609C", VA = "0xDA609C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700005D")]
	public static uint AK_LE_NATIVE_INTERLEAVE
	{
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xDA616C", Offset = "0xDA616C", VA = "0xDA616C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700005E")]
	public static byte AK_INVALID_MIDI_CHANNEL
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xDB6CD0", Offset = "0xDB6CD0", VA = "0xDB6CD0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700005F")]
	public static byte AK_INVALID_MIDI_NOTE
	{
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xDB6DA0", Offset = "0xDB6DA0", VA = "0xDB6DA0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000060")]
	public static float kDefaultMaxPathLength
	{
		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xDBAB00", Offset = "0xDBAB00", VA = "0xDBAB00")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000061")]
	public static uint kDefaultDiffractionMaxEdges
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xDBABCC", Offset = "0xDBABCC", VA = "0xDBABCC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000062")]
	public static uint kDefaultDiffractionMaxPaths
	{
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xDBAC9C", Offset = "0xDBAC9C", VA = "0xDBAC9C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000063")]
	public static float kMaxDiffraction
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xDBAD6C", Offset = "0xDBAD6C", VA = "0xDBAD6C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000064")]
	public static uint kListenerDiffractionMaxEdges
	{
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xDBAE38", Offset = "0xDBAE38", VA = "0xDBAE38")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000065")]
	public static uint kListenerDiffractionMaxPaths
	{
		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xDBAF08", Offset = "0xDBAF08", VA = "0xDBAF08")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000066")]
	public static uint kPortalToPortalDiffractionMaxPaths
	{
		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xDBAFD8", Offset = "0xDBAFD8", VA = "0xDBAFD8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000067")]
	public static int g_SpatialAudioPoolId
	{
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xDBB18C", Offset = "0xDBB18C", VA = "0xDBB18C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xDBB0A8", Offset = "0xDBB0A8", VA = "0xDBB0A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public static GameObjectHashFunction GameObjectHash
	{
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xDBF5EC", Offset = "0xDBF5EC", VA = "0xDBF5EC")]
		set
		{
		}
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xDA623C", Offset = "0xDA623C", VA = "0xDA623C")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, AkDynamicSequenceType in_eDynamicSequenceType)
	{
		return default(uint);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xDA653C", Offset = "0xDA653C", VA = "0xDA653C")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xDA6740", Offset = "0xDA6740", VA = "0xDA6740")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xDA6898", Offset = "0xDA6898", VA = "0xDA6898")]
	public static AKRESULT DynamicSequenceClose(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xDA697C", Offset = "0xDA697C", VA = "0xDA697C")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xDA6A90", Offset = "0xDA6A90", VA = "0xDA6A90")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xDA6B94", Offset = "0xDA6B94", VA = "0xDA6B94")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xDA6C78", Offset = "0xDA6C78", VA = "0xDA6C78")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xDA6D8C", Offset = "0xDA6D8C", VA = "0xDA6D8C")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xDA6E90", Offset = "0xDA6E90", VA = "0xDA6E90")]
	public static AKRESULT DynamicSequencePause(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xDA6F74", Offset = "0xDA6F74", VA = "0xDA6F74")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xDA7088", Offset = "0xDA7088", VA = "0xDA7088")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xDA718C", Offset = "0xDA718C", VA = "0xDA718C")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xDA7270", Offset = "0xDA7270", VA = "0xDA7270")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xDA7384", Offset = "0xDA7384", VA = "0xDA7384")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xDA7488", Offset = "0xDA7488", VA = "0xDA7488")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xDA756C", Offset = "0xDA756C", VA = "0xDA756C")]
	public static AKRESULT DynamicSequenceBreak(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xDA7650", Offset = "0xDA7650", VA = "0xDA7650")]
	public static AKRESULT DynamicSequenceGetPauseTimes(uint in_playingID, out uint out_uTime, out uint out_uDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xDA7764", Offset = "0xDA7764", VA = "0xDA7764")]
	public static AkPlaylist DynamicSequenceLockPlaylist(uint in_playingID)
	{
		return null;
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xDA788C", Offset = "0xDA788C", VA = "0xDA788C")]
	public static AKRESULT DynamicSequenceUnlockPlaylist(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xDA7970", Offset = "0xDA7970", VA = "0xDA7970")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xDA7A48", Offset = "0xDA7A48", VA = "0xDA7A48")]
	public static AKRESULT GetAudioSettings(AkAudioSettings out_audioSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xDA7B40", Offset = "0xDA7B40", VA = "0xDA7B40")]
	public static AkChannelConfig GetSpeakerConfiguration(ulong in_idOutput)
	{
		return null;
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xDA7C58", Offset = "0xDA7C58", VA = "0xDA7C58")]
	public static AkChannelConfig GetSpeakerConfiguration()
	{
		return null;
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xDA7D5C", Offset = "0xDA7D5C", VA = "0xDA7D5C")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xDA7E60", Offset = "0xDA7E60", VA = "0xDA7E60")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xDA7F44", Offset = "0xDA7F44", VA = "0xDA7F44")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xDA8048", Offset = "0xDA8048", VA = "0xDA8048")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xDA812C", Offset = "0xDA812C", VA = "0xDA812C")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xDA8268", Offset = "0xDA8268", VA = "0xDA8268")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xDA8384", Offset = "0xDA8384", VA = "0xDA8384")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xDA84C0", Offset = "0xDA84C0", VA = "0xDA84C0")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xDA85EC", Offset = "0xDA85EC", VA = "0xDA85EC")]
	public static AKRESULT SetVolumeThreshold(float in_fVolumeThresholdDB)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xDA86E0", Offset = "0xDA86E0", VA = "0xDA86E0")]
	public static AKRESULT SetMaxNumVoicesLimit(ushort in_maxNumberVoices)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xDA87C4", Offset = "0xDA87C4", VA = "0xDA87C4")]
	public static AKRESULT RenderAudio(bool in_bAllowSyncRender)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xDA88A8", Offset = "0xDA88A8", VA = "0xDA88A8")]
	public static AKRESULT RenderAudio()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xDA8978", Offset = "0xDA8978", VA = "0xDA8978")]
	public static AKRESULT RegisterPluginDLL(string in_DllName, string in_DllPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xDA8AAC", Offset = "0xDA8AAC", VA = "0xDA8AAC")]
	public static AKRESULT RegisterPluginDLL(string in_DllName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xDA8BA8", Offset = "0xDA8BA8", VA = "0xDA8BA8")]
	public static uint GetIDFromString(string in_pszString)
	{
		return default(uint);
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xDA8CA4", Offset = "0xDA8CA4", VA = "0xDA8CA4")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xDA8F14", Offset = "0xDA8F14", VA = "0xDA8F14")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xDA9164", Offset = "0xDA9164", VA = "0xDA9164")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xDA9378", Offset = "0xDA9378", VA = "0xDA9378")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xDA94F0", Offset = "0xDA94F0", VA = "0xDA94F0")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xDA9778", Offset = "0xDA9778", VA = "0xDA9778")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xDA99E0", Offset = "0xDA99E0", VA = "0xDA99E0")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xDA9C0C", Offset = "0xDA9C0C", VA = "0xDA9C0C")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xDA9D9C", Offset = "0xDA9D9C", VA = "0xDA9D9C")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xDA9F38", Offset = "0xDA9F38", VA = "0xDA9F38")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xDAA0B4", Offset = "0xDAA0B4", VA = "0xDAA0B4")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xDAA220", Offset = "0xDAA220", VA = "0xDAA220")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xDAA36C", Offset = "0xDAA36C", VA = "0xDAA36C")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xDAA470", Offset = "0xDAA470", VA = "0xDAA470")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xDAA624", Offset = "0xDAA624", VA = "0xDAA624")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xDAA7B8", Offset = "0xDAA7B8", VA = "0xDAA7B8")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xDAA93C", Offset = "0xDAA93C", VA = "0xDAA93C")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xDAAAA0", Offset = "0xDAAAA0", VA = "0xDAAAA0")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xDAABBC", Offset = "0xDAABBC", VA = "0xDAABBC")]
	public static AKRESULT PostMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID, AkMIDIPostArray in_pPosts, ushort in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xDAAD34", Offset = "0xDAAD34", VA = "0xDAAD34")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xDAAE70", Offset = "0xDAAE70", VA = "0xDAAE70")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xDAAF54", Offset = "0xDAAF54", VA = "0xDAAF54")]
	public static AKRESULT StopMIDIOnEvent()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xDAB024", Offset = "0xDAB024", VA = "0xDAB024")]
	public static AKRESULT PinEventInStreamCache(uint in_eventID, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xDAB138", Offset = "0xDAB138", VA = "0xDAB138")]
	public static AKRESULT PinEventInStreamCache(string in_pszEventName, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xDAB264", Offset = "0xDAB264", VA = "0xDAB264")]
	public static AKRESULT UnpinEventInStreamCache(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xDAB348", Offset = "0xDAB348", VA = "0xDAB348")]
	public static AKRESULT UnpinEventInStreamCache(string in_pszEventName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xDAB444", Offset = "0xDAB444", VA = "0xDAB444")]
	public static AKRESULT GetBufferStatusForPinnedEvent(uint in_eventID, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xDAB558", Offset = "0xDAB558", VA = "0xDAB558")]
	public static AKRESULT GetBufferStatusForPinnedEvent(string in_pszEventName, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xDAB684", Offset = "0xDAB684", VA = "0xDAB684")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xDAB800", Offset = "0xDAB800", VA = "0xDAB800")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xDAB96C", Offset = "0xDAB96C", VA = "0xDAB96C")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xDABAB8", Offset = "0xDABAB8", VA = "0xDABAB8")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xDABC4C", Offset = "0xDABC4C", VA = "0xDABC4C")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xDABDD0", Offset = "0xDABDD0", VA = "0xDABDD0")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xDABF34", Offset = "0xDABF34", VA = "0xDABF34")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xDAC0C0", Offset = "0xDAC0C0", VA = "0xDAC0C0")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xDAC22C", Offset = "0xDAC22C", VA = "0xDAC22C")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xDAC388", Offset = "0xDAC388", VA = "0xDAC388")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xDAC52C", Offset = "0xDAC52C", VA = "0xDAC52C")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xDAC6B0", Offset = "0xDAC6B0", VA = "0xDAC6B0")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xDAC824", Offset = "0xDAC824", VA = "0xDAC824")]
	public static void CancelEventCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xDAC88C", Offset = "0xDAC88C", VA = "0xDAC88C")]
	public static void CancelEventCallbackGameObject(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xDAC9A8", Offset = "0xDAC9A8", VA = "0xDAC9A8")]
	public static void CancelEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xDACA10", Offset = "0xDACA10", VA = "0xDACA10")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xDACB24", Offset = "0xDACB24", VA = "0xDACB24")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xDACC28", Offset = "0xDACC28", VA = "0xDACC28")]
	public static AKRESULT GetSourceStreamBuffering(uint in_PlayingID, out int out_buffering, out int out_bIsBuffering)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xDACD3C", Offset = "0xDACD3C", VA = "0xDACD3C")]
	public static void StopAll(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xDACE58", Offset = "0xDACE58", VA = "0xDACE58")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xDACF24", Offset = "0xDACF24", VA = "0xDACF24")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xDAD038", Offset = "0xDAD038", VA = "0xDAD038")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xDAD13C", Offset = "0xDAD13C", VA = "0xDAD13C")]
	public static void StopPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xDAD220", Offset = "0xDAD220", VA = "0xDAD220")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xDAD354", Offset = "0xDAD354", VA = "0xDAD354")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xDAD468", Offset = "0xDAD468", VA = "0xDAD468")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xDAD56C", Offset = "0xDAD56C", VA = "0xDAD56C")]
	public static void SetRandomSeed(uint in_uSeed)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xDAD650", Offset = "0xDAD650", VA = "0xDAD650")]
	public static void MuteBackgroundMusic(bool in_bMute)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xDAD734", Offset = "0xDAD734", VA = "0xDAD734")]
	public static bool GetBackgroundMusicMute()
	{
		return default(bool);
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xDAD80C", Offset = "0xDAD80C", VA = "0xDAD80C")]
	public static AKRESULT SendPluginCustomGameData(uint in_busID, GameObject in_busObjectID, AkPluginType in_eType, uint in_uCompanyID, uint in_uPluginID, IntPtr in_pData, uint in_uSizeInBytes)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xDAD9B8", Offset = "0xDAD9B8", VA = "0xDAD9B8")]
	public static AKRESULT UnregisterAllGameObj()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xDADA88", Offset = "0xDADA88", VA = "0xDADA88")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xDADBF4", Offset = "0xDADBF4", VA = "0xDADBF4")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xDADD40", Offset = "0xDADD40", VA = "0xDADD40")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xDADEAC", Offset = "0xDADEAC", VA = "0xDADEAC")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xDADFF8", Offset = "0xDADFF8", VA = "0xDADFF8")]
	public static AKRESULT SetScalingFactor(GameObject in_GameObjectID, float in_fAttenuationScalingFactor)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xDAE12C", Offset = "0xDAE12C", VA = "0xDAE12C")]
	public static AKRESULT ClearBanks()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xDAE1FC", Offset = "0xDAE1FC", VA = "0xDAE1FC")]
	public static AKRESULT SetBankLoadIOSettings(float in_fThroughput, sbyte in_priority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xDAE300", Offset = "0xDAE300", VA = "0xDAE300")]
	public static AKRESULT LoadBank(string in_pszString, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xDAE42C", Offset = "0xDAE42C", VA = "0xDAE42C")]
	public static AKRESULT LoadBank(uint in_bankID, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xDAE530", Offset = "0xDAE530", VA = "0xDAE530")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xDAE644", Offset = "0xDAE644", VA = "0xDAE644")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xDAE778", Offset = "0xDAE778", VA = "0xDAE778")]
	public static AKRESULT LoadBank(string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xDAE920", Offset = "0xDAE920", VA = "0xDAE920")]
	public static AKRESULT LoadBank(uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xDAEAA0", Offset = "0xDAEAA0", VA = "0xDAEAA0")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xDAEC30", Offset = "0xDAEC30", VA = "0xDAEC30")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xDAEDE0", Offset = "0xDAEDE0", VA = "0xDAEDE0")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xDAEF0C", Offset = "0xDAEF0C", VA = "0xDAEF0C")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xDAF028", Offset = "0xDAF028", VA = "0xDAF028")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xDAF13C", Offset = "0xDAF13C", VA = "0xDAF13C")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xDAF240", Offset = "0xDAF240", VA = "0xDAF240")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xDAF3D8", Offset = "0xDAF3D8", VA = "0xDAF3D8")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xDAF558", Offset = "0xDAF558", VA = "0xDAF558")]
	public static void CancelBankCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xDAF5C0", Offset = "0xDAF5C0", VA = "0xDAF5C0")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xDAF6F0", Offset = "0xDAF6F0", VA = "0xDAF6F0")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xDAF810", Offset = "0xDAF810", VA = "0xDAF810")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xDAF924", Offset = "0xDAF924", VA = "0xDAF924")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xDAFA28", Offset = "0xDAFA28", VA = "0xDAFA28")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xDAFBD4", Offset = "0xDAFBD4", VA = "0xDAFBD4")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xDAFD70", Offset = "0xDAFD70", VA = "0xDAFD70")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xDAFF00", Offset = "0xDAFF00", VA = "0xDAFF00")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xDB0080", Offset = "0xDB0080", VA = "0xDB0080")]
	public static AKRESULT ClearPreparedEvents()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xDB0150", Offset = "0xDB0150", VA = "0xDB0150")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xDB0480", Offset = "0xDB0480", VA = "0xDB0480")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xDB059C", Offset = "0xDB059C", VA = "0xDB059C")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xDB0948", Offset = "0xDB0948", VA = "0xDB0948")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xDB0AE0", Offset = "0xDB0AE0", VA = "0xDB0AE0")]
	public static AKRESULT SetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xDB0BF0", Offset = "0xDB0BF0", VA = "0xDB0BF0")]
	public static AKRESULT UnsetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xDB0D00", Offset = "0xDB0D00", VA = "0xDB0D00")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xDB1074", Offset = "0xDB1074", VA = "0xDB1074")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xDB11C0", Offset = "0xDB11C0", VA = "0xDB11C0")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xDB15B0", Offset = "0xDB15B0", VA = "0xDB15B0")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xDB1778", Offset = "0xDB1778", VA = "0xDB1778")]
	public static AKRESULT AddListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xDB18CC", Offset = "0xDB18CC", VA = "0xDB18CC")]
	public static AKRESULT RemoveListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xDB1A20", Offset = "0xDB1A20", VA = "0xDB1A20")]
	public static AKRESULT AddDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xDB1B3C", Offset = "0xDB1B3C", VA = "0xDB1B3C")]
	public static AKRESULT RemoveDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xDB1C58", Offset = "0xDB1C58", VA = "0xDB1C58")]
	public static AKRESULT ResetListenersToDefault(GameObject in_emitterGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xDB1D74", Offset = "0xDB1D74", VA = "0xDB1D74")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig, float[] in_pVolumeOffsets)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xDB1EFC", Offset = "0xDB1EFC", VA = "0xDB1EFC")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xDB205C", Offset = "0xDB205C", VA = "0xDB205C")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xDB21F8", Offset = "0xDB21F8", VA = "0xDB21F8")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xDB2384", Offset = "0xDB2384", VA = "0xDB2384")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xDB24F0", Offset = "0xDB24F0", VA = "0xDB24F0")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xDB264C", Offset = "0xDB264C", VA = "0xDB264C")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xDB2750", Offset = "0xDB2750", VA = "0xDB2750")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xDB2904", Offset = "0xDB2904", VA = "0xDB2904")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xDB2AA8", Offset = "0xDB2AA8", VA = "0xDB2AA8")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xDB2C2C", Offset = "0xDB2C2C", VA = "0xDB2C2C")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xDB2DA0", Offset = "0xDB2DA0", VA = "0xDB2DA0")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xDB2EBC", Offset = "0xDB2EBC", VA = "0xDB2EBC")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xDB3020", Offset = "0xDB3020", VA = "0xDB3020")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xDB3174", Offset = "0xDB3174", VA = "0xDB3174")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xDB32A8", Offset = "0xDB32A8", VA = "0xDB32A8")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xDB33CC", Offset = "0xDB33CC", VA = "0xDB33CC")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xDB3548", Offset = "0xDB3548", VA = "0xDB3548")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xDB36B4", Offset = "0xDB36B4", VA = "0xDB36B4")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xDB3800", Offset = "0xDB3800", VA = "0xDB3800")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xDB393C", Offset = "0xDB393C", VA = "0xDB393C")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xDB3AB8", Offset = "0xDB3AB8", VA = "0xDB3AB8")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xDB3C24", Offset = "0xDB3C24", VA = "0xDB3C24")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xDB3D70", Offset = "0xDB3D70", VA = "0xDB3D70")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xDB3EAC", Offset = "0xDB3EAC", VA = "0xDB3EAC")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xDB3F90", Offset = "0xDB3F90", VA = "0xDB3F90")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xDB4124", Offset = "0xDB4124", VA = "0xDB4124")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xDB42A8", Offset = "0xDB42A8", VA = "0xDB42A8")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xDB440C", Offset = "0xDB440C", VA = "0xDB440C")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xDB4560", Offset = "0xDB4560", VA = "0xDB4560")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xDB465C", Offset = "0xDB465C", VA = "0xDB465C")]
	public static AKRESULT SetSwitch(uint in_switchGroup, uint in_switchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xDB47A8", Offset = "0xDB47A8", VA = "0xDB47A8")]
	public static AKRESULT SetSwitch(string in_pszSwitchGroup, string in_pszSwitchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xDB4920", Offset = "0xDB4920", VA = "0xDB4920")]
	public static AKRESULT PostTrigger(uint in_triggerID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xDB4A5C", Offset = "0xDB4A5C", VA = "0xDB4A5C")]
	public static AKRESULT PostTrigger(string in_pszTrigger, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xDB4BB0", Offset = "0xDB4BB0", VA = "0xDB4BB0")]
	public static AKRESULT SetState(uint in_stateGroup, uint in_state)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xDB4CB4", Offset = "0xDB4CB4", VA = "0xDB4CB4")]
	public static AKRESULT SetState(string in_pszStateGroup, string in_pszState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xDB4DE8", Offset = "0xDB4DE8", VA = "0xDB4DE8")]
	public static AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_aAuxSendValues, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xDB4F40", Offset = "0xDB4F40", VA = "0xDB4F40")]
	public static AKRESULT SetGameObjectOutputBusVolume(GameObject in_emitterObjID, GameObject in_listenerObjID, float in_fControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xDB50B4", Offset = "0xDB50B4", VA = "0xDB50B4")]
	public static AKRESULT SetActorMixerEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xDB51C8", Offset = "0xDB51C8", VA = "0xDB51C8")]
	public static AKRESULT SetBusEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xDB52DC", Offset = "0xDB52DC", VA = "0xDB52DC")]
	public static AKRESULT SetBusEffect(string in_pszBusName, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xDB5408", Offset = "0xDB5408", VA = "0xDB5408")]
	public static AKRESULT SetMixer(uint in_audioNodeID, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xDB550C", Offset = "0xDB550C", VA = "0xDB550C")]
	public static AKRESULT SetMixer(string in_pszBusName, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xDB5628", Offset = "0xDB5628", VA = "0xDB5628")]
	public static AKRESULT SetBusConfig(uint in_audioNodeID, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xDB5740", Offset = "0xDB5740", VA = "0xDB5740")]
	public static AKRESULT SetBusConfig(string in_pszBusName, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xDB5870", Offset = "0xDB5870", VA = "0xDB5870")]
	public static AKRESULT SetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xDB59F4", Offset = "0xDB59F4", VA = "0xDB59F4")]
	public static AKRESULT SetMultipleObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_uListenerID, AkObstructionOcclusionValuesArray in_fObstructionOcclusionValues, uint in_uNumOcclusionObstruction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xDB5B84", Offset = "0xDB5B84", VA = "0xDB5B84")]
	public static AKRESULT StartOutputCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xDB5C80", Offset = "0xDB5C80", VA = "0xDB5C80")]
	public static AKRESULT StopOutputCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xDB5D50", Offset = "0xDB5D50", VA = "0xDB5D50")]
	public static AKRESULT AddOutputCaptureMarker(string in_MarkerText)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xDB5E4C", Offset = "0xDB5E4C", VA = "0xDB5E4C")]
	public static AKRESULT StartProfilerCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xDB5F48", Offset = "0xDB5F48", VA = "0xDB5F48")]
	public static AKRESULT StopProfilerCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xDB6018", Offset = "0xDB6018", VA = "0xDB6018")]
	public static AKRESULT RemoveOutput(ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xDB60FC", Offset = "0xDB60FC", VA = "0xDB60FC")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId, out ulong out_pOutputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xDB6224", Offset = "0xDB6224", VA = "0xDB6224")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xDB633C", Offset = "0xDB633C", VA = "0xDB633C")]
	public static ulong GetOutputID(uint in_idShareset, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xDB6440", Offset = "0xDB6440", VA = "0xDB6440")]
	public static ulong GetOutputID(string in_szShareSet, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xDB655C", Offset = "0xDB655C", VA = "0xDB655C")]
	public static AKRESULT SetBusDevice(uint in_idBus, uint in_idNewDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xDB6660", Offset = "0xDB6660", VA = "0xDB6660")]
	public static AKRESULT SetBusDevice(string in_BusName, string in_DeviceName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xDB6794", Offset = "0xDB6794", VA = "0xDB6794")]
	public static AKRESULT SetOutputVolume(ulong in_idOutput, float in_fVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xDB6898", Offset = "0xDB6898", VA = "0xDB6898")]
	public static AKRESULT GetDeviceSpatialAudioSupport(uint in_idDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xDB697C", Offset = "0xDB697C", VA = "0xDB697C")]
	public static AKRESULT Suspend(bool in_bRenderAnyway)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xDB6A60", Offset = "0xDB6A60", VA = "0xDB6A60")]
	public static AKRESULT Suspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xDB6B30", Offset = "0xDB6B30", VA = "0xDB6B30")]
	public static AKRESULT WakeupFromSuspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xDB6C00", Offset = "0xDB6C00", VA = "0xDB6C00")]
	public static uint GetBufferTick()
	{
		return default(uint);
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xDB6E70", Offset = "0xDB6E70", VA = "0xDB6E70")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xDB6FB0", Offset = "0xDB6FB0", VA = "0xDB6FB0")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xDB70E0", Offset = "0xDB70E0", VA = "0xDB70E0")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xDB727C", Offset = "0xDB727C", VA = "0xDB727C")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xDB73F8", Offset = "0xDB73F8", VA = "0xDB73F8")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xDB7564", Offset = "0xDB7564", VA = "0xDB7564")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xDB7678", Offset = "0xDB7678", VA = "0xDB7678")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xDB777C", Offset = "0xDB777C", VA = "0xDB777C")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xDB7930", Offset = "0xDB7930", VA = "0xDB7930")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xDB7AC4", Offset = "0xDB7AC4", VA = "0xDB7AC4")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xDB7C48", Offset = "0xDB7C48", VA = "0xDB7C48")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xDB7D74", Offset = "0xDB7D74", VA = "0xDB7D74")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xDB7E90", Offset = "0xDB7E90", VA = "0xDB7E90")]
	public static int GetTimeStamp()
	{
		return default(int);
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xDB7F60", Offset = "0xDB7F60", VA = "0xDB7F60")]
	public static uint GetNumNonZeroBits(uint in_uWord)
	{
		return default(uint);
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xDB8044", Offset = "0xDB8044", VA = "0xDB8044")]
	public static void AkGetDefaultHighPriorityThreadProperties(AkThreadProperties out_threadProperties)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xDB813C", Offset = "0xDB813C", VA = "0xDB813C")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments, uint in_idSequence)
	{
		return default(uint);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xDB8278", Offset = "0xDB8278", VA = "0xDB8278")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments)
	{
		return default(uint);
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xDB8394", Offset = "0xDB8394", VA = "0xDB8394")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xDB84A8", Offset = "0xDB84A8", VA = "0xDB84A8")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xDB85BC", Offset = "0xDB85BC", VA = "0xDB85BC")]
	public static AKRESULT GetPosition(GameObject in_GameObjectID, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xDB8700", Offset = "0xDB8700", VA = "0xDB8700")]
	public static AKRESULT GetListenerPosition(GameObject in_uIndex, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xDB8850", Offset = "0xDB8850", VA = "0xDB8850")]
	public static AKRESULT GetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xDB89CC", Offset = "0xDB89CC", VA = "0xDB89CC")]
	public static AKRESULT GetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xDB8B60", Offset = "0xDB8B60", VA = "0xDB8B60")]
	public static AKRESULT GetSwitch(uint in_switchGroup, GameObject in_gameObjectID, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xDB8CAC", Offset = "0xDB8CAC", VA = "0xDB8CAC")]
	public static AKRESULT GetSwitch(string in_pstrSwitchGroupName, GameObject in_GameObj, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xDB8E04", Offset = "0xDB8E04", VA = "0xDB8E04")]
	public static AKRESULT GetState(uint in_stateGroup, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xDB8F08", Offset = "0xDB8F08", VA = "0xDB8F08")]
	public static AKRESULT GetState(string in_pstrStateGroupName, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xDB9024", Offset = "0xDB9024", VA = "0xDB9024")]
	public static AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray out_paAuxSendValues, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xDB917C", Offset = "0xDB917C", VA = "0xDB917C")]
	public static AKRESULT GetGameObjectDryLevelValue(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xDB92E0", Offset = "0xDB92E0", VA = "0xDB92E0")]
	public static AKRESULT GetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfObstructionLevel, out float out_rfOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xDB9464", Offset = "0xDB9464", VA = "0xDB9464")]
	public static AKRESULT QueryAudioObjectIDs(uint in_eventID, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xDB9584", Offset = "0xDB9584", VA = "0xDB9584")]
	public static AKRESULT QueryAudioObjectIDs(string in_pszEventName, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xDB96BC", Offset = "0xDB96BC", VA = "0xDB96BC")]
	public static AKRESULT GetPositioningInfo(uint in_ObjectID, AkPositioningInfo out_rPositioningInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xDB97D4", Offset = "0xDB97D4", VA = "0xDB97D4")]
	public static bool GetIsGameObjectActive(GameObject in_GameObjId)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xDB98F8", Offset = "0xDB98F8", VA = "0xDB98F8")]
	public static float GetMaxRadius(GameObject in_GameObjId)
	{
		return default(float);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xDB9A14", Offset = "0xDB9A14", VA = "0xDB9A14")]
	public static uint GetEventIDFromPlayingID(uint in_playingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xDB9AF8", Offset = "0xDB9AF8", VA = "0xDB9AF8")]
	public static ulong GetGameObjectFromPlayingID(uint in_playingID)
	{
		return default(ulong);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xDB9BDC", Offset = "0xDB9BDC", VA = "0xDB9BDC")]
	public static AKRESULT GetPlayingIDsFromGameObject(GameObject in_GameObjId, ref uint io_ruNumIDs, uint[] out_aPlayingIDs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xDB9DB8", Offset = "0xDB9DB8", VA = "0xDB9DB8")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xDB9ECC", Offset = "0xDB9ECC", VA = "0xDB9ECC")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xDB9FE0", Offset = "0xDB9FE0", VA = "0xDB9FE0")]
	public static void AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xDBA0C4", Offset = "0xDBA0C4", VA = "0xDBA0C4")]
	public static void AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xDBA1A8", Offset = "0xDBA1A8", VA = "0xDBA1A8")]
	public static void AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xDBA28C", Offset = "0xDBA28C", VA = "0xDBA28C")]
	public static byte ChannelMaskToNumChannels(uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xDBA370", Offset = "0xDBA370", VA = "0xDBA370")]
	public static uint ChannelMaskFromNumChannels(uint in_uNumChannels)
	{
		return default(uint);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xDBA454", Offset = "0xDBA454", VA = "0xDBA454")]
	public static byte ChannelBitToIndex(uint in_uChannelBit, uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xDBA558", Offset = "0xDBA558", VA = "0xDBA558")]
	public static bool HasSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xDBA644", Offset = "0xDBA644", VA = "0xDBA644")]
	public static bool HasStrictlyOnePairOfSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xDBA730", Offset = "0xDBA730", VA = "0xDBA730")]
	public static bool HasSideAndRearChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xDBA81C", Offset = "0xDBA81C", VA = "0xDBA81C")]
	public static bool HasHeightChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xDBA908", Offset = "0xDBA908", VA = "0xDBA908")]
	public static uint BackToSideChannels(uint in_uChannelMask)
	{
		return default(uint);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xDBA9EC", Offset = "0xDBA9EC", VA = "0xDBA9EC")]
	public static uint StdChannelIndexToDisplayIndex(AkChannelOrdering in_eOrdering, uint in_uChannelMask, uint in_uChannelIdx)
	{
		return default(uint);
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xDBB25C", Offset = "0xDBB25C", VA = "0xDBB25C")]
	public static int GetPoolID()
	{
		return default(int);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xDBB32C", Offset = "0xDBB32C", VA = "0xDBB32C")]
	public static AKRESULT RegisterEmitter(GameObject in_gameObjectID, AkEmitterSettings in_settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xDBB47C", Offset = "0xDBB47C", VA = "0xDBB47C")]
	public static AKRESULT UnregisterEmitter(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xDBB598", Offset = "0xDBB598", VA = "0xDBB598")]
	public static AKRESULT SetEmitterAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_pAuxSends, uint in_uNumAux)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xDBB6F0", Offset = "0xDBB6F0", VA = "0xDBB6F0")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xDBB880", Offset = "0xDBB880", VA = "0xDBB880")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xDBB9C8", Offset = "0xDBB9C8", VA = "0xDBB9C8")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xDBBB14", Offset = "0xDBBB14", VA = "0xDBBB14")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xDBBC18", Offset = "0xDBBC18", VA = "0xDBBC18")]
	public static AKRESULT RemoveGeometry(ulong in_SetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xDBBCFC", Offset = "0xDBBCFC", VA = "0xDBBCFC")]
	public static AKRESULT QueryReflectionPaths(GameObject in_gameObjectID, AkVector out_listenerPos, AkVector out_emitterPos, AkReflectionPathInfoArray out_aPaths, out uint io_uArraySize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xDBBEA4", Offset = "0xDBBEA4", VA = "0xDBBEA4")]
	public static AKRESULT RemoveRoom(ulong in_RoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xDBBF88", Offset = "0xDBBF88", VA = "0xDBBF88")]
	public static AKRESULT RemovePortal(ulong in_PortalID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xDBC06C", Offset = "0xDBC06C", VA = "0xDBC06C")]
	public static AKRESULT SetGameObjectInRoom(GameObject in_gameObjectID, ulong in_CurrentRoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xDBC1A8", Offset = "0xDBC1A8", VA = "0xDBC1A8")]
	public static AKRESULT SetEmitterObstructionAndOcclusion(GameObject in_gameObjectID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xDA3E30", Offset = "0xDA3E30", VA = "0xDA3E30")]
	public static AKRESULT SetPortalObstructionAndOcclusion(ulong in_PortalID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xDBC38C", Offset = "0xDBC38C", VA = "0xDBC38C")]
	public static AKRESULT QueryWetDiffraction(ulong in_portal, out float out_wetDiffraction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xDBC490", Offset = "0xDBC490", VA = "0xDBC490")]
	public static AKRESULT GetFastPathSettings(AkInitSettings in_settings, AkPlatformInitSettings in_pfSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xDBC5B8", Offset = "0xDBC5B8", VA = "0xDBC5B8")]
	public static void SetErrorLogger(AkLogger.ErrorLoggerInteropDelegate logger)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xDBC6A0", Offset = "0xDBC6A0", VA = "0xDBC6A0")]
	public static void SetErrorLogger()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xDBC76C", Offset = "0xDBC76C", VA = "0xDBC76C")]
	public static void SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate getAudioSamples, AkAudioInputManager.AudioFormatInteropDelegate getAudioFormat)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xDBC884", Offset = "0xDBC884", VA = "0xDBC884")]
	public static AKRESULT Init(AkInitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xDBC97C", Offset = "0xDBC97C", VA = "0xDBC97C")]
	public static AKRESULT InitSpatialAudio(AkSpatialAudioInitSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xDBCA74", Offset = "0xDBCA74", VA = "0xDBCA74")]
	public static AKRESULT InitCommunication(AkCommunicationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xDBCB6C", Offset = "0xDBCB6C", VA = "0xDBCB6C")]
	public static void Term()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xDBCC38", Offset = "0xDBCC38", VA = "0xDBCC38")]
	public static AKRESULT RegisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xDBCD4C", Offset = "0xDBCD4C", VA = "0xDBCD4C")]
	public static AKRESULT UnregisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xDBCE60", Offset = "0xDBCE60", VA = "0xDBCE60")]
	public static AKRESULT RegisterGameObjInternal_WithName(GameObject in_GameObj, string in_pszObjName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xDBCFB0", Offset = "0xDBCFB0", VA = "0xDBCFB0")]
	public static AKRESULT SetBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xDBD0AC", Offset = "0xDBD0AC", VA = "0xDBD0AC")]
	public static AKRESULT SetCurrentLanguage(string in_pszAudioSrcPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xDBD1A8", Offset = "0xDBD1A8", VA = "0xDBD1A8")]
	public static AKRESULT LoadFilePackage(string in_pszFilePackageName, out uint out_uPackageID, int in_memPoolID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xDBD2D4", Offset = "0xDBD2D4", VA = "0xDBD2D4")]
	public static AKRESULT AddBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xDBD3D0", Offset = "0xDBD3D0", VA = "0xDBD3D0")]
	public static AKRESULT SetGameName(string in_GameName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xDBD4CC", Offset = "0xDBD4CC", VA = "0xDBD4CC")]
	public static AKRESULT SetDecodedBankPath(string in_DecodedPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xDBD5C8", Offset = "0xDBD5C8", VA = "0xDBD5C8")]
	public static AKRESULT LoadAndDecodeBank(string in_pszString, bool in_bSaveDecodedBank, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xDBD6F4", Offset = "0xDBD6F4", VA = "0xDBD6F4")]
	public static AKRESULT LoadAndDecodeBankFromMemory(IntPtr in_BankData, uint in_BankDataSize, bool in_bSaveDecodedBank, string in_DecodedBankName, bool in_bIsLanguageSpecific, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xDBD874", Offset = "0xDBD874", VA = "0xDBD874")]
	public static string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xDBD9D8", Offset = "0xDBD9D8", VA = "0xDBD9D8")]
	public static AKRESULT UnloadFilePackage(uint in_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xDBDABC", Offset = "0xDBDABC", VA = "0xDBDABC")]
	public static AKRESULT UnloadAllFilePackages()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xDBDB8C", Offset = "0xDBDB8C", VA = "0xDBDB8C")]
	public static AKRESULT SetObjectPosition(GameObject in_GameObjectID, float PosX, float PosY, float PosZ, float FrontX, float FrontY, float FrontZ, float TopX, float TopY, float TopZ)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xDBDD78", Offset = "0xDBDD78", VA = "0xDBDD78")]
	public static AKRESULT GetSourceMultiplePlayPositions(uint in_PlayingID, uint[] out_audioNodeID, uint[] out_mediaID, int[] out_msTime, ref uint io_pcPositions, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xDBE02C", Offset = "0xDBE02C", VA = "0xDBE02C")]
	public static AKRESULT SetListeners(GameObject in_emitterGameObj, ulong[] in_pListenerGameObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xDBE180", Offset = "0xDBE180", VA = "0xDBE180")]
	public static AKRESULT SetDefaultListeners(ulong[] in_pListenerObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xDBE28C", Offset = "0xDBE28C", VA = "0xDBE28C")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID, ulong[] in_pListenerIDs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xDBE3DC", Offset = "0xDBE3DC", VA = "0xDBE3DC")]
	public static void GetDefaultStreamSettings(AkStreamMgrSettings out_settings)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xDBE4D4", Offset = "0xDBE4D4", VA = "0xDBE4D4")]
	public static void GetDefaultDeviceSettings(AkDeviceSettings out_settings)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xDBE5CC", Offset = "0xDBE5CC", VA = "0xDBE5CC")]
	public static void GetDefaultMusicSettings(AkMusicSettings out_settings)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xDBE6C4", Offset = "0xDBE6C4", VA = "0xDBE6C4")]
	public static void GetDefaultInitSettings(AkInitSettings out_settings)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xDBE7BC", Offset = "0xDBE7BC", VA = "0xDBE7BC")]
	public static void GetDefaultPlatformInitSettings(AkPlatformInitSettings out_settings)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xDBE8B4", Offset = "0xDBE8B4", VA = "0xDBE8B4")]
	public static uint GetMajorMinorVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xDBE984", Offset = "0xDBE984", VA = "0xDBE984")]
	public static uint GetSubminorBuildVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xDBEA54", Offset = "0xDBEA54", VA = "0xDBEA54")]
	public static AKRESULT QueryIndirectPaths(GameObject in_gameObjectID, AkPathParams arg1, AkReflectionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xDBEBDC", Offset = "0xDBEBDC", VA = "0xDBEBDC")]
	public static AKRESULT QueryDiffractionPaths(GameObject in_gameObjectID, AkPathParams arg1, AkDiffractionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xDBED60", Offset = "0xDBED60", VA = "0xDBED60")]
	public static AKRESULT SetRoomPortal(ulong in_PortalID, AkTransform Transform, AkVector Extent, bool bEnabled, ulong FrontRoom, ulong BackRoom)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xDBEEE8", Offset = "0xDBEEE8", VA = "0xDBEEE8")]
	public static AKRESULT SetRoom(ulong in_RoomID, AkRoomParams in_roomParams, string in_pName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xDBF02C", Offset = "0xDBF02C", VA = "0xDBF02C")]
	public static AKRESULT RegisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xDBF148", Offset = "0xDBF148", VA = "0xDBF148")]
	public static AKRESULT UnregisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xDBF264", Offset = "0xDBF264", VA = "0xDBF264")]
	public static AKRESULT SetGeometry(ulong in_GeomSetID, AkTriangleArray Triangles, uint NumTriangles, AkVertexArray Vertices, uint NumVertices, AkAcousticSurfaceArray Surfaces, uint NumSurfaces, ulong RoomID, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xDBF488", Offset = "0xDBF488", VA = "0xDBF488")]
	public static string StringFromIntPtrString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xDBF4F0", Offset = "0xDBF4F0", VA = "0xDBF4F0")]
	public static string StringFromIntPtrWString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xDBD974", Offset = "0xDBD974", VA = "0xDBD974")]
	public static string StringFromIntPtrOSString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xDBF558", Offset = "0xDBF558", VA = "0xDBF558")]
	private static ulong InternalGameObjectHash(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xDA63A0", Offset = "0xDA63A0", VA = "0xDA63A0")]
	public static ulong GetAkGameObjectID(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xDBFA34", Offset = "0xDBFA34", VA = "0xDBFA34")]
	public static AKRESULT RegisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xDBFB84", Offset = "0xDBFB84", VA = "0xDBFB84")]
	public static AKRESULT RegisterGameObj(GameObject gameObject, string name)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xDBFC3C", Offset = "0xDBFC3C", VA = "0xDBFC3C")]
	public static AKRESULT UnregisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xDBFD8C", Offset = "0xDBFD8C", VA = "0xDBFD8C")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Transform transform)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xDBFF10", Offset = "0xDBFF10", VA = "0xDBFF10")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Vector3 position, Vector3 forward, Vector3 up)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xDC0010", Offset = "0xDC0010", VA = "0xDC0010")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x784D4C", Offset = "0x784D4C")]
	public static uint PostEvent(uint eventId, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources, uint playingId)
	{
		return default(uint);
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xDC0154", Offset = "0xDC0154", VA = "0xDC0154")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x784D84", Offset = "0x784D84")]
	public static uint PostEvent(uint eventId, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xDC02D4", Offset = "0xDC02D4", VA = "0xDC02D4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x784DBC", Offset = "0x784DBC")]
	public static uint PostEvent(string eventName, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources, uint playingId)
	{
		return default(uint);
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xDC0418", Offset = "0xDC0418", VA = "0xDC0418")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x784DF4", Offset = "0x784DF4")]
	public static uint PostEvent(string eventName, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xDA6418", Offset = "0xDA6418", VA = "0xDA6418")]
	public static void PreGameObjectAPICall(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xDC0598", Offset = "0xDC0598", VA = "0xDC0598")]
	private static void PreGameObjectAPICallUserHook(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xDBFADC", Offset = "0xDBFADC", VA = "0xDBFADC")]
	private static void PostRegisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xDBFCE4", Offset = "0xDBFCE4", VA = "0xDBFCE4")]
	private static void PostUnregisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xDC06E0", Offset = "0xDC06E0", VA = "0xDC06E0")]
	private static void AutoRegister(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xDC065C", Offset = "0xDC065C", VA = "0xDC065C")]
	private static bool IsInRegisteredList(ulong id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xDC08EC", Offset = "0xDC08EC", VA = "0xDC08EC")]
	public static bool IsGameObjectRegistered(GameObject in_gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xDC0954", Offset = "0xDC0954", VA = "0xDC0954")]
	public AkSoundEngine()
	{
	}
}
[Token(Token = "0x20000C0")]
public class AkThreadProperties : IDisposable
{
	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000069")]
	public int nPriority
	{
		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xD5D774", Offset = "0xD5D774", VA = "0xD5D774")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xD5D6F8", Offset = "0xD5D6F8", VA = "0xD5D6F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public uint uStackSize
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xD5D85C", Offset = "0xD5D85C", VA = "0xD5D85C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xD5D7E0", Offset = "0xD5D7E0", VA = "0xD5D7E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public int uSchedPolicy
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xD5D944", Offset = "0xD5D944", VA = "0xD5D944")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xD5D8C8", Offset = "0xD5D8C8", VA = "0xD5D8C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public uint dwAffinityMask
	{
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xD5DA2C", Offset = "0xD5DA2C", VA = "0xD5DA2C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xD5D9B0", Offset = "0xD5D9B0", VA = "0xD5D9B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xD5D498", Offset = "0xD5D498", VA = "0xD5D498")]
	internal AkThreadProperties(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xD5D4D8", Offset = "0xD5D4D8", VA = "0xD5D4D8")]
	internal static IntPtr getCPtr(AkThreadProperties obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xD5D528", Offset = "0xD5D528", VA = "0xD5D528", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xD5D55C", Offset = "0xD5D55C", VA = "0xD5D55C", Slot = "1")]
	~AkThreadProperties()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xD5D5CC", Offset = "0xD5D5CC", VA = "0xD5D5CC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xD5DA98", Offset = "0xD5DA98", VA = "0xD5DA98")]
	public AkThreadProperties()
	{
	}
}
[Token(Token = "0x20000C1")]
public class AkUnityPlatformSpecificSettings : IDisposable
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xD60600", Offset = "0xD60600", VA = "0xD60600")]
	internal AkUnityPlatformSpecificSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xD60640", Offset = "0xD60640", VA = "0xD60640")]
	internal static IntPtr getCPtr(AkUnityPlatformSpecificSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xD60690", Offset = "0xD60690", VA = "0xD60690", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xD606C4", Offset = "0xD606C4", VA = "0xD606C4", Slot = "1")]
	~AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xD60734", Offset = "0xD60734", VA = "0xD60734", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xD60860", Offset = "0xD60860", VA = "0xD60860")]
	public AkUnityPlatformSpecificSettings()
	{
	}
}
[Token(Token = "0x20000C2")]
public enum AKRESULT
{
	[Token(Token = "0x400052B")]
	AK_NotImplemented = 0,
	[Token(Token = "0x400052C")]
	AK_Success = 1,
	[Token(Token = "0x400052D")]
	AK_Fail = 2,
	[Token(Token = "0x400052E")]
	AK_PartialSuccess = 3,
	[Token(Token = "0x400052F")]
	AK_NotCompatible = 4,
	[Token(Token = "0x4000530")]
	AK_AlreadyConnected = 5,
	[Token(Token = "0x4000531")]
	AK_InvalidFile = 7,
	[Token(Token = "0x4000532")]
	AK_AudioFileHeaderTooLarge = 8,
	[Token(Token = "0x4000533")]
	AK_MaxReached = 9,
	[Token(Token = "0x4000534")]
	AK_InvalidID = 14,
	[Token(Token = "0x4000535")]
	AK_IDNotFound = 15,
	[Token(Token = "0x4000536")]
	AK_InvalidInstanceID = 16,
	[Token(Token = "0x4000537")]
	AK_NoMoreData = 17,
	[Token(Token = "0x4000538")]
	AK_InvalidStateGroup = 20,
	[Token(Token = "0x4000539")]
	AK_ChildAlreadyHasAParent = 21,
	[Token(Token = "0x400053A")]
	AK_InvalidLanguage = 22,
	[Token(Token = "0x400053B")]
	AK_CannotAddItseflAsAChild = 23,
	[Token(Token = "0x400053C")]
	AK_InvalidParameter = 31,
	[Token(Token = "0x400053D")]
	AK_ElementAlreadyInList = 35,
	[Token(Token = "0x400053E")]
	AK_PathNotFound = 36,
	[Token(Token = "0x400053F")]
	AK_PathNoVertices = 37,
	[Token(Token = "0x4000540")]
	AK_PathNotRunning = 38,
	[Token(Token = "0x4000541")]
	AK_PathNotPaused = 39,
	[Token(Token = "0x4000542")]
	AK_PathNodeAlreadyInList = 40,
	[Token(Token = "0x4000543")]
	AK_PathNodeNotInList = 41,
	[Token(Token = "0x4000544")]
	AK_DataNeeded = 43,
	[Token(Token = "0x4000545")]
	AK_NoDataNeeded = 44,
	[Token(Token = "0x4000546")]
	AK_DataReady = 45,
	[Token(Token = "0x4000547")]
	AK_NoDataReady = 46,
	[Token(Token = "0x4000548")]
	AK_InsufficientMemory = 52,
	[Token(Token = "0x4000549")]
	AK_Cancelled = 53,
	[Token(Token = "0x400054A")]
	AK_UnknownBankID = 54,
	[Token(Token = "0x400054B")]
	AK_BankReadError = 56,
	[Token(Token = "0x400054C")]
	AK_InvalidSwitchType = 57,
	[Token(Token = "0x400054D")]
	AK_FormatNotReady = 63,
	[Token(Token = "0x400054E")]
	AK_WrongBankVersion = 64,
	[Token(Token = "0x400054F")]
	AK_FileNotFound = 66,
	[Token(Token = "0x4000550")]
	AK_DeviceNotReady = 67,
	[Token(Token = "0x4000551")]
	AK_BankAlreadyLoaded = 69,
	[Token(Token = "0x4000552")]
	AK_RenderedFX = 71,
	[Token(Token = "0x4000553")]
	AK_ProcessNeeded = 72,
	[Token(Token = "0x4000554")]
	AK_ProcessDone = 73,
	[Token(Token = "0x4000555")]
	AK_MemManagerNotInitialized = 74,
	[Token(Token = "0x4000556")]
	AK_StreamMgrNotInitialized = 75,
	[Token(Token = "0x4000557")]
	AK_SSEInstructionsNotSupported = 76,
	[Token(Token = "0x4000558")]
	AK_Busy = 77,
	[Token(Token = "0x4000559")]
	AK_UnsupportedChannelConfig = 78,
	[Token(Token = "0x400055A")]
	AK_PluginMediaNotAvailable = 79,
	[Token(Token = "0x400055B")]
	AK_MustBeVirtualized = 80,
	[Token(Token = "0x400055C")]
	AK_CommandTooLarge = 81,
	[Token(Token = "0x400055D")]
	AK_RejectedByFilter = 82,
	[Token(Token = "0x400055E")]
	AK_InvalidCustomPlatformName = 83,
	[Token(Token = "0x400055F")]
	AK_DLLCannotLoad = 84,
	[Token(Token = "0x4000560")]
	AK_DLLPathNotFound = 85,
	[Token(Token = "0x4000561")]
	AK_NoJavaVM = 86,
	[Token(Token = "0x4000562")]
	AK_OpenSLError = 87,
	[Token(Token = "0x4000563")]
	AK_PluginNotRegistered = 88,
	[Token(Token = "0x4000564")]
	AK_DataAlignmentError = 89,
	[Token(Token = "0x4000565")]
	AK_DeviceNotCompatible = 90,
	[Token(Token = "0x4000566")]
	AK_DuplicateUniqueID = 91,
	[Token(Token = "0x4000567")]
	AK_InitBankNotLoaded = 92,
	[Token(Token = "0x4000568")]
	AK_DeviceNotFound = 93,
	[Token(Token = "0x4000569")]
	AK_InvalidFloatValue = 94
}
[Token(Token = "0x20000C3")]
public enum Ak3DPositionType
{
	[Token(Token = "0x400056B")]
	AK_3DPositionType_Emitter,
	[Token(Token = "0x400056C")]
	AK_3DPositionType_EmitterWithAutomation,
	[Token(Token = "0x400056D")]
	AK_3DPositionType_ListenerWithAutomation
}
[Token(Token = "0x20000C4")]
public enum Ak3DSpatializationMode
{
	[Token(Token = "0x400056F")]
	AK_SpatializationMode_None,
	[Token(Token = "0x4000570")]
	AK_SpatializationMode_PositionOnly,
	[Token(Token = "0x4000571")]
	AK_SpatializationMode_PositionAndOrientation
}
[Token(Token = "0x20000C5")]
public class AkAcousticSurface : IDisposable
{
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700006D")]
	public uint textureID
	{
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x10A3A9C", Offset = "0x10A3A9C", VA = "0x10A3A9C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x10A3A20", Offset = "0x10A3A20", VA = "0x10A3A20")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public uint reflectorChannelMask
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x10A3B84", Offset = "0x10A3B84", VA = "0x10A3B84")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x10A3B08", Offset = "0x10A3B08", VA = "0x10A3B08")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public string strName
	{
		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x10A3C6C", Offset = "0x10A3C6C", VA = "0x10A3C6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x10A3BF0", Offset = "0x10A3BF0", VA = "0x10A3BF0")]
		set
		{
		}
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x10A373C", Offset = "0x10A373C", VA = "0x10A373C")]
	internal AkAcousticSurface(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x10A377C", Offset = "0x10A377C", VA = "0x10A377C")]
	internal static IntPtr getCPtr(AkAcousticSurface obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x10A37CC", Offset = "0x10A37CC", VA = "0x10A37CC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x10A3800", Offset = "0x10A3800", VA = "0x10A3800", Slot = "1")]
	~AkAcousticSurface()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x10A3870", Offset = "0x10A3870", VA = "0x10A3870", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x10A399C", Offset = "0x10A399C", VA = "0x10A399C")]
	public AkAcousticSurface()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x10A3D0C", Offset = "0x10A3D0C", VA = "0x10A3D0C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x10A3D78", Offset = "0x10A3D78", VA = "0x10A3D78")]
	public void DeleteName()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x10A3DE4", Offset = "0x10A3DE4", VA = "0x10A3DE4")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x10A3E44", Offset = "0x10A3E44", VA = "0x10A3E44")]
	public void Clone(AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x20000C6")]
public enum AkActionOnEventType
{
	[Token(Token = "0x4000575")]
	AkActionOnEventType_Stop,
	[Token(Token = "0x4000576")]
	AkActionOnEventType_Pause,
	[Token(Token = "0x4000577")]
	AkActionOnEventType_Resume,
	[Token(Token = "0x4000578")]
	AkActionOnEventType_Break,
	[Token(Token = "0x4000579")]
	AkActionOnEventType_ReleaseEnvelope
}
[Token(Token = "0x20000C7")]
public enum AkAudioDeviceState
{
	[Token(Token = "0x400057B")]
	AkDeviceState_Active = 1,
	[Token(Token = "0x400057C")]
	AkDeviceState_Disabled = 2,
	[Token(Token = "0x400057D")]
	AkDeviceState_NotPresent = 4,
	[Token(Token = "0x400057E")]
	AkDeviceState_Unplugged = 8,
	[Token(Token = "0x400057F")]
	AkDeviceState_All = 15
}
[Token(Token = "0x20000C8")]
public class AkAudioFormat : IDisposable
{
	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000070")]
	public uint uSampleRate
	{
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x10A5848", Offset = "0x10A5848", VA = "0x10A5848")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x10A57CC", Offset = "0x10A57CC", VA = "0x10A57CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x10A59AC", Offset = "0x10A59AC", VA = "0x10A59AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x10A58B4", Offset = "0x10A58B4", VA = "0x10A58B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public uint uBitsPerSample
	{
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x10A5B18", Offset = "0x10A5B18", VA = "0x10A5B18")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x10A5A9C", Offset = "0x10A5A9C", VA = "0x10A5A9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public uint uBlockAlign
	{
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x10A5C00", Offset = "0x10A5C00", VA = "0x10A5C00")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x10A5B84", Offset = "0x10A5B84", VA = "0x10A5B84")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public uint uTypeID
	{
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x10A5CE8", Offset = "0x10A5CE8", VA = "0x10A5CE8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x10A5C6C", Offset = "0x10A5C6C", VA = "0x10A5C6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public uint uInterleaveID
	{
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x10A5DD0", Offset = "0x10A5DD0", VA = "0x10A5DD0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x10A5D54", Offset = "0x10A5D54", VA = "0x10A5D54")]
		set
		{
		}
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x10A556C", Offset = "0x10A556C", VA = "0x10A556C")]
	internal AkAudioFormat(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x10A55AC", Offset = "0x10A55AC", VA = "0x10A55AC")]
	internal static IntPtr getCPtr(AkAudioFormat obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x10A55FC", Offset = "0x10A55FC", VA = "0x10A55FC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x10A5630", Offset = "0x10A5630", VA = "0x10A5630", Slot = "1")]
	~AkAudioFormat()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x10A56A0", Offset = "0x10A56A0", VA = "0x10A56A0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x10A5E3C", Offset = "0x10A5E3C", VA = "0x10A5E3C")]
	public uint GetNumChannels()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x10A5EA8", Offset = "0x10A5EA8", VA = "0x10A5EA8")]
	public uint GetBitsPerSample()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x10A5F14", Offset = "0x10A5F14", VA = "0x10A5F14")]
	public uint GetBlockAlign()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x10A5F80", Offset = "0x10A5F80", VA = "0x10A5F80")]
	public uint GetTypeID()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x10A5FEC", Offset = "0x10A5FEC", VA = "0x10A5FEC")]
	public uint GetInterleaveID()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x10A6058", Offset = "0x10A6058", VA = "0x10A6058")]
	public void SetAll(uint in_uSampleRate, AkChannelConfig in_channelConfig, uint in_uBitsPerSample, uint in_uBlockAlign, uint in_uTypeID, uint in_uInterleaveID)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x10A6138", Offset = "0x10A6138", VA = "0x10A6138")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x10A61A4", Offset = "0x10A61A4", VA = "0x10A61A4")]
	public AkAudioFormat()
	{
	}
}
[Token(Token = "0x20000C9")]
public class AkAudioInterruptionCallbackInfo : IDisposable
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000076")]
	public bool bEnterInterruption
	{
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x10A7BBC", Offset = "0x10A7BBC", VA = "0x10A7BBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x10A795C", Offset = "0x10A795C", VA = "0x10A795C")]
	internal AkAudioInterruptionCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x10A799C", Offset = "0x10A799C", VA = "0x10A799C")]
	internal static IntPtr getCPtr(AkAudioInterruptionCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x10A79EC", Offset = "0x10A79EC", VA = "0x10A79EC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x10A7A20", Offset = "0x10A7A20", VA = "0x10A7A20", Slot = "1")]
	~AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x10A7A90", Offset = "0x10A7A90", VA = "0x10A7A90", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x10A7C28", Offset = "0x10A7C28", VA = "0x10A7C28")]
	public AkAudioInterruptionCallbackInfo()
	{
	}
}
[Token(Token = "0x20000CA")]
public class AkAudioSettings : IDisposable
{
	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000077")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x10A8D6C", Offset = "0x10A8D6C", VA = "0x10A8D6C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x10A8CF0", Offset = "0x10A8CF0", VA = "0x10A8CF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public uint uNumSamplesPerSecond
	{
		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x10A8E54", Offset = "0x10A8E54", VA = "0x10A8E54")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x10A8DD8", Offset = "0x10A8DD8", VA = "0x10A8DD8")]
		set
		{
		}
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x10A8A90", Offset = "0x10A8A90", VA = "0x10A8A90")]
	internal AkAudioSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x10A8AD0", Offset = "0x10A8AD0", VA = "0x10A8AD0")]
	internal static IntPtr getCPtr(AkAudioSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x10A8B20", Offset = "0x10A8B20", VA = "0x10A8B20", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x10A8B54", Offset = "0x10A8B54", VA = "0x10A8B54", Slot = "1")]
	~AkAudioSettings()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x10A8BC4", Offset = "0x10A8BC4", VA = "0x10A8BC4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x10A8EC0", Offset = "0x10A8EC0", VA = "0x10A8EC0")]
	public AkAudioSettings()
	{
	}
}
[Token(Token = "0x20000CB")]
public class AkAudioSourceChangeCallbackInfo : IDisposable
{
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000079")]
	public bool bOtherAudioPlaying
	{
		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x10A91A4", Offset = "0x10A91A4", VA = "0x10A91A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x10A8F44", Offset = "0x10A8F44", VA = "0x10A8F44")]
	internal AkAudioSourceChangeCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x10A8F84", Offset = "0x10A8F84", VA = "0x10A8F84")]
	internal static IntPtr getCPtr(AkAudioSourceChangeCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x10A8FD4", Offset = "0x10A8FD4", VA = "0x10A8FD4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x10A9008", Offset = "0x10A9008", VA = "0x10A9008", Slot = "1")]
	~AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x10A9078", Offset = "0x10A9078", VA = "0x10A9078", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x10A9210", Offset = "0x10A9210", VA = "0x10A9210")]
	public AkAudioSourceChangeCallbackInfo()
	{
	}
}
[Token(Token = "0x20000CC")]
public class AkAuxSendValue : IDisposable
{
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700007A")]
	public ulong listenerID
	{
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x10A9E64", Offset = "0x10A9E64", VA = "0x10A9E64")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x10A9DE8", Offset = "0x10A9DE8", VA = "0x10A9DE8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public uint auxBusID
	{
		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x10A9F4C", Offset = "0x10A9F4C", VA = "0x10A9F4C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x10A9ED0", Offset = "0x10A9ED0", VA = "0x10A9ED0")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public float fControlValue
	{
		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x10AA034", Offset = "0x10AA034", VA = "0x10AA034")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x10A9FB8", Offset = "0x10A9FB8", VA = "0x10A9FB8")]
		set
		{
		}
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x10A9464", Offset = "0x10A9464", VA = "0x10A9464")]
	internal AkAuxSendValue(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x10A9BC8", Offset = "0x10A9BC8", VA = "0x10A9BC8")]
	internal static IntPtr getCPtr(AkAuxSendValue obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x10A9C18", Offset = "0x10A9C18", VA = "0x10A9C18", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x10A9C4C", Offset = "0x10A9C4C", VA = "0x10A9C4C", Slot = "1")]
	~AkAuxSendValue()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x10A9CBC", Offset = "0x10A9CBC", VA = "0x10A9CBC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x10AA0A0", Offset = "0x10AA0A0", VA = "0x10AA0A0")]
	public void Set(GameObject listener, uint id, float value)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x10AA174", Offset = "0x10AA174", VA = "0x10AA174")]
	public bool IsSame(GameObject listener, uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x10AA238", Offset = "0x10AA238", VA = "0x10AA238")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x20000CD")]
public class AkBankCallbackInfo : IDisposable
{
	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700007D")]
	public uint bankID
	{
		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x10AA990", Offset = "0x10AA990", VA = "0x10AA990")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700007E")]
	public IntPtr inMemoryBankPtr
	{
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x10AA9FC", Offset = "0x10AA9FC", VA = "0x10AA9FC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700007F")]
	public AKRESULT loadResult
	{
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x10AAA68", Offset = "0x10AAA68", VA = "0x10AAA68")]
		get
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x17000080")]
	public int memPoolId
	{
		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x10AAAD4", Offset = "0x10AAAD4", VA = "0x10AAAD4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x10AA730", Offset = "0x10AA730", VA = "0x10AA730")]
	internal AkBankCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x10AA770", Offset = "0x10AA770", VA = "0x10AA770")]
	internal static IntPtr getCPtr(AkBankCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x10AA7C0", Offset = "0x10AA7C0", VA = "0x10AA7C0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x10AA7F4", Offset = "0x10AA7F4", VA = "0x10AA7F4", Slot = "1")]
	~AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x10AA864", Offset = "0x10AA864", VA = "0x10AA864", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x10AAB40", Offset = "0x10AAB40", VA = "0x10AAB40")]
	public AkBankCallbackInfo()
	{
	}
}
[Token(Token = "0x20000CE")]
public enum AkBankContent
{
	[Token(Token = "0x400058D")]
	AkBankContent_StructureOnly,
	[Token(Token = "0x400058E")]
	AkBankContent_All
}
[Token(Token = "0x20000CF")]
public enum AkBusHierarchyFlags
{
	[Token(Token = "0x4000590")]
	AkBusHierarchy_Primary = 1,
	[Token(Token = "0x4000591")]
	AkBusHierarchy_Secondary = 2,
	[Token(Token = "0x4000592")]
	AkBusHierarchy_IsMaster = 0x80
}
[Token(Token = "0x20000D0")]
public class AkCallbackInfo : IDisposable
{
	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000081")]
	public IntPtr pCookie
	{
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x10AC9F0", Offset = "0x10AC9F0", VA = "0x10AC9F0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000082")]
	public ulong gameObjID
	{
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x10ACA5C", Offset = "0x10ACA5C", VA = "0x10ACA5C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x10AC790", Offset = "0x10AC790", VA = "0x10AC790")]
	internal AkCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x10AC7D0", Offset = "0x10AC7D0", VA = "0x10AC7D0")]
	internal static IntPtr getCPtr(AkCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x10AC820", Offset = "0x10AC820", VA = "0x10AC820", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x10AC854", Offset = "0x10AC854", VA = "0x10AC854", Slot = "1")]
	~AkCallbackInfo()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x10AC8C4", Offset = "0x10AC8C4", VA = "0x10AC8C4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x10ACAC8", Offset = "0x10ACAC8", VA = "0x10ACAC8")]
	public AkCallbackInfo()
	{
	}
}
[Token(Token = "0x20000D1")]
public class AkCallbackSerializer : IDisposable
{
	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x10AF8C8", Offset = "0x10AF8C8", VA = "0x10AF8C8")]
	internal AkCallbackSerializer(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x10AF908", Offset = "0x10AF908", VA = "0x10AF908")]
	internal static IntPtr getCPtr(AkCallbackSerializer obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x10AF958", Offset = "0x10AF958", VA = "0x10AF958", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x10AF98C", Offset = "0x10AF98C", VA = "0x10AF98C", Slot = "1")]
	~AkCallbackSerializer()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x10AF9FC", Offset = "0x10AF9FC", VA = "0x10AF9FC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x10AD518", Offset = "0x10AD518", VA = "0x10AD518")]
	public static AKRESULT Init(IntPtr in_pMemory, uint in_uSize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x10AD66C", Offset = "0x10AD66C", VA = "0x10AD66C")]
	public static void Term()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x10AE444", Offset = "0x10AE444", VA = "0x10AE444")]
	public static IntPtr Lock()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x10AD750", Offset = "0x10AD750", VA = "0x10AD750")]
	public static void SetLocalOutput(uint in_uErrorLevel)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x10AEE5C", Offset = "0x10AEE5C", VA = "0x10AEE5C")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x10AFB28", Offset = "0x10AFB28", VA = "0x10AFB28")]
	public static AKRESULT AudioSourceChangeCallbackFunc(bool in_bOtherAudioPlaying, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x10AFBC0", Offset = "0x10AFBC0", VA = "0x10AFBC0")]
	public AkCallbackSerializer()
	{
	}
}
[Token(Token = "0x20000D2")]
public enum AkCallbackType
{
	[Token(Token = "0x4000598")]
	AK_EndOfEvent = 1,
	[Token(Token = "0x4000599")]
	AK_EndOfDynamicSequenceItem = 2,
	[Token(Token = "0x400059A")]
	AK_Marker = 4,
	[Token(Token = "0x400059B")]
	AK_Duration = 8,
	[Token(Token = "0x400059C")]
	AK_SpeakerVolumeMatrix = 16,
	[Token(Token = "0x400059D")]
	AK_Starvation = 32,
	[Token(Token = "0x400059E")]
	AK_MusicPlaylistSelect = 64,
	[Token(Token = "0x400059F")]
	AK_MusicPlayStarted = 128,
	[Token(Token = "0x40005A0")]
	AK_MusicSyncBeat = 256,
	[Token(Token = "0x40005A1")]
	AK_MusicSyncBar = 512,
	[Token(Token = "0x40005A2")]
	AK_MusicSyncEntry = 1024,
	[Token(Token = "0x40005A3")]
	AK_MusicSyncExit = 2048,
	[Token(Token = "0x40005A4")]
	AK_MusicSyncGrid = 4096,
	[Token(Token = "0x40005A5")]
	AK_MusicSyncUserCue = 8192,
	[Token(Token = "0x40005A6")]
	AK_MusicSyncPoint = 16384,
	[Token(Token = "0x40005A7")]
	AK_MusicSyncAll = 32512,
	[Token(Token = "0x40005A8")]
	AK_MIDIEvent = 65536,
	[Token(Token = "0x40005A9")]
	AK_CallbackBits = 1048575,
	[Token(Token = "0x40005AA")]
	AK_EnableGetSourcePlayPosition = 1048576,
	[Token(Token = "0x40005AB")]
	AK_EnableGetMusicPlayPosition = 2097152,
	[Token(Token = "0x40005AC")]
	AK_EnableGetSourceStreamBuffering = 4194304,
	[Token(Token = "0x40005AD")]
	AK_Monitoring = 536870912,
	[Token(Token = "0x40005AE")]
	AK_AudioSourceChange = 587202560,
	[Token(Token = "0x40005AF")]
	AK_Bank = 1073741824,
	[Token(Token = "0x40005B0")]
	AK_AudioInterruption = 570425344
}
[Token(Token = "0x20000D3")]
public class AkChannelConfig : IDisposable
{
	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000083")]
	public uint uNumChannels
	{
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x10AFE90", Offset = "0x10AFE90", VA = "0x10AFE90")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x10AFE14", Offset = "0x10AFE14", VA = "0x10AFE14")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public uint eConfigType
	{
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x10AFF78", Offset = "0x10AFF78", VA = "0x10AFF78")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x10AFEFC", Offset = "0x10AFEFC", VA = "0x10AFEFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public uint uChannelMask
	{
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x10B0060", Offset = "0x10B0060", VA = "0x10B0060")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x10AFFE4", Offset = "0x10AFFE4", VA = "0x10AFFE4")]
		set
		{
		}
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x10A5A5C", Offset = "0x10A5A5C", VA = "0x10A5A5C")]
	internal AkChannelConfig(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x10A595C", Offset = "0x10A595C", VA = "0x10A595C")]
	internal static IntPtr getCPtr(AkChannelConfig obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x10AFC44", Offset = "0x10AFC44", VA = "0x10AFC44", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x10AFC78", Offset = "0x10AFC78", VA = "0x10AFC78", Slot = "1")]
	~AkChannelConfig()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x10AFCE8", Offset = "0x10AFCE8", VA = "0x10AFCE8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x10B00CC", Offset = "0x10B00CC", VA = "0x10B00CC")]
	public AkChannelConfig()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x10B0150", Offset = "0x10B0150", VA = "0x10B0150")]
	public AkChannelConfig(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x10B01EC", Offset = "0x10B01EC", VA = "0x10B01EC")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x10B0258", Offset = "0x10B0258", VA = "0x10B0258")]
	public void SetStandard(uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x10B02D4", Offset = "0x10B02D4", VA = "0x10B02D4")]
	public void SetStandardOrAnonymous(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x10B0358", Offset = "0x10B0358", VA = "0x10B0358")]
	public void SetAnonymous(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x10B03D4", Offset = "0x10B03D4", VA = "0x10B03D4")]
	public void SetAmbisonic(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x10B0450", Offset = "0x10B0450", VA = "0x10B0450")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x10B04BC", Offset = "0x10B04BC", VA = "0x10B04BC")]
	public uint Serialize()
	{
		return default(uint);
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x10B0528", Offset = "0x10B0528", VA = "0x10B0528")]
	public void Deserialize(uint in_uChannelConfig)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x10B05A4", Offset = "0x10B05A4", VA = "0x10B05A4")]
	public AkChannelConfig RemoveLFE()
	{
		return null;
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x10B0648", Offset = "0x10B0648", VA = "0x10B0648")]
	public AkChannelConfig RemoveCenter()
	{
		return null;
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x10B06EC", Offset = "0x10B06EC", VA = "0x10B06EC")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D4")]
public enum AkChannelConfigType
{
	[Token(Token = "0x40005B4")]
	AK_ChannelConfigType_Anonymous,
	[Token(Token = "0x40005B5")]
	AK_ChannelConfigType_Standard,
	[Token(Token = "0x40005B6")]
	AK_ChannelConfigType_Ambisonic
}
[Token(Token = "0x20000D5")]
public class AkChannelEmitter : IDisposable
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000086")]
	public AkTransform position
	{
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x10B0A48", Offset = "0x10B0A48", VA = "0x10B0A48")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x10B09B8", Offset = "0x10B09B8", VA = "0x10B09B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public uint uInputChannels
	{
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x10B0B74", Offset = "0x10B0B74", VA = "0x10B0B74")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x10B0AF8", Offset = "0x10B0AF8", VA = "0x10B0AF8")]
		set
		{
		}
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x10B0758", Offset = "0x10B0758", VA = "0x10B0758")]
	internal AkChannelEmitter(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x10B0798", Offset = "0x10B0798", VA = "0x10B0798")]
	internal static IntPtr getCPtr(AkChannelEmitter obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x10B07E8", Offset = "0x10B07E8", VA = "0x10B07E8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x10B081C", Offset = "0x10B081C", VA = "0x10B081C", Slot = "1")]
	~AkChannelEmitter()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x10B088C", Offset = "0x10B088C", VA = "0x10B088C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20000D6")]
public enum AkChannelOrdering
{
	[Token(Token = "0x40005BA")]
	ChannelOrdering_Standard,
	[Token(Token = "0x40005BB")]
	ChannelOrdering_RunTime
}
[Token(Token = "0x20000D7")]
public enum AkConnectionType
{
	[Token(Token = "0x40005BD")]
	ConnectionType_Direct,
	[Token(Token = "0x40005BE")]
	ConnectionType_GameDefSend,
	[Token(Token = "0x40005BF")]
	ConnectionType_UserDefSend
}
[Token(Token = "0x20000D8")]
public enum AkCurveInterpolation
{
	[Token(Token = "0x40005C1")]
	AkCurveInterpolation_Log3 = 0,
	[Token(Token = "0x40005C2")]
	AkCurveInterpolation_Sine = 1,
	[Token(Token = "0x40005C3")]
	AkCurveInterpolation_Log1 = 2,
	[Token(Token = "0x40005C4")]
	AkCurveInterpolation_InvSCurve = 3,
	[Token(Token = "0x40005C5")]
	AkCurveInterpolation_Linear = 4,
	[Token(Token = "0x40005C6")]
	AkCurveInterpolation_SCurve = 5,
	[Token(Token = "0x40005C7")]
	AkCurveInterpolation_Exp1 = 6,
	[Token(Token = "0x40005C8")]
	AkCurveInterpolation_SineRecip = 7,
	[Token(Token = "0x40005C9")]
	AkCurveInterpolation_Exp3 = 8,
	[Token(Token = "0x40005CA")]
	AkCurveInterpolation_LastFadeCurve = 8,
	[Token(Token = "0x40005CB")]
	AkCurveInterpolation_Constant = 9
}
[Token(Token = "0x20000D9")]
public class AkDeviceSettings : IDisposable
{
	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000088")]
	public IntPtr pIOMemory
	{
		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x10B2990", Offset = "0x10B2990", VA = "0x10B2990")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x10B2914", Offset = "0x10B2914", VA = "0x10B2914")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public uint uIOMemorySize
	{
		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x10B29FC", Offset = "0x10B29FC", VA = "0x10B29FC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x10B11C0", Offset = "0x10B11C0", VA = "0x10B11C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public uint uIOMemoryAlignment
	{
		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x10B2AE4", Offset = "0x10B2AE4", VA = "0x10B2AE4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x10B2A68", Offset = "0x10B2A68", VA = "0x10B2A68")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public int ePoolAttributes
	{
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x10B2BCC", Offset = "0x10B2BCC", VA = "0x10B2BCC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x10B2B50", Offset = "0x10B2B50", VA = "0x10B2B50")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public uint uGranularity
	{
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x10B2CB4", Offset = "0x10B2CB4", VA = "0x10B2CB4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x10B2C38", Offset = "0x10B2C38", VA = "0x10B2C38")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public uint uSchedulerTypeFlags
	{
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x10B2D9C", Offset = "0x10B2D9C", VA = "0x10B2D9C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x10B2D20", Offset = "0x10B2D20", VA = "0x10B2D20")]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public AkThreadProperties threadProperties
	{
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x10B2E98", Offset = "0x10B2E98", VA = "0x10B2E98")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x10B2E08", Offset = "0x10B2E08", VA = "0x10B2E08")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public float fTargetAutoStmBufferLength
	{
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x10B2F48", Offset = "0x10B2F48", VA = "0x10B2F48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x10B123C", Offset = "0x10B123C", VA = "0x10B123C")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public uint uMaxConcurrentIO
	{
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x10B3030", Offset = "0x10B3030", VA = "0x10B3030")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x10B2FB4", Offset = "0x10B2FB4", VA = "0x10B2FB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public bool bUseStreamCache
	{
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x10B309C", Offset = "0x10B309C", VA = "0x10B309C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x10B12B8", Offset = "0x10B12B8", VA = "0x10B12B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public uint uMaxCachePinnedBytes
	{
		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x10B3108", Offset = "0x10B3108", VA = "0x10B3108")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x10B1334", Offset = "0x10B1334", VA = "0x10B1334")]
		set
		{
		}
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x10B26B4", Offset = "0x10B26B4", VA = "0x10B26B4")]
	internal AkDeviceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x10B26F4", Offset = "0x10B26F4", VA = "0x10B26F4")]
	internal static IntPtr getCPtr(AkDeviceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x10B2744", Offset = "0x10B2744", VA = "0x10B2744", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x10B2778", Offset = "0x10B2778", VA = "0x10B2778", Slot = "1")]
	~AkDeviceSettings()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x10B27E8", Offset = "0x10B27E8", VA = "0x10B27E8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x10B3174", Offset = "0x10B3174", VA = "0x10B3174")]
	public AkDeviceSettings()
	{
	}
}
[Token(Token = "0x20000DA")]
public enum AkDiffractionFlags
{
	[Token(Token = "0x40005CF")]
	DiffractionFlags_UseBuiltInParam = 1,
	[Token(Token = "0x40005D0")]
	DiffractionFlags_UseObstruction = 2,
	[Token(Token = "0x40005D1")]
	DiffractionFlags_CalcEmitterVirtualPosition = 8,
	[Token(Token = "0x40005D2")]
	DefaultDiffractionFlags = 11
}
[Token(Token = "0x20000DB")]
public class AkDiffractionPathInfo : IDisposable
{
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x40005D5")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x17000093")]
	public AkTransform virtualPos
	{
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x10B34E8", Offset = "0x10B34E8", VA = "0x10B34E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x10B3458", Offset = "0x10B3458", VA = "0x10B3458")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public uint nodeCount
	{
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x10B3614", Offset = "0x10B3614", VA = "0x10B3614")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x10B3598", Offset = "0x10B3598", VA = "0x10B3598")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public float diffraction
	{
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x10B36FC", Offset = "0x10B36FC", VA = "0x10B36FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x10B3680", Offset = "0x10B3680", VA = "0x10B3680")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public float totLength
	{
		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x10B37E4", Offset = "0x10B37E4", VA = "0x10B37E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x10B3768", Offset = "0x10B3768", VA = "0x10B3768")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public float obstructionValue
	{
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x10B38CC", Offset = "0x10B38CC", VA = "0x10B38CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x10B3850", Offset = "0x10B3850", VA = "0x10B3850")]
		set
		{
		}
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x10B31F8", Offset = "0x10B31F8", VA = "0x10B31F8")]
	internal AkDiffractionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x10B3238", Offset = "0x10B3238", VA = "0x10B3238")]
	internal static IntPtr getCPtr(AkDiffractionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x10B3288", Offset = "0x10B3288", VA = "0x10B3288", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x10B32BC", Offset = "0x10B32BC", VA = "0x10B32BC", Slot = "1")]
	~AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x10B332C", Offset = "0x10B332C", VA = "0x10B332C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x10B3938", Offset = "0x10B3938", VA = "0x10B3938")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x10B3998", Offset = "0x10B3998", VA = "0x10B3998")]
	public AkVector GetNodes(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x10B3A58", Offset = "0x10B3A58", VA = "0x10B3A58")]
	public float GetAngles(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x10B3AD4", Offset = "0x10B3AD4", VA = "0x10B3AD4")]
	public ulong GetPortals(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x10B3B50", Offset = "0x10B3B50", VA = "0x10B3B50")]
	public ulong GetRooms(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x10B3BCC", Offset = "0x10B3BCC", VA = "0x10B3BCC")]
	public void Clone(AkDiffractionPathInfo other)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x10B3C74", Offset = "0x10B3C74", VA = "0x10B3C74")]
	public AkDiffractionPathInfo()
	{
	}
}
[Token(Token = "0x20000DC")]
public class AkDurationCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000098")]
	public float fDuration
	{
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x10B43E8", Offset = "0x10B43E8", VA = "0x10B43E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000099")]
	public float fEstimatedDuration
	{
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x10B4454", Offset = "0x10B4454", VA = "0x10B4454")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009A")]
	public uint audioNodeID
	{
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x10B44C0", Offset = "0x10B44C0", VA = "0x10B44C0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700009B")]
	public uint mediaID
	{
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x10B452C", Offset = "0x10B452C", VA = "0x10B452C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700009C")]
	public bool bStreaming
	{
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x10B4598", Offset = "0x10B4598", VA = "0x10B4598")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x10AF274", Offset = "0x10AF274", VA = "0x10AF274")]
	internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x10B3F44", Offset = "0x10B3F44", VA = "0x10B3F44")]
	internal static IntPtr getCPtr(AkDurationCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x10B3F94", Offset = "0x10B3F94", VA = "0x10B3F94", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x10B40B0", Offset = "0x10B40B0", VA = "0x10B40B0", Slot = "1")]
	~AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x10B4180", Offset = "0x10B4180", VA = "0x10B4180", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x10B4604", Offset = "0x10B4604", VA = "0x10B4604")]
	public AkDurationCallbackInfo()
	{
	}
}
[Token(Token = "0x20000DD")]
public class AkDynamicSequenceItemCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700009D")]
	public uint playingID
	{
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x10B48F8", Offset = "0x10B48F8", VA = "0x10B48F8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700009E")]
	public uint audioNodeID
	{
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x10B4964", Offset = "0x10B4964", VA = "0x10B4964")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700009F")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x10B49D0", Offset = "0x10B49D0", VA = "0x10B49D0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x10AF1D8", Offset = "0x10AF1D8", VA = "0x10AF1D8")]
	internal AkDynamicSequenceItemCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x10B4678", Offset = "0x10B4678", VA = "0x10B4678")]
	internal static IntPtr getCPtr(AkDynamicSequenceItemCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x10B46C8", Offset = "0x10B46C8", VA = "0x10B46C8", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x10B475C", Offset = "0x10B475C", VA = "0x10B475C", Slot = "1")]
	~AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x10B47C4", Offset = "0x10B47C4", VA = "0x10B47C4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x10B4A3C", Offset = "0x10B4A3C", VA = "0x10B4A3C")]
	public AkDynamicSequenceItemCallbackInfo()
	{
	}
}
[Token(Token = "0x20000DE")]
public enum AkDynamicSequenceType
{
	[Token(Token = "0x40005D9")]
	DynamicSequenceType_SampleAccurate,
	[Token(Token = "0x40005DA")]
	DynamicSequenceType_NormalTransition
}
[Token(Token = "0x20000DF")]
public class AkEmitterSettings : IDisposable
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000A0")]
	public uint reflectAuxBusID
	{
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x10B5188", Offset = "0x10B5188", VA = "0x10B5188")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x10B510C", Offset = "0x10B510C", VA = "0x10B510C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public float reflectionMaxPathLength
	{
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x10B5270", Offset = "0x10B5270", VA = "0x10B5270")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x10B51F4", Offset = "0x10B51F4", VA = "0x10B51F4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public float reflectionsAuxBusGain
	{
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x10B5358", Offset = "0x10B5358", VA = "0x10B5358")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x10B52DC", Offset = "0x10B52DC", VA = "0x10B52DC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public uint reflectionsOrder
	{
		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x10B5440", Offset = "0x10B5440", VA = "0x10B5440")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x10B53C4", Offset = "0x10B53C4", VA = "0x10B53C4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public uint reflectorFilterMask
	{
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x10B5528", Offset = "0x10B5528", VA = "0x10B5528")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x10B54AC", Offset = "0x10B54AC", VA = "0x10B54AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public float roomReverbAuxBusGain
	{
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x10B5610", Offset = "0x10B5610", VA = "0x10B5610")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x10B5594", Offset = "0x10B5594", VA = "0x10B5594")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public uint diffractionMaxEdges
	{
		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x10B56F8", Offset = "0x10B56F8", VA = "0x10B56F8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x10B567C", Offset = "0x10B567C", VA = "0x10B567C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public uint diffractionMaxPaths
	{
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x10B57E0", Offset = "0x10B57E0", VA = "0x10B57E0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x10B5764", Offset = "0x10B5764", VA = "0x10B5764")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public float diffractionMaxPathLength
	{
		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x10B58C8", Offset = "0x10B58C8", VA = "0x10B58C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x10B584C", Offset = "0x10B584C", VA = "0x10B584C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public byte useImageSources
	{
		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x10B59B0", Offset = "0x10B59B0", VA = "0x10B59B0")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x10B5934", Offset = "0x10B5934", VA = "0x10B5934")]
		set
		{
		}
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x10B4E28", Offset = "0x10B4E28", VA = "0x10B4E28")]
	internal AkEmitterSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x10B4E68", Offset = "0x10B4E68", VA = "0x10B4E68")]
	internal static IntPtr getCPtr(AkEmitterSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x10B4EB8", Offset = "0x10B4EB8", VA = "0x10B4EB8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x10B4EEC", Offset = "0x10B4EEC", VA = "0x10B4EEC", Slot = "1")]
	~AkEmitterSettings()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x10B4F5C", Offset = "0x10B4F5C", VA = "0x10B4F5C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x10B5088", Offset = "0x10B5088", VA = "0x10B5088")]
	public AkEmitterSettings()
	{
	}
}
[Token(Token = "0x20000E0")]
public class AkEventCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000AA")]
	public uint playingID
	{
		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x10A6F1C", Offset = "0x10A6F1C", VA = "0x10A6F1C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000AB")]
	public uint eventID
	{
		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x10B66B0", Offset = "0x10B66B0", VA = "0x10B66B0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x10AF13C", Offset = "0x10AF13C", VA = "0x10AF13C")]
	internal AkEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x10B6660", Offset = "0x10B6660", VA = "0x10B6660")]
	internal static IntPtr getCPtr(AkEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x10B401C", Offset = "0x10B401C", VA = "0x10B401C", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x10B4118", Offset = "0x10B4118", VA = "0x10B4118", Slot = "1")]
	~AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x10B42B4", Offset = "0x10B42B4", VA = "0x10B42B4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x10B671C", Offset = "0x10B671C", VA = "0x10B671C")]
	public AkEventCallbackInfo()
	{
	}
}
[Token(Token = "0x20000E1")]
public class AkExternalSourceInfo : IDisposable
{
	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000AC")]
	public uint iExternalSrcCookie
	{
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x10B82F4", Offset = "0x10B82F4", VA = "0x10B82F4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x10B8278", Offset = "0x10B8278", VA = "0x10B8278")]
		set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public uint idCodec
	{
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x10B83DC", Offset = "0x10B83DC", VA = "0x10B83DC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x10B8360", Offset = "0x10B8360", VA = "0x10B8360")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public string szFile
	{
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x10B84C4", Offset = "0x10B84C4", VA = "0x10B84C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x10B8448", Offset = "0x10B8448", VA = "0x10B8448")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public IntPtr pInMemory
	{
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x10B85E0", Offset = "0x10B85E0", VA = "0x10B85E0")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x10B8564", Offset = "0x10B8564", VA = "0x10B8564")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public uint uiMemorySize
	{
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x10B86C8", Offset = "0x10B86C8", VA = "0x10B86C8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x10B864C", Offset = "0x10B864C", VA = "0x10B864C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public uint idFile
	{
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x10B87B0", Offset = "0x10B87B0", VA = "0x10B87B0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x10B8734", Offset = "0x10B8734", VA = "0x10B8734")]
		set
		{
		}
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x10B7C14", Offset = "0x10B7C14", VA = "0x10B7C14")]
	internal AkExternalSourceInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x10B7C54", Offset = "0x10B7C54", VA = "0x10B7C54")]
	internal static IntPtr getCPtr(AkExternalSourceInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x10B7CA4", Offset = "0x10B7CA4", VA = "0x10B7CA4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x10B7CD8", Offset = "0x10B7CD8", VA = "0x10B7CD8", Slot = "1")]
	~AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x10B7D48", Offset = "0x10B7D48", VA = "0x10B7D48", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x10B7E74", Offset = "0x10B7E74", VA = "0x10B7E74")]
	public AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x10B7EF8", Offset = "0x10B7EF8", VA = "0x10B7EF8")]
	public AkExternalSourceInfo(IntPtr in_pInMemory, uint in_uiMemorySize, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x10B7FAC", Offset = "0x10B7FAC", VA = "0x10B7FAC")]
	public AkExternalSourceInfo(string in_pszFileName, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x10B8058", Offset = "0x10B8058", VA = "0x10B8058")]
	public AkExternalSourceInfo(uint in_idFile, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x10B8104", Offset = "0x10B8104", VA = "0x10B8104")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x10B8170", Offset = "0x10B8170", VA = "0x10B8170")]
	public void Clone(AkExternalSourceInfo other)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x10B8218", Offset = "0x10B8218", VA = "0x10B8218")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x20000E2")]
public enum AkFloorPlane
{
	[Token(Token = "0x40005E1")]
	AkFloorPlane_XZ = 0,
	[Token(Token = "0x40005E2")]
	AkFloorPlane_XY = 1,
	[Token(Token = "0x40005E3")]
	AkFloorPlane_YZ = 2,
	[Token(Token = "0x40005E4")]
	AkFloorPlane_Default = 0
}
[Token(Token = "0x20000E3")]
public enum AkGlobalCallbackLocation
{
	[Token(Token = "0x40005E6")]
	AkGlobalCallbackLocation_Register = 1,
	[Token(Token = "0x40005E7")]
	AkGlobalCallbackLocation_Begin = 2,
	[Token(Token = "0x40005E8")]
	AkGlobalCallbackLocation_PreProcessMessageQueueForRender = 4,
	[Token(Token = "0x40005E9")]
	AkGlobalCallbackLocation_PostMessagesProcessed = 8,
	[Token(Token = "0x40005EA")]
	AkGlobalCallbackLocation_BeginRender = 16,
	[Token(Token = "0x40005EB")]
	AkGlobalCallbackLocation_EndRender = 32,
	[Token(Token = "0x40005EC")]
	AkGlobalCallbackLocation_End = 64,
	[Token(Token = "0x40005ED")]
	AkGlobalCallbackLocation_Term = 128,
	[Token(Token = "0x40005EE")]
	AkGlobalCallbackLocation_Monitor = 256,
	[Token(Token = "0x40005EF")]
	AkGlobalCallbackLocation_MonitorRecap = 512,
	[Token(Token = "0x40005F0")]
	AkGlobalCallbackLocation_Num = 10
}
[Token(Token = "0x20000E4")]
public enum AkGroupType
{
	[Token(Token = "0x40005F2")]
	AkGroupType_Switch,
	[Token(Token = "0x40005F3")]
	AkGroupType_State
}
[Token(Token = "0x20000E5")]
public class AkImageSourceParams : IDisposable
{
	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000B2")]
	public AkVector sourcePosition
	{
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x11F9054", Offset = "0x11F9054", VA = "0x11F9054")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x11F8FC4", Offset = "0x11F8FC4", VA = "0x11F8FC4")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public float fDistanceScalingFactor
	{
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x11F9180", Offset = "0x11F9180", VA = "0x11F9180")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x11F9104", Offset = "0x11F9104", VA = "0x11F9104")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public float fLevel
	{
		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x11F9268", Offset = "0x11F9268", VA = "0x11F9268")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x11F91EC", Offset = "0x11F91EC", VA = "0x11F91EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public float fDiffraction
	{
		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x11F9350", Offset = "0x11F9350", VA = "0x11F9350")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x11F92D4", Offset = "0x11F92D4", VA = "0x11F92D4")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public byte uDiffractionEmitterSide
	{
		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x11F9438", Offset = "0x11F9438", VA = "0x11F9438")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x11F93BC", Offset = "0x11F93BC", VA = "0x11F93BC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public byte uDiffractionListenerSide
	{
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x11F9520", Offset = "0x11F9520", VA = "0x11F9520")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x11F94A4", Offset = "0x11F94A4", VA = "0x11F94A4")]
		set
		{
		}
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x11F8C20", Offset = "0x11F8C20", VA = "0x11F8C20")]
	internal AkImageSourceParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x11F8C60", Offset = "0x11F8C60", VA = "0x11F8C60")]
	internal static IntPtr getCPtr(AkImageSourceParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x11F8CB0", Offset = "0x11F8CB0", VA = "0x11F8CB0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x11F8CE4", Offset = "0x11F8CE4", VA = "0x11F8CE4", Slot = "1")]
	~AkImageSourceParams()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x11F8D54", Offset = "0x11F8D54", VA = "0x11F8D54", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x11F8E80", Offset = "0x11F8E80", VA = "0x11F8E80")]
	public AkImageSourceParams()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x11F8F04", Offset = "0x11F8F04", VA = "0x11F8F04")]
	public AkImageSourceParams(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}
}
[Token(Token = "0x20000E6")]
public class AkImageSourceSettings : IDisposable
{
	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000B8")]
	public AkImageSourceParams params_
	{
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x11F9AD0", Offset = "0x11F9AD0", VA = "0x11F9AD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x11F9A28", Offset = "0x11F9A28", VA = "0x11F9A28")]
		set
		{
		}
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x11F958C", Offset = "0x11F958C", VA = "0x11F958C")]
	internal AkImageSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x11F95CC", Offset = "0x11F95CC", VA = "0x11F95CC")]
	internal static IntPtr getCPtr(AkImageSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x11F961C", Offset = "0x11F961C", VA = "0x11F961C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x11F9650", Offset = "0x11F9650", VA = "0x11F9650", Slot = "1")]
	~AkImageSourceSettings()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x11F96C0", Offset = "0x11F96C0", VA = "0x11F96C0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x11F97EC", Offset = "0x11F97EC", VA = "0x11F97EC")]
	public AkImageSourceSettings()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x11F9870", Offset = "0x11F9870", VA = "0x11F9870")]
	public AkImageSourceSettings(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x11F9930", Offset = "0x11F9930", VA = "0x11F9930")]
	public void SetOneTexture(uint in_texture)
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x11F99AC", Offset = "0x11F99AC", VA = "0x11F99AC")]
	public void SetName(string in_pName)
	{
	}
}
[Token(Token = "0x20000E7")]
public class AkInitSettings : IDisposable
{
	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000B9")]
	public uint uMaxNumPaths
	{
		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x11F9E5C", Offset = "0x11F9E5C", VA = "0x11F9E5C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x11F9DE0", Offset = "0x11F9DE0", VA = "0x11F9DE0")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public uint uDefaultPoolSize
	{
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x11F9F44", Offset = "0x11F9F44", VA = "0x11F9F44")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x11F9EC8", Offset = "0x11F9EC8", VA = "0x11F9EC8")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public float fDefaultPoolRatioThreshold
	{
		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x11FA02C", Offset = "0x11FA02C", VA = "0x11FA02C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x11F9FB0", Offset = "0x11F9FB0", VA = "0x11F9FB0")]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public uint uCommandQueueSize
	{
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x11FA114", Offset = "0x11FA114", VA = "0x11FA114")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x11FA098", Offset = "0x11FA098", VA = "0x11FA098")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public int uPrepareEventMemoryPoolID
	{
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x11FA1FC", Offset = "0x11FA1FC", VA = "0x11FA1FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x11FA180", Offset = "0x11FA180", VA = "0x11FA180")]
		set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	public bool bEnableGameSyncPreparation
	{
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x11FA2E4", Offset = "0x11FA2E4", VA = "0x11FA2E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x11FA268", Offset = "0x11FA268", VA = "0x11FA268")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public uint uContinuousPlaybackLookAhead
	{
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x11FA3CC", Offset = "0x11FA3CC", VA = "0x11FA3CC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x11FA350", Offset = "0x11FA350", VA = "0x11FA350")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x11FA4B4", Offset = "0x11FA4B4", VA = "0x11FA4B4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x11FA438", Offset = "0x11FA438", VA = "0x11FA438")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public uint uMonitorPoolSize
	{
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x11FA59C", Offset = "0x11FA59C", VA = "0x11FA59C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x11FA520", Offset = "0x11FA520", VA = "0x11FA520")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public uint uMonitorQueuePoolSize
	{
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x11FA684", Offset = "0x11FA684", VA = "0x11FA684")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x11FA608", Offset = "0x11FA608", VA = "0x11FA608")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public AkOutputSettings settingsMainOutput
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x11FA7E8", Offset = "0x11FA7E8", VA = "0x11FA7E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x11FA6F0", Offset = "0x11FA6F0", VA = "0x11FA6F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public uint uMaxHardwareTimeoutMs
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x11FA954", Offset = "0x11FA954", VA = "0x11FA954")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x11FA8D8", Offset = "0x11FA8D8", VA = "0x11FA8D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public bool bUseSoundBankMgrThread
	{
		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x11FAA3C", Offset = "0x11FAA3C", VA = "0x11FAA3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x11FA9C0", Offset = "0x11FA9C0", VA = "0x11FA9C0")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public bool bUseLEngineThread
	{
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x11FAB24", Offset = "0x11FAB24", VA = "0x11FAB24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x11FAAA8", Offset = "0x11FAAA8", VA = "0x11FAAA8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public string szPluginDLLPath
	{
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x11FAC0C", Offset = "0x11FAC0C", VA = "0x11FAC0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x11FAB90", Offset = "0x11FAB90", VA = "0x11FAB90")]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public AkFloorPlane eFloorPlane
	{
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x11FAD28", Offset = "0x11FAD28", VA = "0x11FAD28")]
		get
		{
			return default(AkFloorPlane);
		}
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x11FACAC", Offset = "0x11FACAC", VA = "0x11FACAC")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public float fDebugOutOfRangeLimit
	{
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x11FAE10", Offset = "0x11FAE10", VA = "0x11FAE10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x11FAD94", Offset = "0x11FAD94", VA = "0x11FAD94")]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public bool bDebugOutOfRangeCheckEnabled
	{
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x11FAEF8", Offset = "0x11FAEF8", VA = "0x11FAEF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x11FAE7C", Offset = "0x11FAE7C", VA = "0x11FAE7C")]
		set
		{
		}
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x11F9B80", Offset = "0x11F9B80", VA = "0x11F9B80")]
	internal AkInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x11F9BC0", Offset = "0x11F9BC0", VA = "0x11F9BC0")]
	internal static IntPtr getCPtr(AkInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x11F9C10", Offset = "0x11F9C10", VA = "0x11F9C10", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x11F9C44", Offset = "0x11F9C44", VA = "0x11F9C44", Slot = "1")]
	~AkInitSettings()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x11F9CB4", Offset = "0x11F9CB4", VA = "0x11F9CB4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x11FAF64", Offset = "0x11FAF64", VA = "0x11FAF64")]
	public AkInitSettings()
	{
	}
}
[Token(Token = "0x20000E8")]
public class AkInitializationSettings : IDisposable
{
	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000CB")]
	public AkMemSettings memSettings
	{
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x11FB3C4", Offset = "0x11FB3C4", VA = "0x11FB3C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x11FB2CC", Offset = "0x11FB2CC", VA = "0x11FB2CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public AkStreamMgrSettings streamMgrSettings
	{
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x11FB544", Offset = "0x11FB544", VA = "0x11FB544")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x11FB4B4", Offset = "0x11FB4B4", VA = "0x11FB4B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public AkDeviceSettings deviceSettings
	{
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x11FB684", Offset = "0x11FB684", VA = "0x11FB684")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x11FB5F4", Offset = "0x11FB5F4", VA = "0x11FB5F4")]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public AkInitSettings initSettings
	{
		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x11FB7DC", Offset = "0x11FB7DC", VA = "0x11FB7DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x11FB734", Offset = "0x11FB734", VA = "0x11FB734")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public AkPlatformInitSettings platformSettings
	{
		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x11FB984", Offset = "0x11FB984", VA = "0x11FB984")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x11FB88C", Offset = "0x11FB88C", VA = "0x11FB88C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public AkMusicSettings musicSettings
	{
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x11FBB6C", Offset = "0x11FBB6C", VA = "0x11FBB6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x11FBA74", Offset = "0x11FBA74", VA = "0x11FBA74")]
		set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public uint preparePoolSize
	{
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x11FBCD8", Offset = "0x11FBCD8", VA = "0x11FBCD8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x11FBC5C", Offset = "0x11FBC5C", VA = "0x11FBC5C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public AkUnityPlatformSpecificSettings unityPlatformSpecificSettings
	{
		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x11FBDD4", Offset = "0x11FBDD4", VA = "0x11FBDD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x11FBD44", Offset = "0x11FBD44", VA = "0x11FBD44")]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public bool useAsyncOpen
	{
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x11FBF00", Offset = "0x11FBF00", VA = "0x11FBF00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x11FBE84", Offset = "0x11FBE84", VA = "0x11FBE84")]
		set
		{
		}
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x11FAFE8", Offset = "0x11FAFE8", VA = "0x11FAFE8")]
	internal AkInitializationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x11FB028", Offset = "0x11FB028", VA = "0x11FB028")]
	internal static IntPtr getCPtr(AkInitializationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x11FB078", Offset = "0x11FB078", VA = "0x11FB078", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x11FB0AC", Offset = "0x11FB0AC", VA = "0x11FB0AC", Slot = "1")]
	~AkInitializationSettings()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x11FB11C", Offset = "0x11FB11C", VA = "0x11FB11C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x11FB248", Offset = "0x11FB248", VA = "0x11FB248")]
	public AkInitializationSettings()
	{
	}
}
[Token(Token = "0x20000E9")]
public class AkIterator : IDisposable
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000D4")]
	public AkPlaylistItem pItem
	{
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x11FC898", Offset = "0x11FC898", VA = "0x11FC898")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x11FC7A0", Offset = "0x11FC7A0", VA = "0x11FC7A0")]
		set
		{
		}
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x11FC540", Offset = "0x11FC540", VA = "0x11FC540")]
	internal AkIterator(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x11FC580", Offset = "0x11FC580", VA = "0x11FC580")]
	internal static IntPtr getCPtr(AkIterator obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x11FC5D0", Offset = "0x11FC5D0", VA = "0x11FC5D0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x11FC604", Offset = "0x11FC604", VA = "0x11FC604", Slot = "1")]
	~AkIterator()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x11FC674", Offset = "0x11FC674", VA = "0x11FC674", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x11FC988", Offset = "0x11FC988", VA = "0x11FC988")]
	public AkIterator NextIter()
	{
		return null;
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x11FCA28", Offset = "0x11FCA28", VA = "0x11FCA28")]
	public AkIterator PrevIter()
	{
		return null;
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x11FCAC8", Offset = "0x11FCAC8", VA = "0x11FCAC8")]
	public AkPlaylistItem GetItem()
	{
		return null;
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x11FCB68", Offset = "0x11FCB68", VA = "0x11FCB68")]
	public bool IsEqualTo(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x11FCC10", Offset = "0x11FCC10", VA = "0x11FCC10")]
	public bool IsDifferentFrom(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x11FCCB8", Offset = "0x11FCCB8", VA = "0x11FCCB8")]
	public AkIterator()
	{
	}
}
[Token(Token = "0x20000EA")]
public enum AkMIDICcTypes
{
	[Token(Token = "0x40005FF")]
	BANK_SELECT_COARSE = 0,
	[Token(Token = "0x4000600")]
	MOD_WHEEL_COARSE = 1,
	[Token(Token = "0x4000601")]
	BREATH_CTRL_COARSE = 2,
	[Token(Token = "0x4000602")]
	CTRL_3_COARSE = 3,
	[Token(Token = "0x4000603")]
	FOOT_PEDAL_COARSE = 4,
	[Token(Token = "0x4000604")]
	PORTAMENTO_COARSE = 5,
	[Token(Token = "0x4000605")]
	DATA_ENTRY_COARSE = 6,
	[Token(Token = "0x4000606")]
	VOLUME_COARSE = 7,
	[Token(Token = "0x4000607")]
	BALANCE_COARSE = 8,
	[Token(Token = "0x4000608")]
	CTRL_9_COARSE = 9,
	[Token(Token = "0x4000609")]
	PAN_POSITION_COARSE = 10,
	[Token(Token = "0x400060A")]
	EXPRESSION_COARSE = 11,
	[Token(Token = "0x400060B")]
	EFFECT_CTRL_1_COARSE = 12,
	[Token(Token = "0x400060C")]
	EFFECT_CTRL_2_COARSE = 13,
	[Token(Token = "0x400060D")]
	CTRL_14_COARSE = 14,
	[Token(Token = "0x400060E")]
	CTRL_15_COARSE = 15,
	[Token(Token = "0x400060F")]
	GEN_SLIDER_1 = 16,
	[Token(Token = "0x4000610")]
	GEN_SLIDER_2 = 17,
	[Token(Token = "0x4000611")]
	GEN_SLIDER_3 = 18,
	[Token(Token = "0x4000612")]
	GEN_SLIDER_4 = 19,
	[Token(Token = "0x4000613")]
	CTRL_20_COARSE = 20,
	[Token(Token = "0x4000614")]
	CTRL_21_COARSE = 21,
	[Token(Token = "0x4000615")]
	CTRL_22_COARSE = 22,
	[Token(Token = "0x4000616")]
	CTRL_23_COARSE = 23,
	[Token(Token = "0x4000617")]
	CTRL_24_COARSE = 24,
	[Token(Token = "0x4000618")]
	CTRL_25_COARSE = 25,
	[Token(Token = "0x4000619")]
	CTRL_26_COARSE = 26,
	[Token(Token = "0x400061A")]
	CTRL_27_COARSE = 27,
	[Token(Token = "0x400061B")]
	CTRL_28_COARSE = 28,
	[Token(Token = "0x400061C")]
	CTRL_29_COARSE = 29,
	[Token(Token = "0x400061D")]
	CTRL_30_COARSE = 30,
	[Token(Token = "0x400061E")]
	CTRL_31_COARSE = 31,
	[Token(Token = "0x400061F")]
	BANK_SELECT_FINE = 32,
	[Token(Token = "0x4000620")]
	MOD_WHEEL_FINE = 33,
	[Token(Token = "0x4000621")]
	BREATH_CTRL_FINE = 34,
	[Token(Token = "0x4000622")]
	CTRL_3_FINE = 35,
	[Token(Token = "0x4000623")]
	FOOT_PEDAL_FINE = 36,
	[Token(Token = "0x4000624")]
	PORTAMENTO_FINE = 37,
	[Token(Token = "0x4000625")]
	DATA_ENTRY_FINE = 38,
	[Token(Token = "0x4000626")]
	VOLUME_FINE = 39,
	[Token(Token = "0x4000627")]
	BALANCE_FINE = 40,
	[Token(Token = "0x4000628")]
	CTRL_9_FINE = 41,
	[Token(Token = "0x4000629")]
	PAN_POSITION_FINE = 42,
	[Token(Token = "0x400062A")]
	EXPRESSION_FINE = 43,
	[Token(Token = "0x400062B")]
	EFFECT_CTRL_1_FINE = 44,
	[Token(Token = "0x400062C")]
	EFFECT_CTRL_2_FINE = 45,
	[Token(Token = "0x400062D")]
	CTRL_14_FINE = 46,
	[Token(Token = "0x400062E")]
	CTRL_15_FINE = 47,
	[Token(Token = "0x400062F")]
	CTRL_20_FINE = 52,
	[Token(Token = "0x4000630")]
	CTRL_21_FINE = 53,
	[Token(Token = "0x4000631")]
	CTRL_22_FINE = 54,
	[Token(Token = "0x4000632")]
	CTRL_23_FINE = 55,
	[Token(Token = "0x4000633")]
	CTRL_24_FINE = 56,
	[Token(Token = "0x4000634")]
	CTRL_25_FINE = 57,
	[Token(Token = "0x4000635")]
	CTRL_26_FINE = 58,
	[Token(Token = "0x4000636")]
	CTRL_27_FINE = 59,
	[Token(Token = "0x4000637")]
	CTRL_28_FINE = 60,
	[Token(Token = "0x4000638")]
	CTRL_29_FINE = 61,
	[Token(Token = "0x4000639")]
	CTRL_30_FINE = 62,
	[Token(Token = "0x400063A")]
	CTRL_31_FINE = 63,
	[Token(Token = "0x400063B")]
	HOLD_PEDAL = 64,
	[Token(Token = "0x400063C")]
	PORTAMENTO_ON_OFF = 65,
	[Token(Token = "0x400063D")]
	SUSTENUTO_PEDAL = 66,
	[Token(Token = "0x400063E")]
	SOFT_PEDAL = 67,
	[Token(Token = "0x400063F")]
	LEGATO_PEDAL = 68,
	[Token(Token = "0x4000640")]
	HOLD_PEDAL_2 = 69,
	[Token(Token = "0x4000641")]
	SOUND_VARIATION = 70,
	[Token(Token = "0x4000642")]
	SOUND_TIMBRE = 71,
	[Token(Token = "0x4000643")]
	SOUND_RELEASE_TIME = 72,
	[Token(Token = "0x4000644")]
	SOUND_ATTACK_TIME = 73,
	[Token(Token = "0x4000645")]
	SOUND_BRIGHTNESS = 74,
	[Token(Token = "0x4000646")]
	SOUND_CTRL_6 = 75,
	[Token(Token = "0x4000647")]
	SOUND_CTRL_7 = 76,
	[Token(Token = "0x4000648")]
	SOUND_CTRL_8 = 77,
	[Token(Token = "0x4000649")]
	SOUND_CTRL_9 = 78,
	[Token(Token = "0x400064A")]
	SOUND_CTRL_10 = 79,
	[Token(Token = "0x400064B")]
	GENERAL_BUTTON_1 = 80,
	[Token(Token = "0x400064C")]
	GENERAL_BUTTON_2 = 81,
	[Token(Token = "0x400064D")]
	GENERAL_BUTTON_3 = 82,
	[Token(Token = "0x400064E")]
	GENERAL_BUTTON_4 = 83,
	[Token(Token = "0x400064F")]
	REVERB_LEVEL = 91,
	[Token(Token = "0x4000650")]
	TREMOLO_LEVEL = 92,
	[Token(Token = "0x4000651")]
	CHORUS_LEVEL = 93,
	[Token(Token = "0x4000652")]
	CELESTE_LEVEL = 94,
	[Token(Token = "0x4000653")]
	PHASER_LEVEL = 95,
	[Token(Token = "0x4000654")]
	DATA_BUTTON_P1 = 96,
	[Token(Token = "0x4000655")]
	DATA_BUTTON_M1 = 97,
	[Token(Token = "0x4000656")]
	NON_REGISTER_COARSE = 98,
	[Token(Token = "0x4000657")]
	NON_REGISTER_FINE = 99,
	[Token(Token = "0x4000658")]
	ALL_SOUND_OFF = 120,
	[Token(Token = "0x4000659")]
	ALL_CONTROLLERS_OFF = 121,
	[Token(Token = "0x400065A")]
	LOCAL_KEYBOARD = 122,
	[Token(Token = "0x400065B")]
	ALL_NOTES_OFF = 123,
	[Token(Token = "0x400065C")]
	OMNI_MODE_OFF = 124,
	[Token(Token = "0x400065D")]
	OMNI_MODE_ON = 125,
	[Token(Token = "0x400065E")]
	OMNI_MONOPHONIC_ON = 126,
	[Token(Token = "0x400065F")]
	OMNI_POLYPHONIC_ON = 127
}
[Token(Token = "0x20000EB")]
public class AkMIDIEvent : IDisposable
{
	[Token(Token = "0x200023D")]
	public class tGen : IDisposable
	{
		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000285")]
		public byte byParam1
		{
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0x11FFACC", Offset = "0x11FFACC", VA = "0x11FFACC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x11FFA50", Offset = "0x11FFA50", VA = "0x11FFA50")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public byte byParam2
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x11FFBB4", Offset = "0x11FFBB4", VA = "0x11FFBB4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0x11FFB38", Offset = "0x11FFB38", VA = "0x11FFB38")]
			set
			{
			}
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x11FDAF4", Offset = "0x11FDAF4", VA = "0x11FDAF4")]
		internal tGen(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x11FD9F4", Offset = "0x11FD9F4", VA = "0x11FD9F4")]
		internal static IntPtr getCPtr(tGen obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x11FF880", Offset = "0x11FF880", VA = "0x11FF880", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x11FF8B4", Offset = "0x11FF8B4", VA = "0x11FF8B4", Slot = "1")]
		~tGen()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x11FF924", Offset = "0x11FF924", VA = "0x11FF924", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x11FFC20", Offset = "0x11FFC20", VA = "0x11FFC20")]
		public tGen()
		{
		}
	}

	[Token(Token = "0x200023E")]
	public class tNoteOnOff : IDisposable
	{
		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000287")]
		public byte byNote
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x1200314", Offset = "0x1200314", VA = "0x1200314")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x1200298", Offset = "0x1200298", VA = "0x1200298")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public byte byVelocity
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0x12003FC", Offset = "0x12003FC", VA = "0x12003FC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x1200380", Offset = "0x1200380", VA = "0x1200380")]
			set
			{
			}
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x11FDEC4", Offset = "0x11FDEC4", VA = "0x11FDEC4")]
		internal tNoteOnOff(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x11FDDC4", Offset = "0x11FDDC4", VA = "0x11FDDC4")]
		internal static IntPtr getCPtr(tNoteOnOff obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x12000C8", Offset = "0x12000C8", VA = "0x12000C8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x12000FC", Offset = "0x12000FC", VA = "0x12000FC", Slot = "1")]
		~tNoteOnOff()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x120016C", Offset = "0x120016C", VA = "0x120016C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x1200468", Offset = "0x1200468", VA = "0x1200468")]
		public tNoteOnOff()
		{
		}
	}

	[Token(Token = "0x200023F")]
	public class tCc : IDisposable
	{
		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000289")]
		public byte byCc
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x11FF36C", Offset = "0x11FF36C", VA = "0x11FF36C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x11FF2F0", Offset = "0x11FF2F0", VA = "0x11FF2F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public byte byValue
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0x11FF454", Offset = "0x11FF454", VA = "0x11FF454")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x11FF3D8", Offset = "0x11FF3D8", VA = "0x11FF3D8")]
			set
			{
			}
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x11FDCDC", Offset = "0x11FDCDC", VA = "0x11FDCDC")]
		internal tCc(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x11FDBDC", Offset = "0x11FDBDC", VA = "0x11FDBDC")]
		internal static IntPtr getCPtr(tCc obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x11FF120", Offset = "0x11FF120", VA = "0x11FF120", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x11FF154", Offset = "0x11FF154", VA = "0x11FF154", Slot = "1")]
		~tCc()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x11FF1C4", Offset = "0x11FF1C4", VA = "0x11FF1C4", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x11FF4C0", Offset = "0x11FF4C0", VA = "0x11FF4C0")]
		public tCc()
		{
		}
	}

	[Token(Token = "0x2000240")]
	public class tPitchBend : IDisposable
	{
		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700028B")]
		public byte byValueLsb
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0x1200738", Offset = "0x1200738", VA = "0x1200738")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0x12006BC", Offset = "0x12006BC", VA = "0x12006BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public byte byValueMsb
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0x1200820", Offset = "0x1200820", VA = "0x1200820")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x12007A4", Offset = "0x12007A4", VA = "0x12007A4")]
			set
			{
			}
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x11FE0AC", Offset = "0x11FE0AC", VA = "0x11FE0AC")]
		internal tPitchBend(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x11FDFAC", Offset = "0x11FDFAC", VA = "0x11FDFAC")]
		internal static IntPtr getCPtr(tPitchBend obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x12004EC", Offset = "0x12004EC", VA = "0x12004EC", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x1200520", Offset = "0x1200520", VA = "0x1200520", Slot = "1")]
		~tPitchBend()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x1200590", Offset = "0x1200590", VA = "0x1200590", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x120088C", Offset = "0x120088C", VA = "0x120088C")]
		public tPitchBend()
		{
		}
	}

	[Token(Token = "0x2000241")]
	public class tNoteAftertouch : IDisposable
	{
		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700028D")]
		public byte byNote
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x11FFEF0", Offset = "0x11FFEF0", VA = "0x11FFEF0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x11FFE74", Offset = "0x11FFE74", VA = "0x11FFE74")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public byte byValue
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x11FFFD8", Offset = "0x11FFFD8", VA = "0x11FFFD8")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x11FFF5C", Offset = "0x11FFF5C", VA = "0x11FFF5C")]
			set
			{
			}
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x11FE294", Offset = "0x11FE294", VA = "0x11FE294")]
		internal tNoteAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x11FE194", Offset = "0x11FE194", VA = "0x11FE194")]
		internal static IntPtr getCPtr(tNoteAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x11FFCA4", Offset = "0x11FFCA4", VA = "0x11FFCA4", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x11FFCD8", Offset = "0x11FFCD8", VA = "0x11FFCD8", Slot = "1")]
		~tNoteAftertouch()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x11FFD48", Offset = "0x11FFD48", VA = "0x11FFD48", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x1200044", Offset = "0x1200044", VA = "0x1200044")]
		public tNoteAftertouch()
		{
		}
	}

	[Token(Token = "0x2000242")]
	public class tChanAftertouch : IDisposable
	{
		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700028F")]
		public byte byValue
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x11FF790", Offset = "0x11FF790", VA = "0x11FF790")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x11FF714", Offset = "0x11FF714", VA = "0x11FF714")]
			set
			{
			}
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x11FE47C", Offset = "0x11FE47C", VA = "0x11FE47C")]
		internal tChanAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x11FE37C", Offset = "0x11FE37C", VA = "0x11FE37C")]
		internal static IntPtr getCPtr(tChanAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x11FF544", Offset = "0x11FF544", VA = "0x11FF544", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x11FF578", Offset = "0x11FF578", VA = "0x11FF578", Slot = "1")]
		~tChanAftertouch()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x11FF5E8", Offset = "0x11FF5E8", VA = "0x11FF5E8", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x11FF7FC", Offset = "0x11FF7FC", VA = "0x11FF7FC")]
		public tChanAftertouch()
		{
		}
	}

	[Token(Token = "0x2000243")]
	public class tProgramChange : IDisposable
	{
		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000290")]
		public byte byProgramNum
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x1200B5C", Offset = "0x1200B5C", VA = "0x1200B5C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x1200AE0", Offset = "0x1200AE0", VA = "0x1200AE0")]
			set
			{
			}
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x11FE664", Offset = "0x11FE664", VA = "0x11FE664")]
		internal tProgramChange(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x11FE564", Offset = "0x11FE564", VA = "0x11FE564")]
		internal static IntPtr getCPtr(tProgramChange obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x1200910", Offset = "0x1200910", VA = "0x1200910", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x1200944", Offset = "0x1200944", VA = "0x1200944", Slot = "1")]
		~tProgramChange()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x12009B4", Offset = "0x12009B4", VA = "0x12009B4", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x1200BC8", Offset = "0x1200BC8", VA = "0x1200BC8")]
		public tProgramChange()
		{
		}
	}

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000D5")]
	public byte byChan
	{
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x11FD8E0", Offset = "0x11FD8E0", VA = "0x11FD8E0")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x11FD864", Offset = "0x11FD864", VA = "0x11FD864")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public tGen Gen
	{
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x11FDA44", Offset = "0x11FDA44", VA = "0x11FDA44")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x11FD94C", Offset = "0x11FD94C", VA = "0x11FD94C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public tCc Cc
	{
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x11FDC2C", Offset = "0x11FDC2C", VA = "0x11FDC2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x11FDB34", Offset = "0x11FDB34", VA = "0x11FDB34")]
		set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public tNoteOnOff NoteOnOff
	{
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x11FDE14", Offset = "0x11FDE14", VA = "0x11FDE14")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x11FDD1C", Offset = "0x11FDD1C", VA = "0x11FDD1C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public tPitchBend PitchBend
	{
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x11FDFFC", Offset = "0x11FDFFC", VA = "0x11FDFFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x11FDF04", Offset = "0x11FDF04", VA = "0x11FDF04")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public tNoteAftertouch NoteAftertouch
	{
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x11FE1E4", Offset = "0x11FE1E4", VA = "0x11FE1E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x11FE0EC", Offset = "0x11FE0EC", VA = "0x11FE0EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public tChanAftertouch ChanAftertouch
	{
		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x11FE3CC", Offset = "0x11FE3CC", VA = "0x11FE3CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x11FE2D4", Offset = "0x11FE2D4", VA = "0x11FE2D4")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public tProgramChange ProgramChange
	{
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x11FE5B4", Offset = "0x11FE5B4", VA = "0x11FE5B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x11FE4BC", Offset = "0x11FE4BC", VA = "0x11FE4BC")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x11FE720", Offset = "0x11FE720", VA = "0x11FE720")]
		get
		{
			return default(AkMIDIEventTypes);
		}
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x11FE6A4", Offset = "0x11FE6A4", VA = "0x11FE6A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x11FE808", Offset = "0x11FE808", VA = "0x11FE808")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x11FE78C", Offset = "0x11FE78C", VA = "0x11FE78C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public byte byVelocity
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x11FE8F0", Offset = "0x11FE8F0", VA = "0x11FE8F0")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x11FE874", Offset = "0x11FE874", VA = "0x11FE874")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x11FE9D8", Offset = "0x11FE9D8", VA = "0x11FE9D8")]
		get
		{
			return default(AkMIDICcTypes);
		}
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x11FE95C", Offset = "0x11FE95C", VA = "0x11FE95C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public byte byCcValue
	{
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x11FEAC0", Offset = "0x11FEAC0", VA = "0x11FEAC0")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x11FEA44", Offset = "0x11FEA44", VA = "0x11FEA44")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public byte byValueLsb
	{
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x11FEBA8", Offset = "0x11FEBA8", VA = "0x11FEBA8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x11FEB2C", Offset = "0x11FEB2C", VA = "0x11FEB2C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public byte byValueMsb
	{
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x11FEC90", Offset = "0x11FEC90", VA = "0x11FEC90")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x11FEC14", Offset = "0x11FEC14", VA = "0x11FEC14")]
		set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x11FED78", Offset = "0x11FED78", VA = "0x11FED78")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x11FECFC", Offset = "0x11FECFC", VA = "0x11FECFC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x11FEE60", Offset = "0x11FEE60", VA = "0x11FEE60")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x11FEDE4", Offset = "0x11FEDE4", VA = "0x11FEDE4")]
		set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x11FEF48", Offset = "0x11FEF48", VA = "0x11FEF48")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x11FEECC", Offset = "0x11FEECC", VA = "0x11FEECC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public byte byProgramNum
	{
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x11FF030", Offset = "0x11FF030", VA = "0x11FF030")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x11FEFB4", Offset = "0x11FEFB4", VA = "0x11FEFB4")]
		set
		{
		}
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x11FD604", Offset = "0x11FD604", VA = "0x11FD604")]
	internal AkMIDIEvent(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x11FD644", Offset = "0x11FD644", VA = "0x11FD644")]
	internal static IntPtr getCPtr(AkMIDIEvent obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x11FD694", Offset = "0x11FD694", VA = "0x11FD694", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x11FD6C8", Offset = "0x11FD6C8", VA = "0x11FD6C8", Slot = "1")]
	~AkMIDIEvent()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x11FD738", Offset = "0x11FD738", VA = "0x11FD738", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x11FF09C", Offset = "0x11FF09C", VA = "0x11FF09C")]
	public AkMIDIEvent()
	{
	}
}
[Token(Token = "0x20000EC")]
public class AkMIDIEventCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000E8")]
	public byte byChan
	{
		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1200F64", Offset = "0x1200F64", VA = "0x1200F64")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000E9")]
	public byte byParam1
	{
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1200FD0", Offset = "0x1200FD0", VA = "0x1200FD0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000EA")]
	public byte byParam2
	{
		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x120103C", Offset = "0x120103C", VA = "0x120103C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000EB")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x12010A8", Offset = "0x12010A8", VA = "0x12010A8")]
		get
		{
			return default(AkMIDIEventTypes);
		}
	}

	[Token(Token = "0x170000EC")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1201114", Offset = "0x1201114", VA = "0x1201114")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000ED")]
	public byte byVelocity
	{
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x1201180", Offset = "0x1201180", VA = "0x1201180")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000EE")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x12011EC", Offset = "0x12011EC", VA = "0x12011EC")]
		get
		{
			return default(AkMIDICcTypes);
		}
	}

	[Token(Token = "0x170000EF")]
	public byte byCcValue
	{
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x1201258", Offset = "0x1201258", VA = "0x1201258")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F0")]
	public byte byValueLsb
	{
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x12012C4", Offset = "0x12012C4", VA = "0x12012C4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F1")]
	public byte byValueMsb
	{
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x1201330", Offset = "0x1201330", VA = "0x1201330")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F2")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x120139C", Offset = "0x120139C", VA = "0x120139C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F3")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x1201408", Offset = "0x1201408", VA = "0x1201408")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F4")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1201474", Offset = "0x1201474", VA = "0x1201474")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F5")]
	public byte byProgramNum
	{
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x12014E0", Offset = "0x12014E0", VA = "0x12014E0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x1200C4C", Offset = "0x1200C4C", VA = "0x1200C4C")]
	internal AkMIDIEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x1200CE0", Offset = "0x1200CE0", VA = "0x1200CE0")]
	internal static IntPtr getCPtr(AkMIDIEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x1200D30", Offset = "0x1200D30", VA = "0x1200D30", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x1200DBC", Offset = "0x1200DBC", VA = "0x1200DBC", Slot = "1")]
	~AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x1200E2C", Offset = "0x1200E2C", VA = "0x1200E2C", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x120154C", Offset = "0x120154C", VA = "0x120154C")]
	public AkMIDIEventCallbackInfo()
	{
	}
}
[Token(Token = "0x20000ED")]
public enum AkMIDIEventTypes
{
	[Token(Token = "0x4000664")]
	NOTE_OFF = 128,
	[Token(Token = "0x4000665")]
	NOTE_ON = 144,
	[Token(Token = "0x4000666")]
	NOTE_AFTERTOUCH = 160,
	[Token(Token = "0x4000667")]
	CONTROLLER = 176,
	[Token(Token = "0x4000668")]
	PROGRAM_CHANGE = 192,
	[Token(Token = "0x4000669")]
	CHANNEL_AFTERTOUCH = 208,
	[Token(Token = "0x400066A")]
	PITCH_BEND = 224,
	[Token(Token = "0x400066B")]
	SYSEX = 240,
	[Token(Token = "0x400066C")]
	ESCAPE = 247,
	[Token(Token = "0x400066D")]
	META = 255
}
[Token(Token = "0x20000EE")]
public class AkMIDIPost : AkMIDIEvent
{
	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000F6")]
	public uint uOffset
	{
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x1201958", Offset = "0x1201958", VA = "0x1201958")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x12018DC", Offset = "0x12018DC", VA = "0x12018DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x12015C0", Offset = "0x12015C0", VA = "0x12015C0")]
	internal AkMIDIPost(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x120165C", Offset = "0x120165C", VA = "0x120165C")]
	internal static IntPtr getCPtr(AkMIDIPost obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x12016AC", Offset = "0x12016AC", VA = "0x12016AC", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x1201740", Offset = "0x1201740", VA = "0x1201740", Slot = "1")]
	~AkMIDIPost()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x12017A8", Offset = "0x12017A8", VA = "0x12017A8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x12019C4", Offset = "0x12019C4", VA = "0x12019C4")]
	public AKRESULT PostOnEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x1201A98", Offset = "0x1201A98", VA = "0x1201A98")]
	public void Clone(AkMIDIPost other)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x1201B40", Offset = "0x1201B40", VA = "0x1201B40")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x1201BA0", Offset = "0x1201BA0", VA = "0x1201BA0")]
	public AkMIDIPost()
	{
	}
}
[Token(Token = "0x20000EF")]
public class AkMarkerCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000F7")]
	public uint uIdentifier
	{
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x12024D8", Offset = "0x12024D8", VA = "0x12024D8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000F8")]
	public uint uPosition
	{
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x1202544", Offset = "0x1202544", VA = "0x1202544")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000F9")]
	public string strLabel
	{
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x12025B0", Offset = "0x12025B0", VA = "0x12025B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x12021C0", Offset = "0x12021C0", VA = "0x12021C0")]
	internal AkMarkerCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1202254", Offset = "0x1202254", VA = "0x1202254")]
	internal static IntPtr getCPtr(AkMarkerCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x12022A4", Offset = "0x12022A4", VA = "0x12022A4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x1202330", Offset = "0x1202330", VA = "0x1202330", Slot = "1")]
	~AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x12023A0", Offset = "0x12023A0", VA = "0x12023A0", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x1202650", Offset = "0x1202650", VA = "0x1202650")]
	public AkMarkerCallbackInfo()
	{
	}
}
[Token(Token = "0x20000F0")]
public class AkMemSettings : IDisposable
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000FA")]
	public uint uMaxNumPools
	{
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x12031A4", Offset = "0x12031A4", VA = "0x12031A4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x1203128", Offset = "0x1203128", VA = "0x1203128")]
		set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public uint uDebugFlags
	{
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x120328C", Offset = "0x120328C", VA = "0x120328C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x1203210", Offset = "0x1203210", VA = "0x1203210")]
		set
		{
		}
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x11FB474", Offset = "0x11FB474", VA = "0x11FB474")]
	internal AkMemSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x11FB374", Offset = "0x11FB374", VA = "0x11FB374")]
	internal static IntPtr getCPtr(AkMemSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x1202ED4", Offset = "0x1202ED4", VA = "0x1202ED4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x1202F08", Offset = "0x1202F08", VA = "0x1202F08", Slot = "1")]
	~AkMemSettings()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x1202F78", Offset = "0x1202F78", VA = "0x1202F78", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x12030A4", Offset = "0x12030A4", VA = "0x12030A4")]
	public AkMemSettings()
	{
	}
}
[Token(Token = "0x20000F1")]
public enum AkMeteringFlags
{
	[Token(Token = "0x4000673")]
	AK_NoMetering = 0,
	[Token(Token = "0x4000674")]
	AK_EnableBusMeter_Peak = 1,
	[Token(Token = "0x4000675")]
	AK_EnableBusMeter_TruePeak = 2,
	[Token(Token = "0x4000676")]
	AK_EnableBusMeter_RMS = 4,
	[Token(Token = "0x4000677")]
	AK_EnableBusMeter_KPower = 0x10,
	[Token(Token = "0x4000678")]
	AK_EnableBusMeter_3DMeter = 0x20
}
[Token(Token = "0x20000F2")]
public enum AkMonitorErrorCode
{
	[Token(Token = "0x400067A")]
	ErrorCode_NoError,
	[Token(Token = "0x400067B")]
	ErrorCode_FileNotFound,
	[Token(Token = "0x400067C")]
	ErrorCode_CannotOpenFile,
	[Token(Token = "0x400067D")]
	ErrorCode_CannotStartStreamNoMemory,
	[Token(Token = "0x400067E")]
	ErrorCode_IODevice,
	[Token(Token = "0x400067F")]
	ErrorCode_IncompatibleIOSettings,
	[Token(Token = "0x4000680")]
	ErrorCode_PluginUnsupportedChannelConfiguration,
	[Token(Token = "0x4000681")]
	ErrorCode_PluginMediaUnavailable,
	[Token(Token = "0x4000682")]
	ErrorCode_PluginInitialisationFailed,
	[Token(Token = "0x4000683")]
	ErrorCode_PluginProcessingFailed,
	[Token(Token = "0x4000684")]
	ErrorCode_PluginExecutionInvalid,
	[Token(Token = "0x4000685")]
	ErrorCode_PluginAllocationFailed,
	[Token(Token = "0x4000686")]
	ErrorCode_VorbisRequireSeekTable,
	[Token(Token = "0x4000687")]
	ErrorCode_VorbisDecodeError,
	[Token(Token = "0x4000688")]
	ErrorCode_AACDecodeError,
	[Token(Token = "0x4000689")]
	ErrorCode_xWMACreateDecoderFailed,
	[Token(Token = "0x400068A")]
	ErrorCode_ATRAC9CreateDecoderFailed,
	[Token(Token = "0x400068B")]
	ErrorCode_ATRAC9CreateDecoderFailedChShortage,
	[Token(Token = "0x400068C")]
	ErrorCode_ATRAC9DecodeFailed,
	[Token(Token = "0x400068D")]
	ErrorCode_ATRAC9ClearContextFailed,
	[Token(Token = "0x400068E")]
	ErrorCode_ATRAC9LoopSectionTooSmall,
	[Token(Token = "0x400068F")]
	ErrorCode_InvalidAudioFileHeader,
	[Token(Token = "0x4000690")]
	ErrorCode_AudioFileHeaderTooLarge,
	[Token(Token = "0x4000691")]
	ErrorCode_FileTooSmall,
	[Token(Token = "0x4000692")]
	ErrorCode_TransitionNotAccurateChannel,
	[Token(Token = "0x4000693")]
	ErrorCode_TransitionNotAccurateStarvation,
	[Token(Token = "0x4000694")]
	ErrorCode_NothingToPlay,
	[Token(Token = "0x4000695")]
	ErrorCode_PlayFailed,
	[Token(Token = "0x4000696")]
	ErrorCode_StingerCouldNotBeScheduled,
	[Token(Token = "0x4000697")]
	ErrorCode_TooLongSegmentLookAhead,
	[Token(Token = "0x4000698")]
	ErrorCode_CannotScheduleMusicSwitch,
	[Token(Token = "0x4000699")]
	ErrorCode_TooManySimultaneousMusicSegments,
	[Token(Token = "0x400069A")]
	ErrorCode_PlaylistStoppedForEditing,
	[Token(Token = "0x400069B")]
	ErrorCode_MusicClipsRescheduledAfterTrackEdit,
	[Token(Token = "0x400069C")]
	ErrorCode_CannotPlaySource_Create,
	[Token(Token = "0x400069D")]
	ErrorCode_CannotPlaySource_VirtualOff,
	[Token(Token = "0x400069E")]
	ErrorCode_CannotPlaySource_TimeSkip,
	[Token(Token = "0x400069F")]
	ErrorCode_CannotPlaySource_InconsistentState,
	[Token(Token = "0x40006A0")]
	ErrorCode_MediaNotLoaded,
	[Token(Token = "0x40006A1")]
	ErrorCode_VoiceStarving,
	[Token(Token = "0x40006A2")]
	ErrorCode_StreamingSourceStarving,
	[Token(Token = "0x40006A3")]
	ErrorCode_XMADecoderSourceStarving,
	[Token(Token = "0x40006A4")]
	ErrorCode_XMADecodingError,
	[Token(Token = "0x40006A5")]
	ErrorCode_InvalidXMAData,
	[Token(Token = "0x40006A6")]
	ErrorCode_PluginNotRegistered,
	[Token(Token = "0x40006A7")]
	ErrorCode_CodecNotRegistered,
	[Token(Token = "0x40006A8")]
	ErrorCode_PluginVersionMismatch,
	[Token(Token = "0x40006A9")]
	ErrorCode_EventIDNotFound,
	[Token(Token = "0x40006AA")]
	ErrorCode_InvalidGroupID,
	[Token(Token = "0x40006AB")]
	ErrorCode_SelectedChildNotAvailable,
	[Token(Token = "0x40006AC")]
	ErrorCode_SelectedNodeNotAvailable,
	[Token(Token = "0x40006AD")]
	ErrorCode_SelectedMediaNotAvailable,
	[Token(Token = "0x40006AE")]
	ErrorCode_NoValidSwitch,
	[Token(Token = "0x40006AF")]
	ErrorCode_SelectedNodeNotAvailablePlay,
	[Token(Token = "0x40006B0")]
	ErrorCode_FeedbackVoiceStarving,
	[Token(Token = "0x40006B1")]
	ErrorCode_BankLoadFailed,
	[Token(Token = "0x40006B2")]
	ErrorCode_BankUnloadFailed,
	[Token(Token = "0x40006B3")]
	ErrorCode_ErrorWhileLoadingBank,
	[Token(Token = "0x40006B4")]
	ErrorCode_InsufficientSpaceToLoadBank,
	[Token(Token = "0x40006B5")]
	ErrorCode_LowerEngineCommandListFull,
	[Token(Token = "0x40006B6")]
	ErrorCode_SeekNoMarker,
	[Token(Token = "0x40006B7")]
	ErrorCode_CannotSeekContinuous,
	[Token(Token = "0x40006B8")]
	ErrorCode_SeekAfterEof,
	[Token(Token = "0x40006B9")]
	ErrorCode_UnknownGameObject,
	[Token(Token = "0x40006BA")]
	ErrorCode_UnknownEmitter,
	[Token(Token = "0x40006BB")]
	ErrorCode_UnknownListener,
	[Token(Token = "0x40006BC")]
	ErrorCode_GameObjectIsNotListener,
	[Token(Token = "0x40006BD")]
	ErrorCode_GameObjectIsNotEmitter,
	[Token(Token = "0x40006BE")]
	ErrorCode_UnknownGameObjectEvent,
	[Token(Token = "0x40006BF")]
	ErrorCode_GameObjectIsNotEmitterEvent,
	[Token(Token = "0x40006C0")]
	ErrorCode_ExternalSourceNotResolved,
	[Token(Token = "0x40006C1")]
	ErrorCode_FileFormatMismatch,
	[Token(Token = "0x40006C2")]
	ErrorCode_CommandQueueFull,
	[Token(Token = "0x40006C3")]
	ErrorCode_CommandTooLarge,
	[Token(Token = "0x40006C4")]
	ErrorCode_XMACreateDecoderLimitReached,
	[Token(Token = "0x40006C5")]
	ErrorCode_XMAStreamBufferTooSmall,
	[Token(Token = "0x40006C6")]
	ErrorCode_ModulatorScopeError_Inst,
	[Token(Token = "0x40006C7")]
	ErrorCode_ModulatorScopeError_Obj,
	[Token(Token = "0x40006C8")]
	ErrorCode_SeekAfterEndOfPlaylist,
	[Token(Token = "0x40006C9")]
	ErrorCode_OpusRequireSeekTable,
	[Token(Token = "0x40006CA")]
	ErrorCode_OpusDecodeError,
	[Token(Token = "0x40006CB")]
	ErrorCode_OpusCreateDecoderFailed,
	[Token(Token = "0x40006CC")]
	ErrorCode_SourcePluginNotFound,
	[Token(Token = "0x40006CD")]
	ErrorCode_VirtualVoiceLimit,
	[Token(Token = "0x40006CE")]
	ErrorCode_AudioDeviceShareSetNotFound,
	[Token(Token = "0x40006CF")]
	ErrorCode_NotEnoughMemoryToStart,
	[Token(Token = "0x40006D0")]
	ErrorCode_UnkownOpusError,
	[Token(Token = "0x40006D1")]
	ErrorCode_AudioDeviceInitFailure,
	[Token(Token = "0x40006D2")]
	ErrorCode_AudioDeviceRemoveFailure,
	[Token(Token = "0x40006D3")]
	ErrorCode_AudioDeviceNotFound,
	[Token(Token = "0x40006D4")]
	ErrorCode_AudioDeviceNotValid,
	[Token(Token = "0x40006D5")]
	ErrorCode_MediaDuplicationLength,
	[Token(Token = "0x40006D6")]
	Num_ErrorCodes
}
[Token(Token = "0x20000F3")]
public enum AkMonitorErrorLevel
{
	[Token(Token = "0x40006D8")]
	ErrorLevel_Message = 1,
	[Token(Token = "0x40006D9")]
	ErrorLevel_Error,
	[Token(Token = "0x40006DA")]
	ErrorLevel_All
}
[Token(Token = "0x20000F4")]
public class AkMonitoringCallbackInfo : IDisposable
{
	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000FC")]
	public AkMonitorErrorCode errorCode
	{
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x1203558", Offset = "0x1203558", VA = "0x1203558")]
		get
		{
			return default(AkMonitorErrorCode);
		}
	}

	[Token(Token = "0x170000FD")]
	public AkMonitorErrorLevel errorLevel
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x12035C4", Offset = "0x12035C4", VA = "0x12035C4")]
		get
		{
			return default(AkMonitorErrorLevel);
		}
	}

	[Token(Token = "0x170000FE")]
	public uint playingID
	{
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1203630", Offset = "0x1203630", VA = "0x1203630")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000FF")]
	public ulong gameObjID
	{
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x120369C", Offset = "0x120369C", VA = "0x120369C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000100")]
	public string message
	{
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x1203708", Offset = "0x1203708", VA = "0x1203708")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x12032F8", Offset = "0x12032F8", VA = "0x12032F8")]
	internal AkMonitoringCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x1203338", Offset = "0x1203338", VA = "0x1203338")]
	internal static IntPtr getCPtr(AkMonitoringCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x1203388", Offset = "0x1203388", VA = "0x1203388", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x12033BC", Offset = "0x12033BC", VA = "0x12033BC", Slot = "1")]
	~AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x120342C", Offset = "0x120342C", VA = "0x120342C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x12037A8", Offset = "0x12037A8", VA = "0x12037A8")]
	public AkMonitoringCallbackInfo()
	{
	}
}
[Token(Token = "0x20000F5")]
public enum AkMultiPositionType
{
	[Token(Token = "0x40006DE")]
	MultiPositionType_SingleSource,
	[Token(Token = "0x40006DF")]
	MultiPositionType_MultiSources,
	[Token(Token = "0x40006E0")]
	MultiPositionType_MultiDirections
}
[Token(Token = "0x20000F6")]
public class AkMusicPlaylistCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000101")]
	public uint playlistID
	{
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1203BBC", Offset = "0x1203BBC", VA = "0x1203BBC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000102")]
	public uint uNumPlaylistItems
	{
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1203C28", Offset = "0x1203C28", VA = "0x1203C28")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000103")]
	public uint uPlaylistSelection
	{
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1203C94", Offset = "0x1203C94", VA = "0x1203C94")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000104")]
	public uint uPlaylistItemDone
	{
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1203D00", Offset = "0x1203D00", VA = "0x1203D00")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x12038A4", Offset = "0x12038A4", VA = "0x12038A4")]
	internal AkMusicPlaylistCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x1203938", Offset = "0x1203938", VA = "0x1203938")]
	internal static IntPtr getCPtr(AkMusicPlaylistCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x1203988", Offset = "0x1203988", VA = "0x1203988", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x1203A14", Offset = "0x1203A14", VA = "0x1203A14", Slot = "1")]
	~AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x1203A84", Offset = "0x1203A84", VA = "0x1203A84", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x1203D6C", Offset = "0x1203D6C", VA = "0x1203D6C")]
	public AkMusicPlaylistCallbackInfo()
	{
	}
}
[Token(Token = "0x20000F7")]
public class AkMusicSettings : IDisposable
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000105")]
	public float fStreamingLookAheadRatio
	{
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x120402C", Offset = "0x120402C", VA = "0x120402C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1203FB0", Offset = "0x1203FB0", VA = "0x1203FB0")]
		set
		{
		}
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x11FBC1C", Offset = "0x11FBC1C", VA = "0x11FBC1C")]
	internal AkMusicSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x11FBB1C", Offset = "0x11FBB1C", VA = "0x11FBB1C")]
	internal static IntPtr getCPtr(AkMusicSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x1203DE0", Offset = "0x1203DE0", VA = "0x1203DE0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x1203E14", Offset = "0x1203E14", VA = "0x1203E14", Slot = "1")]
	~AkMusicSettings()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x1203E84", Offset = "0x1203E84", VA = "0x1203E84", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x1204098", Offset = "0x1204098", VA = "0x1204098")]
	public AkMusicSettings()
	{
	}
}
[Token(Token = "0x20000F8")]
public class AkMusicSyncCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000106")]
	public uint playingID
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x1204434", Offset = "0x1204434", VA = "0x1204434")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000107")]
	public int segmentInfo_iCurrentPosition
	{
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x12044A0", Offset = "0x12044A0", VA = "0x12044A0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000108")]
	public int segmentInfo_iPreEntryDuration
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x120450C", Offset = "0x120450C", VA = "0x120450C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000109")]
	public int segmentInfo_iActiveDuration
	{
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1204578", Offset = "0x1204578", VA = "0x1204578")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700010A")]
	public int segmentInfo_iPostExitDuration
	{
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x12045E4", Offset = "0x12045E4", VA = "0x12045E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700010B")]
	public int segmentInfo_iRemainingLookAheadTime
	{
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1204650", Offset = "0x1204650", VA = "0x1204650")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700010C")]
	public float segmentInfo_fBeatDuration
	{
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x12046BC", Offset = "0x12046BC", VA = "0x12046BC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010D")]
	public float segmentInfo_fBarDuration
	{
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1204728", Offset = "0x1204728", VA = "0x1204728")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010E")]
	public float segmentInfo_fGridDuration
	{
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x1204794", Offset = "0x1204794", VA = "0x1204794")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010F")]
	public float segmentInfo_fGridOffset
	{
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1204800", Offset = "0x1204800", VA = "0x1204800")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000110")]
	public AkCallbackType musicSyncType
	{
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x120486C", Offset = "0x120486C", VA = "0x120486C")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x17000111")]
	public string userCueName
	{
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x12048D8", Offset = "0x12048D8", VA = "0x12048D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x120411C", Offset = "0x120411C", VA = "0x120411C")]
	internal AkMusicSyncCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x12041B0", Offset = "0x12041B0", VA = "0x12041B0")]
	internal static IntPtr getCPtr(AkMusicSyncCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x1204200", Offset = "0x1204200", VA = "0x1204200", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x120428C", Offset = "0x120428C", VA = "0x120428C", Slot = "1")]
	~AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x12042FC", Offset = "0x12042FC", VA = "0x12042FC", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x1204978", Offset = "0x1204978", VA = "0x1204978")]
	public AkMusicSyncCallbackInfo()
	{
	}
}
[Token(Token = "0x20000F9")]
public class AkObjectInfo : IDisposable
{
	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000112")]
	public uint objID
	{
		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1204CC8", Offset = "0x1204CC8", VA = "0x1204CC8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x1204C4C", Offset = "0x1204C4C", VA = "0x1204C4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public uint parentID
	{
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1204DB0", Offset = "0x1204DB0", VA = "0x1204DB0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1204D34", Offset = "0x1204D34", VA = "0x1204D34")]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public int iDepth
	{
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1204E98", Offset = "0x1204E98", VA = "0x1204E98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1204E1C", Offset = "0x1204E1C", VA = "0x1204E1C")]
		set
		{
		}
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x12049EC", Offset = "0x12049EC", VA = "0x12049EC")]
	internal AkObjectInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x1204A2C", Offset = "0x1204A2C", VA = "0x1204A2C")]
	internal static IntPtr getCPtr(AkObjectInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x1204A7C", Offset = "0x1204A7C", VA = "0x1204A7C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x1204AB0", Offset = "0x1204AB0", VA = "0x1204AB0", Slot = "1")]
	~AkObjectInfo()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x1204B20", Offset = "0x1204B20", VA = "0x1204B20", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x1204F04", Offset = "0x1204F04", VA = "0x1204F04")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x1204F70", Offset = "0x1204F70", VA = "0x1204F70")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x1204FD0", Offset = "0x1204FD0", VA = "0x1204FD0")]
	public void Clone(AkObjectInfo other)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x1205078", Offset = "0x1205078", VA = "0x1205078")]
	public AkObjectInfo()
	{
	}
}
[Token(Token = "0x20000FA")]
public class AkObstructionOcclusionValues : IDisposable
{
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000115")]
	public float occlusion
	{
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1205F4C", Offset = "0x1205F4C", VA = "0x1205F4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1205ED0", Offset = "0x1205ED0", VA = "0x1205ED0")]
		set
		{
		}
	}

	[Token(Token = "0x17000116")]
	public float obstruction
	{
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1206034", Offset = "0x1206034", VA = "0x1206034")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x1205FB8", Offset = "0x1205FB8", VA = "0x1205FB8")]
		set
		{
		}
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x1205C70", Offset = "0x1205C70", VA = "0x1205C70")]
	internal AkObstructionOcclusionValues(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x1205CB0", Offset = "0x1205CB0", VA = "0x1205CB0")]
	internal static IntPtr getCPtr(AkObstructionOcclusionValues obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x1205D00", Offset = "0x1205D00", VA = "0x1205D00", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x1205D34", Offset = "0x1205D34", VA = "0x1205D34", Slot = "1")]
	~AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x1205DA4", Offset = "0x1205DA4", VA = "0x1205DA4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x12060A0", Offset = "0x12060A0", VA = "0x12060A0")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x120610C", Offset = "0x120610C", VA = "0x120610C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x120616C", Offset = "0x120616C", VA = "0x120616C")]
	public void Clone(AkObstructionOcclusionValues other)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x1206214", Offset = "0x1206214", VA = "0x1206214")]
	public AkObstructionOcclusionValues()
	{
	}
}
[Token(Token = "0x20000FB")]
public class AkOutputSettings : IDisposable
{
	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000117")]
	public uint audioDeviceShareset
	{
		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1206A54", Offset = "0x1206A54", VA = "0x1206A54")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x12069D8", Offset = "0x12069D8", VA = "0x12069D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public uint idDevice
	{
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1206B3C", Offset = "0x1206B3C", VA = "0x1206B3C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1206AC0", Offset = "0x1206AC0", VA = "0x1206AC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public AkPanningRule ePanningRule
	{
		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1206C24", Offset = "0x1206C24", VA = "0x1206C24")]
		get
		{
			return default(AkPanningRule);
		}
		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x1206BA8", Offset = "0x1206BA8", VA = "0x1206BA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700011A")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1206D20", Offset = "0x1206D20", VA = "0x1206D20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1206C90", Offset = "0x1206C90", VA = "0x1206C90")]
		set
		{
		}
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x11FA898", Offset = "0x11FA898", VA = "0x11FA898")]
	internal AkOutputSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x11FA798", Offset = "0x11FA798", VA = "0x11FA798")]
	internal static IntPtr getCPtr(AkOutputSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x12064CC", Offset = "0x12064CC", VA = "0x12064CC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x1206500", Offset = "0x1206500", VA = "0x1206500", Slot = "1")]
	~AkOutputSettings()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x1206570", Offset = "0x1206570", VA = "0x1206570", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x120669C", Offset = "0x120669C", VA = "0x120669C")]
	public AkOutputSettings()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x1206720", Offset = "0x1206720", VA = "0x1206720")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig, AkPanningRule in_ePanning)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x12067E8", Offset = "0x12067E8", VA = "0x12067E8")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x12068A8", Offset = "0x12068A8", VA = "0x12068A8")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x1206944", Offset = "0x1206944", VA = "0x1206944")]
	public AkOutputSettings(string in_szDeviceShareSet)
	{
	}
}
[Token(Token = "0x20000FC")]
public enum AkPanningRule
{
	[Token(Token = "0x40006EC")]
	AkPanningRule_Speakers,
	[Token(Token = "0x40006ED")]
	AkPanningRule_Headphones
}
[Token(Token = "0x20000FD")]
public class AkPathParams : IDisposable
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700011B")]
	public AkVector listenerPos
	{
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x12070C0", Offset = "0x12070C0", VA = "0x12070C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1207030", Offset = "0x1207030", VA = "0x1207030")]
		set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public AkVector emitterPos
	{
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1207200", Offset = "0x1207200", VA = "0x1207200")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1207170", Offset = "0x1207170", VA = "0x1207170")]
		set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public uint numValidPaths
	{
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x120732C", Offset = "0x120732C", VA = "0x120732C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x12072B0", Offset = "0x12072B0", VA = "0x12072B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x1206DD0", Offset = "0x1206DD0", VA = "0x1206DD0")]
	internal AkPathParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x1206E10", Offset = "0x1206E10", VA = "0x1206E10")]
	internal static IntPtr getCPtr(AkPathParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x1206E60", Offset = "0x1206E60", VA = "0x1206E60", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x1206E94", Offset = "0x1206E94", VA = "0x1206E94", Slot = "1")]
	~AkPathParams()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x1206F04", Offset = "0x1206F04", VA = "0x1206F04", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x1207398", Offset = "0x1207398", VA = "0x1207398")]
	public AkPathParams()
	{
	}
}
[Token(Token = "0x20000FE")]
public class AkPlaylist : AkPlaylistArray
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x12081C8", Offset = "0x12081C8", VA = "0x12081C8")]
	internal AkPlaylist(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x12082A4", Offset = "0x12082A4", VA = "0x12082A4")]
	internal static IntPtr getCPtr(AkPlaylist obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x12082F4", Offset = "0x12082F4", VA = "0x12082F4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x12083BC", Offset = "0x12083BC", VA = "0x12083BC", Slot = "1")]
	~AkPlaylist()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x1208494", Offset = "0x1208494", VA = "0x1208494", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x12086F4", Offset = "0x12086F4", VA = "0x12086F4")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x12087AC", Offset = "0x12087AC", VA = "0x12087AC")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x1208848", Offset = "0x1208848", VA = "0x1208848")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x12088DC", Offset = "0x12088DC", VA = "0x12088DC")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x1208960", Offset = "0x1208960", VA = "0x1208960")]
	public AKRESULT Enqueue(uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x12089DC", Offset = "0x12089DC", VA = "0x12089DC")]
	public AkPlaylist()
	{
	}
}
[Token(Token = "0x20000FF")]
public class AkPlaylistArray : IDisposable
{
	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x1208264", Offset = "0x1208264", VA = "0x1208264")]
	internal AkPlaylistArray(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x1208A50", Offset = "0x1208A50", VA = "0x1208A50")]
	internal static IntPtr getCPtr(AkPlaylistArray obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x1208388", Offset = "0x1208388", VA = "0x1208388", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x1208424", Offset = "0x1208424", VA = "0x1208424", Slot = "1")]
	~AkPlaylistArray()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x12085C8", Offset = "0x12085C8", VA = "0x12085C8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x1208AA0", Offset = "0x1208AA0", VA = "0x1208AA0")]
	public AkPlaylistArray()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x1208B24", Offset = "0x1208B24", VA = "0x1208B24")]
	public AkIterator Begin()
	{
		return null;
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x1208BC8", Offset = "0x1208BC8", VA = "0x1208BC8")]
	public AkIterator End()
	{
		return null;
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x1208C6C", Offset = "0x1208C6C", VA = "0x1208C6C")]
	public AkIterator FindEx(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x1208D4C", Offset = "0x1208D4C", VA = "0x1208D4C")]
	public AkIterator Erase(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x1208E2C", Offset = "0x1208E2C", VA = "0x1208E2C")]
	public void Erase(uint in_uIndex)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x1208EA8", Offset = "0x1208EA8", VA = "0x1208EA8")]
	public AkIterator EraseSwap(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x1208F88", Offset = "0x1208F88", VA = "0x1208F88")]
	public AKRESULT Reserve(uint in_ulReserve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x1209004", Offset = "0x1209004", VA = "0x1209004")]
	public uint Reserved()
	{
		return default(uint);
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x1209070", Offset = "0x1209070", VA = "0x1209070")]
	public void Term()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x12090DC", Offset = "0x12090DC", VA = "0x12090DC")]
	public uint Length()
	{
		return default(uint);
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x1209148", Offset = "0x1209148", VA = "0x1209148")]
	public AkPlaylistItem Data()
	{
		return null;
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x12091F8", Offset = "0x12091F8", VA = "0x12091F8")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x1209264", Offset = "0x1209264", VA = "0x1209264")]
	public AkPlaylistItem Exists(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x1209350", Offset = "0x1209350", VA = "0x1209350")]
	public AkPlaylistItem AddLast()
	{
		return null;
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x1209400", Offset = "0x1209400", VA = "0x1209400")]
	public AkPlaylistItem AddLast(AkPlaylistItem in_rItem)
	{
		return null;
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x12094EC", Offset = "0x12094EC", VA = "0x12094EC")]
	public AkPlaylistItem Last()
	{
		return null;
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x120958C", Offset = "0x120958C", VA = "0x120958C")]
	public void RemoveLast()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x12095F8", Offset = "0x12095F8", VA = "0x12095F8")]
	public AKRESULT Remove(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x12096A0", Offset = "0x12096A0", VA = "0x12096A0")]
	public AKRESULT RemoveSwap(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x1209748", Offset = "0x1209748", VA = "0x1209748")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x12097B4", Offset = "0x12097B4", VA = "0x12097B4")]
	public AkPlaylistItem ItemAtIndex(uint uiIndex)
	{
		return null;
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x1209864", Offset = "0x1209864", VA = "0x1209864")]
	public AkPlaylistItem Insert(uint in_uIndex)
	{
		return null;
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x1209924", Offset = "0x1209924", VA = "0x1209924")]
	public bool GrowArray(uint in_uGrowBy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x12099A0", Offset = "0x12099A0", VA = "0x12099A0")]
	public bool GrowArray()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x1209A0C", Offset = "0x1209A0C", VA = "0x1209A0C")]
	public bool Resize(uint in_uiSize)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x1209A88", Offset = "0x1209A88", VA = "0x1209A88")]
	public void Transfer(AkPlaylistArray in_rSource)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x1209B30", Offset = "0x1209B30", VA = "0x1209B30")]
	public AKRESULT Copy(AkPlaylistArray in_rSource)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000100")]
public class AkPlaylistItem : IDisposable
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700011E")]
	public uint audioNodeID
	{
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x120A17C", Offset = "0x120A17C", VA = "0x120A17C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x120A100", Offset = "0x120A100", VA = "0x120A100")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public int msDelay
	{
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x120A264", Offset = "0x120A264", VA = "0x120A264")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x120A1E8", Offset = "0x120A1E8", VA = "0x120A1E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x120A34C", Offset = "0x120A34C", VA = "0x120A34C")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x120A2D0", Offset = "0x120A2D0", VA = "0x120A2D0")]
		set
		{
		}
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x11FC948", Offset = "0x11FC948", VA = "0x11FC948")]
	internal AkPlaylistItem(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x11FC848", Offset = "0x11FC848", VA = "0x11FC848")]
	internal static IntPtr getCPtr(AkPlaylistItem obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x1209BD8", Offset = "0x1209BD8", VA = "0x1209BD8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x1209C0C", Offset = "0x1209C0C", VA = "0x1209C0C", Slot = "1")]
	~AkPlaylistItem()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x1209C7C", Offset = "0x1209C7C", VA = "0x1209C7C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x1209DA8", Offset = "0x1209DA8", VA = "0x1209DA8")]
	public AkPlaylistItem()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x1209E2C", Offset = "0x1209E2C", VA = "0x1209E2C")]
	public AkPlaylistItem(AkPlaylistItem in_rCopy)
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x1209EEC", Offset = "0x1209EEC", VA = "0x1209EEC")]
	public AkPlaylistItem Assign(AkPlaylistItem in_rCopy)
	{
		return null;
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x1209FC8", Offset = "0x1209FC8", VA = "0x1209FC8")]
	public bool IsEqualTo(AkPlaylistItem in_rCopy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x120A070", Offset = "0x120A070", VA = "0x120A070")]
	public AKRESULT SetExternalSources(uint in_nExternalSrc, AkExternalSourceInfoArray in_pExternalSrc)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000101")]
public enum AkPluginType
{
	[Token(Token = "0x40006F6")]
	AkPluginTypeNone = 0,
	[Token(Token = "0x40006F7")]
	AkPluginTypeCodec = 1,
	[Token(Token = "0x40006F8")]
	AkPluginTypeSource = 2,
	[Token(Token = "0x40006F9")]
	AkPluginTypeEffect = 3,
	[Token(Token = "0x40006FA")]
	AkPluginTypeMixer = 6,
	[Token(Token = "0x40006FB")]
	AkPluginTypeSink = 7,
	[Token(Token = "0x40006FC")]
	AkPluginTypeGlobalExtension = 8,
	[Token(Token = "0x40006FD")]
	AkPluginTypeMask = 15
}
[Token(Token = "0x2000102")]
public class AkPositioningInfo : IDisposable
{
	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000121")]
	public float fCenterPct
	{
		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x120ABF4", Offset = "0x120ABF4", VA = "0x120ABF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x120AB78", Offset = "0x120AB78", VA = "0x120AB78")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public AkSpeakerPanningType pannerType
	{
		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x120ACDC", Offset = "0x120ACDC", VA = "0x120ACDC")]
		get
		{
			return default(AkSpeakerPanningType);
		}
		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x120AC60", Offset = "0x120AC60", VA = "0x120AC60")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public Ak3DPositionType e3dPositioningType
	{
		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x120ADC4", Offset = "0x120ADC4", VA = "0x120ADC4")]
		get
		{
			return default(Ak3DPositionType);
		}
		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x120AD48", Offset = "0x120AD48", VA = "0x120AD48")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public bool bHoldEmitterPosAndOrient
	{
		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x120AEAC", Offset = "0x120AEAC", VA = "0x120AEAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x120AE30", Offset = "0x120AE30", VA = "0x120AE30")]
		set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public Ak3DSpatializationMode e3DSpatializationMode
	{
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x120AF94", Offset = "0x120AF94", VA = "0x120AF94")]
		get
		{
			return default(Ak3DSpatializationMode);
		}
		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x120AF18", Offset = "0x120AF18", VA = "0x120AF18")]
		set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public bool bEnableAttenuation
	{
		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x120B07C", Offset = "0x120B07C", VA = "0x120B07C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x120B000", Offset = "0x120B000", VA = "0x120B000")]
		set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public bool bUseConeAttenuation
	{
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x120B164", Offset = "0x120B164", VA = "0x120B164")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x120B0E8", Offset = "0x120B0E8", VA = "0x120B0E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public float fInnerAngle
	{
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x120B24C", Offset = "0x120B24C", VA = "0x120B24C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x120B1D0", Offset = "0x120B1D0", VA = "0x120B1D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public float fOuterAngle
	{
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x120B334", Offset = "0x120B334", VA = "0x120B334")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x120B2B8", Offset = "0x120B2B8", VA = "0x120B2B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public float fConeMaxAttenuation
	{
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x120B41C", Offset = "0x120B41C", VA = "0x120B41C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x120B3A0", Offset = "0x120B3A0", VA = "0x120B3A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	public float LPFCone
	{
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x120B504", Offset = "0x120B504", VA = "0x120B504")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x120B488", Offset = "0x120B488", VA = "0x120B488")]
		set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public float HPFCone
	{
		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x120B5EC", Offset = "0x120B5EC", VA = "0x120B5EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x120B570", Offset = "0x120B570", VA = "0x120B570")]
		set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public float fMaxDistance
	{
		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x120B6D4", Offset = "0x120B6D4", VA = "0x120B6D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x120B658", Offset = "0x120B658", VA = "0x120B658")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public float fVolDryAtMaxDist
	{
		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x120B7BC", Offset = "0x120B7BC", VA = "0x120B7BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x120B740", Offset = "0x120B740", VA = "0x120B740")]
		set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public float fVolAuxGameDefAtMaxDist
	{
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x120B8A4", Offset = "0x120B8A4", VA = "0x120B8A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x120B828", Offset = "0x120B828", VA = "0x120B828")]
		set
		{
		}
	}

	[Token(Token = "0x17000130")]
	public float fVolAuxUserDefAtMaxDist
	{
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x120B98C", Offset = "0x120B98C", VA = "0x120B98C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x120B910", Offset = "0x120B910", VA = "0x120B910")]
		set
		{
		}
	}

	[Token(Token = "0x17000131")]
	public float LPFValueAtMaxDist
	{
		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x120BA74", Offset = "0x120BA74", VA = "0x120BA74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x120B9F8", Offset = "0x120B9F8", VA = "0x120B9F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public float HPFValueAtMaxDist
	{
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x120BB5C", Offset = "0x120BB5C", VA = "0x120BB5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x120BAE0", Offset = "0x120BAE0", VA = "0x120BAE0")]
		set
		{
		}
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x120A918", Offset = "0x120A918", VA = "0x120A918")]
	internal AkPositioningInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x120A958", Offset = "0x120A958", VA = "0x120A958")]
	internal static IntPtr getCPtr(AkPositioningInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x120A9A8", Offset = "0x120A9A8", VA = "0x120A9A8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x120A9DC", Offset = "0x120A9DC", VA = "0x120A9DC", Slot = "1")]
	~AkPositioningInfo()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x120AA4C", Offset = "0x120AA4C", VA = "0x120AA4C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x120BBC8", Offset = "0x120BBC8", VA = "0x120BBC8")]
	public AkPositioningInfo()
	{
	}
}
[Token(Token = "0x2000103")]
public enum AkPreparationType
{
	[Token(Token = "0x4000701")]
	Preparation_Load,
	[Token(Token = "0x4000702")]
	Preparation_Unload,
	[Token(Token = "0x4000703")]
	Preparation_LoadAndDecode
}
[Token(Token = "0x2000104")]
public enum AkQueryRTPCValue
{
	[Token(Token = "0x4000705")]
	RTPCValue_Default,
	[Token(Token = "0x4000706")]
	RTPCValue_Global,
	[Token(Token = "0x4000707")]
	RTPCValue_GameObject,
	[Token(Token = "0x4000708")]
	RTPCValue_PlayingID,
	[Token(Token = "0x4000709")]
	RTPCValue_Unavailable
}
[Token(Token = "0x2000105")]
public class AkRamp : IDisposable
{
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000133")]
	public float fPrev
	{
		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x120CB04", Offset = "0x120CB04", VA = "0x120CB04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x120CA88", Offset = "0x120CA88", VA = "0x120CA88")]
		set
		{
		}
	}

	[Token(Token = "0x17000134")]
	public float fNext
	{
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x120CBEC", Offset = "0x120CBEC", VA = "0x120CBEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x120CB70", Offset = "0x120CB70", VA = "0x120CB70")]
		set
		{
		}
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x120C708", Offset = "0x120C708", VA = "0x120C708")]
	internal AkRamp(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x120C748", Offset = "0x120C748", VA = "0x120C748")]
	internal static IntPtr getCPtr(AkRamp obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x120C798", Offset = "0x120C798", VA = "0x120C798", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x120C7CC", Offset = "0x120C7CC", VA = "0x120C7CC", Slot = "1")]
	~AkRamp()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x120C83C", Offset = "0x120C83C", VA = "0x120C83C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x120C968", Offset = "0x120C968", VA = "0x120C968")]
	public AkRamp()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x120C9EC", Offset = "0x120C9EC", VA = "0x120C9EC")]
	public AkRamp(float in_fPrev, float in_fNext)
	{
	}
}
[Token(Token = "0x2000106")]
public class AkReflectionPathInfo : IDisposable
{
	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000135")]
	public AkVector imageSource
	{
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x120CF48", Offset = "0x120CF48", VA = "0x120CF48")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x120CEB8", Offset = "0x120CEB8", VA = "0x120CEB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000136")]
	public uint numPathPoints
	{
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x120D074", Offset = "0x120D074", VA = "0x120D074")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x120CFF8", Offset = "0x120CFF8", VA = "0x120CFF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public uint numReflections
	{
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x120D15C", Offset = "0x120D15C", VA = "0x120D15C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x120D0E0", Offset = "0x120D0E0", VA = "0x120D0E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public float level
	{
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x120D244", Offset = "0x120D244", VA = "0x120D244")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x120D1C8", Offset = "0x120D1C8", VA = "0x120D1C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public bool isOccluded
	{
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x120D32C", Offset = "0x120D32C", VA = "0x120D32C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x120D2B0", Offset = "0x120D2B0", VA = "0x120D2B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x120CC58", Offset = "0x120CC58", VA = "0x120CC58")]
	internal AkReflectionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x120CC98", Offset = "0x120CC98", VA = "0x120CC98")]
	internal static IntPtr getCPtr(AkReflectionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x120CCE8", Offset = "0x120CCE8", VA = "0x120CCE8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x120CD1C", Offset = "0x120CD1C", VA = "0x120CD1C", Slot = "1")]
	~AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x120CD8C", Offset = "0x120CD8C", VA = "0x120CD8C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x120D398", Offset = "0x120D398", VA = "0x120D398")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x120D3F8", Offset = "0x120D3F8", VA = "0x120D3F8")]
	public AkVector GetPathPoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x120D4B8", Offset = "0x120D4B8", VA = "0x120D4B8")]
	public AkAcousticSurface GetAcousticSurface(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x120D568", Offset = "0x120D568", VA = "0x120D568")]
	public float GetDiffraction(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x120D5E4", Offset = "0x120D5E4", VA = "0x120D5E4")]
	public void Clone(AkReflectionPathInfo other)
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x120D68C", Offset = "0x120D68C", VA = "0x120D68C")]
	public AkReflectionPathInfo()
	{
	}
}
[Token(Token = "0x2000107")]
public class AkRoomParams : IDisposable
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700013A")]
	public AkVector Up
	{
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x120DD74", Offset = "0x120DD74", VA = "0x120DD74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x120EE9C", Offset = "0x120EE9C", VA = "0x120EE9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public AkVector Front
	{
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x120DE24", Offset = "0x120DE24", VA = "0x120DE24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x120EF2C", Offset = "0x120EF2C", VA = "0x120EF2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public uint ReverbAuxBus
	{
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x120EFBC", Offset = "0x120EFBC", VA = "0x120EFBC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x120DED4", Offset = "0x120DED4", VA = "0x120DED4")]
		set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public float ReverbLevel
	{
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x120F028", Offset = "0x120F028", VA = "0x120F028")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x120DF50", Offset = "0x120DF50", VA = "0x120DF50")]
		set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public float WallOcclusion
	{
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x120F094", Offset = "0x120F094", VA = "0x120F094")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x120DFCC", Offset = "0x120DFCC", VA = "0x120DFCC")]
		set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public float RoomGameObj_AuxSendLevelToSelf
	{
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x120F100", Offset = "0x120F100", VA = "0x120F100")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x120E048", Offset = "0x120E048", VA = "0x120E048")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public bool RoomGameObj_KeepRegistered
	{
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x120F16C", Offset = "0x120F16C", VA = "0x120F16C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x120E0C4", Offset = "0x120E0C4", VA = "0x120E0C4")]
		set
		{
		}
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x120EC3C", Offset = "0x120EC3C", VA = "0x120EC3C")]
	internal AkRoomParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x120EC7C", Offset = "0x120EC7C", VA = "0x120EC7C")]
	internal static IntPtr getCPtr(AkRoomParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x120ECCC", Offset = "0x120ECCC", VA = "0x120ECCC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x120ED00", Offset = "0x120ED00", VA = "0x120ED00", Slot = "1")]
	~AkRoomParams()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x120ED70", Offset = "0x120ED70", VA = "0x120ED70", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x120DCF0", Offset = "0x120DCF0", VA = "0x120DCF0")]
	public AkRoomParams()
	{
	}
}
[Token(Token = "0x2000108")]
public class AkSegmentInfo : IDisposable
{
	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000141")]
	public int iCurrentPosition
	{
		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xDA4298", Offset = "0xDA4298", VA = "0xDA4298")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xDA4190", Offset = "0xDA4190", VA = "0xDA4190")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public int iPreEntryDuration
	{
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xDA4488", Offset = "0xDA4488", VA = "0xDA4488")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xDA4380", Offset = "0xDA4380", VA = "0xDA4380")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public int iActiveDuration
	{
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xDA4678", Offset = "0xDA4678", VA = "0xDA4678")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xDA4570", Offset = "0xDA4570", VA = "0xDA4570")]
		set
		{
		}
	}

	[Token(Token = "0x17000144")]
	public int iPostExitDuration
	{
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xDA4868", Offset = "0xDA4868", VA = "0xDA4868")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xDA4760", Offset = "0xDA4760", VA = "0xDA4760")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public int iRemainingLookAheadTime
	{
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xDA4A58", Offset = "0xDA4A58", VA = "0xDA4A58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xDA4950", Offset = "0xDA4950", VA = "0xDA4950")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public float fBeatDuration
	{
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xDA4C48", Offset = "0xDA4C48", VA = "0xDA4C48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xDA4B40", Offset = "0xDA4B40", VA = "0xDA4B40")]
		set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public float fBarDuration
	{
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xDA4E38", Offset = "0xDA4E38", VA = "0xDA4E38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xDA4D30", Offset = "0xDA4D30", VA = "0xDA4D30")]
		set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public float fGridDuration
	{
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xDA5028", Offset = "0xDA5028", VA = "0xDA5028")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xDA4F20", Offset = "0xDA4F20", VA = "0xDA4F20")]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public float fGridOffset
	{
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xDA5218", Offset = "0xDA5218", VA = "0xDA5218")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xDA5110", Offset = "0xDA5110", VA = "0xDA5110")]
		set
		{
		}
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xDA3EB4", Offset = "0xDA3EB4", VA = "0xDA3EB4")]
	internal AkSegmentInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xDA3EF4", Offset = "0xDA3EF4", VA = "0xDA3EF4")]
	internal static IntPtr getCPtr(AkSegmentInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xDA3F44", Offset = "0xDA3F44", VA = "0xDA3F44", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xDA3F78", Offset = "0xDA3F78", VA = "0xDA3F78", Slot = "1")]
	~AkSegmentInfo()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xDA3FE8", Offset = "0xDA3FE8", VA = "0xDA3FE8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xDA5300", Offset = "0xDA5300", VA = "0xDA5300")]
	public AkSegmentInfo()
	{
	}
}
[Token(Token = "0x2000109")]
public class AkSerializedCallbackHeader : IDisposable
{
	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700014A")]
	public IntPtr pPackage
	{
		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xDA56D0", Offset = "0xDA56D0", VA = "0xDA56D0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700014B")]
	public AkSerializedCallbackHeader pNext
	{
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xDA57B8", Offset = "0xDA57B8", VA = "0xDA57B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014C")]
	public AkCallbackType eType
	{
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xDA58E4", Offset = "0xDA58E4", VA = "0xDA58E4")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xDA53F4", Offset = "0xDA53F4", VA = "0xDA53F4")]
	internal AkSerializedCallbackHeader(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xDA5434", Offset = "0xDA5434", VA = "0xDA5434")]
	internal static IntPtr getCPtr(AkSerializedCallbackHeader obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xDA5484", Offset = "0xDA5484", VA = "0xDA5484", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xDA54B8", Offset = "0xDA54B8", VA = "0xDA54B8", Slot = "1")]
	~AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xDA5528", Offset = "0xDA5528", VA = "0xDA5528", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xDA59CC", Offset = "0xDA59CC", VA = "0xDA59CC")]
	public IntPtr GetData()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xDA5AB4", Offset = "0xDA5AB4", VA = "0xDA5AB4")]
	public AkSerializedCallbackHeader()
	{
	}
}
[Token(Token = "0x200010A")]
public enum AkSourceChannelOrdering
{
	[Token(Token = "0x4000715")]
	SourceChannelOrdering_Standard,
	[Token(Token = "0x4000716")]
	SourceChannelOrdering_Film,
	[Token(Token = "0x4000717")]
	SourceChannelOrdering_FuMa
}
[Token(Token = "0x200010B")]
public class AkSourceSettings : IDisposable
{
	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700014D")]
	public uint sourceID
	{
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xD5990C", Offset = "0xD5990C", VA = "0xD5990C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xD59890", Offset = "0xD59890", VA = "0xD59890")]
		set
		{
		}
	}

	[Token(Token = "0x1700014E")]
	public IntPtr pMediaMemory
	{
		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xD599F4", Offset = "0xD599F4", VA = "0xD599F4")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xD59978", Offset = "0xD59978", VA = "0xD59978")]
		set
		{
		}
	}

	[Token(Token = "0x1700014F")]
	public uint uMediaSize
	{
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xD59ADC", Offset = "0xD59ADC", VA = "0xD59ADC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xD59A60", Offset = "0xD59A60", VA = "0xD59A60")]
		set
		{
		}
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xD59630", Offset = "0xD59630", VA = "0xD59630")]
	internal AkSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xD59670", Offset = "0xD59670", VA = "0xD59670")]
	internal static IntPtr getCPtr(AkSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xD596C0", Offset = "0xD596C0", VA = "0xD596C0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xD596F4", Offset = "0xD596F4", VA = "0xD596F4", Slot = "1")]
	~AkSourceSettings()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xD59764", Offset = "0xD59764", VA = "0xD59764", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xD59B48", Offset = "0xD59B48", VA = "0xD59B48")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xD59BB4", Offset = "0xD59BB4", VA = "0xD59BB4")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xD59C14", Offset = "0xD59C14", VA = "0xD59C14")]
	public void Clone(AkSourceSettings other)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xD59CBC", Offset = "0xD59CBC", VA = "0xD59CBC")]
	public AkSourceSettings()
	{
	}
}
[Token(Token = "0x200010C")]
public class AkSpatialAudioInitSettings : IDisposable
{
	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000150")]
	public int uPoolID
	{
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xD5A7E8", Offset = "0xD5A7E8", VA = "0xD5A7E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xD5A76C", Offset = "0xD5A76C", VA = "0xD5A76C")]
		set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public uint uPoolSize
	{
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xD5A8D0", Offset = "0xD5A8D0", VA = "0xD5A8D0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xD5A854", Offset = "0xD5A854", VA = "0xD5A854")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public uint uMaxSoundPropagationDepth
	{
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xD5A9B8", Offset = "0xD5A9B8", VA = "0xD5A9B8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xD5A93C", Offset = "0xD5A93C", VA = "0xD5A93C")]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public uint uDiffractionFlags
	{
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xD5AAA0", Offset = "0xD5AAA0", VA = "0xD5AAA0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xD5AA24", Offset = "0xD5AA24", VA = "0xD5AA24")]
		set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public float fDiffractionShadowAttenFactor
	{
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xD5AB88", Offset = "0xD5AB88", VA = "0xD5AB88")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xD5AB0C", Offset = "0xD5AB0C", VA = "0xD5AB0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public float fDiffractionShadowDegrees
	{
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xD5AC70", Offset = "0xD5AC70", VA = "0xD5AC70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xD5ABF4", Offset = "0xD5ABF4", VA = "0xD5ABF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000156")]
	public float fMovementThreshold
	{
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xD5AD58", Offset = "0xD5AD58", VA = "0xD5AD58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xD5ACDC", Offset = "0xD5ACDC", VA = "0xD5ACDC")]
		set
		{
		}
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xD5A488", Offset = "0xD5A488", VA = "0xD5A488")]
	internal AkSpatialAudioInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xD5A4C8", Offset = "0xD5A4C8", VA = "0xD5A4C8")]
	internal static IntPtr getCPtr(AkSpatialAudioInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xD5A518", Offset = "0xD5A518", VA = "0xD5A518", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xD5A54C", Offset = "0xD5A54C", VA = "0xD5A54C", Slot = "1")]
	~AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xD5A5BC", Offset = "0xD5A5BC", VA = "0xD5A5BC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xD5A6E8", Offset = "0xD5A6E8", VA = "0xD5A6E8")]
	public AkSpatialAudioInitSettings()
	{
	}
}
[Token(Token = "0x200010D")]
public enum AkSpeakerPanningType
{
	[Token(Token = "0x400071D")]
	AK_DirectSpeakerAssignment,
	[Token(Token = "0x400071E")]
	AK_BalanceFadeHeight
}
[Token(Token = "0x200010E")]
public class AkStreamMgrSettings : IDisposable
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000157")]
	public uint uMemorySize
	{
		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xD5BABC", Offset = "0xD5BABC", VA = "0xD5BABC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xD5BA40", Offset = "0xD5BA40", VA = "0xD5BA40")]
		set
		{
		}
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xD5B7E0", Offset = "0xD5B7E0", VA = "0xD5B7E0")]
	internal AkStreamMgrSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xD5B820", Offset = "0xD5B820", VA = "0xD5B820")]
	internal static IntPtr getCPtr(AkStreamMgrSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xD5B870", Offset = "0xD5B870", VA = "0xD5B870", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xD5B8A4", Offset = "0xD5B8A4", VA = "0xD5B8A4", Slot = "1")]
	~AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xD5B914", Offset = "0xD5B914", VA = "0xD5B914", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xD5BB28", Offset = "0xD5BB28", VA = "0xD5BB28")]
	public AkStreamMgrSettings()
	{
	}
}
[Token(Token = "0x200010F")]
public class AkTaskContext : IDisposable
{
	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000158")]
	public uint uIdxThread
	{
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xD5D3A0", Offset = "0xD5D3A0", VA = "0xD5D3A0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xD5D324", Offset = "0xD5D324", VA = "0xD5D324")]
		set
		{
		}
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xD5D0C4", Offset = "0xD5D0C4", VA = "0xD5D0C4")]
	internal AkTaskContext(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xD5D104", Offset = "0xD5D104", VA = "0xD5D104")]
	internal static IntPtr getCPtr(AkTaskContext obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xD5D154", Offset = "0xD5D154", VA = "0xD5D154", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xD5D188", Offset = "0xD5D188", VA = "0xD5D188", Slot = "1")]
	~AkTaskContext()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xD5D1F8", Offset = "0xD5D1F8", VA = "0xD5D1F8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xD5D40C", Offset = "0xD5D40C", VA = "0xD5D40C")]
	public AkTaskContext()
	{
	}
}
[Token(Token = "0x2000110")]
public class AkTransform : IDisposable
{
	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xD5DB1C", Offset = "0xD5DB1C", VA = "0xD5DB1C")]
	internal AkTransform(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xD5DB5C", Offset = "0xD5DB5C", VA = "0xD5DB5C")]
	internal static IntPtr getCPtr(AkTransform obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xD5DBAC", Offset = "0xD5DBAC", VA = "0xD5DBAC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xD5DBE0", Offset = "0xD5DBE0", VA = "0xD5DBE0", Slot = "1")]
	~AkTransform()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xD5DC50", Offset = "0xD5DC50", VA = "0xD5DC50", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xD5DD7C", Offset = "0xD5DD7C", VA = "0xD5DD7C")]
	public AkVector Position()
	{
		return null;
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xD5DE5C", Offset = "0xD5DE5C", VA = "0xD5DE5C")]
	public AkVector OrientationFront()
	{
		return null;
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xD5DEFC", Offset = "0xD5DEFC", VA = "0xD5DEFC")]
	public AkVector OrientationTop()
	{
		return null;
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xD5DF9C", Offset = "0xD5DF9C", VA = "0xD5DF9C")]
	public void Set(AkVector in_position, AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xD5E0BC", Offset = "0xD5E0BC", VA = "0xD5E0BC")]
	public void Set(float in_positionX, float in_positionY, float in_positionZ, float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xD5E1E8", Offset = "0xD5E1E8", VA = "0xD5E1E8")]
	public void SetPosition(AkVector in_position)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xD5E290", Offset = "0xD5E290", VA = "0xD5E290")]
	public void SetPosition(float in_x, float in_y, float in_z)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xD5E324", Offset = "0xD5E324", VA = "0xD5E324")]
	public void SetOrientation(AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xD5E3DC", Offset = "0xD5E3DC", VA = "0xD5E3DC")]
	public void SetOrientation(float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xD5E490", Offset = "0xD5E490", VA = "0xD5E490")]
	public AkTransform()
	{
	}
}
[Token(Token = "0x2000111")]
public class AkTriangle : IDisposable
{
	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000159")]
	public ushort point0
	{
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xD5E8AC", Offset = "0xD5E8AC", VA = "0xD5E8AC")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xD5C9A4", Offset = "0xD5C9A4", VA = "0xD5C9A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public ushort point1
	{
		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xD5E918", Offset = "0xD5E918", VA = "0xD5E918")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xD5CA20", Offset = "0xD5CA20", VA = "0xD5CA20")]
		set
		{
		}
	}

	[Token(Token = "0x1700015B")]
	public ushort point2
	{
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xD5E984", Offset = "0xD5E984", VA = "0xD5E984")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xD5CA9C", Offset = "0xD5CA9C", VA = "0xD5CA9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700015C")]
	public ushort surface
	{
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xD5E9F0", Offset = "0xD5E9F0", VA = "0xD5E9F0")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xD5CB18", Offset = "0xD5CB18", VA = "0xD5CB18")]
		set
		{
		}
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xD5E514", Offset = "0xD5E514", VA = "0xD5E514")]
	internal AkTriangle(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xD5E554", Offset = "0xD5E554", VA = "0xD5E554")]
	internal static IntPtr getCPtr(AkTriangle obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xD5E5A4", Offset = "0xD5E5A4", VA = "0xD5E5A4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xD5E5D8", Offset = "0xD5E5D8", VA = "0xD5E5D8", Slot = "1")]
	~AkTriangle()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xD5E648", Offset = "0xD5E648", VA = "0xD5E648", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xD5E774", Offset = "0xD5E774", VA = "0xD5E774")]
	public AkTriangle()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xD5E7F8", Offset = "0xD5E7F8", VA = "0xD5E7F8")]
	public AkTriangle(ushort in_pt0, ushort in_pt1, ushort in_pt2, ushort in_surfaceInfo)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xD5EA5C", Offset = "0xD5EA5C", VA = "0xD5EA5C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xD5EAC8", Offset = "0xD5EAC8", VA = "0xD5EAC8")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xD5EB28", Offset = "0xD5EB28", VA = "0xD5EB28")]
	public void Clone(AkTriangle other)
	{
	}
}
[Token(Token = "0x2000112")]
public class AkVector : IDisposable
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700015D")]
	public float X
	{
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xD60CA4", Offset = "0xD60CA4", VA = "0xD60CA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xD60C28", Offset = "0xD60C28", VA = "0xD60C28")]
		set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public float Y
	{
		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xD60D8C", Offset = "0xD60D8C", VA = "0xD60D8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xD60D10", Offset = "0xD60D10", VA = "0xD60D10")]
		set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	public float Z
	{
		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xD60E74", Offset = "0xD60E74", VA = "0xD60E74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xD60DF8", Offset = "0xD60DF8", VA = "0xD60DF8")]
		set
		{
		}
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xD5DE1C", Offset = "0xD5DE1C", VA = "0xD5DE1C")]
	internal AkVector(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xD5E06C", Offset = "0xD5E06C", VA = "0xD5E06C")]
	internal static IntPtr getCPtr(AkVector obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xD609EC", Offset = "0xD609EC", VA = "0xD609EC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xD60A20", Offset = "0xD60A20", VA = "0xD60A20", Slot = "1")]
	~AkVector()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xD60A90", Offset = "0xD60A90", VA = "0xD60A90", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xD60BBC", Offset = "0xD60BBC", VA = "0xD60BBC")]
	public void Zero()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xD60EE0", Offset = "0xD60EE0", VA = "0xD60EE0")]
	public AkVector()
	{
	}
}
[Token(Token = "0x2000113")]
public class AkVertex : IDisposable
{
	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000160")]
	public float X
	{
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xD612F4", Offset = "0xD612F4", VA = "0xD612F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xD5C7D0", Offset = "0xD5C7D0", VA = "0xD5C7D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public float Y
	{
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xD61360", Offset = "0xD61360", VA = "0xD61360")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xD5C84C", Offset = "0xD5C84C", VA = "0xD5C84C")]
		set
		{
		}
	}

	[Token(Token = "0x17000162")]
	public float Z
	{
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xD613CC", Offset = "0xD613CC", VA = "0xD613CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xD5C8C8", Offset = "0xD5C8C8", VA = "0xD5C8C8")]
		set
		{
		}
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xD60F64", Offset = "0xD60F64", VA = "0xD60F64")]
	internal AkVertex(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xD60FA4", Offset = "0xD60FA4", VA = "0xD60FA4")]
	internal static IntPtr getCPtr(AkVertex obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xD60FF4", Offset = "0xD60FF4", VA = "0xD60FF4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xD61028", Offset = "0xD61028", VA = "0xD61028", Slot = "1")]
	~AkVertex()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xD61098", Offset = "0xD61098", VA = "0xD61098", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xD611C4", Offset = "0xD611C4", VA = "0xD611C4")]
	public AkVertex()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xD61248", Offset = "0xD61248", VA = "0xD61248")]
	public AkVertex(float in_X, float in_Y, float in_Z)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xD61438", Offset = "0xD61438", VA = "0xD61438")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xD614A4", Offset = "0xD614A4", VA = "0xD614A4")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xD61504", Offset = "0xD61504", VA = "0xD61504")]
	public void Clone(AkVertex other)
	{
	}
}
[Token(Token = "0x2000114")]
public class _ArrayPoolDefault : IDisposable
{
	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x14CF090", Offset = "0x14CF090", VA = "0x14CF090")]
	internal _ArrayPoolDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x14CF0D0", Offset = "0x14CF0D0", VA = "0x14CF0D0")]
	internal static IntPtr getCPtr(_ArrayPoolDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x14CF120", Offset = "0x14CF120", VA = "0x14CF120", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x14CF154", Offset = "0x14CF154", VA = "0x14CF154", Slot = "1")]
	~_ArrayPoolDefault()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x14CF1C4", Offset = "0x14CF1C4", VA = "0x14CF1C4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x14CF2F0", Offset = "0x14CF2F0", VA = "0x14CF2F0")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x14CF350", Offset = "0x14CF350", VA = "0x14CF350")]
	public _ArrayPoolDefault()
	{
	}
}
[Token(Token = "0x2000115")]
public class _ArrayPoolLEngineDefault : IDisposable
{
	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x14CF3D4", Offset = "0x14CF3D4", VA = "0x14CF3D4")]
	internal _ArrayPoolLEngineDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x14CF414", Offset = "0x14CF414", VA = "0x14CF414")]
	internal static IntPtr getCPtr(_ArrayPoolLEngineDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x14CF464", Offset = "0x14CF464", VA = "0x14CF464", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x14CF498", Offset = "0x14CF498", VA = "0x14CF498", Slot = "1")]
	~_ArrayPoolLEngineDefault()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x14CF508", Offset = "0x14CF508", VA = "0x14CF508", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x14CF634", Offset = "0x14CF634", VA = "0x14CF634")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x14CF694", Offset = "0x14CF694", VA = "0x14CF694")]
	public _ArrayPoolLEngineDefault()
	{
	}
}
[Token(Token = "0x2000116")]
public class _ArrayPoolSpatialAudio : IDisposable
{
	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x14CF718", Offset = "0x14CF718", VA = "0x14CF718")]
	internal _ArrayPoolSpatialAudio(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x14CF758", Offset = "0x14CF758", VA = "0x14CF758")]
	internal static IntPtr getCPtr(_ArrayPoolSpatialAudio obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x14CF7A8", Offset = "0x14CF7A8", VA = "0x14CF7A8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x14CF7DC", Offset = "0x14CF7DC", VA = "0x14CF7DC", Slot = "1")]
	~_ArrayPoolSpatialAudio()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x14CF84C", Offset = "0x14CF84C", VA = "0x14CF84C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x14CF978", Offset = "0x14CF978", VA = "0x14CF978")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x14CF9D8", Offset = "0x14CF9D8", VA = "0x14CF9D8")]
	public _ArrayPoolSpatialAudio()
	{
	}
}
[Token(Token = "0x2000117")]
public class AkAndroidSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000244")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x2000280")]
		public enum AudioAPI
		{
			[Token(Token = "0x4000BC9")]
			None = 0,
			[Token(Token = "0x4000BCA")]
			AAudio = 1,
			[Token(Token = "0x4000BCB")]
			OpenSL_ES = 2,
			[Token(Token = "0x4000BCC")]
			Default = -1
		}

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782B4C", Offset = "0x782B4C")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x782B4C", Offset = "0x782B4C")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782BD4", Offset = "0x782BD4")]
		public bool m_RoundFrameSizeToHardwareSize;

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x10A54B8", Offset = "0x10A54B8", VA = "0x10A54B8", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x10A54FC", Offset = "0x10A54FC", VA = "0x10A54FC")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x10A51F0", Offset = "0x10A51F0", VA = "0x10A51F0")]
	public AkAndroidSettings()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x10A54A0", Offset = "0x10A54A0", VA = "0x10A54A0", Slot = "12")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x10A54A8", Offset = "0x10A54A8", VA = "0x10A54A8", Slot = "13")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x10A54B0", Offset = "0x10A54B0", VA = "0x10A54B0", Slot = "14")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x2000118")]
public static class AkAudioInputManager
{
	[Token(Token = "0x2000245")]
	public delegate void AudioFormatDelegate(uint playingID, AkAudioFormat format);

	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x77D91C", Offset = "0x77D91C")]
	public delegate void AudioFormatInteropDelegate(uint playingID, IntPtr format);

	[Token(Token = "0x2000247")]
	public delegate bool AudioSamplesDelegate(uint playingID, uint channelIndex, float[] samples);

	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x77D930", Offset = "0x77D930")]
	public delegate bool AudioSamplesInteropDelegate(uint playingID, [In][Out] float[] samples, uint channelIndex, uint frames);

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<uint, AudioSamplesDelegate> audioSamplesDelegates;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<uint, AudioFormatDelegate> audioFormatDelegates;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkAudioFormat audioFormat;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AudioSamplesInteropDelegate audioSamplesDelegate;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AudioFormatInteropDelegate audioFormatDelegate;

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x10A643C", Offset = "0x10A643C", VA = "0x10A643C")]
	public static uint PostAudioInputEvent(Event akEvent, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x10A66E0", Offset = "0x10A66E0", VA = "0x10A66E0")]
	public static uint PostAudioInputEvent(uint akEventID, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x10A67DC", Offset = "0x10A67DC", VA = "0x10A67DC")]
	public static uint PostAudioInputEvent(string akEventName, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x10A6228", Offset = "0x10A6228", VA = "0x10A6228")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x784E2C", Offset = "0x784E2C")]
	private static bool InternalAudioSamplesDelegate(uint playingID, float[] samples, uint channelIndex, uint frames)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x10A6324", Offset = "0x10A6324", VA = "0x10A6324")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x784E90", Offset = "0x784E90")]
	private static void InternalAudioFormatDelegate(uint playingID, IntPtr format)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x10A6518", Offset = "0x10A6518", VA = "0x10A6518")]
	private static void TryInitialize()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x10A65EC", Offset = "0x10A65EC", VA = "0x10A65EC")]
	private static void AddPlayingID(uint playingID, AudioSamplesDelegate sampleDelegate, AudioFormatDelegate formatDelegate)
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x10A6DF8", Offset = "0x10A6DF8", VA = "0x10A6DF8")]
	private static void EventCallback(object cookie, AkCallbackType type, AkCallbackInfo callbackInfo)
	{
	}
}
[Token(Token = "0x2000119")]
public static class AkBankManager
{
	[Token(Token = "0x2000249")]
	private class BankHandle
	{
		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly string bankName;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected uint m_BankID;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782C0C", Offset = "0x782C0C")]
		private int <RefCount>k__BackingField;

		[Token(Token = "0x17000291")]
		public int RefCount
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0x10ABBCC", Offset = "0x10ABBCC", VA = "0x10ABBCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7864BC", Offset = "0x7864BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001408")]
			[Address(RVA = "0x10ABBD4", Offset = "0x10ABBD4", VA = "0x10ABBD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7864CC", Offset = "0x7864CC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x10AAF18", Offset = "0x10AAF18", VA = "0x10AAF18")]
		public BankHandle(string name)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x10ABBDC", Offset = "0x10ABBDC", VA = "0x10ABBDC", Slot = "4")]
		public virtual AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x10AB1DC", Offset = "0x10AB1DC", VA = "0x10AB1DC")]
		public void LoadBank()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x10ABC54", Offset = "0x10ABC54", VA = "0x10ABC54", Slot = "5")]
		public virtual void UnloadBank()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x10AB2D8", Offset = "0x10AB2D8", VA = "0x10AB2D8")]
		public void IncRef()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x10AB324", Offset = "0x10AB324", VA = "0x10AB324")]
		public void DecRef()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x10AB630", Offset = "0x10AB630", VA = "0x10AB630")]
		protected void LogLoadResult(AKRESULT result)
		{
		}
	}

	[Token(Token = "0x200024A")]
	private class AsyncBankHandle : BankHandle
	{
		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AkCallbackManager.BankCallback bankCallback;

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x10AB2E8", Offset = "0x10AB2E8", VA = "0x10AB2E8")]
		public AsyncBankHandle(string name, AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x10AB490", Offset = "0x10AB490", VA = "0x10AB490")]
		private static void GlobalBankCallback(uint in_bankID, IntPtr in_pInMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x10ABB08", Offset = "0x10ABB08", VA = "0x10ABB08", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x200024B")]
	private class DecodableBankHandle : BankHandle
	{
		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool decodeBank;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string decodedBankPath;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool saveDecodedBank;

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x10AAF44", Offset = "0x10AAF44", VA = "0x10AAF44")]
		public DecodableBankHandle(string name, bool save)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x10ABDB4", Offset = "0x10ABDB4", VA = "0x10ABDB4", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x10ABF48", Offset = "0x10ABF48", VA = "0x10ABF48", Slot = "5")]
		public override void UnloadBank()
		{
		}
	}

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, BankHandle> m_BankHandles;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<BankHandle> BanksToUnload;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Mutex m_Mutex;

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x10AABC4", Offset = "0x10AABC4", VA = "0x10AABC4")]
	internal static void DoUnloadBanks()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x10AACE8", Offset = "0x10AACE8", VA = "0x10AACE8")]
	internal static void Reset()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x10AAD84", Offset = "0x10AAD84", VA = "0x10AAD84")]
	public static void LoadInitBank(bool doReset = true)
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x10AAEA8", Offset = "0x10AAEA8", VA = "0x10AAEA8")]
	public static void UnloadInitBank()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x10A1AB4", Offset = "0x10A1AB4", VA = "0x10A1AB4")]
	public static void LoadBank(string name, bool decodeBank, bool saveDecodedBank)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x10A1D28", Offset = "0x10A1D28", VA = "0x10A1D28")]
	public static void LoadBankAsync(string name, [Optional] AkCallbackManager.BankCallback callback)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x10A1F5C", Offset = "0x10A1F5C", VA = "0x10A1F5C")]
	public static void UnloadBank(string name)
	{
	}
}
[Token(Token = "0x200011A")]
public class AkBasePathGetter
{
	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string DefaultBasePath;

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x10ABFD8", Offset = "0x10ABFD8", VA = "0x10ABFD8")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x10AC048", Offset = "0x10AC048", VA = "0x10AC048")]
	public static string GetPlatformBasePath()
	{
		return null;
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x10AC104", Offset = "0x10AC104", VA = "0x10AC104")]
	public static string GetFullSoundBankPath()
	{
		return null;
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x10AC284", Offset = "0x10AC284", VA = "0x10AC284")]
	public static void FixSlashes(ref string path, char separatorChar, char badChar, bool addTrailingSlash)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x10AC1D0", Offset = "0x10AC1D0", VA = "0x10AC1D0")]
	public static void FixSlashes(ref string path)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x10ABCCC", Offset = "0x10ABCCC", VA = "0x10ABCCC")]
	public static string GetSoundbankBasePath()
	{
		return null;
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x10AC3C0", Offset = "0x10AC3C0", VA = "0x10AC3C0")]
	public AkBasePathGetter()
	{
	}
}
[Token(Token = "0x200011B")]
public static class AkCallbackManager
{
	[Token(Token = "0x200024C")]
	public delegate void EventCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info);

	[Token(Token = "0x200024D")]
	public delegate void MonitoringCallback(AkMonitorErrorCode in_errorCode, AkMonitorErrorLevel in_errorLevel, uint in_playingID, ulong in_gameObjID, string in_msg);

	[Token(Token = "0x200024E")]
	public delegate void BankCallback(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie);

	[Token(Token = "0x200024F")]
	public class EventCallbackPackage
	{
		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bNotifyEndOfEvent;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventCallback m_Callback;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object m_Cookie;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_playingID;

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x10AF638", Offset = "0x10AF638", VA = "0x10AF638")]
		public static EventCallbackPackage Create(EventCallback in_cb, object in_cookie, ref uint io_Flags)
		{
			return null;
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x10AF74C", Offset = "0x10AF74C", VA = "0x10AF74C")]
		public EventCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000250")]
	public class BankCallbackPackage
	{
		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BankCallback m_Callback;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x10AF4D0", Offset = "0x10AF4D0", VA = "0x10AF4D0")]
		public BankCallbackPackage(BankCallback in_cb, object in_cookie)
		{
		}
	}

	[Token(Token = "0x2000251")]
	public delegate AKRESULT BGMCallback(bool in_bOtherAudioPlaying, object in_Cookie);

	[Token(Token = "0x2000252")]
	public class BGMCallbackPackage
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BGMCallback m_Callback;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x10AD858", Offset = "0x10AD858", VA = "0x10AD858")]
		public BGMCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000253")]
	public class InitializationSettings
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DefaultBufferSize;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool DefaultIsLoggingEnabled;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int BufferSize;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsLoggingEnabled;

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x10AC568", Offset = "0x10AC568", VA = "0x10AC568")]
		public InitializationSettings()
		{
		}
	}

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x780B00", Offset = "0x780B00")]
	private static bool <IsLoggingEnabled>k__BackingField;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AkEventCallbackInfo AkEventCallbackInfo;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AkDynamicSequenceItemCallbackInfo AkDynamicSequenceItemCallbackInfo;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkMIDIEventCallbackInfo AkMIDIEventCallbackInfo;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AkMarkerCallbackInfo AkMarkerCallbackInfo;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AkDurationCallbackInfo AkDurationCallbackInfo;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly AkMusicSyncCallbackInfo AkMusicSyncCallbackInfo;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly AkMusicPlaylistCallbackInfo AkMusicPlaylistCallbackInfo;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly AkAudioSourceChangeCallbackInfo AkAudioSourceChangeCallbackInfo;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly AkMonitoringCallbackInfo AkMonitoringCallbackInfo;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly AkBankCallbackInfo AkBankCallbackInfo;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly Dictionary<int, EventCallbackPackage> m_mapEventCallbacks;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Dictionary<int, BankCallbackPackage> m_mapBankCallbacks;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static EventCallbackPackage m_LastAddedEventPackage;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr m_pNotifMem;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static MonitoringCallback m_MonitoringCB;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static BGMCallbackPackage ms_sourceChangeCallbackPkg;

	[Token(Token = "0x17000163")]
	private static bool IsLoggingEnabled
	{
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x10ACB4C", Offset = "0x10ACB4C", VA = "0x10ACB4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784EF4", Offset = "0x784EF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x10ACBB4", Offset = "0x10ACBB4", VA = "0x10ACBB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784F04", Offset = "0x784F04")]
		set
		{
		}
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x10ACC24", Offset = "0x10ACC24", VA = "0x10ACC24")]
	public static void RemoveEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x10ACE60", Offset = "0x10ACE60", VA = "0x10ACE60")]
	public static void RemoveEventCallbackCookie(object in_cookie)
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x10AD0C0", Offset = "0x10AD0C0", VA = "0x10AD0C0")]
	public static void RemoveBankCallback(object in_cookie)
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x10AD320", Offset = "0x10AD320", VA = "0x10AD320")]
	public static void SetLastAddedPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x10AD3E8", Offset = "0x10AD3E8", VA = "0x10AD3E8")]
	public static AKRESULT Init(InitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x10AD590", Offset = "0x10AD590", VA = "0x10AD590")]
	public static void Term()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x10AD6CC", Offset = "0x10AD6CC", VA = "0x10AD6CC")]
	public static void SetMonitoringCallback(AkMonitorErrorLevel in_Level, MonitoringCallback in_CB)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x10AD7B8", Offset = "0x10AD7B8", VA = "0x10AD7B8")]
	public static void SetBGMCallback(BGMCallback in_CB, object in_cookie)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x10AD860", Offset = "0x10AD860", VA = "0x10AD860")]
	public static int PostCallbacks()
	{
		return default(int);
	}
}
[Token(Token = "0x200011C")]
public class AkBasePlatformSettings : ScriptableObject
{
	[Token(Token = "0x17000164")]
	public virtual AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x10AC458", Offset = "0x10AC458", VA = "0x10AC458", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000165")]
	public virtual AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x10AC4B4", Offset = "0x10AC4B4", VA = "0x10AC4B4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000166")]
	public virtual AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x10AC510", Offset = "0x10AC510", VA = "0x10AC510", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000167")]
	public virtual string InitialLanguage
	{
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x10AC5EC", Offset = "0x10AC5EC", VA = "0x10AC5EC", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000168")]
	public virtual bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x10AC634", Offset = "0x10AC634", VA = "0x10AC634", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000169")]
	public virtual string SoundbankPath
	{
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x10AC63C", Offset = "0x10AC63C", VA = "0x10AC63C", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016A")]
	public virtual AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x10AC6A4", Offset = "0x10AC6A4", VA = "0x10AC6A4", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016B")]
	public virtual bool UseAsyncOpen
	{
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x10AC780", Offset = "0x10AC780", VA = "0x10AC780", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x10AC788", Offset = "0x10AC788", VA = "0x10AC788")]
	public AkBasePlatformSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200011D")]
public class AkCommonOutputSettings
{
	[Token(Token = "0x2000254")]
	public enum PanningRule
	{
		[Token(Token = "0x4000B72")]
		Speakers,
		[Token(Token = "0x4000B73")]
		Headphones
	}

	[Serializable]
	[Token(Token = "0x2000255")]
	public class ChannelConfiguration
	{
		[Token(Token = "0x2000281")]
		public enum ChannelConfigType
		{
			[Token(Token = "0x4000BCE")]
			Anonymous,
			[Token(Token = "0x4000BCF")]
			Standard,
			[Token(Token = "0x4000BD0")]
			Ambisonic
		}

		[Token(Token = "0x2000282")]
		public enum ChannelMask
		{
			[Token(Token = "0x4000BD2")]
			NONE = 0,
			[Token(Token = "0x4000BD3")]
			FRONT_LEFT = 1,
			[Token(Token = "0x4000BD4")]
			FRONT_RIGHT = 2,
			[Token(Token = "0x4000BD5")]
			FRONT_CENTER = 4,
			[Token(Token = "0x4000BD6")]
			LOW_FREQUENCY = 8,
			[Token(Token = "0x4000BD7")]
			BACK_LEFT = 16,
			[Token(Token = "0x4000BD8")]
			BACK_RIGHT = 32,
			[Token(Token = "0x4000BD9")]
			BACK_CENTER = 256,
			[Token(Token = "0x4000BDA")]
			SIDE_LEFT = 512,
			[Token(Token = "0x4000BDB")]
			SIDE_RIGHT = 1024,
			[Token(Token = "0x4000BDC")]
			TOP = 2048,
			[Token(Token = "0x4000BDD")]
			HEIGHT_FRONT_LEFT = 4096,
			[Token(Token = "0x4000BDE")]
			HEIGHT_FRONT_CENTER = 8192,
			[Token(Token = "0x4000BDF")]
			HEIGHT_FRONT_RIGHT = 16384,
			[Token(Token = "0x4000BE0")]
			HEIGHT_BACK_LEFT = 32768,
			[Token(Token = "0x4000BE1")]
			HEIGHT_BACK_CENTER = 65536,
			[Token(Token = "0x4000BE2")]
			HEIGHT_BACK_RIGHT = 131072,
			[Token(Token = "0x4000BE3")]
			SETUP_MONO = 4,
			[Token(Token = "0x4000BE4")]
			SETUP_0POINT1 = 8,
			[Token(Token = "0x4000BE5")]
			SETUP_1POINT1 = 12,
			[Token(Token = "0x4000BE6")]
			SETUP_STEREO = 3,
			[Token(Token = "0x4000BE7")]
			SETUP_2POINT1 = 11,
			[Token(Token = "0x4000BE8")]
			SETUP_3STEREO = 7,
			[Token(Token = "0x4000BE9")]
			SETUP_3POINT1 = 15,
			[Token(Token = "0x4000BEA")]
			SETUP_4 = 1539,
			[Token(Token = "0x4000BEB")]
			SETUP_4POINT1 = 1547,
			[Token(Token = "0x4000BEC")]
			SETUP_5 = 1543,
			[Token(Token = "0x4000BED")]
			SETUP_5POINT1 = 1551,
			[Token(Token = "0x4000BEE")]
			SETUP_6 = 1587,
			[Token(Token = "0x4000BEF")]
			SETUP_6POINT1 = 1595,
			[Token(Token = "0x4000BF0")]
			SETUP_7 = 1591,
			[Token(Token = "0x4000BF1")]
			SETUP_7POINT1 = 1599,
			[Token(Token = "0x4000BF2")]
			SETUP_SURROUND = 259,
			[Token(Token = "0x4000BF3")]
			SETUP_DPL2 = 1539,
			[Token(Token = "0x4000BF4")]
			SETUP_HEIGHT_4 = 184320,
			[Token(Token = "0x4000BF5")]
			SETUP_HEIGHT_5 = 192512,
			[Token(Token = "0x4000BF6")]
			SETUP_HEIGHT_ALL = 258048,
			[Token(Token = "0x4000BF7")]
			SETUP_AURO_222 = 22019,
			[Token(Token = "0x4000BF8")]
			SETUP_AURO_8 = 185859,
			[Token(Token = "0x4000BF9")]
			SETUP_AURO_9 = 185863,
			[Token(Token = "0x4000BFA")]
			SETUP_AURO_9POINT1 = 185871,
			[Token(Token = "0x4000BFB")]
			SETUP_AURO_10 = 187911,
			[Token(Token = "0x4000BFC")]
			SETUP_AURO_10POINT1 = 187919,
			[Token(Token = "0x4000BFD")]
			SETUP_AURO_11 = 196103,
			[Token(Token = "0x4000BFE")]
			SETUP_AURO_11POINT1 = 196111,
			[Token(Token = "0x4000BFF")]
			SETUP_AURO_11_740 = 185911,
			[Token(Token = "0x4000C00")]
			SETUP_AURO_11POINT1_740 = 185919,
			[Token(Token = "0x4000C01")]
			SETUP_AURO_13_751 = 196151,
			[Token(Token = "0x4000C02")]
			SETUP_AURO_13POINT1_751 = 196159,
			[Token(Token = "0x4000C03")]
			SETUP_DOLBY_5_0_2 = 22023,
			[Token(Token = "0x4000C04")]
			SETUP_DOLBY_5_1_2 = 22031,
			[Token(Token = "0x4000C05")]
			SETUP_DOLBY_6_0_2 = 22067,
			[Token(Token = "0x4000C06")]
			SETUP_DOLBY_6_1_2 = 22075,
			[Token(Token = "0x4000C07")]
			SETUP_DOLBY_6_0_4 = 185907,
			[Token(Token = "0x4000C08")]
			SETUP_DOLBY_6_1_4 = 185915,
			[Token(Token = "0x4000C09")]
			SETUP_DOLBY_7_0_2 = 22071,
			[Token(Token = "0x4000C0A")]
			SETUP_DOLBY_7_1_2 = 22079,
			[Token(Token = "0x4000C0B")]
			SETUP_DOLBY_7_0_4 = 185911,
			[Token(Token = "0x4000C0C")]
			SETUP_DOLBY_7_1_4 = 185919,
			[Token(Token = "0x4000C0D")]
			SETUP_ALL_SPEAKERS = 261951
		}

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782C1C", Offset = "0x782C1C")]
		public ChannelConfigType m_ChannelConfigType;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782C54", Offset = "0x782C54")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x782C54", Offset = "0x782C54")]
		public ChannelMask m_ChannelMask;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782CDC", Offset = "0x782CDC")]
		public uint m_NumberOfChannels;

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x10B1AF4", Offset = "0x10B1AF4", VA = "0x10B1AF4")]
		public void CopyTo(AkChannelConfig config)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x10A5498", Offset = "0x10A5498", VA = "0x10A5498")]
		public ChannelConfiguration()
		{
		}
	}

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780B10", Offset = "0x780B10")]
	public string m_AudioDeviceShareset;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780B48", Offset = "0x780B48")]
	public uint m_DeviceID;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780B80", Offset = "0x780B80")]
	public PanningRule m_PanningRule;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780BB8", Offset = "0x780BB8")]
	public ChannelConfiguration m_ChannelConfig;

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x10B1A08", Offset = "0x10B1A08", VA = "0x10B1A08")]
	public void CopyTo(AkOutputSettings settings)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x10A5418", Offset = "0x10A5418", VA = "0x10A5418")]
	public AkCommonOutputSettings()
	{
	}
}
[Token(Token = "0x200011E")]
public class AkSettingsValidationHandler
{
	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xDA5BA8", Offset = "0xDA5BA8", VA = "0xDA5BA8", Slot = "4")]
	public virtual void Validate()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xDA5BAC", Offset = "0xDA5BAC", VA = "0xDA5BAC")]
	public AkSettingsValidationHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x200011F")]
public class AkCommonUserSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x2000256")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x2000283")]
		public enum DiffractionFlags
		{
			[Token(Token = "0x4000C0F")]
			UseBuiltInParam = 1,
			[Token(Token = "0x4000C10")]
			UseObstruction = 2,
			[Token(Token = "0x4000C11")]
			CalcEmitterVirtualPosition = 8
		}

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782D14", Offset = "0x782D14")]
		public uint m_PoolSize;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782D4C", Offset = "0x782D4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x782D4C", Offset = "0x782D4C")]
		public uint m_MaxSoundPropagationDepth;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782DA0", Offset = "0x782DA0")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x782DA0", Offset = "0x782DA0")]
		public DiffractionFlags m_DiffractionFlags;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782E28", Offset = "0x782E28")]
		public float m_MovementThreshold;

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x10B2178", Offset = "0x10B2178", VA = "0x10B2178")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780BF0", Offset = "0x780BF0")]
	public string m_BasePath;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780C28", Offset = "0x780C28")]
	public string m_StartupLanguage;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780C60", Offset = "0x780C60")]
	public uint m_PreparePoolSize;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780C98", Offset = "0x780C98")]
	public int m_CallbackManagerBufferSize;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780CD0", Offset = "0x780CD0")]
	public bool m_EngineLogging;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780D08", Offset = "0x780D08")]
	public uint m_MaximumNumberOfMemoryPools;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780D40", Offset = "0x780D40")]
	public uint m_MaximumNumberOfPositioningPaths;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780D78", Offset = "0x780D78")]
	public uint m_DefaultPoolSize;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780DB0", Offset = "0x780DB0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x780DB0", Offset = "0x780DB0")]
	public float m_MemoryCutoffThreshold;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780E04", Offset = "0x780E04")]
	public uint m_CommandQueueSize;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780E3C", Offset = "0x780E3C")]
	public uint m_SamplesPerFrame;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780E74", Offset = "0x780E74")]
	public AkCommonOutputSettings m_MainOutputSettings;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780EAC", Offset = "0x780EAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x780EAC", Offset = "0x780EAC")]
	public float m_StreamingLookAheadRatio;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780F00", Offset = "0x780F00")]
	public uint m_StreamManagerPoolSize;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780F38", Offset = "0x780F38")]
	public uint m_SampleRate;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780F70", Offset = "0x780F70")]
	public uint m_LowerEnginePoolSize;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780FA8", Offset = "0x780FA8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x780FA8", Offset = "0x780FA8")]
	public float m_LowerEngineMemoryCutoffThreshold;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x780FFC", Offset = "0x780FFC")]
	public ushort m_NumberOfRefillsInVoice;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781034", Offset = "0x781034")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x10B1D48", Offset = "0x10B1D48", VA = "0x10B1D48")]
	public void CopyTo(AkMemSettings settings)
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x10B1FBC", Offset = "0x10B1FBC", VA = "0x10B1FBC")]
	protected static string GetPluginPath()
	{
		return null;
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x10B1FC4", Offset = "0x10B1FC4", VA = "0x10B1FC4", Slot = "5")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x10B1D90", Offset = "0x10B1D90", VA = "0x10B1D90")]
	public void CopyTo(AkMusicSettings settings)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x10B1D6C", Offset = "0x10B1D6C", VA = "0x10B1D6C")]
	public void CopyTo(AkStreamMgrSettings settings)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x10B2068", Offset = "0x10B2068", VA = "0x10B2068", Slot = "6")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x10B206C", Offset = "0x10B206C", VA = "0x10B206C", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x10B20D0", Offset = "0x10B20D0", VA = "0x10B20D0", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x10B2154", Offset = "0x10B2154", VA = "0x10B2154", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x10B2158", Offset = "0x10B2158", VA = "0x10B2158", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x10A5310", Offset = "0x10A5310", VA = "0x10A5310")]
	public AkCommonUserSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000120")]
public class AkCommonAdvancedSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x2000257")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782E60", Offset = "0x782E60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x782E60", Offset = "0x782E60")]
		public float m_DiffractionShadowAttenuationFactor;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782EB4", Offset = "0x782EB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x782EB4", Offset = "0x782EB4")]
		public float m_DiffractionShadowDegrees;

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x10B15A4", Offset = "0x10B15A4", VA = "0x10B15A4")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x78106C", Offset = "0x78106C")]
	public uint m_IOMemorySize;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7810A4", Offset = "0x7810A4")]
	public float m_TargetAutoStreamBufferLengthMs;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7810DC", Offset = "0x7810DC")]
	public bool m_UseStreamCache;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781114", Offset = "0x781114")]
	public uint m_MaximumPinnedBytesInCache;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x78114C", Offset = "0x78114C")]
	public int m_PrepareEventMemoryPoolID;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781184", Offset = "0x781184")]
	public bool m_EnableGameSyncPreparation;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7811BC", Offset = "0x7811BC")]
	public uint m_ContinuousPlaybackLookAhead;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7811F4", Offset = "0x7811F4")]
	public uint m_MonitorPoolSize;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x78122C", Offset = "0x78122C")]
	public uint m_MonitorQueuePoolSize;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781264", Offset = "0x781264")]
	public uint m_MaximumHardwareTimeoutMs;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x78129C", Offset = "0x78129C")]
	public bool m_DebugOutOfRangeCheckEnabled;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7812D4", Offset = "0x7812D4")]
	public float m_DebugOutOfRangeLimit;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x78130C", Offset = "0x78130C")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781344", Offset = "0x781344")]
	public bool m_RenderDuringFocusLoss;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x78137C", Offset = "0x78137C")]
	public bool m_UseAsyncOpen;

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x10B116C", Offset = "0x10B116C", VA = "0x10B116C", Slot = "5")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x10B13B0", Offset = "0x10B13B0", VA = "0x10B13B0", Slot = "6")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x10B1454", Offset = "0x10B1454", VA = "0x10B1454", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x10B1458", Offset = "0x10B1458", VA = "0x10B1458", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x10B14AC", Offset = "0x10B14AC", VA = "0x10B14AC", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x10B14B0", Offset = "0x10B14B0", VA = "0x10B14B0", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x10A553C", Offset = "0x10A553C", VA = "0x10A553C")]
	public AkCommonAdvancedSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000121")]
public class AkCommonCommSettings : AkSettingsValidationHandler
{
	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7813B4", Offset = "0x7813B4")]
	public uint m_PoolSize;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ushort DefaultDiscoveryBroadcastPort;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7813EC", Offset = "0x7813EC")]
	public ushort m_DiscoveryBroadcastPort;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781424", Offset = "0x781424")]
	public ushort m_CommandPort;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x78145C", Offset = "0x78145C")]
	public ushort m_NotificationPort;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781494", Offset = "0x781494")]
	public bool m_InitializeSystemComms;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7814CC", Offset = "0x7814CC")]
	public string m_NetworkName;

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x10B15B8", Offset = "0x10B15B8", VA = "0x10B15B8", Slot = "5")]
	public virtual void CopyTo(AkCommunicationSettings settings)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x10B192C", Offset = "0x10B192C", VA = "0x10B192C")]
	public AkCommonCommSettings()
	{
	}
}
[Token(Token = "0x2000122")]
public abstract class AkCommonPlatformSettings : AkBasePlatformSettings
{
	[Token(Token = "0x1700016C")]
	public override AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x10B1B68", Offset = "0x10B1B68", VA = "0x10B1B68", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016D")]
	public override AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x10B1DB0", Offset = "0x10B1DB0", VA = "0x10B1DB0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016E")]
	public override AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x10B1E28", Offset = "0x10B1E28", VA = "0x10B1E28", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016F")]
	public override string InitialLanguage
	{
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x10B1EB8", Offset = "0x10B1EB8", VA = "0x10B1EB8", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000170")]
	public override bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x10B1EE0", Offset = "0x10B1EE0", VA = "0x10B1EE0", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000171")]
	public override string SoundbankPath
	{
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x10B1F0C", Offset = "0x10B1F0C", VA = "0x10B1F0C", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000172")]
	public override bool UseAsyncOpen
	{
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x10B1F34", Offset = "0x10B1F34", VA = "0x10B1F34", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000173")]
	public override AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x10B1F60", Offset = "0x10B1F60", VA = "0x10B1F60", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E1E")]
	protected abstract AkCommonUserSettings GetUserSettings();

	[Token(Token = "0x6000E1F")]
	protected abstract AkCommonAdvancedSettings GetAdvancedSettings();

	[Token(Token = "0x6000E20")]
	protected abstract AkCommonCommSettings GetCommsSettings();

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x10B1FB4", Offset = "0x10B1FB4", VA = "0x10B1FB4")]
	protected AkCommonPlatformSettings()
	{
	}
}
[Token(Token = "0x2000123")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x77C79C", Offset = "0x77C79C")]
public class AkEnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type Type;

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x10B5A1C", Offset = "0x10B5A1C", VA = "0x10B5A1C")]
	public AkEnumFlagAttribute(Type type)
	{
	}
}
[Token(Token = "0x2000124")]
public class AkLogger
{
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x77D944", Offset = "0x77D944")]
	public delegate void ErrorLoggerInteropDelegate(string message);

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkLogger ms_Instance;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ErrorLoggerInteropDelegate errorLoggerDelegate;

	[Token(Token = "0x17000174")]
	public static AkLogger Instance
	{
		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x11FCED4", Offset = "0x11FCED4", VA = "0x11FCED4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x11FCDC4", Offset = "0x11FCDC4", VA = "0x11FCDC4")]
	private AkLogger()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x11FCF3C", Offset = "0x11FCF3C", VA = "0x11FCF3C", Slot = "1")]
	~AkLogger()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x11FD044", Offset = "0x11FD044", VA = "0x11FD044")]
	public void Init()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x11FCD3C", Offset = "0x11FCD3C", VA = "0x11FCD3C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x784F14", Offset = "0x784F14")]
	public static void WwiseInternalLogError(string message)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x11FD048", Offset = "0x11FD048", VA = "0x11FD048")]
	public static void Message(string message)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x11FD0D0", Offset = "0x11FD0D0", VA = "0x11FD0D0")]
	public static void Warning(string message)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x11FD158", Offset = "0x11FD158", VA = "0x11FD158")]
	public static void Error(string message)
	{
	}
}
[Token(Token = "0x2000125")]
public static class AkRoomPortalManager
{
	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<AkRoom> m_UpdatedRooms;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<AkRoomPortal> m_Portals;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly List<AkRoomPortal> m_PortalsToUpdate;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x120FDBC", Offset = "0x120FDBC", VA = "0x120FDBC")]
	public static void RegisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x1210024", Offset = "0x1210024", VA = "0x1210024")]
	public static void UnregisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x120F258", Offset = "0x120F258", VA = "0x120F258")]
	public static void RegisterPortalUpdate(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x120E140", Offset = "0x120E140", VA = "0x120E140")]
	public static void RegisterRoomUpdate(AkRoom room)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x121061C", Offset = "0x121061C", VA = "0x121061C")]
	public static void UpdatePortals()
	{
	}
}
[Token(Token = "0x2000126")]
public class AkShowOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xDA5BB4", Offset = "0xDA5BB4", VA = "0xDA5BB4")]
	public AkShowOnlyAttribute()
	{
	}
}
[Token(Token = "0x2000127")]
public class AkUtilities
{
	[Token(Token = "0x2000259")]
	public class ShortIDGenerator
	{
		[Token(Token = "0x4000B7D")]
		private const uint s_prime32 = 16777619u;

		[Token(Token = "0x4000B7E")]
		private const uint s_offsetBasis32 = 2166136261u;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte s_hashSize;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint s_mask;

		[Token(Token = "0x17000292")]
		public static byte HashSize
		{
			[Token(Token = "0x6001434")]
			[Address(RVA = "0xD6097C", Offset = "0xD6097C", VA = "0xD6097C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001435")]
			[Address(RVA = "0xD608F4", Offset = "0xD608F4", VA = "0xD608F4")]
			set
			{
			}
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xD608EC", Offset = "0xD608EC", VA = "0xD608EC")]
		static ShortIDGenerator()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xD5F080", Offset = "0xD5F080", VA = "0xD5F080")]
		public static uint Compute(string in_name)
		{
			return default(uint);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xD609E4", Offset = "0xD609E4", VA = "0xD609E4")]
		public ShortIDGenerator()
		{
		}
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xD608E4", Offset = "0xD608E4", VA = "0xD608E4")]
	public AkUtilities()
	{
	}
}
[Token(Token = "0x2000128")]
public class AkWwiseInitializationSettings : AkCommonPlatformSettings
{
	[Token(Token = "0x200025A")]
	public abstract class PlatformSettings : AkCommonPlatformSettings
	{
		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private List<string> IgnorePropertyNameList;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private List<string> GlobalPropertyNameList;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<string> _GlobalPropertyHashSet;

		[Token(Token = "0x17000293")]
		public HashSet<string> GlobalPropertyHashSet
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0xD63938", Offset = "0xD63938", VA = "0xD63938")]
			get
			{
				return null;
			}
			[Token(Token = "0x600143F")]
			[Address(RVA = "0xD639BC", Offset = "0xD639BC", VA = "0xD639BC")]
			set
			{
			}
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xD63474", Offset = "0xD63474", VA = "0xD63474")]
		public void IgnorePropertyValue(string propertyPath)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xD6350C", Offset = "0xD6350C", VA = "0xD6350C")]
		public bool IsPropertyIgnored(string propertyPath)
		{
			return default(bool);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xD6179C", Offset = "0xD6179C", VA = "0xD6179C")]
		protected PlatformSettings()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xD63574", Offset = "0xD63574", VA = "0xD63574")]
		public void SetUseGlobalPropertyValue(string propertyPath, bool use)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xD63618", Offset = "0xD63618", VA = "0xD63618")]
		public void SetGlobalPropertyValues(IEnumerable enumerable)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xD638D0", Offset = "0xD638D0", VA = "0xD638D0")]
		private bool IsUsingGlobalPropertyValue(string propertyPath)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200025B")]
	public class CommonPlatformSettings : PlatformSettings
	{
		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public AkCommonUserSettings UserSettings;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public AkCommonAdvancedSettings AdvancedSettings;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AkCommonCommSettings CommsSettings;

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xD63458", Offset = "0xD63458", VA = "0xD63458", Slot = "12")]
		protected override AkCommonUserSettings GetUserSettings()
		{
			return null;
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xD63460", Offset = "0xD63460", VA = "0xD63460", Slot = "13")]
		protected override AkCommonAdvancedSettings GetAdvancedSettings()
		{
			return null;
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xD63468", Offset = "0xD63468", VA = "0xD63468", Slot = "14")]
		protected override AkCommonCommSettings GetCommsSettings()
		{
			return null;
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xD63470", Offset = "0xD63470", VA = "0xD63470")]
		public CommonPlatformSettings()
		{
		}
	}

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<string> PlatformSettingsNameList;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<PlatformSettings> PlatformSettingsList;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<string> InvalidReferencePlatforms;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AkCommonAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] AllGlobalValues;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AkWwiseInitializationSettings m_Instance;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AkBasePlatformSettings m_ActivePlatformSettings;

	[Token(Token = "0x17000175")]
	public bool IsValid
	{
		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xD6187C", Offset = "0xD6187C", VA = "0xD6187C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000176")]
	public int Count
	{
		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xD618E0", Offset = "0xD618E0", VA = "0xD618E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000177")]
	public static AkWwiseInitializationSettings Instance
	{
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xD61948", Offset = "0xD61948", VA = "0xD61948")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000178")]
	public static AkBasePlatformSettings ActivePlatformSettings
	{
		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xD61C2C", Offset = "0xD61C2C", VA = "0xD61C2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xD61930", Offset = "0xD61930", VA = "0xD61930", Slot = "12")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xD61938", Offset = "0xD61938", VA = "0xD61938", Slot = "13")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xD61940", Offset = "0xD61940", VA = "0xD61940", Slot = "14")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xD61A7C", Offset = "0xD61A7C", VA = "0xD61A7C")]
	private static AkBasePlatformSettings GetPlatformSettings(string platformName)
	{
		return null;
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xD61D54", Offset = "0xD61D54", VA = "0xD61D54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xD61EB8", Offset = "0xD61EB8", VA = "0xD61EB8")]
	public static bool InitializeSoundEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xD624F8", Offset = "0xD624F8", VA = "0xD624F8")]
	public static bool ResetSoundEngine(bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xD62600", Offset = "0xD62600", VA = "0xD62600")]
	public static void TerminateSoundEngine()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xD627B4", Offset = "0xD627B4", VA = "0xD627B4")]
	private static void SleepForMilliseconds(double milliseconds)
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xD62908", Offset = "0xD62908", VA = "0xD62908")]
	public AkWwiseInitializationSettings()
	{
	}
}
[Token(Token = "0x2000129")]
public class AkAcousticSurfaceArray : AkBaseArray<AkAcousticSurface>
{
	[Token(Token = "0x17000179")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x10A3F4C", Offset = "0x10A3F4C", VA = "0x10A3F4C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x10A3EEC", Offset = "0x10A3EEC", VA = "0x10A3EEC")]
	public AkAcousticSurfaceArray(int count)
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x10A3FAC", Offset = "0x10A3FAC", VA = "0x10A3FAC", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x10A4014", Offset = "0x10A4014", VA = "0x10A4014", Slot = "9")]
	protected override AkAcousticSurface CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x10A407C", Offset = "0x10A407C", VA = "0x10A407C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x200012A")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x77C7D4", Offset = "0x77C7D4")]
public class AkAuxSendArray : IDisposable
{
	[Token(Token = "0x400078B")]
	private const int MAX_COUNT = 4;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int SIZE_OF_AKAUXSENDVALUE;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_Count;

	[Token(Token = "0x1700017A")]
	public AkAuxSendValue Item
	{
		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x10A9344", Offset = "0x10A9344", VA = "0x10A9344")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017B")]
	public bool isFull
	{
		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x10A94A4", Offset = "0x10A94A4", VA = "0x10A94A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x10A9294", Offset = "0x10A9294", VA = "0x10A9294")]
	public AkAuxSendArray()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x10A950C", Offset = "0x10A950C", VA = "0x10A950C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x10A9598", Offset = "0x10A9598", VA = "0x10A9598", Slot = "1")]
	~AkAuxSendArray()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x10A9600", Offset = "0x10A9600", VA = "0x10A9600")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x10A9608", Offset = "0x10A9608", VA = "0x10A9608")]
	public bool Add(GameObject in_listenerGameObj, uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x10A9720", Offset = "0x10A9720", VA = "0x10A9720")]
	public bool Add(uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x10A9800", Offset = "0x10A9800", VA = "0x10A9800")]
	public bool Contains(GameObject in_listenerGameObj, uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x10A9940", Offset = "0x10A9940", VA = "0x10A9940")]
	public bool Contains(uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x10A9A38", Offset = "0x10A9A38", VA = "0x10A9A38")]
	public AKRESULT SetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x10A9AF0", Offset = "0x10A9AF0", VA = "0x10A9AF0")]
	public AKRESULT GetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x10A9BB8", Offset = "0x10A9BB8", VA = "0x10A9BB8")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x10A9BC0", Offset = "0x10A9BC0", VA = "0x10A9BC0")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x10A9428", Offset = "0x10A9428", VA = "0x10A9428")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200012B")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x77C80C", Offset = "0x77C80C")]
public abstract class AkBaseArray<T> : IDisposable
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x781564", Offset = "0x781564")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IntPtr m_Buffer;

	[Token(Token = "0x1700017C")]
	public int Capacity
	{
		[Token(Token = "0x6000E62")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784F78", Offset = "0x784F78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E63")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784F88", Offset = "0x784F88")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	protected abstract int StructureSize
	{
		[Token(Token = "0x6000E65")]
		get;
	}

	[Token(Token = "0x1700017E")]
	public T Item
	{
		[Token(Token = "0x6000E6A")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000E6B")]
		set
		{
		}
	}

	[Token(Token = "0x6000E5F")]
	public AkBaseArray(int capacity)
	{
	}

	[Token(Token = "0x6000E60")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000E61")]
	~AkBaseArray()
	{
	}

	[Token(Token = "0x6000E64")]
	public virtual int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000E66")]
	protected virtual void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E67")]
	protected virtual void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E68")]
	protected abstract T CreateNewReferenceFromIntPtr(IntPtr address);

	[Token(Token = "0x6000E69")]
	protected abstract void CloneIntoReferenceFromIntPtr(IntPtr address, T other);

	[Token(Token = "0x6000E6C")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000E6D")]
	protected IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200012C")]
public class AkChannelEmitterArray : IDisposable
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x781574", Offset = "0x781574")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x1700017F")]
	public uint Count
	{
		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x10B0C70", Offset = "0x10B0C70", VA = "0x10B0C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784F98", Offset = "0x784F98")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x10B0C78", Offset = "0x10B0C78", VA = "0x10B0C78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784FA8", Offset = "0x784FA8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x10B0BE0", Offset = "0x10B0BE0", VA = "0x10B0BE0")]
	public AkChannelEmitterArray(uint in_Count)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x10B0C80", Offset = "0x10B0C80", VA = "0x10B0C80", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x10B0D0C", Offset = "0x10B0D0C", VA = "0x10B0D0C", Slot = "1")]
	~AkChannelEmitterArray()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x10B0D74", Offset = "0x10B0D74", VA = "0x10B0D74")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x10B0D84", Offset = "0x10B0D84", VA = "0x10B0D84")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top, uint in_ChannelMask)
	{
	}
}
[Token(Token = "0x200012D")]
public class AkDiffractionPathInfoArray : AkBaseArray<AkDiffractionPathInfo>
{
	[Token(Token = "0x17000180")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x10B3D58", Offset = "0x10B3D58", VA = "0x10B3D58", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x10B3CF8", Offset = "0x10B3CF8", VA = "0x10B3CF8")]
	public AkDiffractionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x10B3DB8", Offset = "0x10B3DB8", VA = "0x10B3DB8", Slot = "9")]
	protected override AkDiffractionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x10B3E20", Offset = "0x10B3E20", VA = "0x10B3E20", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x200012E")]
public class AkExternalSourceInfoArray : AkBaseArray<AkExternalSourceInfo>
{
	[Token(Token = "0x17000181")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x10B887C", Offset = "0x10B887C", VA = "0x10B887C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x10B881C", Offset = "0x10B881C", VA = "0x10B881C")]
	public AkExternalSourceInfoArray(int count)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x10B88DC", Offset = "0x10B88DC", VA = "0x10B88DC", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x10B8944", Offset = "0x10B8944", VA = "0x10B8944", Slot = "8")]
	protected override void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x10B89B0", Offset = "0x10B89B0", VA = "0x10B89B0", Slot = "9")]
	protected override AkExternalSourceInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x10B8A18", Offset = "0x10B8A18", VA = "0x10B8A18", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkExternalSourceInfo other)
	{
	}
}
[Token(Token = "0x200012F")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x77C844", Offset = "0x77C844")]
public class AkMIDIPostArray
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int m_Count;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly int SIZE_OF;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x17000182")]
	public AkMIDIPost Item
	{
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x1201CD4", Offset = "0x1201CD4", VA = "0x1201CD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x1201DF0", Offset = "0x1201DF0", VA = "0x1201DF0")]
		set
		{
		}
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x1201C14", Offset = "0x1201C14", VA = "0x1201C14")]
	public AkMIDIPostArray(int size)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x1201F04", Offset = "0x1201F04", VA = "0x1201F04", Slot = "1")]
	~AkMIDIPostArray()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x1201FC0", Offset = "0x1201FC0", VA = "0x1201FC0")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x120208C", Offset = "0x120208C", VA = "0x120208C")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject, int count)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x12021A8", Offset = "0x12021A8", VA = "0x12021A8")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x12021B0", Offset = "0x12021B0", VA = "0x12021B0")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x1201DB4", Offset = "0x1201DB4", VA = "0x1201DB4")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x2000130")]
public class AkObjectInfoArray : AkBaseArray<AkObjectInfo>
{
	[Token(Token = "0x17000183")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x120515C", Offset = "0x120515C", VA = "0x120515C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x12050FC", Offset = "0x12050FC", VA = "0x12050FC")]
	public AkObjectInfoArray(int count)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x12051BC", Offset = "0x12051BC", VA = "0x12051BC", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x1205224", Offset = "0x1205224", VA = "0x1205224", Slot = "9")]
	protected override AkObjectInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x120528C", Offset = "0x120528C", VA = "0x120528C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObjectInfo other)
	{
	}
}
[Token(Token = "0x2000131")]
public class AkObstructionOcclusionValuesArray : AkBaseArray<AkObstructionOcclusionValues>
{
	[Token(Token = "0x17000184")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x12062F8", Offset = "0x12062F8", VA = "0x12062F8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x1206298", Offset = "0x1206298", VA = "0x1206298")]
	public AkObstructionOcclusionValuesArray(int count)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x1206358", Offset = "0x1206358", VA = "0x1206358", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x12063C0", Offset = "0x12063C0", VA = "0x12063C0", Slot = "9")]
	protected override AkObstructionOcclusionValues CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x1206428", Offset = "0x1206428", VA = "0x1206428", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObstructionOcclusionValues other)
	{
	}
}
[Token(Token = "0x2000132")]
public class AkPositionArray : IDisposable
{
	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x781584", Offset = "0x781584")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x17000185")]
	public uint Count
	{
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x120A448", Offset = "0x120A448", VA = "0x120A448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784FB8", Offset = "0x784FB8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x120A450", Offset = "0x120A450", VA = "0x120A450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784FC8", Offset = "0x784FC8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x120A3B8", Offset = "0x120A3B8", VA = "0x120A3B8")]
	public AkPositionArray(uint in_Count)
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x120A458", Offset = "0x120A458", VA = "0x120A458", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x120A4E4", Offset = "0x120A4E4", VA = "0x120A4E4", Slot = "1")]
	~AkPositionArray()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x120A54C", Offset = "0x120A54C", VA = "0x120A54C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x120A55C", Offset = "0x120A55C", VA = "0x120A55C")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top)
	{
	}
}
[Token(Token = "0x2000133")]
public class AkReflectionPathInfoArray : AkBaseArray<AkReflectionPathInfo>
{
	[Token(Token = "0x17000186")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x120D770", Offset = "0x120D770", VA = "0x120D770", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x120D710", Offset = "0x120D710", VA = "0x120D710")]
	public AkReflectionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x120D7D0", Offset = "0x120D7D0", VA = "0x120D7D0", Slot = "9")]
	protected override AkReflectionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x120D838", Offset = "0x120D838", VA = "0x120D838", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x2000134")]
public class AkSourceSettingsArray : AkBaseArray<AkSourceSettings>
{
	[Token(Token = "0x17000187")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xD59DA0", Offset = "0xD59DA0", VA = "0xD59DA0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xD59D40", Offset = "0xD59D40", VA = "0xD59D40")]
	public AkSourceSettingsArray(int count)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xD59E00", Offset = "0xD59E00", VA = "0xD59E00", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xD59E68", Offset = "0xD59E68", VA = "0xD59E68", Slot = "9")]
	protected override AkSourceSettings CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xD59ED0", Offset = "0xD59ED0", VA = "0xD59ED0", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkSourceSettings other)
	{
	}
}
[Token(Token = "0x2000135")]
public class AkTriangleArray : AkBaseArray<AkTriangle>
{
	[Token(Token = "0x17000188")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xD5EBD0", Offset = "0xD5EBD0", VA = "0xD5EBD0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xD5C944", Offset = "0xD5C944", VA = "0xD5C944")]
	public AkTriangleArray(int count)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xD5EC30", Offset = "0xD5EC30", VA = "0xD5EC30", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xD5EC98", Offset = "0xD5EC98", VA = "0xD5EC98", Slot = "9")]
	protected override AkTriangle CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xD5ED00", Offset = "0xD5ED00", VA = "0xD5ED00", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkTriangle other)
	{
	}
}
[Token(Token = "0x2000136")]
public class AkVertexArray : AkBaseArray<AkVertex>
{
	[Token(Token = "0x17000189")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xD615AC", Offset = "0xD615AC", VA = "0xD615AC", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xD5C770", Offset = "0xD5C770", VA = "0xD5C770")]
	public AkVertexArray(int count)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xD6160C", Offset = "0xD6160C", VA = "0xD6160C", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xD61674", Offset = "0xD61674", VA = "0xD61674", Slot = "9")]
	protected override AkVertex CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xD616DC", Offset = "0xD616DC", VA = "0xD616DC", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkVertex other)
	{
	}
}
[Token(Token = "0x2000137")]
public class WwiseAcousticTextureReference : WwiseObjectReference
{
	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700018A")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x14CE0AC", Offset = "0x14CE0AC", VA = "0x14CE0AC", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x14CE114", Offset = "0x14CE114", VA = "0x14CE114")]
	public WwiseAcousticTextureReference()
	{
	}
}
[Token(Token = "0x2000138")]
public class WwiseAuxBusReference : WwiseObjectReference
{
	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700018B")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x14CE1D8", Offset = "0x14CE1D8", VA = "0x14CE1D8", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x14CE240", Offset = "0x14CE240", VA = "0x14CE240")]
	public WwiseAuxBusReference()
	{
	}
}
[Token(Token = "0x2000139")]
public class WwiseBankReference : WwiseObjectReference
{
	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700018C")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x14CE298", Offset = "0x14CE298", VA = "0x14CE298", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x14CE300", Offset = "0x14CE300", VA = "0x14CE300")]
	public WwiseBankReference()
	{
	}
}
[Token(Token = "0x200013A")]
public class WwiseEventReference : WwiseObjectReference
{
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700018D")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x14CE358", Offset = "0x14CE358", VA = "0x14CE358", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x14CE3C0", Offset = "0x14CE3C0", VA = "0x14CE3C0")]
	public WwiseEventReference()
	{
	}
}
[Token(Token = "0x200013B")]
public abstract class WwiseObjectReference : ScriptableObject
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AkShowOnly]
	[SerializeField]
	private string objectName;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AkShowOnly]
	[SerializeField]
	private uint id;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AkShowOnly]
	[SerializeField]
	private string guid;

	[Token(Token = "0x1700018E")]
	public Guid Guid
	{
		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x14CE4D4", Offset = "0x14CE4D4", VA = "0x14CE4D4")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x1700018F")]
	public string ObjectName
	{
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x14CE578", Offset = "0x14CE578", VA = "0x14CE578")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000190")]
	public virtual string DisplayName
	{
		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x14CE580", Offset = "0x14CE580", VA = "0x14CE580", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000191")]
	public uint Id
	{
		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x14CE588", Offset = "0x14CE588", VA = "0x14CE588")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000192")]
	public abstract WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EBC")]
		get;
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x14CE118", Offset = "0x14CE118", VA = "0x14CE118")]
	protected WwiseObjectReference()
	{
	}
}
[Token(Token = "0x200013C")]
public abstract class WwiseGroupValueObjectReference : WwiseObjectReference
{
	[Token(Token = "0x17000193")]
	public abstract WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6000EBE")]
		get;
		[Token(Token = "0x6000EBF")]
		set;
	}

	[Token(Token = "0x17000194")]
	public abstract WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6000EC0")]
		get;
	}

	[Token(Token = "0x17000195")]
	public override string DisplayName
	{
		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x14CE418", Offset = "0x14CE418", VA = "0x14CE418", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x14CE4D0", Offset = "0x14CE4D0", VA = "0x14CE4D0")]
	protected WwiseGroupValueObjectReference()
	{
	}
}
[Token(Token = "0x200013D")]
public enum WwiseObjectType
{
	[Token(Token = "0x40007A4")]
	None,
	[Token(Token = "0x40007A5")]
	AuxBus,
	[Token(Token = "0x40007A6")]
	Bus,
	[Token(Token = "0x40007A7")]
	Event,
	[Token(Token = "0x40007A8")]
	Folder,
	[Token(Token = "0x40007A9")]
	PhysicalFolder,
	[Token(Token = "0x40007AA")]
	Project,
	[Token(Token = "0x40007AB")]
	Soundbank,
	[Token(Token = "0x40007AC")]
	State,
	[Token(Token = "0x40007AD")]
	StateGroup,
	[Token(Token = "0x40007AE")]
	Switch,
	[Token(Token = "0x40007AF")]
	SwitchGroup,
	[Token(Token = "0x40007B0")]
	WorkUnit,
	[Token(Token = "0x40007B1")]
	GameParameter,
	[Token(Token = "0x40007B2")]
	Trigger,
	[Token(Token = "0x40007B3")]
	AcousticTexture
}
[Token(Token = "0x200013E")]
public class WwiseRtpcReference : WwiseObjectReference
{
	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000196")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x14CE6A0", Offset = "0x14CE6A0", VA = "0x14CE6A0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x14CE708", Offset = "0x14CE708", VA = "0x14CE708")]
	public WwiseRtpcReference()
	{
	}
}
[Token(Token = "0x200013F")]
public class WwiseStateGroupReference : WwiseObjectReference
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000197")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x14CE760", Offset = "0x14CE760", VA = "0x14CE760", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x14CE7C8", Offset = "0x14CE7C8", VA = "0x14CE7C8")]
	public WwiseStateGroupReference()
	{
	}
}
[Token(Token = "0x2000140")]
public class WwiseStateReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseStateGroupReference WwiseStateGroupReference;

	[Token(Token = "0x17000198")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x14CE820", Offset = "0x14CE820", VA = "0x14CE820", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x17000199")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x14CE888", Offset = "0x14CE888", VA = "0x14CE888", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x14CE890", Offset = "0x14CE890", VA = "0x14CE890", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700019A")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x14CE920", Offset = "0x14CE920", VA = "0x14CE920", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x14CE988", Offset = "0x14CE988", VA = "0x14CE988")]
	public WwiseStateReference()
	{
	}
}
[Token(Token = "0x2000141")]
public class WwiseSwitchGroupReference : WwiseObjectReference
{
	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700019B")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x14CE9F0", Offset = "0x14CE9F0", VA = "0x14CE9F0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x14CEA58", Offset = "0x14CEA58", VA = "0x14CEA58")]
	public WwiseSwitchGroupReference()
	{
	}
}
[Token(Token = "0x2000142")]
public class WwiseSwitchReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseSwitchGroupReference WwiseSwitchGroupReference;

	[Token(Token = "0x1700019C")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x14CEAB0", Offset = "0x14CEAB0", VA = "0x14CEAB0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x1700019D")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x14CEB18", Offset = "0x14CEB18", VA = "0x14CEB18", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x14CEB20", Offset = "0x14CEB20", VA = "0x14CEB20", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x14CEBB0", Offset = "0x14CEBB0", VA = "0x14CEBB0", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x14CEC18", Offset = "0x14CEC18", VA = "0x14CEC18")]
	public WwiseSwitchReference()
	{
	}
}
[Token(Token = "0x2000143")]
public class WwiseTriggerReference : WwiseObjectReference
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700019F")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x14CEC80", Offset = "0x14CEC80", VA = "0x14CEC80", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x14CECE8", Offset = "0x14CECE8", VA = "0x14CECE8")]
	public WwiseTriggerReference()
	{
	}
}
[Token(Token = "0x2000144")]
public class AkMacSettings : AkWwiseInitializationSettings.CommonPlatformSettings
{
	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x12021B8", Offset = "0x12021B8", VA = "0x12021B8")]
	public AkMacSettings()
	{
	}
}
[Token(Token = "0x2000145")]
public class AkWindowsSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x200025C")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x2000284")]
		public enum AudioAPI
		{
			[Token(Token = "0x4000C13")]
			None = 0,
			[Token(Token = "0x4000C14")]
			Wasapi = 1,
			[Token(Token = "0x4000C15")]
			XAudio2 = 2,
			[Token(Token = "0x4000C16")]
			DirectSound = 4,
			[Token(Token = "0x4000C17")]
			Default = -1
		}

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782FB0", Offset = "0x782FB0")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x782FB0", Offset = "0x782FB0")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x783038", Offset = "0x783038")]
		public bool m_GlobalFocus;

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xD61860", Offset = "0xD61860", VA = "0xD61860", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xD61864", Offset = "0xD61864", VA = "0xD61864")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xD61780", Offset = "0xD61780", VA = "0xD61780", Slot = "12")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xD61788", Offset = "0xD61788", VA = "0xD61788", Slot = "13")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xD61790", Offset = "0xD61790", VA = "0xD61790", Slot = "14")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xD61798", Offset = "0xD61798", VA = "0xD61798")]
	public AkWindowsSettings()
	{
	}
}
[Token(Token = "0x2000146")]
public enum MultiPositionTypeLabel
{
	[Token(Token = "0x40007C2")]
	Simple_Mode,
	[Token(Token = "0x40007C3")]
	Large_Mode,
	[Token(Token = "0x40007C4")]
	MultiPosition_Mode
}
[Token(Token = "0x2000147")]
public class AkMultiPosEvent
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool eventIsPlaying;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AkAmbient> list;

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x120382C", Offset = "0x120382C", VA = "0x120382C")]
	public void FinishedPlaying(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x1203834", Offset = "0x1203834", VA = "0x1203834")]
	public AkMultiPosEvent()
	{
	}
}
[Token(Token = "0x2000148")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77C87C", Offset = "0x77C87C")]
public class AkAmbient : AkEvent
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, AkMultiPosEvent> multiPosEventTree;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AkMultiPositionType MultiPositionType;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public MultiPositionTypeLabel multiPositionTypeLabel;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AkAmbientLargeModePositioner[] LargeModePositions;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	[SerializeField]
	public List<Vector3> multiPositionArray;

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x10A4120", Offset = "0x10A4120", VA = "0x10A4120")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x10A4584", Offset = "0x10A4584", VA = "0x10A4584", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x10A4A34", Offset = "0x10A4A34", VA = "0x10A4A34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x10A4BFC", Offset = "0x10A4BFC", VA = "0x10A4BFC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x10A4FF8", Offset = "0x10A4FF8", VA = "0x10A4FF8")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x10A43C4", Offset = "0x10A43C4", VA = "0x10A43C4")]
	public AkPositionArray BuildMultiDirectionArray(AkMultiPosEvent eventPosList)
	{
		return null;
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x10A47B8", Offset = "0x10A47B8", VA = "0x10A47B8")]
	private AkPositionArray BuildAkPositionArray()
	{
		return null;
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x10A50D4", Offset = "0x10A50D4", VA = "0x10A50D4")]
	public AkAmbient()
	{
	}
}
[Token(Token = "0x2000149")]
public class AkAmbientLargeModePositioner : MonoBehaviour
{
	[Token(Token = "0x170001A0")]
	public Vector3 Position
	{
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x10A5068", Offset = "0x10A5068", VA = "0x10A5068")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001A1")]
	public Vector3 Forward
	{
		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x10A508C", Offset = "0x10A508C", VA = "0x10A508C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001A2")]
	public Vector3 Up
	{
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x10A50B0", Offset = "0x10A50B0", VA = "0x10A50B0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x10A51E8", Offset = "0x10A51E8", VA = "0x10A51E8")]
	public AkAmbientLargeModePositioner()
	{
	}
}
[Token(Token = "0x200014A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77C8B4", Offset = "0x77C8B4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C8B4", Offset = "0x77C8B4")]
[DisallowMultipleComponent]
public class AkAudioListener : MonoBehaviour
{
	[Token(Token = "0x200025D")]
	public class BaseListenerList
	{
		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ulong> listenerIdList;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<AkAudioListener> listenerList;

		[Token(Token = "0x17000294")]
		public List<AkAudioListener> ListenerList
		{
			[Token(Token = "0x6001446")]
			[Address(RVA = "0x10A8610", Offset = "0x10A8610", VA = "0x10A8610")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x10A8618", Offset = "0x10A8618", VA = "0x10A8618", Slot = "4")]
		public virtual bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x10A8708", Offset = "0x10A8708", VA = "0x10A8708", Slot = "5")]
		public virtual bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x10A87F8", Offset = "0x10A87F8", VA = "0x10A87F8")]
		public ulong[] GetListenerIds()
		{
			return null;
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x10A8850", Offset = "0x10A8850", VA = "0x10A8850")]
		public BaseListenerList()
		{
		}
	}

	[Token(Token = "0x200025E")]
	public class DefaultListenerList : BaseListenerList
	{
		[Token(Token = "0x600144B")]
		[Address(RVA = "0x10A88E8", Offset = "0x10A88E8", VA = "0x10A88E8", Slot = "4")]
		public override bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x10A89BC", Offset = "0x10A89BC", VA = "0x10A89BC", Slot = "5")]
		public override bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x10A860C", Offset = "0x10A860C", VA = "0x10A860C")]
		public DefaultListenerList()
		{
		}
	}

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DefaultListenerList defaultListeners;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong akGameObjectID;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkGameObj> EmittersToStartListeningTo;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AkGameObj> EmittersToStopListeningTo;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isDefaultListener;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int listenerId;

	[Token(Token = "0x170001A3")]
	public static DefaultListenerList DefaultListeners
	{
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x10A7CAC", Offset = "0x10A7CAC", VA = "0x10A7CAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x10A7D14", Offset = "0x10A7D14", VA = "0x10A7D14")]
	public void StartListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x10A7D98", Offset = "0x10A7D98", VA = "0x10A7D98")]
	public void StopListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x10A7E1C", Offset = "0x10A7E1C", VA = "0x10A7E1C")]
	public void SetIsDefaultListener(bool isDefault)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x10A7F7C", Offset = "0x10A7F7C", VA = "0x10A7F7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x10A811C", Offset = "0x10A811C", VA = "0x10A811C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x10A81F8", Offset = "0x10A81F8", VA = "0x10A81F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x10A82D4", Offset = "0x10A82D4", VA = "0x10A82D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x10A8438", Offset = "0x10A8438", VA = "0x10A8438")]
	public ulong GetAkGameObjectID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x10A8440", Offset = "0x10A8440", VA = "0x10A8440")]
	public void Migrate14()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x10A8504", Offset = "0x10A8504", VA = "0x10A8504")]
	public AkAudioListener()
	{
	}
}
[Token(Token = "0x200014B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77C94C", Offset = "0x77C94C")]
[ExecuteInEditMode]
public class AkBank : AkTriggerHandler
{
	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Bank data;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool decodeBank;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool loadAsynchronous;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool saveDecodedBank;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> unloadTriggerList;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x781724", Offset = "0x781724")]
	private string bankNameInternal;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x781780", Offset = "0x781780")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x170001A4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x78653C", Offset = "0x78653C")]
	public string bankName
	{
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x10AA528", Offset = "0x10AA528", VA = "0x10AA528")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x786574", Offset = "0x786574")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x10AA598", Offset = "0x10AA598", VA = "0x10AA598")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x10AA298", Offset = "0x10AA298", VA = "0x10AA298", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x10AA388", Offset = "0x10AA388", VA = "0x10AA388", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x10AA410", Offset = "0x10AA410", VA = "0x10AA410", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x10AA370", Offset = "0x10AA370", VA = "0x10AA370")]
	public void UnloadBank(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x10AA450", Offset = "0x10AA450", VA = "0x10AA450", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x10AA65C", Offset = "0x10AA65C", VA = "0x10AA65C")]
	public AkBank()
	{
	}
}
[Token(Token = "0x200014C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77C998", Offset = "0x77C998")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77C998", Offset = "0x77C998")]
public class AkEmitterObstructionOcclusion : AkObstructionOcclusion
{
	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x10B4AB0", Offset = "0x10B4AB0", VA = "0x10B4AB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x10B4B14", Offset = "0x10B4B14", VA = "0x10B4B14", Slot = "4")]
	protected override void UpdateCurrentListenerList()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x10B4CE8", Offset = "0x10B4CE8", VA = "0x10B4CE8", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x10B4E20", Offset = "0x10B4E20", VA = "0x10B4E20")]
	public AkEmitterObstructionOcclusion()
	{
	}
}
[Token(Token = "0x200014D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77CA20", Offset = "0x77CA20")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77CA20", Offset = "0x77CA20")]
[ExecuteInEditMode]
public class AkEnvironment : MonoBehaviour
{
	[Token(Token = "0x200025F")]
	public class AkEnvironment_CompareByPriority : IComparer<AkEnvironment>
	{
		[Token(Token = "0x600144E")]
		[Address(RVA = "0x10B5CB0", Offset = "0x10B5CB0", VA = "0x10B5CB0", Slot = "5")]
		public virtual int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x10B5CA0", Offset = "0x10B5CA0", VA = "0x10B5CA0")]
		public AkEnvironment_CompareByPriority()
		{
		}
	}

	[Token(Token = "0x2000260")]
	public class AkEnvironment_CompareBySelectionAlgorithm : AkEnvironment_CompareByPriority
	{
		[Token(Token = "0x6001450")]
		[Address(RVA = "0x10B5D50", Offset = "0x10B5D50", VA = "0x10B5D50", Slot = "5")]
		public override int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x10B5CA8", Offset = "0x10B5CA8", VA = "0x10B5CA8")]
		public AkEnvironment_CompareBySelectionAlgorithm()
		{
		}
	}

	[Token(Token = "0x40007DA")]
	public const int MAX_NB_ENVIRONMENTS = 4;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AkEnvironment_CompareByPriority s_compareByPriority;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AkEnvironment_CompareBySelectionAlgorithm s_compareBySelectionAlgorithm;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool excludeOthers;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isDefault;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AuxBus data;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7817DC", Offset = "0x7817DC")]
	private Collider <Collider>k__BackingField;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int priority;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7817EC", Offset = "0x7817EC")]
	private int auxBusIdInternal;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x781848", Offset = "0x781848")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x170001A6")]
	public Collider Collider
	{
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x10B5A48", Offset = "0x10B5A48", VA = "0x10B5A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784FD8", Offset = "0x784FD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x10B5A50", Offset = "0x10B5A50", VA = "0x10B5A50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x784FE8", Offset = "0x784FE8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7865AC", Offset = "0x7865AC")]
	public int m_auxBusID
	{
		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x10B5AB0", Offset = "0x10B5AB0", VA = "0x10B5AB0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7865E4", Offset = "0x7865E4")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x10B5AC0", Offset = "0x10B5AC0", VA = "0x10B5AC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x10B5A58", Offset = "0x10B5A58", VA = "0x10B5A58")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x10B5B84", Offset = "0x10B5B84", VA = "0x10B5B84")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x784FF8", Offset = "0x784FF8")]
	public uint GetAuxBusID()
	{
		return default(uint);
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x10B5B9C", Offset = "0x10B5B9C", VA = "0x10B5B9C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x785030", Offset = "0x785030")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x10B5BA4", Offset = "0x10B5BA4", VA = "0x10B5BA4")]
	public AkEnvironment()
	{
	}
}
[Token(Token = "0x200014E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77CAB8", Offset = "0x77CAB8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77CAB8", Offset = "0x77CAB8")]
[ExecuteInEditMode]
public class AkEnvironmentPortal : MonoBehaviour
{
	[Token(Token = "0x40007E4")]
	public const int MAX_ENVIRONMENTS_PER_PORTAL = 2;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkEnvironment[] environments;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BoxCollider m_BoxCollider;

	[Token(Token = "0x170001A9")]
	private BoxCollider BoxCollider
	{
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x10B5DAC", Offset = "0x10B5DAC", VA = "0x10B5DAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AA")]
	public bool EnvironmentsShareAuxBus
	{
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x10B5E40", Offset = "0x10B5E40", VA = "0x10B5E40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x10B5FDC", Offset = "0x10B5FDC", VA = "0x10B5FDC")]
	public float GetAuxSendValueForPosition(Vector3 in_position, int index)
	{
		return default(float);
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x10B626C", Offset = "0x10B626C", VA = "0x10B626C")]
	public AkEnvironmentPortal()
	{
	}
}
[Token(Token = "0x200014F")]
public class AkEventCallbackMsg
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AkCallbackInfo info;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sender;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkCallbackType type;

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x10B6304", Offset = "0x10B6304", VA = "0x10B6304")]
	public AkEventCallbackMsg()
	{
	}
}
[Token(Token = "0x2000150")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77CB50", Offset = "0x77CB50")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77CB50", Offset = "0x77CB50")]
public class AkEvent : AkDragDropTriggerHandler
{
	[Serializable]
	[Token(Token = "0x2000261")]
	public class CallbackData
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CallbackFlags Flags;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FunctionName;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GameObject;

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x10B63C4", Offset = "0x10B63C4", VA = "0x10B63C4")]
		public void CallFunction(AkEventCallbackMsg eventCallbackMsg)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x10B6598", Offset = "0x10B6598", VA = "0x10B6598")]
		public CallbackData()
		{
		}
	}

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AkActionOnEventType actionOnEventType;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AkCurveInterpolation curveInterpolation;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool enableActionOnEvent;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Event data;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useCallbacks;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CallbackData> Callbacks;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public uint playingId;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject soundEmitterObject;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transitionDuration;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AkEventCallbackMsg EventCallbackMsg;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7818A4", Offset = "0x7818A4")]
	private int eventIdInternal;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x781900", Offset = "0x781900")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x78195C", Offset = "0x78195C")]
	private AkEventCallbackData m_callbackDataInternal;

	[Token(Token = "0x170001AB")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x10B62FC", Offset = "0x10B62FC", VA = "0x10B62FC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x78661C", Offset = "0x78661C")]
	public int eventID
	{
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x10B64BC", Offset = "0x10B64BC", VA = "0x10B64BC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x786654", Offset = "0x786654")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x10B64CC", Offset = "0x10B64CC", VA = "0x10B64CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x78668C", Offset = "0x78668C")]
	public AkEventCallbackData m_callbackData
	{
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x10B6590", Offset = "0x10B6590", VA = "0x10B6590")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x10A4730", Offset = "0x10A4730", VA = "0x10A4730", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x10B630C", Offset = "0x10B630C", VA = "0x10B630C")]
	private void Callback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x10A4D9C", Offset = "0x10A4D9C", VA = "0x10A4D9C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x10B6488", Offset = "0x10B6488", VA = "0x10B6488")]
	public void Stop(int _transitionDuration)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x10B6490", Offset = "0x10B6490", VA = "0x10B6490")]
	public void Stop(int _transitionDuration, AkCurveInterpolation _curveInterpolation)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x10A50E0", Offset = "0x10A50E0", VA = "0x10A50E0")]
	public AkEvent()
	{
	}
}
[Token(Token = "0x2000151")]
public class AkEventCallbackData : ScriptableObject
{
	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> callbackFlags;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> callbackFunc;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> callbackGameObj;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int uFlags;

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x10B65A0", Offset = "0x10B65A0", VA = "0x10B65A0")]
	public AkEventCallbackData()
	{
	}
}
[Token(Token = "0x2000152")]
public class AkEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Event akEvent;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AkCurveInterpolation blendInCurve;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ExposedReference<GameObject> emitterObjectRef;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float eventDurationMax;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float eventDurationMin;

	[NonSerialized]
	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineClip owningClip;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool retriggerEvent;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool UseWwiseEventDuration;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool StopEventAtClipEnd;

	[Token(Token = "0x170001AF")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x10B6790", Offset = "0x10B6790", VA = "0x10B6790", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x10B6798", Offset = "0x10B6798", VA = "0x10B6798", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x10B6A0C", Offset = "0x10B6A0C", VA = "0x10B6A0C")]
	public AkEventPlayable()
	{
	}
}
[Token(Token = "0x2000153")]
public class AkEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x2000262")]
	[Flags]
	private enum Actions
	{
		[Token(Token = "0x4000B8F")]
		None = 0,
		[Token(Token = "0x4000B90")]
		Playback = 1,
		[Token(Token = "0x4000B91")]
		Retrigger = 2,
		[Token(Token = "0x4000B92")]
		DelayedStop = 4,
		[Token(Token = "0x4000B93")]
		Seek = 8,
		[Token(Token = "0x4000B94")]
		FadeIn = 0x10,
		[Token(Token = "0x4000B95")]
		FadeOut = 0x20
	}

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currentDuration;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currentDurationProportion;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool eventIsPlaying;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool fadeinTriggered;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool fadeoutTriggered;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousEventStartTime;

	[Token(Token = "0x400080C")]
	private const uint CallbackFlags = 9u;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Actions requiredActions;

	[Token(Token = "0x400080E")]
	private const int scrubPlaybackLengthMs = 100;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Event akEvent;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float eventDurationMax;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float eventDurationMin;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blendInDuration;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendOutDuration;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easeInDuration;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float easeOutDuration;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AkCurveInterpolation blendInCurve;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eventObject;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool retriggerEvent;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool wasScrubbingAndRequiresRetrigger;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool StopEventAtClipEnd;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool overrideTrackEmitterObject;

	[Token(Token = "0x400081D")]
	private const float alph = 0.05f;

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x10B6A8C", Offset = "0x10B6A8C", VA = "0x10B6A8C")]
	private void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x10B6B54", Offset = "0x10B6B54", VA = "0x10B6B54")]
	private bool IsScrubbing(FrameData info)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x10B6B78", Offset = "0x10B6B78", VA = "0x10B6B78", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x10B6F38", Offset = "0x10B6F38", VA = "0x10B6F38", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x10B7100", Offset = "0x10B7100", VA = "0x10B7100", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x10B721C", Offset = "0x10B721C", VA = "0x10B721C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x10B6CB8", Offset = "0x10B6CB8", VA = "0x10B6CB8")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x10B6DF4", Offset = "0x10B6DF4", VA = "0x10B6DF4")]
	private void CheckForFadeInFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x10B6E94", Offset = "0x10B6E94", VA = "0x10B6E94")]
	private void CheckForFadeOut(Playable playable, double currentClipTime)
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x10B75A4", Offset = "0x10B75A4", VA = "0x10B75A4")]
	private void TriggerFadeIn(Playable playable)
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x10B76CC", Offset = "0x10B76CC", VA = "0x10B76CC")]
	private void TriggerFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x10B71E4", Offset = "0x10B71E4", VA = "0x10B71E4")]
	private void StopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x10B778C", Offset = "0x10B778C", VA = "0x10B778C")]
	private bool PostEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x10B7404", Offset = "0x10B7404", VA = "0x10B7404")]
	private void PlayEvent()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x10B7508", Offset = "0x10B7508", VA = "0x10B7508")]
	private void RetriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x10B7024", Offset = "0x10B7024", VA = "0x10B7024")]
	private float GetProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x10B7434", Offset = "0x10B7434", VA = "0x10B7434")]
	private float SeekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x10B7834", Offset = "0x10B7834", VA = "0x10B7834")]
	public AkEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x2000154")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77CBD8", Offset = "0x77CBD8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77CBD8", Offset = "0x77CBD8")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x77CBD8", Offset = "0x77CBD8")]
public class AkEventTrack : TrackAsset
{
	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x10B7848", Offset = "0x10B7848", VA = "0x10B7848", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x10B7BAC", Offset = "0x10B7BAC", VA = "0x10B7BAC")]
	public AkEventTrack()
	{
	}
}
[Token(Token = "0x2000155")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77CC8C", Offset = "0x77CC8C")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkGameObj : MonoBehaviour
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AkGameObjListenerList m_listeners;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnvironmentAware;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool isStaticObject;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider m_Collider;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkGameObjEnvironmentData m_envData;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkGameObjPositionData m_posData;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AkGameObjPositionOffsetData m_positionOffsetData;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isRegistered;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private AkGameObjPosOffsetData m_posOffsetData;

	[Token(Token = "0x4000827")]
	private const int AK_NUM_LISTENERS = 8;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	[SerializeField]
	private int listenerMask;

	[Token(Token = "0x170001B0")]
	public bool IsUsingDefaultListeners
	{
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x10B4CB0", Offset = "0x10B4CB0", VA = "0x10B4CB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B1")]
	public List<AkAudioListener> ListenerList
	{
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x10B4CCC", Offset = "0x10B4CCC", VA = "0x10B4CCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x10A83F8", Offset = "0x10A83F8", VA = "0x10A83F8")]
	internal void AddListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x10A8418", Offset = "0x10A8418", VA = "0x10A8418")]
	internal void RemoveListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x10A805C", Offset = "0x10A805C", VA = "0x10A805C")]
	public AKRESULT Register()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x10B8ABC", Offset = "0x10B8ABC", VA = "0x10B8ABC")]
	private void SetPosition()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x10B8D20", Offset = "0x10B8D20", VA = "0x10B8D20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x10B8E98", Offset = "0x10B8E98", VA = "0x10B8E98")]
	private void CheckStaticStatus()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x10B8E9C", Offset = "0x10B8E9C", VA = "0x10B8E9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x10B8EB0", Offset = "0x10B8EB0", VA = "0x10B8EB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x10B9010", Offset = "0x10B9010", VA = "0x10B9010")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x10B9094", Offset = "0x10B9094", VA = "0x10B9094", Slot = "4")]
	public virtual Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x10B9204", Offset = "0x10B9204", VA = "0x10B9204", Slot = "5")]
	public virtual Vector3 GetForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x10B9228", Offset = "0x10B9228", VA = "0x10B9228", Slot = "6")]
	public virtual Vector3 GetUpward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x10B924C", Offset = "0x10B924C", VA = "0x10B924C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x10B9270", Offset = "0x10B9270", VA = "0x10B9270")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x10B9294", Offset = "0x10B9294", VA = "0x10B9294")]
	public AkGameObj()
	{
	}
}
[Token(Token = "0x2000156")]
public class AkGameObjEnvironmentData
{
	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkEnvironment> activeEnvironments;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkEnvironment> activeEnvironmentsFromPortals;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<AkEnvironmentPortal> activePortals;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly AkAuxSendArray auxSendValues;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastPosition;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasEnvironmentListChanged;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool hasActivePortalListChanged;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool hasSentZero;

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x11F799C", Offset = "0x11F799C", VA = "0x11F799C")]
	private void AddHighestPriorityEnvironmentsFromPortals(Vector3 position)
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x11F7C98", Offset = "0x11F7C98", VA = "0x11F7C98")]
	private void AddHighestPriorityEnvironments(Vector3 position)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x11F7DD4", Offset = "0x11F7DD4", VA = "0x11F7DD4")]
	public void UpdateAuxSend(GameObject gameObject, Vector3 position)
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x11F7F34", Offset = "0x11F7F34", VA = "0x11F7F34")]
	private void TryAddEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x11F8098", Offset = "0x11F8098", VA = "0x11F8098")]
	private void RemoveEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x11F8120", Offset = "0x11F8120", VA = "0x11F8120")]
	public void AddAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x11F8258", Offset = "0x11F8258", VA = "0x11F8258")]
	private bool AkEnvironmentBelongsToActivePortals(AkEnvironment env)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x11F8388", Offset = "0x11F8388", VA = "0x11F8388")]
	public void RemoveAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x11F85A8", Offset = "0x11F85A8", VA = "0x11F85A8")]
	public AkGameObjEnvironmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000157")]
public class AkGameObjListenerList : AkAudioListener.BaseListenerList
{
	[NonSerialized]
	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkGameObj akGameObj;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<AkAudioListener> initialListenerList;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool useDefaultListeners;

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x11F86B8", Offset = "0x11F86B8", VA = "0x11F86B8")]
	public void SetUseDefaultListeners(bool useDefault)
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x11F8890", Offset = "0x11F8890", VA = "0x11F8890")]
	public void Init(AkGameObj akGameObj)
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x11F8988", Offset = "0x11F8988", VA = "0x11F8988", Slot = "4")]
	public override bool Add(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x11F8A78", Offset = "0x11F8A78", VA = "0x11F8A78", Slot = "5")]
	public override bool Remove(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x11F8B68", Offset = "0x11F8B68", VA = "0x11F8B68")]
	public AkGameObjListenerList()
	{
	}
}
[Token(Token = "0x2000158")]
public class AkGameObjPosOffsetData : ScriptableObject
{
	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 positionOffset;

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x11F8BE0", Offset = "0x11F8BE0", VA = "0x11F8BE0")]
	public AkGameObjPosOffsetData()
	{
	}
}
[Token(Token = "0x2000159")]
public class AkGameObjPositionData
{
	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 forward;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 up;

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x11F8BE8", Offset = "0x11F8BE8", VA = "0x11F8BE8")]
	public AkGameObjPositionData()
	{
	}
}
[Serializable]
[Token(Token = "0x200015A")]
public class AkGameObjPositionOffsetData
{
	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool KeepMe;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 positionOffset;

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x11F8BF0", Offset = "0x11F8BF0", VA = "0x11F8BF0")]
	public AkGameObjPositionOffsetData(bool IReallyWantToBeConstructed = false)
	{
	}
}
[Token(Token = "0x200015B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77CCE8", Offset = "0x77CCE8")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkInitializer : MonoBehaviour
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkInitializer ms_Instance;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkWwiseInitializationSettings InitializationSettings;

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x11FBF6C", Offset = "0x11FBF6C", VA = "0x11FBF6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x11FC054", Offset = "0x11FC054", VA = "0x11FC054")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x11FC12C", Offset = "0x11FC12C", VA = "0x11FC12C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x11FC1D4", Offset = "0x11FC1D4", VA = "0x11FC1D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x11FC270", Offset = "0x11FC270", VA = "0x11FC270")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x11FC32C", Offset = "0x11FC32C", VA = "0x11FC32C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x11FC3E8", Offset = "0x11FC3E8", VA = "0x11FC3E8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x11FC490", Offset = "0x11FC490", VA = "0x11FC490")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x11FC538", Offset = "0x11FC538", VA = "0x11FC538")]
	public AkInitializer()
	{
	}
}
[Token(Token = "0x200015C")]
public class AkMemBankLoader : MonoBehaviour
{
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D968", Offset = "0x77D968")]
	private sealed class <LoadFile>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AkMemBankLoader <>4__this;

		[Token(Token = "0x17000295")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001457")]
			[Address(RVA = "0x1202E64", Offset = "0x1202E64", VA = "0x1202E64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000296")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001459")]
			[Address(RVA = "0x1202ECC", Offset = "0x1202ECC", VA = "0x1202ECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x1202BA0", Offset = "0x1202BA0", VA = "0x1202BA0")]
		[DebuggerHidden]
		public <LoadFile>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x1202CDC", Offset = "0x1202CDC", VA = "0x1202CDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x1202CE0", Offset = "0x1202CE0", VA = "0x1202CE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x1202E6C", Offset = "0x1202E6C", VA = "0x1202E6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400083C")]
	private const int WaitMs = 50;

	[Token(Token = "0x400083D")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT = 16L;

	[Token(Token = "0x400083E")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT_MASK = 15L;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bankName;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLocalizedBank;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_bankPath;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public uint ms_bankID;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IntPtr ms_pInMemoryBankPtr;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GCHandle ms_pinnedArray;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityWebRequest ms_www;

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x12026C4", Offset = "0x12026C4", VA = "0x12026C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x12027F4", Offset = "0x12027F4", VA = "0x12027F4")]
	public void LoadNonLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x12026D8", Offset = "0x12026D8", VA = "0x12026D8")]
	public void LoadLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x1202904", Offset = "0x1202904", VA = "0x1202904")]
	private uint AllocateAlignedBuffer(byte[] data)
	{
		return default(uint);
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x1202B30", Offset = "0x1202B30", VA = "0x1202B30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x785068", Offset = "0x785068")]
	private IEnumerator LoadFile()
	{
		return null;
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x12028D4", Offset = "0x12028D4", VA = "0x12028D4")]
	private void DoLoadBank(string in_bankPath)
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x1202BCC", Offset = "0x1202BCC", VA = "0x1202BCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x1202C80", Offset = "0x1202C80", VA = "0x1202C80")]
	public AkMemBankLoader()
	{
	}
}
[Token(Token = "0x200015D")]
public abstract class AkObstructionOcclusion : MonoBehaviour
{
	[Token(Token = "0x2000264")]
	protected class ObstructionOcclusionValue
	{
		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float currentValue;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float targetValue;

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x1205AA4", Offset = "0x1205AA4", VA = "0x1205AA4")]
		public bool Update(float fadeRate)
		{
			return default(bool);
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x1205600", Offset = "0x1205600", VA = "0x1205600")]
		public ObstructionOcclusionValue()
		{
		}
	}

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkAudioListener> listenersToRemove;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected readonly List<AkAudioListener> currentListenerList;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Dictionary<AkAudioListener, ObstructionOcclusionValue> ObstructionOcclusionValues;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float fadeRate;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781AC8", Offset = "0x781AC8")]
	public float fadeTime;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781B00", Offset = "0x781B00")]
	public LayerMask LayerMask;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781B38", Offset = "0x781B38")]
	public float maxDistance;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781B70", Offset = "0x781B70")]
	public float refreshInterval;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float refreshTime;

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x1205330", Offset = "0x1205330", VA = "0x1205330")]
	protected void InitIntervalsAndFadeRates()
	{
	}

	[Token(Token = "0x6000F6B")]
	protected abstract void UpdateCurrentListenerList();

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x1205370", Offset = "0x1205370", VA = "0x1205370")]
	private void UpdateObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x1205608", Offset = "0x1205608", VA = "0x1205608")]
	private void CastRays()
	{
	}

	[Token(Token = "0x6000F6E")]
	protected abstract void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair);

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x120593C", Offset = "0x120593C", VA = "0x120593C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x1205B94", Offset = "0x1205B94", VA = "0x1205B94")]
	protected AkObstructionOcclusion()
	{
	}
}
[Serializable]
[Token(Token = "0x200015E")]
public class AkRTPCPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool overrideTrackObject;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<GameObject> RTPCObject;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool setRTPCGlobally;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AkRTPCPlayableBehaviour template;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x781BA8", Offset = "0x781BA8")]
	private RTPC <Parameter>k__BackingField;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x781BB8", Offset = "0x781BB8")]
	private TimelineClip <OwningClip>k__BackingField;

	[Token(Token = "0x170001B2")]
	public RTPC Parameter
	{
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x120BC4C", Offset = "0x120BC4C", VA = "0x120BC4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7850CC", Offset = "0x7850CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x120BC54", Offset = "0x120BC54", VA = "0x120BC54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7850DC", Offset = "0x7850DC")]
		set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x120BC5C", Offset = "0x120BC5C", VA = "0x120BC5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7850EC", Offset = "0x7850EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x120BC64", Offset = "0x120BC64", VA = "0x120BC64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7850FC", Offset = "0x7850FC")]
		set
		{
		}
	}

	[Token(Token = "0x170001B4")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x120BC6C", Offset = "0x120BC6C", VA = "0x120BC6C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x120BC74", Offset = "0x120BC74", VA = "0x120BC74", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x120BD70", Offset = "0x120BD70", VA = "0x120BD70")]
	public void InitializeBehavior(PlayableGraph graph, ref AkRTPCPlayableBehaviour b, GameObject owner)
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x120BE40", Offset = "0x120BE40", VA = "0x120BE40")]
	public AkRTPCPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x200015F")]
public class AkRTPCPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float RTPCValue;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x781BD8", Offset = "0x781BD8")]
	private bool <setRTPCGlobally>k__BackingField;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x781BE8", Offset = "0x781BE8")]
	private bool <overrideTrackObject>k__BackingField;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x781BF8", Offset = "0x781BF8")]
	private GameObject <rtpcObject>k__BackingField;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x781C08", Offset = "0x781C08")]
	private RTPC <parameter>k__BackingField;

	[Token(Token = "0x170001B5")]
	public bool setRTPCGlobally
	{
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x120BEBC", Offset = "0x120BEBC", VA = "0x120BEBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78511C", Offset = "0x78511C")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x120BEB0", Offset = "0x120BEB0", VA = "0x120BEB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78510C", Offset = "0x78510C")]
		set
		{
		}
	}

	[Token(Token = "0x170001B6")]
	public bool overrideTrackObject
	{
		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x120BED0", Offset = "0x120BED0", VA = "0x120BED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78513C", Offset = "0x78513C")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x120BEC4", Offset = "0x120BEC4", VA = "0x120BEC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78512C", Offset = "0x78512C")]
		set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	public GameObject rtpcObject
	{
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x120BEE0", Offset = "0x120BEE0", VA = "0x120BEE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78515C", Offset = "0x78515C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x120BED8", Offset = "0x120BED8", VA = "0x120BED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78514C", Offset = "0x78514C")]
		set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	public RTPC parameter
	{
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x120BEF0", Offset = "0x120BEF0", VA = "0x120BEF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78517C", Offset = "0x78517C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x120BEE8", Offset = "0x120BEE8", VA = "0x120BEE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78516C", Offset = "0x78516C")]
		set
		{
		}
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x120BEF8", Offset = "0x120BEF8", VA = "0x120BEF8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x120BEA8", Offset = "0x120BEA8", VA = "0x120BEA8")]
	public AkRTPCPlayableBehaviour()
	{
	}
}
[Token(Token = "0x2000160")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77CD44", Offset = "0x77CD44")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77CD44", Offset = "0x77CD44")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x77CD44", Offset = "0x77CD44")]
public class AkRTPCTrack : TrackAsset
{
	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RTPC Parameter;

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x120C06C", Offset = "0x120C06C", VA = "0x120C06C", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x120C128", Offset = "0x120C128", VA = "0x120C128")]
	public void setPlayableProperties()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x120C3E8", Offset = "0x120C3E8", VA = "0x120C3E8")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x120C6A0", Offset = "0x120C6A0", VA = "0x120C6A0")]
	public AkRTPCTrack()
	{
	}
}
[Token(Token = "0x2000161")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77CDF4", Offset = "0x77CDF4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77CDF4", Offset = "0x77CDF4")]
[DisallowMultipleComponent]
public class AkRoom : AkTriggerHandler
{
	[Token(Token = "0x2000265")]
	public class PriorityList
	{
		[Token(Token = "0x2000285")]
		private class CompareByPriority : IComparer<AkRoom>
		{
			[Token(Token = "0x600149A")]
			[Address(RVA = "0x120EB8C", Offset = "0x120EB8C", VA = "0x120EB8C", Slot = "5")]
			public virtual int Compare(AkRoom a, AkRoom b)
			{
				return default(int);
			}

			[Token(Token = "0x600149B")]
			[Address(RVA = "0x120EB84", Offset = "0x120EB84", VA = "0x120EB84")]
			public CompareByPriority()
			{
			}
		}

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly CompareByPriority s_compareByPriority;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AkRoom> rooms;

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x120E78C", Offset = "0x120E78C", VA = "0x120E78C")]
		public ulong GetHighestPriorityRoomID()
		{
			return default(ulong);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x120E854", Offset = "0x120E854", VA = "0x120E854")]
		public AkRoom GetHighestPriorityRoom()
		{
			return null;
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x120E8B8", Offset = "0x120E8B8", VA = "0x120E8B8")]
		public void Add(AkRoom room)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x120EA24", Offset = "0x120EA24", VA = "0x120EA24")]
		public void Remove(AkRoom room)
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x120EA8C", Offset = "0x120EA8C", VA = "0x120EA8C")]
		public bool Contains(AkRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x120E948", Offset = "0x120E948", VA = "0x120E948")]
		public int BinarySearch(AkRoom room)
		{
			return default(int);
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x120EAA8", Offset = "0x120EAA8", VA = "0x120EAA8")]
		public PriorityList()
		{
		}
	}

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong INVALID_ROOM_ID;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int RoomCount;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781C18", Offset = "0x781C18")]
	public int priority;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AuxBus reverbAuxBus;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x781C50", Offset = "0x781C50")]
	public float reverbLevel;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x781C68", Offset = "0x781C68")]
	public float wallOcclusion;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Event roomToneEvent;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x781C80", Offset = "0x781C80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781C80", Offset = "0x781C80")]
	public float roomToneAuxSend;

	[Token(Token = "0x170001B9")]
	public static bool IsSpatialAudioEnabled
	{
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x120D8DC", Offset = "0x120D8DC", VA = "0x120D8DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x120D9B8", Offset = "0x120D9B8", VA = "0x120D9B8")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x120DA34", Offset = "0x120DA34", VA = "0x120DA34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x120E3C4", Offset = "0x120E3C4", VA = "0x120E3C4", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x120E3FC", Offset = "0x120E3FC", VA = "0x120E3FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x120E4D0", Offset = "0x120E4D0", VA = "0x120E4D0")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x120E5AC", Offset = "0x120E5AC", VA = "0x120E5AC")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x120E688", Offset = "0x120E688", VA = "0x120E688")]
	public AkRoom()
	{
	}
}
[Token(Token = "0x2000162")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77CE8C", Offset = "0x77CE8C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77CE8C", Offset = "0x77CE8C")]
[DisallowMultipleComponent]
public class AkRoomPortal : AkTriggerHandler
{
	[Token(Token = "0x2000266")]
	public enum State
	{
		[Token(Token = "0x4000B9E")]
		Closed,
		[Token(Token = "0x4000B9F")]
		Open
	}

	[Token(Token = "0x4000863")]
	public const int MAX_ROOMS_PER_PORTAL = 2;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public State initialState;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkVector extent;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkTransform portalTransform;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool active;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> closePortalTriggerList;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AkRoom[] rooms;

	[Token(Token = "0x170001BA")]
	public bool portalActive
	{
		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x120F1D8", Offset = "0x120F1D8", VA = "0x120F1D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x120F1E0", Offset = "0x120F1E0", VA = "0x120F1E0")]
		set
		{
		}
	}

	[Token(Token = "0x170001BB")]
	private ulong frontRoomID
	{
		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x120F328", Offset = "0x120F328", VA = "0x120F328")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170001BC")]
	private ulong backRoomID
	{
		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x120F490", Offset = "0x120F490", VA = "0x120F490")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170001BD")]
	public AkRoom frontRoom
	{
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x120F3C4", Offset = "0x120F3C4", VA = "0x120F3C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BE")]
	public AkRoom backRoom
	{
		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x120F52C", Offset = "0x120F52C", VA = "0x120F52C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BF")]
	public bool IsValid
	{
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x120F834", Offset = "0x120F834", VA = "0x120F834")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x120F560", Offset = "0x120F560", VA = "0x120F560")]
	public void SetRoom(int in_roomIndex, AkRoom in_room)
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x120F65C", Offset = "0x120F65C", VA = "0x120F65C")]
	public void SetFrontRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x120F668", Offset = "0x120F668", VA = "0x120F668")]
	public void SetBackRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x120F674", Offset = "0x120F674", VA = "0x120F674")]
	public AkRoom GetRoom(int index)
	{
		return null;
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x120F6B0", Offset = "0x120F6B0", VA = "0x120F6B0")]
	public void UpdateSoundEngineRoomIDs()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x120F818", Offset = "0x120F818", VA = "0x120F818")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x120F868", Offset = "0x120F868", VA = "0x120F868", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x120FE94", Offset = "0x120FE94", VA = "0x120FE94", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x120FF1C", Offset = "0x120FF1C", VA = "0x120FF1C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x120FE8C", Offset = "0x120FE8C", VA = "0x120FE8C")]
	public void ClosePortal(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x120FF34", Offset = "0x120FF34", VA = "0x120FF34", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x120F3FC", Offset = "0x120F3FC", VA = "0x120F3FC")]
	private bool IsRoomActive(AkRoom in_room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x120FF24", Offset = "0x120FF24", VA = "0x120FF24")]
	public void Open()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x120FF2C", Offset = "0x120FF2C", VA = "0x120FF2C")]
	public void Close()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x1210174", Offset = "0x1210174", VA = "0x1210174")]
	public void FindOverlappingRooms(AkRoom.PriorityList[] roomList)
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x121038C", Offset = "0x121038C", VA = "0x121038C")]
	private void FillRoomList(Vector3 center, Vector3 halfExtents, AkRoom.PriorityList list)
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x120FC44", Offset = "0x120FC44", VA = "0x120FC44")]
	public void UpdateOverlappingRooms()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x121056C", Offset = "0x121056C", VA = "0x121056C")]
	public AkRoomPortal()
	{
	}
}
[Token(Token = "0x2000163")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77CF24", Offset = "0x77CF24")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77CF24", Offset = "0x77CF24")]
public class AkRoomPortalObstruction : AkObstructionOcclusion
{
	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkRoomPortal m_portal;

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xDA3C7C", Offset = "0xDA3C7C", VA = "0xDA3C7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xDA3CE0", Offset = "0xDA3CE0", VA = "0xDA3CE0", Slot = "4")]
	protected override void UpdateCurrentListenerList()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xDA3D68", Offset = "0xDA3D68", VA = "0xDA3D68", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xDA3EAC", Offset = "0xDA3EAC", VA = "0xDA3EAC")]
	public AkRoomPortalObstruction()
	{
	}
}
[Token(Token = "0x2000164")]
public class AkSoundEngineController
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSoundEngineController ms_Instance;

	[Token(Token = "0x170001C0")]
	public static AkSoundEngineController Instance
	{
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xDC0B08", Offset = "0xDC0B08", VA = "0xDC0B08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xDC0B88", Offset = "0xDC0B88", VA = "0xDC0B88")]
	private AkSoundEngineController()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xDC0B90", Offset = "0xDC0B90", VA = "0xDC0B90", Slot = "1")]
	~AkSoundEngineController()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xDC0BF8", Offset = "0xDC0BF8", VA = "0xDC0BF8")]
	public static string GetDecodedBankFolder()
	{
		return null;
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xDC0C40", Offset = "0xDC0C40", VA = "0xDC0C40")]
	public static string GetDecodedBankFullPath()
	{
		return null;
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xDC0CE4", Offset = "0xDC0CE4", VA = "0xDC0CE4")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xDC0DB8", Offset = "0xDC0DB8", VA = "0xDC0DB8")]
	public void Init(AkInitializer akInitializer)
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xDC0F6C", Offset = "0xDC0F6C", VA = "0xDC0F6C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xDC0F70", Offset = "0xDC0F70", VA = "0xDC0F70")]
	public void Terminate()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xDC0FD0", Offset = "0xDC0FD0", VA = "0xDC0FD0")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xDC10B8", Offset = "0xDC10B8", VA = "0xDC10B8")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xDC0FE0", Offset = "0xDC0FE0", VA = "0xDC0FE0")]
	private void ActivateAudio(bool activate, bool renderAnyway = false)
	{
	}
}
[Token(Token = "0x2000165")]
public abstract class AkSpatialAudioBase : MonoBehaviour
{
	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly AkRoom.PriorityList roomPriorityList;

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xD59F74", Offset = "0xD59F74", VA = "0xD59F74")]
	protected void SetGameObjectInHighestPriorityRoom()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xD5A00C", Offset = "0xD5A00C", VA = "0xD5A00C")]
	public void EnteredRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xD5A040", Offset = "0xD5A040", VA = "0xD5A040")]
	public void ExitedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xD5A074", Offset = "0xD5A074", VA = "0xD5A074")]
	public void SetGameObjectInRoom()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xD5A1A4", Offset = "0xD5A1A4", VA = "0xD5A1A4")]
	protected AkSpatialAudioBase()
	{
	}
}
[Token(Token = "0x2000166")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77CFAC", Offset = "0x77CFAC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77CFAC", Offset = "0x77CFAC")]
public class AkSpatialAudioEmitter : AkSpatialAudioBase
{
	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x781CE4", Offset = "0x781CE4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781CE4", Offset = "0x781CE4")]
	public AuxBus reflectAuxBus;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781D44", Offset = "0x781D44")]
	public float reflectionMaxPathLength;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x781D7C", Offset = "0x781D7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781D7C", Offset = "0x781D7C")]
	public float reflectionsAuxBusGain;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x781DD0", Offset = "0x781DD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781DD0", Offset = "0x781DD0")]
	public uint reflectionsOrder;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x781E24", Offset = "0x781E24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x781E24", Offset = "0x781E24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781E24", Offset = "0x781E24")]
	public float roomReverbAuxBusGain;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x781E9C", Offset = "0x781E9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781E9C", Offset = "0x781E9C")]
	public uint diffractionMaxEdges;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781EFC", Offset = "0x781EFC")]
	public uint diffractionMaxPaths;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x781F34", Offset = "0x781F34")]
	public uint diffractionMaxPathLength;

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xD5A20C", Offset = "0xD5A20C", VA = "0xD5A20C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xD5A390", Offset = "0xD5A390", VA = "0xD5A390")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xD5A40C", Offset = "0xD5A40C", VA = "0xD5A40C")]
	public AkSpatialAudioEmitter()
	{
	}
}
[Token(Token = "0x2000167")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77D034", Offset = "0x77D034")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77D034", Offset = "0x77D034")]
[DisallowMultipleComponent]
public class AkSpatialAudioListener : AkSpatialAudioBase
{
	[Token(Token = "0x2000267")]
	public class SpatialAudioListenerList
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<AkSpatialAudioListener> listenerList;

		[Token(Token = "0x17000297")]
		public List<AkSpatialAudioListener> ListenerList
		{
			[Token(Token = "0x6001464")]
			[Address(RVA = "0xD5B2D0", Offset = "0xD5B2D0", VA = "0xD5B2D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xD5AFD4", Offset = "0xD5AFD4", VA = "0xD5AFD4")]
		public bool Add(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xD5B120", Offset = "0xD5B120", VA = "0xD5B120")]
		public bool Remove(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xD5B2D8", Offset = "0xD5B2D8", VA = "0xD5B2D8")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xD5B260", Offset = "0xD5B260", VA = "0xD5B260")]
		public SpatialAudioListenerList()
		{
		}
	}

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSpatialAudioListener s_SpatialAudioListener;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly SpatialAudioListenerList spatialAudioListeners;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkAudioListener AkAudioListener;

	[Token(Token = "0x170001C1")]
	public static AkAudioListener TheSpatialAudioListener
	{
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xD5ADC4", Offset = "0xD5ADC4", VA = "0xD5ADC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C2")]
	public static SpatialAudioListenerList SpatialAudioListeners
	{
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xD5AE9C", Offset = "0xD5AE9C", VA = "0xD5AE9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xD5AF04", Offset = "0xD5AF04", VA = "0xD5AF04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xD5AF5C", Offset = "0xD5AF5C", VA = "0xD5AF5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xD5B0A8", Offset = "0xD5B0A8", VA = "0xD5B0A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xD5B1F4", Offset = "0xD5B1F4", VA = "0xD5B1F4")]
	public AkSpatialAudioListener()
	{
	}
}
[Token(Token = "0x2000168")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77D0CC", Offset = "0x77D0CC")]
public class AkState : AkDragDropTriggerHandler
{
	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State data;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x781F6C", Offset = "0x781F6C")]
	private int valueIdInternal;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x781FC8", Offset = "0x781FC8")]
	private int groupIdInternal;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x782024", Offset = "0x782024")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x782080", Offset = "0x782080")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x170001C3")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xD5B5A8", Offset = "0xD5B5A8", VA = "0xD5B5A8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7866C4", Offset = "0x7866C4")]
	public int valueID
	{
		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xD5B5CC", Offset = "0xD5B5CC", VA = "0xD5B5CC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001C5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7866FC", Offset = "0x7866FC")]
	public int groupID
	{
		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xD5B5E0", Offset = "0xD5B5E0", VA = "0xD5B5E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001C6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x786734", Offset = "0x786734")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xD5B5F4", Offset = "0xD5B5F4", VA = "0xD5B5F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x78676C", Offset = "0x78676C")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xD5B6B8", Offset = "0xD5B6B8", VA = "0xD5B6B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xD5B5B0", Offset = "0xD5B5B0", VA = "0xD5B5B0", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xD5B778", Offset = "0xD5B778", VA = "0xD5B778")]
	public AkState()
	{
	}
}
[Token(Token = "0x2000169")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77D104", Offset = "0x77D104")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x77D104", Offset = "0x77D104")]
[ExecuteInEditMode]
public class AkSurfaceReflector : MonoBehaviour
{
	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7820DC", Offset = "0x7820DC")]
	public AcousticTexture AcousticTexture;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782114", Offset = "0x782114")]
	public bool EnableDiffraction;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x78214C", Offset = "0x78214C")]
	public bool EnableDiffractionOnBoundaryEdges;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782184", Offset = "0x782184")]
	public AkRoom AssociatedRoom;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter MeshFilter;

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xD5BBAC", Offset = "0xD5BBAC", VA = "0xD5BBAC")]
	public static ulong GetAkGeometrySetID(MeshFilter meshFilter)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xD5BBD0", Offset = "0xD5BBD0", VA = "0xD5BBD0")]
	public static void AddGeometrySet(AcousticTexture acousticTexture, MeshFilter meshFilter, ulong roomID, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xD5CB94", Offset = "0xD5CB94", VA = "0xD5CB94")]
	public static void RemoveGeometrySet(MeshFilter meshFilter)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xD5CC58", Offset = "0xD5CC58", VA = "0xD5CC58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xD5CCB0", Offset = "0xD5CCB0", VA = "0xD5CCB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xD5CD88", Offset = "0xD5CD88", VA = "0xD5CD88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xD5CD90", Offset = "0xD5CD90", VA = "0xD5CD90")]
	public AkSurfaceReflector()
	{
	}
}
[Token(Token = "0x200016A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x77D1AC", Offset = "0x77D1AC")]
public class AkSwitch : AkDragDropTriggerHandler
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Switch data;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7821BC", Offset = "0x7821BC")]
	private int valueIdInternal;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x782218", Offset = "0x782218")]
	private int groupIdInternal;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x782274", Offset = "0x782274")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7822D0", Offset = "0x7822D0")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x170001C8")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xD5CDF8", Offset = "0xD5CDF8", VA = "0xD5CDF8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7867A4", Offset = "0x7867A4")]
	public int valueID
	{
		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xD5CEB0", Offset = "0xD5CEB0", VA = "0xD5CEB0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001CA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7867DC", Offset = "0x7867DC")]
	public int groupID
	{
		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xD5CEC4", Offset = "0xD5CEC4", VA = "0xD5CEC4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001CB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x786814", Offset = "0x786814")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xD5CED8", Offset = "0xD5CED8", VA = "0xD5CED8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x78684C", Offset = "0x78684C")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xD5CF9C", Offset = "0xD5CF9C", VA = "0xD5CF9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xD5CE00", Offset = "0xD5CE00", VA = "0xD5CE00", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xD5D05C", Offset = "0xD5D05C", VA = "0xD5D05C")]
	public AkSwitch()
	{
	}
}
[Token(Token = "0x200016B")]
[DisallowMultipleComponent]
public class AkTerminator : MonoBehaviour
{
	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xD5D490", Offset = "0xD5D490", VA = "0xD5D490")]
	public AkTerminator()
	{
	}
}
[Token(Token = "0x200016C")]
public abstract class AkTriggerBase : MonoBehaviour
{
	[Token(Token = "0x2000268")]
	public delegate void Trigger(GameObject in_gameObject);

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trigger triggerDelegate;

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xD5EDA4", Offset = "0xD5EDA4", VA = "0xD5EDA4")]
	public static Dictionary<uint, string> GetAllDerivedTypes()
	{
		return null;
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xD5F1C0", Offset = "0xD5F1C0", VA = "0xD5F1C0")]
	protected AkTriggerBase()
	{
	}
}
[Token(Token = "0x200016D")]
public class AkTriggerCollisionEnter : AkTriggerBase
{
	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xD5F59C", Offset = "0xD5F59C", VA = "0xD5F59C")]
	private void OnCollisionEnter(Collision in_other)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xD5F6A8", Offset = "0xD5F6A8", VA = "0xD5F6A8")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xD5F7B4", Offset = "0xD5F7B4", VA = "0xD5F7B4")]
	public AkTriggerCollisionEnter()
	{
	}
}
[Token(Token = "0x200016E")]
public class AkTriggerCollisionExit : AkTriggerBase
{
	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xD5F7BC", Offset = "0xD5F7BC", VA = "0xD5F7BC")]
	private void OnCollisionExit(Collision in_other)
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xD5F8C8", Offset = "0xD5F8C8", VA = "0xD5F8C8")]
	public AkTriggerCollisionExit()
	{
	}
}
[Token(Token = "0x200016F")]
public class AkTriggerDisable : AkTriggerBase
{
	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xD5F8D0", Offset = "0xD5F8D0", VA = "0xD5F8D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xD5F8E4", Offset = "0xD5F8E4", VA = "0xD5F8E4")]
	public AkTriggerDisable()
	{
	}
}
[Token(Token = "0x2000170")]
public class AkTriggerEnable : AkTriggerBase
{
	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xD5F8EC", Offset = "0xD5F8EC", VA = "0xD5F8EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xD5F900", Offset = "0xD5F900", VA = "0xD5F900")]
	public AkTriggerEnable()
	{
	}
}
[Token(Token = "0x2000171")]
public class AkTriggerEnter : AkTriggerBase
{
	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xD5F908", Offset = "0xD5F908", VA = "0xD5F908")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xD5FA14", Offset = "0xD5FA14", VA = "0xD5FA14")]
	public AkTriggerEnter()
	{
	}
}
[Token(Token = "0x2000172")]
public class AkTriggerExit : AkTriggerBase
{
	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xD5FA1C", Offset = "0xD5FA1C", VA = "0xD5FA1C")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xD5FB28", Offset = "0xD5FB28", VA = "0xD5FB28")]
	public AkTriggerExit()
	{
	}
}
[Token(Token = "0x2000173")]
public abstract class AkTriggerHandler : MonoBehaviour
{
	[Token(Token = "0x400088C")]
	public const int AWAKE_TRIGGER_ID = 1151176110;

	[Token(Token = "0x400088D")]
	public const int START_TRIGGER_ID = 1281810935;

	[Token(Token = "0x400088E")]
	public const int DESTROY_TRIGGER_ID = -358577003;

	[Token(Token = "0x400088F")]
	public const int MAX_NB_TRIGGERS = 32;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, string> triggerTypes;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool didDestroy;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> triggerList;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOtherObject;

	[Token(Token = "0x6000FED")]
	public abstract void HandleEvent(GameObject in_gameObject);

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xD5FB30", Offset = "0xD5FB30", VA = "0xD5FB30", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xD5FFF0", Offset = "0xD5FFF0", VA = "0xD5FFF0", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xD60074", Offset = "0xD60074", VA = "0xD60074", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xD60084", Offset = "0xD60084", VA = "0xD60084")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xD5FBF0", Offset = "0xD5FBF0", VA = "0xD5FBF0")]
	protected void RegisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xD6014C", Offset = "0xD6014C", VA = "0xD6014C")]
	protected void UnregisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xD604A8", Offset = "0xD604A8", VA = "0xD604A8")]
	protected AkTriggerHandler()
	{
	}
}
[Token(Token = "0x2000174")]
[ExecuteInEditMode]
public abstract class AkDragDropTriggerHandler : AkTriggerHandler
{
	[Token(Token = "0x170001CD")]
	protected abstract BaseType WwiseType
	{
		[Token(Token = "0x6000FF6")]
		get;
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x10B3EC4", Offset = "0x10B3EC4", VA = "0x10B3EC4", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x10B3ECC", Offset = "0x10B3ECC", VA = "0x10B3ECC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x10B3ED4", Offset = "0x10B3ED4", VA = "0x10B3ED4", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x10B3EDC", Offset = "0x10B3EDC", VA = "0x10B3EDC")]
	protected AkDragDropTriggerHandler()
	{
	}
}
[Token(Token = "0x2000175")]
public class AkTriggerMouseDown : AkTriggerBase
{
	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xD60590", Offset = "0xD60590", VA = "0xD60590")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xD605A4", Offset = "0xD605A4", VA = "0xD605A4")]
	public AkTriggerMouseDown()
	{
	}
}
[Token(Token = "0x2000176")]
public class AkTriggerMouseEnter : AkTriggerBase
{
	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xD605AC", Offset = "0xD605AC", VA = "0xD605AC")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xD605C0", Offset = "0xD605C0", VA = "0xD605C0")]
	public AkTriggerMouseEnter()
	{
	}
}
[Token(Token = "0x2000177")]
public class AkTriggerMouseExit : AkTriggerBase
{
	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xD605C8", Offset = "0xD605C8", VA = "0xD605C8")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xD605DC", Offset = "0xD605DC", VA = "0xD605DC")]
	public AkTriggerMouseExit()
	{
	}
}
[Token(Token = "0x2000178")]
public class AkTriggerMouseUp : AkTriggerBase
{
	[Token(Token = "0x6001001")]
	[Address(RVA = "0xD605E4", Offset = "0xD605E4", VA = "0xD605E4")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xD605F8", Offset = "0xD605F8", VA = "0xD605F8")]
	public AkTriggerMouseUp()
	{
	}
}
namespace AK.Wwise
{
	[Serializable]
	[Token(Token = "0x2000179")]
	public class AcousticTexture : BaseType
	{
		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAcousticTextureReference WwiseObjectReference;

		[Token(Token = "0x170001CE")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0x10A1804", Offset = "0x10A1804", VA = "0x10A1804", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001004")]
			[Address(RVA = "0x10A180C", Offset = "0x10A180C", VA = "0x10A180C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x10A189C", Offset = "0x10A189C", VA = "0x10A189C", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x10A18A4", Offset = "0x10A18A4", VA = "0x10A18A4")]
		public AcousticTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017A")]
	public class AuxBus : BaseType
	{
		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAuxBusReference WwiseObjectReference;

		[Token(Token = "0x170001D0")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0x10A18B4", Offset = "0x10A18B4", VA = "0x10A18B4", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001008")]
			[Address(RVA = "0x10A18BC", Offset = "0x10A18BC", VA = "0x10A18BC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0x10A194C", Offset = "0x10A194C", VA = "0x10A194C", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x10A1954", Offset = "0x10A1954", VA = "0x10A1954")]
		public AuxBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017B")]
	public class Bank : BaseType
	{
		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseBankReference WwiseObjectReference;

		[Token(Token = "0x170001D2")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x10A195C", Offset = "0x10A195C", VA = "0x10A195C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100C")]
			[Address(RVA = "0x10A1964", Offset = "0x10A1964", VA = "0x10A1964", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0x10A19F4", Offset = "0x10A19F4", VA = "0x10A19F4", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x10A19FC", Offset = "0x10A19FC", VA = "0x10A19FC")]
		public void Load(bool decodeBank = false, bool saveDecodedBank = false)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x10A1C78", Offset = "0x10A1C78", VA = "0x10A1C78")]
		public void LoadAsync([Optional] AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x10A1EC0", Offset = "0x10A1EC0", VA = "0x10A1EC0")]
		public void Unload()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x10A20A0", Offset = "0x10A20A0", VA = "0x10A20A0")]
		public Bank()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017C")]
	public abstract class BaseGroupType : BaseType
	{
		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x78232C", Offset = "0x78232C")]
		private int groupIdInternal;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x782388", Offset = "0x782388")]
		private byte[] groupGuidInternal;

		[Token(Token = "0x170001D4")]
		public WwiseObjectReference GroupWwiseObjectReference
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0x10A20A8", Offset = "0x10A20A8", VA = "0x10A20A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		public abstract WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6001013")]
			get;
		}

		[Token(Token = "0x170001D6")]
		public uint GroupId
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x10A218C", Offset = "0x10A218C", VA = "0x10A218C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001D7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x786884", Offset = "0x786884")]
		public int groupID
		{
			[Token(Token = "0x6001016")]
			[Address(RVA = "0x10A2344", Offset = "0x10A2344", VA = "0x10A2344")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7868BC", Offset = "0x7868BC")]
		public byte[] groupGuid
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x10A2348", Offset = "0x10A2348", VA = "0x10A2348")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x10A2228", Offset = "0x10A2228", VA = "0x10A2228", Slot = "8")]
		public override bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x10A2408", Offset = "0x10A2408", VA = "0x10A2408")]
		protected BaseGroupType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017D")]
	public abstract class BaseType
	{
		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7823E4", Offset = "0x7823E4")]
		private int idInternal;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x782440", Offset = "0x782440")]
		private byte[] valueGuidInternal;

		[Token(Token = "0x170001D9")]
		public abstract WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001019")]
			get;
			[Token(Token = "0x600101A")]
			set;
		}

		[Token(Token = "0x170001DA")]
		public abstract WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600101B")]
			get;
		}

		[Token(Token = "0x170001DB")]
		public virtual string Name
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0x10A2410", Offset = "0x10A2410", VA = "0x10A2410", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		public uint Id
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0x10A24A4", Offset = "0x10A24A4", VA = "0x10A24A4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001DD")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7868F4", Offset = "0x7868F4")]
		public int ID
		{
			[Token(Token = "0x6001022")]
			[Address(RVA = "0x10A2684", Offset = "0x10A2684", VA = "0x10A2684")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DE")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x78692C", Offset = "0x78692C")]
		public byte[] valueGuid
		{
			[Token(Token = "0x6001023")]
			[Address(RVA = "0x10A2688", Offset = "0x10A2688", VA = "0x10A2688")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x10A22C0", Offset = "0x10A22C0", VA = "0x10A22C0", Slot = "8")]
		public virtual bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x10A24F4", Offset = "0x10A24F4", VA = "0x10A24F4")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x10A25D0", Offset = "0x10A25D0", VA = "0x10A25D0")]
		protected void Verify(AKRESULT result)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x10A25D4", Offset = "0x10A25D4", VA = "0x10A25D4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x10A18AC", Offset = "0x10A18AC", VA = "0x10A18AC")]
		protected BaseType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017E")]
	public class CallbackFlags
	{
		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint value;

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x10A2748", Offset = "0x10A2748", VA = "0x10A2748")]
		public CallbackFlags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017F")]
	public class Event : BaseType
	{
		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseEventReference WwiseObjectReference;

		[Token(Token = "0x170001DF")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x10A2750", Offset = "0x10A2750", VA = "0x10A2750", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x10A2758", Offset = "0x10A2758", VA = "0x10A2758", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0x10A27E8", Offset = "0x10A27E8", VA = "0x10A27E8", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x10A27F0", Offset = "0x10A27F0", VA = "0x10A27F0")]
		private void VerifyPlayingID(uint playingId)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x10A27F4", Offset = "0x10A27F4", VA = "0x10A27F4")]
		public uint Post(GameObject gameObject)
		{
			return default(uint);
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x10A28A4", Offset = "0x10A28A4", VA = "0x10A28A4")]
		public uint Post(GameObject gameObject, CallbackFlags flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x10A2980", Offset = "0x10A2980", VA = "0x10A2980")]
		public uint Post(GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x10A2A54", Offset = "0x10A2A54", VA = "0x10A2A54")]
		public void Stop(GameObject gameObject, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x10A2A64", Offset = "0x10A2A64", VA = "0x10A2A64")]
		public void ExecuteAction(GameObject gameObject, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x10A2B34", Offset = "0x10A2B34", VA = "0x10A2B34")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x10A2BA4", Offset = "0x10A2BA4", VA = "0x10A2BA4")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array, int count)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x10A2C1C", Offset = "0x10A2C1C", VA = "0x10A2C1C")]
		public void StopMIDI(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x10A2CC8", Offset = "0x10A2CC8", VA = "0x10A2CC8")]
		public void StopMIDI()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x10A2D60", Offset = "0x10A2D60", VA = "0x10A2D60")]
		public Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000180")]
	public class RTPC : BaseType
	{
		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseRtpcReference WwiseObjectReference;

		[Token(Token = "0x170001E1")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x10A2D68", Offset = "0x10A2D68", VA = "0x10A2D68", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x10A2D70", Offset = "0x10A2D70", VA = "0x10A2D70", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0x10A2E00", Offset = "0x10A2E00", VA = "0x10A2E00", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x10A2E08", Offset = "0x10A2E08", VA = "0x10A2E08")]
		public void SetValue(GameObject gameObject, float value)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x10A2EC8", Offset = "0x10A2EC8", VA = "0x10A2EC8")]
		public float GetValue(GameObject gameObject)
		{
			return default(float);
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x10A2FBC", Offset = "0x10A2FBC", VA = "0x10A2FBC")]
		public void SetGlobalValue(float value)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x10A3068", Offset = "0x10A3068", VA = "0x10A3068")]
		public float GetGlobalValue()
		{
			return default(float);
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x10A3070", Offset = "0x10A3070", VA = "0x10A3070")]
		public RTPC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000181")]
	public class State : BaseGroupType
	{
		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseStateReference WwiseObjectReference;

		[Token(Token = "0x170001E3")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x10A3078", Offset = "0x10A3078", VA = "0x10A3078", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600103D")]
			[Address(RVA = "0x10A3080", Offset = "0x10A3080", VA = "0x10A3080", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x10A3110", Offset = "0x10A3110", VA = "0x10A3110", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x170001E5")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x10A3118", Offset = "0x10A3118", VA = "0x10A3118", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x10A3120", Offset = "0x10A3120", VA = "0x10A3120")]
		public void SetValue()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x10A31C8", Offset = "0x10A31C8", VA = "0x10A31C8")]
		public State()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000182")]
	public class Switch : BaseGroupType
	{
		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseSwitchReference WwiseObjectReference;

		[Token(Token = "0x170001E6")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x10A31D0", Offset = "0x10A31D0", VA = "0x10A31D0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x10A31D8", Offset = "0x10A31D8", VA = "0x10A31D8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x10A3268", Offset = "0x10A3268", VA = "0x10A3268", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x170001E8")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6001045")]
			[Address(RVA = "0x10A3270", Offset = "0x10A3270", VA = "0x10A3270", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x10A3278", Offset = "0x10A3278", VA = "0x10A3278")]
		public void SetValue(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x10A3334", Offset = "0x10A3334", VA = "0x10A3334")]
		public Switch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000183")]
	public class Trigger : BaseType
	{
		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseTriggerReference WwiseObjectReference;

		[Token(Token = "0x170001E9")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x10A333C", Offset = "0x10A333C", VA = "0x10A333C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x10A3344", Offset = "0x10A3344", VA = "0x10A3344", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x10A33D4", Offset = "0x10A33D4", VA = "0x10A33D4", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x10A33DC", Offset = "0x10A33DC", VA = "0x10A33DC")]
		public void Post(GameObject gameObject)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x10A3488", Offset = "0x10A3488", VA = "0x10A3488")]
		public Trigger()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000184")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40008A2")]
		TRIANGLES,
		[Token(Token = "0x40008A3")]
		QUADS
	}
	[Token(Token = "0x2000185")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40008A5")]
		ABSORPTION,
		[Token(Token = "0x40008A6")]
		TRANSMISSION,
		[Token(Token = "0x40008A7")]
		SCATTERING
	}
	[Token(Token = "0x2000186")]
	public struct MeshGroup
	{
		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Hangman
{
	[Serializable]
	[Token(Token = "0x2000187")]
	public class AudioFaderBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x78249C", Offset = "0x78249C")]
		public float MaxVolume;

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xD73F24", Offset = "0xD73F24", VA = "0xD73F24")]
		public AudioFaderBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000188")]
	public class AudioFaderClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioFaderBehaviour template;

		[Token(Token = "0x170001EB")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600104E")]
			[Address(RVA = "0xD73F34", Offset = "0xD73F34", VA = "0xD73F34", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xD73F3C", Offset = "0xD73F3C", VA = "0xD73F3C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xD73FDC", Offset = "0xD73FDC", VA = "0xD73FDC")]
		public AudioFaderClip()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class AudioFaderMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AudioSource _trackBinding;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _firstFrameHappened;

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xD7404C", Offset = "0xD7404C", VA = "0xD7404C", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xD74220", Offset = "0xD74220", VA = "0xD74220", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xD74294", Offset = "0xD74294", VA = "0xD74294")]
		public AudioFaderMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77D204", Offset = "0x77D204")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77D204", Offset = "0x77D204")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x77D204", Offset = "0x77D204")]
	public class AudioFaderTrack : TrackAsset
	{
		[Token(Token = "0x6001054")]
		[Address(RVA = "0xD7429C", Offset = "0xD7429C", VA = "0xD7429C", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xD74334", Offset = "0xD74334", VA = "0xD74334", Slot = "29")]
		public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xD7433C", Offset = "0xD7433C", VA = "0xD7433C")]
		public AudioFaderTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018B")]
	public class PauseBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PlayableDirector _director;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _hasPaused;

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xD767A0", Offset = "0xD767A0", VA = "0xD767A0", Slot = "15")]
		public override void OnPlayableCreate(Playable playable)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xD76864", Offset = "0xD76864", VA = "0xD76864", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xD768A4", Offset = "0xD768A4", VA = "0xD768A4", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xD768A8", Offset = "0xD768A8", VA = "0xD768A8")]
		public PauseBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018C")]
	public class PauseClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PauseBehaviour template;

		[Token(Token = "0x170001EC")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0xD768B0", Offset = "0xD768B0", VA = "0xD768B0", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xD768B8", Offset = "0xD768B8", VA = "0xD768B8", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xD76958", Offset = "0xD76958", VA = "0xD76958")]
		public PauseClip()
		{
		}
	}
	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77D2AC", Offset = "0x77D2AC")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77D2AC", Offset = "0x77D2AC")]
	public class PauseTrack : TrackAsset
	{
		[Token(Token = "0x600105E")]
		[Address(RVA = "0xD769C0", Offset = "0xD769C0", VA = "0xD769C0")]
		public PauseTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018E")]
	public class PlaybackControlBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x2000269")]
		public enum DirectorState
		{
			[Token(Token = "0x4000BA2")]
			Play,
			[Token(Token = "0x4000BA3")]
			Pause,
			[Token(Token = "0x4000BA4")]
			Stop
		}

		[Token(Token = "0x200026A")]
		public enum TriggerCondition
		{
			[Token(Token = "0x4000BA6")]
			OnBeginningOfClip
		}

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayableDirector Director;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DirectorState SetDirectorTo;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TriggerCondition Condition;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool StopThisTimeline;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayableDirector _director;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _hasFired;

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xD76A28", Offset = "0xD76A28", VA = "0xD76A28", Slot = "15")]
		public override void OnPlayableCreate(Playable playable)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xD76AF0", Offset = "0xD76AF0", VA = "0xD76AF0", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xD76AF4", Offset = "0xD76AF4", VA = "0xD76AF4", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xD76AF8", Offset = "0xD76AF8", VA = "0xD76AF8", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xD76B18", Offset = "0xD76B18", VA = "0xD76B18")]
		private void Trigger()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xD76C48", Offset = "0xD76C48", VA = "0xD76C48")]
		public PlaybackControlBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018F")]
	public class PlaybackControlClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackControlBehaviour template;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExposedReference<PlayableDirector> Director;

		[Token(Token = "0x170001ED")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0xD76C50", Offset = "0xD76C50", VA = "0xD76C50", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xD76C58", Offset = "0xD76C58", VA = "0xD76C58", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xD76D64", Offset = "0xD76D64", VA = "0xD76D64")]
		public PlaybackControlClip()
		{
		}
	}
	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77D32C", Offset = "0x77D32C")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77D32C", Offset = "0x77D32C")]
	public class PlaybackControlTrack : TrackAsset
	{
		[Token(Token = "0x6001068")]
		[Address(RVA = "0xD76DCC", Offset = "0xD76DCC", VA = "0xD76DCC")]
		public PlaybackControlTrack()
		{
		}
	}
}
namespace Hangman.Multiplayer
{
	[Token(Token = "0x2000191")]
	public class BurnBooksSceneInit : MonoBehaviour
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkManager _communicationManager;

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xD743B4", Offset = "0xD743B4", VA = "0xD743B4")]
		private void Start()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xD74498", Offset = "0xD74498", VA = "0xD74498")]
		public BurnBooksSceneInit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000192")]
	public class ArrivedAtMeriekRoomMessage : BaseNetworkMessage
	{
		[Token(Token = "0x600106B")]
		[Address(RVA = "0xD743A4", Offset = "0xD743A4", VA = "0xD743A4")]
		public ArrivedAtMeriekRoomMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000193")]
	public class BeginDescendMessage : BaseNetworkMessage
	{
		[Token(Token = "0x600106C")]
		[Address(RVA = "0xD743AC", Offset = "0xD743AC", VA = "0xD743AC")]
		public BeginDescendMessage()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class DescendSynchronizer : MonoBehaviour
	{
		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableDirector _descendTimeline;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _beginDescend;

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xD744A0", Offset = "0xD744A0", VA = "0xD744A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xD745DC", Offset = "0xD745DC", VA = "0xD745DC")]
		public void SendMatchIgnitedEvent()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xD74764", Offset = "0xD74764", VA = "0xD74764")]
		private void Update()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xD74778", Offset = "0xD74778", VA = "0xD74778")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x78518C", Offset = "0x78518C")]
		public void BeginDescendTimeline()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xD7486C", Offset = "0xD7486C", VA = "0xD7486C")]
		public DescendSynchronizer()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xD74874", Offset = "0xD74874", VA = "0xD74874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78519C", Offset = "0x78519C")]
		private void <Start>b__2_0(INetworkMessage NetworkManager)
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class EventSynchronizerServer : MonoBehaviour, IResetable
	{
		[Serializable]
		[Token(Token = "0x200026B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D978", Offset = "0x77D978")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<INetworkMessage> <>9__7_3;

			[Token(Token = "0x600146E")]
			[Address(RVA = "0xD75370", Offset = "0xD75370", VA = "0xD75370")]
			public <>c()
			{
			}

			[Token(Token = "0x600146F")]
			[Address(RVA = "0xD75378", Offset = "0xD75378", VA = "0xD75378")]
			internal void <Start>b__7_3(INetworkMessage message)
			{
			}
		}

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7824C4", Offset = "0x7824C4")]
		private int <PlayerCount>k__BackingField;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Dropdown _playerCountDropDown;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> _matchIgnitedMessageList;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> _peopleArrivedAtMariekeList;

		[Token(Token = "0x170001EE")]
		public int PlayerCount
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0xD74880", Offset = "0xD74880", VA = "0xD74880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7851AC", Offset = "0x7851AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001074")]
			[Address(RVA = "0xD74888", Offset = "0xD74888", VA = "0xD74888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7851BC", Offset = "0x7851BC")]
			set
			{
			}
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xD74890", Offset = "0xD74890", VA = "0xD74890")]
		private void Start()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xD74BD0", Offset = "0xD74BD0", VA = "0xD74BD0")]
		public void SendBeginDescend()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xD74CA4", Offset = "0xD74CA4", VA = "0xD74CA4")]
		public void SendBeginMariekeTimeline()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xD74D80", Offset = "0xD74D80", VA = "0xD74D80", Slot = "4")]
		public void OnServerReset()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xD74DE8", Offset = "0xD74DE8", VA = "0xD74DE8")]
		public EventSynchronizerServer()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xD74E80", Offset = "0xD74E80", VA = "0xD74E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7851CC", Offset = "0x7851CC")]
		private void <Start>b__7_0(int x)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xD74E8C", Offset = "0xD74E8C", VA = "0xD74E8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7851DC", Offset = "0x7851DC")]
		private void <Start>b__7_1(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xD750CC", Offset = "0xD750CC", VA = "0xD750CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7851EC", Offset = "0x7851EC")]
		private void <Start>b__7_2(INetworkMessage networkMessage)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000196")]
	public class MatchIgnitedMessage : BaseNetworkMessage
	{
		[Token(Token = "0x600107D")]
		[Address(RVA = "0xD7475C", Offset = "0xD7475C", VA = "0xD7475C")]
		public MatchIgnitedMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000197")]
	public class StartMariekeTimelineMessage : BaseNetworkMessage
	{
		[Token(Token = "0x600107E")]
		[Address(RVA = "0xD74D78", Offset = "0xD74D78", VA = "0xD74D78")]
		public StartMariekeTimelineMessage()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class HubTransitionManager : MonoBehaviour
	{
		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkManager _networkManager;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DioramaManager _dioramaManager;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _musicalRoomDoor;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _door;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _window;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _firePlace;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _closet;

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xD754B4", Offset = "0xD754B4", VA = "0xD754B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xD755E0", Offset = "0xD755E0", VA = "0xD755E0")]
		private void OnToggleHub(int roomVisitedCount)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xD7574C", Offset = "0xD7574C", VA = "0xD7574C")]
		public HubTransitionManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000199")]
	public class LanguageMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Language;

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xD75754", Offset = "0xD75754", VA = "0xD75754")]
		public LanguageMessage(string lang)
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class ScaleRoomSpace : MonoBehaviour
	{
		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Transform> _roomList;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Vector3> _localPositionList;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Quaternion> _localRotationList;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x782574", Offset = "0x782574")]
		public float Scale;

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xD75780", Offset = "0xD75780", VA = "0xD75780")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7851FC", Offset = "0x7851FC")]
		private void SavePositions()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xD75914", Offset = "0xD75914", VA = "0xD75914")]
		private void ScaleRoom()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xD75AA8", Offset = "0xD75AA8", VA = "0xD75AA8")]
		public ScaleRoomSpace()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class SceneRotationManager : MonoBehaviour
	{
		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7825B0", Offset = "0x7825B0")]
		private float <Rotation>k__BackingField;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7825C0", Offset = "0x7825C0")]
		private Action<float> <OnRotationChange>k__BackingField;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7825D0", Offset = "0x7825D0")]
		private static SceneRotationManager <Instance>k__BackingField;

		[Token(Token = "0x170001EF")]
		public float Rotation
		{
			[Token(Token = "0x6001086")]
			[Address(RVA = "0xD75AB8", Offset = "0xD75AB8", VA = "0xD75AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78520C", Offset = "0x78520C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001087")]
			[Address(RVA = "0xD75AC0", Offset = "0xD75AC0", VA = "0xD75AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78521C", Offset = "0x78521C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public Action<float> OnRotationChange
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0xD75AC8", Offset = "0xD75AC8", VA = "0xD75AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78522C", Offset = "0x78522C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001089")]
			[Address(RVA = "0xD75AD0", Offset = "0xD75AD0", VA = "0xD75AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78523C", Offset = "0x78523C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public static SceneRotationManager Instance
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0xD75AD8", Offset = "0xD75AD8", VA = "0xD75AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78524C", Offset = "0x78524C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600108B")]
			[Address(RVA = "0xD75B28", Offset = "0xD75B28", VA = "0xD75B28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78525C", Offset = "0x78525C")]
			private set
			{
			}
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xD75B7C", Offset = "0xD75B7C", VA = "0xD75B7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xD75BD0", Offset = "0xD75BD0", VA = "0xD75BD0")]
		private void Start()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xD75D0C", Offset = "0xD75D0C", VA = "0xD75D0C")]
		private void SetRotation(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xD75E04", Offset = "0xD75E04", VA = "0xD75E04")]
		public SceneRotationManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019C")]
	public class SceneRotationMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotation;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string targetIP;

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xD75E0C", Offset = "0xD75E0C", VA = "0xD75E0C")]
		public SceneRotationMessage(float rotation, string targetIP)
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class SceneRotator : MonoBehaviour
	{
		[Token(Token = "0x6001091")]
		[Address(RVA = "0xD75E48", Offset = "0xD75E48", VA = "0xD75E48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xD75FBC", Offset = "0xD75FBC", VA = "0xD75FBC")]
		public SceneRotator()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xD75FC4", Offset = "0xD75FC4", VA = "0xD75FC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78526C", Offset = "0x78526C")]
		private void <Awake>b__0_0(float rotation)
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class ServerSceneRotation : MonoBehaviour, IResetable
	{
		[Token(Token = "0x200026C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D988", Offset = "0x77D988")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x6001470")]
			[Address(RVA = "0xD76374", Offset = "0xD76374", VA = "0xD76374")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001471")]
			[Address(RVA = "0xD7678C", Offset = "0xD7678C", VA = "0xD7678C")]
			internal bool <ClientDisconnect>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200026D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D998", Offset = "0x77D998")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<string> <>9__4_0;

			[Token(Token = "0x6001473")]
			[Address(RVA = "0xD76730", Offset = "0xD76730", VA = "0xD76730")]
			public <>c()
			{
			}

			[Token(Token = "0x6001474")]
			[Address(RVA = "0xD76738", Offset = "0xD76738", VA = "0xD76738")]
			internal bool <SendSceneRotationMessage>b__4_0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkManager _networkManager;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<string> _ipRotationList;

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xD76038", Offset = "0xD76038", VA = "0xD76038")]
		private void Start()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xD76284", Offset = "0xD76284", VA = "0xD76284")]
		private void ClientDisconnect(string ip)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xD7637C", Offset = "0xD7637C", VA = "0xD7637C")]
		private void SendSceneRotationMessage(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xD765CC", Offset = "0xD765CC", VA = "0xD765CC", Slot = "4")]
		public void OnServerReset()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xD7665C", Offset = "0xD7665C", VA = "0xD7665C")]
		public ServerSceneRotation()
		{
		}
	}
}
namespace StudioNyx.Framework.EquipmentSystem.Animations
{
	[Token(Token = "0x200019F")]
	public class MaterialFloatAnimation : SerializedMonoBehaviour
	{
		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Renderer _renderer;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int _indexOfMaterial;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _propertyName;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _animTime;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private Ease _animEase;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _maxValue;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float _minValue;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float _startAnimationTimeAfterActivation;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _defaultValue;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _animationCounter;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TweenerCore<float, float, FloatOptions> _animation;

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xCC641C", Offset = "0xCC641C", VA = "0xCC641C")]
		private void Start()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xCC6488", Offset = "0xCC6488", VA = "0xCC6488")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xCC6530", Offset = "0xCC6530", VA = "0xCC6530")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xCC6584", Offset = "0xCC6584", VA = "0xCC6584")]
		private void StartAnim()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xCC6534", Offset = "0xCC6534", VA = "0xCC6534")]
		private void StopAnim()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xCC66F0", Offset = "0xCC66F0", VA = "0xCC66F0")]
		public MaterialFloatAnimation()
		{
		}
	}
}
namespace StudioNyx.Network
{
	[Token(Token = "0x20001A0")]
	public class AutoConnect : MonoBehaviour
	{
		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkManager _networkManager;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isConnected;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ConnectionMessage> _connectionMessages;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _sessionName;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _sendHanshake;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _isHandshakeSent;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _connectionTime;

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xCC6700", Offset = "0xCC6700", VA = "0xCC6700")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xCC677C", Offset = "0xCC677C", VA = "0xCC677C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xCC6AF4", Offset = "0xCC6AF4", VA = "0xCC6AF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xCC6B74", Offset = "0xCC6B74", VA = "0xCC6B74")]
		private void Handshake()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xCC6C68", Offset = "0xCC6C68", VA = "0xCC6C68")]
		public AutoConnect()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xCC6CD8", Offset = "0xCC6CD8", VA = "0xCC6CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78527C", Offset = "0x78527C")]
		private void <Start>b__8_0(Dictionary<string, SessionInfoMessage> sessions)
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public interface ICommunicationManager
	{
		[Token(Token = "0x170001F2")]
		Action<byte[]> OnUnreliableReceive
		{
			[Token(Token = "0x60010A5")]
			get;
			[Token(Token = "0x60010A6")]
			set;
		}

		[Token(Token = "0x170001F3")]
		Action<byte[], int> OnReliableReceive
		{
			[Token(Token = "0x60010A7")]
			get;
			[Token(Token = "0x60010A8")]
			set;
		}

		[Token(Token = "0x170001F4")]
		bool IsSessionStarted
		{
			[Token(Token = "0x60010AD")]
			get;
		}

		[Token(Token = "0x170001F5")]
		Action OnSessionJoined
		{
			[Token(Token = "0x60010AE")]
			get;
			[Token(Token = "0x60010AF")]
			set;
		}

		[Token(Token = "0x60010A9")]
		void JoinSession(SessionInfoMessage sessionInfoMessage);

		[Token(Token = "0x60010AA")]
		void Send(INetworkMessage networkMessage);

		[Token(Token = "0x60010AB")]
		void SendSecure(INetworkMessage networkMessage);

		[Token(Token = "0x60010AC")]
		void Stop();
	}
	[Token(Token = "0x20001A2")]
	public interface IConnectionManager
	{
		[Token(Token = "0x170001F6")]
		Action<Dictionary<string, SessionInfoMessage>> OnAvailableSessionsUpdate
		{
			[Token(Token = "0x60010B3")]
			get;
			[Token(Token = "0x60010B4")]
			set;
		}

		[Token(Token = "0x170001F7")]
		Action<SessionInfoMessage> OnSessionCreated
		{
			[Token(Token = "0x60010B5")]
			get;
			[Token(Token = "0x60010B6")]
			set;
		}

		[Token(Token = "0x60010B0")]
		void CreateSession(string name);

		[Token(Token = "0x60010B1")]
		void SearchSession();

		[Token(Token = "0x60010B2")]
		void Stop();
	}
	[Token(Token = "0x20001A3")]
	public interface ITransformInterpolator
	{
		[Token(Token = "0x170001F8")]
		Transform TargetTransform
		{
			[Token(Token = "0x60010B7")]
			get;
			[Token(Token = "0x60010B8")]
			set;
		}

		[Token(Token = "0x60010B9")]
		void Receive(TransformInfo transformInfo);

		[Token(Token = "0x60010BA")]
		void Update();

		[Token(Token = "0x60010BB")]
		void Stop();
	}
	[Token(Token = "0x20001A4")]
	public interface INetworkMessage
	{
		[Token(Token = "0x170001F9")]
		string SenderIP
		{
			[Token(Token = "0x60010BC")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x20001A5")]
	public class BaseNetworkMessage : INetworkMessage
	{
		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782670", Offset = "0x782670")]
		private readonly string <SenderIP>k__BackingField;

		[Token(Token = "0x170001FA")]
		public string SenderIP
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0xCC7694", Offset = "0xCC7694", VA = "0xCC7694", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78528C", Offset = "0x78528C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xCC5F40", Offset = "0xCC5F40", VA = "0xCC5F40")]
		public BaseNetworkMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A6")]
	public class ConnectionMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceID;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string DeviceIP;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string DeviceModel;

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xCC6BE0", Offset = "0xCC6BE0", VA = "0xCC6BE0")]
		public ConnectionMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A7")]
	public class DisconnectMessage : INetworkMessage
	{
		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782680", Offset = "0x782680")]
		private readonly string <SenderIP>k__BackingField;

		[Token(Token = "0x170001FB")]
		public string SenderIP
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0xCC7BA0", Offset = "0xCC7BA0", VA = "0xCC7BA0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78529C", Offset = "0x78529C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xCC7B2C", Offset = "0xCC7B2C", VA = "0xCC7B2C")]
		public DisconnectMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A8")]
	public class ListFloatMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<float> parameters;

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xCC7F98", Offset = "0xCC7F98", VA = "0xCC7F98")]
		public ListFloatMessage(List<float> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A9")]
	public class PingMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782690", Offset = "0x782690")]
		private float <Time>k__BackingField;

		[Token(Token = "0x170001FC")]
		public float Time
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0xCC95EC", Offset = "0xCC95EC", VA = "0xCC95EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7852AC", Offset = "0x7852AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0xCC95F4", Offset = "0xCC95F4", VA = "0xCC95F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7852BC", Offset = "0x7852BC")]
			set
			{
			}
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xCC95BC", Offset = "0xCC95BC", VA = "0xCC95BC")]
		public PingMessage(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AA")]
	public class SessionInfoMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string multicastAddress;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int port;

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xCCD6AC", Offset = "0xCCD6AC", VA = "0xCCD6AC")]
		public SessionInfoMessage(string name, string multicastAddress, int port)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AB")]
	public class SyncRequestMessage : BaseNetworkMessage
	{
		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xCCD6E8", Offset = "0xCCD6E8", VA = "0xCCD6E8")]
		public SyncRequestMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AC")]
	public class TextMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7826A0", Offset = "0x7826A0")]
		private string <Text>k__BackingField;

		[Token(Token = "0x170001FD")]
		public string Text
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0xCCD6EC", Offset = "0xCCD6EC", VA = "0xCCD6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7852CC", Offset = "0x7852CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0xCCD6F4", Offset = "0xCCD6F4", VA = "0xCCD6F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7852DC", Offset = "0x7852DC")]
			set
			{
			}
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xCC3FC0", Offset = "0xCC3FC0", VA = "0xCC3FC0")]
		public TextMessage(string text)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AD")]
	public class TrackingInfoMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SerializableVector3 trackerPosition;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public SerializableQuaternion trackerRotation;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string targetDeviceID;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool forcePosition;

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xCC9D0C", Offset = "0xCC9D0C", VA = "0xCC9D0C")]
		public TrackingInfoMessage(SerializableVector3 trackerPosition, SerializableQuaternion trackerRotation, string targetDeviceID, bool forcePosition)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AE")]
	public class TransformsMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<TransformInfo> transformInfoList;

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xCCE31C", Offset = "0xCCE31C", VA = "0xCCE31C")]
		public TransformsMessage()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class NetworkManager : MonoBehaviour
	{
		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int BROADCAST_PORT;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int MULTICAST_PORT;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int TCP_PORT;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string _localIPAddress;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7826B0", Offset = "0x7826B0")]
		private static int <RandomID>k__BackingField;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text _ipText;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Type, Action<INetworkMessage>> _messageReceivedCallbackDictionary;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ICommunicationManager _communicationManager;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IConnectionManager _connectionManager;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string DeviceUniqueID;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7826C0", Offset = "0x7826C0")]
		private static NetworkManager <Instance>k__BackingField;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7826D0", Offset = "0x7826D0")]
		private Action <OnConnectionEstablished>k__BackingField;

		[Token(Token = "0x170001FE")]
		public static int RandomID
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0xCC7FC0", Offset = "0xCC7FC0", VA = "0xCC7FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7852EC", Offset = "0x7852EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0xCC8028", Offset = "0xCC8028", VA = "0xCC8028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7852FC", Offset = "0x7852FC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public static string LocalIPAddress
		{
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0xCC72CC", Offset = "0xCC72CC", VA = "0xCC72CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0xCC8094", Offset = "0xCC8094", VA = "0xCC8094")]
			private set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public static NetworkManager Instance
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0xCC8100", Offset = "0xCC8100", VA = "0xCC8100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78530C", Offset = "0x78530C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0xCC8168", Offset = "0xCC8168", VA = "0xCC8168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78531C", Offset = "0x78531C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public Action<Dictionary<string, SessionInfoMessage>> OnAvailableSessionsUpdate
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0xCC697C", Offset = "0xCC697C", VA = "0xCC697C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0xCC6A30", Offset = "0xCC6A30", VA = "0xCC6A30")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public bool IsConnected
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0xCC81D4", Offset = "0xCC81D4", VA = "0xCC81D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000203")]
		public Action OnConnectionEstablished
		{
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0xCC8288", Offset = "0xCC8288", VA = "0xCC8288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78532C", Offset = "0x78532C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0xCC8290", Offset = "0xCC8290", VA = "0xCC8290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78533C", Offset = "0x78533C")]
			set
			{
			}
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xCC8298", Offset = "0xCC8298", VA = "0xCC8298")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xCC8758", Offset = "0xCC8758", VA = "0xCC8758")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xCC8958", Offset = "0xCC8958", VA = "0xCC8958")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xCC8A80", Offset = "0xCC8A80", VA = "0xCC8A80")]
		public void ProcessMessage(NetworkStream stream)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xCC8CD8", Offset = "0xCC8CD8", VA = "0xCC8CD8")]
		public void ProcessMessage(byte[] bytes)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xCC8CE0", Offset = "0xCC8CE0", VA = "0xCC8CE0")]
		public void ProcessMessage(byte[] bytes, int length)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xCC908C", Offset = "0xCC908C", VA = "0xCC908C")]
		public void AddReceiveCallback(Type type, Action<INetworkMessage> callback)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xCC9190", Offset = "0xCC9190", VA = "0xCC9190")]
		public void Send(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xCC3FE8", Offset = "0xCC3FE8", VA = "0xCC3FE8")]
		public void SendSecure(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xCC6E20", Offset = "0xCC6E20", VA = "0xCC6E20")]
		public void JoinSession(SessionInfoMessage message)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xCC9254", Offset = "0xCC9254", VA = "0xCC9254")]
		public void CreateSession(string name)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xCC68C8", Offset = "0xCC68C8", VA = "0xCC68C8")]
		public void SearchSession()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xCC9314", Offset = "0xCC9314", VA = "0xCC9314")]
		public NetworkManager()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class PlayerTracker : MonoBehaviour
	{
		[Token(Token = "0x200026E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D9A8", Offset = "0x77D9A8")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 adjustedPostion;

			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerTracker <>4__this;

			[Token(Token = "0x6001475")]
			[Address(RVA = "0xCC9BD8", Offset = "0xCC9BD8", VA = "0xCC9BD8")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001476")]
			[Address(RVA = "0xCC9D9C", Offset = "0xCC9D9C", VA = "0xCC9D9C")]
			internal void <Update>b__0()
			{
			}
		}

		[Token(Token = "0x4000903")]
		private const float MAX_DRIFT_DISTANCE = 0.25f;

		[Token(Token = "0x4000904")]
		private const int MAX_DRIFT_FRAMES = 10;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _playerCamera;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _player;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CameraTransitionFade _cameraTransitionFade;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NetworkManager _networkManager;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackingInfoMessage _trackingInfoMessage;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isFirstCall;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _infoReceived;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool _isMovingCamera;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _driftCounter;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsSynchronized;

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xCC95FC", Offset = "0xCC95FC", VA = "0xCC95FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xCC9738", Offset = "0xCC9738", VA = "0xCC9738")]
		public void OnTrackingInfoReceived(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xCC9828", Offset = "0xCC9828", VA = "0xCC9828")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xCC9BE0", Offset = "0xCC9BE0", VA = "0xCC9BE0")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x78534C", Offset = "0x78534C")]
		private void TestCameraTransition(Vector3 position, Vector3 rotation)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xCC9D94", Offset = "0xCC9D94", VA = "0xCC9D94")]
		public PlayerTracker()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class PlayerTrackingManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200026F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D9B8", Offset = "0x77D9B8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<XElement, string> <>9__14_0;

			[Token(Token = "0x4000BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<XElement, string> <>9__14_1;

			[Token(Token = "0x4000BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<InputDevice> <>9__14_2;

			[Token(Token = "0x4000BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<KeyValuePair<string, string>, XElement> <>9__17_0;

			[Token(Token = "0x6001478")]
			[Address(RVA = "0xCCB540", Offset = "0xCCB540", VA = "0xCCB540")]
			public <>c()
			{
			}

			[Token(Token = "0x6001479")]
			[Address(RVA = "0xCCB548", Offset = "0xCCB548", VA = "0xCCB548")]
			internal string <Start>b__14_0(XElement key)
			{
				return null;
			}

			[Token(Token = "0x600147A")]
			[Address(RVA = "0xCCB580", Offset = "0xCCB580", VA = "0xCCB580")]
			internal string <Start>b__14_1(XElement val)
			{
				return null;
			}

			[Token(Token = "0x600147B")]
			[Address(RVA = "0xCCB59C", Offset = "0xCCB59C", VA = "0xCCB59C")]
			internal bool <Start>b__14_2(InputDevice d)
			{
				return default(bool);
			}

			[Token(Token = "0x600147C")]
			[Address(RVA = "0xCCB5CC", Offset = "0xCCB5CC", VA = "0xCCB5CC")]
			internal XElement <SaveTrackingInfo>b__17_0(KeyValuePair<string, string> kv)
			{
				return null;
			}
		}

		[Token(Token = "0x2000270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D9C8", Offset = "0x77D9C8")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4000BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyValuePair<string, string> kvp;

			[Token(Token = "0x600147D")]
			[Address(RVA = "0xCCB404", Offset = "0xCCB404", VA = "0xCCB404")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x600147E")]
			[Address(RVA = "0xCCB668", Offset = "0xCCB668", VA = "0xCCB668")]
			internal bool <Update>b__0(InputDevice x)
			{
				return default(bool);
			}

			[Token(Token = "0x600147F")]
			[Address(RVA = "0xCCB6D0", Offset = "0xCCB6D0", VA = "0xCCB6D0")]
			internal bool <Update>b__1(ConnectionMessage x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000271")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D9D8", Offset = "0x77D9D8")]
		private sealed class <>c__DisplayClass20_1
		{
			[Token(Token = "0x4000BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ConnectionMessage connectionMessage;

			[Token(Token = "0x6001480")]
			[Address(RVA = "0xCCB40C", Offset = "0xCCB40C", VA = "0xCCB40C")]
			public <>c__DisplayClass20_1()
			{
			}

			[Token(Token = "0x6001481")]
			[Address(RVA = "0xCCB730", Offset = "0xCCB730", VA = "0xCCB730")]
			internal bool <Update>b__2(SyncRequestMessage x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ServerManager _serverManagerInstance;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, string> _headsetTrackerDictionary;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<InputDevice> _trackerList;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isSessionStarted;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _lastCallTime;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _sendTimeInterval;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 _trackerHeadsetDistance;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _trackerRepresentation;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, Transform> _trackerTransformDictionary;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<SyncRequestMessage> _syncRequestMessageList;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782730", Offset = "0x782730")]
		private bool <ForcePosition>k__BackingField;

		[Token(Token = "0x17000204")]
		public bool ForcePosition
		{
			[Token(Token = "0x60010EB")]
			[Address(RVA = "0xCCA064", Offset = "0xCCA064", VA = "0xCCA064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78535C", Offset = "0x78535C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010EC")]
			[Address(RVA = "0xCCA06C", Offset = "0xCCA06C", VA = "0xCCA06C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78536C", Offset = "0x78536C")]
			set
			{
			}
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xCCA078", Offset = "0xCCA078", VA = "0xCCA078")]
		private void Start()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xCCA710", Offset = "0xCCA710", VA = "0xCCA710")]
		private void InputDevices_deviceDisconnected(InputDevice obj)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xCCA7E0", Offset = "0xCCA7E0", VA = "0xCCA7E0")]
		private void InputDevices_deviceConnected(InputDevice obj)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xCCA904", Offset = "0xCCA904", VA = "0xCCA904")]
		private void SaveTrackingInfo()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xCCAA7C", Offset = "0xCCAA7C", VA = "0xCCAA7C")]
		public void PairHeadsetWithTracker()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xCCAC00", Offset = "0xCCAC00", VA = "0xCCAC00")]
		public void ClearTrackingInfo()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xCCAC60", Offset = "0xCCAC60", VA = "0xCCAC60")]
		private void Update()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xCCB414", Offset = "0xCCB414", VA = "0xCCB414")]
		private void ForceSyncPlayer(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xCCB4BC", Offset = "0xCCB4BC", VA = "0xCCB4BC")]
		public PlayerTrackingManager()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xCCB4D0", Offset = "0xCCB4D0", VA = "0xCCB4D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78537C", Offset = "0x78537C")]
		private void <Start>b__14_3()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class ServerManager : MonoBehaviour
	{
		[Token(Token = "0x2000272")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D9E8", Offset = "0x77D9E8")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4000BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x6001482")]
			[Address(RVA = "0xCCCA64", Offset = "0xCCCA64", VA = "0xCCCA64")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001483")]
			[Address(RVA = "0xCCCA6C", Offset = "0xCCCA6C", VA = "0xCCCA6C")]
			internal bool <Start>b__2(ConnectionMessage x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782740", Offset = "0x782740")]
		private static ServerManager <Instance>k__BackingField;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782750", Offset = "0x782750")]
		private List<ConnectionMessage> <ConnectionMessages>k__BackingField;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782760", Offset = "0x782760")]
		private Action<string> <OnClientDisconnect>k__BackingField;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ServerUIController _serverUIController;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NetworkManager _networkManager;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _keepRunning;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TcpListener tcpListener;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Thread tcpListenerThread;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, TcpClient> connectedTcpClientList;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private uint _connectionCheckCounter;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _connectionCheckTime;

		[Token(Token = "0x17000205")]
		public static ServerManager Instance
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xCCB75C", Offset = "0xCCB75C", VA = "0xCCB75C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78538C", Offset = "0x78538C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0xCCB7AC", Offset = "0xCCB7AC", VA = "0xCCB7AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78539C", Offset = "0x78539C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public List<ConnectionMessage> ConnectionMessages
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xCCB800", Offset = "0xCCB800", VA = "0xCCB800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7853AC", Offset = "0x7853AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0xCCB808", Offset = "0xCCB808", VA = "0xCCB808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7853BC", Offset = "0x7853BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public Action<string> OnClientDisconnect
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0xCCB810", Offset = "0xCCB810", VA = "0xCCB810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7853CC", Offset = "0x7853CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0xCCB818", Offset = "0xCCB818", VA = "0xCCB818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7853DC", Offset = "0x7853DC")]
			set
			{
			}
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xCCB820", Offset = "0xCCB820", VA = "0xCCB820")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xCCB874", Offset = "0xCCB874", VA = "0xCCB874")]
		private void Start()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xCCBA98", Offset = "0xCCBA98", VA = "0xCCBA98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xCCBCC8", Offset = "0xCCBCC8", VA = "0xCCBCC8")]
		private void ListenForIncomingRequests()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xCCC020", Offset = "0xCCC020", VA = "0xCCC020")]
		private void ClientThread(object obj)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xCCC118", Offset = "0xCCC118", VA = "0xCCC118")]
		public void SendToAll(byte[] data)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xCCABF0", Offset = "0xCCABF0", VA = "0xCCABF0")]
		public void LogToConsole(string message)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xCCC2D0", Offset = "0xCCC2D0", VA = "0xCCC2D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xCCC3E4", Offset = "0xCCC3E4", VA = "0xCCC3E4")]
		public ServerManager()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xCCC48C", Offset = "0xCCC48C", VA = "0xCCC48C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7853EC", Offset = "0x7853EC")]
		private void <Start>b__21_0(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xCCC8BC", Offset = "0xCCC8BC", VA = "0xCCC8BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7853FC", Offset = "0x7853FC")]
		private void <Start>b__21_1(INetworkMessage networkMessage)
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class ServerUIController : MonoBehaviour, IResetable
	{
		[Token(Token = "0x2000273")]
		private class IpSlot
		{
			[Token(Token = "0x4000BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x4000BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<string> messages;

			[Token(Token = "0x6001484")]
			[Address(RVA = "0xCCCDB4", Offset = "0xCCCDB4", VA = "0xCCCDB4")]
			public IpSlot(string ip)
			{
			}
		}

		[Token(Token = "0x2000274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77D9F8", Offset = "0x77D9F8")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x6001485")]
			[Address(RVA = "0xCCD0D4", Offset = "0xCCD0D4", VA = "0xCCD0D4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001486")]
			[Address(RVA = "0xCCD664", Offset = "0xCCD664", VA = "0xCCD664")]
			internal bool <ClientDisconnect>b__0(IpSlot x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000275")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77DA08", Offset = "0x77DA08")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x6001487")]
			[Address(RVA = "0xCCD0DC", Offset = "0xCCD0DC", VA = "0xCCD0DC")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001488")]
			[Address(RVA = "0xCCD688", Offset = "0xCCD688", VA = "0xCCD688")]
			internal bool <AddToLog>b__0(IpSlot x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000276")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77DA18", Offset = "0x77DA18")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<IpSlot> <>9__11_1;

			[Token(Token = "0x600148A")]
			[Address(RVA = "0xCCD600", Offset = "0xCCD600", VA = "0xCCD600")]
			public <>c()
			{
			}

			[Token(Token = "0x600148B")]
			[Address(RVA = "0xCCD608", Offset = "0xCCD608", VA = "0xCCD608")]
			internal bool <AddToLog>b__11_1(IpSlot x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782780", Offset = "0x782780")]
		private static ServerUIController <Instance>k__BackingField;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<IpSlot> _ipSlotList;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<TextMeshProUGUI> _textList;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<int> _textToUpdateIndexList;

		[Token(Token = "0x17000208")]
		public static ServerUIController Instance
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0xCCCA90", Offset = "0xCCCA90", VA = "0xCCCA90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78540C", Offset = "0x78540C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001109")]
			[Address(RVA = "0xCCCAE0", Offset = "0xCCCAE0", VA = "0xCCCAE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78541C", Offset = "0x78541C")]
			private set
			{
			}
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xCCCB34", Offset = "0xCCCB34", VA = "0xCCCB34")]
		private void Awake()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xCCCE38", Offset = "0xCCCE38", VA = "0xCCCE38")]
		private void Start()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xCCCF2C", Offset = "0xCCCF2C", VA = "0xCCCF2C")]
		private void ClientDisconnect(string ip)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xCCC630", Offset = "0xCCC630", VA = "0xCCC630")]
		public void AddToLog(string ip, string message)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xCCD0E4", Offset = "0xCCD0E4", VA = "0xCCD0E4")]
		private void Update()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xCCC268", Offset = "0xCCC268", VA = "0xCCC268")]
		public void LogToConsole(string message)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xCCD3B4", Offset = "0xCCD3B4", VA = "0xCCD3B4", Slot = "4")]
		public void OnServerReset()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xCCD4DC", Offset = "0xCCD4DC", VA = "0xCCD4DC")]
		public ServerUIController()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class UDPCommunicationManager : ICommunicationManager
	{
		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UdpClient _multiCastClient;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IPEndPoint _sendEndPoint;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPEndPoint _receiveEndPoint;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Thread _multiCastReceiveThread;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Socket _tcpClient;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Thread _tcpReceiveThread;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782790", Offset = "0x782790")]
		private Action <OnSessionJoined>k__BackingField;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7827A0", Offset = "0x7827A0")]
		private Action<byte[]> <OnUnreliableReceive>k__BackingField;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7827B0", Offset = "0x7827B0")]
		private Action<byte[], int> <OnReliableReceive>k__BackingField;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7827C0", Offset = "0x7827C0")]
		private bool <IsSessionStarted>k__BackingField;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _serverIP;

		[Token(Token = "0x17000209")]
		public Action OnSessionJoined
		{
			[Token(Token = "0x6001113")]
			[Address(RVA = "0xCCEE18", Offset = "0xCCEE18", VA = "0xCCEE18", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78542C", Offset = "0x78542C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001114")]
			[Address(RVA = "0xCCEE20", Offset = "0xCCEE20", VA = "0xCCEE20", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78543C", Offset = "0x78543C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public Action<byte[]> OnUnreliableReceive
		{
			[Token(Token = "0x6001115")]
			[Address(RVA = "0xCCEE28", Offset = "0xCCEE28", VA = "0xCCEE28", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78544C", Offset = "0x78544C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001116")]
			[Address(RVA = "0xCCEE30", Offset = "0xCCEE30", VA = "0xCCEE30", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78545C", Offset = "0x78545C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public Action<byte[], int> OnReliableReceive
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0xCCEE38", Offset = "0xCCEE38", VA = "0xCCEE38", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78546C", Offset = "0x78546C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001118")]
			[Address(RVA = "0xCCEE40", Offset = "0xCCEE40", VA = "0xCCEE40", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78547C", Offset = "0x78547C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public bool IsSessionStarted
		{
			[Token(Token = "0x6001119")]
			[Address(RVA = "0xCCEE48", Offset = "0xCCEE48", VA = "0xCCEE48", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78548C", Offset = "0x78548C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600111A")]
			[Address(RVA = "0xCCEE50", Offset = "0xCCEE50", VA = "0xCCEE50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78549C", Offset = "0x78549C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xCC8750", Offset = "0xCC8750", VA = "0xCC8750")]
		public UDPCommunicationManager()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xCCEE5C", Offset = "0xCCEE5C", VA = "0xCCEE5C", Slot = "8")]
		public void JoinSession(SessionInfoMessage sessionInfoMessage)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xCCF174", Offset = "0xCCF174", VA = "0xCCF174")]
		private void ReceiveMulticast()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xCCF1F0", Offset = "0xCCF1F0", VA = "0xCCF1F0")]
		private void ReceiveTCP()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xCCF298", Offset = "0xCCF298", VA = "0xCCF298", Slot = "9")]
		public void Send(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xCCF440", Offset = "0xCCF440", VA = "0xCCF440", Slot = "10")]
		public void SendSecure(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xCCF6B0", Offset = "0xCCF6B0", VA = "0xCCF6B0")]
		private void OnSendEnd(IAsyncResult ar)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xCCF7BC", Offset = "0xCCF7BC", VA = "0xCCF7BC")]
		private void Disconnect()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xCCF960", Offset = "0xCCF960", VA = "0xCCF960", Slot = "11")]
		public void Stop()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class UDPConnectionManager : IConnectionManager
	{
		[Token(Token = "0x4000934")]
		private const int TIME_BETWEEN_SENDS = 1000;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string LocalIPAddress;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _lastSendTime;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UdpClient _udpClient;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, SessionInfoMessage> _availableSessions;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7827D0", Offset = "0x7827D0")]
		private Action<Dictionary<string, SessionInfoMessage>> <OnAvailableSessionsUpdate>k__BackingField;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7827E0", Offset = "0x7827E0")]
		private Action<SessionInfoMessage> <OnSessionCreated>k__BackingField;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static UDPConnectionManager _instance;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SessionInfoMessage _createdSessionInfo;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IAsyncResult _ar;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isApplicationQuit;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private System.Timers.Timer _broadcastTimer;

		[Token(Token = "0x1700020D")]
		public Action<Dictionary<string, SessionInfoMessage>> OnAvailableSessionsUpdate
		{
			[Token(Token = "0x6001123")]
			[Address(RVA = "0xCCF9C4", Offset = "0xCCF9C4", VA = "0xCCF9C4", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7854AC", Offset = "0x7854AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001124")]
			[Address(RVA = "0xCCF9CC", Offset = "0xCCF9CC", VA = "0xCCF9CC", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7854BC", Offset = "0x7854BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public Action<SessionInfoMessage> OnSessionCreated
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0xCCF9D4", Offset = "0xCCF9D4", VA = "0xCCF9D4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7854CC", Offset = "0x7854CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001126")]
			[Address(RVA = "0xCCF9DC", Offset = "0xCCF9DC", VA = "0xCCF9DC", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7854DC", Offset = "0x7854DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public static UDPConnectionManager Instance
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0xCC86D8", Offset = "0xCC86D8", VA = "0xCC86D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xCCF9E4", Offset = "0xCCF9E4", VA = "0xCCF9E4")]
		private UDPConnectionManager()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xCCFAB0", Offset = "0xCCFAB0", VA = "0xCCFAB0", Slot = "5")]
		public void SearchSession()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xCCFB28", Offset = "0xCCFB28", VA = "0xCCFB28")]
		private void StartListening()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xCCFBE4", Offset = "0xCCFBE4", VA = "0xCCFBE4")]
		private void ReceiveSessionInfo(IAsyncResult ar)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xCCFF8C", Offset = "0xCCFF8C", VA = "0xCCFF8C")]
		private void BroadcastSessionInfo()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xCD01D0", Offset = "0xCD01D0", VA = "0xCD01D0", Slot = "4")]
		public void CreateSession(string name)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xCD0504", Offset = "0xCD0504", VA = "0xCD0504")]
		private void _broadcastTimer_Elapsed(object sender, ElapsedEventArgs e)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xCD0508", Offset = "0xCD0508", VA = "0xCD0508", Slot = "6")]
		public void Stop()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class AvatarInterpolator : ITransformInterpolator
	{
		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TransformInfo _transformInfo;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TransformInfo _lastTransformInfo;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _velocity;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7827F0", Offset = "0x7827F0")]
		private Transform <TargetTransform>k__BackingField;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _neckTransform;

		[Token(Token = "0x17000210")]
		public Transform TargetTransform
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0xCC6EE4", Offset = "0xCC6EE4", VA = "0xCC6EE4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7854EC", Offset = "0x7854EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001131")]
			[Address(RVA = "0xCC6EEC", Offset = "0xCC6EEC", VA = "0xCC6EEC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7854FC", Offset = "0x7854FC")]
			set
			{
			}
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xCC6EF4", Offset = "0xCC6EF4", VA = "0xCC6EF4")]
		public AvatarInterpolator()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xCC6F84", Offset = "0xCC6F84", VA = "0xCC6F84", Slot = "7")]
		public void Update()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xCC72BC", Offset = "0xCC72BC", VA = "0xCC72BC", Slot = "6")]
		public void Receive(TransformInfo transformInfo)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xCC72C8", Offset = "0xCC72C8", VA = "0xCC72C8", Slot = "8")]
		public void Stop()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class DelayedInterpolator : ITransformInterpolator
	{
		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<TransformInfo> _transformInfoList;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _bufferSize;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private uint _frameDelay;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint _frameCounter;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private System.Timers.Timer _syncTimer;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _targetTransformInfoIndex;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782800", Offset = "0x782800")]
		private Transform <TargetTransform>k__BackingField;

		[Token(Token = "0x17000211")]
		public Transform TargetTransform
		{
			[Token(Token = "0x6001137")]
			[Address(RVA = "0xCC7718", Offset = "0xCC7718", VA = "0xCC7718", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78550C", Offset = "0x78550C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001138")]
			[Address(RVA = "0xCC7720", Offset = "0xCC7720", VA = "0xCC7720", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78551C", Offset = "0x78551C")]
			set
			{
			}
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xCC769C", Offset = "0xCC769C", VA = "0xCC769C")]
		public DelayedInterpolator()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xCC7728", Offset = "0xCC7728", VA = "0xCC7728")]
		private void GetTransformInfo(object sender, ElapsedEventArgs e)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xCC7820", Offset = "0xCC7820", VA = "0xCC7820", Slot = "7")]
		public void Update()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xCC799C", Offset = "0xCC799C", VA = "0xCC799C", Slot = "6")]
		public void Receive(TransformInfo transformInfo)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xCC7B10", Offset = "0xCC7B10", VA = "0xCC7B10", Slot = "8")]
		public void Stop()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class LagCompenstationInterpolator : ITransformInterpolator
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TransformInfo _transformInfo;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TransformInfo _lastTransformInfo;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _velocity;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _hasReceivedFirstMessage;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782810", Offset = "0x782810")]
		private Transform <TargetTransform>k__BackingField;

		[Token(Token = "0x17000212")]
		public Transform TargetTransform
		{
			[Token(Token = "0x600113D")]
			[Address(RVA = "0xCC7BA8", Offset = "0xCC7BA8", VA = "0xCC7BA8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78552C", Offset = "0x78552C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113E")]
			[Address(RVA = "0xCC7BB0", Offset = "0xCC7BB0", VA = "0xCC7BB0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78553C", Offset = "0x78553C")]
			set
			{
			}
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xCC7BB8", Offset = "0xCC7BB8", VA = "0xCC7BB8")]
		public LagCompenstationInterpolator()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xCC7C40", Offset = "0xCC7C40", VA = "0xCC7C40", Slot = "7")]
		public void Update()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xCC7F80", Offset = "0xCC7F80", VA = "0xCC7F80", Slot = "6")]
		public void Receive(TransformInfo transformInfo)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xCC7F94", Offset = "0xCC7F94", VA = "0xCC7F94", Slot = "8")]
		public void Stop()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class NoInterpolator : ITransformInterpolator
	{
		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TransformInfo _transformInfo;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782820", Offset = "0x782820")]
		private Transform <TargetTransform>k__BackingField;

		[Token(Token = "0x17000213")]
		public Transform TargetTransform
		{
			[Token(Token = "0x6001144")]
			[Address(RVA = "0xCC9474", Offset = "0xCC9474", VA = "0xCC9474", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78554C", Offset = "0x78554C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001145")]
			[Address(RVA = "0xCC947C", Offset = "0xCC947C", VA = "0xCC947C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78555C", Offset = "0x78555C")]
			set
			{
			}
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xCC940C", Offset = "0xCC940C", VA = "0xCC940C")]
		public NoInterpolator()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xCC9484", Offset = "0xCC9484", VA = "0xCC9484", Slot = "7")]
		public void Update()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xCC9554", Offset = "0xCC9554", VA = "0xCC9554", Slot = "6")]
		public void Receive(TransformInfo transformInfo)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xCC955C", Offset = "0xCC955C", VA = "0xCC955C", Slot = "8")]
		public void Stop()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BA")]
	public class TransformInfo
	{
		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string transformType;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public uint frameCounter;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public SerializableVector3 position;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SerializableQuaternion rotation;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public SerializableVector3 scale;

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xCC6F7C", Offset = "0xCC6F7C", VA = "0xCC6F7C")]
		public TransformInfo()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x77D3B8", Offset = "0x77D3B8")]
	public class TransformSpawnScriptableObject : SerializedScriptableObject
	{
		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<string, GameObject> GameObjectDictionary;

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xCCD6FC", Offset = "0xCCD6FC", VA = "0xCCD6FC")]
		public TransformSpawnScriptableObject()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class TransformSynchronizationManager : MonoBehaviour
	{
		[Token(Token = "0x2000277")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77DA28", Offset = "0x77DA28")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TransformsMessage transformsMessage;

			[Token(Token = "0x600148C")]
			[Address(RVA = "0xCCDD24", Offset = "0xCCDD24", VA = "0xCCDD24")]
			public <>c__DisplayClass16_0()
			{
			}
		}

		[Token(Token = "0x2000278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77DA38", Offset = "0x77DA38")]
		private sealed class <>c__DisplayClass16_1
		{
			[Token(Token = "0x4000BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass16_0 CS$<>8__locals1;

			[Token(Token = "0x600148D")]
			[Address(RVA = "0xCCDD2C", Offset = "0xCCDD2C", VA = "0xCCDD2C")]
			public <>c__DisplayClass16_1()
			{
			}

			[Token(Token = "0x600148E")]
			[Address(RVA = "0xCCE5F4", Offset = "0xCCE5F4", VA = "0xCCE5F4")]
			internal bool <OnTransformReceived>b__0(KeyValuePair<string, TransformInfo> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x782870", Offset = "0x782870")]
		private static TransformSynchronizationManager <Instance>k__BackingField;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x782880", Offset = "0x782880")]
		private float _syncInterval;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TransformSpawnScriptableObject _transformSpawnScriptableObject;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _networkSpawnedObjectParent;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private uint _networkFrameCounter;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private System.Timers.Timer _sendTimer;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, TransformSynchronizer> _syncTransformDictionary;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NetworkManager _networkManager;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, TransformInfo> _transformsToSpawnList;

		[Token(Token = "0x17000214")]
		public static TransformSynchronizationManager Instance
		{
			[Token(Token = "0x600114B")]
			[Address(RVA = "0xCCD704", Offset = "0xCCD704", VA = "0xCCD704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78556C", Offset = "0x78556C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114C")]
			[Address(RVA = "0xCCD754", Offset = "0xCCD754", VA = "0xCCD754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78557C", Offset = "0x78557C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public bool IsSessionStarted
		{
			[Token(Token = "0x600114D")]
			[Address(RVA = "0xCCD7A8", Offset = "0xCCD7A8", VA = "0xCCD7A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xCCD7C0", Offset = "0xCCD7C0", VA = "0xCCD7C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xCCD860", Offset = "0xCCD860", VA = "0xCCD860")]
		private void Start()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xCCDA44", Offset = "0xCCDA44", VA = "0xCCDA44")]
		private void OnTransformReceived(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xCCDDFC", Offset = "0xCCDDFC", VA = "0xCCDDFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xCCDF28", Offset = "0xCCDF28", VA = "0xCCDF28")]
		private void SpawnTransform(string ownerIP, TransformInfo transformInfo)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xCCE188", Offset = "0xCCE188", VA = "0xCCE188")]
		private void SendTransform(object sender, ElapsedEventArgs e)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xCCE388", Offset = "0xCCE388", VA = "0xCCE388")]
		public void AddTransform(TransformSynchronizer addedTransform)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xCCE44C", Offset = "0xCCE44C", VA = "0xCCE44C")]
		public void RemoveTransform(TransformSynchronizer removedTransform)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xCCE4C0", Offset = "0xCCE4C0", VA = "0xCCE4C0")]
		public Transform GetTransform(string id)
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xCCE568", Offset = "0xCCE568", VA = "0xCCE568")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xCCE584", Offset = "0xCCE584", VA = "0xCCE584")]
		public TransformSynchronizationManager()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class TransformSynchronizer : MonoBehaviour
	{
		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _randomizeID;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _lateAdd;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TransformInfo _transformInfo;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _isTransformOwner;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ITransformInterpolator _transformInterpolator;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Stopwatch _stopwatch;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78292C", Offset = "0x78292C")]
		private string <OwnerIP>k__BackingField;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _destroy;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TransformSynchronizationManager _transformSynchronizer;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _forceAdd;

		[Token(Token = "0x17000216")]
		public string OwnerIP
		{
			[Token(Token = "0x6001159")]
			[Address(RVA = "0xCCE698", Offset = "0xCCE698", VA = "0xCCE698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78558C", Offset = "0x78558C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600115A")]
			[Address(RVA = "0xCCE6A0", Offset = "0xCCE6A0", VA = "0xCCE6A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78559C", Offset = "0x78559C")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public TransformInfo TransformInfo
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0xCCE6A8", Offset = "0xCCE6A8", VA = "0xCCE6A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600115C")]
			[Address(RVA = "0xCCDD34", Offset = "0xCCDD34", VA = "0xCCDD34")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public bool IsTransformOwner
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0xCCE6B0", Offset = "0xCCE6B0", VA = "0xCCE6B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600115E")]
			[Address(RVA = "0xCCE6B8", Offset = "0xCCE6B8", VA = "0xCCE6B8")]
			set
			{
			}
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xCCE6C4", Offset = "0xCCE6C4", VA = "0xCCE6C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xCCEA04", Offset = "0xCCEA04", VA = "0xCCEA04")]
		private void OnDestroyMessageReceived(INetworkMessage obj)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xCCE9D4", Offset = "0xCCE9D4", VA = "0xCCE9D4")]
		private void LateStart()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xCCEAB0", Offset = "0xCCEAB0", VA = "0xCCEAB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xCCEC58", Offset = "0xCCEC58", VA = "0xCCEC58")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xCCED20", Offset = "0xCCED20", VA = "0xCCED20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xCCEDB4", Offset = "0xCCEDB4", VA = "0xCCEDB4")]
		public TransformSynchronizer()
		{
		}
	}
}
namespace StudioNyx.Network.UI
{
	[Token(Token = "0x20001BE")]
	public class LobbyItemUI : MonoBehaviour
	{
		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SessionInfoMessage _sessionInfoMessage;

		[Token(Token = "0x17000219")]
		public SessionInfoMessage SessionInfo
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0xCD063C", Offset = "0xCD063C", VA = "0xCD063C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001167")]
			[Address(RVA = "0xCD0644", Offset = "0xCD0644", VA = "0xCD0644")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public Toggle Toggle
		{
			[Token(Token = "0x6001168")]
			[Address(RVA = "0xCD073C", Offset = "0xCD073C", VA = "0xCD073C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xCD078C", Offset = "0xCD078C", VA = "0xCD078C")]
		public LobbyItemUI()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class LobbyUI : MonoBehaviour
	{
		[Token(Token = "0x2000279")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77DA48", Offset = "0x77DA48")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LobbyItemUI sessionItem;

			[Token(Token = "0x4000BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LobbyUI <>4__this;

			[Token(Token = "0x600148F")]
			[Address(RVA = "0xCD0D34", Offset = "0xCD0D34", VA = "0xCD0D34")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001490")]
			[Address(RVA = "0xCD0EF0", Offset = "0xCD0EF0", VA = "0xCD0EF0")]
			internal void <UpdateUI>b__0(bool b)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200027A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77DA58", Offset = "0x77DA58")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<LobbyItemUI> <>9__8_0;

			[Token(Token = "0x6001492")]
			[Address(RVA = "0xCD0EC0", Offset = "0xCD0EC0", VA = "0xCD0EC0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001493")]
			[Address(RVA = "0xCD0EC8", Offset = "0xCD0EC8", VA = "0xCD0EC8")]
			internal bool <JoinParty>b__8_0(LobbyItemUI x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _lobbyItem;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<LobbyItemUI> _lobbyItemList;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LobbyItemUI _lastSelectedItem;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NetworkManager _networkManager;

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xCD0794", Offset = "0xCD0794", VA = "0xCD0794")]
		private void Start()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xCD094C", Offset = "0xCD094C", VA = "0xCD094C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xCD0950", Offset = "0xCD0950", VA = "0xCD0950")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xCD0A28", Offset = "0xCD0A28", VA = "0xCD0A28")]
		private void UpdateUI(Dictionary<string, SessionInfoMessage> availableSessions)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xCD0D3C", Offset = "0xCD0D3C", VA = "0xCD0D3C")]
		public void JoinParty()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xCD0E54", Offset = "0xCD0E54", VA = "0xCD0E54")]
		public LobbyUI()
		{
		}
	}
}
namespace Tantawowa.TimelineEvents
{
	[Token(Token = "0x20001C0")]
	public class EventInvocationInfo
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Behaviour TargetBehaviour;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MethodInfo MethodInfo;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type[] SupportedTypes;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Key;

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xCD1594", Offset = "0xCD1594", VA = "0xCD1594")]
		public EventInvocationInfo(string key, Behaviour targetBehaviour, MethodInfo methodInfo)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xCD15D4", Offset = "0xCD15D4", VA = "0xCD15D4")]
		public void Invoke(object value)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xCD16B8", Offset = "0xCD16B8", VA = "0xCD16B8")]
		public void InvokEnum(int value)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xCD1814", Offset = "0xCD1814", VA = "0xCD1814")]
		public void InvokeNoArgs()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xCD1868", Offset = "0xCD1868", VA = "0xCD1868")]
		public void Invoke(bool isSingleArg, string value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C1")]
	public class TimelineEventBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x200027B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x77DA68", Offset = "0x77DA68")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string methodName;

			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool methodWitharg;

			[Token(Token = "0x6001494")]
			[Address(RVA = "0xCD2628", Offset = "0xCD2628", VA = "0xCD2628")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001495")]
			[Address(RVA = "0xCD28E8", Offset = "0xCD28E8", VA = "0xCD28E8")]
			internal bool <GetInvocationInfo>b__0(MethodInfo m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string HandlerKey;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsMethodWithParam;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool InvokeEventsInEditMode;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject TargetObject;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ArgValue;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventInvocationInfo invocationInfo;

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xCD237C", Offset = "0xCD237C", VA = "0xCD237C", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xCD23E4", Offset = "0xCD23E4", VA = "0xCD23E4")]
		private void UpdateDelegates()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xCD2438", Offset = "0xCD2438", VA = "0xCD2438")]
		private EventInvocationInfo GetInvocationInfo(bool isEnabled, string methodKey, EventInvocationInfo currentInfo, bool methodWitharg)
		{
			return null;
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xCD2630", Offset = "0xCD2630", VA = "0xCD2630")]
		private void GetBehaviourAndMethod(bool isEnabled, string key, ref Behaviour targetBehaviour, ref string methodName)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xCD28E0", Offset = "0xCD28E0", VA = "0xCD28E0")]
		public TimelineEventBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C2")]
	public class TimelineEventClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimelineEventBehaviour template;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x78295C", Offset = "0x78295C")]
		private GameObject <TrackTargetObject>k__BackingField;

		[Token(Token = "0x1700021B")]
		public GameObject TrackTargetObject
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0xCD29F4", Offset = "0xCD29F4", VA = "0xCD29F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7855AC", Offset = "0x7855AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600117C")]
			[Address(RVA = "0xCD29FC", Offset = "0xCD29FC", VA = "0xCD29FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7855BC", Offset = "0x7855BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600117D")]
			[Address(RVA = "0xCD2A04", Offset = "0xCD2A04", VA = "0xCD2A04", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xCD2A0C", Offset = "0xCD2A0C", VA = "0xCD2A0C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xCD2AEC", Offset = "0xCD2AEC", VA = "0xCD2AEC")]
		public TimelineEventClip()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class TimelineEventMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x6001180")]
		[Address(RVA = "0xCD2B54", Offset = "0xCD2B54", VA = "0xCD2B54")]
		public TimelineEventMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77D40C", Offset = "0x77D40C")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77D40C", Offset = "0x77D40C")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x77D40C", Offset = "0x77D40C")]
	public class TimelineEventTrack : TrackAsset
	{
		[Token(Token = "0x6001181")]
		[Address(RVA = "0xCD2B5C", Offset = "0xCD2B5C", VA = "0xCD2B5C", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xCD2F34", Offset = "0xCD2F34", VA = "0xCD2F34")]
		public TimelineEventTrack()
		{
		}
	}
}
namespace Tantawowa.Extensions
{
	[Token(Token = "0x20001C5")]
	public static class PrimitiveExtensions
	{
		[Token(Token = "0x6001183")]
		[Address(RVA = "0xCD1058", Offset = "0xCD1058", VA = "0xCD1058")]
		public static int ClampIndex(this int value, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xCD1074", Offset = "0xCD1074", VA = "0xCD1074")]
		public static bool IsValidAsType(this string input, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001185")]
		public static T ConvertToType<T>(this string input)
		{
			return (T)null;
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xCD1258", Offset = "0xCD1258", VA = "0xCD1258")]
		public static double RoundUpToNearest(this double passednumber, double roundto)
		{
			return default(double);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xCD12DC", Offset = "0xCD12DC", VA = "0xCD12DC")]
		public static double RoundDownToNearest(this double passednumber, double roundto)
		{
			return default(double);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xCD1360", Offset = "0xCD1360", VA = "0xCD1360")]
		public static float RoundUpToNearest(this float passednumber, float roundto)
		{
			return default(float);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xCD13E4", Offset = "0xCD13E4", VA = "0xCD13E4")]
		public static float RoundDownToNearest(this float passednumber, float roundto)
		{
			return default(float);
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xCD1468", Offset = "0xCD1468", VA = "0xCD1468")]
		public static int RoundUpToNearest(this int passednumber, int roundto)
		{
			return default(int);
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xCD14F8", Offset = "0xCD14F8", VA = "0xCD14F8")]
		public static int RoundDownToNearest(this int passednumber, int roundto)
		{
			return default(int);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xCD1588", Offset = "0xCD1588", VA = "0xCD1588")]
		public static int Flip(this int value)
		{
			return default(int);
		}
	}
}
namespace UnityEngine.Timeline
{
	[Token(Token = "0x20001C6")]
	public class VideoPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoClip videoClip;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mute;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool waitForFirstFrame;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double preloadTime;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double clipInTime;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool playedOnce;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool preparing;

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xCD5FA8", Offset = "0xCD5FA8", VA = "0xCD5FA8")]
		public void PrepareVideo()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xCD6388", Offset = "0xCD6388", VA = "0xCD6388")]
		private void LoopPointReached(VideoPlayer vp)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xCD6398", Offset = "0xCD6398", VA = "0xCD6398", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xCD6758", Offset = "0xCD6758", VA = "0xCD6758", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xCD68CC", Offset = "0xCD68CC", VA = "0xCD68CC", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xCD6A00", Offset = "0xCD6A00", VA = "0xCD6A00", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xCD6BD4", Offset = "0xCD6BD4", VA = "0xCD6BD4", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xCD6BDC", Offset = "0xCD6BDC", VA = "0xCD6BDC", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xCD6C14", Offset = "0xCD6C14", VA = "0xCD6C14", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xCD680C", Offset = "0xCD680C", VA = "0xCD680C")]
		public void PlayVideo()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xCD6970", Offset = "0xCD6970", VA = "0xCD6970")]
		public void PauseVideo()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xCD62F4", Offset = "0xCD62F4", VA = "0xCD62F4")]
		public void StopVideo()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xCD6544", Offset = "0xCD6544", VA = "0xCD6544")]
		private void SyncVideoToPlayable(Playable playable)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xCD6C18", Offset = "0xCD6C18", VA = "0xCD6C18")]
		public VideoPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public sealed class VideoSchedulerPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<TimelineClip> m_Clips;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector m_Director;

		[Token(Token = "0x1700021D")]
		internal PlayableDirector director
		{
			[Token(Token = "0x600119B")]
			[Address(RVA = "0xCD6C2C", Offset = "0xCD6C2C", VA = "0xCD6C2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600119C")]
			[Address(RVA = "0xCD6C34", Offset = "0xCD6C34", VA = "0xCD6C34")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		internal IEnumerable<TimelineClip> clips
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0xCD6C3C", Offset = "0xCD6C3C", VA = "0xCD6C3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600119E")]
			[Address(RVA = "0xCD6C44", Offset = "0xCD6C44", VA = "0xCD6C44")]
			set
			{
			}
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xCD6C4C", Offset = "0xCD6C4C", VA = "0xCD6C4C", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xCD704C", Offset = "0xCD704C", VA = "0xCD704C")]
		public VideoSchedulerPlayableBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C8")]
	public class VideoScriptPlayableAsset : PlayableAsset
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<VideoPlayer> videoPlayer;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[NotKeyable]
		public VideoClip videoClip;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[NotKeyable]
		public bool mute;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[NotKeyable]
		public bool loop;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		[NotKeyable]
		public bool waitForFirstFrame;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[NotKeyable]
		public double preloadTime;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[NotKeyable]
		public double clipInTime;

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xCD7054", Offset = "0xCD7054", VA = "0xCD7054", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xCD7188", Offset = "0xCD7188", VA = "0xCD7188")]
		public VideoScriptPlayableAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x77D4C8", Offset = "0x77D4C8")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x77D4C8", Offset = "0x77D4C8")]
	public class VideoScriptPlayableTrack : TrackAsset
	{
		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xCD71A4", Offset = "0xCD71A4", VA = "0xCD71A4", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xCD72DC", Offset = "0xCD72DC", VA = "0xCD72DC")]
		public VideoScriptPlayableTrack()
		{
		}
	}
}
