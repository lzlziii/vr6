using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public enum ButtonTypes
{
	[Token(Token = "0x4000002")]
	NotDefined,
	[Token(Token = "0x4000003")]
	Previous,
	[Token(Token = "0x4000004")]
	Next
}
[Token(Token = "0x2000003")]
public class PEButtonScript : MonoBehaviour, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button myButton;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ButtonTypes ButtonType;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x11F1E34", Offset = "0x11F1E34", VA = "0x11F1E34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x11F1EA4", Offset = "0x11F1EA4", VA = "0x11F1EA4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x11F1F1C", Offset = "0x11F1F1C", VA = "0x11F1F1C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x11F1F88", Offset = "0x11F1F88", VA = "0x11F1F88")]
	public void OnButtonClicked()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x11F1FEC", Offset = "0x11F1FEC", VA = "0x11F1FEC")]
	public PEButtonScript()
	{
	}
}
[Token(Token = "0x2000004")]
public class PEDestoryTimed : MonoBehaviour
{
	[Token(Token = "0x6000006")]
	[Address(RVA = "0x11F1FF4", Offset = "0x11F1FF4", VA = "0x11F1FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x11F1FF8", Offset = "0x11F1FF8", VA = "0x11F1FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x11F1FFC", Offset = "0x11F1FFC", VA = "0x11F1FFC")]
	public PEDestoryTimed()
	{
	}
}
[Token(Token = "0x2000005")]
public class ParticleEffectsLibrary : MonoBehaviour
{
	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ParticleEffectsLibrary GlobalAccess;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TotalEffects;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int CurrentParticleEffectIndex;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int CurrentParticleEffectNum;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] ParticleEffectSpawnOffsets;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] ParticleEffectLifetimes;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] ParticleEffectPrefabs;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string effectNameString;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Transform> currentActivePEList;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 spawnPosition;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x11F2018", Offset = "0x11F2018", VA = "0x11F2018")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x11F2370", Offset = "0x11F2370", VA = "0x11F2370")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x11F2374", Offset = "0x11F2374", VA = "0x11F2374")]
	public string GetCurrentPENameString()
	{
		return null;
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x11F25B0", Offset = "0x11F25B0", VA = "0x11F25B0")]
	public void PreviousParticleEffect()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x11F2944", Offset = "0x11F2944", VA = "0x11F2944")]
	public void NextParticleEffect()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x11F2CDC", Offset = "0x11F2CDC", VA = "0x11F2CDC")]
	public void SpawnParticleEffect(Vector3 positionInWorldToSpawn)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x11F2FB0", Offset = "0x11F2FB0", VA = "0x11F2FB0")]
	public ParticleEffectsLibrary()
	{
	}
}
[Token(Token = "0x2000006")]
public class UICanvasManager : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UICanvasManager GlobalAccess;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool MouseOverButton;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text PENameText;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ToolTipText;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RaycastHit rayHit;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1A4DD08", Offset = "0x1A4DD08", VA = "0x1A4DD08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1A4DD60", Offset = "0x1A4DD60", VA = "0x1A4DD60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1A4DE24", Offset = "0x1A4DE24", VA = "0x1A4DE24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1A4E134", Offset = "0x1A4E134", VA = "0x1A4E134")]
	public void UpdateToolTip(ButtonTypes toolTipType)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1A4E214", Offset = "0x1A4E214", VA = "0x1A4E214")]
	public void ClearToolTip()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1A4DF64", Offset = "0x1A4DF64", VA = "0x1A4DF64")]
	private void SelectPreviousPE()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1A4E04C", Offset = "0x1A4E04C", VA = "0x1A4E04C")]
	private void SelectNextPE()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1A4DE98", Offset = "0x1A4DE98", VA = "0x1A4DE98")]
	private void SpawnCurrentParticleEffect()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1A4E2BC", Offset = "0x1A4E2BC", VA = "0x1A4E2BC")]
	public void UIButtonClick(ButtonTypes buttonTypeClicked)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1A4E2D8", Offset = "0x1A4E2D8", VA = "0x1A4E2D8")]
	public UICanvasManager()
	{
	}
}
[Token(Token = "0x2000007")]
public class ETFXProjectileScript : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactParticle;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject projectileParticle;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject muzzleParticle;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD880C", Offset = "0xBD880C")]
	public float colliderRadius;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD8844", Offset = "0xBD8844")]
	public float collideOffset;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x12047F4", Offset = "0x12047F4", VA = "0x12047F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1204A34", Offset = "0x1204A34", VA = "0x1204A34")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1205060", Offset = "0x1205060", VA = "0x1205060")]
	public ETFXProjectileScript()
	{
	}
}
[Token(Token = "0x2000008")]
public class ETFXSceneManager : MonoBehaviour
{
	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool GUIHide;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool GUIHide2;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool GUIHide3;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1205074", Offset = "0x1205074", VA = "0x1205074")]
	public void LoadScene1()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x12050E0", Offset = "0x12050E0", VA = "0x12050E0")]
	public void LoadScene2()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x120514C", Offset = "0x120514C", VA = "0x120514C")]
	public void LoadScene3()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x12051B8", Offset = "0x12051B8", VA = "0x12051B8")]
	public void LoadScene4()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1205224", Offset = "0x1205224", VA = "0x1205224")]
	public void LoadScene5()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1205290", Offset = "0x1205290", VA = "0x1205290")]
	public void LoadScene6()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x12052FC", Offset = "0x12052FC", VA = "0x12052FC")]
	public void LoadScene7()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1205368", Offset = "0x1205368", VA = "0x1205368")]
	public void LoadScene8()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x12053D4", Offset = "0x12053D4", VA = "0x12053D4")]
	public void LoadScene9()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1205440", Offset = "0x1205440", VA = "0x1205440")]
	public void LoadScene10()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x12054AC", Offset = "0x12054AC", VA = "0x12054AC")]
	public void LoadScene11()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1205518", Offset = "0x1205518", VA = "0x1205518")]
	public void LoadScene12()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x1205584", Offset = "0x1205584", VA = "0x1205584")]
	public void LoadScene13()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x12055F0", Offset = "0x12055F0", VA = "0x12055F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x120575C", Offset = "0x120575C", VA = "0x120575C")]
	public ETFXSceneManager()
	{
	}
}
[Token(Token = "0x2000009")]
public class MapDrawer : MonoBehaviour
{
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8268", Offset = "0xBD8268")]
	private sealed class <drawQuill>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MapDrawer <>4__this;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x120DD00", Offset = "0x120DD00", VA = "0x120DD00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x120DD68", Offset = "0x120DD68", VA = "0x120DD68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x120DB24", Offset = "0x120DB24", VA = "0x120DB24")]
		[DebuggerHidden]
		public <drawQuill>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x120DBB0", Offset = "0x120DBB0", VA = "0x120DBB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x120DBB4", Offset = "0x120DBB4", VA = "0x120DBB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x120DD08", Offset = "0x120DD08", VA = "0x120DD08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8278", Offset = "0xBD8278")]
	private sealed class <reseter>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] objects;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x120E05C", Offset = "0x120E05C", VA = "0x120E05C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x120E0C4", Offset = "0x120E0C4", VA = "0x120E0C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x120DB50", Offset = "0x120DB50", VA = "0x120DB50")]
		[DebuggerHidden]
		public <reseter>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x120DFA8", Offset = "0x120DFA8", VA = "0x120DFA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x120DFAC", Offset = "0x120DFAC", VA = "0x120DFAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x120E064", Offset = "0x120E064", VA = "0x120E064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8288", Offset = "0xBD8288")]
	private sealed class <drawer>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Coroutine cor;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MapDrawer <>4__this;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delay;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] objects;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <interval>5__2;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <i>5__3;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x120DF38", Offset = "0x120DF38", VA = "0x120DF38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x120DFA0", Offset = "0x120DFA0", VA = "0x120DFA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x120DB7C", Offset = "0x120DB7C", VA = "0x120DB7C")]
		[DebuggerHidden]
		public <drawer>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x120DD70", Offset = "0x120DD70", VA = "0x120DD70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x120DD74", Offset = "0x120DD74", VA = "0x120DD74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x120DF40", Offset = "0x120DF40", VA = "0x120DF40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] walls;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] interactables;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObjectLeveable quill;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject wallOff;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine wallRoutine;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x120D7B4", Offset = "0x120D7B4", VA = "0x120D7B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x120D8A0", Offset = "0x120D8A0", VA = "0x120D8A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x120DB20", Offset = "0x120DB20", VA = "0x120DB20")]
	private void Update()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x120DA94", Offset = "0x120DA94", VA = "0x120DA94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE214", Offset = "0xBDE214")]
	private IEnumerator drawQuill(float delay = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x120D95C", Offset = "0x120D95C", VA = "0x120D95C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE278", Offset = "0xBDE278")]
	private IEnumerator reseter(GameObject[] objects, float delay = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x120D9D8", Offset = "0x120D9D8", VA = "0x120D9D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE2DC", Offset = "0xBDE2DC")]
	private IEnumerator drawer(GameObject[] objects, float delay = 1f, [Optional] Coroutine cor)
	{
		return null;
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x120DBA8", Offset = "0x120DBA8", VA = "0x120DBA8")]
	public MapDrawer()
	{
	}
}
[Token(Token = "0x200000A")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD7E5C", Offset = "0xBD7E5C")]
public class FastList<T>
{
	[Token(Token = "0x200024B")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8298", Offset = "0xBD8298")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000F6")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000EF6")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF3")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF4")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EF5")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF7")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x6000035")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000036")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x6000037")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000038")]
		set
		{
		}
	}

	[Token(Token = "0x6000033")]
	public FastList()
	{
	}

	[Token(Token = "0x6000034")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000039")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x600003A")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x600003B")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600003C")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600003D")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600003E")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600003F")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000040")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000041")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000042")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000043")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000044")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000046")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000047")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE340", Offset = "0xBDE340")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000049")]
	private void Allocate()
	{
	}

	[Token(Token = "0x600004A")]
	private void Trim()
	{
	}

	[Token(Token = "0x600004B")]
	public void Clear()
	{
	}

	[Token(Token = "0x600004C")]
	public void Release()
	{
	}
}
[Token(Token = "0x200000B")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string header;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly string message;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1209314", Offset = "0x1209314", VA = "0x1209314")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200000C")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x12092E0", Offset = "0x12092E0", VA = "0x12092E0")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200000D")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x11EF54C", Offset = "0x11EF54C", VA = "0x11EF54C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x11EF6B8", Offset = "0x11EF6B8", VA = "0x11EF6B8")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x11EFA5C", Offset = "0x11EFA5C", VA = "0x11EFA5C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x11EFCB4", Offset = "0x11EFCB4", VA = "0x11EFCB4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x11EFCE0", Offset = "0x11EFCE0", VA = "0x11EFCE0")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200000E")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x11F944C", Offset = "0x11F944C", VA = "0x11F944C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x11F94D8", Offset = "0x11F94D8", VA = "0x11F94D8")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x11F9644", Offset = "0x11F9644", VA = "0x11F9644")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200000F")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000003")]
	public bool IsVisible
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0x1207D50", Offset = "0x1207D50", VA = "0x1207D50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000058")]
		[Address(RVA = "0x1207D58", Offset = "0x1207D58", VA = "0x1207D58")]
		set
		{
		}
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1207E80", Offset = "0x1207E80", VA = "0x1207E80")]
	private void Start()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x120809C", Offset = "0x120809C", VA = "0x120809C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x12080A4", Offset = "0x12080A4", VA = "0x12080A4")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000010")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200024D")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x11FA268", Offset = "0x11FA268", VA = "0x11FA268")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200024E")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDE1A4", Offset = "0xBDE1A4")]
		public float FakeLatencyMax;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDE1BC", Offset = "0xBDE1BC")]
		public float FakeLatencyMin;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDE1D4", Offset = "0xBDE1D4")]
		public float LatencyWeight;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDE1EC", Offset = "0xBDE1EC")]
		public int MaxSamples;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x11FA270", Offset = "0x11FA270", VA = "0x11FA270")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x11FA420", Offset = "0x11FA420", VA = "0x11FA420")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x11F98F8", Offset = "0x11F98F8", VA = "0x11F98F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x11F9A30", Offset = "0x11F9A30", VA = "0x11F9A30")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x11F9D9C", Offset = "0x11F9D9C", VA = "0x11F9D9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x11F9CF4", Offset = "0x11F9CF4", VA = "0x11F9CF4")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x11F9FF8", Offset = "0x11F9FF8", VA = "0x11F9FF8")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x11FA37C", Offset = "0x11FA37C", VA = "0x11FA37C")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000011")]
public class P2PManager
{
	[Token(Token = "0x200024F")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40009C3")]
		Update = 1
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x11F0E00", Offset = "0x11F0E00", VA = "0x11F0E00")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x11F0EC0", Offset = "0x11F0EC0", VA = "0x11F0EC0")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x11F0FA4", Offset = "0x11F0FA4", VA = "0x11F0FA4")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x11F1028", Offset = "0x11F1028", VA = "0x11F1028")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x11F1184", Offset = "0x11F1184", VA = "0x11F1184")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x11F146C", Offset = "0x11F146C", VA = "0x11F146C")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x11F1860", Offset = "0x11F1860", VA = "0x11F1860")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x11F1B04", Offset = "0x11F1B04", VA = "0x11F1B04")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x11F1630", Offset = "0x11F1630", VA = "0x11F1630")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x11F1A34", Offset = "0x11F1A34", VA = "0x11F1A34")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x11F1718", Offset = "0x11F1718", VA = "0x11F1718")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x11F1D1C", Offset = "0x11F1D1C", VA = "0x11F1D1C")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x11F1678", Offset = "0x11F1678", VA = "0x11F1678")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x11F1A78", Offset = "0x11F1A78", VA = "0x11F1A78")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x11F17C0", Offset = "0x11F17C0", VA = "0x11F17C0")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x11F1DA8", Offset = "0x11F1DA8", VA = "0x11F1DA8")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000012")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x11F8EA0", Offset = "0x11F8EA0", VA = "0x11F8EA0", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x11F8EE4", Offset = "0x11F8EE4", VA = "0x11F8EE4", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x11F8F1C", Offset = "0x11F8F1C", VA = "0x11F8F1C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x11F8F44", Offset = "0x11F8F44", VA = "0x11F8F44")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x11F90E4", Offset = "0x11F90E4", VA = "0x11F90E4")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x11F9164", Offset = "0x11F9164", VA = "0x11F9164")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x11F91B8", Offset = "0x11F91B8", VA = "0x11F91B8")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000013")]
public class RemotePlayer
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x11FA4B4", Offset = "0x11FA4B4", VA = "0x11FA4B4")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000014")]
public class RoomManager
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x11FA4BC", Offset = "0x11FA4BC", VA = "0x11FA4BC")]
	public RoomManager()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x11FA588", Offset = "0x11FA588", VA = "0x11FA588")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x11FA6E8", Offset = "0x11FA6E8", VA = "0x11FA6E8")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x11FA7F8", Offset = "0x11FA7F8", VA = "0x11FA7F8")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x11FA8AC", Offset = "0x11FA8AC", VA = "0x11FA8AC")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x11FA9E0", Offset = "0x11FA9E0", VA = "0x11FA9E0")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x11FA718", Offset = "0x11FA718", VA = "0x11FA718")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x11FAA6C", Offset = "0x11FAA6C", VA = "0x11FAA6C")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x11FB15C", Offset = "0x11FB15C", VA = "0x11FB15C")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x11FB480", Offset = "0x11FB480", VA = "0x11FB480")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x11FAD60", Offset = "0x11FAD60", VA = "0x11FAD60")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000015")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000250")]
	public enum State
	{
		[Token(Token = "0x40009C5")]
		INITIALIZING,
		[Token(Token = "0x40009C6")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40009C7")]
		CREATING_A_ROOM,
		[Token(Token = "0x40009C8")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40009C9")]
		JOINING_A_ROOM,
		[Token(Token = "0x40009CA")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40009CB")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40009CC")]
		SHUTDOWN
	}

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000004")]
	public static State CurrentState
	{
		[Token(Token = "0x6000091")]
		[Address(RVA = "0x1A47A6C", Offset = "0x1A47A6C", VA = "0x1A47A6C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000005")]
	public static ulong MyID
	{
		[Token(Token = "0x6000092")]
		[Address(RVA = "0x1A47AE0", Offset = "0x1A47AE0", VA = "0x1A47AE0")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000006")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000093")]
		[Address(RVA = "0x1A47BB8", Offset = "0x1A47BB8", VA = "0x1A47BB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1A45A88", Offset = "0x1A45A88", VA = "0x1A45A88", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1A45E30", Offset = "0x1A45E30", VA = "0x1A45E30", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1A46664", Offset = "0x1A46664", VA = "0x1A46664")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1A4692C", Offset = "0x1A4692C", VA = "0x1A4692C", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1A46930", Offset = "0x1A46930", VA = "0x1A46930")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1A46A24", Offset = "0x1A46A24", VA = "0x1A46A24")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1A4716C", Offset = "0x1A4716C", VA = "0x1A4716C")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1A47664", Offset = "0x1A47664", VA = "0x1A47664")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1A47830", Offset = "0x1A47830", VA = "0x1A47830")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1A479FC", Offset = "0x1A479FC", VA = "0x1A479FC")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1A46190", Offset = "0x1A46190", VA = "0x1A46190")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1A467C0", Offset = "0x1A467C0", VA = "0x1A467C0")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1A46244", Offset = "0x1A46244", VA = "0x1A46244")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1A47CCC", Offset = "0x1A47CCC", VA = "0x1A47CCC")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1A47E4C", Offset = "0x1A47E4C", VA = "0x1A47E4C")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x1A47F34", Offset = "0x1A47F34", VA = "0x1A47F34")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1A48058", Offset = "0x1A48058", VA = "0x1A48058")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1A48128", Offset = "0x1A48128", VA = "0x1A48128")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1A46870", Offset = "0x1A46870", VA = "0x1A46870")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1A48554", Offset = "0x1A48554", VA = "0x1A48554")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1A485E0", Offset = "0x1A485E0", VA = "0x1A485E0")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1A48378", Offset = "0x1A48378", VA = "0x1A48378")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1A488A8", Offset = "0x1A488A8", VA = "0x1A488A8")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1A45A00", Offset = "0x1A45A00", VA = "0x1A45A00")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBDE3A4", Offset = "0xBDE3A4")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1A489E4", Offset = "0x1A489E4", VA = "0x1A489E4")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1A48AAC", Offset = "0x1A48AAC", VA = "0x1A48AAC")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000016")]
public class VoipManager
{
	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1A465A4", Offset = "0x1A465A4", VA = "0x1A465A4")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1A487CC", Offset = "0x1A487CC", VA = "0x1A487CC")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1A4797C", Offset = "0x1A4797C", VA = "0x1A4797C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1A4EAD0", Offset = "0x1A4EAD0", VA = "0x1A4EAD0")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1A4EC20", Offset = "0x1A4EC20", VA = "0x1A4EC20")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000017")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x12079CC", Offset = "0x12079CC", VA = "0x12079CC")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1207A4C", Offset = "0x1207A4C", VA = "0x1207A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x1207BC8", Offset = "0x1207BC8", VA = "0x1207BC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x1207C2C", Offset = "0x1207C2C", VA = "0x1207C2C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1207A88", Offset = "0x1207A88", VA = "0x1207A88")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1207CE8", Offset = "0x1207CE8", VA = "0x1207CE8")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1207D48", Offset = "0x1207D48", VA = "0x1207D48")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000018")]
public class AvatarLayer
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x11FCE4C", Offset = "0x11FCE4C", VA = "0x11FCE4C")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000019")]
public class PacketRecordSettings
{
	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x11F2004", Offset = "0x11F2004", VA = "0x11F2004")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200001A")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000251")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x123EFDC", Offset = "0x123EFDC", VA = "0x123EFDC")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000252")]
	public enum HandType
	{
		[Token(Token = "0x40009CF")]
		Right,
		[Token(Token = "0x40009D0")]
		Left,
		[Token(Token = "0x40009D1")]
		Max
	}

	[Token(Token = "0x2000253")]
	public enum HandJoint
	{
		[Token(Token = "0x40009D3")]
		HandBase,
		[Token(Token = "0x40009D4")]
		IndexBase,
		[Token(Token = "0x40009D5")]
		IndexTip,
		[Token(Token = "0x40009D6")]
		ThumbBase,
		[Token(Token = "0x40009D7")]
		ThumbTip,
		[Token(Token = "0x40009D8")]
		Max
	}

	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82A8", Offset = "0xBD82A8")]
	private sealed class <WaitForMouthAudioSource>d__135 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x1240D18", Offset = "0x1240D18", VA = "0x1240D18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x1240D80", Offset = "0x1240D80", VA = "0x1240D80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1240900", Offset = "0x1240900", VA = "0x1240900")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__135(int <>1__state)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x1240B7C", Offset = "0x1240B7C", VA = "0x1240B7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x1240B80", Offset = "0x1240B80", VA = "0x1240B80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1240D20", Offset = "0x1240D20", VA = "0x1240D20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD886C", Offset = "0xBD886C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD88A4", Offset = "0xBD88A4")]
	public bool EnableBody;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD88DC", Offset = "0xBD88DC")]
	public bool RecordPackets;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8914", Offset = "0xBD8914")]
	public bool StartWithControllers;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD894C", Offset = "0xBD894C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD894C", Offset = "0xBD894C")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD89BC", Offset = "0xBD89BC")]
	private bool CombineMeshes;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD89F4", Offset = "0xBD89F4")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8A2C", Offset = "0xBD8A2C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8A64", Offset = "0xBD8A64")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8A9C", Offset = "0xBD8A9C")]
	public bool EnableLaughter;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int renderPartCount;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float[] visemes;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AudioSource audioSource;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool showLeftController;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool showRightController;

	[Token(Token = "0x40000AA")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000AC")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000AD")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000AE")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000AF")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000B0")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x123BE28", Offset = "0x123BE28", VA = "0x123BE28")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x123C240", Offset = "0x123C240", VA = "0x123C240")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x123C2CC", Offset = "0x123C2CC", VA = "0x123C2CC")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x123C338", Offset = "0x123C338", VA = "0x123C338")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x123C460", Offset = "0x123C460", VA = "0x123C460")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x123C544", Offset = "0x123C544", VA = "0x123C544")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x123C624", Offset = "0x123C624", VA = "0x123C624")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x123C80C", Offset = "0x123C80C", VA = "0x123C80C")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x123C8D4", Offset = "0x123C8D4", VA = "0x123C8D4")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x123C958", Offset = "0x123C958", VA = "0x123C958")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x123CA40", Offset = "0x123CA40", VA = "0x123CA40")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x123CACC", Offset = "0x123CACC", VA = "0x123CACC")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x123CBE8", Offset = "0x123CBE8", VA = "0x123CBE8")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x123CC48", Offset = "0x123CC48", VA = "0x123CC48")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60000BF")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x123D0CC", Offset = "0x123D0CC", VA = "0x123D0CC")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x123D42C", Offset = "0x123D42C", VA = "0x123D42C")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x123D5D4", Offset = "0x123D5D4", VA = "0x123D5D4")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x123D89C", Offset = "0x123D89C", VA = "0x123D89C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x123D988", Offset = "0x123D988", VA = "0x123D988")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x123DD3C", Offset = "0x123DD3C", VA = "0x123DD3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x123E0BC", Offset = "0x123E0BC", VA = "0x123E0BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x123EA54", Offset = "0x123EA54", VA = "0x123EA54")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x123EAA8", Offset = "0x123EAA8", VA = "0x123EAA8")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x123DC04", Offset = "0x123DC04", VA = "0x123DC04")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x123DCA0", Offset = "0x123DCA0", VA = "0x123DCA0")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x123EAD8", Offset = "0x123EAD8", VA = "0x123EAD8")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x123E430", Offset = "0x123E430", VA = "0x123E430")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x123ED20", Offset = "0x123ED20", VA = "0x123ED20")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x123EB40", Offset = "0x123EB40", VA = "0x123EB40")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x123F060", Offset = "0x123F060", VA = "0x123F060")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x123F464", Offset = "0x123F464", VA = "0x123F464")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x123F694", Offset = "0x123F694", VA = "0x123F694")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x123F7D4", Offset = "0x123F7D4", VA = "0x123F7D4")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x123F98C", Offset = "0x123F98C", VA = "0x123F98C")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x123E558", Offset = "0x123E558", VA = "0x123E558")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x123FA64", Offset = "0x123FA64", VA = "0x123FA64")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x123E440", Offset = "0x123E440", VA = "0x123E440")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x123FB58", Offset = "0x123FB58", VA = "0x123FB58")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x12400A0", Offset = "0x12400A0", VA = "0x12400A0")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x1240560", Offset = "0x1240560", VA = "0x1240560")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x12405D8", Offset = "0x12405D8", VA = "0x12405D8")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x1240654", Offset = "0x1240654", VA = "0x1240654")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x123E8F0", Offset = "0x123E8F0", VA = "0x123E8F0")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x123FC20", Offset = "0x123FC20", VA = "0x123FC20")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x1240884", Offset = "0x1240884", VA = "0x1240884")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE408", Offset = "0xBDE408")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x124092C", Offset = "0x124092C", VA = "0x124092C")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x1240728", Offset = "0x1240728", VA = "0x1240728")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x12409F4", Offset = "0x12409F4", VA = "0x12409F4")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x12409F8", Offset = "0x12409F8", VA = "0x12409F8")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1240724", Offset = "0x1240724", VA = "0x1240724")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x12409FC", Offset = "0x12409FC", VA = "0x12409FC")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200001B")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x1240D88", Offset = "0x1240D88", VA = "0x1240D88")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200001C")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1240E44", Offset = "0x1240E44", VA = "0x1240E44")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x124214C", Offset = "0x124214C", VA = "0x124214C")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x1241CF0", Offset = "0x1241CF0", VA = "0x1241CF0")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1241A88", Offset = "0x1241A88", VA = "0x1241A88")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1241B64", Offset = "0x1241B64", VA = "0x1241B64")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x12423B0", Offset = "0x12423B0", VA = "0x12423B0")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200001D")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000CD")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x11E3C48", Offset = "0x11E3C48", VA = "0x11E3C48")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200001E")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x11E3EC0", Offset = "0x11E3EC0", VA = "0x11E3EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x11E42CC", Offset = "0x11E42CC", VA = "0x11E42CC")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200001F")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x11E43E0", Offset = "0x11E43E0", VA = "0x11E43E0")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x11E453C", Offset = "0x11E453C", VA = "0x11E453C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x11E4664", Offset = "0x11E4664", VA = "0x11E4664")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000020")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x11E46C8", Offset = "0x11E46C8", VA = "0x11E46C8")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x11E3FE8", Offset = "0x11E3FE8", VA = "0x11E3FE8")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x11E4CAC", Offset = "0x11E4CAC", VA = "0x11E4CAC")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x11E4D0C", Offset = "0x11E4D0C", VA = "0x11E4D0C")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x11E54F0", Offset = "0x11E54F0", VA = "0x11E54F0")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x11E4330", Offset = "0x11E4330", VA = "0x11E4330")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000021")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000255")]
	public enum PacketMode
	{
		[Token(Token = "0x40009DD")]
		SDK,
		[Token(Token = "0x40009DE")]
		Unity
	}

	[Token(Token = "0x2000256")]
	public struct ControllerPose
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x11E70B8", Offset = "0x11E70B8", VA = "0x11E70B8")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000257")]
	public struct PoseFrame
	{
		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x11E7214", Offset = "0x11E7214", VA = "0x11E7214")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x11E6CE4", Offset = "0x11E6CE4", VA = "0x11E6CE4")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000FA")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x11E6CF4", Offset = "0x11E6CF4", VA = "0x11E6CF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x11E6D94", Offset = "0x11E6D94", VA = "0x11E6D94")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x11E700C", Offset = "0x11E700C", VA = "0x11E700C")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x11E70A8", Offset = "0x11E70A8", VA = "0x11E70A8")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000022")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x11E75CC", Offset = "0x11E75CC", VA = "0x11E75CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x11E7734", Offset = "0x11E7734", VA = "0x11E7734")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000023")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x11E77A0", Offset = "0x11E77A0", VA = "0x11E77A0")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x11E790C", Offset = "0x11E790C", VA = "0x11E790C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x11E7CB0", Offset = "0x11E7CB0", VA = "0x11E7CB0")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x11E7F7C", Offset = "0x11E7F7C", VA = "0x11E7F7C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x11E7FA8", Offset = "0x11E7FA8", VA = "0x11E7FA8")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000024")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000258")]
	public enum TextureType
	{
		[Token(Token = "0x40009EF")]
		DiffuseTextures,
		[Token(Token = "0x40009F0")]
		NormalMaps,
		[Token(Token = "0x40009F1")]
		RoughnessMaps,
		[Token(Token = "0x40009F2")]
		Count
	}

	[Token(Token = "0x2000259")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200025A")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200025B")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200025C")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x11EA420", Offset = "0x11EA420", VA = "0x11EA420")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82B8", Offset = "0xBD82B8")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x11EAE1C", Offset = "0x11EAE1C", VA = "0x11EAE1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x11EAE84", Offset = "0x11EAE84", VA = "0x11EAE84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x11EA234", Offset = "0x11EA234", VA = "0x11EA234")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x11EA75C", Offset = "0x11EA75C", VA = "0x11EA75C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x11EA760", Offset = "0x11EA760", VA = "0x11EA760", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x11EAE24", Offset = "0x11EAE24", VA = "0x11EAE24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000101")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000102")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000103")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000104")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x11E8058", Offset = "0x11E8058", VA = "0x11E8058")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x11E820C", Offset = "0x11E820C", VA = "0x11E820C")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x11E824C", Offset = "0x11E824C", VA = "0x11E824C")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x11E899C", Offset = "0x11E899C", VA = "0x11E899C")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x11E8C38", Offset = "0x11E8C38", VA = "0x11E8C38")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x11E82E0", Offset = "0x11E82E0", VA = "0x11E82E0")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x11E8D28", Offset = "0x11E8D28", VA = "0x11E8D28")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x11E86FC", Offset = "0x11E86FC", VA = "0x11E86FC")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x11E8FBC", Offset = "0x11E8FBC", VA = "0x11E8FBC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x11E9234", Offset = "0x11E9234", VA = "0x11E9234")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x11E9330", Offset = "0x11E9330", VA = "0x11E9330")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x11E9368", Offset = "0x11E9368", VA = "0x11E9368")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x11E8904", Offset = "0x11E8904", VA = "0x11E8904")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE46C", Offset = "0xBDE46C")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x11EA260", Offset = "0x11EA260", VA = "0x11EA260")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000025")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000007")]
	public float Duration
	{
		[Token(Token = "0x6000115")]
		[Address(RVA = "0x11EAE8C", Offset = "0x11EAE8C", VA = "0x11EAE8C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000008")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x11EAEF8", Offset = "0x11EAEF8", VA = "0x11EAEF8")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x11EAF7C", Offset = "0x11EAF7C", VA = "0x11EAF7C")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x11EB064", Offset = "0x11EB064", VA = "0x11EB064")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x11EB1D4", Offset = "0x11EB1D4", VA = "0x11EB1D4")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x11EB2FC", Offset = "0x11EB2FC", VA = "0x11EB2FC")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x11EB3CC", Offset = "0x11EB3CC", VA = "0x11EB3CC")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x11EB5D4", Offset = "0x11EB5D4", VA = "0x11EB5D4")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x11EB82C", Offset = "0x11EB82C", VA = "0x11EB82C")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000026")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600011E")]
	[Address(RVA = "0x11FD254", Offset = "0x11FD254", VA = "0x11FD254")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x11FD368", Offset = "0x11FD368", VA = "0x11FD368")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x11FD514", Offset = "0x11FD514", VA = "0x11FD514")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x11FD3D8", Offset = "0x11FD3D8", VA = "0x11FD3D8")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x11FD46C", Offset = "0x11FD46C", VA = "0x11FD46C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000027")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000123")]
	[Address(RVA = "0x11FCE54", Offset = "0x11FCE54", VA = "0x11FCE54")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x11FD1F8", Offset = "0x11FD1F8", VA = "0x11FD1F8")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x11FCFF4", Offset = "0x11FCFF4", VA = "0x11FCFF4")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x11FD06C", Offset = "0x11FD06C", VA = "0x11FD06C")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x11FD108", Offset = "0x11FD108", VA = "0x11FD108")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000028")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400010C")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400010D")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x11EBA1C", Offset = "0x11EBA1C", VA = "0x11EBA1C")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x11EBAA8", Offset = "0x11EBAA8", VA = "0x11EBAA8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x11EBAC4", Offset = "0x11EBAC4", VA = "0x11EBAC4")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x11EBC70", Offset = "0x11EBC70", VA = "0x11EBC70")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x11EBE54", Offset = "0x11EBE54", VA = "0x11EBE54")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000029")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x11EBEE4", Offset = "0x11EBEE4", VA = "0x11EBEE4")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x11EBFC8", Offset = "0x11EBFC8", VA = "0x11EBFC8")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x11EC1C0", Offset = "0x11EC1C0", VA = "0x11EC1C0")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x11EC554", Offset = "0x11EC554", VA = "0x11EC554")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x11EC64C", Offset = "0x11EC64C", VA = "0x11EC64C")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200002A")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000116")]
	Body = 1,
	[Token(Token = "0x4000117")]
	Hands = 2,
	[Token(Token = "0x4000118")]
	Base = 4,
	[Token(Token = "0x4000119")]
	BodyTilt = 0x10,
	[Token(Token = "0x400011A")]
	Expressive = 0x20,
	[Token(Token = "0x400011B")]
	All = -1
}
[Token(Token = "0x200002B")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400011D")]
	AvatarSpecification,
	[Token(Token = "0x400011E")]
	AssetLoaded,
	[Token(Token = "0x400011F")]
	Count
}
[Token(Token = "0x200002C")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200002D")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200002E")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000125")]
	Mesh,
	[Token(Token = "0x4000126")]
	Texture,
	[Token(Token = "0x4000127")]
	Pose,
	[Token(Token = "0x4000128")]
	Material,
	[Token(Token = "0x4000129")]
	CombinedMesh,
	[Token(Token = "0x400012A")]
	PBSMaterial,
	[Token(Token = "0x400012B")]
	FailedLoad,
	[Token(Token = "0x400012C")]
	Count
}
[Token(Token = "0x200002F")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000030")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000031")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000032")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000033")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000034")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000161")]
	RGB24,
	[Token(Token = "0x4000162")]
	DXT1,
	[Token(Token = "0x4000163")]
	DXT5,
	[Token(Token = "0x4000164")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000165")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000166")]
	Count
}
[Token(Token = "0x2000035")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000036")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x400016E")]
	SkinnedMeshRender,
	[Token(Token = "0x400016F")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000170")]
	ProjectorRender,
	[Token(Token = "0x4000171")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000172")]
	Count
}
[Token(Token = "0x2000037")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000174")]
	Unknown,
	[Token(Token = "0x4000175")]
	Default,
	[Token(Token = "0x4000176")]
	Verbose,
	[Token(Token = "0x4000177")]
	Debug,
	[Token(Token = "0x4000178")]
	Info,
	[Token(Token = "0x4000179")]
	Warn,
	[Token(Token = "0x400017A")]
	Error,
	[Token(Token = "0x400017B")]
	Fatal,
	[Token(Token = "0x400017C")]
	Silent
}
[Token(Token = "0x2000038")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000039")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000181")]
	One = 1,
	[Token(Token = "0x4000182")]
	Two = 2,
	[Token(Token = "0x4000183")]
	Three = 4,
	[Token(Token = "0x4000184")]
	Joystick = 8
}
[Token(Token = "0x200003A")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000186")]
	One = 1,
	[Token(Token = "0x4000187")]
	Two = 2,
	[Token(Token = "0x4000188")]
	Joystick = 4,
	[Token(Token = "0x4000189")]
	ThumbRest = 8,
	[Token(Token = "0x400018A")]
	Index = 0x10,
	[Token(Token = "0x400018B")]
	Pointing = 0x40,
	[Token(Token = "0x400018C")]
	ThumbUp = 0x80
}
[Token(Token = "0x200003B")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200003C")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200003D")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200003E")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200003F")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000040")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000041")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000042")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000043")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001AC")]
	Add,
	[Token(Token = "0x40001AD")]
	Multiply,
	[Token(Token = "0x40001AE")]
	Count
}
[Token(Token = "0x2000044")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001B0")]
	Color,
	[Token(Token = "0x40001B1")]
	Texture,
	[Token(Token = "0x40001B2")]
	TextureSingleChannel,
	[Token(Token = "0x40001B3")]
	Parallax,
	[Token(Token = "0x40001B4")]
	Count
}
[Token(Token = "0x2000045")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001B6")]
	None,
	[Token(Token = "0x40001B7")]
	Positional,
	[Token(Token = "0x40001B8")]
	ViewReflection,
	[Token(Token = "0x40001B9")]
	Fresnel,
	[Token(Token = "0x40001BA")]
	Pulse,
	[Token(Token = "0x40001BB")]
	Count
}
[Token(Token = "0x2000046")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001BD")]
	Touch,
	[Token(Token = "0x40001BE")]
	Malibu,
	[Token(Token = "0x40001BF")]
	Go,
	[Token(Token = "0x40001C0")]
	Quest,
	[Token(Token = "0x40001C1")]
	Count
}
[Token(Token = "0x2000047")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001C3")]
	Lowest = 1,
	[Token(Token = "0x40001C4")]
	Medium = 3,
	[Token(Token = "0x40001C5")]
	Highest = 5
}
[Token(Token = "0x2000048")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40001C7")]
	Unknown = -1,
	[Token(Token = "0x40001C8")]
	One,
	[Token(Token = "0x40001C9")]
	Two
}
[Token(Token = "0x2000049")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1A50368", Offset = "0x1A50368", VA = "0x1A50368")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1A50398", Offset = "0x1A50398", VA = "0x1A50398", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1A505B8", Offset = "0x1A505B8", VA = "0x1A505B8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004A")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1A5069C", Offset = "0x1A5069C", VA = "0x1A5069C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1A506CC", Offset = "0x1A506CC", VA = "0x1A506CC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1A50A60", Offset = "0x1A50A60", VA = "0x1A50A60", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004B")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1A4FA10", Offset = "0x1A4FA10", VA = "0x1A4FA10")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1A4FA40", Offset = "0x1A4FA40", VA = "0x1A4FA40", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1A4FCD4", Offset = "0x1A4FCD4", VA = "0x1A4FCD4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004C")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1A50BC8", Offset = "0x1A50BC8", VA = "0x1A50BC8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1A50BF8", Offset = "0x1A50BF8", VA = "0x1A50BF8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1A50DEC", Offset = "0x1A50DEC", VA = "0x1A50DEC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004D")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1240D90", Offset = "0x1240D90", VA = "0x1240D90")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200004E")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200004F")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40001FE")]
	FirstPerson = 1,
	[Token(Token = "0x40001FF")]
	ThirdPerson = 2,
	[Token(Token = "0x4000200")]
	SelfOccluding = 4
}
[Token(Token = "0x2000050")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000051")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000052")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000053")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000054")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000216")]
	Default,
	[Token(Token = "0x4000217")]
	GripSphere,
	[Token(Token = "0x4000218")]
	GripCube,
	[Token(Token = "0x4000219")]
	Count
}
[Token(Token = "0x2000055")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400021B")]
	Body,
	[Token(Token = "0x400021C")]
	Clothing,
	[Token(Token = "0x400021D")]
	Eyewear,
	[Token(Token = "0x400021E")]
	Hair,
	[Token(Token = "0x400021F")]
	Beard,
	[Token(Token = "0x4000220")]
	Count
}
[Token(Token = "0x2000056")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000057")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000059")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200005A")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400022A")]
	AvatarHead,
	[Token(Token = "0x400022B")]
	AvatarHand,
	[Token(Token = "0x400022C")]
	Object,
	[Token(Token = "0x400022D")]
	ObjectStatic,
	[Token(Token = "0x400022E")]
	Count
}
[Token(Token = "0x200005B")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200005C")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200005D")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x200005E")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200005F")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400023A")]
	Point,
	[Token(Token = "0x400023B")]
	Direction,
	[Token(Token = "0x400023C")]
	Spot,
	[Token(Token = "0x400023D")]
	Count
}
[Token(Token = "0x2000060")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000061")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000062")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000063")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000064")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000253")]
	None = 0u,
	[Token(Token = "0x4000254")]
	GazeTarget = 1u,
	[Token(Token = "0x4000255")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000065")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000066")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000067")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000068")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000069")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200006A")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200025E")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x11ED6F4", Offset = "0x11ED6F4", VA = "0x11ED6F4")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400026A")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ovrAvatarDebugContext debugContext;

	[Token(Token = "0x17000009")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x11E5584", Offset = "0x11E5584", VA = "0x11E5584")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x11EC65C", Offset = "0x11EC65C", VA = "0x11EC65C")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x11EC8E4", Offset = "0x11EC8E4", VA = "0x11EC8E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x11EC958", Offset = "0x11EC958", VA = "0x11EC958")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x11ED1A8", Offset = "0x11ED1A8", VA = "0x11ED1A8")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x11ED200", Offset = "0x11ED200", VA = "0x11ED200")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x11ED258", Offset = "0x11ED258", VA = "0x11ED258")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x11ED2C0", Offset = "0x11ED2C0", VA = "0x11ED2C0")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x11ED328", Offset = "0x11ED328", VA = "0x11ED328")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x11ECFE0", Offset = "0x11ECFE0", VA = "0x11ECFE0")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x11ED408", Offset = "0x11ED408", VA = "0x11ED408")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x11ED524", Offset = "0x11ED524", VA = "0x11ED524")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x11E5738", Offset = "0x11E5738", VA = "0x11E5738")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x11ED604", Offset = "0x11ED604", VA = "0x11ED604")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x11EC898", Offset = "0x11EC898", VA = "0x11EC898")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x11E89FC", Offset = "0x11E89FC", VA = "0x11E89FC")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x11ED6DC", Offset = "0x11ED6DC", VA = "0x11ED6DC")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200006B")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000A")]
	public static string AppID
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0x11ED69C", Offset = "0x11ED69C", VA = "0x11ED69C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000165")]
		[Address(RVA = "0x11ED89C", Offset = "0x11ED89C", VA = "0x11ED89C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000166")]
		[Address(RVA = "0x11ED6BC", Offset = "0x11ED6BC", VA = "0x11ED6BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000167")]
		[Address(RVA = "0x11ED8CC", Offset = "0x11ED8CC", VA = "0x11ED8CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000168")]
		[Address(RVA = "0x11ED770", Offset = "0x11ED770", VA = "0x11ED770")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000169")]
		[Address(RVA = "0x11ED8FC", Offset = "0x11ED8FC", VA = "0x11ED8FC")]
		set
		{
		}
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x11ED954", Offset = "0x11ED954", VA = "0x11ED954")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200006C")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x11EF10C", Offset = "0x11EF10C", VA = "0x11EF10C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x11E46D0", Offset = "0x11E46D0", VA = "0x11E46D0")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x11EF284", Offset = "0x11EF284", VA = "0x11EF284")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x11EF3E4", Offset = "0x11EF3E4", VA = "0x11EF3E4")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200006D")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x11EF3F4", Offset = "0x11EF3F4", VA = "0x11EF3F4")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x11E48F8", Offset = "0x11E48F8", VA = "0x11E48F8")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x11EF53C", Offset = "0x11EF53C", VA = "0x11EF53C")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200006E")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400027A")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x400027B")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x400027C")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x11ED9C4", Offset = "0x11ED9C4", VA = "0x11ED9C4")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x11E4A90", Offset = "0x11E4A90", VA = "0x11E4A90")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x11EE8C8", Offset = "0x11EE8C8", VA = "0x11EE8C8")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x11EE000", Offset = "0x11EE000", VA = "0x11EE000")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x11EDDD0", Offset = "0x11EDDD0", VA = "0x11EDDD0")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x11EDEE4", Offset = "0x11EDEE4", VA = "0x11EDEE4")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x11EF0FC", Offset = "0x11EF0FC", VA = "0x11EF0FC")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200006F")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200025F")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000260")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x11F03EC", Offset = "0x11F03EC", VA = "0x11F03EC")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000261")]
	public struct TextureSet
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x11F0448", Offset = "0x11F0448", VA = "0x11F0448")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82C8", Offset = "0xBD82C8")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x11F0BBC", Offset = "0x11F0BBC", VA = "0x11F0BBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x11F0C24", Offset = "0x11F0C24", VA = "0x11F0C24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x11F0528", Offset = "0x11F0528", VA = "0x11F0528")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x11F06D0", Offset = "0x11F06D0", VA = "0x11F06D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x11F06D4", Offset = "0x11F06D4", VA = "0x11F06D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x11F0BC4", Offset = "0x11F0BC4", VA = "0x11F0BC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000280")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000281")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000284")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000285")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000286")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000287")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000288")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000289")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400028A")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x11EFDA0", Offset = "0x11EFDA0", VA = "0x11EFDA0")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x11F01F4", Offset = "0x11F01F4", VA = "0x11F01F4")]
	public void Update()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x11EADCC", Offset = "0x11EADCC", VA = "0x11EADCC")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x11E8E0C", Offset = "0x11E8E0C", VA = "0x11E8E0C")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x11F035C", Offset = "0x11F035C", VA = "0x11F035C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x11E8A80", Offset = "0x11E8A80", VA = "0x11E8A80")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x11E8C80", Offset = "0x11E8C80", VA = "0x11E8C80")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x11F0478", Offset = "0x11F0478", VA = "0x11F0478")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE570", Offset = "0xBDE570")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x11ED3BC", Offset = "0x11ED3BC", VA = "0x11ED3BC")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x11F0554", Offset = "0x11F0554", VA = "0x11F0554")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000070")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x11F0C2C", Offset = "0x11F0C2C", VA = "0x11F0C2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x11F0D94", Offset = "0x11F0D94", VA = "0x11F0D94")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000071")]
public class UnbinaryEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool exitAppOnFailure;

	[Token(Token = "0x14000001")]
	public static event Action UserFailedEntitlementCheck
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x1A4E2E0", Offset = "0x1A4E2E0", VA = "0x1A4E2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE5D4", Offset = "0xBDE5D4")]
		add
		{
		}
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x1A4E394", Offset = "0x1A4E394", VA = "0x1A4E394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE5E4", Offset = "0xBDE5E4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action UserPassedEntitlementCheck
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x1A4E448", Offset = "0x1A4E448", VA = "0x1A4E448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE5F4", Offset = "0xBDE5F4")]
		add
		{
		}
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x1A4E500", Offset = "0x1A4E500", VA = "0x1A4E500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE604", Offset = "0xBDE604")]
		remove
		{
		}
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1A4E5B8", Offset = "0x1A4E5B8", VA = "0x1A4E5B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1A4E9F0", Offset = "0x1A4E9F0", VA = "0x1A4E9F0")]
	private void EntitlementCheckCallback(Message msg)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1A4E774", Offset = "0x1A4E774", VA = "0x1A4E774")]
	private void HandleEntitlementCheckResult(bool result)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1A4EA2C", Offset = "0x1A4EA2C", VA = "0x1A4EA2C")]
	public UnbinaryEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000072")]
public class BufferedAudioStream
{
	[Token(Token = "0x4000290")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x4000294")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x4000295")]
	private const int sampleRate = 48000;

	[Token(Token = "0x4000296")]
	private const int bufferSize = 12000;

	[Token(Token = "0x4000297")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x11FEE54", Offset = "0x11FEE54", VA = "0x11FEE54")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x11FEF80", Offset = "0x11FEF80", VA = "0x11FEF80")]
	public void Update()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x11FEF30", Offset = "0x11FEF30", VA = "0x11FEF30")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x11FF158", Offset = "0x11FF158", VA = "0x11FF158")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x2000073")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000263")]
	public delegate void OnClick();

	[Token(Token = "0x2000264")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000265")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000266")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82D8", Offset = "0xBD82D8")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1201420", Offset = "0x1201420", VA = "0x1201420")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1201E34", Offset = "0x1201E34", VA = "0x1201E34")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82E8", Offset = "0xBD82E8")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x12016A0", Offset = "0x12016A0", VA = "0x12016A0")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x1202058", Offset = "0x1202058", VA = "0x1202058")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82F8", Offset = "0xBD82F8")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x12018D8", Offset = "0x12018D8", VA = "0x12018D8")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x12022D0", Offset = "0x12022D0", VA = "0x12022D0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8308", Offset = "0xBD8308")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x1201A8C", Offset = "0x1201A8C", VA = "0x1201A8C")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x1202684", Offset = "0x1202684", VA = "0x1202684")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8318", Offset = "0xBD8318")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x1201D00", Offset = "0x1201D00", VA = "0x1201D00")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x12026A4", Offset = "0x12026A4", VA = "0x12026A4")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400029A")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400029B")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400029C")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40002A9")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40002AA")]
	private const float marginH = 16f;

	[Token(Token = "0x40002AB")]
	private const float marginV = 16f;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x12002AC", Offset = "0x12002AC", VA = "0x12002AC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x120076C", Offset = "0x120076C", VA = "0x120076C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x1200D4C", Offset = "0x1200D4C", VA = "0x1200D4C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1200AF8", Offset = "0x1200AF8", VA = "0x1200AF8")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1200EF4", Offset = "0x1200EF4", VA = "0x1200EF4")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x12011EC", Offset = "0x12011EC", VA = "0x12011EC")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x1201428", Offset = "0x1201428", VA = "0x1201428")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x120150C", Offset = "0x120150C", VA = "0x120150C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x12016A8", Offset = "0x12016A8", VA = "0x12016A8")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1201744", Offset = "0x1201744", VA = "0x1201744")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x12018E0", Offset = "0x12018E0", VA = "0x12018E0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1201A94", Offset = "0x1201A94", VA = "0x1201A94")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1201D08", Offset = "0x1201D08", VA = "0x1201D08")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1201DB8", Offset = "0x1201DB8", VA = "0x1201DB8")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000074")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1208734", Offset = "0x1208734", VA = "0x1208734")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x12087D0", Offset = "0x12087D0", VA = "0x12087D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1208898", Offset = "0x1208898", VA = "0x1208898")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x12088D4", Offset = "0x12088D4", VA = "0x12088D4")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000075")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200026C")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000A2D")]
		On,
		[Token(Token = "0x4000A2E")]
		Off,
		[Token(Token = "0x4000A2F")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _startPoint;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _forward;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _endPoint;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _hitTarget;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700000D")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x1209378", Offset = "0x1209378", VA = "0x1209378")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x1200728", Offset = "0x1200728", VA = "0x1200728")]
		set
		{
		}
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1209380", Offset = "0x1209380", VA = "0x1209380")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x12093E0", Offset = "0x12093E0", VA = "0x12093E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1209474", Offset = "0x1209474", VA = "0x1209474", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1209490", Offset = "0x1209490", VA = "0x1209490", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x12094E4", Offset = "0x12094E4", VA = "0x12094E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x1209740", Offset = "0x1209740", VA = "0x1209740")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1209854", Offset = "0x1209854", VA = "0x1209854")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x12098E8", Offset = "0x12098E8", VA = "0x12098E8")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000076")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x11FE700", Offset = "0x11FE700", VA = "0x11FE700")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x11FE9AC", Offset = "0x11FE9AC", VA = "0x11FE9AC")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x11FEE4C", Offset = "0x11FEE4C", VA = "0x11FEE4C")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x2000077")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x12080B8", Offset = "0x12080B8", VA = "0x12080B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1208148", Offset = "0x1208148", VA = "0x1208148")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1208398", Offset = "0x1208398", VA = "0x1208398")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000078")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x1700000E")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x1208444", Offset = "0x1208444", VA = "0x1208444")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000003")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x11FE908", Offset = "0x11FE908", VA = "0x11FE908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE614", Offset = "0xBDE614")]
		add
		{
		}
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x12083A0", Offset = "0x12083A0", VA = "0x12083A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE624", Offset = "0xBDE624")]
		remove
		{
		}
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1208450", Offset = "0x1208450", VA = "0x1208450")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x12085A8", Offset = "0x12085A8", VA = "0x12085A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x120871C", Offset = "0x120871C", VA = "0x120871C")]
	private void Recentered()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1208724", Offset = "0x1208724", VA = "0x1208724")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000079")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8BC4", Offset = "0xBD8BC4")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8BFC", Offset = "0xBD8BFC")]
	public bool EnableCollision;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8C34", Offset = "0xBD8C34")]
	public float MaxFade;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8C6C", Offset = "0xBD8C6C")]
	public float FadeMinDistance;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8CA4", Offset = "0xBD8CA4")]
	public float FadeMaxDistance;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x11FF294", Offset = "0x11FF294", VA = "0x11FF294")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x11FF324", Offset = "0x11FF324", VA = "0x11FF324")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x11FF3A8", Offset = "0x11FF3A8", VA = "0x11FF3A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x11FF3AC", Offset = "0x11FF3AC", VA = "0x11FF3AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x11FF3D0", Offset = "0x11FF3D0", VA = "0x11FF3D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x11FF3F4", Offset = "0x11FF3F4", VA = "0x11FF3F4")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x200007A")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1209B00", Offset = "0x1209B00", VA = "0x1209B00")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1209BC4", Offset = "0x1209BC4", VA = "0x1209BC4")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200007B")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200026D")]
	public enum States
	{
		[Token(Token = "0x4000A31")]
		Ready,
		[Token(Token = "0x4000A32")]
		Aim,
		[Token(Token = "0x4000A33")]
		CancelAim,
		[Token(Token = "0x4000A34")]
		PreTeleport,
		[Token(Token = "0x4000A35")]
		CancelTeleport,
		[Token(Token = "0x4000A36")]
		Teleporting,
		[Token(Token = "0x4000A37")]
		PostTeleport
	}

	[Token(Token = "0x200026E")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000A39")]
		None,
		[Token(Token = "0x4000A3A")]
		Aim,
		[Token(Token = "0x4000A3B")]
		PreTeleport,
		[Token(Token = "0x4000A3C")]
		Teleport
	}

	[Token(Token = "0x200026F")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000A3E")]
		Point,
		[Token(Token = "0x4000A3F")]
		Sphere,
		[Token(Token = "0x4000A40")]
		Capsule
	}

	[Token(Token = "0x2000270")]
	public class AimData
	{
		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE204", Offset = "0xBDE204")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000FE")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x120CEBC", Offset = "0x120CEBC", VA = "0x120CEBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E24", Offset = "0xBE0E24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x120CEC4", Offset = "0x120CEC4", VA = "0x120CEC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E34", Offset = "0xBE0E34")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x120CE40", Offset = "0x120CE40", VA = "0x120CE40")]
		public AimData()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x120CECC", Offset = "0x120CECC", VA = "0x120CECC")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8328", Offset = "0xBD8328")]
	private sealed class <ReadyStateCoroutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x120CC80", Offset = "0x120CC80", VA = "0x120CC80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x120CCE8", Offset = "0x120CCE8", VA = "0x120CCE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x120B0C8", Offset = "0x120B0C8", VA = "0x120B0C8")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x120CB78", Offset = "0x120CB78", VA = "0x120CB78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x120CB7C", Offset = "0x120CB7C", VA = "0x120CB7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x120CC88", Offset = "0x120CC88", VA = "0x120CC88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8338", Offset = "0xBD8338")]
	private sealed class <AimStateCoroutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x120C604", Offset = "0x120C604", VA = "0x120C604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x120C66C", Offset = "0x120C66C", VA = "0x120C66C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x120B5BC", Offset = "0x120B5BC", VA = "0x120B5BC")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x120C4B4", Offset = "0x120C4B4", VA = "0x120C4B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x120C4B8", Offset = "0x120C4B8", VA = "0x120C4B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x120C60C", Offset = "0x120C60C", VA = "0x120C60C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8348", Offset = "0xBD8348")]
	private sealed class <CancelAimStateCoroutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x120C724", Offset = "0x120C724", VA = "0x120C724", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x120C78C", Offset = "0x120C78C", VA = "0x120C78C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x120B7AC", Offset = "0x120B7AC", VA = "0x120B7AC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x120C674", Offset = "0x120C674", VA = "0x120C674", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x120C678", Offset = "0x120C678", VA = "0x120C678", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x120C72C", Offset = "0x120C72C", VA = "0x120C72C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8358", Offset = "0xBD8358")]
	private sealed class <PreTeleportStateCoroutine>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x120CB08", Offset = "0x120CB08", VA = "0x120CB08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x120CB70", Offset = "0x120CB70", VA = "0x120CB70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x120B99C", Offset = "0x120B99C", VA = "0x120B99C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x120CA24", Offset = "0x120CA24", VA = "0x120CA24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x120CA28", Offset = "0x120CA28", VA = "0x120CA28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x120CB10", Offset = "0x120CB10", VA = "0x120CB10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8368", Offset = "0xBD8368")]
	private sealed class <CancelTeleportStateCoroutine>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x120C844", Offset = "0x120C844", VA = "0x120C844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x120C8AC", Offset = "0x120C8AC", VA = "0x120C8AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x120BB8C", Offset = "0x120BB8C", VA = "0x120BB8C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x120C794", Offset = "0x120C794", VA = "0x120C794", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x120C798", Offset = "0x120C798", VA = "0x120C798", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x120C84C", Offset = "0x120C84C", VA = "0x120C84C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8378", Offset = "0xBD8378")]
	private sealed class <TeleportingStateCoroutine>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x120CDD0", Offset = "0x120CDD0", VA = "0x120CDD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x120CE38", Offset = "0x120CE38", VA = "0x120CE38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x120BD7C", Offset = "0x120BD7C", VA = "0x120BD7C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x120CCF0", Offset = "0x120CCF0", VA = "0x120CCF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x120CCF4", Offset = "0x120CCF4", VA = "0x120CCF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x120CDD8", Offset = "0x120CDD8", VA = "0x120CDD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8388", Offset = "0xBD8388")]
	private sealed class <PostTeleportStateCoroutine>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x120C9B4", Offset = "0x120C9B4", VA = "0x120C9B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x120CA1C", Offset = "0x120CA1C", VA = "0x120CA1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x120BF6C", Offset = "0x120BF6C", VA = "0x120BF6C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x120C8B4", Offset = "0x120C8B4", VA = "0x120C8B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x120C8B8", Offset = "0x120C8B8", VA = "0x120C8B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x120C9BC", Offset = "0x120C9BC", VA = "0x120C9BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8CDC", Offset = "0xBD8CDC")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8D14", Offset = "0xBD8D14")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8D4C", Offset = "0xBD8D4C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8D84", Offset = "0xBD8D84")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8DBC", Offset = "0xBD8DBC")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8DF4", Offset = "0xBD8DF4")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8E2C", Offset = "0xBD8E2C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8E64", Offset = "0xBD8E64")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8E9C", Offset = "0xBD8E9C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8EAC", Offset = "0xBD8EAC")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8EE4", Offset = "0xBD8EE4")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8F2C", Offset = "0xBD8F2C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8F3C", Offset = "0xBD8F3C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8F74", Offset = "0xBD8F74")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8FAC", Offset = "0xBD8FAC")]
	public float AimCollisionRadius;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8FE4", Offset = "0xBD8FE4")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700000F")]
	public States CurrentState
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x120A5CC", Offset = "0x120A5CC", VA = "0x120A5CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE634", Offset = "0xBDE634")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x120A5D4", Offset = "0x120A5D4", VA = "0x120A5D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE644", Offset = "0xBDE644")]
		private set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x120A804", Offset = "0x120A804", VA = "0x120A804")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000011")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x120A82C", Offset = "0x120A82C", VA = "0x120A82C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE674", Offset = "0xBDE674")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x120A834", Offset = "0x120A834", VA = "0x120A834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE684", Offset = "0xBDE684")]
		private set
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x120A5DC", Offset = "0x120A5DC", VA = "0x120A5DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE654", Offset = "0xBDE654")]
		add
		{
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x120A680", Offset = "0x120A680", VA = "0x120A680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE664", Offset = "0xBDE664")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x120AF80", Offset = "0x120AF80", VA = "0x120AF80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE6CC", Offset = "0xBDE6CC")]
		add
		{
		}
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x120B024", Offset = "0x120B024", VA = "0x120B024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE6DC", Offset = "0xBDE6DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x120B0F4", Offset = "0x120B0F4", VA = "0x120B0F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE750", Offset = "0xBDE750")]
		add
		{
		}
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x120B198", Offset = "0x120B198", VA = "0x120B198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE760", Offset = "0xBDE760")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x120B23C", Offset = "0x120B23C", VA = "0x120B23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE770", Offset = "0xBDE770")]
		add
		{
		}
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x120B2E0", Offset = "0x120B2E0", VA = "0x120B2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE780", Offset = "0xBDE780")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x120B3F8", Offset = "0x120B3F8", VA = "0x120B3F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE790", Offset = "0xBDE790")]
		add
		{
		}
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x120B49C", Offset = "0x120B49C", VA = "0x120B49C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE7A0", Offset = "0xBDE7A0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x120B5E8", Offset = "0x120B5E8", VA = "0x120B5E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE814", Offset = "0xBDE814")]
		add
		{
		}
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x120B68C", Offset = "0x120B68C", VA = "0x120B68C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE824", Offset = "0xBDE824")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x120B7D8", Offset = "0x120B7D8", VA = "0x120B7D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE898", Offset = "0xBDE898")]
		add
		{
		}
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x120B87C", Offset = "0x120B87C", VA = "0x120B87C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE8A8", Offset = "0xBDE8A8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x120B9C8", Offset = "0x120B9C8", VA = "0x120B9C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE91C", Offset = "0xBDE91C")]
		add
		{
		}
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x120BA6C", Offset = "0x120BA6C", VA = "0x120BA6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE92C", Offset = "0xBDE92C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x120BBB8", Offset = "0x120BBB8", VA = "0x120BBB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE9A0", Offset = "0xBDE9A0")]
		add
		{
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x120BC5C", Offset = "0x120BC5C", VA = "0x120BC5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE9B0", Offset = "0xBDE9B0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x120BDA8", Offset = "0x120BDA8", VA = "0x120BDA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEA24", Offset = "0xBDEA24")]
		add
		{
		}
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x120BE4C", Offset = "0x120BE4C", VA = "0x120BE4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEA34", Offset = "0xBDEA34")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x120BF98", Offset = "0x120BF98", VA = "0x120BF98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEAA8", Offset = "0xBDEAA8")]
		add
		{
		}
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x120C03C", Offset = "0x120C03C", VA = "0x120C03C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEAB8", Offset = "0xBDEAB8")]
		remove
		{
		}
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x120A29C", Offset = "0x120A29C", VA = "0x120A29C")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x120A2C0", Offset = "0x120A2C0", VA = "0x120A2C0")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x120A724", Offset = "0x120A724", VA = "0x120A724")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x120A83C", Offset = "0x120A83C", VA = "0x120A83C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x120AB94", Offset = "0x120AB94", VA = "0x120AB94")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBDE694", Offset = "0xBDE694")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x120AC4C", Offset = "0x120AC4C", VA = "0x120AC4C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x120AD44", Offset = "0x120AD44", VA = "0x120AD44")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x120AD60", Offset = "0x120AD60", VA = "0x120AD60")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x120AE28", Offset = "0x120AE28", VA = "0x120AE28")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x120AE6C", Offset = "0x120AE6C", VA = "0x120AE6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x120AED4", Offset = "0x120AED4", VA = "0x120AED4", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x120AF04", Offset = "0x120AF04", VA = "0x120AF04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE6EC", Offset = "0xBDE6EC")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x120B384", Offset = "0x120B384", VA = "0x120B384")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x120B540", Offset = "0x120B540", VA = "0x120B540")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE7B0", Offset = "0xBDE7B0")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x120B730", Offset = "0x120B730", VA = "0x120B730")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE834", Offset = "0xBDE834")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x120B920", Offset = "0x120B920", VA = "0x120B920")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE8B8", Offset = "0xBDE8B8")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x120BB10", Offset = "0x120BB10", VA = "0x120BB10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE93C", Offset = "0xBDE93C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x120BD00", Offset = "0x120BD00", VA = "0x120BD00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDE9C0", Offset = "0xBDE9C0")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x120BEF0", Offset = "0x120BEF0", VA = "0x120BEF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDEA44", Offset = "0xBDEA44")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x120C0E0", Offset = "0x120C0E0", VA = "0x120C0E0")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x120C224", Offset = "0x120C224", VA = "0x120C224")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x120C258", Offset = "0x120C258", VA = "0x120C258")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x120C378", Offset = "0x120C378", VA = "0x120C378")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x120C4A4", Offset = "0x120C4A4", VA = "0x120C4A4")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200007C")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000F")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x1A44FB4", Offset = "0x1A44FB4", VA = "0x1A44FB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEAC8", Offset = "0xBDEAC8")]
		add
		{
		}
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x1A45058", Offset = "0x1A45058", VA = "0x1A45058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEAD8", Offset = "0xBDEAD8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x1A450FC", Offset = "0x1A450FC", VA = "0x1A450FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEAE8", Offset = "0xBDEAE8")]
		add
		{
		}
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x1A451A0", Offset = "0x1A451A0", VA = "0x1A451A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEAF8", Offset = "0xBDEAF8")]
		remove
		{
		}
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1A45244", Offset = "0x1A45244", VA = "0x1A45244")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1A4531C", Offset = "0x1A4531C", VA = "0x1A4531C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1A45320", Offset = "0x1A45320", VA = "0x1A45320")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1A45394", Offset = "0x1A45394", VA = "0x1A45394")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1A45504", Offset = "0x1A45504", VA = "0x1A45504")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1A457E8", Offset = "0x1A457E8", VA = "0x1A457E8")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1A459D8", Offset = "0x1A459D8", VA = "0x1A459D8")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200007D")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1A493F4", Offset = "0x1A493F4", VA = "0x1A493F4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x1A49498", Offset = "0x1A49498", VA = "0x1A49498", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000202")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1A4958C", Offset = "0x1A4958C", VA = "0x1A4958C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200007E")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD90DC", Offset = "0xBD90DC")]
	public float Range;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x1A4959C", Offset = "0x1A4959C", VA = "0x1A4959C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1A496F8", Offset = "0x1A496F8", VA = "0x1A496F8")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200007F")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9114", Offset = "0xBD9114")]
	public float Range;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD914C", Offset = "0xBD914C")]
	public float MinimumElevation;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9184", Offset = "0xBD9184")]
	public float Gravity;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD91BC", Offset = "0xBD91BC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD91BC", Offset = "0xBD91BC")]
	public float AimVelocity;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9218", Offset = "0xBD9218")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD9218", Offset = "0xBD9218")]
	public float AimStep;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1A49708", Offset = "0x1A49708", VA = "0x1A49708", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1A49954", Offset = "0x1A49954", VA = "0x1A49954")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000080")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9270", Offset = "0xBD9270")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1A49968", Offset = "0x1A49968", VA = "0x1A49968")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1A49A6C", Offset = "0x1A49A6C", VA = "0x1A49A6C")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1A49A9C", Offset = "0x1A49A9C", VA = "0x1A49A9C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1A49ACC", Offset = "0x1A49ACC", VA = "0x1A49ACC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1A49B74", Offset = "0x1A49B74", VA = "0x1A49B74", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1A49BE0", Offset = "0x1A49BE0", VA = "0x1A49BE0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1A49C48", Offset = "0x1A49C48", VA = "0x1A49C48")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000081")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD92A8", Offset = "0xBD92A8")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD92B8", Offset = "0xBD92B8")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD92F0", Offset = "0xBD92F0")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9328", Offset = "0xBD9328")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000012")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x1A49D64", Offset = "0x1A49D64", VA = "0x1A49D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEB08", Offset = "0xBDEB08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x1A49D6C", Offset = "0x1A49D6C", VA = "0x1A49D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEB18", Offset = "0xBDEB18")]
		private set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x1A49F24", Offset = "0x1A49F24", VA = "0x1A49F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEB28", Offset = "0xBDEB28")]
		add
		{
		}
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x1A49FC8", Offset = "0x1A49FC8", VA = "0x1A49FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEB38", Offset = "0xBDEB38")]
		remove
		{
		}
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1A49D78", Offset = "0x1A49D78", VA = "0x1A49D78")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1A49E08", Offset = "0x1A49E08", VA = "0x1A49E08")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1A49EE0", Offset = "0x1A49EE0", VA = "0x1A49EE0")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1A49F20", Offset = "0x1A49F20", VA = "0x1A49F20")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1A4A06C", Offset = "0x1A4A06C", VA = "0x1A4A06C")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1A4A0D4", Offset = "0x1A4A0D4", VA = "0x1A4A0D4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x1A4A0F4", Offset = "0x1A4A0F4", VA = "0x1A4A0F4", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000082")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8398", Offset = "0xBD8398")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700010D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x1A4A80C", Offset = "0x1A4A80C", VA = "0x1A4A80C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x1A4A874", Offset = "0x1A4A874", VA = "0x1A4A874", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1A4A534", Offset = "0x1A4A534", VA = "0x1A4A534")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1A4A770", Offset = "0x1A4A770", VA = "0x1A4A770", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x1A4A774", Offset = "0x1A4A774", VA = "0x1A4A774", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x1A4A814", Offset = "0x1A4A814", VA = "0x1A4A814", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD83A8", Offset = "0xBD83A8")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700010F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x1A4A700", Offset = "0x1A4A700", VA = "0x1A4A700", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F68")]
			[Address(RVA = "0x1A4A768", Offset = "0x1A4A768", VA = "0x1A4A768", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x1A4A5DC", Offset = "0x1A4A5DC", VA = "0x1A4A5DC")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x1A4A660", Offset = "0x1A4A660", VA = "0x1A4A660", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x1A4A664", Offset = "0x1A4A664", VA = "0x1A4A664", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x1A4A708", Offset = "0x1A4A708", VA = "0x1A4A708", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x1A4A2D4", Offset = "0x1A4A2D4", VA = "0x1A4A2D4")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x1A4A394", Offset = "0x1A4A394", VA = "0x1A4A394", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x1A4A3F4", Offset = "0x1A4A3F4", VA = "0x1A4A3F4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1A4A4B8", Offset = "0x1A4A4B8", VA = "0x1A4A4B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDEB48", Offset = "0xBDEB48")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1A4A560", Offset = "0x1A4A560", VA = "0x1A4A560")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDEBAC", Offset = "0xBDEBAC")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000220")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x1A4A608", Offset = "0x1A4A608", VA = "0x1A4A608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEC10", Offset = "0xBDEC10")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1A4A634", Offset = "0x1A4A634", VA = "0x1A4A634")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEC20", Offset = "0xBDEC20")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000083")]
public class TeleportInputHandlerAvatarTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200027A")]
	public enum InputModes
	{
		[Token(Token = "0x4000A62")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000A63")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000A64")]
		ThumbstickTeleport,
		[Token(Token = "0x4000A65")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200027B")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000A67")]
		A,
		[Token(Token = "0x4000A68")]
		B,
		[Token(Token = "0x4000A69")]
		LeftTrigger,
		[Token(Token = "0x4000A6A")]
		LeftThumbstick,
		[Token(Token = "0x4000A6B")]
		RightTrigger,
		[Token(Token = "0x4000A6C")]
		RightThumbstick,
		[Token(Token = "0x4000A6D")]
		X,
		[Token(Token = "0x4000A6E")]
		Y
	}

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9370", Offset = "0xBD9370")]
	public OvrAvatar Avatar;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD93A8", Offset = "0xBD93A8")]
	public InputModes InputMode;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD93E0", Offset = "0xBD93E0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9418", Offset = "0xBD9418")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9450", Offset = "0xBD9450")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1A4A87C", Offset = "0x1A4A87C", VA = "0x1A4A87C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1A4A974", Offset = "0x1A4A974", VA = "0x1A4A974", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x1A4AF18", Offset = "0x1A4AF18", VA = "0x1A4AF18", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x1A4AFF0", Offset = "0x1A4AFF0", VA = "0x1A4AFF0")]
	public TeleportInputHandlerAvatarTouch()
	{
	}
}
[Token(Token = "0x2000084")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9488", Offset = "0xBD9488")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9498", Offset = "0xBD9498")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD94D0", Offset = "0xBD94D0")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9508", Offset = "0xBD9508")]
	public bool FastTeleport;

	[Token(Token = "0x17000013")]
	public Transform Pointer
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x1A4B0B8", Offset = "0x1A4B0B8", VA = "0x1A4B0B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEC30", Offset = "0xBDEC30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x1A4B0C0", Offset = "0x1A4B0C0", VA = "0x1A4B0C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEC40", Offset = "0xBDEC40")]
		private set
		{
		}
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1A4ADBC", Offset = "0x1A4ADBC", VA = "0x1A4ADBC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1A4B0C8", Offset = "0x1A4B0C8", VA = "0x1A4B0C8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1A4B0B4", Offset = "0x1A4B0B4", VA = "0x1A4B0B4")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000085")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200027C")]
	public enum InputModes
	{
		[Token(Token = "0x4000A70")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000A71")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000A72")]
		ThumbstickTeleport,
		[Token(Token = "0x4000A73")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200027D")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000A75")]
		A,
		[Token(Token = "0x4000A76")]
		B,
		[Token(Token = "0x4000A77")]
		LeftTrigger,
		[Token(Token = "0x4000A78")]
		LeftThumbstick,
		[Token(Token = "0x4000A79")]
		RightTrigger,
		[Token(Token = "0x4000A7A")]
		RightThumbstick,
		[Token(Token = "0x4000A7B")]
		X,
		[Token(Token = "0x4000A7C")]
		Y
	}

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9540", Offset = "0xBD9540")]
	public InputModes InputMode;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9578", Offset = "0xBD9578")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD95B0", Offset = "0xBD95B0")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD95E8", Offset = "0xBD95E8")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1A4B180", Offset = "0x1A4B180", VA = "0x1A4B180")]
	private void Start()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1A4B184", Offset = "0x1A4B184", VA = "0x1A4B184", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1A4B5CC", Offset = "0x1A4B5CC", VA = "0x1A4B5CC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1A4B68C", Offset = "0x1A4B68C", VA = "0x1A4B68C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000086")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200027E")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000A7E")]
		HeadRelative,
		[Token(Token = "0x4000A7F")]
		ForwardFacing
	}

	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD83B8", Offset = "0xBD83B8")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000111")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x1A4BB60", Offset = "0x1A4BB60", VA = "0x1A4BB60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x1A4BBC8", Offset = "0x1A4BBC8", VA = "0x1A4BBC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x1A4B930", Offset = "0x1A4B930", VA = "0x1A4B930")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x1A4BAAC", Offset = "0x1A4BAAC", VA = "0x1A4BAAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x1A4BAB0", Offset = "0x1A4BAB0", VA = "0x1A4BAB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x1A4BB68", Offset = "0x1A4BB68", VA = "0x1A4BB68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1A4B750", Offset = "0x1A4B750", VA = "0x1A4B750")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1A4B818", Offset = "0x1A4B818", VA = "0x1A4B818")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1A4B820", Offset = "0x1A4B820", VA = "0x1A4B820", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1A4B86C", Offset = "0x1A4B86C", VA = "0x1A4B86C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1A4B8B4", Offset = "0x1A4B8B4", VA = "0x1A4B8B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDEC50", Offset = "0xBDEC50")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000235")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000236")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1A4B95C", Offset = "0x1A4B95C", VA = "0x1A4B95C")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1A4BA80", Offset = "0x1A4BA80", VA = "0x1A4BA80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDECB4", Offset = "0xBDECB4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000087")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1A4BBD0", Offset = "0x1A4BBD0", VA = "0x1A4BBD0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1A4BBD4", Offset = "0x1A4BBD4", VA = "0x1A4BBD4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1A4BC50", Offset = "0x1A4BC50", VA = "0x1A4BC50")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000088")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9620", Offset = "0xBD9620")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9658", Offset = "0xBD9658")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9690", Offset = "0xBD9690")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD96C8", Offset = "0xBD96C8")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1A4BC54", Offset = "0x1A4BC54", VA = "0x1A4BC54", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1A4BCC4", Offset = "0x1A4BCC4", VA = "0x1A4BCC4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1A4C13C", Offset = "0x1A4C13C", VA = "0x1A4C13C")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000089")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9700", Offset = "0xBD9700")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9738", Offset = "0xBD9738")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9770", Offset = "0xBD9770")]
	public float RotateStickThreshold;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1A4C140", Offset = "0x1A4C140", VA = "0x1A4C140", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1A4C184", Offset = "0x1A4C184", VA = "0x1A4C184", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1A4C5F4", Offset = "0x1A4C5F4", VA = "0x1A4C5F4")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200008A")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1A4C604", Offset = "0x1A4C604", VA = "0x1A4C604")]
	private void Start()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1A4C608", Offset = "0x1A4C608", VA = "0x1A4C608")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1A4C610", Offset = "0x1A4C610", VA = "0x1A4C610")]
	private void Update()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1A4C6F8", Offset = "0x1A4C6F8", VA = "0x1A4C6F8")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1A4C720", Offset = "0x1A4C720", VA = "0x1A4C720")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200008B")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD97A8", Offset = "0xBD97A8")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000014")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0x1A4C738", Offset = "0x1A4C738", VA = "0x1A4C738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDECC4", Offset = "0xBDECC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000248")]
		[Address(RVA = "0x1A4C740", Offset = "0x1A4C740", VA = "0x1A4C740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDECD4", Offset = "0xBDECD4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1A49428", Offset = "0x1A49428", VA = "0x1A49428", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1A49558", Offset = "0x1A49558", VA = "0x1A49558", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1A4C748", Offset = "0x1A4C748", VA = "0x1A4C748")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBDECE4", Offset = "0xBDECE4")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1A49BD4", Offset = "0x1A49BD4", VA = "0x1A49BD4", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1A49C40", Offset = "0x1A49C40", VA = "0x1A49C40", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x1A49594", Offset = "0x1A49594", VA = "0x1A49594")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200008C")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD83C8", Offset = "0xBD83C8")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000113")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x1A4CDC4", Offset = "0x1A4CDC4", VA = "0x1A4CDC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0x1A4CE2C", Offset = "0x1A4CE2C", VA = "0x1A4CE2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x1A4C9C4", Offset = "0x1A4C9C4", VA = "0x1A4C9C4")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x1A4CB4C", Offset = "0x1A4CB4C", VA = "0x1A4CB4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x1A4CB50", Offset = "0x1A4CB50", VA = "0x1A4CB50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x1A4CDCC", Offset = "0x1A4CDCC", VA = "0x1A4CDCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD97B8", Offset = "0xBD97B8")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1A4C810", Offset = "0x1A4C810", VA = "0x1A4C810")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1A4C8F4", Offset = "0x1A4C8F4", VA = "0x1A4C8F4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1A4C920", Offset = "0x1A4C920", VA = "0x1A4C920", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1A4C948", Offset = "0x1A4C948", VA = "0x1A4C948")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDED1C", Offset = "0xBDED1C")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1A4C9F0", Offset = "0x1A4C9F0", VA = "0x1A4C9F0", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000254")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1A4CA0C", Offset = "0x1A4CA0C", VA = "0x1A4CA0C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1A4CB20", Offset = "0x1A4CB20", VA = "0x1A4CB20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDED80", Offset = "0xBDED80")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200008D")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1A4CE34", Offset = "0x1A4CE34", VA = "0x1A4CE34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1A4CE9C", Offset = "0x1A4CE9C", VA = "0x1A4CE9C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1A4D020", Offset = "0x1A4D020", VA = "0x1A4D020", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1A4D110", Offset = "0x1A4D110", VA = "0x1A4D110")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBDED90", Offset = "0xBDED90")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1A4D114", Offset = "0x1A4D114", VA = "0x1A4D114")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200008E")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD97F0", Offset = "0xBD97F0")]
	public float LOSOffset;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9828", Offset = "0xBD9828")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1A4D120", Offset = "0x1A4D120", VA = "0x1A4D120", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1A4D350", Offset = "0x1A4D350", VA = "0x1A4D350")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200008F")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1A4D35C", Offset = "0x1A4D35C", VA = "0x1A4D35C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1A4D4E0", Offset = "0x1A4D4E0", VA = "0x1A4D4E0")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000090")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1A4D4E4", Offset = "0x1A4D4E4", VA = "0x1A4D4E4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1A4D57C", Offset = "0x1A4D57C", VA = "0x1A4D57C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000262")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1A4D610", Offset = "0x1A4D610", VA = "0x1A4D610")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000091")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD83D8", Offset = "0xBD83D8")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000115")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0x1A4D99C", Offset = "0x1A4D99C", VA = "0x1A4D99C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x1A4DA04", Offset = "0x1A4DA04", VA = "0x1A4DA04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x1A4D6C0", Offset = "0x1A4D6C0", VA = "0x1A4D6C0")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x1A4D890", Offset = "0x1A4D890", VA = "0x1A4D890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x1A4D894", Offset = "0x1A4D894", VA = "0x1A4D894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x1A4D9A4", Offset = "0x1A4D9A4", VA = "0x1A4D9A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9860", Offset = "0xBD9860")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD9860", Offset = "0xBD9860")]
	public float TransitionDuration;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD98B8", Offset = "0xBD98B8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD98B8", Offset = "0xBD98B8")]
	public float TeleportDelay;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD990C", Offset = "0xBD990C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x1A4D618", Offset = "0x1A4D618", VA = "0x1A4D618", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x1A4D644", Offset = "0x1A4D644", VA = "0x1A4D644")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDEDC8", Offset = "0xBDEDC8")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1A4D6EC", Offset = "0x1A4D6EC", VA = "0x1A4D6EC")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000092")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1A4DA0C", Offset = "0x1A4DA0C", VA = "0x1A4DA0C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x1A4DA28", Offset = "0x1A4DA28", VA = "0x1A4DA28")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000093")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD83E8", Offset = "0xBD83E8")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000117")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x1A4DC98", Offset = "0x1A4DC98", VA = "0x1A4DC98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x1A4DD00", Offset = "0x1A4DD00", VA = "0x1A4DD00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x1A4DAD8", Offset = "0x1A4DAD8", VA = "0x1A4DAD8")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1A4DB58", Offset = "0x1A4DB58", VA = "0x1A4DB58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x1A4DB5C", Offset = "0x1A4DB5C", VA = "0x1A4DB5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x1A4DCA0", Offset = "0x1A4DCA0", VA = "0x1A4DCA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9944", Offset = "0xBD9944")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD9944", Offset = "0xBD9944")]
	public float TransitionDuration;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x1A4DA30", Offset = "0x1A4DA30", VA = "0x1A4DA30", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x1A4DA5C", Offset = "0x1A4DA5C", VA = "0x1A4DA5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDEE2C", Offset = "0xBDEE2C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1A4DB04", Offset = "0x1A4DB04", VA = "0x1A4DB04")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000094")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000015")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0x121078C", Offset = "0x121078C", VA = "0x121078C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000016")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600026D")]
		[Address(RVA = "0x1210A48", Offset = "0x1210A48", VA = "0x1210A48")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000017")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0x120F070", Offset = "0x120F070", VA = "0x120F070")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000018")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600026F")]
		[Address(RVA = "0x120FC28", Offset = "0x120FC28", VA = "0x120FC28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1210240", Offset = "0x1210240", VA = "0x1210240")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x120FF8C", Offset = "0x120FF8C", VA = "0x120FF8C")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x120F500", Offset = "0x120F500", VA = "0x120F500")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x120F684", Offset = "0x120F684", VA = "0x120F684")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x120FDAC", Offset = "0x120FDAC", VA = "0x120FDAC")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x1210440", Offset = "0x1210440", VA = "0x1210440")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x120FA64", Offset = "0x120FA64", VA = "0x120FA64")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000095")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000283")]
	public enum VideoShape
	{
		[Token(Token = "0x4000A92")]
		_360,
		[Token(Token = "0x4000A93")]
		_180,
		[Token(Token = "0x4000A94")]
		Quad
	}

	[Token(Token = "0x2000284")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000A96")]
		Mono,
		[Token(Token = "0x4000A97")]
		TopBottom,
		[Token(Token = "0x4000A98")]
		LeftRight
	}

	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD83F8", Offset = "0xBD83F8")]
	private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0x121071C", Offset = "0x121071C", VA = "0x121071C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x1210784", Offset = "0x1210784", VA = "0x1210784", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x120F1BC", Offset = "0x120F1BC", VA = "0x120F1BC")]
		[DebuggerHidden]
		public <Start>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x121058C", Offset = "0x121058C", VA = "0x121058C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x1210590", Offset = "0x1210590", VA = "0x1210590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x1210724", Offset = "0x1210724", VA = "0x1210724", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8408", Offset = "0xBD8408")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x120F464", Offset = "0x120F464", VA = "0x120F464")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x121016C", Offset = "0x121016C", VA = "0x121016C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD99AC", Offset = "0xBD99AC")]
	private bool <isPlaying>k__BackingField;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string MovieName;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool LoopVideo;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public VideoShape Shape;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VideoStereo Stereo;

	[Token(Token = "0x17000019")]
	public bool isPlaying
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0x120EC64", Offset = "0x120EC64", VA = "0x120EC64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEE90", Offset = "0xBDEE90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000279")]
		[Address(RVA = "0x120EC6C", Offset = "0x120EC6C", VA = "0x120EC6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEEA0", Offset = "0xBDEEA0")]
		private set
		{
		}
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x120EC78", Offset = "0x120EC78", VA = "0x120EC78")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x120F0D8", Offset = "0x120F0D8", VA = "0x120F0D8")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x120F140", Offset = "0x120F140", VA = "0x120F140")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDEEB0", Offset = "0xBDEEB0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x120F1E8", Offset = "0x120F1E8", VA = "0x120F1E8")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x120F46C", Offset = "0x120F46C", VA = "0x120F46C")]
	public void Play()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x120F5F4", Offset = "0x120F5F4", VA = "0x120F5F4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x120F778", Offset = "0x120F778", VA = "0x120F778")]
	private void Update()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x120FD18", Offset = "0x120FD18", VA = "0x120FD18")]
	public void Rewind()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x120FEFC", Offset = "0x120FEFC", VA = "0x120FEFC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1210080", Offset = "0x1210080", VA = "0x1210080")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1210164", Offset = "0x1210164", VA = "0x1210164")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000096")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7F04", Offset = "0xBD7F04")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x2000287")]
	private enum CubeFace
	{
		[Token(Token = "0x4000AA0")]
		Right,
		[Token(Token = "0x4000AA1")]
		Left,
		[Token(Token = "0x4000AA2")]
		Top,
		[Token(Token = "0x4000AA3")]
		Bottom,
		[Token(Token = "0x4000AA4")]
		Front,
		[Token(Token = "0x4000AA5")]
		Back,
		[Token(Token = "0x4000AA6")]
		COUNT
	}

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x157E4D4", Offset = "0x157E4D4", VA = "0x157E4D4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x157E670", Offset = "0x157E670", VA = "0x157E670")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x157E82C", Offset = "0x157E82C", VA = "0x157E82C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x157ED04", Offset = "0x157ED04", VA = "0x157ED04")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x157EFF8", Offset = "0x157EFF8", VA = "0x157EFF8")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1580254", Offset = "0x1580254", VA = "0x1580254")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x15802B4", Offset = "0x15802B4", VA = "0x15802B4")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x157F378", Offset = "0x157F378", VA = "0x157F378")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x158039C", Offset = "0x158039C", VA = "0x158039C")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1580588", Offset = "0x1580588", VA = "0x1580588")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x157F830", Offset = "0x157F830", VA = "0x157F830")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x157FB58", Offset = "0x157FB58", VA = "0x157FB58")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x157FEB0", Offset = "0x157FEB0", VA = "0x157FEB0")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x158073C", Offset = "0x158073C", VA = "0x158073C")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x2000097")]
public static class VectorUtil
{
	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1A4EA3C", Offset = "0x1A4EA3C", VA = "0x1A4EA3C")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000098")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1202A84", Offset = "0x1202A84", VA = "0x1202A84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1202EDC", Offset = "0x1202EDC", VA = "0x1202EDC")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1202F94", Offset = "0x1202F94", VA = "0x1202F94")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x12031E8", Offset = "0x12031E8", VA = "0x12031E8")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x12032D0", Offset = "0x12032D0", VA = "0x12032D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x12033AC", Offset = "0x12033AC", VA = "0x12033AC")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1203418", Offset = "0x1203418", VA = "0x1203418")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1203420", Offset = "0x1203420", VA = "0x1203420")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEF24", Offset = "0xBDEF24")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x120347C", Offset = "0x120347C", VA = "0x120347C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEF34", Offset = "0xBDEF34")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x12034D8", Offset = "0x12034D8", VA = "0x12034D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEF44", Offset = "0xBDEF44")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1203534", Offset = "0x1203534", VA = "0x1203534")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEF54", Offset = "0xBDEF54")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000099")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD99BC", Offset = "0xBD99BC")]
	public int SubdivisionsU;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD99D8", Offset = "0xBD99D8")]
	public int SubdivisionsV;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x11FF6A0", Offset = "0x11FF6A0", VA = "0x11FF6A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1200194", Offset = "0x1200194", VA = "0x1200194")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200009A")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700001A")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x1209BCC", Offset = "0x1209BCC", VA = "0x1209BCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1209C24", Offset = "0x1209C24", VA = "0x1209C24")]
	public void Start()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1209F94", Offset = "0x1209F94", VA = "0x1209F94")]
	public void Update()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x120A070", Offset = "0x120A070", VA = "0x120A070")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBDEF64", Offset = "0xBDEF64")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60002A6")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60002A8")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60002A9")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60002AA")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60002AB")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60002AC")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60002AD")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x120A0D8", Offset = "0x120A0D8", VA = "0x120A0D8")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x120A114", Offset = "0x120A114", VA = "0x120A114")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x120A188", Offset = "0x120A188", VA = "0x120A188")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x120A2E4", Offset = "0x120A2E4", VA = "0x120A2E4")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x120A3B8", Offset = "0x120A3B8", VA = "0x120A3B8")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1209EA0", Offset = "0x1209EA0", VA = "0x1209EA0")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x120A478", Offset = "0x120A478", VA = "0x120A478")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x120A4E0", Offset = "0x120A4E0", VA = "0x120A4E0")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x120A5C4", Offset = "0x120A5C4", VA = "0x120A5C4")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200009B")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8418", Offset = "0xBD8418")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x1A4902C", Offset = "0x1A4902C", VA = "0x1A4902C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x1A4913C", Offset = "0x1A4913C", VA = "0x1A4913C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1A48E5C", Offset = "0x1A48E5C", VA = "0x1A48E5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1A49034", Offset = "0x1A49034", VA = "0x1A49034")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1A49134", Offset = "0x1A49134", VA = "0x1A49134")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200009C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBD7F98", Offset = "0xBD7F98")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000289")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000AAA")]
		MouseXAndY,
		[Token(Token = "0x4000AAB")]
		MouseX,
		[Token(Token = "0x4000AAC")]
		MouseY
	}

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x120E924", Offset = "0x120E924", VA = "0x120E924")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x120EB84", Offset = "0x120EB84", VA = "0x120EB84")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x120EC44", Offset = "0x120EC44", VA = "0x120EC44")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200009D")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200028A")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000AAE")]
		Uninitialized = -1,
		[Token(Token = "0x4000AAF")]
		NotEnabled,
		[Token(Token = "0x4000AB0")]
		Success,
		[Token(Token = "0x4000AB1")]
		StreamError,
		[Token(Token = "0x4000AB2")]
		ProcessError,
		[Token(Token = "0x4000AB3")]
		MaxStatValue
	}

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700001B")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x1210CF8", Offset = "0x1210CF8", VA = "0x1210CF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x1210D00", Offset = "0x1210D00", VA = "0x1210D00")]
		set
		{
		}
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1210D0C", Offset = "0x1210D0C", VA = "0x1210D0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1210F28", Offset = "0x1210F28", VA = "0x1210F28")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x121119C", Offset = "0x121119C", VA = "0x121119C")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x200009E")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200028B")]
	private enum Parameters
	{
		[Token(Token = "0x4000AB5")]
		P_GAIN,
		[Token(Token = "0x4000AB6")]
		P_USEINVSQR,
		[Token(Token = "0x4000AB7")]
		P_NEAR,
		[Token(Token = "0x4000AB8")]
		P_FAR,
		[Token(Token = "0x4000AB9")]
		P_RADIUS,
		[Token(Token = "0x4000ABA")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000ABB")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000ABC")]
		P_AMBISTAT,
		[Token(Token = "0x4000ABD")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000ABE")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000ABF")]
		P_SENDLEVEL,
		[Token(Token = "0x4000AC0")]
		P_NUM
	}

	[Token(Token = "0x40003A0")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700001C")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x12113F8", Offset = "0x12113F8", VA = "0x12113F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x1211400", Offset = "0x1211400", VA = "0x1211400")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public float Gain
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x121140C", Offset = "0x121140C", VA = "0x121140C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x1211414", Offset = "0x1211414", VA = "0x1211414")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x1211498", Offset = "0x1211498", VA = "0x1211498")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x12114A0", Offset = "0x12114A0", VA = "0x12114A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public float Near
	{
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x12114AC", Offset = "0x12114AC", VA = "0x12114AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x12114B4", Offset = "0x12114B4", VA = "0x12114B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public float Far
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x121153C", Offset = "0x121153C", VA = "0x121153C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x1211544", Offset = "0x1211544", VA = "0x1211544")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x12115CC", Offset = "0x12115CC", VA = "0x12115CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x12115D4", Offset = "0x12115D4", VA = "0x12115D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public float ReverbSend
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x121165C", Offset = "0x121165C", VA = "0x121165C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x1211664", Offset = "0x1211664", VA = "0x1211664")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public bool EnableRfl
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x12116EC", Offset = "0x12116EC", VA = "0x12116EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x12116F4", Offset = "0x12116F4", VA = "0x12116F4")]
		set
		{
		}
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1211220", Offset = "0x1211220", VA = "0x1211220")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xBDEF9C", Offset = "0xBDEF9C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1211318", Offset = "0x1211318", VA = "0x1211318")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1211700", Offset = "0x1211700", VA = "0x1211700")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1211874", Offset = "0x1211874", VA = "0x1211874")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1211878", Offset = "0x1211878", VA = "0x1211878")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x121176C", Offset = "0x121176C", VA = "0x121176C")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1211940", Offset = "0x1211940", VA = "0x1211940")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1211DA8", Offset = "0x1211DA8", VA = "0x1211DA8")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1211298", Offset = "0x1211298", VA = "0x1211298")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1211E8C", Offset = "0x1211E8C", VA = "0x1211E8C")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x200009F")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40003AB")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40003AD")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1211EAC", Offset = "0x1211EAC", VA = "0x1211EAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x1211EB8", Offset = "0x1211EB8", VA = "0x1211EB8")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1211F70", Offset = "0x1211F70", VA = "0x1211F70")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1211EF0", Offset = "0x1211EF0", VA = "0x1211EF0")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1211FF0", Offset = "0x1211FF0", VA = "0x1211FF0")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000A0")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200028C")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200028D")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40003B4")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000024")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x156875C", Offset = "0x156875C", VA = "0x156875C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000025")]
	public string filePath
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x15687E8", Offset = "0x15687E8", VA = "0x15687E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1568860", Offset = "0x1568860", VA = "0x1568860")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x15689A8", Offset = "0x15689A8", VA = "0x15689A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x15689AC", Offset = "0x15689AC", VA = "0x15689AC")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1568F14", Offset = "0x1568F14", VA = "0x1568F14")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x15692B0", Offset = "0x15692B0", VA = "0x15692B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1569410", Offset = "0x1569410", VA = "0x1569410")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1569B54", Offset = "0x1569B54", VA = "0x1569B54")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1569B90", Offset = "0x1569B90", VA = "0x1569B90")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x156B384", Offset = "0x156B384", VA = "0x156B384")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x156B25C", Offset = "0x156B25C", VA = "0x156B25C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1568D4C", Offset = "0x1568D4C", VA = "0x1568D4C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x1568B7C", Offset = "0x1568B7C", VA = "0x1568B7C")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x156B99C", Offset = "0x156B99C", VA = "0x156B99C")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x156BDE4", Offset = "0x156BDE4", VA = "0x156BDE4")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000A1")]
internal class ONSPPropagation
{
	[Token(Token = "0x200028E")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000AC7")]
		Int8,
		[Token(Token = "0x4000AC8")]
		UInt8,
		[Token(Token = "0x4000AC9")]
		Int16,
		[Token(Token = "0x4000ACA")]
		UInt16,
		[Token(Token = "0x4000ACB")]
		Int32,
		[Token(Token = "0x4000ACC")]
		UInt32,
		[Token(Token = "0x4000ACD")]
		Int64,
		[Token(Token = "0x4000ACE")]
		UInt64,
		[Token(Token = "0x4000ACF")]
		Float16,
		[Token(Token = "0x4000AD0")]
		Float32,
		[Token(Token = "0x4000AD1")]
		Float64
	}

	[Token(Token = "0x200028F")]
	public class ClientType
	{
		[Token(Token = "0x4000AD2")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000AD3")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000AD4")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000AD5")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000AD6")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000AD7")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000AD8")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000AD9")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000ADA")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000ADB")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000ADC")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000ADD")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000ADE")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x12124B0", Offset = "0x12124B0", VA = "0x12124B0")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000290")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000F8C")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000F8D")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000F8E")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000F8F")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000F90")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000F91")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000F92")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000F93")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F94")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F95")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F96")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000F97")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000F98")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000F99")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000F9A")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000291")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000ADF")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700011B")]
		private IntPtr context
		{
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x1213128", Offset = "0x1213128", VA = "0x1213128")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x121318C", Offset = "0x121318C", VA = "0x121318C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x121321C", Offset = "0x121321C", VA = "0x121321C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x12132AC", Offset = "0x12132AC", VA = "0x12132AC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x12132D0", Offset = "0x12132D0", VA = "0x12132D0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x1213360", Offset = "0x1213360", VA = "0x1213360", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x1213384", Offset = "0x1213384", VA = "0x1213384")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x1213410", Offset = "0x1213410", VA = "0x1213410", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x1213434", Offset = "0x1213434", VA = "0x1213434")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x12134B4", Offset = "0x12134B4", VA = "0x12134B4", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x12134BC", Offset = "0x12134BC", VA = "0x12134BC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x12135DC", Offset = "0x12135DC", VA = "0x12135DC", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x12136D4", Offset = "0x12136D4", VA = "0x12136D4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x121376C", Offset = "0x121376C", VA = "0x121376C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x1213778", Offset = "0x1213778", VA = "0x1213778")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x12138AC", Offset = "0x12138AC", VA = "0x12138AC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x12138B8", Offset = "0x12138B8", VA = "0x12138B8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x1213964", Offset = "0x1213964", VA = "0x1213964", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x1213970", Offset = "0x1213970", VA = "0x1213970")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x1213A1C", Offset = "0x1213A1C", VA = "0x1213A1C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1213A28", Offset = "0x1213A28", VA = "0x1213A28")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1213AD4", Offset = "0x1213AD4", VA = "0x1213AD4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1213AE0", Offset = "0x1213AE0", VA = "0x1213AE0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1213B6C", Offset = "0x1213B6C", VA = "0x1213B6C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1213B90", Offset = "0x1213B90", VA = "0x1213B90")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x1213C10", Offset = "0x1213C10", VA = "0x1213C10", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1213C18", Offset = "0x1213C18", VA = "0x1213C18")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1213CC0", Offset = "0x1213CC0", VA = "0x1213CC0", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1213CCC", Offset = "0x1213CCC", VA = "0x1213CCC")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1213D74", Offset = "0x1213D74", VA = "0x1213D74", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x1213D84", Offset = "0x1213D84", VA = "0x1213D84")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x1213E14", Offset = "0x1213E14", VA = "0x1213E14", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x121245C", Offset = "0x121245C", VA = "0x121245C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000292")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000AE1")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700011C")]
		private IntPtr context
		{
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x1213E20", Offset = "0x1213E20", VA = "0x1213E20")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x12122A4", Offset = "0x12122A4", VA = "0x12122A4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1213E84", Offset = "0x1213E84", VA = "0x1213E84")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1213F14", Offset = "0x1213F14", VA = "0x1213F14", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x1213F38", Offset = "0x1213F38", VA = "0x1213F38")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1213FC8", Offset = "0x1213FC8", VA = "0x1213FC8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1213FEC", Offset = "0x1213FEC", VA = "0x1213FEC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x121407C", Offset = "0x121407C", VA = "0x121407C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x12140A0", Offset = "0x12140A0", VA = "0x12140A0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1214120", Offset = "0x1214120", VA = "0x1214120", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1214128", Offset = "0x1214128", VA = "0x1214128")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1214248", Offset = "0x1214248", VA = "0x1214248", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1214340", Offset = "0x1214340", VA = "0x1214340")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x12143D8", Offset = "0x12143D8", VA = "0x12143D8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x12143E4", Offset = "0x12143E4", VA = "0x12143E4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x1214518", Offset = "0x1214518", VA = "0x1214518", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x1214524", Offset = "0x1214524", VA = "0x1214524")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x12145D0", Offset = "0x12145D0", VA = "0x12145D0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x12145DC", Offset = "0x12145DC", VA = "0x12145DC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1214688", Offset = "0x1214688", VA = "0x1214688", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x1214694", Offset = "0x1214694", VA = "0x1214694")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x1214740", Offset = "0x1214740", VA = "0x1214740", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x121474C", Offset = "0x121474C", VA = "0x121474C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x12147DC", Offset = "0x12147DC", VA = "0x12147DC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x1214800", Offset = "0x1214800", VA = "0x1214800")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1214880", Offset = "0x1214880", VA = "0x1214880", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1214888", Offset = "0x1214888", VA = "0x1214888")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x1214930", Offset = "0x1214930", VA = "0x1214930", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x121493C", Offset = "0x121493C", VA = "0x121493C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x12149E4", Offset = "0x12149E4", VA = "0x12149E4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x12149F4", Offset = "0x12149F4", VA = "0x12149F4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x1214A84", Offset = "0x1214A84", VA = "0x1214A84", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x1212334", Offset = "0x1212334", VA = "0x1212334")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000293")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000AE3")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700011D")]
		private IntPtr context
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x12124B8", Offset = "0x12124B8", VA = "0x12124B8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x1212380", Offset = "0x1212380", VA = "0x1212380")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x121251C", Offset = "0x121251C", VA = "0x121251C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x12125AC", Offset = "0x12125AC", VA = "0x12125AC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x12125D0", Offset = "0x12125D0", VA = "0x12125D0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x1212660", Offset = "0x1212660", VA = "0x1212660", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x1212684", Offset = "0x1212684", VA = "0x1212684")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x1212714", Offset = "0x1212714", VA = "0x1212714", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x1212738", Offset = "0x1212738", VA = "0x1212738")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x12127B8", Offset = "0x12127B8", VA = "0x12127B8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x12127C0", Offset = "0x12127C0", VA = "0x12127C0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x12128E0", Offset = "0x12128E0", VA = "0x12128E0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x12129D8", Offset = "0x12129D8", VA = "0x12129D8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x1212A70", Offset = "0x1212A70", VA = "0x1212A70", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1212A7C", Offset = "0x1212A7C", VA = "0x1212A7C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1212BB0", Offset = "0x1212BB0", VA = "0x1212BB0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1212BBC", Offset = "0x1212BBC", VA = "0x1212BBC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x1212C68", Offset = "0x1212C68", VA = "0x1212C68", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x1212C74", Offset = "0x1212C74", VA = "0x1212C74")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x1212D20", Offset = "0x1212D20", VA = "0x1212D20", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1212D2C", Offset = "0x1212D2C", VA = "0x1212D2C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x1212DD8", Offset = "0x1212DD8", VA = "0x1212DD8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x1212DE4", Offset = "0x1212DE4", VA = "0x1212DE4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x1212E74", Offset = "0x1212E74", VA = "0x1212E74", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x1212E98", Offset = "0x1212E98", VA = "0x1212E98")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x1212F18", Offset = "0x1212F18", VA = "0x1212F18", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x1212F20", Offset = "0x1212F20", VA = "0x1212F20")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x1212FC8", Offset = "0x1212FC8", VA = "0x1212FC8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x1212FD4", Offset = "0x1212FD4", VA = "0x1212FD4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x121307C", Offset = "0x121307C", VA = "0x121307C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x121308C", Offset = "0x121308C", VA = "0x121308C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x121311C", Offset = "0x121311C", VA = "0x121311C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x1212410", Offset = "0x1212410", VA = "0x1212410")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000026")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x1212000", Offset = "0x1212000", VA = "0x1212000")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x121207C", Offset = "0x121207C", VA = "0x121207C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x12124A8", Offset = "0x12124A8", VA = "0x12124A8")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000A2")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000294")]
	public enum Preset
	{
		[Token(Token = "0x4000AE6")]
		Custom,
		[Token(Token = "0x4000AE7")]
		AcousticTile,
		[Token(Token = "0x4000AE8")]
		Brick,
		[Token(Token = "0x4000AE9")]
		BrickPainted,
		[Token(Token = "0x4000AEA")]
		Carpet,
		[Token(Token = "0x4000AEB")]
		CarpetHeavy,
		[Token(Token = "0x4000AEC")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000AED")]
		CeramicTile,
		[Token(Token = "0x4000AEE")]
		Concrete,
		[Token(Token = "0x4000AEF")]
		ConcreteRough,
		[Token(Token = "0x4000AF0")]
		ConcreteBlock,
		[Token(Token = "0x4000AF1")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000AF2")]
		Curtain,
		[Token(Token = "0x4000AF3")]
		Foliage,
		[Token(Token = "0x4000AF4")]
		Glass,
		[Token(Token = "0x4000AF5")]
		GlassHeavy,
		[Token(Token = "0x4000AF6")]
		Grass,
		[Token(Token = "0x4000AF7")]
		Gravel,
		[Token(Token = "0x4000AF8")]
		GypsumBoard,
		[Token(Token = "0x4000AF9")]
		PlasterOnBrick,
		[Token(Token = "0x4000AFA")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000AFB")]
		Soil,
		[Token(Token = "0x4000AFC")]
		SoundProof,
		[Token(Token = "0x4000AFD")]
		Snow,
		[Token(Token = "0x4000AFE")]
		Steel,
		[Token(Token = "0x4000AFF")]
		Water,
		[Token(Token = "0x4000B00")]
		WoodThin,
		[Token(Token = "0x4000B01")]
		WoodThick,
		[Token(Token = "0x4000B02")]
		WoodFloor,
		[Token(Token = "0x4000B03")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000295")]
	public sealed class Point
	{
		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x1574080", Offset = "0x1574080", VA = "0x1574080")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x15741F8", Offset = "0x15741F8", VA = "0x15741F8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x1574268", Offset = "0x1574268", VA = "0x1574268")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000296")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD8428", Offset = "0xBD8428")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000309")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD87FC", Offset = "0xBD87FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x600118B")]
			[Address(RVA = "0x15746D4", Offset = "0x15746D4", VA = "0x15746D4")]
			public <>c()
			{
			}

			[Token(Token = "0x600118C")]
			[Address(RVA = "0x15746DC", Offset = "0x15746DC", VA = "0x15746DC")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x600118D")]
			[Address(RVA = "0x15746F4", Offset = "0x15746F4", VA = "0x15746F4")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700011E")]
		public float Item
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x15742A0", Offset = "0x15742A0", VA = "0x15742A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x1574174", Offset = "0x1574174", VA = "0x1574174")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9A84", Offset = "0xBD9A84")]
	public Spectrum absorption;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9ABC", Offset = "0xBD9ABC")]
	public Spectrum transmission;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9AF4", Offset = "0xBD9AF4")]
	public Spectrum scattering;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000027")]
	public Preset preset
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x156BEC8", Offset = "0x156BEC8", VA = "0x156BEC8")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x156BED0", Offset = "0x156BED0", VA = "0x156BED0")]
		set
		{
		}
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x156BEF8", Offset = "0x156BEF8", VA = "0x156BEF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x156B82C", Offset = "0x156B82C", VA = "0x156B82C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x156C4C0", Offset = "0x156C4C0", VA = "0x156C4C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x156C4C4", Offset = "0x156C4C4", VA = "0x156C4C4")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x156BEFC", Offset = "0x156BEFC", VA = "0x156BEFC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x156B0C8", Offset = "0x156B0C8", VA = "0x156B0C8")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x156C5AC", Offset = "0x156C5AC", VA = "0x156C5AC")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x156CA2C", Offset = "0x156CA2C", VA = "0x156CA2C")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x156CEAC", Offset = "0x156CEAC", VA = "0x156CEAC")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x156D32C", Offset = "0x156D32C", VA = "0x156D32C")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x156D7AC", Offset = "0x156D7AC", VA = "0x156D7AC")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x156DC2C", Offset = "0x156DC2C", VA = "0x156DC2C")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x156E0AC", Offset = "0x156E0AC", VA = "0x156E0AC")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x156E52C", Offset = "0x156E52C", VA = "0x156E52C")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x156E9AC", Offset = "0x156E9AC", VA = "0x156E9AC")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x156EE2C", Offset = "0x156EE2C", VA = "0x156EE2C")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x156F2AC", Offset = "0x156F2AC", VA = "0x156F2AC")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x156F72C", Offset = "0x156F72C", VA = "0x156F72C")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x156FBAC", Offset = "0x156FBAC", VA = "0x156FBAC")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x157002C", Offset = "0x157002C", VA = "0x157002C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x15704A4", Offset = "0x15704A4", VA = "0x15704A4")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1570924", Offset = "0x1570924", VA = "0x1570924")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1570C80", Offset = "0x1570C80", VA = "0x1570C80")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1570FDC", Offset = "0x1570FDC", VA = "0x1570FDC")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x157145C", Offset = "0x157145C", VA = "0x157145C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x15718DC", Offset = "0x15718DC", VA = "0x15718DC")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1571D5C", Offset = "0x1571D5C", VA = "0x1571D5C")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x15720B8", Offset = "0x15720B8", VA = "0x15720B8")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1572234", Offset = "0x1572234", VA = "0x1572234")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1572590", Offset = "0x1572590", VA = "0x1572590")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1572A08", Offset = "0x1572A08", VA = "0x1572A08")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1572E88", Offset = "0x1572E88", VA = "0x1572E88")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1573300", Offset = "0x1573300", VA = "0x1573300")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1573780", Offset = "0x1573780", VA = "0x1573780")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1573C00", Offset = "0x1573C00", VA = "0x1573C00")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x15740B8", Offset = "0x15740B8", VA = "0x15740B8")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000A3")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x157470C", Offset = "0x157470C", VA = "0x157470C")]
	private void Update()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x15747E0", Offset = "0x15747E0", VA = "0x15747E0")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000A4")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000028")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x1574DB4", Offset = "0x1574DB4", VA = "0x1574DB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x1574EE0", Offset = "0x1574EE0", VA = "0x1574EE0")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000A5")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40003BF")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1574EF0", Offset = "0x1574EF0", VA = "0x1574EF0")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1574F88", Offset = "0x1574F88", VA = "0x1574F88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1575094", Offset = "0x1575094", VA = "0x1575094")]
	private void Start()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1575098", Offset = "0x1575098", VA = "0x1575098")]
	private void Update()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x157509C", Offset = "0x157509C", VA = "0x157509C")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000A6")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000297")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x40003CF")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40003D5")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1239AE4", Offset = "0x1239AE4", VA = "0x1239AE4")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1239B1C", Offset = "0x1239B1C", VA = "0x1239B1C")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1239CEC", Offset = "0x1239CEC", VA = "0x1239CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1239DBC", Offset = "0x1239DBC", VA = "0x1239DBC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1239EB0", Offset = "0x1239EB0", VA = "0x1239EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x123A818", Offset = "0x123A818", VA = "0x123A818")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1239DA0", Offset = "0x1239DA0", VA = "0x1239DA0")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1239E20", Offset = "0x1239E20", VA = "0x1239E20")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600032E")]
	[Address(RVA = "0x123A580", Offset = "0x123A580", VA = "0x123A580")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600032F")]
	[Address(RVA = "0x123A600", Offset = "0x123A600", VA = "0x123A600")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000330")]
	[Address(RVA = "0x123A688", Offset = "0x123A688", VA = "0x123A688")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000331")]
	[Address(RVA = "0x123A710", Offset = "0x123A710", VA = "0x123A710")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000332")]
	[Address(RVA = "0x123A790", Offset = "0x123A790", VA = "0x123A790")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000333")]
	[Address(RVA = "0x123B68C", Offset = "0x123B68C", VA = "0x123B68C")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000334")]
	[Address(RVA = "0x123B734", Offset = "0x123B734", VA = "0x123B734")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x123B7DC", Offset = "0x123B7DC", VA = "0x123B7DC")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000A7")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000A8")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x15747F0", Offset = "0x15747F0", VA = "0x15747F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x15747F4", Offset = "0x15747F4", VA = "0x15747F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x15747F8", Offset = "0x15747F8", VA = "0x15747F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1574960", Offset = "0x1574960", VA = "0x1574960")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1574844", Offset = "0x1574844", VA = "0x1574844")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x15748D4", Offset = "0x15748D4", VA = "0x15748D4")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x15749AC", Offset = "0x15749AC", VA = "0x15749AC")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1574A44", Offset = "0x1574A44", VA = "0x1574A44")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1574BB4", Offset = "0x1574BB4", VA = "0x1574BB4")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1574D24", Offset = "0x1574D24", VA = "0x1574D24")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000A9")]
public class InputSource : MonoBehaviour
{
	[Token(Token = "0x6000342")]
	[Address(RVA = "0x12090C0", Offset = "0x12090C0", VA = "0x12090C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x12090C4", Offset = "0x12090C4", VA = "0x12090C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x12091B4", Offset = "0x12091B4", VA = "0x12091B4", Slot = "4")]
	protected virtual KeyCode StringToKeyCode(int code)
	{
		return default(KeyCode);
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x12092D8", Offset = "0x12092D8", VA = "0x12092D8")]
	public InputSource()
	{
	}
}
[Token(Token = "0x20000AA")]
public class PlayerPressButton : MonoBehaviour
{
	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent callback;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool oneShot;

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x11F9228", Offset = "0x11F9228", VA = "0x11F9228")]
	private void Start()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x11F92E4", Offset = "0x11F92E4", VA = "0x11F92E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x11F9444", Offset = "0x11F9444", VA = "0x11F9444")]
	public PlayerPressButton()
	{
	}
}
[Token(Token = "0x20000AB")]
public class SupportedDevices : MonoBehaviour
{
	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1A491B8", Offset = "0x1A491B8", VA = "0x1A491B8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xBDEFB0", Offset = "0xBDEFB0")]
	public void DevicesNames()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1A492A0", Offset = "0x1A492A0", VA = "0x1A492A0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xBDEFE8", Offset = "0xBDEFE8")]
	public void JoysticksNames()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1A493EC", Offset = "0x1A493EC", VA = "0x1A493EC")]
	public SupportedDevices()
	{
	}
}
[Token(Token = "0x20000AC")]
public class SceneDebug : MonoBehaviour
{
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8460", Offset = "0xBD8460")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneContainer container;

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x1A43B80", Offset = "0x1A43B80", VA = "0x1A43B80")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x1A43B88", Offset = "0x1A43B88", VA = "0x1A43B88")]
		internal bool <PreloadRoutine>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8470", Offset = "0xBD8470")]
	private sealed class <PreloadRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneContainer container;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneDebug <>4__this;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass11_0 <>8__1;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Stopwatch <watch>5__2;

		[Token(Token = "0x1700011F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0x1A4416C", Offset = "0x1A4416C", VA = "0x1A4416C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600100E")]
			[Address(RVA = "0x1A441D4", Offset = "0x1A441D4", VA = "0x1A441D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1A43DB0", Offset = "0x1A43DB0", VA = "0x1A43DB0")]
		[DebuggerHidden]
		public <PreloadRoutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x1A43DDC", Offset = "0x1A43DDC", VA = "0x1A43DDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x1A43DE0", Offset = "0x1A43DE0", VA = "0x1A43DE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x1A44174", Offset = "0x1A44174", VA = "0x1A44174", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8480", Offset = "0xBD8480")]
	private sealed class <LoadRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneContainer container;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneDebug <>4__this;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stopwatch <watch>5__2;

		[Token(Token = "0x17000121")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0x1A43D40", Offset = "0x1A43D40", VA = "0x1A43D40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x1A43DA8", Offset = "0x1A43DA8", VA = "0x1A43DA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x1A43BB4", Offset = "0x1A43BB4", VA = "0x1A43BB4")]
		[DebuggerHidden]
		public <LoadRoutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x1A43BE0", Offset = "0x1A43BE0", VA = "0x1A43BE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x1A43BE4", Offset = "0x1A43BE4", VA = "0x1A43BE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x1A43D48", Offset = "0x1A43D48", VA = "0x1A43D48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8490", Offset = "0xBD8490")]
	private sealed class <UnloadRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneContainer container;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneDebug <>4__this;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stopwatch <watch>5__2;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001018")]
			[Address(RVA = "0x1A44368", Offset = "0x1A44368", VA = "0x1A44368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600101A")]
			[Address(RVA = "0x1A443D0", Offset = "0x1A443D0", VA = "0x1A443D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x1A441DC", Offset = "0x1A441DC", VA = "0x1A441DC")]
		[DebuggerHidden]
		public <UnloadRoutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x1A44208", Offset = "0x1A44208", VA = "0x1A44208", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x1A4420C", Offset = "0x1A4420C", VA = "0x1A4420C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x1A44370", Offset = "0x1A44370", VA = "0x1A44370", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamepadDebugMenu menu;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SceneController controller;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int sceneNumber;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DebugMenuItem selectedSceneItem;

	[Token(Token = "0x40003E2")]
	private const int SCENE_COUNT = 4;

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x11FB66C", Offset = "0x11FB66C", VA = "0x11FB66C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x11FB6E8", Offset = "0x11FB6E8", VA = "0x11FB6E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x11FB6EC", Offset = "0x11FB6EC", VA = "0x11FB6EC")]
	private void CreateAllItems()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x11FB8DC", Offset = "0x11FB8DC", VA = "0x11FB8DC")]
	private SceneContainer GetSelectedSceneByIndex()
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x11FB8E4", Offset = "0x11FB8E4", VA = "0x11FB8E4")]
	private SceneContainer GetSelectedScene(int number)
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x11FB960", Offset = "0x11FB960", VA = "0x11FB960")]
	public void Quit()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x11FB968", Offset = "0x11FB968", VA = "0x11FB968")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF020", Offset = "0xBDF020")]
	private IEnumerator PreloadRoutine(SceneContainer container)
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x11FBA00", Offset = "0x11FBA00", VA = "0x11FBA00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF084", Offset = "0xBDF084")]
	private IEnumerator LoadRoutine(SceneContainer container)
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x11FBA98", Offset = "0x11FBA98", VA = "0x11FBA98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF0E8", Offset = "0xBDF0E8")]
	private IEnumerator UnloadRoutine(SceneContainer container)
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x11FBB30", Offset = "0x11FBB30", VA = "0x11FBB30")]
	public SceneDebug()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x11FBB38", Offset = "0x11FBB38", VA = "0x11FBB38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF14C", Offset = "0xBDF14C")]
	private void <CreateAllItems>b__7_0()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x11FBC00", Offset = "0x11FBC00", VA = "0x11FBC00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF15C", Offset = "0xBDF15C")]
	private void <CreateAllItems>b__7_1()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x11FBC3C", Offset = "0x11FBC3C", VA = "0x11FBC3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF16C", Offset = "0xBDF16C")]
	private void <CreateAllItems>b__7_2()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x11FBC78", Offset = "0x11FBC78", VA = "0x11FBC78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF17C", Offset = "0xBDF17C")]
	private void <CreateAllItems>b__7_3()
	{
	}
}
[Token(Token = "0x20000AD")]
public class GMTestScenery : MonoBehaviour
{
	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD84A0", Offset = "0xBD84A0")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GMTestScenery <>4__this;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600101E")]
			[Address(RVA = "0x1207348", Offset = "0x1207348", VA = "0x1207348", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001020")]
			[Address(RVA = "0x12073B0", Offset = "0x12073B0", VA = "0x12073B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x12071C4", Offset = "0x12071C4", VA = "0x12071C4")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x12071F8", Offset = "0x12071F8", VA = "0x12071F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x12071FC", Offset = "0x12071FC", VA = "0x12071FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x1207350", Offset = "0x1207350", VA = "0x1207350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneContainer container;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1207148", Offset = "0x1207148", VA = "0x1207148")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF18C", Offset = "0xBDF18C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x12071F0", Offset = "0x12071F0", VA = "0x12071F0")]
	public GMTestScenery()
	{
	}
}
[Token(Token = "0x20000AE")]
public class MTest : MonoBehaviour
{
	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD84B0", Offset = "0xBD84B0")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MTest <>4__this;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stopwatch <watch>5__2;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0x120D55C", Offset = "0x120D55C", VA = "0x120D55C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x120D5C4", Offset = "0x120D5C4", VA = "0x120D5C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x120CFAC", Offset = "0x120CFAC", VA = "0x120CFAC")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x120D098", Offset = "0x120D098", VA = "0x120D098", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x120D09C", Offset = "0x120D09C", VA = "0x120D09C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x120D564", Offset = "0x120D564", VA = "0x120D564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD84C0", Offset = "0xBD84C0")]
	private sealed class <TimeCount>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stopwatch <watch>5__2;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x120D744", Offset = "0x120D744", VA = "0x120D744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0x120D7AC", Offset = "0x120D7AC", VA = "0x120D7AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x120D038", Offset = "0x120D038", VA = "0x120D038")]
		[DebuggerHidden]
		public <TimeCount>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x120D5CC", Offset = "0x120D5CC", VA = "0x120D5CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x120D5D0", Offset = "0x120D5D0", VA = "0x120D5D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x120D74C", Offset = "0x120D74C", VA = "0x120D74C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneContainer container;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x120CF30", Offset = "0x120CF30", VA = "0x120CF30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF1F0", Offset = "0xBDF1F0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x120CFD8", Offset = "0x120CFD8", VA = "0x120CFD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF254", Offset = "0xBDF254")]
	private IEnumerator TimeCount()
	{
		return null;
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x120D064", Offset = "0x120D064", VA = "0x120D064")]
	public MTest()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x120D06C", Offset = "0x120D06C", VA = "0x120D06C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF2B8", Offset = "0xBDF2B8")]
	private bool <Start>b__1_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000AF")]
public class StreamingAssetContainer : MonoBehaviour
{
	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int i1;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StreamingAsset<AudioClip> sa;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int i2;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClipStreamingAsset acsa;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int i3;

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1A49158", Offset = "0x1A49158", VA = "0x1A49158")]
	private void Start()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1A491B0", Offset = "0x1A491B0", VA = "0x1A491B0")]
	public StreamingAssetContainer()
	{
	}
}
[Token(Token = "0x20000B0")]
public class AudioHelper : MonoBehaviour
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource[] audioSource;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool oneShot;

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x11FCD34", Offset = "0x11FCD34", VA = "0x11FCD34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x11FCD38", Offset = "0x11FCD38", VA = "0x11FCD38")]
	public void Play()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x11FCE44", Offset = "0x11FCE44", VA = "0x11FCE44")]
	public AudioHelper()
	{
	}
}
[Token(Token = "0x20000B1")]
public class DebugMenuItem
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text label;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action callback;

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x120019C", Offset = "0x120019C", VA = "0x120019C")]
	public DebugMenuItem(string name, Action pCallback, GameObject prefab, Transform parent)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1200290", Offset = "0x1200290", VA = "0x1200290")]
	public void Trigger()
	{
	}
}
[Token(Token = "0x20000B2")]
public class GamepadDebugMenu : MonoBehaviour
{
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD84D0", Offset = "0xBD84D0")]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamepadDebugMenu <>4__this;

		[Token(Token = "0x1700012B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x120795C", Offset = "0x120795C", VA = "0x120795C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x12079C4", Offset = "0x12079C4", VA = "0x12079C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x12074A0", Offset = "0x12074A0", VA = "0x12074A0")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x12078EC", Offset = "0x12078EC", VA = "0x12078EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x12078F0", Offset = "0x12078F0", VA = "0x12078F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x1207964", Offset = "0x1207964", VA = "0x1207964", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject textPrefab;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform cursor;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform optionParent;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text logText;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal int index;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<DebugMenuItem> optionList;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AxisPressCheck axisPressCheck;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x12073B8", Offset = "0x12073B8", VA = "0x12073B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1207424", Offset = "0x1207424", VA = "0x1207424")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF2C8", Offset = "0xBDF2C8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x12074CC", Offset = "0x12074CC", VA = "0x12074CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x12075E0", Offset = "0x12075E0", VA = "0x12075E0")]
	public void RefreshCursor()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x12076EC", Offset = "0x12076EC", VA = "0x12076EC")]
	public DebugMenuItem CreateItem(string name, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1207798", Offset = "0x1207798", VA = "0x1207798")]
	public void Log(string log)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1207830", Offset = "0x1207830", VA = "0x1207830")]
	public GamepadDebugMenu()
	{
	}
}
[Token(Token = "0x20000B3")]
public class LoadSceneDestiny : MonoBehaviour
{
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD84E0", Offset = "0xBD84E0")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadSceneDestiny <>4__this;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0x1209A90", Offset = "0x1209A90", VA = "0x1209A90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001038")]
			[Address(RVA = "0x1209AF8", Offset = "0x1209AF8", VA = "0x1209AF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x1209974", Offset = "0x1209974", VA = "0x1209974")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x12099A8", Offset = "0x12099A8", VA = "0x12099A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x12099AC", Offset = "0x12099AC", VA = "0x12099AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x1209A98", Offset = "0x1209A98", VA = "0x1209A98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x12098F8", Offset = "0x12098F8", VA = "0x12098F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF32C", Offset = "0xBDF32C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x12099A0", Offset = "0x12099A0", VA = "0x12099A0")]
	public LoadSceneDestiny()
	{
	}
}
[Token(Token = "0x20000B4")]
public class SceneController : MonoBehaviour
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneContainer sceneA;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SceneContainer sceneB;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SceneContainer sceneC;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SceneContainer sceneD;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal SceneContainer[] sceneArray;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x11FB4FC", Offset = "0x11FB4FC", VA = "0x11FB4FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x11FB664", Offset = "0x11FB664", VA = "0x11FB664")]
	public SceneController()
	{
	}
}
[Token(Token = "0x20000B5")]
public class Debuggable : MonoBehaviour
{
	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1203590", Offset = "0x1203590", VA = "0x1203590")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x12035FC", Offset = "0x12035FC", VA = "0x12035FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1203668", Offset = "0x1203668", VA = "0x1203668")]
	public Debuggable()
	{
	}
}
[Token(Token = "0x20000B6")]
public class Lagger : MonoBehaviour
{
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lagPerFrame;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1209364", Offset = "0x1209364", VA = "0x1209364")]
	public Lagger()
	{
	}
}
[Token(Token = "0x20000B7")]
public class MaterialFader : MonoBehaviour
{
	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD84F0", Offset = "0xBD84F0")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFader <>4__this;

		[Token(Token = "0x1700012F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x120E8B4", Offset = "0x120E8B4", VA = "0x120E8B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x120E91C", Offset = "0x120E91C", VA = "0x120E91C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x120E4C4", Offset = "0x120E4C4", VA = "0x120E4C4")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x120E794", Offset = "0x120E794", VA = "0x120E794", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x120E798", Offset = "0x120E798", VA = "0x120E798", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x120E8BC", Offset = "0x120E8BC", VA = "0x120E8BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Renderer> renderList;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool executeOnStart;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool initialized;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x120E0CC", Offset = "0x120E0CC", VA = "0x120E0CC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x120E448", Offset = "0x120E448", VA = "0x120E448")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF390", Offset = "0xBDF390")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x120E37C", Offset = "0x120E37C", VA = "0x120E37C")]
	private Material CreateNewMaterial(Renderer renderer, Material fillMat)
	{
		return null;
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x120E4F0", Offset = "0x120E4F0", VA = "0x120E4F0")]
	public void ApplyEffectOnMaterial(float time, bool fade)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x120E690", Offset = "0x120E690", VA = "0x120E690")]
	private void ApplyEffectOnMaterial(Material material, float time, bool fade)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x120E718", Offset = "0x120E718", VA = "0x120E718")]
	public MaterialFader()
	{
	}
}
[Token(Token = "0x20000B8")]
public class QuickTest10 : MonoBehaviour
{
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8500", Offset = "0xBD8500")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000131")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x11F9888", Offset = "0x11F9888", VA = "0x11F9888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x11F98F0", Offset = "0x11F98F0", VA = "0x11F98F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x11F96AC", Offset = "0x11F96AC", VA = "0x11F96AC")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x11F96E0", Offset = "0x11F96E0", VA = "0x11F96E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x11F96E4", Offset = "0x11F96E4", VA = "0x11F96E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x11F9890", Offset = "0x11F9890", VA = "0x11F9890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x11F964C", Offset = "0x11F964C", VA = "0x11F964C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF3F4", Offset = "0xBDF3F4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x11F96D8", Offset = "0x11F96D8", VA = "0x11F96D8")]
	public QuickTest10()
	{
	}
}
[Token(Token = "0x20000B9")]
public class SceneLoader : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002A3")]
	public class LoadFinishedCallback : UnityEvent
	{
		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1A44F5C", Offset = "0x1A44F5C", VA = "0x1A44F5C")]
		public LoadFinishedCallback()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002A4")]
	public class OnProgressChangeCallback : UnityEvent<float>
	{
		[Token(Token = "0x6001046")]
		[Address(RVA = "0x1A44F64", Offset = "0x1A44F64", VA = "0x1A44F64")]
		public OnProgressChangeCallback()
		{
		}
	}

	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8510", Offset = "0xBD8510")]
	private sealed class <MainRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x17000133")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x1A44EEC", Offset = "0x1A44EEC", VA = "0x1A44EEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x1A44F54", Offset = "0x1A44F54", VA = "0x1A44F54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x1A44514", Offset = "0x1A44514", VA = "0x1A44514")]
		[DebuggerHidden]
		public <MainRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x1A44CB8", Offset = "0x1A44CB8", VA = "0x1A44CB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x1A44CBC", Offset = "0x1A44CBC", VA = "0x1A44CBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x1A44EF4", Offset = "0x1A44EF4", VA = "0x1A44EF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8520", Offset = "0xBD8520")]
	private sealed class <ClearMemory>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float intervals;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<float> onProgressCallback;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action finishedCallback;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperation <unloadUnusedAssets>5__2;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001050")]
			[Address(RVA = "0x1A44980", Offset = "0x1A44980", VA = "0x1A44980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x1A449E8", Offset = "0x1A449E8", VA = "0x1A449E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x1A445E8", Offset = "0x1A445E8", VA = "0x1A445E8")]
		[DebuggerHidden]
		public <ClearMemory>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x1A4477C", Offset = "0x1A4477C", VA = "0x1A4477C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x1A44780", Offset = "0x1A44780", VA = "0x1A44780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x1A44988", Offset = "0x1A44988", VA = "0x1A44988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8530", Offset = "0xBD8530")]
	private sealed class <Load>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x1A44C48", Offset = "0x1A44C48", VA = "0x1A44C48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x1A44CB0", Offset = "0x1A44CB0", VA = "0x1A44CB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x1A44690", Offset = "0x1A44690", VA = "0x1A44690")]
		[DebuggerHidden]
		public <Load>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x1A449F0", Offset = "0x1A449F0", VA = "0x1A449F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x1A449F4", Offset = "0x1A449F4", VA = "0x1A449F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x1A44C50", Offset = "0x1A44C50", VA = "0x1A44C50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string levelName;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumTimeForWait;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9BCC", Offset = "0xBD9BCC")]
	private float ioIntervals;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9C18", Offset = "0xBD9C18")]
	public bool callOnStart;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9C50", Offset = "0xBD9C50")]
	public bool clearMemory;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9C88", Offset = "0xBD9C88")]
	[SerializeField]
	private float clearMemoryWeight;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9CD4", Offset = "0xBD9CD4")]
	public LoadFinishedCallback loadFinishedCallback;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9D0C", Offset = "0xBD9D0C")]
	public OnProgressChangeCallback onProgressChangeCallback;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AsyncOperation loadSceneOperation;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int originalSleepTimeout;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float beforeLoadTime;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool loadingDone;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1A443D8", Offset = "0x1A443D8", VA = "0x1A443D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1A443E8", Offset = "0x1A443E8", VA = "0x1A443E8")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1A44498", Offset = "0x1A44498", VA = "0x1A44498")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF458", Offset = "0xBDF458")]
	private IEnumerator MainRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1A44540", Offset = "0x1A44540", VA = "0x1A44540")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF4BC", Offset = "0xBDF4BC")]
	public static IEnumerator ClearMemory(float intervals = 0.1f, [Optional] Action<float> onProgressCallback, [Optional] Action finishedCallback)
	{
		return null;
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1A44614", Offset = "0x1A44614", VA = "0x1A44614")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF520", Offset = "0xBDF520")]
	private IEnumerator Load()
	{
		return null;
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1A446BC", Offset = "0x1A446BC", VA = "0x1A446BC")]
	public void AllowSceneActivation()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1A446E8", Offset = "0x1A446E8", VA = "0x1A446E8")]
	public SceneLoader()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1A44710", Offset = "0x1A44710", VA = "0x1A44710")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF584", Offset = "0xBDF584")]
	private void <MainRoutine>b__16_0(float progress)
	{
	}
}
[Token(Token = "0x20000BA")]
public class SnapCube : MonoBehaviour
{
	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1A459F8", Offset = "0x1A459F8", VA = "0x1A459F8")]
	public SnapCube()
	{
	}
}
[Token(Token = "0x20000BB")]
public class BotEndingBehavior : MonoBehaviour
{
	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8540", Offset = "0xBD8540")]
	private sealed class <FreezePushBotAndDisappearRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BotEndingBehavior <>4__this;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x11FE534", Offset = "0x11FE534", VA = "0x11FE534", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x11FE59C", Offset = "0x11FE59C", VA = "0x11FE59C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x11FDC08", Offset = "0x11FDC08", VA = "0x11FDC08")]
		[DebuggerHidden]
		public <FreezePushBotAndDisappearRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x11FE3E8", Offset = "0x11FE3E8", VA = "0x11FE3E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x11FE3EC", Offset = "0x11FE3EC", VA = "0x11FE3EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x11FE53C", Offset = "0x11FE53C", VA = "0x11FE53C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8550", Offset = "0xBD8550")]
	private sealed class <BotRemovalRoutineWihtoutDialog>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotEndingBehavior <>4__this;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x11FE378", Offset = "0x11FE378", VA = "0x11FE378", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x11FE3E0", Offset = "0x11FE3E0", VA = "0x11FE3E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x11FDC6C", Offset = "0x11FDC6C", VA = "0x11FDC6C")]
		[DebuggerHidden]
		public <BotRemovalRoutineWihtoutDialog>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x11FE2B0", Offset = "0x11FE2B0", VA = "0x11FE2B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x11FE2B4", Offset = "0x11FE2B4", VA = "0x11FE2B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x11FE380", Offset = "0x11FE380", VA = "0x11FE380", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8560", Offset = "0xBD8560")]
	private sealed class <SecondPushRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotEndingBehavior <>4__this;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x11FE690", Offset = "0x11FE690", VA = "0x11FE690", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x11FE6F8", Offset = "0x11FE6F8", VA = "0x11FE6F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x11FDC98", Offset = "0x11FDC98", VA = "0x11FDC98")]
		[DebuggerHidden]
		public <SecondPushRoutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x11FE5A4", Offset = "0x11FE5A4", VA = "0x11FE5A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x11FE5A8", Offset = "0x11FE5A8", VA = "0x11FE5A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x11FE698", Offset = "0x11FE698", VA = "0x11FE698", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8570", Offset = "0xBD8570")]
	private sealed class <BotRemovalRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotEndingBehavior <>4__this;

		[Token(Token = "0x1700013F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0x11FE240", Offset = "0x11FE240", VA = "0x11FE240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001070")]
			[Address(RVA = "0x11FE2A8", Offset = "0x11FE2A8", VA = "0x11FE2A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x11FDCC4", Offset = "0x11FDCC4", VA = "0x11FDCC4")]
		[DebuggerHidden]
		public <BotRemovalRoutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x11FE174", Offset = "0x11FE174", VA = "0x11FE174", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x11FE178", Offset = "0x11FE178", VA = "0x11FE178", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x11FE248", Offset = "0x11FE248", VA = "0x11FE248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasPushedplayer;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int pushCounter;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool frozenBot;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string firstDialogue;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string secondDialogue;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool waitForCallBack;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public StrengthBotState strengthState;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Renderer> renderList;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool requireDialogs;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DialogController dialogueController;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x11FD568", Offset = "0x11FD568", VA = "0x11FD568")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x11FD904", Offset = "0x11FD904", VA = "0x11FD904")]
	public void PushPlayer()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x11FD950", Offset = "0x11FD950", VA = "0x11FD950")]
	public void TriggeredPushPlayer()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x11FD914", Offset = "0x11FD914", VA = "0x11FD914")]
	public void OnFirstPush()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x11FD96C", Offset = "0x11FD96C", VA = "0x11FD96C")]
	public void OnSecondPush()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x11FDB50", Offset = "0x11FDB50", VA = "0x11FDB50")]
	public void FreezePushBotAndDisappear(float delay)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x11FDB7C", Offset = "0x11FDB7C", VA = "0x11FDB7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF594", Offset = "0xBDF594")]
	private IEnumerator FreezePushBotAndDisappearRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x11FDC34", Offset = "0x11FDC34", VA = "0x11FDC34")]
	public void DisapearSequence()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x11FDAD4", Offset = "0x11FDAD4", VA = "0x11FDAD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF5F8", Offset = "0xBDF5F8")]
	private IEnumerator BotRemovalRoutineWihtoutDialog()
	{
		return null;
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x11FD9DC", Offset = "0x11FD9DC", VA = "0x11FD9DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF65C", Offset = "0xBDF65C")]
	private IEnumerator SecondPushRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x11FDA58", Offset = "0x11FDA58", VA = "0x11FDA58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF6C0", Offset = "0xBDF6C0")]
	private IEnumerator BotRemovalRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x11FDCF0", Offset = "0x11FDCF0", VA = "0x11FDCF0")]
	private void ExecuteDisappearsEffect()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x11FD56C", Offset = "0x11FD56C", VA = "0x11FD56C")]
	private void InitializeAllMaterials()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x11FDF78", Offset = "0x11FDF78", VA = "0x11FDF78")]
	private Material CreateNewMaterial(Renderer renderer, Material fillMat)
	{
		return null;
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x11FDF6C", Offset = "0x11FDF6C", VA = "0x11FDF6C")]
	private float GetStartAnimationDistance(Renderer renderer)
	{
		return default(float);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x11FE0BC", Offset = "0x11FE0BC", VA = "0x11FE0BC")]
	private float GetEndAnimationDistance(Renderer renderer)
	{
		return default(float);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x11FE0C8", Offset = "0x11FE0C8", VA = "0x11FE0C8")]
	public BotEndingBehavior()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x11FE14C", Offset = "0x11FE14C", VA = "0x11FE14C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF724", Offset = "0xBDF724")]
	private void <ExecuteDisappearsEffect>b__21_0()
	{
	}
}
[Token(Token = "0x20000BC")]
public class FlyingDroneAnim : MonoBehaviour
{
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8580", Offset = "0xBD8580")]
	private sealed class <ShowDrones>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlyingDroneAnim <>4__this;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x12070D8", Offset = "0x12070D8", VA = "0x12070D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001076")]
			[Address(RVA = "0x1207140", Offset = "0x1207140", VA = "0x1207140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x1206F18", Offset = "0x1206F18", VA = "0x1206F18")]
		[DebuggerHidden]
		public <ShowDrones>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x1206F7C", Offset = "0x1206F7C", VA = "0x1206F7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x1206F80", Offset = "0x1206F80", VA = "0x1206F80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x12070E0", Offset = "0x12070E0", VA = "0x12070E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation animations;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] drones;

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1206E9C", Offset = "0x1206E9C", VA = "0x1206E9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF734", Offset = "0xBDF734")]
	private IEnumerator ShowDrones()
	{
		return null;
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1206F44", Offset = "0x1206F44", VA = "0x1206F44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1206F70", Offset = "0x1206F70", VA = "0x1206F70")]
	private void Update()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1206F74", Offset = "0x1206F74", VA = "0x1206F74")]
	public FlyingDroneAnim()
	{
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20000BD")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000029")]
		public bool Highlight
		{
			[Token(Token = "0x600039D")]
			[Address(RVA = "0x133AB24", Offset = "0x133AB24", VA = "0x133AB24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600039E")]
			[Address(RVA = "0x133AB2C", Offset = "0x133AB2C", VA = "0x133AB2C")]
			set
			{
			}
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x133AB38", Offset = "0x133AB38", VA = "0x133AB38")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x133AD04", Offset = "0x133AD04", VA = "0x133AD04", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x133AD2C", Offset = "0x133AD2C", VA = "0x133AD2C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x133AD54", Offset = "0x133AD54", VA = "0x133AD54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x133AC04", Offset = "0x133AC04", VA = "0x133AC04")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x133AFE4", Offset = "0x133AFE4", VA = "0x133AFE4")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20000BE")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700002A")]
		public bool InRange
		{
			[Token(Token = "0x60003A6")]
			[Address(RVA = "0x133B360", Offset = "0x133B360", VA = "0x133B360")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003A7")]
			[Address(RVA = "0x133B368", Offset = "0x133B368", VA = "0x133B368")]
			set
			{
			}
		}

		[Token(Token = "0x1700002B")]
		public bool Targeted
		{
			[Token(Token = "0x60003A8")]
			[Address(RVA = "0x133B4F4", Offset = "0x133B4F4", VA = "0x133B4F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003A9")]
			[Address(RVA = "0x133B4FC", Offset = "0x133B4FC", VA = "0x133B4FC")]
			set
			{
			}
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x133B508", Offset = "0x133B508", VA = "0x133B508", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x133B374", Offset = "0x133B374", VA = "0x133B374")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x133B670", Offset = "0x133B670", VA = "0x133B670")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x133B6B4", Offset = "0x133B6B4", VA = "0x133B6B4")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x133B710", Offset = "0x133B710", VA = "0x133B710")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD7FD0", Offset = "0xBD7FD0")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700002C")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60003AF")]
			[Address(RVA = "0x133B718", Offset = "0x133B718", VA = "0x133B718")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003B0")]
			[Address(RVA = "0x133B720", Offset = "0x133B720", VA = "0x133B720")]
			set
			{
			}
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x133B73C", Offset = "0x133B73C", VA = "0x133B73C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x133B8D8", Offset = "0x133B8D8", VA = "0x133B8D8", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x133C2C8", Offset = "0x133C2C8", VA = "0x133C2C8", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x133C8A0", Offset = "0x133C8A0", VA = "0x133C8A0", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x133CC80", Offset = "0x133CC80", VA = "0x133CC80")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x133BBC4", Offset = "0x133BBC4", VA = "0x133BBC4")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x133CD5C", Offset = "0x133CD5C", VA = "0x133CD5C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x133D1F4", Offset = "0x133D1F4", VA = "0x133D1F4", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x133D20C", Offset = "0x133D20C", VA = "0x133D20C", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x133D214", Offset = "0x133D214", VA = "0x133D214")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x1228EF8", Offset = "0x1228EF8", VA = "0x1228EF8")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x1228FA8", Offset = "0x1228FA8", VA = "0x1228FA8")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x1229058", Offset = "0x1229058", VA = "0x1229058")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002AD")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000B4C")]
			Disabled,
			[Token(Token = "0x4000B4D")]
			Enabled,
			[Token(Token = "0x4000B4E")]
			Targeted
		}

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x1229060", Offset = "0x1229060", VA = "0x1229060")]
		private void Start()
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x12290D0", Offset = "0x12290D0", VA = "0x12290D0")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x122916C", Offset = "0x122916C", VA = "0x122916C")]
		private void Update()
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x12291B4", Offset = "0x12291B4", VA = "0x12291B4")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x1231410", Offset = "0x1231410", VA = "0x1231410")]
		private void Start()
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x12314DC", Offset = "0x12314DC", VA = "0x12314DC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x12314E8", Offset = "0x12314E8", VA = "0x12314E8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x12314F4", Offset = "0x12314F4", VA = "0x12314F4")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x1339228", Offset = "0x1339228", VA = "0x1339228")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x1339280", Offset = "0x1339280", VA = "0x1339280")]
		private void Update()
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x1339524", Offset = "0x1339524", VA = "0x1339524")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x1339614", Offset = "0x1339614", VA = "0x1339614")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x1339284", Offset = "0x1339284", VA = "0x1339284")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x1339704", Offset = "0x1339704", VA = "0x1339704")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002AE")]
		public enum ContactTest
		{
			[Token(Token = "0x4000B50")]
			PerpenTest,
			[Token(Token = "0x4000B51")]
			BackwardsPress
		}

		[Token(Token = "0x400043B")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400043C")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700002D")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60003CC")]
			[Address(RVA = "0x13397B4", Offset = "0x13397B4", VA = "0x13397B4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700002E")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60003CD")]
			[Address(RVA = "0x13397BC", Offset = "0x13397BC", VA = "0x13397BC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x13397C8", Offset = "0x13397C8", VA = "0x13397C8", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x13398E0", Offset = "0x13398E0", VA = "0x13398E0")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x1339AFC", Offset = "0x1339AFC", VA = "0x1339AFC")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x1339C5C", Offset = "0x1339C5C", VA = "0x1339C5C")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x1339DBC", Offset = "0x1339DBC", VA = "0x1339DBC", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x133A3E4", Offset = "0x133A3E4", VA = "0x133A3E4")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x133A54C", Offset = "0x133A54C", VA = "0x133A54C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x133A6A4", Offset = "0x133A6A4", VA = "0x133A6A4")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x133A884", Offset = "0x133A884", VA = "0x133A884")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9E84", Offset = "0xBD9E84")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9E94", Offset = "0xBD9E94")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700002F")]
		public Collider Collider
		{
			[Token(Token = "0x60003D7")]
			[Address(RVA = "0x133A980", Offset = "0x133A980", VA = "0x133A980", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF798", Offset = "0xBDF798")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0x133A988", Offset = "0x133A988", VA = "0x133A988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7A8", Offset = "0xBDF7A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000030")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60003D9")]
			[Address(RVA = "0x133A990", Offset = "0x133A990", VA = "0x133A990", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7B8", Offset = "0xBDF7B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0x133A998", Offset = "0x133A998", VA = "0x133A998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7C8", Offset = "0xBDF7C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000031")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60003DB")]
			[Address(RVA = "0x133A9A0", Offset = "0x133A9A0", VA = "0x133A9A0", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x133A9F0", Offset = "0x133A9F0", VA = "0x133A9F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x133AA7C", Offset = "0x133AA7C", VA = "0x133AA7C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	public class CapsuleInfo : MonoBehaviour
	{
		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9EA4", Offset = "0xBD9EA4")]
		private Hand <Hand>k__BackingField;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9EB4", Offset = "0xBD9EB4")]
		private OVRPlugin.BoneId <BoneIndex>k__BackingField;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9EC4", Offset = "0xBD9EC4")]
		private Rigidbody <CapsuleRigidBBody>k__BackingField;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9ED4", Offset = "0xBD9ED4")]
		private CapsuleCollider <CapsuleCollider>k__BackingField;

		[Token(Token = "0x17000032")]
		public Hand Hand
		{
			[Token(Token = "0x60003DE")]
			[Address(RVA = "0x133AA84", Offset = "0x133AA84", VA = "0x133AA84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7D8", Offset = "0xBDF7D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003DF")]
			[Address(RVA = "0x133AA8C", Offset = "0x133AA8C", VA = "0x133AA8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7E8", Offset = "0xBDF7E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000033")]
		public OVRPlugin.BoneId BoneIndex
		{
			[Token(Token = "0x60003E0")]
			[Address(RVA = "0x133AA94", Offset = "0x133AA94", VA = "0x133AA94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7F8", Offset = "0xBDF7F8")]
			get
			{
				return default(OVRPlugin.BoneId);
			}
			[Token(Token = "0x60003E1")]
			[Address(RVA = "0x133AA9C", Offset = "0x133AA9C", VA = "0x133AA9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF808", Offset = "0xBDF808")]
			private set
			{
			}
		}

		[Token(Token = "0x17000034")]
		public Rigidbody CapsuleRigidBBody
		{
			[Token(Token = "0x60003E2")]
			[Address(RVA = "0x133AAA4", Offset = "0x133AAA4", VA = "0x133AAA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF818", Offset = "0xBDF818")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003E3")]
			[Address(RVA = "0x133AAAC", Offset = "0x133AAAC", VA = "0x133AAAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF828", Offset = "0xBDF828")]
			private set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public CapsuleCollider CapsuleCollider
		{
			[Token(Token = "0x60003E4")]
			[Address(RVA = "0x133AAB4", Offset = "0x133AAB4", VA = "0x133AAB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF838", Offset = "0xBDF838")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003E5")]
			[Address(RVA = "0x133AABC", Offset = "0x133AABC", VA = "0x133AABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF848", Offset = "0xBDF848")]
			private set
			{
			}
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x133AAC4", Offset = "0x133AAC4", VA = "0x133AAC4")]
		public void Init(Hand hand, OVRPlugin.BoneId bone, Rigidbody rigidBody, CapsuleCollider capsuleCollider)
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x133AB1C", Offset = "0x133AB1C", VA = "0x133AB1C")]
		public CapsuleInfo()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000036")]
		Collider Collider
		{
			[Token(Token = "0x60003E8")]
			get;
		}

		[Token(Token = "0x17000037")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60003E9")]
			get;
		}

		[Token(Token = "0x17000038")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60003EA")]
			get;
		}
	}
	[Token(Token = "0x20000C8")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x1339A40", Offset = "0x1339A40", VA = "0x1339A40")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public enum InteractionType
	{
		[Token(Token = "0x4000454")]
		Enter,
		[Token(Token = "0x4000455")]
		Stay,
		[Token(Token = "0x4000456")]
		Exit
	}
	[Token(Token = "0x20000CA")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x20002AF")]
		public enum HandTrackingConfidence
		{
			[Token(Token = "0x4000B53")]
			Low,
			[Token(Token = "0x4000B54")]
			High,
			[Token(Token = "0x4000B55")]
			None
		}

		[Token(Token = "0x20002B0")]
		public struct PointerState
		{
			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 PointerPosition;

			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion PointerOrientation;

			[Token(Token = "0x4000B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool PointerStatusValid;
		}

		[Token(Token = "0x20002B1")]
		private class HandConfidenceFader
		{
			[Token(Token = "0x4000B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static float MAX_ALPHA;

			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _numberOfFrames;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float _minTrackedAlpha;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float _maxTrackedAlpha;

			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int _currentCount;

			[Token(Token = "0x6001077")]
			[Address(RVA = "0x122958C", Offset = "0x122958C", VA = "0x122958C")]
			public HandConfidenceFader(int numberOfFramse)
			{
			}

			[Token(Token = "0x6001078")]
			[Address(RVA = "0x1229AE0", Offset = "0x1229AE0", VA = "0x1229AE0")]
			public float NextAlphaValue(HandTrackingConfidence confidence)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9EE4", Offset = "0xBD9EE4")]
		private HandSkeleton <Skeleton>k__BackingField;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9EF4", Offset = "0xBD9EF4")]
		private HandPhysics <Physics>k__BackingField;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9F04", Offset = "0xBD9F04")]
		private SkeletonVisualizer <SkeletonVis>k__BackingField;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9F14", Offset = "0xBD9F14")]
		private HandMesh <HandMesh>k__BackingField;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OVRPlugin.Hand HandType;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRPlugin.HandState _currentState;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _isTracked;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private PointerState _pointer;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HandConfidenceFader _confidenceFader;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private HandTrackingConfidence _handConfidence;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _scaledAlpha;

		[Token(Token = "0x17000039")]
		public HandSkeleton Skeleton
		{
			[Token(Token = "0x60003EC")]
			[Address(RVA = "0x12291BC", Offset = "0x12291BC", VA = "0x12291BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF858", Offset = "0xBDF858")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003ED")]
			[Address(RVA = "0x12291C4", Offset = "0x12291C4", VA = "0x12291C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF868", Offset = "0xBDF868")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public HandPhysics Physics
		{
			[Token(Token = "0x60003EE")]
			[Address(RVA = "0x12291CC", Offset = "0x12291CC", VA = "0x12291CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF878", Offset = "0xBDF878")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003EF")]
			[Address(RVA = "0x12291D4", Offset = "0x12291D4", VA = "0x12291D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF888", Offset = "0xBDF888")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003B")]
		public SkeletonVisualizer SkeletonVis
		{
			[Token(Token = "0x60003F0")]
			[Address(RVA = "0x12291DC", Offset = "0x12291DC", VA = "0x12291DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF898", Offset = "0xBDF898")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003F1")]
			[Address(RVA = "0x12291E4", Offset = "0x12291E4", VA = "0x12291E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF8A8", Offset = "0xBDF8A8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public HandMesh HandMesh
		{
			[Token(Token = "0x60003F2")]
			[Address(RVA = "0x12291EC", Offset = "0x12291EC", VA = "0x12291EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF8B8", Offset = "0xBDF8B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003F3")]
			[Address(RVA = "0x12291F4", Offset = "0x12291F4", VA = "0x12291F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF8C8", Offset = "0xBDF8C8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public bool IsInitialized
		{
			[Token(Token = "0x60003F4")]
			[Address(RVA = "0x12291FC", Offset = "0x12291FC", VA = "0x12291FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700003E")]
		public bool IsTracked
		{
			[Token(Token = "0x60003F5")]
			[Address(RVA = "0x1229318", Offset = "0x1229318", VA = "0x1229318")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003F6")]
			[Address(RVA = "0x1229320", Offset = "0x1229320", VA = "0x1229320")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public SkinnedMeshRenderer HandSkinedMeshRenderer
		{
			[Token(Token = "0x60003F7")]
			[Address(RVA = "0x122932C", Offset = "0x122932C", VA = "0x122932C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		public Mesh Mesh
		{
			[Token(Token = "0x60003F8")]
			[Address(RVA = "0x12293B8", Offset = "0x12293B8", VA = "0x12293B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		public float ScaledAlpha
		{
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0x1229444", Offset = "0x1229444", VA = "0x1229444")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003FA")]
			[Address(RVA = "0x122944C", Offset = "0x122944C", VA = "0x122944C")]
			set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public HandTrackingConfidence HandConfidence
		{
			[Token(Token = "0x60003FB")]
			[Address(RVA = "0x1229454", Offset = "0x1229454", VA = "0x1229454")]
			get
			{
				return default(HandTrackingConfidence);
			}
			[Token(Token = "0x60003FC")]
			[Address(RVA = "0x122945C", Offset = "0x122945C", VA = "0x122945C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public PointerState Pointer
		{
			[Token(Token = "0x60003FD")]
			[Address(RVA = "0x1229464", Offset = "0x1229464", VA = "0x1229464")]
			get
			{
				return default(PointerState);
			}
		}

		[Token(Token = "0x17000044")]
		public OVRPlugin.HandState State
		{
			[Token(Token = "0x60003FE")]
			[Address(RVA = "0x1229474", Offset = "0x1229474", VA = "0x1229474")]
			get
			{
				return default(OVRPlugin.HandState);
			}
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x1229484", Offset = "0x1229484", VA = "0x1229484")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x1229618", Offset = "0x1229618", VA = "0x1229618")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x1229AA8", Offset = "0x1229AA8", VA = "0x1229AA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x12296BC", Offset = "0x12296BC", VA = "0x12296BC")]
		private void UpdatePose(OVRPlugin.Step renderStep)
		{
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x1229EEC", Offset = "0x1229EEC", VA = "0x1229EEC")]
		public float PinchStrength(OVRPlugin.HandFinger finger)
		{
			return default(float);
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x1229F30", Offset = "0x1229F30", VA = "0x1229F30")]
		public void ShowSkeleton(Hands.HandsVisualMode mode)
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x1229BDC", Offset = "0x1229BDC", VA = "0x1229BDC")]
		public static HandTrackingConfidence OVRPluginConfidenceToHand(OVRPlugin.TrackingConfidence confidence)
		{
			return default(HandTrackingConfidence);
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x122A040", Offset = "0x122A040", VA = "0x122A040")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public class HandMaterialModifier
	{
		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int HAND_COLOR_ID;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Color SYSTEM_GESTURE_COLOR;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color _oldColor;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _setSystemGestureColor;

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x122A0A4", Offset = "0x122A0A4", VA = "0x122A0A4")]
		public HandMaterialModifier(Material materialToAdjust)
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x122A144", Offset = "0x122A144", VA = "0x122A144")]
		public void UpdateHandMaterial(Hand hand, Material materialToAdjust)
		{
		}
	}
	[Token(Token = "0x20000CC")]
	public class HandMesh : MonoBehaviour
	{
		[Token(Token = "0x20002B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8590", Offset = "0xBD8590")]
		private sealed class <InitializeHandMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandMesh <>4__this;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <success>5__2;

			[Token(Token = "0x17000143")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600107D")]
				[Address(RVA = "0x122AE20", Offset = "0x122AE20", VA = "0x122AE20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000144")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600107F")]
				[Address(RVA = "0x122AE88", Offset = "0x122AE88", VA = "0x122AE88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600107A")]
			[Address(RVA = "0x122A720", Offset = "0x122A720", VA = "0x122A720")]
			[DebuggerHidden]
			public <InitializeHandMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600107B")]
			[Address(RVA = "0x122ACCC", Offset = "0x122ACCC", VA = "0x122ACCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600107C")]
			[Address(RVA = "0x122ACD0", Offset = "0x122ACD0", VA = "0x122ACD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600107E")]
			[Address(RVA = "0x122AE28", Offset = "0x122AE28", VA = "0x122AE28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _handAlphaId;

		[Token(Token = "0x4000467")]
		private const float MAX_ALPHA = 1f;

		[Token(Token = "0x4000468")]
		private const float TRANSLUCENT_ALPHA = 0.75f;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9F24", Offset = "0xBD9F24")]
		private Mesh <Mesh>k__BackingField;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SkinnedMeshRenderer _skinnedMeshRenderer;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material _material;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand _hand;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isInitialized;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _currentAlphaMax;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HandMaterialModifier _handMaterialModifier;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _enableMeshVisual;

		[Token(Token = "0x17000045")]
		public Mesh Mesh
		{
			[Token(Token = "0x600040A")]
			[Address(RVA = "0x122A2E8", Offset = "0x122A2E8", VA = "0x122A2E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF8D8", Offset = "0xBDF8D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600040B")]
			[Address(RVA = "0x122A2F0", Offset = "0x122A2F0", VA = "0x122A2F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF8E8", Offset = "0xBDF8E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public bool IsInitialized
		{
			[Token(Token = "0x600040C")]
			[Address(RVA = "0x122A2F8", Offset = "0x122A2F8", VA = "0x122A2F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600040D")]
			[Address(RVA = "0x122A300", Offset = "0x122A300", VA = "0x122A300")]
			private set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public SkinnedMeshRenderer HandSkinedMeshRenderer
		{
			[Token(Token = "0x600040E")]
			[Address(RVA = "0x122A30C", Offset = "0x122A30C", VA = "0x122A30C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600040F")]
			[Address(RVA = "0x122A314", Offset = "0x122A314", VA = "0x122A314")]
			private set
			{
			}
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x122A31C", Offset = "0x122A31C", VA = "0x122A31C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x122A52C", Offset = "0x122A52C", VA = "0x122A52C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x122A678", Offset = "0x122A678", VA = "0x122A678")]
		private void Start()
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x122A6A4", Offset = "0x122A6A4", VA = "0x122A6A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF8F8", Offset = "0xBDF8F8")]
		private IEnumerator InitializeHandMesh()
		{
			return null;
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x122A74C", Offset = "0x122A74C", VA = "0x122A74C")]
		private bool InitializeMesh(ref OVRPlugin.Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x122AA5C", Offset = "0x122AA5C", VA = "0x122AA5C")]
		private static BoneWeight[] GetMeshBoneWeights(ref OVRPlugin.Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x1229BEC", Offset = "0x1229BEC", VA = "0x1229BEC")]
		public void UpdatePose()
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x1229FE4", Offset = "0x1229FE4", VA = "0x1229FE4")]
		public void EnableMeshRenderer(Hands.HandsVisualMode mode)
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x122AC40", Offset = "0x122AC40", VA = "0x122AC40")]
		public static OVRPlugin.MeshType GetHandMeshTypeFromOVRHandType(OVRPlugin.Hand hand)
		{
			return default(OVRPlugin.MeshType);
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x122AC50", Offset = "0x122AC50", VA = "0x122AC50")]
		public HandMesh()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	public class HandPhysics : MonoBehaviour
	{
		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD85A0", Offset = "0xBD85A0")]
		private sealed class <InitializeSkeleton>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandPhysics <>4__this;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <success>5__2;

			[Token(Token = "0x17000145")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001083")]
				[Address(RVA = "0x122B734", Offset = "0x122B734", VA = "0x122B734", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000146")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001085")]
				[Address(RVA = "0x122B79C", Offset = "0x122B79C", VA = "0x122B79C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001080")]
			[Address(RVA = "0x122B0E8", Offset = "0x122B0E8", VA = "0x122B0E8")]
			[DebuggerHidden]
			public <InitializeSkeleton>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001081")]
			[Address(RVA = "0x122B5E4", Offset = "0x122B5E4", VA = "0x122B5E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001082")]
			[Address(RVA = "0x122B5E8", Offset = "0x122B5E8", VA = "0x122B5E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001084")]
			[Address(RVA = "0x122B73C", Offset = "0x122B73C", VA = "0x122B73C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CapsuleInfo[] _capsules;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HandSkeleton _handSkeleton;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand _hand;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _capsulesParent;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isInitialized;

		[Token(Token = "0x17000048")]
		public bool IsInitialized
		{
			[Token(Token = "0x600041B")]
			[Address(RVA = "0x122AE90", Offset = "0x122AE90", VA = "0x122AE90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600041C")]
			[Address(RVA = "0x122AE98", Offset = "0x122AE98", VA = "0x122AE98")]
			private set
			{
			}
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x122AEA4", Offset = "0x122AEA4", VA = "0x122AEA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x122AFD4", Offset = "0x122AFD4", VA = "0x122AFD4")]
		private void Start()
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x122B07C", Offset = "0x122B07C", VA = "0x122B07C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x122B000", Offset = "0x122B000", VA = "0x122B000")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF95C", Offset = "0xBDF95C")]
		private IEnumerator InitializeSkeleton()
		{
			return null;
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x1228CD8", Offset = "0x1228CD8", VA = "0x1228CD8")]
		public List<CapsuleInfo> GetCapsulesPerBone(OVRPlugin.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x122B114", Offset = "0x122B114", VA = "0x122B114")]
		public bool InitializePhysics(ref OVRPlugin.Skeleton skeleton)
		{
			return default(bool);
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x12298A8", Offset = "0x12298A8", VA = "0x12298A8")]
		public void UpdatePose()
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x122B5DC", Offset = "0x122B5DC", VA = "0x122B5DC")]
		public HandPhysics()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	public class HandSkeleton : MonoBehaviour
	{
		[Token(Token = "0x20002B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD85B0", Offset = "0xBD85B0")]
		private sealed class <InitializeSkeleton>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandSkeleton <>4__this;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <success>5__2;

			[Token(Token = "0x17000147")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001089")]
				[Address(RVA = "0x122C3E0", Offset = "0x122C3E0", VA = "0x122C3E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000148")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600108B")]
				[Address(RVA = "0x122C448", Offset = "0x122C448", VA = "0x122C448", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001086")]
			[Address(RVA = "0x122BA28", Offset = "0x122BA28", VA = "0x122BA28")]
			[DebuggerHidden]
			public <InitializeSkeleton>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001087")]
			[Address(RVA = "0x122C20C", Offset = "0x122C20C", VA = "0x122C20C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001088")]
			[Address(RVA = "0x122C210", Offset = "0x122C210", VA = "0x122C210", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600108A")]
			[Address(RVA = "0x122C3E8", Offset = "0x122C3E8", VA = "0x122C3E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Transform> _bones;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Hand _hand;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _skeleton;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IList<Transform> _readOnlyBones;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isInitialized;

		[Token(Token = "0x17000049")]
		public bool IsInitialized
		{
			[Token(Token = "0x6000425")]
			[Address(RVA = "0x122B7A4", Offset = "0x122B7A4", VA = "0x122B7A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000426")]
			[Address(RVA = "0x122B7AC", Offset = "0x122B7AC", VA = "0x122B7AC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public IList<Transform> Bones
		{
			[Token(Token = "0x6000427")]
			[Address(RVA = "0x122B7B8", Offset = "0x122B7B8", VA = "0x122B7B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x122B7C0", Offset = "0x122B7C0", VA = "0x122B7C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x122B980", Offset = "0x122B980", VA = "0x122B980")]
		private void Start()
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x122B9AC", Offset = "0x122B9AC", VA = "0x122B9AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDF9C0", Offset = "0xBDF9C0")]
		private IEnumerator InitializeSkeleton()
		{
			return null;
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x122BA54", Offset = "0x122BA54", VA = "0x122BA54")]
		public bool InitializeSkeleton(ref OVRPlugin.Skeleton skeleton)
		{
			return default(bool);
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x122BE34", Offset = "0x122BE34", VA = "0x122BE34")]
		private bool AttacheBonesToMesh()
		{
			return default(bool);
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x1229D28", Offset = "0x1229D28", VA = "0x1229D28")]
		public bool UpdatePose(OVRPlugin.HandState pose)
		{
			return default(bool);
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x122C104", Offset = "0x122C104", VA = "0x122C104")]
		public static OVRPlugin.BoneId GetDistalBone(OVRPlugin.BoneId bi)
		{
			return default(OVRPlugin.BoneId);
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x122C12C", Offset = "0x122C12C", VA = "0x122C12C")]
		public static bool IsDistalBone(OVRPlugin.BoneId bi)
		{
			return default(bool);
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x122C168", Offset = "0x122C168", VA = "0x122C168")]
		public static OVRPlugin.BoneId GetTip(OVRPlugin.BoneId bi)
		{
			return default(OVRPlugin.BoneId);
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x122C18C", Offset = "0x122C18C", VA = "0x122C18C")]
		public static int GetTipParentIndex(OVRPlugin.BoneId tip)
		{
			return default(int);
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x122C1B4", Offset = "0x122C1B4", VA = "0x122C1B4")]
		public static bool IsDistal(OVRPlugin.BoneId bone)
		{
			return default(bool);
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x122C1E4", Offset = "0x122C1E4", VA = "0x122C1E4")]
		public static OVRPlugin.SkeletonType GetSkeletonTypeFromMeshType(OVRPlugin.MeshType meshType)
		{
			return default(OVRPlugin.SkeletonType);
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x122B724", Offset = "0x122B724", VA = "0x122B724")]
		public static OVRPlugin.SkeletonType GetSkeletonTypeFromHandType(OVRPlugin.Hand hand)
		{
			return default(OVRPlugin.SkeletonType);
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x122C1F4", Offset = "0x122C1F4", VA = "0x122C1F4")]
		public static OVRPlugin.Hand GetHandFromMeshType(OVRPlugin.MeshType meshType)
		{
			return default(OVRPlugin.Hand);
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x122C204", Offset = "0x122C204", VA = "0x122C204")]
		public HandSkeleton()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public class Hands : MonoBehaviour
	{
		[Token(Token = "0x20002B5")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000B6B")]
			Mesh,
			[Token(Token = "0x4000B6C")]
			Skeleton,
			[Token(Token = "0x4000B6D")]
			Both,
			[Token(Token = "0x4000B6E")]
			Max
		}

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Hand _handPrefab;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Hand _leftHand;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hand _rightHand;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9F64", Offset = "0xBD9F64")]
		private static Hands <Instance>k__BackingField;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x1700004B")]
		public static Hands Instance
		{
			[Token(Token = "0x6000437")]
			[Address(RVA = "0x122C450", Offset = "0x122C450", VA = "0x122C450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA24", Offset = "0xBDFA24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000438")]
			[Address(RVA = "0x122C4A0", Offset = "0x122C4A0", VA = "0x122C4A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA34", Offset = "0xBDFA34")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public Hand LeftHand
		{
			[Token(Token = "0x6000439")]
			[Address(RVA = "0x122C4F8", Offset = "0x122C4F8", VA = "0x122C4F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600043A")]
			[Address(RVA = "0x122C500", Offset = "0x122C500", VA = "0x122C500")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public Hand RightHand
		{
			[Token(Token = "0x600043B")]
			[Address(RVA = "0x122C508", Offset = "0x122C508", VA = "0x122C508")]
			get
			{
				return null;
			}
			[Token(Token = "0x600043C")]
			[Address(RVA = "0x122C510", Offset = "0x122C510", VA = "0x122C510")]
			private set
			{
			}
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x1228C00", Offset = "0x1228C00", VA = "0x1228C00")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x122C518", Offset = "0x122C518", VA = "0x122C518")]
		private void Awake()
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x122C8E8", Offset = "0x122C8E8", VA = "0x122C8E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x122C698", Offset = "0x122C698", VA = "0x122C698")]
		private void InitHands()
		{
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x122C938", Offset = "0x122C938", VA = "0x122C938")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x122C968", Offset = "0x122C968", VA = "0x122C968")]
		public Hands()
		{
		}
	}
	[Token(Token = "0x20000D0")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002B6")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600108C")]
			[Address(RVA = "0x122D124", Offset = "0x122D124", VA = "0x122D124")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700004E")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000443")]
			[Address(RVA = "0x122C970", Offset = "0x122C970", VA = "0x122C970")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000444")]
			[Address(RVA = "0x122C978", Offset = "0x122C978", VA = "0x122C978")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000445")]
			[Address(RVA = "0x122C980", Offset = "0x122C980", VA = "0x122C980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0x122C988", Offset = "0x122C988", VA = "0x122C988", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000447")]
			[Address(RVA = "0x122C990", Offset = "0x122C990", VA = "0x122C990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA44", Offset = "0xBDFA44")]
			add
			{
			}
			[Token(Token = "0x6000448")]
			[Address(RVA = "0x122CA34", Offset = "0x122CA34", VA = "0x122CA34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA54", Offset = "0xBDFA54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x600044A")]
			[Address(RVA = "0x122CB4C", Offset = "0x122CB4C", VA = "0x122CB4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA64", Offset = "0xBDFA64")]
			add
			{
			}
			[Token(Token = "0x600044B")]
			[Address(RVA = "0x122CBF0", Offset = "0x122CBF0", VA = "0x122CBF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA74", Offset = "0xBDFA74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x600044D")]
			[Address(RVA = "0x122CD08", Offset = "0x122CD08", VA = "0x122CD08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA84", Offset = "0xBDFA84")]
			add
			{
			}
			[Token(Token = "0x600044E")]
			[Address(RVA = "0x122CDAC", Offset = "0x122CDAC", VA = "0x122CDAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA94", Offset = "0xBDFA94")]
			remove
			{
			}
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x122CAD8", Offset = "0x122CAD8", VA = "0x122CAD8", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x122CC94", Offset = "0x122CC94", VA = "0x122CC94", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x122CE50", Offset = "0x122CE50", VA = "0x122CE50", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000450")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x122CEC4", Offset = "0x122CEC4", VA = "0x122CEC4", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x122CFF0", Offset = "0x122CFF0", VA = "0x122CFF0", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x122D11C", Offset = "0x122D11C", VA = "0x122D11C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000489")]
		None,
		[Token(Token = "0x400048A")]
		Proximity,
		[Token(Token = "0x400048B")]
		Contact,
		[Token(Token = "0x400048C")]
		Action
	}
	[Token(Token = "0x20000D2")]
	public enum InteractableState
	{
		[Token(Token = "0x400048E")]
		Default,
		[Token(Token = "0x400048F")]
		ProximityState,
		[Token(Token = "0x4000490")]
		ContactState,
		[Token(Token = "0x4000491")]
		ActionState
	}
	[Token(Token = "0x20000D3")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x122D2B4", Offset = "0x122D2B4", VA = "0x122D2B4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000052")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000455")]
			[Address(RVA = "0x122D1CC", Offset = "0x122D1CC", VA = "0x122D1CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x122CF28", Offset = "0x122CF28", VA = "0x122CF28")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x122D054", Offset = "0x122D054", VA = "0x122D054")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x122D234", Offset = "0x122D234", VA = "0x122D234")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD85C0", Offset = "0xBD85C0")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Hands <handsObj>5__2;

			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Hand <handToAttachTo>5__5;

			[Token(Token = "0x17000149")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001091")]
				[Address(RVA = "0x122DB28", Offset = "0x122DB28", VA = "0x122DB28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001093")]
				[Address(RVA = "0x122DB90", Offset = "0x122DB90", VA = "0x122DB90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600108D")]
			[Address(RVA = "0x122D49C", Offset = "0x122D49C", VA = "0x122D49C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600108E")]
			[Address(RVA = "0x122D68C", Offset = "0x122D68C", VA = "0x122D68C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600108F")]
			[Address(RVA = "0x122D700", Offset = "0x122D700", VA = "0x122D700", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001090")]
			[Address(RVA = "0x122D6A8", Offset = "0x122D6A8", VA = "0x122D6A8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001092")]
			[Address(RVA = "0x122DB30", Offset = "0x122DB30", VA = "0x122DB30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x122D37C", Offset = "0x122D37C", VA = "0x122D37C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x122D3F8", Offset = "0x122D3F8", VA = "0x122D3F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDFAA4", Offset = "0xBDFAA4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x122D4C8", Offset = "0x122D4C8", VA = "0x122D4C8")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x122D684", Offset = "0x122D684", VA = "0x122D684")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x17000053")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600045E")]
			[Address(RVA = "0x122DB98", Offset = "0x122DB98", VA = "0x122DB98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x122DD04", Offset = "0x122DD04", VA = "0x122DD04")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x122DE70", Offset = "0x122DE70", VA = "0x122DE70")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x122DFDC", Offset = "0x122DFDC", VA = "0x122DFDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x122E188", Offset = "0x122E188", VA = "0x122E188")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x122E1D0", Offset = "0x122E1D0", VA = "0x122E1D0")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x122E910", Offset = "0x122E910", VA = "0x122E910")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x122EAFC", Offset = "0x122EAFC", VA = "0x122EAFC")]
		private void UpdateInteractableDeepestCollisionMap(List<InteractableCollisionInfo> allCollisions, Dictionary<Interactable, InteractableCollisionInfo> interactableToCollisionInfo)
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x122ED48", Offset = "0x122ED48", VA = "0x122ED48")]
		private void UpdateUsingOldNewCollisionData(InteractableTool interactableTool, Dictionary<Interactable, InteractableCollisionInfo> oldCollisionMap, Dictionary<Interactable, InteractableCollisionInfo> newCollisionMap)
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x122F3CC", Offset = "0x122F3CC", VA = "0x122F3CC")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public class SkeletonVisualizer : MonoBehaviour
	{
		[Token(Token = "0x20002B8")]
		private class BoneBounds
		{
			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject StartBone;

			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject BoneVisual;

			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject EndSphere;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LineRenderer Line;

			[Token(Token = "0x6001094")]
			[Address(RVA = "0x1234878", Offset = "0x1234878", VA = "0x1234878")]
			public BoneBounds(GameObject parent1, GameObject bone, GameObject parent2, LineRenderer line)
			{
			}
		}

		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD85D0", Offset = "0xBD85D0")]
		private sealed class <BuildSkeletonVis>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonVisualizer <>4__this;

			[Token(Token = "0x1700014B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001098")]
				[Address(RVA = "0x1234B80", Offset = "0x1234B80", VA = "0x1234B80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600109A")]
				[Address(RVA = "0x1234BE8", Offset = "0x1234BE8", VA = "0x1234BE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001095")]
			[Address(RVA = "0x12345F4", Offset = "0x12345F4", VA = "0x12345F4")]
			[DebuggerHidden]
			public <BuildSkeletonVis>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001096")]
			[Address(RVA = "0x1234964", Offset = "0x1234964", VA = "0x1234964", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001097")]
			[Address(RVA = "0x1234968", Offset = "0x1234968", VA = "0x1234968", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001099")]
			[Address(RVA = "0x1234B88", Offset = "0x1234B88", VA = "0x1234B88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int HAND_ALPHA_ID;

		[Token(Token = "0x40004A5")]
		private const float BONE_WIDTH = 0.01f;

		[Token(Token = "0x40004A6")]
		private const float BONE_HEIGHT = 0.001f;

		[Token(Token = "0x40004A7")]
		private const float LINE_RENDERER_WIDTH = 0.005f;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material _skeletonMaterial;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool EnableVisualization;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<BoneBounds> _boneConnectorsVisualizers;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Hand _hand;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _skeleton;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isInitialized;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HandMaterialModifier _handMaterialModifier;

		[Token(Token = "0x17000054")]
		public bool IsInitialized
		{
			[Token(Token = "0x6000468")]
			[Address(RVA = "0x1233DB4", Offset = "0x1233DB4", VA = "0x1233DB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000469")]
			[Address(RVA = "0x1233DBC", Offset = "0x1233DBC", VA = "0x1233DBC")]
			private set
			{
			}
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x1233DC8", Offset = "0x1233DC8", VA = "0x1233DC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x1233FE8", Offset = "0x1233FE8", VA = "0x1233FE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x12340EC", Offset = "0x12340EC", VA = "0x12340EC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x1234420", Offset = "0x1234420", VA = "0x1234420")]
		private int GetBoneParentIndex(Transform bone)
		{
			return default(int);
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x1233F6C", Offset = "0x1233F6C", VA = "0x1233F6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDFB08", Offset = "0xBDFB08")]
		private IEnumerator BuildSkeletonVis()
		{
			return null;
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x1234620", Offset = "0x1234620", VA = "0x1234620")]
		private void BuildBone(GameObject boneVis, GameObject parent)
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x123478C", Offset = "0x123478C", VA = "0x123478C")]
		private LineRenderer CreateLineRenderer(GameObject addToGameObject, bool useWorldSpace)
		{
			return null;
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x12348F8", Offset = "0x12348F8", VA = "0x12348F8")]
		public SkeletonVisualizer()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public class FingerTipPokeTool : MonoBehaviour, InteractableTool
	{
		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD85E0", Offset = "0xBD85E0")]
		private sealed class <AttachTriggerLogic>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private HandPhysics <handPhysics>5__2;

			[Token(Token = "0x1700014D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600109E")]
				[Address(RVA = "0x1228DC4", Offset = "0x1228DC4", VA = "0x1228DC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010A0")]
				[Address(RVA = "0x1228E2C", Offset = "0x1228E2C", VA = "0x1228E2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600109B")]
			[Address(RVA = "0x1228858", Offset = "0x1228858", VA = "0x1228858")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x600109C")]
			[Address(RVA = "0x1228884", Offset = "0x1228884", VA = "0x1228884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600109D")]
			[Address(RVA = "0x1228888", Offset = "0x1228888", VA = "0x1228888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600109F")]
			[Address(RVA = "0x1228DCC", Offset = "0x1228DCC", VA = "0x1228DCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004AF")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9FF4", Offset = "0xBD9FF4")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA004", Offset = "0xBDA004")]
		private Dictionary<Interactable, InteractableCollisionInfo> <CurrInteractableToCollisionInfos>k__BackingField;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA014", Offset = "0xBDA014")]
		private Dictionary<Interactable, InteractableCollisionInfo> <PrevInteractableToCollisionInfos>k__BackingField;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA024", Offset = "0xBDA024")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA034", Offset = "0xBDA034")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currVelocityFrame;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _position;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<InteractableCollisionInfo> _intersectingObjects;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _lastScale;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _isInitialized;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CapsuleInfo _capsuleToTrack;

		[Token(Token = "0x17000055")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000473")]
			[Address(RVA = "0x133D4B0", Offset = "0x133D4B0", VA = "0x133D4B0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB6C", Offset = "0xBDFB6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000474")]
			[Address(RVA = "0x133D4B8", Offset = "0x133D4B8", VA = "0x133D4B8", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB7C", Offset = "0xBDFB7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public Dictionary<Interactable, InteractableCollisionInfo> CurrInteractableToCollisionInfos
		{
			[Token(Token = "0x6000475")]
			[Address(RVA = "0x133D4C4", Offset = "0x133D4C4", VA = "0x133D4C4", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB8C", Offset = "0xBDFB8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000476")]
			[Address(RVA = "0x133D4CC", Offset = "0x133D4CC", VA = "0x133D4CC", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB9C", Offset = "0xBDFB9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000057")]
		public Dictionary<Interactable, InteractableCollisionInfo> PrevInteractableToCollisionInfos
		{
			[Token(Token = "0x6000477")]
			[Address(RVA = "0x133D4D4", Offset = "0x133D4D4", VA = "0x133D4D4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBAC", Offset = "0xBDFBAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000478")]
			[Address(RVA = "0x133D4DC", Offset = "0x133D4DC", VA = "0x133D4DC", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBBC", Offset = "0xBDFBBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000479")]
			[Address(RVA = "0x133D4E4", Offset = "0x133D4E4", VA = "0x133D4E4", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBCC", Offset = "0xBDFBCC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600047A")]
			[Address(RVA = "0x133D4F0", Offset = "0x133D4F0", VA = "0x133D4F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBDC", Offset = "0xBDFBDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600047B")]
			[Address(RVA = "0x133D4FC", Offset = "0x133D4FC", VA = "0x133D4FC", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBEC", Offset = "0xBDFBEC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600047C")]
			[Address(RVA = "0x133D508", Offset = "0x133D508", VA = "0x133D508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBFC", Offset = "0xBDFBFC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public InteractableToolTags ToolTags
		{
			[Token(Token = "0x600047D")]
			[Address(RVA = "0x133D514", Offset = "0x133D514", VA = "0x133D514", Slot = "11")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700005B")]
		public ToolInputState ToolInputState
		{
			[Token(Token = "0x600047E")]
			[Address(RVA = "0x133D51C", Offset = "0x133D51C", VA = "0x133D51C", Slot = "12")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700005C")]
		public bool IsFarFieldTool
		{
			[Token(Token = "0x600047F")]
			[Address(RVA = "0x133D524", Offset = "0x133D524", VA = "0x133D524", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005D")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000480")]
			[Address(RVA = "0x133D52C", Offset = "0x133D52C", VA = "0x133D52C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		public bool EnableState
		{
			[Token(Token = "0x6000481")]
			[Address(RVA = "0x133D534", Offset = "0x133D534", VA = "0x133D534", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000482")]
			[Address(RVA = "0x133D560", Offset = "0x133D560", VA = "0x133D560", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x133D59C", Offset = "0x133D59C", VA = "0x133D59C", Slot = "18")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x133D6C4", Offset = "0x133D6C4", VA = "0x133D6C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDFC0C", Offset = "0xBDFC0C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x133D740", Offset = "0x133D740", VA = "0x133D740")]
		private void Update()
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x133DAB0", Offset = "0x133DAB0", VA = "0x133DAB0")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x133DD28", Offset = "0x133DD28", VA = "0x133DD28")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x133DE68", Offset = "0x133DE68", VA = "0x133DE68", Slot = "16")]
		public List<InteractableCollisionInfo> GetIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x133E0EC", Offset = "0x133E0EC", VA = "0x133E0EC", Slot = "17")]
		public void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x133E0F0", Offset = "0x133E0F0", VA = "0x133E0F0", Slot = "19")]
		public void DeFocus()
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x133E0F4", Offset = "0x133E0F4", VA = "0x133E0F4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA054", Offset = "0xBDA054")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA064", Offset = "0xBDA064")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA074", Offset = "0xBDA074")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700005F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600048C")]
			[Address(RVA = "0x1228E34", Offset = "0x1228E34", VA = "0x1228E34", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC70", Offset = "0xBDFC70")]
			get
			{
				return null;
			}
			[Token(Token = "0x600048D")]
			[Address(RVA = "0x1228E3C", Offset = "0x1228E3C", VA = "0x1228E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC80", Offset = "0xBDFC80")]
			set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public bool EnableState
		{
			[Token(Token = "0x600048E")]
			[Address(RVA = "0x1228E44", Offset = "0x1228E44", VA = "0x1228E44", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600048F")]
			[Address(RVA = "0x1228E60", Offset = "0x1228E60", VA = "0x1228E60", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000490")]
			[Address(RVA = "0x1228E80", Offset = "0x1228E80", VA = "0x1228E80", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC90", Offset = "0xBDFC90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000491")]
			[Address(RVA = "0x1228E88", Offset = "0x1228E88", VA = "0x1228E88", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFCA0", Offset = "0xBDFCA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public float SphereRadius
		{
			[Token(Token = "0x6000492")]
			[Address(RVA = "0x1228E94", Offset = "0x1228E94", VA = "0x1228E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFCB0", Offset = "0xBDFCB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000493")]
			[Address(RVA = "0x1228E9C", Offset = "0x1228E9C", VA = "0x1228E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFCC0", Offset = "0xBDFCC0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x1228EA4", Offset = "0x1228EA4", VA = "0x1228EA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x1228EEC", Offset = "0x1228EEC", VA = "0x1228EEC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x1228EF0", Offset = "0x1228EF0", VA = "0x1228EF0")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40004C5")]
		None = 0,
		[Token(Token = "0x40004C6")]
		Ray = 1,
		[Token(Token = "0x40004C7")]
		Poke = 4,
		[Token(Token = "0x40004C8")]
		Pinch = 8,
		[Token(Token = "0x40004C9")]
		All = -1
	}
	[Token(Token = "0x20000DB")]
	public enum ToolInputState
	{
		[Token(Token = "0x40004CB")]
		Inactive,
		[Token(Token = "0x40004CC")]
		PrimaryInputDown,
		[Token(Token = "0x40004CD")]
		PrimaryInputDownStay,
		[Token(Token = "0x40004CE")]
		PrimaryInputUp
	}
	[Token(Token = "0x20000DC")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x122D174", Offset = "0x122D174", VA = "0x122D174")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20000DD")]
	public interface InteractableTool
	{
		[Token(Token = "0x17000063")]
		Transform ToolTransform
		{
			[Token(Token = "0x6000498")]
			get;
		}

		[Token(Token = "0x17000064")]
		bool IsRightHandedTool
		{
			[Token(Token = "0x6000499")]
			get;
			[Token(Token = "0x600049A")]
			set;
		}

		[Token(Token = "0x17000065")]
		Dictionary<Interactable, InteractableCollisionInfo> CurrInteractableToCollisionInfos
		{
			[Token(Token = "0x600049B")]
			get;
			[Token(Token = "0x600049C")]
			set;
		}

		[Token(Token = "0x17000066")]
		Dictionary<Interactable, InteractableCollisionInfo> PrevInteractableToCollisionInfos
		{
			[Token(Token = "0x600049D")]
			get;
			[Token(Token = "0x600049E")]
			set;
		}

		[Token(Token = "0x17000067")]
		InteractableToolTags ToolTags
		{
			[Token(Token = "0x600049F")]
			get;
		}

		[Token(Token = "0x17000068")]
		ToolInputState ToolInputState
		{
			[Token(Token = "0x60004A0")]
			get;
		}

		[Token(Token = "0x17000069")]
		bool IsFarFieldTool
		{
			[Token(Token = "0x60004A1")]
			get;
		}

		[Token(Token = "0x1700006A")]
		Vector3 Velocity
		{
			[Token(Token = "0x60004A2")]
			get;
		}

		[Token(Token = "0x1700006B")]
		Vector3 InteractionPosition
		{
			[Token(Token = "0x60004A3")]
			get;
		}

		[Token(Token = "0x1700006C")]
		bool EnableState
		{
			[Token(Token = "0x60004A8")]
			get;
			[Token(Token = "0x60004A9")]
			set;
		}

		[Token(Token = "0x60004A4")]
		List<InteractableCollisionInfo> GetIntersectingObjects();

		[Token(Token = "0x60004A5")]
		void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60004A6")]
		void Initialize();

		[Token(Token = "0x60004A7")]
		void DeFocus();
	}
	[Token(Token = "0x20000DE")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700006D")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60004AA")]
			get;
		}

		[Token(Token = "0x1700006E")]
		bool EnableState
		{
			[Token(Token = "0x60004AC")]
			get;
			[Token(Token = "0x60004AD")]
			set;
		}

		[Token(Token = "0x1700006F")]
		bool ToolActivateState
		{
			[Token(Token = "0x60004AE")]
			get;
			[Token(Token = "0x60004AF")]
			set;
		}

		[Token(Token = "0x60004AB")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20000DF")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002BB")]
		private enum PinchState
		{
			[Token(Token = "0x4000B84")]
			None,
			[Token(Token = "0x4000B85")]
			PinchDown,
			[Token(Token = "0x4000B86")]
			PinchStay,
			[Token(Token = "0x4000B87")]
			PinchUp
		}

		[Token(Token = "0x40004D2")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000070")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60004B0")]
			[Address(RVA = "0x12314FC", Offset = "0x12314FC", VA = "0x12314FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000071")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60004B1")]
			[Address(RVA = "0x1231588", Offset = "0x1231588", VA = "0x1231588")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000072")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60004B2")]
			[Address(RVA = "0x1231614", Offset = "0x1231614", VA = "0x1231614")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x12316A0", Offset = "0x12316A0", VA = "0x12316A0")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x12316D4", Offset = "0x12316D4", VA = "0x12316D4")]
		public void UpdateState(Hand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class RayTool : MonoBehaviour, InteractableTool
	{
		[Token(Token = "0x40004D5")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40004D6")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40004D7")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40004D8")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40004D9")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDA094", Offset = "0xBDA094")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA0E8", Offset = "0xBDA0E8")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA0F8", Offset = "0xBDA0F8")]
		private Dictionary<Interactable, InteractableCollisionInfo> <CurrInteractableToCollisionInfos>k__BackingField;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA108", Offset = "0xBDA108")]
		private Dictionary<Interactable, InteractableCollisionInfo> <PrevInteractableToCollisionInfos>k__BackingField;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA118", Offset = "0xBDA118")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA128", Offset = "0xBDA128")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<InteractableCollisionInfo> _intersectingObjects;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _initialized;

		[Token(Token = "0x17000073")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60004B5")]
			[Address(RVA = "0x12319A0", Offset = "0x12319A0", VA = "0x12319A0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60004B6")]
			[Address(RVA = "0x12319A8", Offset = "0x12319A8", VA = "0x12319A8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFCD0", Offset = "0xBDFCD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004B7")]
			[Address(RVA = "0x12319B0", Offset = "0x12319B0", VA = "0x12319B0", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFCE0", Offset = "0xBDFCE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public Dictionary<Interactable, InteractableCollisionInfo> CurrInteractableToCollisionInfos
		{
			[Token(Token = "0x60004B8")]
			[Address(RVA = "0x12319BC", Offset = "0x12319BC", VA = "0x12319BC", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFCF0", Offset = "0xBDFCF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004B9")]
			[Address(RVA = "0x12319C4", Offset = "0x12319C4", VA = "0x12319C4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD00", Offset = "0xBDFD00")]
			set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public Dictionary<Interactable, InteractableCollisionInfo> PrevInteractableToCollisionInfos
		{
			[Token(Token = "0x60004BA")]
			[Address(RVA = "0x12319CC", Offset = "0x12319CC", VA = "0x12319CC", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD10", Offset = "0xBDFD10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004BB")]
			[Address(RVA = "0x12319D4", Offset = "0x12319D4", VA = "0x12319D4", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD20", Offset = "0xBDFD20")]
			set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public InteractableToolTags ToolTags
		{
			[Token(Token = "0x60004BC")]
			[Address(RVA = "0x12319DC", Offset = "0x12319DC", VA = "0x12319DC", Slot = "11")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000078")]
		public ToolInputState ToolInputState
		{
			[Token(Token = "0x60004BD")]
			[Address(RVA = "0x12319E4", Offset = "0x12319E4", VA = "0x12319E4", Slot = "12")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000079")]
		public bool IsFarFieldTool
		{
			[Token(Token = "0x60004BE")]
			[Address(RVA = "0x1231A4C", Offset = "0x1231A4C", VA = "0x1231A4C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007A")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60004BF")]
			[Address(RVA = "0x1231A54", Offset = "0x1231A54", VA = "0x1231A54", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD30", Offset = "0xBDFD30")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60004C0")]
			[Address(RVA = "0x1231A60", Offset = "0x1231A60", VA = "0x1231A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD40", Offset = "0xBDFD40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60004C1")]
			[Address(RVA = "0x1231A6C", Offset = "0x1231A6C", VA = "0x1231A6C", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD50", Offset = "0xBDFD50")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60004C2")]
			[Address(RVA = "0x1231A78", Offset = "0x1231A78", VA = "0x1231A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD60", Offset = "0xBDFD60")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public bool EnableState
		{
			[Token(Token = "0x60004C3")]
			[Address(RVA = "0x1231A84", Offset = "0x1231A84", VA = "0x1231A84", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004C4")]
			[Address(RVA = "0x1231AC8", Offset = "0x1231AC8", VA = "0x1231AC8", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x1231B3C", Offset = "0x1231B3C", VA = "0x1231B3C", Slot = "18")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x1231C2C", Offset = "0x1231C2C", VA = "0x1231C2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x1231CC8", Offset = "0x1231CC8", VA = "0x1231CC8")]
		private void Update()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x1231F74", Offset = "0x1231F74", VA = "0x1231F74")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x1232070", Offset = "0x1232070", VA = "0x1232070", Slot = "16")]
		public List<InteractableCollisionInfo> GetIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x12323F8", Offset = "0x12323F8", VA = "0x12323F8")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x123259C", Offset = "0x123259C", VA = "0x123259C")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x12326C4", Offset = "0x12326C4", VA = "0x12326C4")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x12329E4", Offset = "0x12329E4", VA = "0x12329E4")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x1232DDC", Offset = "0x1232DDC", VA = "0x1232DDC", Slot = "17")]
		public void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x1232EC8", Offset = "0x1232EC8", VA = "0x1232EC8", Slot = "19")]
		public void DeFocus()
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x1232F04", Offset = "0x1232F04", VA = "0x1232F04")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40004EB")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40004EC")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA158", Offset = "0xBDA158")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700007D")]
		public bool EnableState
		{
			[Token(Token = "0x60004D1")]
			[Address(RVA = "0x1231AAC", Offset = "0x1231AAC", VA = "0x1231AAC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004D2")]
			[Address(RVA = "0x1231AE4", Offset = "0x1231AE4", VA = "0x1231AE4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0x1233030", Offset = "0x1233030", VA = "0x1233030", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004D4")]
			[Address(RVA = "0x1231F38", Offset = "0x1231F38", VA = "0x1231F38", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60004D6")]
			[Address(RVA = "0x123327C", Offset = "0x123327C", VA = "0x123327C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD70", Offset = "0xBDFD70")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D7")]
			[Address(RVA = "0x1233284", Offset = "0x1233284", VA = "0x1233284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD80", Offset = "0xBDFD80")]
			set
			{
			}
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x1233038", Offset = "0x1233038", VA = "0x1233038")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x1232E18", Offset = "0x1232E18", VA = "0x1232E18", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x123328C", Offset = "0x123328C", VA = "0x123328C")]
		private void Update()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x1233670", Offset = "0x1233670", VA = "0x1233670")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x1233860", Offset = "0x1233860", VA = "0x1233860")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000080")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60004DC")]
			[Address(RVA = "0x133D234", Offset = "0x133D234", VA = "0x133D234")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004DD")]
			[Address(RVA = "0x133D23C", Offset = "0x133D23C", VA = "0x133D23C")]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60004DE")]
			[Address(RVA = "0x133D2C4", Offset = "0x133D2C4", VA = "0x133D2C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004DF")]
			[Address(RVA = "0x133D2CC", Offset = "0x133D2CC", VA = "0x133D2CC")]
			set
			{
			}
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x133D338", Offset = "0x133D338", VA = "0x133D338")]
		private void Start()
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x133D488", Offset = "0x133D488", VA = "0x133D488")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x133D498", Offset = "0x133D498", VA = "0x133D498")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x133D4A8", Offset = "0x133D4A8", VA = "0x133D4A8")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x133B0D0", Offset = "0x133B0D0", VA = "0x133B0D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x133B0D4", Offset = "0x133B0D4", VA = "0x133B0D4")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x133B10C", Offset = "0x133B10C", VA = "0x133B10C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x133B144", Offset = "0x133B144", VA = "0x133B144")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x133B17C", Offset = "0x133B17C", VA = "0x133B17C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x133B1B4", Offset = "0x133B1B4", VA = "0x133B1B4")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x133B1EC", Offset = "0x133B1EC", VA = "0x133B1EC")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x133B224", Offset = "0x133B224", VA = "0x133B224")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x133B29C", Offset = "0x133B29C", VA = "0x133B29C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x133B30C", Offset = "0x133B30C", VA = "0x133B30C")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x133B314", Offset = "0x133B314", VA = "0x133B314")]
		private void Start()
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x133B318", Offset = "0x133B318", VA = "0x133B318")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x133B2D0", Offset = "0x133B2D0", VA = "0x133B2D0")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x133B358", Offset = "0x133B358", VA = "0x133B358")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD85F0", Offset = "0xBD85F0")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700014F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010A4")]
				[Address(RVA = "0x12313A0", Offset = "0x12313A0", VA = "0x12313A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000150")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010A6")]
				[Address(RVA = "0x1231408", Offset = "0x1231408", VA = "0x1231408", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x12310C4", Offset = "0x12310C4", VA = "0x12310C4")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x12311A0", Offset = "0x12311A0", VA = "0x12311A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x12311A4", Offset = "0x12311A4", VA = "0x12311A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010A5")]
			[Address(RVA = "0x12313A8", Offset = "0x12313A8", VA = "0x12313A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004FC")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40004FD")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x1230CB4", Offset = "0x1230CB4", VA = "0x1230CB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x1230D58", Offset = "0x1230D58", VA = "0x1230D58")]
		private void Update()
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x1231000", Offset = "0x1231000", VA = "0x1231000")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x1230F84", Offset = "0x1230F84", VA = "0x1230F84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDFD90", Offset = "0xBDFD90")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x12310F0", Offset = "0x12310F0", VA = "0x12310F0")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002BD")]
		public enum SelectionState
		{
			[Token(Token = "0x4000B8F")]
			Off,
			[Token(Token = "0x4000B90")]
			Selected,
			[Token(Token = "0x4000B91")]
			Highlighted
		}

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000082")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60004F7")]
			[Address(RVA = "0x12338CC", Offset = "0x12338CC", VA = "0x12338CC")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60004F8")]
			[Address(RVA = "0x12338D4", Offset = "0x12338D4", VA = "0x12338D4")]
			set
			{
			}
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x1233A5C", Offset = "0x1233A5C", VA = "0x1233A5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x1233C58", Offset = "0x1233C58", VA = "0x1233C58")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x123395C", Offset = "0x123395C", VA = "0x123395C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x1233D48", Offset = "0x1233D48", VA = "0x1233D48")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002BE")]
		public enum SegmentType
		{
			[Token(Token = "0x4000B93")]
			Straight,
			[Token(Token = "0x4000B94")]
			LeftTurn,
			[Token(Token = "0x4000B95")]
			RightTurn,
			[Token(Token = "0x4000B96")]
			Switch
		}

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000512")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000513")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA238", Offset = "0xBDA238")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000083")]
		public float StartDistance
		{
			[Token(Token = "0x60004FE")]
			[Address(RVA = "0x1234BF0", Offset = "0x1234BF0", VA = "0x1234BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFDF4", Offset = "0xBDFDF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60004FF")]
			[Address(RVA = "0x1234BF8", Offset = "0x1234BF8", VA = "0x1234BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFE04", Offset = "0xBDFE04")]
			set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public float GridSize
		{
			[Token(Token = "0x6000500")]
			[Address(RVA = "0x1234C00", Offset = "0x1234C00", VA = "0x1234C00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000501")]
			[Address(RVA = "0x1234C08", Offset = "0x1234C08", VA = "0x1234C08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public int SubDivCount
		{
			[Token(Token = "0x6000502")]
			[Address(RVA = "0x1234C10", Offset = "0x1234C10", VA = "0x1234C10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000503")]
			[Address(RVA = "0x1234C18", Offset = "0x1234C18", VA = "0x1234C18")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public SegmentType Type
		{
			[Token(Token = "0x6000504")]
			[Address(RVA = "0x1234C20", Offset = "0x1234C20", VA = "0x1234C20")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000087")]
		public Pose EndPose
		{
			[Token(Token = "0x6000505")]
			[Address(RVA = "0x1234C28", Offset = "0x1234C28", VA = "0x1234C28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		public float Radius
		{
			[Token(Token = "0x6000506")]
			[Address(RVA = "0x12350BC", Offset = "0x12350BC", VA = "0x12350BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000089")]
		public float SegmentLength
		{
			[Token(Token = "0x6000508")]
			[Address(RVA = "0x1234C90", Offset = "0x1234C90", VA = "0x1234C90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x12350CC", Offset = "0x12350CC", VA = "0x12350CC")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x12350E4", Offset = "0x12350E4", VA = "0x12350E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x1234CD0", Offset = "0x1234CD0", VA = "0x1234CD0")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x12350E8", Offset = "0x12350E8", VA = "0x12350E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x12350EC", Offset = "0x12350EC", VA = "0x12350EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x1235158", Offset = "0x1235158", VA = "0x1235158")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x1235CE0", Offset = "0x1235CE0", VA = "0x1235CE0")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x123600C", Offset = "0x123600C", VA = "0x123600C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8600", Offset = "0xBD8600")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000151")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010AA")]
				[Address(RVA = "0x1236D34", Offset = "0x1236D34", VA = "0x1236D34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000152")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010AC")]
				[Address(RVA = "0x1236D9C", Offset = "0x1236D9C", VA = "0x1236D9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010A7")]
			[Address(RVA = "0x1236A9C", Offset = "0x1236A9C", VA = "0x1236A9C")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60010A8")]
			[Address(RVA = "0x1236B78", Offset = "0x1236B78", VA = "0x1236B78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x1236B7C", Offset = "0x1236B7C", VA = "0x1236B7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010AB")]
			[Address(RVA = "0x1236D3C", Offset = "0x1236D3C", VA = "0x1236D3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000519")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400051A")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x12360D4", Offset = "0x12360D4", VA = "0x12360D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x1236194", Offset = "0x1236194", VA = "0x1236194")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x1236248", Offset = "0x1236248", VA = "0x1236248")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x1236374", Offset = "0x1236374", VA = "0x1236374")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x12364E4", Offset = "0x12364E4", VA = "0x12364E4")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x123673C", Offset = "0x123673C", VA = "0x123673C")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x12369C8", Offset = "0x12369C8", VA = "0x12369C8")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x1236850", Offset = "0x1236850", VA = "0x1236850")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x1236864", Offset = "0x1236864", VA = "0x1236864")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x1236A20", Offset = "0x1236A20", VA = "0x1236A20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDFE14", Offset = "0xBDFE14")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x1236AC8", Offset = "0x1236AC8", VA = "0x1236AC8")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700008A")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600051B")]
			[Address(RVA = "0x1236DA4", Offset = "0x1236DA4", VA = "0x1236DA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x1236DB4", Offset = "0x1236DB4", VA = "0x1236DB4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x1236DBC", Offset = "0x1236DBC", VA = "0x1236DBC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x1237228", Offset = "0x1237228", VA = "0x1237228")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400052D")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x400052E")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA338", Offset = "0xBDA338")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700008B")]
		public float Distance
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0x1237338", Offset = "0x1237338", VA = "0x1237338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFE78", Offset = "0xBDFE78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000520")]
			[Address(RVA = "0x1237340", Offset = "0x1237340", VA = "0x1237340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFE88", Offset = "0xBDFE88")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public float Scale
		{
			[Token(Token = "0x6000521")]
			[Address(RVA = "0x1237348", Offset = "0x1237348", VA = "0x1237348")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000522")]
			[Address(RVA = "0x1237350", Offset = "0x1237350", VA = "0x1237350")]
			set
			{
			}
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x1236DB8", Offset = "0x1236DB8", VA = "0x1236DB8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x1237358", Offset = "0x1237358", VA = "0x1237358")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x1236E04", Offset = "0x1236E04", VA = "0x1236E04")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x12370DC", Offset = "0x12370DC", VA = "0x12370DC")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000527")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x1237298", Offset = "0x1237298", VA = "0x1237298")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8610", Offset = "0xBD8610")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000153")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010B0")]
				[Address(RVA = "0x1237DF0", Offset = "0x1237DF0", VA = "0x1237DF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000154")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B2")]
				[Address(RVA = "0x1237E58", Offset = "0x1237E58", VA = "0x1237E58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x12379F4", Offset = "0x12379F4", VA = "0x12379F4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x1237B8C", Offset = "0x1237B8C", VA = "0x1237B8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x1237B90", Offset = "0x1237B90", VA = "0x1237B90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x1237DF8", Offset = "0x1237DF8", VA = "0x1237DF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x1237528", Offset = "0x1237528", VA = "0x1237528")]
		private void Awake()
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x1237588", Offset = "0x1237588", VA = "0x1237588")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x1237694", Offset = "0x1237694", VA = "0x1237694")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x1237804", Offset = "0x1237804", VA = "0x1237804")]
		private void Update()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x12376F4", Offset = "0x12376F4", VA = "0x12376F4")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x1237968", Offset = "0x1237968", VA = "0x1237968")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDFE98", Offset = "0xBDFE98")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x1237A20", Offset = "0x1237A20", VA = "0x1237A20")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x1237ACC", Offset = "0x1237ACC", VA = "0x1237ACC")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x1237B2C", Offset = "0x1237B2C", VA = "0x1237B2C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20002C1")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000BA9")]
			Start,
			[Token(Token = "0x4000BAA")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000BAB")]
			Stop
		}

		[Token(Token = "0x20002C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8620", Offset = "0xBD8620")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000155")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010B6")]
				[Address(RVA = "0x1238B10", Offset = "0x1238B10", VA = "0x1238B10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000156")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B8")]
				[Address(RVA = "0x1238B78", Offset = "0x1238B78", VA = "0x1238B78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x1238190", Offset = "0x1238190", VA = "0x1238190")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x12388D4", Offset = "0x12388D4", VA = "0x12388D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x12388D8", Offset = "0x12388D8", VA = "0x12388D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x1238B18", Offset = "0x1238B18", VA = "0x1238B18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000541")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000542")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000543")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000544")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDA398", Offset = "0xBDA398")]
		protected float _initialSpeed;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x1237E60", Offset = "0x1237E60", VA = "0x1237E60")]
		private void Start()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x1237FD0", Offset = "0x1237FD0", VA = "0x1237FD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x1237FDC", Offset = "0x1237FDC", VA = "0x1237FDC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x1238130", Offset = "0x1238130", VA = "0x1238130")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x1237F40", Offset = "0x1237F40", VA = "0x1237F40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDFEFC", Offset = "0xBDFEFC")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x12381BC", Offset = "0x12381BC", VA = "0x12381BC")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x12380CC", Offset = "0x12380CC", VA = "0x12380CC")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x1238408", Offset = "0x1238408", VA = "0x1238408")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x12385CC", Offset = "0x12385CC", VA = "0x12385CC")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x12384C4", Offset = "0x12384C4", VA = "0x12384C4")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x1238688", Offset = "0x1238688", VA = "0x1238688")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x1238710", Offset = "0x1238710", VA = "0x1238710")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x123879C", Offset = "0x123879C", VA = "0x123879C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x1238858", Offset = "0x1238858", VA = "0x1238858")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x1238868", Offset = "0x1238868", VA = "0x1238868")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700008D")]
		public float TrackLength
		{
			[Token(Token = "0x6000542")]
			[Address(RVA = "0x1238B80", Offset = "0x1238B80", VA = "0x1238B80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000543")]
			[Address(RVA = "0x1238B88", Offset = "0x1238B88", VA = "0x1238B88")]
			private set
			{
			}
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x1238B90", Offset = "0x1238B90", VA = "0x1238B90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x12373D8", Offset = "0x12373D8", VA = "0x12373D8")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x1238B94", Offset = "0x1238B94", VA = "0x1238B94")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x1238DA0", Offset = "0x1238DA0", VA = "0x1238DA0")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x1238EBC", Offset = "0x1238EBC", VA = "0x1238EBC")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class Pose
	{
		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x1231884", Offset = "0x1231884", VA = "0x1231884")]
		public Pose()
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x1231930", Offset = "0x1231930", VA = "0x1231930")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8630", Offset = "0xBD8630")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000157")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010BC")]
				[Address(RVA = "0x1239508", Offset = "0x1239508", VA = "0x1239508", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000158")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010BE")]
				[Address(RVA = "0x1239570", Offset = "0x1239570", VA = "0x1239570", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x123917C", Offset = "0x123917C", VA = "0x123917C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x1239304", Offset = "0x1239304", VA = "0x1239304", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x1239308", Offset = "0x1239308", VA = "0x1239308", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x1239510", Offset = "0x1239510", VA = "0x1239510", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8640", Offset = "0xBD8640")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000159")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010C2")]
				[Address(RVA = "0x1239650", Offset = "0x1239650", VA = "0x1239650", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010C4")]
				[Address(RVA = "0x12396B8", Offset = "0x12396B8", VA = "0x12396B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x1239264", Offset = "0x1239264", VA = "0x1239264")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x1239578", Offset = "0x1239578", VA = "0x1239578", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x123957C", Offset = "0x123957C", VA = "0x123957C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x1239658", Offset = "0x1239658", VA = "0x1239658", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000567")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA580", Offset = "0xBDA580")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700008E")]
		public bool IsMoving
		{
			[Token(Token = "0x600054B")]
			[Address(RVA = "0x1238ED8", Offset = "0x1238ED8", VA = "0x1238ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFF60", Offset = "0xBDFF60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600054C")]
			[Address(RVA = "0x1238EE0", Offset = "0x1238EE0", VA = "0x1238EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFF70", Offset = "0xBDFF70")]
			private set
			{
			}
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x1238EEC", Offset = "0x1238EEC", VA = "0x1238EEC")]
		private void Start()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x1238F28", Offset = "0x1238F28", VA = "0x1238F28")]
		private void Update()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x123907C", Offset = "0x123907C", VA = "0x123907C")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x12390F0", Offset = "0x12390F0", VA = "0x12390F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDFF80", Offset = "0xBDFF80")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0x12391A8", Offset = "0x12391A8", VA = "0x12391A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDFFE4", Offset = "0xBDFFE4")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x1239290", Offset = "0x1239290", VA = "0x1239290")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x12392FC", Offset = "0x12392FC", VA = "0x12392FC")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x12396C0", Offset = "0x12396C0", VA = "0x12396C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x1239738", Offset = "0x1239738", VA = "0x1239738")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x12397F0", Offset = "0x12397F0", VA = "0x12397F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x12398F0", Offset = "0x12398F0", VA = "0x12398F0")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x1239970", Offset = "0x1239970", VA = "0x1239970")]
		private void Update()
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x1239AD4", Offset = "0x1239AD4", VA = "0x1239AD4")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000578")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000579")]
		EUDT_OverlayQuad,
		[Token(Token = "0x400057A")]
		EUDT_None,
		[Token(Token = "0x400057B")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20000F2")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8650", Offset = "0xBD8650")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700015B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010C8")]
				[Address(RVA = "0x1230C44", Offset = "0x1230C44", VA = "0x1230C44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010CA")]
				[Address(RVA = "0x1230CAC", Offset = "0x1230CAC", VA = "0x1230CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x1230298", Offset = "0x1230298", VA = "0x1230298")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x12309DC", Offset = "0x12309DC", VA = "0x12309DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x12309E0", Offset = "0x12309E0", VA = "0x12309E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x1230C4C", Offset = "0x1230C4C", VA = "0x1230C4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400057D")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400057E")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400057F")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDA5C0", Offset = "0xBDA5C0")]
		public GameObject mainCamera;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDA5F8", Offset = "0xBDA5F8")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x122F538", Offset = "0x122F538", VA = "0x122F538")]
		private void Start()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x122FD9C", Offset = "0x122FD9C", VA = "0x122FD9C")]
		private void Update()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x122FEDC", Offset = "0x122FEDC", VA = "0x122FEDC")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x1230010", Offset = "0x1230010", VA = "0x1230010")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x1230144", Offset = "0x1230144", VA = "0x1230144")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x122FEB0", Offset = "0x122FEB0", VA = "0x122FEB0")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x123021C", Offset = "0x123021C", VA = "0x123021C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE0048", Offset = "0xBE0048")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x12302C4", Offset = "0x12302C4", VA = "0x12302C4")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x122F8BC", Offset = "0x122F8BC", VA = "0x122F8BC")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x12303EC", Offset = "0x12303EC", VA = "0x12303EC")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x12302F8", Offset = "0x12302F8", VA = "0x12302F8")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x1230788", Offset = "0x1230788", VA = "0x1230788")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x1230864", Offset = "0x1230864", VA = "0x1230864")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x12308EC", Offset = "0x12308EC", VA = "0x12308EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE00AC", Offset = "0xBE00AC")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x123093C", Offset = "0x123093C", VA = "0x123093C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE00BC", Offset = "0xBE00BC")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x123098C", Offset = "0x123098C", VA = "0x123098C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE00CC", Offset = "0xBE00CC")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD8044", Offset = "0xBD8044")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8660", Offset = "0xBD8660")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x15818F0", Offset = "0x15818F0", VA = "0x15818F0")]
			public <>c()
			{
			}

			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x15818F8", Offset = "0x15818F8", VA = "0x15818F8")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000594")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000595")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000596")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000597")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000598")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000599")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400059A")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400059B")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400059C")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400059D")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400059E")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x1580BD4", Offset = "0x1580BD4", VA = "0x1580BD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x1580C34", Offset = "0x1580C34", VA = "0x1580C34")]
		private void Start()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x158105C", Offset = "0x158105C", VA = "0x158105C")]
		private void Update()
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x1581168", Offset = "0x1581168", VA = "0x1581168")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x15814A0", Offset = "0x15814A0", VA = "0x15814A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x1581608", Offset = "0x1581608", VA = "0x1581608")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x1581754", Offset = "0x1581754", VA = "0x1581754")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x1581204", Offset = "0x1581204", VA = "0x1581204")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x15812A4", Offset = "0x15812A4", VA = "0x15812A4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x1580EB0", Offset = "0x1580EB0", VA = "0x1580EB0")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x1581870", Offset = "0x1581870", VA = "0x1581870")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public enum HandPoseId
	{
		[Token(Token = "0x40005B1")]
		Default,
		[Token(Token = "0x40005B2")]
		Generic,
		[Token(Token = "0x40005B3")]
		PingPongBall,
		[Token(Token = "0x40005B4")]
		Controller
	}
	[Token(Token = "0x20000F5")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700008F")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000575")]
			[Address(RVA = "0x1581924", Offset = "0x1581924", VA = "0x1581924")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000090")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000576")]
			[Address(RVA = "0x158192C", Offset = "0x158192C", VA = "0x158192C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000091")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000577")]
			[Address(RVA = "0x1581934", Offset = "0x1581934", VA = "0x1581934")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x158193C", Offset = "0x158193C", VA = "0x158193C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x1581944", Offset = "0x1581944", VA = "0x1581944")]
		private void Update()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x1581BB8", Offset = "0x1581BB8", VA = "0x1581BB8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x1581C14", Offset = "0x1581C14", VA = "0x1581C14")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x1581C58", Offset = "0x1581C58", VA = "0x1581C58")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20000F7")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40005BC")]
		TRIANGLES,
		[Token(Token = "0x40005BD")]
		QUADS
	}
	[Token(Token = "0x20000F8")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40005BF")]
		ABSORPTION,
		[Token(Token = "0x40005C0")]
		TRANSMISSION,
		[Token(Token = "0x40005C1")]
		SCATTERING
	}
	[Token(Token = "0x20000F9")]
	public struct MeshGroup
	{
		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x20000FA")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x1D051D0", Offset = "0x1D051D0", VA = "0x1D051D0")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x1D052B8", Offset = "0x1D052B8", VA = "0x1D052B8")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x1D053C0", Offset = "0x1D053C0", VA = "0x1D053C0")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x1D054C8", Offset = "0x1D054C8", VA = "0x1D054C8")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x1D05518", Offset = "0x1D05518", VA = "0x1D05518", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public enum AbuseReportType
	{
		[Token(Token = "0x40005C8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA6B0", Offset = "0xBDA6B0")]
		Unknown,
		[Token(Token = "0x40005C9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA6E8", Offset = "0xBDA6E8")]
		Object,
		[Token(Token = "0x40005CA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA720", Offset = "0xBDA720")]
		User
	}
	[Token(Token = "0x20000FC")]
	public enum AchievementType
	{
		[Token(Token = "0x40005CC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA758", Offset = "0xBDA758")]
		Unknown,
		[Token(Token = "0x40005CD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA790", Offset = "0xBDA790")]
		Simple,
		[Token(Token = "0x40005CE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA7C8", Offset = "0xBDA7C8")]
		Bitfield,
		[Token(Token = "0x40005CF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA800", Offset = "0xBDA800")]
		Count
	}
	[Token(Token = "0x20000FD")]
	public class AndroidPlatform
	{
		[Token(Token = "0x6000582")]
		[Address(RVA = "0x1D06768", Offset = "0x1D06768", VA = "0x1D06768")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x1D068B4", Offset = "0x1D068B4", VA = "0x1D068B4")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x1D06A34", Offset = "0x1D06A34", VA = "0x1D06A34")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class ApplicationOptions
	{
		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x1D06F5C", Offset = "0x1D06F5C", VA = "0x1D06F5C")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x1D07044", Offset = "0x1D07044", VA = "0x1D07044")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x1D06D04", Offset = "0x1D06D04", VA = "0x1D06D04")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x1D07168", Offset = "0x1D07168", VA = "0x1D07168", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class CAPI
	{
		[Token(Token = "0x20002C7")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x4000BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4000BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x4000BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x4000BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x4000BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x13CC690", Offset = "0x13CC690", VA = "0x13CC690")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x60010CF")]
			[Address(RVA = "0x13CC6D4", Offset = "0x13CC6D4", VA = "0x13CC6D4")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x13CC71C", Offset = "0x13CC71C", VA = "0x13CC71C")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x20002C8")]
		public struct ovrNetSyncVec3
		{
			[Token(Token = "0x4000BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4000BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4000BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float z;
		}

		[Token(Token = "0x20002C9")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x4000BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4000BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x4000BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x4000BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x13CC76C", Offset = "0x13CC76C", VA = "0x13CC76C")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x20002CA")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x4000BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x4000BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x4000BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x4000BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x20002CB")]
		public struct OculusInitParams
		{
			[Token(Token = "0x4000BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x4000BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x4000BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x4000BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x4000BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBD8670", Offset = "0xBD8670")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x40005D1")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x40005D3")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x1D08850", Offset = "0x1D08850", VA = "0x1D08850")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x1D08A10", Offset = "0x1D08A10", VA = "0x1D08A10")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x1D08F00", Offset = "0x1D08F00", VA = "0x1D08F00")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x1D08FBC", Offset = "0x1D08FBC", VA = "0x1D08FBC")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x1D092C4", Offset = "0x1D092C4", VA = "0x1D092C4")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x1D093DC", Offset = "0x1D093DC", VA = "0x1D093DC")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x1D09468", Offset = "0x1D09468", VA = "0x1D09468")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x1D094D8", Offset = "0x1D094D8", VA = "0x1D094D8")]
		public static ulong DateTimeToNative(DateTime dt)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x1D095D4", Offset = "0x1D095D4", VA = "0x1D095D4")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x1D096B8", Offset = "0x1D096B8", VA = "0x1D096B8")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x1D0975C", Offset = "0x1D0975C", VA = "0x1D0975C")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6000594")]
		[Address(RVA = "0x1D06818", Offset = "0x1D06818", VA = "0x1D06818")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x6000595")]
		[Address(RVA = "0x1D098CC", Offset = "0x1D098CC", VA = "0x1D098CC")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000596")]
		[Address(RVA = "0x1D0699C", Offset = "0x1D0699C", VA = "0x1D0699C")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x6000597")]
		[Address(RVA = "0x1D0994C", Offset = "0x1D0994C", VA = "0x1D0994C")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000598")]
		[Address(RVA = "0x1D099F8", Offset = "0x1D099F8", VA = "0x1D099F8")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x6000599")]
		[Address(RVA = "0x1D09ADC", Offset = "0x1D09ADC", VA = "0x1D09ADC")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x600059A")]
		[Address(RVA = "0x1D09B88", Offset = "0x1D09B88", VA = "0x1D09B88")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x600059B")]
		[Address(RVA = "0x1D09C34", Offset = "0x1D09C34", VA = "0x1D09C34")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x600059C")]
		[Address(RVA = "0x1D09CDC", Offset = "0x1D09CDC", VA = "0x1D09CDC")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x1D09D78", Offset = "0x1D09D78", VA = "0x1D09D78")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600059E")]
		[Address(RVA = "0x1D09DD8", Offset = "0x1D09DD8", VA = "0x1D09DD8")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1D09E4C", Offset = "0x1D09E4C", VA = "0x1D09E4C")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1D09EC0", Offset = "0x1D09EC0", VA = "0x1D09EC0")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1D09F40", Offset = "0x1D09F40", VA = "0x1D09F40")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x1D09FC0", Offset = "0x1D09FC0", VA = "0x1D09FC0")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x1D0A034", Offset = "0x1D0A034", VA = "0x1D0A034")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x1D0A0B4", Offset = "0x1D0A0B4", VA = "0x1D0A0B4")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x1D0A128", Offset = "0x1D0A128", VA = "0x1D0A128")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x1D0A1A8", Offset = "0x1D0A1A8", VA = "0x1D0A1A8")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x1D0A248", Offset = "0x1D0A248", VA = "0x1D0A248")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x1D0A2BC", Offset = "0x1D0A2BC", VA = "0x1D0A2BC")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x1D0A33C", Offset = "0x1D0A33C", VA = "0x1D0A33C")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x1D0A3BC", Offset = "0x1D0A3BC", VA = "0x1D0A3BC")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x1D0A43C", Offset = "0x1D0A43C", VA = "0x1D0A43C")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x1D06548", Offset = "0x1D06548", VA = "0x1D06548")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x1D0A4AC", Offset = "0x1D0A4AC", VA = "0x1D0A4AC")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x1D0A51C", Offset = "0x1D0A51C", VA = "0x1D0A51C")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x1D0A5A0", Offset = "0x1D0A5A0", VA = "0x1D0A5A0")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x1D0A634", Offset = "0x1D0A634", VA = "0x1D0A634")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x1D0A938", Offset = "0x1D0A938", VA = "0x1D0A938")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x1D06E70", Offset = "0x1D06E70", VA = "0x1D06E70")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x1D0A9D8", Offset = "0x1D0A9D8", VA = "0x1D0A9D8")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x1D0AACC", Offset = "0x1D0AACC", VA = "0x1D0AACC")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x1D0AC28", Offset = "0x1D0AC28", VA = "0x1D0AC28")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x1D0ACD0", Offset = "0x1D0ACD0", VA = "0x1D0ACD0")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x1D0AD4C", Offset = "0x1D0AD4C", VA = "0x1D0AD4C")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x1D0ADB4", Offset = "0x1D0ADB4", VA = "0x1D0ADB4")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x1D0AE34", Offset = "0x1D0AE34", VA = "0x1D0AE34")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x1D0AED4", Offset = "0x1D0AED4", VA = "0x1D0AED4")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x1D0AF74", Offset = "0x1D0AF74", VA = "0x1D0AF74")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x1D0B014", Offset = "0x1D0B014", VA = "0x1D0B014")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x1D0B0B4", Offset = "0x1D0B0B4", VA = "0x1D0B0B4")]
		public static extern bool ovr_NetSync_GetListenerPosition(long connection_id, ulong sessionId, ref ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x1D0B154", Offset = "0x1D0B154", VA = "0x1D0B154")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamFloatPCM(long connection_id, ulong sessionId, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x1D0B204", Offset = "0x1D0B204", VA = "0x1D0B204")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamInt16PCM(long connection_id, ulong session_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x1D0B2B4", Offset = "0x1D0B2B4", VA = "0x1D0B2B4")]
		public static extern UIntPtr ovr_NetSync_GetPcmBufferMaxSamples();

		[PreserveSig]
		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x1D0B328", Offset = "0x1D0B328", VA = "0x1D0B328")]
		public static extern void ovr_NetSync_SetListenerPosition(long connection_id, ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x1D0B3D0", Offset = "0x1D0B3D0", VA = "0x1D0B3D0")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x1D0B450", Offset = "0x1D0B450", VA = "0x1D0B450")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x1D0B4CC", Offset = "0x1D0B4CC", VA = "0x1D0B4CC")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x1D0B54C", Offset = "0x1D0B54C", VA = "0x1D0B54C")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x1D0B5BC", Offset = "0x1D0B5BC", VA = "0x1D0B5BC")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x1D0B63C", Offset = "0x1D0B63C", VA = "0x1D0B63C")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x1D0B6C4", Offset = "0x1D0B6C4", VA = "0x1D0B6C4")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x1D0B744", Offset = "0x1D0B744", VA = "0x1D0B744")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x1D0B7B8", Offset = "0x1D0B7B8", VA = "0x1D0B7B8")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x1D0B870", Offset = "0x1D0B870", VA = "0x1D0B870")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x1D0B918", Offset = "0x1D0B918", VA = "0x1D0B918")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x1D0B98C", Offset = "0x1D0B98C", VA = "0x1D0B98C")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x1D0BA00", Offset = "0x1D0BA00", VA = "0x1D0BA00")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x1D0BA7C", Offset = "0x1D0BA7C", VA = "0x1D0BA7C")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x1D0BAF0", Offset = "0x1D0BAF0", VA = "0x1D0BAF0")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x1D0BB70", Offset = "0x1D0BB70", VA = "0x1D0BB70")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x1D0BBF0", Offset = "0x1D0BBF0", VA = "0x1D0BBF0")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x1D0BC70", Offset = "0x1D0BC70", VA = "0x1D0BC70")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x1D0BCE4", Offset = "0x1D0BCE4", VA = "0x1D0BCE4")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x1D0BD84", Offset = "0x1D0BD84", VA = "0x1D0BD84")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x1D0BE24", Offset = "0x1D0BE24", VA = "0x1D0BE24")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x1D0BEA4", Offset = "0x1D0BEA4", VA = "0x1D0BEA4")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x1D0BF5C", Offset = "0x1D0BF5C", VA = "0x1D0BF5C")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x1D0C014", Offset = "0x1D0C014", VA = "0x1D0C014")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x1D0C094", Offset = "0x1D0C094", VA = "0x1D0C094")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x1D0C114", Offset = "0x1D0C114", VA = "0x1D0C114")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x1D0C1A4", Offset = "0x1D0C1A4", VA = "0x1D0C1A4")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x1D0C218", Offset = "0x1D0C218", VA = "0x1D0C218")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x1D0C28C", Offset = "0x1D0C28C", VA = "0x1D0C28C")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x1D0C30C", Offset = "0x1D0C30C", VA = "0x1D0C30C")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x1D0C38C", Offset = "0x1D0C38C", VA = "0x1D0C38C")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x1D0C40C", Offset = "0x1D0C40C", VA = "0x1D0C40C")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x1D0C48C", Offset = "0x1D0C48C", VA = "0x1D0C48C")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x1D0576C", Offset = "0x1D0576C", VA = "0x1D0576C")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x1D0C50C", Offset = "0x1D0C50C", VA = "0x1D0C50C")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x1D05944", Offset = "0x1D05944", VA = "0x1D05944")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x1D0C59C", Offset = "0x1D0C59C", VA = "0x1D0C59C")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x1D05B20", Offset = "0x1D05B20", VA = "0x1D05B20")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x1D05C9C", Offset = "0x1D05C9C", VA = "0x1D05C9C")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x1D05E3C", Offset = "0x1D05E3C", VA = "0x1D05E3C")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x1D060BC", Offset = "0x1D060BC", VA = "0x1D060BC")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x1D06328", Offset = "0x1D06328", VA = "0x1D06328")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x1D0C62C", Offset = "0x1D0C62C", VA = "0x1D0C62C")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x1D0C6AC", Offset = "0x1D0C6AC", VA = "0x1D0C6AC")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x1D0C73C", Offset = "0x1D0C73C", VA = "0x1D0C73C")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x1D06B44", Offset = "0x1D06B44", VA = "0x1D06B44")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x1D06D54", Offset = "0x1D06D54", VA = "0x1D06D54")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x1D0C7B0", Offset = "0x1D0C7B0", VA = "0x1D0C7B0")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x1D0C824", Offset = "0x1D0C824", VA = "0x1D0C824")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x1D0C898", Offset = "0x1D0C898", VA = "0x1D0C898")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x1D0C940", Offset = "0x1D0C940", VA = "0x1D0C940")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x1D073B4", Offset = "0x1D073B4", VA = "0x1D073B4")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x1D0754C", Offset = "0x1D0754C", VA = "0x1D0754C")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x1D076E4", Offset = "0x1D076E4", VA = "0x1D076E4")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x1D0C9C0", Offset = "0x1D0C9C0", VA = "0x1D0C9C0")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x1D078A4", Offset = "0x1D078A4", VA = "0x1D078A4")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x1D07A3C", Offset = "0x1D07A3C", VA = "0x1D07A3C")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x1D07BD4", Offset = "0x1D07BD4", VA = "0x1D07BD4")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x1D0CA40", Offset = "0x1D0CA40", VA = "0x1D0CA40")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x1D07D94", Offset = "0x1D07D94", VA = "0x1D07D94")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x1D07F2C", Offset = "0x1D07F2C", VA = "0x1D07F2C")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x1D080C4", Offset = "0x1D080C4", VA = "0x1D080C4")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000600")]
		[Address(RVA = "0x1D0CAC0", Offset = "0x1D0CAC0", VA = "0x1D0CAC0")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000601")]
		[Address(RVA = "0x1D08274", Offset = "0x1D08274", VA = "0x1D08274")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6000602")]
		[Address(RVA = "0x1D08400", Offset = "0x1D08400", VA = "0x1D08400")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000603")]
		[Address(RVA = "0x1D08598", Offset = "0x1D08598", VA = "0x1D08598")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x1D08730", Offset = "0x1D08730", VA = "0x1D08730")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x1D0CB40", Offset = "0x1D0CB40", VA = "0x1D0CB40")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x1D0CBC0", Offset = "0x1D0CBC0", VA = "0x1D0CBC0")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000607")]
		[Address(RVA = "0x1D0CC94", Offset = "0x1D0CC94", VA = "0x1D0CC94")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6000608")]
		[Address(RVA = "0x1D0CD24", Offset = "0x1D0CD24", VA = "0x1D0CD24")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6000609")]
		[Address(RVA = "0x1D0CDD4", Offset = "0x1D0CDD4", VA = "0x1D0CDD4")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x600060A")]
		[Address(RVA = "0x1D0CE74", Offset = "0x1D0CE74", VA = "0x1D0CE74")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x1D0CF24", Offset = "0x1D0CF24", VA = "0x1D0CF24")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600060C")]
		[Address(RVA = "0x1D0CFF8", Offset = "0x1D0CFF8", VA = "0x1D0CFF8")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x1D0D088", Offset = "0x1D0D088", VA = "0x1D0D088")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x1D0D15C", Offset = "0x1D0D15C", VA = "0x1D0D15C")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x1D0D1EC", Offset = "0x1D0D1EC", VA = "0x1D0D1EC")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000610")]
		[Address(RVA = "0x1D0D294", Offset = "0x1D0D294", VA = "0x1D0D294")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x1D0D314", Offset = "0x1D0D314", VA = "0x1D0D314")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000612")]
		[Address(RVA = "0x1D0D3E8", Offset = "0x1D0D3E8", VA = "0x1D0D3E8")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x1D0D478", Offset = "0x1D0D478", VA = "0x1D0D478")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000614")]
		[Address(RVA = "0x1D0D520", Offset = "0x1D0D520", VA = "0x1D0D520")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x1D0D5A0", Offset = "0x1D0D5A0", VA = "0x1D0D5A0")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000616")]
		[Address(RVA = "0x1D0D674", Offset = "0x1D0D674", VA = "0x1D0D674")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x1D0D704", Offset = "0x1D0D704", VA = "0x1D0D704")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000618")]
		[Address(RVA = "0x1D0D7F8", Offset = "0x1D0D7F8", VA = "0x1D0D7F8")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x1D0D890", Offset = "0x1D0D890", VA = "0x1D0D890")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600061A")]
		[Address(RVA = "0x1D0D984", Offset = "0x1D0D984", VA = "0x1D0D984")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x1D0DA1C", Offset = "0x1D0DA1C", VA = "0x1D0DA1C")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600061C")]
		[Address(RVA = "0x1D0DB38", Offset = "0x1D0DB38", VA = "0x1D0DB38")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x600061D")]
		[Address(RVA = "0x1D0DC00", Offset = "0x1D0DC00", VA = "0x1D0DC00")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x600061E")]
		[Address(RVA = "0x1D0DC74", Offset = "0x1D0DC74", VA = "0x1D0DC74")]
		public static extern ulong ovr_Colocation_GetCurrentMapUuid();

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x1D0DCE8", Offset = "0x1D0DCE8", VA = "0x1D0DCE8")]
		public static ulong ovr_Colocation_RequestMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000620")]
		[Address(RVA = "0x1D0DD90", Offset = "0x1D0DD90", VA = "0x1D0DD90")]
		private static extern ulong ovr_Colocation_RequestMap_Native(IntPtr uuid);

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x1D0DE10", Offset = "0x1D0DE10", VA = "0x1D0DE10")]
		public static ulong ovr_Colocation_ShareMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000622")]
		[Address(RVA = "0x1D0DEB8", Offset = "0x1D0DEB8", VA = "0x1D0DEB8")]
		private static extern ulong ovr_Colocation_ShareMap_Native(IntPtr uuid);

		[PreserveSig]
		[Token(Token = "0x6000623")]
		[Address(RVA = "0x1D0DF38", Offset = "0x1D0DF38", VA = "0x1D0DF38")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x1D0DFAC", Offset = "0x1D0DFAC", VA = "0x1D0DFAC")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000625")]
		[Address(RVA = "0x1D0E054", Offset = "0x1D0E054", VA = "0x1D0E054")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x1D0E0D4", Offset = "0x1D0E0D4", VA = "0x1D0E0D4")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000627")]
		[Address(RVA = "0x1D0E17C", Offset = "0x1D0E17C", VA = "0x1D0E17C")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x1D0E1F8", Offset = "0x1D0E1F8", VA = "0x1D0E1F8")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000629")]
		[Address(RVA = "0x1D0E2A0", Offset = "0x1D0E2A0", VA = "0x1D0E2A0")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x1D0E320", Offset = "0x1D0E320", VA = "0x1D0E320")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600062B")]
		[Address(RVA = "0x1D0E3F4", Offset = "0x1D0E3F4", VA = "0x1D0E3F4")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x1D0E484", Offset = "0x1D0E484", VA = "0x1D0E484")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x1D0E5E0", Offset = "0x1D0E5E0", VA = "0x1D0E5E0")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x1D0E76C", Offset = "0x1D0E76C", VA = "0x1D0E76C")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x1D0E814", Offset = "0x1D0E814", VA = "0x1D0E814")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x1D0E894", Offset = "0x1D0E894", VA = "0x1D0E894")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x1D0E93C", Offset = "0x1D0E93C", VA = "0x1D0E93C")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000632")]
		[Address(RVA = "0x1D0E9BC", Offset = "0x1D0E9BC", VA = "0x1D0E9BC")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6000633")]
		[Address(RVA = "0x1D0EB10", Offset = "0x1D0EB10", VA = "0x1D0EB10")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[PreserveSig]
		[Token(Token = "0x6000634")]
		[Address(RVA = "0x1D0EB84", Offset = "0x1D0EB84", VA = "0x1D0EB84")]
		public static extern ulong ovr_IAP_GetViewerPurchasesDurableCache();

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x1D0EBF8", Offset = "0x1D0EBF8", VA = "0x1D0EBF8")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x1D0ECA0", Offset = "0x1D0ECA0", VA = "0x1D0ECA0")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x1D0ED20", Offset = "0x1D0ED20", VA = "0x1D0ED20")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x1D0ED94", Offset = "0x1D0ED94", VA = "0x1D0ED94")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000639")]
		[Address(RVA = "0x1D0EE3C", Offset = "0x1D0EE3C", VA = "0x1D0EE3C")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x1D0EEBC", Offset = "0x1D0EEBC", VA = "0x1D0EEBC")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600063B")]
		[Address(RVA = "0x1D0EF8C", Offset = "0x1D0EF8C", VA = "0x1D0EF8C")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x1D0F034", Offset = "0x1D0F034", VA = "0x1D0F034")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600063D")]
		[Address(RVA = "0x1D0F0F4", Offset = "0x1D0F0F4", VA = "0x1D0F0F4")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x600063E")]
		[Address(RVA = "0x1D0F18C", Offset = "0x1D0F18C", VA = "0x1D0F18C")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600063F")]
		[Address(RVA = "0x1D0F20C", Offset = "0x1D0F20C", VA = "0x1D0F20C")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x1D0F28C", Offset = "0x1D0F28C", VA = "0x1D0F28C")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000641")]
		[Address(RVA = "0x1D0F364", Offset = "0x1D0F364", VA = "0x1D0F364")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6000642")]
		[Address(RVA = "0x1D0F41C", Offset = "0x1D0F41C", VA = "0x1D0F41C")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x1D0F490", Offset = "0x1D0F490", VA = "0x1D0F490")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000644")]
		[Address(RVA = "0x1D0F538", Offset = "0x1D0F538", VA = "0x1D0F538")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6000645")]
		[Address(RVA = "0x1D0F5B8", Offset = "0x1D0F5B8", VA = "0x1D0F5B8")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1D0F62C", Offset = "0x1D0F62C", VA = "0x1D0F62C")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1D0F6A0", Offset = "0x1D0F6A0", VA = "0x1D0F6A0")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000648")]
		[Address(RVA = "0x1D0F714", Offset = "0x1D0F714", VA = "0x1D0F714")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000649")]
		[Address(RVA = "0x1D0F788", Offset = "0x1D0F788", VA = "0x1D0F788")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x600064A")]
		[Address(RVA = "0x1D0F7FC", Offset = "0x1D0F7FC", VA = "0x1D0F7FC")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x1D0F87C", Offset = "0x1D0F87C", VA = "0x1D0F87C")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600064C")]
		[Address(RVA = "0x1D0F934", Offset = "0x1D0F934", VA = "0x1D0F934")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x1D0F9C4", Offset = "0x1D0F9C4", VA = "0x1D0F9C4")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600064E")]
		[Address(RVA = "0x1D0FA7C", Offset = "0x1D0FA7C", VA = "0x1D0FA7C")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x1D0FB0C", Offset = "0x1D0FB0C", VA = "0x1D0FB0C")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000650")]
		[Address(RVA = "0x1D0FBE0", Offset = "0x1D0FBE0", VA = "0x1D0FBE0")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6000651")]
		[Address(RVA = "0x1D0FC70", Offset = "0x1D0FC70", VA = "0x1D0FC70")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x1D0FCE4", Offset = "0x1D0FCE4", VA = "0x1D0FCE4")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000653")]
		[Address(RVA = "0x1D0FDB4", Offset = "0x1D0FDB4", VA = "0x1D0FDB4")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x1D0FE5C", Offset = "0x1D0FE5C", VA = "0x1D0FE5C")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000655")]
		[Address(RVA = "0x1D0FF14", Offset = "0x1D0FF14", VA = "0x1D0FF14")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x1D0FFA4", Offset = "0x1D0FFA4", VA = "0x1D0FFA4")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000657")]
		[Address(RVA = "0x1D10064", Offset = "0x1D10064", VA = "0x1D10064")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x1D100FC", Offset = "0x1D100FC", VA = "0x1D100FC")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000659")]
		[Address(RVA = "0x1D101B4", Offset = "0x1D101B4", VA = "0x1D101B4")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x1D10244", Offset = "0x1D10244", VA = "0x1D10244")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600065B")]
		[Address(RVA = "0x1D102FC", Offset = "0x1D102FC", VA = "0x1D102FC")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x1D1038C", Offset = "0x1D1038C", VA = "0x1D1038C")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600065D")]
		[Address(RVA = "0x1D10444", Offset = "0x1D10444", VA = "0x1D10444")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x600065E")]
		[Address(RVA = "0x1D104D4", Offset = "0x1D104D4", VA = "0x1D104D4")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x600065F")]
		[Address(RVA = "0x1D10564", Offset = "0x1D10564", VA = "0x1D10564")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000660")]
		[Address(RVA = "0x1D105F4", Offset = "0x1D105F4", VA = "0x1D105F4")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1D10668", Offset = "0x1D10668", VA = "0x1D10668")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000662")]
		[Address(RVA = "0x1D10728", Offset = "0x1D10728", VA = "0x1D10728")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6000663")]
		[Address(RVA = "0x1D107C0", Offset = "0x1D107C0", VA = "0x1D107C0")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x1D10850", Offset = "0x1D10850", VA = "0x1D10850")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000665")]
		[Address(RVA = "0x1D10904", Offset = "0x1D10904", VA = "0x1D10904")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000666")]
		[Address(RVA = "0x1D10A60", Offset = "0x1D10A60", VA = "0x1D10A60")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x1D10AE0", Offset = "0x1D10AE0", VA = "0x1D10AE0")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000668")]
		[Address(RVA = "0x1D10BBC", Offset = "0x1D10BBC", VA = "0x1D10BBC")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6000669")]
		[Address(RVA = "0x1D10C54", Offset = "0x1D10C54", VA = "0x1D10C54")]
		public static extern ulong ovr_NetSync_Connect(IntPtr connect_options);

		[PreserveSig]
		[Token(Token = "0x600066A")]
		[Address(RVA = "0x1D10CD4", Offset = "0x1D10CD4", VA = "0x1D10CD4")]
		public static extern ulong ovr_NetSync_Disconnect(long connection_id);

		[PreserveSig]
		[Token(Token = "0x600066B")]
		[Address(RVA = "0x1D10D54", Offset = "0x1D10D54", VA = "0x1D10D54")]
		public static extern ulong ovr_NetSync_GetSessions(long connection_id);

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x1D10DD4", Offset = "0x1D10DD4", VA = "0x1D10DD4")]
		public static ulong ovr_NetSync_SetVoipGroup(long connection_id, string group_id)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600066D")]
		[Address(RVA = "0x1D10E90", Offset = "0x1D10E90", VA = "0x1D10E90")]
		private static extern ulong ovr_NetSync_SetVoipGroup_Native(long connection_id, IntPtr group_id);

		[PreserveSig]
		[Token(Token = "0x600066E")]
		[Address(RVA = "0x1D10F20", Offset = "0x1D10F20", VA = "0x1D10F20")]
		public static extern ulong ovr_NetSync_SetVoipSessionMuted(long connection_id, ulong session_id, bool muted);

		[PreserveSig]
		[Token(Token = "0x600066F")]
		[Address(RVA = "0x1D10FB8", Offset = "0x1D10FB8", VA = "0x1D10FB8")]
		public static extern ulong ovr_NetSync_SetVoipStreamMode(long connection_id, ulong sessionId, NetSyncVoipStreamMode streamMode);

		[PreserveSig]
		[Token(Token = "0x6000670")]
		[Address(RVA = "0x1D11050", Offset = "0x1D11050", VA = "0x1D11050")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6000671")]
		[Address(RVA = "0x1D110C4", Offset = "0x1D110C4", VA = "0x1D110C4")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6000672")]
		[Address(RVA = "0x1D11144", Offset = "0x1D11144", VA = "0x1D11144")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6000673")]
		[Address(RVA = "0x1D111B8", Offset = "0x1D111B8", VA = "0x1D111B8")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6000674")]
		[Address(RVA = "0x1D11248", Offset = "0x1D11248", VA = "0x1D11248")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000675")]
		[Address(RVA = "0x1D112C8", Offset = "0x1D112C8", VA = "0x1D112C8")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000676")]
		[Address(RVA = "0x1D1133C", Offset = "0x1D1133C", VA = "0x1D1133C")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000677")]
		[Address(RVA = "0x1D113BC", Offset = "0x1D113BC", VA = "0x1D113BC")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000678")]
		[Address(RVA = "0x1D11448", Offset = "0x1D11448", VA = "0x1D11448")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000679")]
		[Address(RVA = "0x1D114C8", Offset = "0x1D114C8", VA = "0x1D114C8")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x600067A")]
		[Address(RVA = "0x1D11548", Offset = "0x1D11548", VA = "0x1D11548")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x600067B")]
		[Address(RVA = "0x1D115BC", Offset = "0x1D115BC", VA = "0x1D115BC")]
		public static extern ulong ovr_RichPresence_GetDestinations();

		[PreserveSig]
		[Token(Token = "0x600067C")]
		[Address(RVA = "0x1D11630", Offset = "0x1D11630", VA = "0x1D11630")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x600067D")]
		[Address(RVA = "0x1D116B0", Offset = "0x1D116B0", VA = "0x1D116B0")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x600067E")]
		[Address(RVA = "0x1D11748", Offset = "0x1D11748", VA = "0x1D11748")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x600067F")]
		[Address(RVA = "0x1D117E0", Offset = "0x1D117E0", VA = "0x1D117E0")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x1D11860", Offset = "0x1D11860", VA = "0x1D11860")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x1D118D4", Offset = "0x1D118D4", VA = "0x1D118D4")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x1D11954", Offset = "0x1D11954", VA = "0x1D11954")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x1D119C8", Offset = "0x1D119C8", VA = "0x1D119C8")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x1D11A48", Offset = "0x1D11A48", VA = "0x1D11A48")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x1D11ABC", Offset = "0x1D11ABC", VA = "0x1D11ABC")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x1D11B3C", Offset = "0x1D11B3C", VA = "0x1D11B3C")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000687")]
		[Address(RVA = "0x1D11BF8", Offset = "0x1D11BF8", VA = "0x1D11BF8")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6000688")]
		[Address(RVA = "0x1D11C88", Offset = "0x1D11C88", VA = "0x1D11C88")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000689")]
		[Address(RVA = "0x1D11D18", Offset = "0x1D11D18", VA = "0x1D11D18")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x600068A")]
		[Address(RVA = "0x1D11DA8", Offset = "0x1D11DA8", VA = "0x1D11DA8")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x600068B")]
		[Address(RVA = "0x1D11E3C", Offset = "0x1D11E3C", VA = "0x1D11E3C")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x600068C")]
		[Address(RVA = "0x1D11EBC", Offset = "0x1D11EBC", VA = "0x1D11EBC")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x1D11F3C", Offset = "0x1D11F3C", VA = "0x1D11F3C")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600068E")]
		[Address(RVA = "0x1D11FF8", Offset = "0x1D11FF8", VA = "0x1D11FF8")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x1D12088", Offset = "0x1D12088", VA = "0x1D12088")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000690")]
		[Address(RVA = "0x1D1213C", Offset = "0x1D1213C", VA = "0x1D1213C")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000691")]
		[Address(RVA = "0x1D12294", Offset = "0x1D12294", VA = "0x1D12294")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x6000692")]
		[Address(RVA = "0x1D12324", Offset = "0x1D12324", VA = "0x1D12324")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000693")]
		[Address(RVA = "0x1D123B4", Offset = "0x1D123B4", VA = "0x1D123B4")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x6000694")]
		[Address(RVA = "0x1D12444", Offset = "0x1D12444", VA = "0x1D12444")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x6000695")]
		[Address(RVA = "0x1D124C4", Offset = "0x1D124C4", VA = "0x1D124C4")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x1D12544", Offset = "0x1D12544", VA = "0x1D12544")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000697")]
		[Address(RVA = "0x1D125EC", Offset = "0x1D125EC", VA = "0x1D125EC")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x6000698")]
		[Address(RVA = "0x1D1266C", Offset = "0x1D1266C", VA = "0x1D1266C")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000699")]
		[Address(RVA = "0x1D126EC", Offset = "0x1D126EC", VA = "0x1D126EC")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x600069A")]
		[Address(RVA = "0x1D12760", Offset = "0x1D12760", VA = "0x1D12760")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x600069B")]
		[Address(RVA = "0x1D127E0", Offset = "0x1D127E0", VA = "0x1D127E0")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x600069C")]
		[Address(RVA = "0x1D12854", Offset = "0x1D12854", VA = "0x1D12854")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x600069D")]
		[Address(RVA = "0x1D128C8", Offset = "0x1D128C8", VA = "0x1D128C8")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x600069E")]
		[Address(RVA = "0x1D1293C", Offset = "0x1D1293C", VA = "0x1D1293C")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x600069F")]
		[Address(RVA = "0x1D129BC", Offset = "0x1D129BC", VA = "0x1D129BC")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x1D12A3C", Offset = "0x1D12A3C", VA = "0x1D12A3C")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x1D12AB0", Offset = "0x1D12AB0", VA = "0x1D12AB0")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x1D12B24", Offset = "0x1D12B24", VA = "0x1D12B24")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x1D12BA4", Offset = "0x1D12BA4", VA = "0x1D12BA4")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x1D12C24", Offset = "0x1D12C24", VA = "0x1D12C24")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x1D12CA4", Offset = "0x1D12CA4", VA = "0x1D12CA4")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x1D12D24", Offset = "0x1D12D24", VA = "0x1D12D24")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x1D12DB4", Offset = "0x1D12DB4", VA = "0x1D12DB4")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x1D12E34", Offset = "0x1D12E34", VA = "0x1D12E34")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x1D12EA8", Offset = "0x1D12EA8", VA = "0x1D12EA8")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x1D12F1C", Offset = "0x1D12F1C", VA = "0x1D12F1C")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x1D12F90", Offset = "0x1D12F90", VA = "0x1D12F90")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x1D13004", Offset = "0x1D13004", VA = "0x1D13004")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x1D130C0", Offset = "0x1D130C0", VA = "0x1D130C0")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x1D13150", Offset = "0x1D13150", VA = "0x1D13150")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x1D13214", Offset = "0x1D13214", VA = "0x1D13214")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x1D132AC", Offset = "0x1D132AC", VA = "0x1D132AC")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x1D1336C", Offset = "0x1D1336C", VA = "0x1D1336C")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x1D1340C", Offset = "0x1D1340C", VA = "0x1D1340C")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x1D1348C", Offset = "0x1D1348C", VA = "0x1D1348C")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x1D134F4", Offset = "0x1D134F4", VA = "0x1D134F4")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x1D13574", Offset = "0x1D13574", VA = "0x1D13574")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x1D135F4", Offset = "0x1D135F4", VA = "0x1D135F4")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x1D1365C", Offset = "0x1D1365C", VA = "0x1D1365C")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x1D136DC", Offset = "0x1D136DC", VA = "0x1D136DC")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x1D1375C", Offset = "0x1D1375C", VA = "0x1D1375C")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x1D137DC", Offset = "0x1D137DC", VA = "0x1D137DC")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x1D1386C", Offset = "0x1D1386C", VA = "0x1D1386C")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x1D138D4", Offset = "0x1D138D4", VA = "0x1D138D4")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x1D13954", Offset = "0x1D13954", VA = "0x1D13954")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x1D139D4", Offset = "0x1D139D4", VA = "0x1D139D4")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x1D13A5C", Offset = "0x1D13A5C", VA = "0x1D13A5C")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x1D13AC4", Offset = "0x1D13AC4", VA = "0x1D13AC4")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x1D13B44", Offset = "0x1D13B44", VA = "0x1D13B44")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x1D13BC4", Offset = "0x1D13BC4", VA = "0x1D13BC4")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x1D13C4C", Offset = "0x1D13C4C", VA = "0x1D13C4C")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x1D13CB4", Offset = "0x1D13CB4", VA = "0x1D13CB4")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x1D13D34", Offset = "0x1D13D34", VA = "0x1D13D34")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x1D13D9C", Offset = "0x1D13D9C", VA = "0x1D13D9C")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x1D13E1C", Offset = "0x1D13E1C", VA = "0x1D13E1C")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x1D13EAC", Offset = "0x1D13EAC", VA = "0x1D13EAC")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x1D13F14", Offset = "0x1D13F14", VA = "0x1D13F14")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x1D13F94", Offset = "0x1D13F94", VA = "0x1D13F94")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x1D14014", Offset = "0x1D14014", VA = "0x1D14014")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x1D1409C", Offset = "0x1D1409C", VA = "0x1D1409C")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x1D14124", Offset = "0x1D14124", VA = "0x1D14124")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x1D1418C", Offset = "0x1D1418C", VA = "0x1D1418C")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x1D1420C", Offset = "0x1D1420C", VA = "0x1D1420C")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x1D1428C", Offset = "0x1D1428C", VA = "0x1D1428C")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x1D1430C", Offset = "0x1D1430C", VA = "0x1D1430C")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x1D14374", Offset = "0x1D14374", VA = "0x1D14374")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x1D143F4", Offset = "0x1D143F4", VA = "0x1D143F4")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x1D14474", Offset = "0x1D14474", VA = "0x1D14474")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x1D144DC", Offset = "0x1D144DC", VA = "0x1D144DC")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x1D1455C", Offset = "0x1D1455C", VA = "0x1D1455C")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x1D145DC", Offset = "0x1D145DC", VA = "0x1D145DC")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x1D14644", Offset = "0x1D14644", VA = "0x1D14644")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x1D146C4", Offset = "0x1D146C4", VA = "0x1D146C4")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x1D1472C", Offset = "0x1D1472C", VA = "0x1D1472C")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x1D147AC", Offset = "0x1D147AC", VA = "0x1D147AC")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x1D14814", Offset = "0x1D14814", VA = "0x1D14814")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x1D14894", Offset = "0x1D14894", VA = "0x1D14894")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x1D148FC", Offset = "0x1D148FC", VA = "0x1D148FC")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1D1497C", Offset = "0x1D1497C", VA = "0x1D1497C")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1D149FC", Offset = "0x1D149FC", VA = "0x1D149FC")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1D14A64", Offset = "0x1D14A64", VA = "0x1D14A64")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x1D14AE4", Offset = "0x1D14AE4", VA = "0x1D14AE4")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x1D14B74", Offset = "0x1D14B74", VA = "0x1D14B74")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x1D14BF4", Offset = "0x1D14BF4", VA = "0x1D14BF4")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1D14C74", Offset = "0x1D14C74", VA = "0x1D14C74")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x1D14CF4", Offset = "0x1D14CF4", VA = "0x1D14CF4")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x1D14D5C", Offset = "0x1D14D5C", VA = "0x1D14D5C")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x1D14DDC", Offset = "0x1D14DDC", VA = "0x1D14DDC")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x1D14E64", Offset = "0x1D14E64", VA = "0x1D14E64")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x1D14EE4", Offset = "0x1D14EE4", VA = "0x1D14EE4")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x1D14F64", Offset = "0x1D14F64", VA = "0x1D14F64")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x1D14FCC", Offset = "0x1D14FCC", VA = "0x1D14FCC")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x1D1504C", Offset = "0x1D1504C", VA = "0x1D1504C")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x1D150D4", Offset = "0x1D150D4", VA = "0x1D150D4")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x1D15154", Offset = "0x1D15154", VA = "0x1D15154")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x1D151BC", Offset = "0x1D151BC", VA = "0x1D151BC")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x1D1523C", Offset = "0x1D1523C", VA = "0x1D1523C")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x1D152BC", Offset = "0x1D152BC", VA = "0x1D152BC")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x1D1533C", Offset = "0x1D1533C", VA = "0x1D1533C")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x1D153BC", Offset = "0x1D153BC", VA = "0x1D153BC")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x1D1543C", Offset = "0x1D1543C", VA = "0x1D1543C")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x1D154C4", Offset = "0x1D154C4", VA = "0x1D154C4")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x1D15544", Offset = "0x1D15544", VA = "0x1D15544")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x1D155C4", Offset = "0x1D155C4", VA = "0x1D155C4")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x1D1562C", Offset = "0x1D1562C", VA = "0x1D1562C")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x1D156AC", Offset = "0x1D156AC", VA = "0x1D156AC")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x1D1572C", Offset = "0x1D1572C", VA = "0x1D1572C")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x1D157AC", Offset = "0x1D157AC", VA = "0x1D157AC")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x1D15814", Offset = "0x1D15814", VA = "0x1D15814")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x1D15894", Offset = "0x1D15894", VA = "0x1D15894")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x1D15924", Offset = "0x1D15924", VA = "0x1D15924")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x1D159A4", Offset = "0x1D159A4", VA = "0x1D159A4")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000701")]
		[Address(RVA = "0x1D15A0C", Offset = "0x1D15A0C", VA = "0x1D15A0C")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1D15A8C", Offset = "0x1D15A8C", VA = "0x1D15A8C")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000703")]
		[Address(RVA = "0x1D15B0C", Offset = "0x1D15B0C", VA = "0x1D15B0C")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x1D15B8C", Offset = "0x1D15B8C", VA = "0x1D15B8C")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000705")]
		[Address(RVA = "0x1D15BF4", Offset = "0x1D15BF4", VA = "0x1D15BF4")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x1D15C74", Offset = "0x1D15C74", VA = "0x1D15C74")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000707")]
		[Address(RVA = "0x1D15D70", Offset = "0x1D15D70", VA = "0x1D15D70")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000708")]
		[Address(RVA = "0x1D15CF0", Offset = "0x1D15CF0", VA = "0x1D15CF0")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1D15DF0", Offset = "0x1D15DF0", VA = "0x1D15DF0")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600070A")]
		[Address(RVA = "0x1D15E58", Offset = "0x1D15E58", VA = "0x1D15E58")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x1D15ED8", Offset = "0x1D15ED8", VA = "0x1D15ED8")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600070C")]
		[Address(RVA = "0x1D15F40", Offset = "0x1D15F40", VA = "0x1D15F40")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x1D15FC0", Offset = "0x1D15FC0", VA = "0x1D15FC0")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600070E")]
		[Address(RVA = "0x1D16040", Offset = "0x1D16040", VA = "0x1D16040")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x1D160C0", Offset = "0x1D160C0", VA = "0x1D160C0")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000710")]
		[Address(RVA = "0x1D16128", Offset = "0x1D16128", VA = "0x1D16128")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x1D161A8", Offset = "0x1D161A8", VA = "0x1D161A8")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000712")]
		[Address(RVA = "0x1D16210", Offset = "0x1D16210", VA = "0x1D16210")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000713")]
		[Address(RVA = "0x1D16290", Offset = "0x1D16290", VA = "0x1D16290")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000714")]
		[Address(RVA = "0x1D16310", Offset = "0x1D16310", VA = "0x1D16310")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x1D16390", Offset = "0x1D16390", VA = "0x1D16390")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x1D163F8", Offset = "0x1D163F8", VA = "0x1D163F8")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000717")]
		[Address(RVA = "0x1D16478", Offset = "0x1D16478", VA = "0x1D16478")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x1D16508", Offset = "0x1D16508", VA = "0x1D16508")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x1D16570", Offset = "0x1D16570", VA = "0x1D16570")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x1D165F0", Offset = "0x1D165F0", VA = "0x1D165F0")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x1D16670", Offset = "0x1D16670", VA = "0x1D16670")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x1D166F8", Offset = "0x1D166F8", VA = "0x1D166F8")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600071D")]
		[Address(RVA = "0x1D16760", Offset = "0x1D16760", VA = "0x1D16760")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x1D167E0", Offset = "0x1D167E0", VA = "0x1D167E0")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x1D16848", Offset = "0x1D16848", VA = "0x1D16848")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000720")]
		[Address(RVA = "0x1D168C8", Offset = "0x1D168C8", VA = "0x1D168C8")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x1D16948", Offset = "0x1D16948", VA = "0x1D16948")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x1D169B0", Offset = "0x1D169B0", VA = "0x1D169B0")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x1D16A30", Offset = "0x1D16A30", VA = "0x1D16A30")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x1D16AEC", Offset = "0x1D16AEC", VA = "0x1D16AEC")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x1D0918C", Offset = "0x1D0918C", VA = "0x1D0918C")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x1D16B7C", Offset = "0x1D16B7C", VA = "0x1D16B7C")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x1D0910C", Offset = "0x1D0910C", VA = "0x1D0910C")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x1D09204", Offset = "0x1D09204", VA = "0x1D09204")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x1D16C0C", Offset = "0x1D16C0C", VA = "0x1D16C0C")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x1D16C9C", Offset = "0x1D16C9C", VA = "0x1D16C9C")]
		public static string ovr_Destination_GetApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x1D16D04", Offset = "0x1D16D04", VA = "0x1D16D04")]
		private static extern IntPtr ovr_Destination_GetApiName_Native(IntPtr obj);

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x1D16D84", Offset = "0x1D16D84", VA = "0x1D16D84")]
		public static string ovr_Destination_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x1D16DEC", Offset = "0x1D16DEC", VA = "0x1D16DEC")]
		private static extern IntPtr ovr_Destination_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x1D16E6C", Offset = "0x1D16E6C", VA = "0x1D16E6C")]
		public static string ovr_Destination_GetDisplayName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600072F")]
		[Address(RVA = "0x1D16ED4", Offset = "0x1D16ED4", VA = "0x1D16ED4")]
		private static extern IntPtr ovr_Destination_GetDisplayName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x1D16F54", Offset = "0x1D16F54", VA = "0x1D16F54")]
		public static extern IntPtr ovr_DestinationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x1D16FE4", Offset = "0x1D16FE4", VA = "0x1D16FE4")]
		public static string ovr_DestinationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1D1704C", Offset = "0x1D1704C", VA = "0x1D1704C")]
		private static extern IntPtr ovr_DestinationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000733")]
		[Address(RVA = "0x1D170CC", Offset = "0x1D170CC", VA = "0x1D170CC")]
		public static extern UIntPtr ovr_DestinationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x1D1714C", Offset = "0x1D1714C", VA = "0x1D1714C")]
		public static extern bool ovr_DestinationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x1D171D4", Offset = "0x1D171D4", VA = "0x1D171D4")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x1D17250", Offset = "0x1D17250", VA = "0x1D17250")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x1D172B8", Offset = "0x1D172B8", VA = "0x1D172B8")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x1D17338", Offset = "0x1D17338", VA = "0x1D17338")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x1D173B8", Offset = "0x1D173B8", VA = "0x1D173B8")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600073A")]
		[Address(RVA = "0x1D17420", Offset = "0x1D17420", VA = "0x1D17420")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073B")]
		[Address(RVA = "0x1D174A0", Offset = "0x1D174A0", VA = "0x1D174A0")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x1D17520", Offset = "0x1D17520", VA = "0x1D17520")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1D175A0", Offset = "0x1D175A0", VA = "0x1D175A0")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1D17620", Offset = "0x1D17620", VA = "0x1D17620")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1D176A8", Offset = "0x1D176A8", VA = "0x1D176A8")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1D17710", Offset = "0x1D17710", VA = "0x1D17710")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1D17790", Offset = "0x1D17790", VA = "0x1D17790")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1D177F8", Offset = "0x1D177F8", VA = "0x1D177F8")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1D17878", Offset = "0x1D17878", VA = "0x1D17878")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1D178E0", Offset = "0x1D178E0", VA = "0x1D178E0")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1D17960", Offset = "0x1D17960", VA = "0x1D17960")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x1D179E0", Offset = "0x1D179E0", VA = "0x1D179E0")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000747")]
		[Address(RVA = "0x1D17A48", Offset = "0x1D17A48", VA = "0x1D17A48")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000748")]
		[Address(RVA = "0x1D17AC8", Offset = "0x1D17AC8", VA = "0x1D17AC8")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000749")]
		[Address(RVA = "0x1D17B58", Offset = "0x1D17B58", VA = "0x1D17B58")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x1D17BD8", Offset = "0x1D17BD8", VA = "0x1D17BD8")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1D17C40", Offset = "0x1D17C40", VA = "0x1D17C40")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x1D17CC0", Offset = "0x1D17CC0", VA = "0x1D17CC0")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1D17D28", Offset = "0x1D17D28", VA = "0x1D17D28")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1D17DA8", Offset = "0x1D17DA8", VA = "0x1D17DA8")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x1D17E10", Offset = "0x1D17E10", VA = "0x1D17E10")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1D17E90", Offset = "0x1D17E90", VA = "0x1D17E90")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000751")]
		[Address(RVA = "0x1D17F18", Offset = "0x1D17F18", VA = "0x1D17F18")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x1D17FA0", Offset = "0x1D17FA0", VA = "0x1D17FA0")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000753")]
		[Address(RVA = "0x1D18008", Offset = "0x1D18008", VA = "0x1D18008")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x1D18088", Offset = "0x1D18088", VA = "0x1D18088")]
		public static string ovr_LaunchDetails_GetDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000755")]
		[Address(RVA = "0x1D180F0", Offset = "0x1D180F0", VA = "0x1D180F0")]
		private static extern IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(IntPtr obj);

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x1D18170", Offset = "0x1D18170", VA = "0x1D18170")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000757")]
		[Address(RVA = "0x1D181D8", Offset = "0x1D181D8", VA = "0x1D181D8")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000758")]
		[Address(RVA = "0x1D18258", Offset = "0x1D18258", VA = "0x1D18258")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000759")]
		[Address(RVA = "0x1D182D8", Offset = "0x1D182D8", VA = "0x1D182D8")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075A")]
		[Address(RVA = "0x1D18358", Offset = "0x1D18358", VA = "0x1D18358")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075B")]
		[Address(RVA = "0x1D183D8", Offset = "0x1D183D8", VA = "0x1D183D8")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075C")]
		[Address(RVA = "0x1D18460", Offset = "0x1D18460", VA = "0x1D18460")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075D")]
		[Address(RVA = "0x1D184E8", Offset = "0x1D184E8", VA = "0x1D184E8")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075E")]
		[Address(RVA = "0x1D18570", Offset = "0x1D18570", VA = "0x1D18570")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075F")]
		[Address(RVA = "0x1D185F0", Offset = "0x1D185F0", VA = "0x1D185F0")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000760")]
		[Address(RVA = "0x1D18678", Offset = "0x1D18678", VA = "0x1D18678")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x1D18700", Offset = "0x1D18700", VA = "0x1D18700")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000762")]
		[Address(RVA = "0x1D187FC", Offset = "0x1D187FC", VA = "0x1D187FC")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000763")]
		[Address(RVA = "0x1D1877C", Offset = "0x1D1877C", VA = "0x1D1877C")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000764")]
		[Address(RVA = "0x1D1887C", Offset = "0x1D1887C", VA = "0x1D1887C")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000765")]
		[Address(RVA = "0x1D188FC", Offset = "0x1D188FC", VA = "0x1D188FC")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x1D1897C", Offset = "0x1D1897C", VA = "0x1D1897C")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x1D189E4", Offset = "0x1D189E4", VA = "0x1D189E4")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000768")]
		[Address(RVA = "0x1D18A64", Offset = "0x1D18A64", VA = "0x1D18A64")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000769")]
		[Address(RVA = "0x1D18AE4", Offset = "0x1D18AE4", VA = "0x1D18AE4")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x1D18B74", Offset = "0x1D18B74", VA = "0x1D18B74")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600076B")]
		[Address(RVA = "0x1D18BDC", Offset = "0x1D18BDC", VA = "0x1D18BDC")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x1D18C5C", Offset = "0x1D18C5C", VA = "0x1D18C5C")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600076D")]
		[Address(RVA = "0x1D18CC4", Offset = "0x1D18CC4", VA = "0x1D18CC4")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600076E")]
		[Address(RVA = "0x1D18D44", Offset = "0x1D18D44", VA = "0x1D18D44")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1D18DC4", Offset = "0x1D18DC4", VA = "0x1D18DC4")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000770")]
		[Address(RVA = "0x1D18E44", Offset = "0x1D18E44", VA = "0x1D18E44")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000771")]
		[Address(RVA = "0x1D18ECC", Offset = "0x1D18ECC", VA = "0x1D18ECC")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000772")]
		[Address(RVA = "0x1D18F54", Offset = "0x1D18F54", VA = "0x1D18F54")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x1D18FDC", Offset = "0x1D18FDC", VA = "0x1D18FDC")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000774")]
		[Address(RVA = "0x1D19044", Offset = "0x1D19044", VA = "0x1D19044")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000775")]
		[Address(RVA = "0x1D190C4", Offset = "0x1D190C4", VA = "0x1D190C4")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x1D19144", Offset = "0x1D19144", VA = "0x1D19144")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000777")]
		[Address(RVA = "0x1D191AC", Offset = "0x1D191AC", VA = "0x1D191AC")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000778")]
		[Address(RVA = "0x1D1922C", Offset = "0x1D1922C", VA = "0x1D1922C")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000779")]
		[Address(RVA = "0x1D192BC", Offset = "0x1D192BC", VA = "0x1D192BC")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077A")]
		[Address(RVA = "0x1D1933C", Offset = "0x1D1933C", VA = "0x1D1933C")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1D193C4", Offset = "0x1D193C4", VA = "0x1D193C4")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077C")]
		[Address(RVA = "0x1D19444", Offset = "0x1D19444", VA = "0x1D19444")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077D")]
		[Address(RVA = "0x1D194CC", Offset = "0x1D194CC", VA = "0x1D194CC")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077E")]
		[Address(RVA = "0x1D19554", Offset = "0x1D19554", VA = "0x1D19554")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077F")]
		[Address(RVA = "0x1D195DC", Offset = "0x1D195DC", VA = "0x1D195DC")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1D1965C", Offset = "0x1D1965C", VA = "0x1D1965C")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000781")]
		[Address(RVA = "0x1D196E4", Offset = "0x1D196E4", VA = "0x1D196E4")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000782")]
		[Address(RVA = "0x1D19764", Offset = "0x1D19764", VA = "0x1D19764")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x1D197E4", Offset = "0x1D197E4", VA = "0x1D197E4")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000784")]
		[Address(RVA = "0x1D1984C", Offset = "0x1D1984C", VA = "0x1D1984C")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000785")]
		[Address(RVA = "0x1D198CC", Offset = "0x1D198CC", VA = "0x1D198CC")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000786")]
		[Address(RVA = "0x1D1994C", Offset = "0x1D1994C", VA = "0x1D1994C")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000787")]
		[Address(RVA = "0x1D199CC", Offset = "0x1D199CC", VA = "0x1D199CC")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000788")]
		[Address(RVA = "0x1D19A54", Offset = "0x1D19A54", VA = "0x1D19A54")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1D19AD4", Offset = "0x1D19AD4", VA = "0x1D19AD4")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1D19B54", Offset = "0x1D19B54", VA = "0x1D19B54")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x1D19BD4", Offset = "0x1D19BD4", VA = "0x1D19BD4")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600078C")]
		[Address(RVA = "0x1D19C3C", Offset = "0x1D19C3C", VA = "0x1D19C3C")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600078D")]
		[Address(RVA = "0x1D19CBC", Offset = "0x1D19CBC", VA = "0x1D19CBC")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600078E")]
		[Address(RVA = "0x1D19D4C", Offset = "0x1D19D4C", VA = "0x1D19D4C")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600078F")]
		[Address(RVA = "0x1D19DCC", Offset = "0x1D19DCC", VA = "0x1D19DCC")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000790")]
		[Address(RVA = "0x1D19E4C", Offset = "0x1D19E4C", VA = "0x1D19E4C")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x1D19ECC", Offset = "0x1D19ECC", VA = "0x1D19ECC")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000792")]
		[Address(RVA = "0x1D19F34", Offset = "0x1D19F34", VA = "0x1D19F34")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000793")]
		[Address(RVA = "0x1D19FB4", Offset = "0x1D19FB4", VA = "0x1D19FB4")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000794")]
		[Address(RVA = "0x1D1A034", Offset = "0x1D1A034", VA = "0x1D1A034")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x1D1A0C4", Offset = "0x1D1A0C4", VA = "0x1D1A0C4")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000796")]
		[Address(RVA = "0x1D1A12C", Offset = "0x1D1A12C", VA = "0x1D1A12C")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000797")]
		[Address(RVA = "0x1D1A1AC", Offset = "0x1D1A1AC", VA = "0x1D1A1AC")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000798")]
		[Address(RVA = "0x1D1A22C", Offset = "0x1D1A22C", VA = "0x1D1A22C")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000799")]
		[Address(RVA = "0x1D1A2B4", Offset = "0x1D1A2B4", VA = "0x1D1A2B4")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600079A")]
		[Address(RVA = "0x1D1A334", Offset = "0x1D1A334", VA = "0x1D1A334")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600079B")]
		[Address(RVA = "0x1D1A3B4", Offset = "0x1D1A3B4", VA = "0x1D1A3B4")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600079C")]
		[Address(RVA = "0x1D1A434", Offset = "0x1D1A434", VA = "0x1D1A434")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x1D1A4B4", Offset = "0x1D1A4B4", VA = "0x1D1A4B4")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600079E")]
		[Address(RVA = "0x1D1A51C", Offset = "0x1D1A51C", VA = "0x1D1A51C")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600079F")]
		[Address(RVA = "0x1D1A59C", Offset = "0x1D1A59C", VA = "0x1D1A59C")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x1D1A61C", Offset = "0x1D1A61C", VA = "0x1D1A61C")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x1D1A684", Offset = "0x1D1A684", VA = "0x1D1A684")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x1D1A704", Offset = "0x1D1A704", VA = "0x1D1A704")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x1D1A784", Offset = "0x1D1A784", VA = "0x1D1A784")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x1D1A804", Offset = "0x1D1A804", VA = "0x1D1A804")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x1D1A894", Offset = "0x1D1A894", VA = "0x1D1A894")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x1D1A914", Offset = "0x1D1A914", VA = "0x1D1A914")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x1D1A994", Offset = "0x1D1A994", VA = "0x1D1A994")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x1D1AA14", Offset = "0x1D1AA14", VA = "0x1D1AA14")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x1D1AAA4", Offset = "0x1D1AAA4", VA = "0x1D1AAA4")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x1D1AB24", Offset = "0x1D1AB24", VA = "0x1D1AB24")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x1D1ABA4", Offset = "0x1D1ABA4", VA = "0x1D1ABA4")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x1D1AC24", Offset = "0x1D1AC24", VA = "0x1D1AC24")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x1D1AC8C", Offset = "0x1D1AC8C", VA = "0x1D1AC8C")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x1D1AD0C", Offset = "0x1D1AD0C", VA = "0x1D1AD0C")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x1D1AD8C", Offset = "0x1D1AD8C", VA = "0x1D1AD8C")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x1D1AE0C", Offset = "0x1D1AE0C", VA = "0x1D1AE0C")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x1D1AE94", Offset = "0x1D1AE94", VA = "0x1D1AE94")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x1D1AF24", Offset = "0x1D1AF24", VA = "0x1D1AF24")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x1D1AFA4", Offset = "0x1D1AFA4", VA = "0x1D1AFA4")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x1D1B024", Offset = "0x1D1B024", VA = "0x1D1B024")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x1D1B0A4", Offset = "0x1D1B0A4", VA = "0x1D1B0A4")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x1D1B124", Offset = "0x1D1B124", VA = "0x1D1B124")]
		public static extern double ovr_MatchmakingStats_GetSkillMean(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x1D1B1A4", Offset = "0x1D1B1A4", VA = "0x1D1B1A4")]
		public static extern double ovr_MatchmakingStats_GetSkillStandardDeviation(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1D1B224", Offset = "0x1D1B224", VA = "0x1D1B224")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x1D1B2A4", Offset = "0x1D1B2A4", VA = "0x1D1B2A4")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x1D1B324", Offset = "0x1D1B324", VA = "0x1D1B324")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x1D1B3A4", Offset = "0x1D1B3A4", VA = "0x1D1B3A4")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x1D1B424", Offset = "0x1D1B424", VA = "0x1D1B424")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x1D1B4A4", Offset = "0x1D1B4A4", VA = "0x1D1B4A4")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x1D1B524", Offset = "0x1D1B524", VA = "0x1D1B524")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x1D1B5A4", Offset = "0x1D1B5A4", VA = "0x1D1B5A4")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x1D1B624", Offset = "0x1D1B624", VA = "0x1D1B624")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x1D1B6A4", Offset = "0x1D1B6A4", VA = "0x1D1B6A4")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x1D1B724", Offset = "0x1D1B724", VA = "0x1D1B724")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x1D1B7A4", Offset = "0x1D1B7A4", VA = "0x1D1B7A4")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x1D1B824", Offset = "0x1D1B824", VA = "0x1D1B824")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x1D1B8A4", Offset = "0x1D1B8A4", VA = "0x1D1B8A4")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x1D1B924", Offset = "0x1D1B924", VA = "0x1D1B924")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x1D1B9A4", Offset = "0x1D1B9A4", VA = "0x1D1B9A4")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x1D1BA24", Offset = "0x1D1BA24", VA = "0x1D1BA24")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x1D1BAA4", Offset = "0x1D1BAA4", VA = "0x1D1BAA4")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x1D1BB24", Offset = "0x1D1BB24", VA = "0x1D1BB24")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x1D1BBA4", Offset = "0x1D1BBA4", VA = "0x1D1BBA4")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x1D1BC24", Offset = "0x1D1BC24", VA = "0x1D1BC24")]
		public static extern IntPtr ovr_Message_GetDestinationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x1D1BCA4", Offset = "0x1D1BCA4", VA = "0x1D1BCA4")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x1D1BD24", Offset = "0x1D1BD24", VA = "0x1D1BD24")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x1D1BDA4", Offset = "0x1D1BDA4", VA = "0x1D1BDA4")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x1D1BE24", Offset = "0x1D1BE24", VA = "0x1D1BE24")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x1D1BEA4", Offset = "0x1D1BEA4", VA = "0x1D1BEA4")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x1D1BF24", Offset = "0x1D1BF24", VA = "0x1D1BF24")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x1D1BFA4", Offset = "0x1D1BFA4", VA = "0x1D1BFA4")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x1D1C024", Offset = "0x1D1C024", VA = "0x1D1C024")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x1D1C0A4", Offset = "0x1D1C0A4", VA = "0x1D1C0A4")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x1D1C124", Offset = "0x1D1C124", VA = "0x1D1C124")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x1D1C1A4", Offset = "0x1D1C1A4", VA = "0x1D1C1A4")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x1D1C224", Offset = "0x1D1C224", VA = "0x1D1C224")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x1D1C2A4", Offset = "0x1D1C2A4", VA = "0x1D1C2A4")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x1D1C324", Offset = "0x1D1C324", VA = "0x1D1C324")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1D1C3A4", Offset = "0x1D1C3A4", VA = "0x1D1C3A4")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1D1C424", Offset = "0x1D1C424", VA = "0x1D1C424")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1D1C4A4", Offset = "0x1D1C4A4", VA = "0x1D1C4A4")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1D1C524", Offset = "0x1D1C524", VA = "0x1D1C524")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x1D1C5A4", Offset = "0x1D1C5A4", VA = "0x1D1C5A4")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x1D1C624", Offset = "0x1D1C624", VA = "0x1D1C624")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x1D1C6A4", Offset = "0x1D1C6A4", VA = "0x1D1C6A4")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x1D1C724", Offset = "0x1D1C724", VA = "0x1D1C724")]
		public static extern IntPtr ovr_Message_GetNetSyncConnection(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x1D1C7A4", Offset = "0x1D1C7A4", VA = "0x1D1C7A4")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x1D1C824", Offset = "0x1D1C824", VA = "0x1D1C824")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x1D1C8A4", Offset = "0x1D1C8A4", VA = "0x1D1C8A4")]
		public static extern IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x1D1C924", Offset = "0x1D1C924", VA = "0x1D1C924")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1D1C9A4", Offset = "0x1D1C9A4", VA = "0x1D1C9A4")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x1D1CA24", Offset = "0x1D1CA24", VA = "0x1D1CA24")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x1D1CAA4", Offset = "0x1D1CAA4", VA = "0x1D1CAA4")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x1D1CB24", Offset = "0x1D1CB24", VA = "0x1D1CB24")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x1D1CBA4", Offset = "0x1D1CBA4", VA = "0x1D1CBA4")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1D1CC24", Offset = "0x1D1CC24", VA = "0x1D1CC24")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1D1CCA4", Offset = "0x1D1CCA4", VA = "0x1D1CCA4")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x1D1CD24", Offset = "0x1D1CD24", VA = "0x1D1CD24")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x1D1CDA4", Offset = "0x1D1CDA4", VA = "0x1D1CDA4")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x1D1CE24", Offset = "0x1D1CE24", VA = "0x1D1CE24")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x1D1CEA4", Offset = "0x1D1CEA4", VA = "0x1D1CEA4")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x1D1CF24", Offset = "0x1D1CF24", VA = "0x1D1CF24")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x1D1CFA4", Offset = "0x1D1CFA4", VA = "0x1D1CFA4")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x1D1D024", Offset = "0x1D1D024", VA = "0x1D1D024")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x1D1D0A4", Offset = "0x1D1D0A4", VA = "0x1D1D0A4")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x1D1D124", Offset = "0x1D1D124", VA = "0x1D1D124")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x1D1D1A4", Offset = "0x1D1D1A4", VA = "0x1D1D1A4")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1D1D224", Offset = "0x1D1D224", VA = "0x1D1D224")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x1D1D28C", Offset = "0x1D1D28C", VA = "0x1D1D28C")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1D1D30C", Offset = "0x1D1D30C", VA = "0x1D1D30C")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x1D1D38C", Offset = "0x1D1D38C", VA = "0x1D1D38C")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x1D1D40C", Offset = "0x1D1D40C", VA = "0x1D1D40C")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x1D1D48C", Offset = "0x1D1D48C", VA = "0x1D1D48C")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1D1D50C", Offset = "0x1D1D50C", VA = "0x1D1D50C")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x1D1D58C", Offset = "0x1D1D58C", VA = "0x1D1D58C")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1D1D60C", Offset = "0x1D1D60C", VA = "0x1D1D60C")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1D1D68C", Offset = "0x1D1D68C", VA = "0x1D1D68C")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1D1D70C", Offset = "0x1D1D70C", VA = "0x1D1D70C")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1D1D794", Offset = "0x1D1D794", VA = "0x1D1D794")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1D1D814", Offset = "0x1D1D814", VA = "0x1D1D814")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1D1D894", Offset = "0x1D1D894", VA = "0x1D1D894")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1D1D934", Offset = "0x1D1D934", VA = "0x1D1D934")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000807")]
		[Address(RVA = "0x1D1D9D4", Offset = "0x1D1D9D4", VA = "0x1D1D9D4")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1D1DA74", Offset = "0x1D1DA74", VA = "0x1D1DA74")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x1D1DB04", Offset = "0x1D1DB04", VA = "0x1D1DB04")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x1D1DB84", Offset = "0x1D1DB84", VA = "0x1D1DB84")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1D1DC04", Offset = "0x1D1DC04", VA = "0x1D1DC04")]
		public static extern long ovr_NetSyncConnection_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1D1DC84", Offset = "0x1D1DC84", VA = "0x1D1DC84")]
		public static extern NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x1D1DD04", Offset = "0x1D1DD04", VA = "0x1D1DD04")]
		public static extern ulong ovr_NetSyncConnection_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1D1DD84", Offset = "0x1D1DD84", VA = "0x1D1DD84")]
		public static extern NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(IntPtr obj);

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x1D1DE04", Offset = "0x1D1DE04", VA = "0x1D1DE04")]
		public static string ovr_NetSyncConnection_GetZoneId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000810")]
		[Address(RVA = "0x1D1DE6C", Offset = "0x1D1DE6C", VA = "0x1D1DE6C")]
		private static extern IntPtr ovr_NetSyncConnection_GetZoneId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x1D1DEEC", Offset = "0x1D1DEEC", VA = "0x1D1DEEC")]
		public static extern long ovr_NetSyncSession_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1D1DF6C", Offset = "0x1D1DF6C", VA = "0x1D1DF6C")]
		public static extern bool ovr_NetSyncSession_GetMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000813")]
		[Address(RVA = "0x1D1DFF4", Offset = "0x1D1DFF4", VA = "0x1D1DFF4")]
		public static extern ulong ovr_NetSyncSession_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000814")]
		[Address(RVA = "0x1D1E074", Offset = "0x1D1E074", VA = "0x1D1E074")]
		public static extern ulong ovr_NetSyncSession_GetUserId(IntPtr obj);

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x1D1E0F4", Offset = "0x1D1E0F4", VA = "0x1D1E0F4")]
		public static string ovr_NetSyncSession_GetVoipGroup(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x1D1E15C", Offset = "0x1D1E15C", VA = "0x1D1E15C")]
		private static extern IntPtr ovr_NetSyncSession_GetVoipGroup_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x1D1E1DC", Offset = "0x1D1E1DC", VA = "0x1D1E1DC")]
		public static extern IntPtr ovr_NetSyncSessionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x1D1E26C", Offset = "0x1D1E26C", VA = "0x1D1E26C")]
		public static extern UIntPtr ovr_NetSyncSessionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x1D1E2EC", Offset = "0x1D1E2EC", VA = "0x1D1E2EC")]
		public static extern long ovr_NetSyncSessionsChangedNotification_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600081A")]
		[Address(RVA = "0x1D1E36C", Offset = "0x1D1E36C", VA = "0x1D1E36C")]
		public static extern IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600081B")]
		[Address(RVA = "0x1D1E3EC", Offset = "0x1D1E3EC", VA = "0x1D1E3EC")]
		public static extern IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600081C")]
		[Address(RVA = "0x1D1E46C", Offset = "0x1D1E46C", VA = "0x1D1E46C")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1D1E4EC", Offset = "0x1D1E4EC", VA = "0x1D1E4EC")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1D1E56C", Offset = "0x1D1E56C", VA = "0x1D1E56C")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x1D1E5EC", Offset = "0x1D1E5EC", VA = "0x1D1E5EC")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000820")]
		[Address(RVA = "0x1D1E66C", Offset = "0x1D1E66C", VA = "0x1D1E66C")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x1D1E6EC", Offset = "0x1D1E6EC", VA = "0x1D1E6EC")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x1D1E76C", Offset = "0x1D1E76C", VA = "0x1D1E76C")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000823")]
		[Address(RVA = "0x1D1E7EC", Offset = "0x1D1E7EC", VA = "0x1D1E7EC")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x1D1E86C", Offset = "0x1D1E86C", VA = "0x1D1E86C")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000825")]
		[Address(RVA = "0x1D1E8EC", Offset = "0x1D1E8EC", VA = "0x1D1E8EC")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000826")]
		[Address(RVA = "0x1D1E96C", Offset = "0x1D1E96C", VA = "0x1D1E96C")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000827")]
		[Address(RVA = "0x1D1E9EC", Offset = "0x1D1E9EC", VA = "0x1D1E9EC")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000828")]
		[Address(RVA = "0x1D1EA68", Offset = "0x1D1EA68", VA = "0x1D1EA68")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000829")]
		[Address(RVA = "0x1D1EAE8", Offset = "0x1D1EAE8", VA = "0x1D1EAE8")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600082A")]
		[Address(RVA = "0x1D1EB64", Offset = "0x1D1EB64", VA = "0x1D1EB64")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600082B")]
		[Address(RVA = "0x1D1EBE4", Offset = "0x1D1EBE4", VA = "0x1D1EBE4")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600082C")]
		[Address(RVA = "0x1D1EC64", Offset = "0x1D1EC64", VA = "0x1D1EC64")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x1D1ECE4", Offset = "0x1D1ECE4", VA = "0x1D1ECE4")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600082E")]
		[Address(RVA = "0x1D1ED4C", Offset = "0x1D1ED4C", VA = "0x1D1ED4C")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x1D1EDCC", Offset = "0x1D1EDCC", VA = "0x1D1EDCC")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000830")]
		[Address(RVA = "0x1D1EE34", Offset = "0x1D1EE34", VA = "0x1D1EE34")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000831")]
		[Address(RVA = "0x1D1EEB4", Offset = "0x1D1EEB4", VA = "0x1D1EEB4")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x1D1EF34", Offset = "0x1D1EF34", VA = "0x1D1EF34")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000833")]
		[Address(RVA = "0x1D1EF9C", Offset = "0x1D1EF9C", VA = "0x1D1EF9C")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x1D1F01C", Offset = "0x1D1F01C", VA = "0x1D1F01C")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000835")]
		[Address(RVA = "0x1D1F084", Offset = "0x1D1F084", VA = "0x1D1F084")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000836")]
		[Address(RVA = "0x1D1F104", Offset = "0x1D1F104", VA = "0x1D1F104")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000837")]
		[Address(RVA = "0x1D1F194", Offset = "0x1D1F194", VA = "0x1D1F194")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000838")]
		[Address(RVA = "0x1D1F214", Offset = "0x1D1F214", VA = "0x1D1F214")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000839")]
		[Address(RVA = "0x1D1F294", Offset = "0x1D1F294", VA = "0x1D1F294")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600083A")]
		[Address(RVA = "0x1D1F314", Offset = "0x1D1F314", VA = "0x1D1F314")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600083B")]
		[Address(RVA = "0x1D1F39C", Offset = "0x1D1F39C", VA = "0x1D1F39C")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600083C")]
		[Address(RVA = "0x1D1F41C", Offset = "0x1D1F41C", VA = "0x1D1F41C")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x1D1F49C", Offset = "0x1D1F49C", VA = "0x1D1F49C")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600083E")]
		[Address(RVA = "0x1D1F504", Offset = "0x1D1F504", VA = "0x1D1F504")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x1D1F584", Offset = "0x1D1F584", VA = "0x1D1F584")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000840")]
		[Address(RVA = "0x1D1F5EC", Offset = "0x1D1F5EC", VA = "0x1D1F5EC")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x1D1F66C", Offset = "0x1D1F66C", VA = "0x1D1F66C")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000842")]
		[Address(RVA = "0x1D1F6D4", Offset = "0x1D1F6D4", VA = "0x1D1F6D4")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x1D1F754", Offset = "0x1D1F754", VA = "0x1D1F754")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000844")]
		[Address(RVA = "0x1D1F7BC", Offset = "0x1D1F7BC", VA = "0x1D1F7BC")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x1D1F83C", Offset = "0x1D1F83C", VA = "0x1D1F83C")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000846")]
		[Address(RVA = "0x1D1F8A4", Offset = "0x1D1F8A4", VA = "0x1D1F8A4")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x1D1F924", Offset = "0x1D1F924", VA = "0x1D1F924")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000848")]
		[Address(RVA = "0x1D1F98C", Offset = "0x1D1F98C", VA = "0x1D1F98C")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000849")]
		[Address(RVA = "0x1D1FA0C", Offset = "0x1D1FA0C", VA = "0x1D1FA0C")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x1D1FA9C", Offset = "0x1D1FA9C", VA = "0x1D1FA9C")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600084B")]
		[Address(RVA = "0x1D1FB04", Offset = "0x1D1FB04", VA = "0x1D1FB04")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600084C")]
		[Address(RVA = "0x1D1FB84", Offset = "0x1D1FB84", VA = "0x1D1FB84")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600084D")]
		[Address(RVA = "0x1D1FC04", Offset = "0x1D1FC04", VA = "0x1D1FC04")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x1D1FC8C", Offset = "0x1D1FC8C", VA = "0x1D1FC8C")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600084F")]
		[Address(RVA = "0x1D1FCF4", Offset = "0x1D1FCF4", VA = "0x1D1FCF4")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x1D1FD74", Offset = "0x1D1FD74", VA = "0x1D1FD74")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000851")]
		[Address(RVA = "0x1D1FDDC", Offset = "0x1D1FDDC", VA = "0x1D1FDDC")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000852")]
		[Address(RVA = "0x1D1FE5C", Offset = "0x1D1FE5C", VA = "0x1D1FE5C")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x1D1FEDC", Offset = "0x1D1FEDC", VA = "0x1D1FEDC")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000854")]
		[Address(RVA = "0x1D1FF44", Offset = "0x1D1FF44", VA = "0x1D1FF44")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000855")]
		[Address(RVA = "0x1D1FFC4", Offset = "0x1D1FFC4", VA = "0x1D1FFC4")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x1D20054", Offset = "0x1D20054", VA = "0x1D20054")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000857")]
		[Address(RVA = "0x1D200BC", Offset = "0x1D200BC", VA = "0x1D200BC")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000858")]
		[Address(RVA = "0x1D2013C", Offset = "0x1D2013C", VA = "0x1D2013C")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000859")]
		[Address(RVA = "0x1D201BC", Offset = "0x1D201BC", VA = "0x1D201BC")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600085A")]
		[Address(RVA = "0x1D20244", Offset = "0x1D20244", VA = "0x1D20244")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1D202C4", Offset = "0x1D202C4", VA = "0x1D202C4")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x1D20344", Offset = "0x1D20344", VA = "0x1D20344")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1D203AC", Offset = "0x1D203AC", VA = "0x1D203AC")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1D2042C", Offset = "0x1D2042C", VA = "0x1D2042C")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600085F")]
		[Address(RVA = "0x1D204AC", Offset = "0x1D204AC", VA = "0x1D204AC")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000860")]
		[Address(RVA = "0x1D2052C", Offset = "0x1D2052C", VA = "0x1D2052C")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000861")]
		[Address(RVA = "0x1D205B4", Offset = "0x1D205B4", VA = "0x1D205B4")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000862")]
		[Address(RVA = "0x1D20634", Offset = "0x1D20634", VA = "0x1D20634")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000863")]
		[Address(RVA = "0x1D206B4", Offset = "0x1D206B4", VA = "0x1D206B4")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000864")]
		[Address(RVA = "0x1D20734", Offset = "0x1D20734", VA = "0x1D20734")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x1D207B4", Offset = "0x1D207B4", VA = "0x1D207B4")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000866")]
		[Address(RVA = "0x1D2081C", Offset = "0x1D2081C", VA = "0x1D2081C")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000867")]
		[Address(RVA = "0x1D2089C", Offset = "0x1D2089C", VA = "0x1D2089C")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000868")]
		[Address(RVA = "0x1D20918", Offset = "0x1D20918", VA = "0x1D20918")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000869")]
		[Address(RVA = "0x1D20994", Offset = "0x1D20994", VA = "0x1D20994")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600086A")]
		[Address(RVA = "0x1D20A14", Offset = "0x1D20A14", VA = "0x1D20A14")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600086B")]
		[Address(RVA = "0x1D20A90", Offset = "0x1D20A90", VA = "0x1D20A90")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600086C")]
		[Address(RVA = "0x1D20B10", Offset = "0x1D20B10", VA = "0x1D20B10")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x1D20BA0", Offset = "0x1D20BA0", VA = "0x1D20BA0")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600086E")]
		[Address(RVA = "0x1D20C08", Offset = "0x1D20C08", VA = "0x1D20C08")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600086F")]
		[Address(RVA = "0x1D20C88", Offset = "0x1D20C88", VA = "0x1D20C88")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000870")]
		[Address(RVA = "0x1D20D08", Offset = "0x1D20D08", VA = "0x1D20D08")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000871")]
		[Address(RVA = "0x1D20D90", Offset = "0x1D20D90", VA = "0x1D20D90")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000872")]
		[Address(RVA = "0x1D20E10", Offset = "0x1D20E10", VA = "0x1D20E10")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000873")]
		[Address(RVA = "0x1D20E90", Offset = "0x1D20E90", VA = "0x1D20E90")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x1D20F10", Offset = "0x1D20F10", VA = "0x1D20F10")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000875")]
		[Address(RVA = "0x1D20F78", Offset = "0x1D20F78", VA = "0x1D20F78")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000876")]
		[Address(RVA = "0x1D20FF8", Offset = "0x1D20FF8", VA = "0x1D20FF8")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x1D21088", Offset = "0x1D21088", VA = "0x1D21088")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000878")]
		[Address(RVA = "0x1D210F0", Offset = "0x1D210F0", VA = "0x1D210F0")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1D21170", Offset = "0x1D21170", VA = "0x1D21170")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600087A")]
		[Address(RVA = "0x1D211F0", Offset = "0x1D211F0", VA = "0x1D211F0")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600087B")]
		[Address(RVA = "0x1D21278", Offset = "0x1D21278", VA = "0x1D21278")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1D212F8", Offset = "0x1D212F8", VA = "0x1D212F8")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600087D")]
		[Address(RVA = "0x1D21378", Offset = "0x1D21378", VA = "0x1D21378")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600087E")]
		[Address(RVA = "0x1D21408", Offset = "0x1D21408", VA = "0x1D21408")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x1D21488", Offset = "0x1D21488", VA = "0x1D21488")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000880")]
		[Address(RVA = "0x1D21508", Offset = "0x1D21508", VA = "0x1D21508")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x1D21590", Offset = "0x1D21590", VA = "0x1D21590")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x1D21610", Offset = "0x1D21610", VA = "0x1D21610")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000883")]
		[Address(RVA = "0x1D21690", Offset = "0x1D21690", VA = "0x1D21690")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000884")]
		[Address(RVA = "0x1D21710", Offset = "0x1D21710", VA = "0x1D21710")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000885")]
		[Address(RVA = "0x1D21790", Offset = "0x1D21790", VA = "0x1D21790")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000886")]
		[Address(RVA = "0x1D21810", Offset = "0x1D21810", VA = "0x1D21810")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x1D21890", Offset = "0x1D21890", VA = "0x1D21890")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000888")]
		[Address(RVA = "0x1D218F8", Offset = "0x1D218F8", VA = "0x1D218F8")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000889")]
		[Address(RVA = "0x1D21978", Offset = "0x1D21978", VA = "0x1D21978")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1D21A08", Offset = "0x1D21A08", VA = "0x1D21A08")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x1D21A88", Offset = "0x1D21A88", VA = "0x1D21A88")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600088C")]
		[Address(RVA = "0x1D21AF0", Offset = "0x1D21AF0", VA = "0x1D21AF0")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600088D")]
		[Address(RVA = "0x1D21B70", Offset = "0x1D21B70", VA = "0x1D21B70")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600088E")]
		[Address(RVA = "0x1D21BF0", Offset = "0x1D21BF0", VA = "0x1D21BF0")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x1D21C70", Offset = "0x1D21C70", VA = "0x1D21C70")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000890")]
		[Address(RVA = "0x1D21CD8", Offset = "0x1D21CD8", VA = "0x1D21CD8")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000891")]
		[Address(RVA = "0x1D21D58", Offset = "0x1D21D58", VA = "0x1D21D58")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x1D21DD8", Offset = "0x1D21DD8", VA = "0x1D21DD8")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000893")]
		[Address(RVA = "0x1D21E40", Offset = "0x1D21E40", VA = "0x1D21E40")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1D21EC0", Offset = "0x1D21EC0", VA = "0x1D21EC0")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000895")]
		[Address(RVA = "0x1D21F40", Offset = "0x1D21F40", VA = "0x1D21F40")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1D21FC0", Offset = "0x1D21FC0", VA = "0x1D21FC0")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1D22028", Offset = "0x1D22028", VA = "0x1D22028")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000898")]
		[Address(RVA = "0x1D220A8", Offset = "0x1D220A8", VA = "0x1D220A8")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1D22128", Offset = "0x1D22128", VA = "0x1D22128")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1D221A8", Offset = "0x1D221A8", VA = "0x1D221A8")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600089B")]
		[Address(RVA = "0x1D22238", Offset = "0x1D22238", VA = "0x1D22238")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1D222B8", Offset = "0x1D222B8", VA = "0x1D222B8")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x1D22338", Offset = "0x1D22338", VA = "0x1D22338")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600089E")]
		[Address(RVA = "0x1D223A0", Offset = "0x1D223A0", VA = "0x1D223A0")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x1D22420", Offset = "0x1D22420", VA = "0x1D22420")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1D22488", Offset = "0x1D22488", VA = "0x1D22488")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1D22508", Offset = "0x1D22508", VA = "0x1D22508")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x1D22570", Offset = "0x1D22570", VA = "0x1D22570")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x1D225F0", Offset = "0x1D225F0", VA = "0x1D225F0")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x1D22658", Offset = "0x1D22658", VA = "0x1D22658")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x1D226D8", Offset = "0x1D226D8", VA = "0x1D226D8")]
		public static string ovr_User_GetPresenceDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x1D22740", Offset = "0x1D22740", VA = "0x1D22740")]
		private static extern IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1D227C0", Offset = "0x1D227C0", VA = "0x1D227C0")]
		public static string ovr_User_GetPresenceDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1D22828", Offset = "0x1D22828", VA = "0x1D22828")]
		private static extern IntPtr ovr_User_GetPresenceDestinationApiName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x1D228A8", Offset = "0x1D228A8", VA = "0x1D228A8")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1D22928", Offset = "0x1D22928", VA = "0x1D22928")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x1D22990", Offset = "0x1D22990", VA = "0x1D22990")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1D22A10", Offset = "0x1D22A10", VA = "0x1D22A10")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x1D22A90", Offset = "0x1D22A90", VA = "0x1D22A90")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x1D22B10", Offset = "0x1D22B10", VA = "0x1D22B10")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x1D22BA0", Offset = "0x1D22BA0", VA = "0x1D22BA0")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1D22C08", Offset = "0x1D22C08", VA = "0x1D22C08")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1D22C88", Offset = "0x1D22C88", VA = "0x1D22C88")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1D22D08", Offset = "0x1D22D08", VA = "0x1D22D08")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1D22D90", Offset = "0x1D22D90", VA = "0x1D22D90")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1D22E20", Offset = "0x1D22E20", VA = "0x1D22E20")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1D22E88", Offset = "0x1D22E88", VA = "0x1D22E88")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1D22F08", Offset = "0x1D22F08", VA = "0x1D22F08")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1D22F88", Offset = "0x1D22F88", VA = "0x1D22F88")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1D23010", Offset = "0x1D23010", VA = "0x1D23010")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1D23078", Offset = "0x1D23078", VA = "0x1D23078")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1D230F8", Offset = "0x1D230F8", VA = "0x1D230F8")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1D23180", Offset = "0x1D23180", VA = "0x1D23180")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1D23200", Offset = "0x1D23200", VA = "0x1D23200")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1D232A0", Offset = "0x1D232A0", VA = "0x1D232A0")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1D23340", Offset = "0x1D23340", VA = "0x1D23340")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1D233E0", Offset = "0x1D233E0", VA = "0x1D233E0")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1D23480", Offset = "0x1D23480", VA = "0x1D23480")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1D05244", Offset = "0x1D05244", VA = "0x1D05244")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1D055CC", Offset = "0x1D055CC", VA = "0x1D055CC")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1D05330", Offset = "0x1D05330", VA = "0x1D05330")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1D05438", Offset = "0x1D05438", VA = "0x1D05438")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1D06FD0", Offset = "0x1D06FD0", VA = "0x1D06FD0")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1D0721C", Offset = "0x1D0721C", VA = "0x1D0721C")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x1D070BC", Offset = "0x1D070BC", VA = "0x1D070BC")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x1D23500", Offset = "0x1D23500", VA = "0x1D23500")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x1D23590", Offset = "0x1D23590", VA = "0x1D23590")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x1D23604", Offset = "0x1D23604", VA = "0x1D23604")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x1D23684", Offset = "0x1D23684", VA = "0x1D23684")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x1D23750", Offset = "0x1D23750", VA = "0x1D23750")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x1D237E8", Offset = "0x1D237E8", VA = "0x1D237E8")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x1D23868", Offset = "0x1D23868", VA = "0x1D23868")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x1D238F8", Offset = "0x1D238F8", VA = "0x1D238F8")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x1D23988", Offset = "0x1D23988", VA = "0x1D23988")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x1D23A18", Offset = "0x1D23A18", VA = "0x1D23A18")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1D23A98", Offset = "0x1D23A98", VA = "0x1D23A98")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x1D23B4C", Offset = "0x1D23B4C", VA = "0x1D23B4C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1D23BE4", Offset = "0x1D23BE4", VA = "0x1D23BE4")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x1D23CA0", Offset = "0x1D23CA0", VA = "0x1D23CA0")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1D23D40", Offset = "0x1D23D40", VA = "0x1D23D40")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1D23E0C", Offset = "0x1D23E0C", VA = "0x1D23E0C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1D23EA4", Offset = "0x1D23EA4", VA = "0x1D23EA4")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1D23F24", Offset = "0x1D23F24", VA = "0x1D23F24")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1D23FB4", Offset = "0x1D23FB4", VA = "0x1D23FB4")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1D24060", Offset = "0x1D24060", VA = "0x1D24060")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x1D240F0", Offset = "0x1D240F0", VA = "0x1D240F0")]
		public static extern IntPtr ovr_NetSyncOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x1D24164", Offset = "0x1D24164", VA = "0x1D24164")]
		public static extern void ovr_NetSyncOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x1D241E4", Offset = "0x1D241E4", VA = "0x1D241E4")]
		public static void ovr_NetSyncOptions_SetVoipGroup(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x1D24290", Offset = "0x1D24290", VA = "0x1D24290")]
		private static extern void ovr_NetSyncOptions_SetVoipGroup_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x1D24320", Offset = "0x1D24320", VA = "0x1D24320")]
		public static extern void ovr_NetSyncOptions_SetVoipStreamDefault(IntPtr handle, NetSyncVoipStreamMode value);

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x1D243B0", Offset = "0x1D243B0", VA = "0x1D243B0")]
		public static void ovr_NetSyncOptions_SetZoneId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x1D2445C", Offset = "0x1D2445C", VA = "0x1D2445C")]
		private static extern void ovr_NetSyncOptions_SetZoneId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x1D244EC", Offset = "0x1D244EC", VA = "0x1D244EC")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x1D24560", Offset = "0x1D24560", VA = "0x1D24560")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x1D245E0", Offset = "0x1D245E0", VA = "0x1D245E0")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x1D2468C", Offset = "0x1D2468C", VA = "0x1D2468C")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1D2471C", Offset = "0x1D2471C", VA = "0x1D2471C")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x1D247E8", Offset = "0x1D247E8", VA = "0x1D247E8")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x1D24880", Offset = "0x1D24880", VA = "0x1D24880")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1D24900", Offset = "0x1D24900", VA = "0x1D24900")]
		public static extern void ovr_RichPresenceOptions_SetCurrentCapacity(IntPtr handle, uint value);

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x1D24990", Offset = "0x1D24990", VA = "0x1D24990")]
		public static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x1D24A3C", Offset = "0x1D24A3C", VA = "0x1D24A3C")]
		private static extern void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x1D24ACC", Offset = "0x1D24ACC", VA = "0x1D24ACC")]
		public static void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x1D24B48", Offset = "0x1D24B48", VA = "0x1D24B48")]
		private static extern void ovr_RichPresenceOptions_SetEndTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x1D24BD8", Offset = "0x1D24BD8", VA = "0x1D24BD8")]
		public static extern void ovr_RichPresenceOptions_SetExtraContext(IntPtr handle, RichPresenceExtraContext value);

		[PreserveSig]
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x1D24C68", Offset = "0x1D24C68", VA = "0x1D24C68")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x1D24CF8", Offset = "0x1D24CF8", VA = "0x1D24CF8")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x1D24D88", Offset = "0x1D24D88", VA = "0x1D24D88")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x1D24E34", Offset = "0x1D24E34", VA = "0x1D24E34")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x1D24EC4", Offset = "0x1D24EC4", VA = "0x1D24EC4")]
		public static extern void ovr_RichPresenceOptions_SetMaxCapacity(IntPtr handle, uint value);

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x1D24F54", Offset = "0x1D24F54", VA = "0x1D24F54")]
		public static void ovr_RichPresenceOptions_SetStartTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x1D24FD0", Offset = "0x1D24FD0", VA = "0x1D24FD0")]
		private static extern void ovr_RichPresenceOptions_SetStartTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x1D25060", Offset = "0x1D25060", VA = "0x1D25060")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x1D250D4", Offset = "0x1D250D4", VA = "0x1D250D4")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x1D25154", Offset = "0x1D25154", VA = "0x1D25154")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x1D25220", Offset = "0x1D25220", VA = "0x1D25220")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x1D252B8", Offset = "0x1D252B8", VA = "0x1D252B8")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x1D25338", Offset = "0x1D25338", VA = "0x1D25338")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x1D253C8", Offset = "0x1D253C8", VA = "0x1D253C8")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x1D25458", Offset = "0x1D25458", VA = "0x1D25458")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x1D254E8", Offset = "0x1D254E8", VA = "0x1D254E8")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000900")]
		[Address(RVA = "0x1D25578", Offset = "0x1D25578", VA = "0x1D25578")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000901")]
		[Address(RVA = "0x1D25608", Offset = "0x1D25608", VA = "0x1D25608")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000902")]
		[Address(RVA = "0x1D25698", Offset = "0x1D25698", VA = "0x1D25698")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000903")]
		[Address(RVA = "0x1D2570C", Offset = "0x1D2570C", VA = "0x1D2570C")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000904")]
		[Address(RVA = "0x1D2578C", Offset = "0x1D2578C", VA = "0x1D2578C")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000905")]
		[Address(RVA = "0x1D2581C", Offset = "0x1D2581C", VA = "0x1D2581C")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x6000906")]
		[Address(RVA = "0x1D258AC", Offset = "0x1D258AC", VA = "0x1D258AC")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000907")]
		[Address(RVA = "0x1D2592C", Offset = "0x1D2592C", VA = "0x1D2592C")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000908")]
		[Address(RVA = "0x1D259BC", Offset = "0x1D259BC", VA = "0x1D259BC")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000909")]
		[Address(RVA = "0x1D25A30", Offset = "0x1D25A30", VA = "0x1D25A30")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1D25AB0", Offset = "0x1D25AB0", VA = "0x1D25AB0")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x1D25B40", Offset = "0x1D25B40", VA = "0x1D25B40")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x1D25BD0", Offset = "0x1D25BD0", VA = "0x1D25BD0")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public static class Callback
	{
		[Token(Token = "0x20002CD")]
		private class RequestCallback
		{
			[Token(Token = "0x4000BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x13CD08C", Offset = "0x13CD08C", VA = "0x13CD08C")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x60010D7")]
			[Address(RVA = "0x13CC8DC", Offset = "0x13CC8DC", VA = "0x13CC8DC")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x60010D8")]
			[Address(RVA = "0x13CD094", Offset = "0x13CD094", VA = "0x13CD094", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x20002CE")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4000BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x60010D9")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x60010DA")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, Request> requestIDsToRequests;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x600090E")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x13CC7D8", Offset = "0x13CC7D8", VA = "0x13CC7D8")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x13CC910", Offset = "0x13CC910", VA = "0x13CC910")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x13CC9E0", Offset = "0x13CC9E0", VA = "0x13CC9E0")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x13CCCF0", Offset = "0x13CCCF0", VA = "0x13CCCF0")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x13CCD88", Offset = "0x13CCD88", VA = "0x13CCD88")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x13CCE24", Offset = "0x13CCE24", VA = "0x13CCE24")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x13CCB50", Offset = "0x13CCB50", VA = "0x13CCB50")]
		internal static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x6000917")]
		[Address(RVA = "0x13CD438", Offset = "0x13CD438", VA = "0x13CD438")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x13CD4A8", Offset = "0x13CD4A8", VA = "0x13CD4A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x13CD5A4", Offset = "0x13CD5A4", VA = "0x13CD5A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x13CD630", Offset = "0x13CD630", VA = "0x13CD630")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x13CD634", Offset = "0x13CD634", VA = "0x13CD634")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x13CD690", Offset = "0x13CD690", VA = "0x13CD690")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x2000102")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x40005DA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA838", Offset = "0xBDA838")]
		Unknown,
		[Token(Token = "0x40005DB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA870", Offset = "0xBDA870")]
		InSync,
		[Token(Token = "0x40005DC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA8A8", Offset = "0xBDA8A8")]
		NeedsDownload,
		[Token(Token = "0x40005DD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA8E0", Offset = "0xBDA8E0")]
		RemoteDownloading,
		[Token(Token = "0x40005DE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA918", Offset = "0xBDA918")]
		NeedsUpload,
		[Token(Token = "0x40005DF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA950", Offset = "0xBDA950")]
		LocalUploading,
		[Token(Token = "0x40005E0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA988", Offset = "0xBDA988")]
		InConflict
	}
	[Token(Token = "0x2000103")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x40005E2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA9C0", Offset = "0xBDA9C0")]
		Unknown,
		[Token(Token = "0x40005E3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDA9F8", Offset = "0xBDA9F8")]
		Ok,
		[Token(Token = "0x40005E4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAA30", Offset = "0xBDAA30")]
		BetterVersionStored,
		[Token(Token = "0x40005E5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAA68", Offset = "0xBDAA68")]
		ManualMergeRequired
	}
	[Token(Token = "0x2000104")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x600091D")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x600091E")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x600091F")]
		void Update();

		[Token(Token = "0x6000920")]
		int PeekSizeElements();
	}
	[Token(Token = "0x2000105")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x40005E7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAAA0", Offset = "0xBDAAA0")]
		String,
		[Token(Token = "0x40005E8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAAD8", Offset = "0xBDAAD8")]
		Int,
		[Token(Token = "0x40005E9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAB10", Offset = "0xBDAB10")]
		Double,
		[Token(Token = "0x40005EA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAB48", Offset = "0xBDAB48")]
		Unknown
	}
	[Token(Token = "0x2000106")]
	public enum LaunchType
	{
		[Token(Token = "0x40005EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAB80", Offset = "0xBDAB80")]
		Unknown,
		[Token(Token = "0x40005ED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDABB8", Offset = "0xBDABB8")]
		Normal,
		[Token(Token = "0x40005EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDABF0", Offset = "0xBDABF0")]
		Invite,
		[Token(Token = "0x40005EF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAC28", Offset = "0xBDAC28")]
		Coordinated,
		[Token(Token = "0x40005F0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAC60", Offset = "0xBDAC60")]
		Deeplink
	}
	[Token(Token = "0x2000107")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x40005F2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAC98", Offset = "0xBDAC98")]
		None,
		[Token(Token = "0x40005F3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDACD0", Offset = "0xBDACD0")]
		Friends,
		[Token(Token = "0x40005F4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAD08", Offset = "0xBDAD08")]
		Unknown
	}
	[Token(Token = "0x2000108")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x40005F6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAD40", Offset = "0xBDAD40")]
		Top,
		[Token(Token = "0x40005F7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAD78", Offset = "0xBDAD78")]
		CenteredOnViewer,
		[Token(Token = "0x40005F8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDADB0", Offset = "0xBDADB0")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x40005F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDADE8", Offset = "0xBDADE8")]
		Unknown
	}
	[Token(Token = "0x2000109")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x40005FB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAE20", Offset = "0xBDAE20")]
		Unknown,
		[Token(Token = "0x40005FC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAE58", Offset = "0xBDAE58")]
		Public,
		[Token(Token = "0x40005FD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAE90", Offset = "0xBDAE90")]
		Friends,
		[Token(Token = "0x40005FE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAEC8", Offset = "0xBDAEC8")]
		OnlyMe
	}
	[Token(Token = "0x200010A")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4000600")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAF00", Offset = "0xBDAF00")]
		Success = 1,
		[Token(Token = "0x4000601")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAF38", Offset = "0xBDAF38")]
		Unknown = 0,
		[Token(Token = "0x4000602")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAF70", Offset = "0xBDAF70")]
		NoPackageSet = -1,
		[Token(Token = "0x4000603")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAFA8", Offset = "0xBDAFA8")]
		NoFbConnect = -2,
		[Token(Token = "0x4000604")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDAFE0", Offset = "0xBDAFE0")]
		NoSessionId = -3,
		[Token(Token = "0x4000605")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB018", Offset = "0xBDB018")]
		MissingParameters = -4
	}
	[Token(Token = "0x200010B")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x4000607")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB050", Offset = "0xBDB050")]
		Required,
		[Token(Token = "0x4000608")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB088", Offset = "0xBDB088")]
		High,
		[Token(Token = "0x4000609")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB0C0", Offset = "0xBDB0C0")]
		Medium,
		[Token(Token = "0x400060A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB0F8", Offset = "0xBDB0F8")]
		Low,
		[Token(Token = "0x400060B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB130", Offset = "0xBDB130")]
		Unknown
	}
	[Token(Token = "0x200010C")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x13D1C70", Offset = "0x13D1C70", VA = "0x13D1C70")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x13D1CE8", Offset = "0x13D1CE8", VA = "0x13D1CE8")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x13D1D6C", Offset = "0x13D1D6C", VA = "0x13D1D6C")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x13D1DD8", Offset = "0x13D1DD8", VA = "0x13D1DD8")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x13D1E54", Offset = "0x13D1E54", VA = "0x13D1E54")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x13D1ED0", Offset = "0x13D1ED0", VA = "0x13D1ED0")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x13D1F4C", Offset = "0x13D1F4C", VA = "0x13D1F4C")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x13D1FB8", Offset = "0x13D1FB8", VA = "0x13D1FB8")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x13D203C", Offset = "0x13D203C", VA = "0x13D203C")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x13D20C8", Offset = "0x13D20C8", VA = "0x13D20C8")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x13D214C", Offset = "0x13D214C", VA = "0x13D214C")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x13D21B8", Offset = "0x13D21B8", VA = "0x13D21B8")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x13D2234", Offset = "0x13D2234", VA = "0x13D2234")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x13D0BDC", Offset = "0x13D0BDC", VA = "0x13D0BDC")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x13D22B0", Offset = "0x13D22B0", VA = "0x13D22B0", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x400060E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB168", Offset = "0xBDB168")]
		Unknown,
		[Token(Token = "0x400060F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB1A0", Offset = "0xBDB1A0")]
		Trailing,
		[Token(Token = "0x4000610")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB1D8", Offset = "0xBDB1D8")]
		Swingy
	}
	[Token(Token = "0x200010E")]
	public enum MediaContentType
	{
		[Token(Token = "0x4000612")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB210", Offset = "0xBDB210")]
		Unknown,
		[Token(Token = "0x4000613")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB248", Offset = "0xBDB248")]
		Photo
	}
	[Token(Token = "0x200010F")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x20002CF")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000092")]
		public T Data
		{
			[Token(Token = "0x6000931")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000930")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000932")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x2000110")]
	public class Message
	{
		[Token(Token = "0x20002D0")]
		public delegate void Callback(Message message);

		[Token(Token = "0x20002D1")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4000BDE")]
			Unknown = 0u,
			[Token(Token = "0x4000BDF")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4000BE0")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4000BE1")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4000BE2")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4000BE3")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4000BE4")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4000BE5")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4000BE6")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4000BE7")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4000BE8")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x4000BE9")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4000BEA")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4000BEB")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4000BEC")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4000BED")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4000BEE")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4000BEF")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4000BF0")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4000BF1")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4000BF2")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4000BF3")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x4000BF4")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x4000BF5")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x4000BF6")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x4000BF7")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x4000BF8")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x4000BF9")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4000BFA")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4000BFB")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4000BFC")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4000BFD")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4000BFE")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4000BFF")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4000C00")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4000C01")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4000C02")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4000C03")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4000C04")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x4000C05")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4000C06")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4000C07")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x4000C08")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4000C09")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4000C0A")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4000C0B")]
			IAP_GetViewerPurchasesDurableCache = 1666817579u,
			[Token(Token = "0x4000C0C")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4000C0D")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4000C0E")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4000C0F")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4000C10")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4000C11")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4000C12")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4000C13")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4000C14")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4000C15")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x4000C16")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x4000C17")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x4000C18")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x4000C19")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x4000C1A")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4000C1B")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4000C1C")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4000C1D")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4000C1E")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4000C1F")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4000C20")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4000C21")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4000C22")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4000C23")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4000C24")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4000C25")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x4000C26")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x4000C27")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x4000C28")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x4000C29")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x4000C2A")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4000C2B")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x4000C2C")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4000C2D")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x4000C2E")]
			RichPresence_GetDestinations = 1483681044u,
			[Token(Token = "0x4000C2F")]
			RichPresence_GetNextDestinationArrayPage = 1731624773u,
			[Token(Token = "0x4000C30")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x4000C31")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4000C32")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4000C33")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4000C34")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4000C35")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4000C36")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x4000C37")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x4000C38")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x4000C39")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x4000C3A")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x4000C3B")]
			Room_Join = 382373641u,
			[Token(Token = "0x4000C3C")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4000C3D")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4000C3E")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4000C3F")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4000C40")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4000C41")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4000C42")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4000C43")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4000C44")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4000C45")]
			User_Get = 1808768583u,
			[Token(Token = "0x4000C46")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x4000C47")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x4000C48")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x4000C49")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x4000C4A")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x4000C4B")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x4000C4C")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x4000C4D")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x4000C4E")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x4000C4F")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x4000C50")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x4000C51")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x4000C52")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x4000C53")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x4000C54")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x4000C55")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x4000C56")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x4000C57")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x4000C58")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x4000C59")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x4000C5A")]
			Notification_NetSync_ConnectionStatusChanged = 120882378u,
			[Token(Token = "0x4000C5B")]
			Notification_NetSync_SessionsChanged = 947814198u,
			[Token(Token = "0x4000C5C")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x4000C5D")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x4000C5E")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x4000C5F")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x4000C60")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x4000C61")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x4000C62")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x4000C63")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x4000C64")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x4000C65")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x4000C66")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x4000C67")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x4000C68")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x4000C69")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x20002D2")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDB280", Offset = "0xBDB280")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000093")]
		public MessageType Type
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0x13D274C", Offset = "0x13D274C", VA = "0x13D274C")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000094")]
		public bool IsError
		{
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x13D2754", Offset = "0x13D2754", VA = "0x13D2754")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000095")]
		public ulong RequestID
		{
			[Token(Token = "0x6000937")]
			[Address(RVA = "0x13D2764", Offset = "0x13D2764", VA = "0x13D2764")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000096")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x600097F")]
			[Address(RVA = "0x13D5BC8", Offset = "0x13D5BC8", VA = "0x13D5BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE00EC", Offset = "0xBE00EC")]
			private get
			{
				return null;
			}
			[Token(Token = "0x600097E")]
			[Address(RVA = "0x13D5B70", Offset = "0x13D5B70", VA = "0x13D5B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE00DC", Offset = "0xBE00DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x13D249C", Offset = "0x13D249C", VA = "0x13D249C")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x13D2744", Offset = "0x13D2744", VA = "0x13D2744", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x13D276C", Offset = "0x13D276C", VA = "0x13D276C", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x13D2774", Offset = "0x13D2774", VA = "0x13D2774", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x13D277C", Offset = "0x13D277C", VA = "0x13D277C", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x13D2784", Offset = "0x13D2784", VA = "0x13D2784", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x13D278C", Offset = "0x13D278C", VA = "0x13D278C", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x13D2794", Offset = "0x13D2794", VA = "0x13D2794", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x13D279C", Offset = "0x13D279C", VA = "0x13D279C", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x13D27A4", Offset = "0x13D27A4", VA = "0x13D27A4", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x13D27AC", Offset = "0x13D27AC", VA = "0x13D27AC", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x13D27B4", Offset = "0x13D27B4", VA = "0x13D27B4", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x13D27BC", Offset = "0x13D27BC", VA = "0x13D27BC", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x13D27C4", Offset = "0x13D27C4", VA = "0x13D27C4", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x13D27CC", Offset = "0x13D27CC", VA = "0x13D27CC", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x13D27D4", Offset = "0x13D27D4", VA = "0x13D27D4", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x13D27DC", Offset = "0x13D27DC", VA = "0x13D27DC", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x13D27E4", Offset = "0x13D27E4", VA = "0x13D27E4", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x13D27EC", Offset = "0x13D27EC", VA = "0x13D27EC", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x13D27F4", Offset = "0x13D27F4", VA = "0x13D27F4", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x13D27FC", Offset = "0x13D27FC", VA = "0x13D27FC", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x13D2804", Offset = "0x13D2804", VA = "0x13D2804", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x13D280C", Offset = "0x13D280C", VA = "0x13D280C", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x13D2814", Offset = "0x13D2814", VA = "0x13D2814", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x13D281C", Offset = "0x13D281C", VA = "0x13D281C", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x13D2824", Offset = "0x13D2824", VA = "0x13D2824", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x13D282C", Offset = "0x13D282C", VA = "0x13D282C", Slot = "28")]
		public virtual DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x13D2834", Offset = "0x13D2834", VA = "0x13D2834", Slot = "29")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x13D283C", Offset = "0x13D283C", VA = "0x13D283C", Slot = "30")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x13D2844", Offset = "0x13D2844", VA = "0x13D2844", Slot = "31")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x13D284C", Offset = "0x13D284C", VA = "0x13D284C", Slot = "32")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x13D2854", Offset = "0x13D2854", VA = "0x13D2854", Slot = "33")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x13D285C", Offset = "0x13D285C", VA = "0x13D285C", Slot = "34")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x13D2864", Offset = "0x13D2864", VA = "0x13D2864", Slot = "35")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x13D286C", Offset = "0x13D286C", VA = "0x13D286C", Slot = "36")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x13D2874", Offset = "0x13D2874", VA = "0x13D2874", Slot = "37")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x13D287C", Offset = "0x13D287C", VA = "0x13D287C", Slot = "38")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x13D2884", Offset = "0x13D2884", VA = "0x13D2884", Slot = "39")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x13D288C", Offset = "0x13D288C", VA = "0x13D288C", Slot = "40")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x13D2894", Offset = "0x13D2894", VA = "0x13D2894", Slot = "41")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x13D289C", Offset = "0x13D289C", VA = "0x13D289C", Slot = "42")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x13D28A4", Offset = "0x13D28A4", VA = "0x13D28A4", Slot = "43")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x13D28AC", Offset = "0x13D28AC", VA = "0x13D28AC", Slot = "44")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x13D28B4", Offset = "0x13D28B4", VA = "0x13D28B4", Slot = "45")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x13D28BC", Offset = "0x13D28BC", VA = "0x13D28BC", Slot = "46")]
		public virtual NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x13D28C4", Offset = "0x13D28C4", VA = "0x13D28C4", Slot = "47")]
		public virtual NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x13D28CC", Offset = "0x13D28CC", VA = "0x13D28CC", Slot = "48")]
		public virtual NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x13D28D4", Offset = "0x13D28D4", VA = "0x13D28D4", Slot = "49")]
		public virtual NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x13D28DC", Offset = "0x13D28DC", VA = "0x13D28DC", Slot = "50")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x13D28E4", Offset = "0x13D28E4", VA = "0x13D28E4", Slot = "51")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x13D28EC", Offset = "0x13D28EC", VA = "0x13D28EC", Slot = "52")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x13D28F4", Offset = "0x13D28F4", VA = "0x13D28F4", Slot = "53")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x13D28FC", Offset = "0x13D28FC", VA = "0x13D28FC", Slot = "54")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x13D2904", Offset = "0x13D2904", VA = "0x13D2904", Slot = "55")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x13D290C", Offset = "0x13D290C", VA = "0x13D290C", Slot = "56")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x13D2914", Offset = "0x13D2914", VA = "0x13D2914", Slot = "57")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x13D291C", Offset = "0x13D291C", VA = "0x13D291C", Slot = "58")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x13D2924", Offset = "0x13D2924", VA = "0x13D2924", Slot = "59")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x13D292C", Offset = "0x13D292C", VA = "0x13D292C", Slot = "60")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x13D2934", Offset = "0x13D2934", VA = "0x13D2934", Slot = "61")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x13D293C", Offset = "0x13D293C", VA = "0x13D293C", Slot = "62")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x13D2944", Offset = "0x13D2944", VA = "0x13D2944", Slot = "63")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x13D294C", Offset = "0x13D294C", VA = "0x13D294C", Slot = "64")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x13D2954", Offset = "0x13D2954", VA = "0x13D2954", Slot = "65")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x13D295C", Offset = "0x13D295C", VA = "0x13D295C", Slot = "66")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x13D2964", Offset = "0x13D2964", VA = "0x13D2964", Slot = "67")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x13D296C", Offset = "0x13D296C", VA = "0x13D296C", Slot = "68")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x13D2974", Offset = "0x13D2974", VA = "0x13D2974", Slot = "69")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x13D297C", Offset = "0x13D297C", VA = "0x13D297C", Slot = "70")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x13D2984", Offset = "0x13D2984", VA = "0x13D2984", Slot = "71")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x13D298C", Offset = "0x13D298C", VA = "0x13D298C")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x13CCA5C", Offset = "0x13CCA5C", VA = "0x13CCA5C")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x2000111")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x6000980")]
		[Address(RVA = "0x13D5FAC", Offset = "0x13D5FAC", VA = "0x13D5FAC")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x13D600C", Offset = "0x13D600C", VA = "0x13D600C", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x13D6050", Offset = "0x13D6050", VA = "0x13D6050", Slot = "72")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000112")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x6000983")]
		[Address(RVA = "0x13D3EE0", Offset = "0x13D3EE0", VA = "0x13D3EE0")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x13D617C", Offset = "0x13D617C", VA = "0x13D617C", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x13D61C0", Offset = "0x13D61C0", VA = "0x13D61C0", Slot = "72")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000113")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6000986")]
		[Address(RVA = "0x13D3F40", Offset = "0x13D3F40", VA = "0x13D3F40")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x13D647C", Offset = "0x13D647C", VA = "0x13D647C", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x13D64C0", Offset = "0x13D64C0", VA = "0x13D64C0", Slot = "72")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000114")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6000989")]
		[Address(RVA = "0x13D3FA0", Offset = "0x13D3FA0", VA = "0x13D3FA0")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x13D677C", Offset = "0x13D677C", VA = "0x13D677C", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x13D67C0", Offset = "0x13D67C0", VA = "0x13D67C0", Slot = "72")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000115")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x600098C")]
		[Address(RVA = "0x13D4000", Offset = "0x13D4000", VA = "0x13D4000")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x13D6900", Offset = "0x13D6900", VA = "0x13D6900", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x13D6944", Offset = "0x13D6944", VA = "0x13D6944", Slot = "72")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000116")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x600098F")]
		[Address(RVA = "0x13D4060", Offset = "0x13D4060", VA = "0x13D4060")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x13D6AAC", Offset = "0x13D6AAC", VA = "0x13D6AAC", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x13D6AF0", Offset = "0x13D6AF0", VA = "0x13D6AF0", Slot = "72")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000117")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x6000992")]
		[Address(RVA = "0x13D40C0", Offset = "0x13D40C0", VA = "0x13D40C0")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x13D6D30", Offset = "0x13D6D30", VA = "0x13D6D30", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x13D6D74", Offset = "0x13D6D74", VA = "0x13D6D74", Slot = "72")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000118")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x6000995")]
		[Address(RVA = "0x13D4120", Offset = "0x13D4120", VA = "0x13D4120")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x13D6FE8", Offset = "0x13D6FE8", VA = "0x13D6FE8", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x13D702C", Offset = "0x13D702C", VA = "0x13D702C", Slot = "72")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000119")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6000998")]
		[Address(RVA = "0x13D4180", Offset = "0x13D4180", VA = "0x13D4180")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x13D7190", Offset = "0x13D7190", VA = "0x13D7190", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x13D71D4", Offset = "0x13D71D4", VA = "0x13D71D4", Slot = "72")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011A")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x600099B")]
		[Address(RVA = "0x13D41E0", Offset = "0x13D41E0", VA = "0x13D41E0")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x13D7338", Offset = "0x13D7338", VA = "0x13D7338", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x13D737C", Offset = "0x13D737C", VA = "0x13D737C", Slot = "72")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011B")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x600099E")]
		[Address(RVA = "0x13D4240", Offset = "0x13D4240", VA = "0x13D4240")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x13D74B8", Offset = "0x13D74B8", VA = "0x13D74B8", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x13D74FC", Offset = "0x13D74FC", VA = "0x13D74FC", Slot = "72")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011C")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x13D42A0", Offset = "0x13D42A0", VA = "0x13D42A0")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x13D7664", Offset = "0x13D7664", VA = "0x13D7664", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x13D76A8", Offset = "0x13D76A8", VA = "0x13D76A8", Slot = "72")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011D")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x13D4300", Offset = "0x13D4300", VA = "0x13D4300")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x13D77F4", Offset = "0x13D77F4", VA = "0x13D77F4", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x13D7838", Offset = "0x13D7838", VA = "0x13D7838", Slot = "72")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011E")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x13D795C", Offset = "0x13D795C", VA = "0x13D795C")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x13D79BC", Offset = "0x13D79BC", VA = "0x13D79BC", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x13D7A00", Offset = "0x13D7A00", VA = "0x13D7A00", Slot = "72")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011F")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x13D4360", Offset = "0x13D4360", VA = "0x13D4360")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x13D7C74", Offset = "0x13D7C74", VA = "0x13D7C74", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x13D7CB8", Offset = "0x13D7CB8", VA = "0x13D7CB8", Slot = "72")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000120")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x13D43C0", Offset = "0x13D43C0", VA = "0x13D43C0")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x13D7E48", Offset = "0x13D7E48", VA = "0x13D7E48", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x13D7E8C", Offset = "0x13D7E8C", VA = "0x13D7E8C", Slot = "72")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000121")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x13D4420", Offset = "0x13D4420", VA = "0x13D4420")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x13D8300", Offset = "0x13D8300", VA = "0x13D8300", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x13D8344", Offset = "0x13D8344", VA = "0x13D8344", Slot = "72")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000122")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x13D4480", Offset = "0x13D4480", VA = "0x13D4480")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x13D8000", Offset = "0x13D8000", VA = "0x13D8000", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x13D8044", Offset = "0x13D8044", VA = "0x13D8044", Slot = "72")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000123")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x13D44E0", Offset = "0x13D44E0", VA = "0x13D44E0")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x13D8504", Offset = "0x13D8504", VA = "0x13D8504", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x13D8548", Offset = "0x13D8548", VA = "0x13D8548", Slot = "72")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000124")]
	public class MessageWithDestinationList : Message<DestinationList>
	{
		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x13D4540", Offset = "0x13D4540", VA = "0x13D4540")]
		public MessageWithDestinationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x13D86BC", Offset = "0x13D86BC", VA = "0x13D86BC", Slot = "28")]
		public override DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x13D8700", Offset = "0x13D8700", VA = "0x13D8700", Slot = "72")]
		protected override DestinationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000125")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x13D8BF0", Offset = "0x13D8BF0", VA = "0x13D8BF0")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x13D8C50", Offset = "0x13D8C50", VA = "0x13D8C50", Slot = "29")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x13D8C94", Offset = "0x13D8C94", VA = "0x13D8C94", Slot = "72")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000126")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x13D8F08", Offset = "0x13D8F08", VA = "0x13D8F08")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x13D8F68", Offset = "0x13D8F68", VA = "0x13D8F68", Slot = "30")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x13D8FAC", Offset = "0x13D8FAC", VA = "0x13D8FAC", Slot = "72")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000127")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x13D45A0", Offset = "0x13D45A0", VA = "0x13D45A0")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x13D90E8", Offset = "0x13D90E8", VA = "0x13D90E8", Slot = "31")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x13D912C", Offset = "0x13D912C", VA = "0x13D912C", Slot = "72")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000128")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x13D9268", Offset = "0x13D9268", VA = "0x13D9268")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x13D92C8", Offset = "0x13D92C8", VA = "0x13D92C8", Slot = "32")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x13D930C", Offset = "0x13D930C", VA = "0x13D930C", Slot = "72")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000129")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x13D9444", Offset = "0x13D9444", VA = "0x13D9444")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x13D94A4", Offset = "0x13D94A4", VA = "0x13D94A4", Slot = "33")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x13D94E8", Offset = "0x13D94E8", VA = "0x13D94E8", Slot = "72")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012A")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x13D4600", Offset = "0x13D4600", VA = "0x13D4600")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x13D96E0", Offset = "0x13D96E0", VA = "0x13D96E0", Slot = "35")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x13D9724", Offset = "0x13D9724", VA = "0x13D9724", Slot = "72")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012B")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x13D9A10", Offset = "0x13D9A10", VA = "0x13D9A10")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x13D9A70", Offset = "0x13D9A70", VA = "0x13D9A70", Slot = "36")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x13D9AB4", Offset = "0x13D9AB4", VA = "0x13D9AB4", Slot = "72")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012C")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x13D9D28", Offset = "0x13D9D28", VA = "0x13D9D28")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x13D9D88", Offset = "0x13D9D88", VA = "0x13D9D88", Slot = "37")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x13D9DCC", Offset = "0x13D9DCC", VA = "0x13D9DCC", Slot = "72")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012D")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x13D9EF4", Offset = "0x13D9EF4", VA = "0x13D9EF4")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x13D9F54", Offset = "0x13D9F54", VA = "0x13D9F54", Slot = "38")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x13D9F98", Offset = "0x13D9F98", VA = "0x13D9F98", Slot = "72")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012E")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x13D46C0", Offset = "0x13D46C0", VA = "0x13D46C0")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x13DA0BC", Offset = "0x13DA0BC", VA = "0x13DA0BC", Slot = "39")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x13DA100", Offset = "0x13DA100", VA = "0x13DA100", Slot = "72")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012F")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x13DA274", Offset = "0x13DA274", VA = "0x13DA274")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x13DA2D4", Offset = "0x13DA2D4", VA = "0x13DA2D4", Slot = "40")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x13DA318", Offset = "0x13DA318", VA = "0x13DA318", Slot = "72")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000130")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x13D4720", Offset = "0x13D4720", VA = "0x13D4720")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x13DA464", Offset = "0x13DA464", VA = "0x13DA464", Slot = "41")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x13DA4A8", Offset = "0x13DA4A8", VA = "0x13DA4A8", Slot = "72")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000131")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x13D47E0", Offset = "0x13D47E0", VA = "0x13D47E0")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x13DA83C", Offset = "0x13DA83C", VA = "0x13DA83C", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x13DA880", Offset = "0x13DA880", VA = "0x13DA880", Slot = "72")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000132")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x13D4840", Offset = "0x13D4840", VA = "0x13D4840")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x13DAA9C", Offset = "0x13DAA9C", VA = "0x13DAA9C", Slot = "44")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x13DAAE0", Offset = "0x13DAAE0", VA = "0x13DAAE0", Slot = "72")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000133")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x13D48A0", Offset = "0x13D48A0", VA = "0x13D48A0")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x13DB164", Offset = "0x13DB164", VA = "0x13DB164", Slot = "45")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x13DB1A8", Offset = "0x13DB1A8", VA = "0x13DB1A8", Slot = "72")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000134")]
	public class MessageWithNetSyncConnection : Message<NetSyncConnection>
	{
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x13D4900", Offset = "0x13D4900", VA = "0x13D4900")]
		public MessageWithNetSyncConnection(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x13DB31C", Offset = "0x13DB31C", VA = "0x13DB31C", Slot = "46")]
		public override NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x13DB360", Offset = "0x13DB360", VA = "0x13DB360", Slot = "72")]
		protected override NetSyncConnection GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000135")]
	public class MessageWithNetSyncSessionList : Message<NetSyncSessionList>
	{
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x13DB4CC", Offset = "0x13DB4CC", VA = "0x13DB4CC")]
		public MessageWithNetSyncSessionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x13DB52C", Offset = "0x13DB52C", VA = "0x13DB52C", Slot = "47")]
		public override NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x13DB570", Offset = "0x13DB570", VA = "0x13DB570", Slot = "72")]
		protected override NetSyncSessionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000136")]
	public class MessageWithNetSyncSessionsChangedNotification : Message<NetSyncSessionsChangedNotification>
	{
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x13D4960", Offset = "0x13D4960", VA = "0x13D4960")]
		public MessageWithNetSyncSessionsChangedNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x13DB7E4", Offset = "0x13DB7E4", VA = "0x13DB7E4", Slot = "48")]
		public override NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x13DB828", Offset = "0x13DB828", VA = "0x13DB828", Slot = "72")]
		protected override NetSyncSessionsChangedNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000137")]
	public class MessageWithNetSyncSetSessionPropertyResult : Message<NetSyncSetSessionPropertyResult>
	{
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x13DB988", Offset = "0x13DB988", VA = "0x13DB988")]
		public MessageWithNetSyncSetSessionPropertyResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x13DB9E8", Offset = "0x13DB9E8", VA = "0x13DB9E8", Slot = "49")]
		public override NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x13DBA2C", Offset = "0x13DBA2C", VA = "0x13DBA2C", Slot = "72")]
		protected override NetSyncSetSessionPropertyResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000138")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x13D49C0", Offset = "0x13D49C0", VA = "0x13D49C0")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x13DBCBC", Offset = "0x13DBCBC", VA = "0x13DBCBC", Slot = "50")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x13DBD00", Offset = "0x13DBD00", VA = "0x13DBD00", Slot = "72")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000139")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x13DBE24", Offset = "0x13DBE24", VA = "0x13DBE24")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x13DBE84", Offset = "0x13DBE84", VA = "0x13DBE84", Slot = "51")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x13DBEC8", Offset = "0x13DBEC8", VA = "0x13DBEC8", Slot = "72")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013A")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x13D4A20", Offset = "0x13D4A20", VA = "0x13D4A20")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x13DC3C8", Offset = "0x13DC3C8", VA = "0x13DC3C8", Slot = "51")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x13DC40C", Offset = "0x13DC40C", VA = "0x13DC40C", Slot = "72")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013B")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x13DC200", Offset = "0x13DC200", VA = "0x13DC200")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x13DC260", Offset = "0x13DC260", VA = "0x13DC260", Slot = "52")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x13DC2A4", Offset = "0x13DC2A4", VA = "0x13DC2A4", Slot = "72")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013C")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x13D4A80", Offset = "0x13D4A80", VA = "0x13D4A80")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x13DC4A8", Offset = "0x13DC4A8", VA = "0x13DC4A8", Slot = "53")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x13DC4EC", Offset = "0x13DC4EC", VA = "0x13DC4EC", Slot = "72")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013D")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x13D4AE0", Offset = "0x13D4AE0", VA = "0x13D4AE0")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x13DC690", Offset = "0x13DC690", VA = "0x13DC690", Slot = "54")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x13DC6D4", Offset = "0x13DC6D4", VA = "0x13DC6D4", Slot = "72")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013E")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x13D4B40", Offset = "0x13D4B40", VA = "0x13D4B40")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x13DCC50", Offset = "0x13DCC50", VA = "0x13DCC50", Slot = "55")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x13DCC94", Offset = "0x13DCC94", VA = "0x13DCC94", Slot = "72")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013F")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x13D4BA0", Offset = "0x13D4BA0", VA = "0x13D4BA0")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x13DCF50", Offset = "0x13DCF50", VA = "0x13DCF50", Slot = "56")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x13DCF94", Offset = "0x13DCF94", VA = "0x13DCF94", Slot = "72")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000140")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x13D4C00", Offset = "0x13D4C00", VA = "0x13D4C00")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x13DD0F0", Offset = "0x13DD0F0", VA = "0x13DD0F0", Slot = "57")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x13DD134", Offset = "0x13DD134", VA = "0x13DD134", Slot = "72")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000141")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x13D4C60", Offset = "0x13D4C60", VA = "0x13D4C60")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x13DD3F0", Offset = "0x13DD3F0", VA = "0x13DD3F0", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x13DD434", Offset = "0x13DD434", VA = "0x13DD434", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000142")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x13D4CC0", Offset = "0x13D4CC0", VA = "0x13D4CC0")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x13DDC68", Offset = "0x13DDC68", VA = "0x13DDC68", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x13DDCAC", Offset = "0x13DDCAC", VA = "0x13DDCAC", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000143")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x13D4D20", Offset = "0x13D4D20", VA = "0x13D4D20")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x13DDD48", Offset = "0x13DDD48", VA = "0x13DDD48", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x13DDD8C", Offset = "0x13DDD8C", VA = "0x13DDD8C", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000144")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x13D4D80", Offset = "0x13D4D80", VA = "0x13D4D80")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x13DD968", Offset = "0x13DD968", VA = "0x13DD968", Slot = "61")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x13DD9AC", Offset = "0x13DD9AC", VA = "0x13DD9AC", Slot = "72")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000145")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x13D4DE0", Offset = "0x13D4DE0", VA = "0x13D4DE0")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x13DD4D0", Offset = "0x13DD4D0", VA = "0x13DD4D0", Slot = "59")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x13DD514", Offset = "0x13DD514", VA = "0x13DD514", Slot = "72")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000146")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x13D4E40", Offset = "0x13D4E40", VA = "0x13D4E40")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x13DD668", Offset = "0x13DD668", VA = "0x13DD668", Slot = "60")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x13DD6AC", Offset = "0x13DD6AC", VA = "0x13DD6AC", Slot = "72")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000147")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x13D4EA0", Offset = "0x13D4EA0", VA = "0x13D4EA0")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x13DDE28", Offset = "0x13DDE28", VA = "0x13DDE28", Slot = "62")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x13DDE6C", Offset = "0x13DDE6C", VA = "0x13DDE6C", Slot = "72")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000148")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x13D4F00", Offset = "0x13D4F00", VA = "0x13D4F00")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x13DE0E0", Offset = "0x13DE0E0", VA = "0x13DE0E0", Slot = "63")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x13DE124", Offset = "0x13DE124", VA = "0x13DE124", Slot = "72")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000149")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x13D4F60", Offset = "0x13D4F60", VA = "0x13D4F60")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x13DE248", Offset = "0x13DE248", VA = "0x13DE248", Slot = "64")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x13DE28C", Offset = "0x13DE28C", VA = "0x13DE28C", Slot = "72")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014A")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x13DE2F4", Offset = "0x13DE2F4", VA = "0x13DE2F4")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x13DE354", Offset = "0x13DE354", VA = "0x13DE354", Slot = "65")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x13DE398", Offset = "0x13DE398", VA = "0x13DE398", Slot = "72")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014B")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x13D4FC0", Offset = "0x13D4FC0", VA = "0x13D4FC0")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x13DE4D0", Offset = "0x13DE4D0", VA = "0x13DE4D0", Slot = "66")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x13DE514", Offset = "0x13DE514", VA = "0x13DE514", Slot = "72")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014C")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x13D5020", Offset = "0x13D5020", VA = "0x13D5020")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x13DE648", Offset = "0x13DE648", VA = "0x13DE648", Slot = "67")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x13DE68C", Offset = "0x13DE68C", VA = "0x13DE68C", Slot = "72")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014D")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x13D5080", Offset = "0x13D5080", VA = "0x13D5080")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x13DE880", Offset = "0x13DE880", VA = "0x13DE880", Slot = "68")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x13DE8C4", Offset = "0x13DE8C4", VA = "0x13DE8C4", Slot = "72")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014E")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x13D50E0", Offset = "0x13D50E0", VA = "0x13D50E0")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x13DEB80", Offset = "0x13DEB80", VA = "0x13DEB80", Slot = "69")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x13DEBC4", Offset = "0x13DEBC4", VA = "0x13DEBC4", Slot = "72")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014F")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x13D5140", Offset = "0x13D5140", VA = "0x13D5140")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x13DEE80", Offset = "0x13DEE80", VA = "0x13DEE80", Slot = "70")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x13DEEC4", Offset = "0x13DEEC4", VA = "0x13DEEC4", Slot = "72")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000150")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x13DEFF0", Offset = "0x13DEFF0", VA = "0x13DEFF0")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x13DF050", Offset = "0x13DF050", VA = "0x13DF050", Slot = "71")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x13DF094", Offset = "0x13DF094", VA = "0x13DF094", Slot = "72")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000151")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x13D51A0", Offset = "0x13D51A0", VA = "0x13D51A0")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x13DBB7C", Offset = "0x13DBB7C", VA = "0x13DBB7C", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x13DBBC0", Offset = "0x13DBBC0", VA = "0x13DBBC0", Slot = "72")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000152")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x13D5200", Offset = "0x13D5200", VA = "0x13D5200")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x13DC948", Offset = "0x13DC948", VA = "0x13DC948", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x13DC98C", Offset = "0x13DC98C", VA = "0x13DC98C", Slot = "72")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000153")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x13D4660", Offset = "0x13D4660", VA = "0x13D4660")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x13D9624", Offset = "0x13D9624", VA = "0x13D9624", Slot = "34")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x13D9668", Offset = "0x13D9668", VA = "0x13D9668", Slot = "72")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000154")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x13D5260", Offset = "0x13D5260", VA = "0x13D5260")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x13DAC70", Offset = "0x13DAC70", VA = "0x13DAC70", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x13DACB4", Offset = "0x13DACB4", VA = "0x13DACB4", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000155")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x13D4780", Offset = "0x13D4780", VA = "0x13D4780")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x13DA60C", Offset = "0x13DA60C", VA = "0x13DA60C", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x13DA65C", Offset = "0x13DA65C", VA = "0x13DA65C", Slot = "61")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x13DA6AC", Offset = "0x13DA6AC", VA = "0x13DA6AC", Slot = "72")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000156")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x13D52C0", Offset = "0x13D52C0", VA = "0x13D52C0")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x13D89BC", Offset = "0x13D89BC", VA = "0x13D89BC", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x13D8A00", Offset = "0x13D8A00", VA = "0x13D8A00", Slot = "72")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000157")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x13D5320", Offset = "0x13D5320", VA = "0x13D5320")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x13DCAE8", Offset = "0x13DCAE8", VA = "0x13DCAE8", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x13DCB2C", Offset = "0x13DCB2C", VA = "0x13DCB2C", Slot = "72")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000158")]
	public enum NetSyncConnectionStatus
	{
		[Token(Token = "0x400061A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB290", Offset = "0xBDB290")]
		Unknown,
		[Token(Token = "0x400061B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB2C8", Offset = "0xBDB2C8")]
		Connecting,
		[Token(Token = "0x400061C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB300", Offset = "0xBDB300")]
		Disconnected,
		[Token(Token = "0x400061D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB338", Offset = "0xBDB338")]
		Connected
	}
	[Token(Token = "0x2000159")]
	public enum NetSyncDisconnectReason
	{
		[Token(Token = "0x400061F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB370", Offset = "0xBDB370")]
		Unknown,
		[Token(Token = "0x4000620")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB3A8", Offset = "0xBDB3A8")]
		LocalTerminated,
		[Token(Token = "0x4000621")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB3E0", Offset = "0xBDB3E0")]
		ServerTerminated,
		[Token(Token = "0x4000622")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB418", Offset = "0xBDB418")]
		Failed,
		[Token(Token = "0x4000623")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB450", Offset = "0xBDB450")]
		Lost
	}
	[Token(Token = "0x200015A")]
	public class NetSyncOptions
	{
		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x13E144C", Offset = "0x13E144C", VA = "0x13E144C")]
		public NetSyncOptions()
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x13E14C4", Offset = "0x13E14C4", VA = "0x13E14C4")]
		public void SetVoipGroup(string value)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x13E1540", Offset = "0x13E1540", VA = "0x13E1540")]
		public void SetVoipStreamDefault(NetSyncVoipStreamMode value)
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x13E15BC", Offset = "0x13E15BC", VA = "0x13E15BC")]
		public void SetZoneId(string value)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x13E1638", Offset = "0x13E1638", VA = "0x13E1638")]
		public static explicit operator IntPtr(NetSyncOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x13E1688", Offset = "0x13E1688", VA = "0x13E1688", Slot = "1")]
		~NetSyncOptions()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public enum NetSyncVoipMicSource
	{
		[Token(Token = "0x4000626")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB488", Offset = "0xBDB488")]
		Unknown,
		[Token(Token = "0x4000627")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB4C0", Offset = "0xBDB4C0")]
		None,
		[Token(Token = "0x4000628")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB4F8", Offset = "0xBDB4F8")]
		Internal
	}
	[Token(Token = "0x200015C")]
	public enum NetSyncVoipStreamMode
	{
		[Token(Token = "0x400062A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB530", Offset = "0xBDB530")]
		Unknown,
		[Token(Token = "0x400062B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB568", Offset = "0xBDB568")]
		Ambisonic,
		[Token(Token = "0x400062C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB5A0", Offset = "0xBDB5A0")]
		Mono
	}
	[Token(Token = "0x200015D")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x17000097")]
		public ulong SenderID
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x13E1C30", Offset = "0x13E1C30", VA = "0x13E1C30")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000098")]
		public ulong Size
		{
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0x13E1C9C", Offset = "0x13E1C9C", VA = "0x13E1C9C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000099")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0x13E1CA4", Offset = "0x13E1CA4", VA = "0x13E1CA4")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x13E082C", Offset = "0x13E082C", VA = "0x13E082C")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x13E1ADC", Offset = "0x13E1ADC", VA = "0x13E1ADC")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x13E1D10", Offset = "0x13E1D10", VA = "0x13E1D10", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x13E1D78", Offset = "0x13E1D78", VA = "0x13E1D78", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x4000630")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB5D8", Offset = "0xBDB5D8")]
		Unknown,
		[Token(Token = "0x4000631")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB610", Offset = "0xBDB610")]
		Join,
		[Token(Token = "0x4000632")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB648", Offset = "0xBDB648")]
		Leave,
		[Token(Token = "0x4000633")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB680", Offset = "0xBDB680")]
		Invite,
		[Token(Token = "0x4000634")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB6B8", Offset = "0xBDB6B8")]
		Uninvite
	}
	[Token(Token = "0x200015F")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4000636")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB6F0", Offset = "0xBDB6F0")]
		Unknown,
		[Token(Token = "0x4000637")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB728", Offset = "0xBDB728")]
		Connected,
		[Token(Token = "0x4000638")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB760", Offset = "0xBDB760")]
		Timeout,
		[Token(Token = "0x4000639")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB798", Offset = "0xBDB798")]
		Closed
	}
	[Token(Token = "0x2000160")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x400063B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB7D0", Offset = "0xBDB7D0")]
		Unknown,
		[Token(Token = "0x400063C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB808", Offset = "0xBDB808")]
		Granted,
		[Token(Token = "0x400063D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB840", Offset = "0xBDB840")]
		Denied,
		[Token(Token = "0x400063E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB878", Offset = "0xBDB878")]
		Blocked
	}
	[Token(Token = "0x2000161")]
	public enum PermissionType
	{
		[Token(Token = "0x4000640")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB8B0", Offset = "0xBDB8B0")]
		Unknown,
		[Token(Token = "0x4000641")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB8E8", Offset = "0xBDB8E8")]
		Microphone,
		[Token(Token = "0x4000642")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB920", Offset = "0xBDB920")]
		WriteExternalStorage
	}
	[Token(Token = "0x2000162")]
	public sealed class Core
	{
		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x13CE3B8", Offset = "0x13CE3B8", VA = "0x13CE3B8")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x13CE420", Offset = "0x13CE420", VA = "0x13CE420")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x13CE48C", Offset = "0x13CE48C", VA = "0x13CE48C")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x13CE688", Offset = "0x13CE688", VA = "0x13CE688")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x13CE93C", Offset = "0x13CE93C", VA = "0x13CE93C")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x13CE63C", Offset = "0x13CE63C", VA = "0x13CE63C")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x13CEC54", Offset = "0x13CEC54", VA = "0x13CEC54")]
		public Core()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x1D06DE4", Offset = "0x1D06DE4", VA = "0x1D06DE4")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x1D06EE4", Offset = "0x1D06EE4", VA = "0x1D06EE4")]
		public static void SetLaunchIntentChangedNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000164")]
	public static class Rooms
	{
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x13E3864", Offset = "0x13E3864", VA = "0x13E3864")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x13E3B1C", Offset = "0x13E3B1C", VA = "0x13E3B1C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBE00FC", Offset = "0xBE00FC")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x13E3B98", Offset = "0x13E3B98", VA = "0x13E3B98")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x13E3CCC", Offset = "0x13E3CCC", VA = "0x13E3CCC")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x13E3E2C", Offset = "0x13E3E2C", VA = "0x13E3E2C")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x13E3F48", Offset = "0x13E3F48", VA = "0x13E3F48")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x13E4054", Offset = "0x13E4054", VA = "0x13E4054")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x13E4170", Offset = "0x13E4170", VA = "0x13E4170")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x13E427C", Offset = "0x13E427C", VA = "0x13E427C")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x13E43C4", Offset = "0x13E43C4", VA = "0x13E43C4")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x13E44D0", Offset = "0x13E44D0", VA = "0x13E44D0")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x13E45F4", Offset = "0x13E45F4", VA = "0x13E45F4")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x13E4718", Offset = "0x13E4718", VA = "0x13E4718")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x13E4868", Offset = "0x13E4868", VA = "0x13E4868")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x13E499C", Offset = "0x13E499C", VA = "0x13E499C")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x13E4AB0", Offset = "0x13E4AB0", VA = "0x13E4AB0")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x13E4BCC", Offset = "0x13E4BCC", VA = "0x13E4BCC")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x13E4CF0", Offset = "0x13E4CF0", VA = "0x13E4CF0")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x13E4E14", Offset = "0x13E4E14", VA = "0x13E4E14")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x13E4F30", Offset = "0x13E4F30", VA = "0x13E4F30")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x13E3B20", Offset = "0x13E3B20", VA = "0x13E3B20")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x13E5054", Offset = "0x13E5054", VA = "0x13E5054")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x13E50CC", Offset = "0x13E50CC", VA = "0x13E50CC")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x13E5144", Offset = "0x13E5144", VA = "0x13E5144")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000165")]
	public static class Matchmaking
	{
		[Token(Token = "0x20002D3")]
		public class CustomQuery
		{
			[Token(Token = "0x200030A")]
			public struct Criterion
			{
				[Token(Token = "0x4000D51")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4000D52")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4000D53")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x600118E")]
				[Address(RVA = "0x13D1C38", Offset = "0x13D1C38", VA = "0x13D1C38")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x4000C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x60010E7")]
			[Address(RVA = "0x13D0750", Offset = "0x13D0750", VA = "0x13D0750")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x60010E8")]
			[Address(RVA = "0x13D1C30", Offset = "0x13D1C30", VA = "0x13D1C30")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x13D022C", Offset = "0x13D022C", VA = "0x13D022C")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x13D04E8", Offset = "0x13D04E8", VA = "0x13D04E8")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x13D061C", Offset = "0x13D061C", VA = "0x13D061C")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x13D0A8C", Offset = "0x13D0A8C", VA = "0x13D0A8C")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x13D0C2C", Offset = "0x13D0C2C", VA = "0x13D0C2C")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x13D0D48", Offset = "0x13D0D48", VA = "0x13D0D48")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x13D0E4C", Offset = "0x13D0E4C", VA = "0x13D0E4C")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x13D0F98", Offset = "0x13D0F98", VA = "0x13D0F98")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x13D10E8", Offset = "0x13D10E8", VA = "0x13D10E8")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x13D121C", Offset = "0x13D121C", VA = "0x13D121C")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x13D136C", Offset = "0x13D136C", VA = "0x13D136C")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x13D14A0", Offset = "0x13D14A0", VA = "0x13D14A0")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x13D15F0", Offset = "0x13D15F0", VA = "0x13D15F0")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x13D1724", Offset = "0x13D1724", VA = "0x13D1724")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x13D1874", Offset = "0x13D1874", VA = "0x13D1874")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x13D1980", Offset = "0x13D1980", VA = "0x13D1980")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x13D1AA4", Offset = "0x13D1AA4", VA = "0x13D1AA4")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x13D1BB8", Offset = "0x13D1BB8", VA = "0x13D1BB8")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000166")]
	public static class Net
	{
		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x13E071C", Offset = "0x13E071C", VA = "0x13E071C")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x13E08EC", Offset = "0x13E08EC", VA = "0x13E08EC")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x13E0A38", Offset = "0x13E0A38", VA = "0x13E0A38")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x13E0B24", Offset = "0x13E0B24", VA = "0x13E0B24")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x13E0C10", Offset = "0x13E0C10", VA = "0x13E0C10")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x13E0CFC", Offset = "0x13E0CFC", VA = "0x13E0CFC")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x13E0DEC", Offset = "0x13E0DEC", VA = "0x13E0DEC")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x13E0F24", Offset = "0x13E0F24", VA = "0x13E0F24")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x13E1000", Offset = "0x13E1000", VA = "0x13E1000")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x13E10D8", Offset = "0x13E10D8", VA = "0x13E10D8")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x13E11F4", Offset = "0x13E11F4", VA = "0x13E11F4")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x13E126C", Offset = "0x13E126C", VA = "0x13E126C")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x13E12E4", Offset = "0x13E12E4", VA = "0x13E12E4")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000167")]
	public static class Leaderboards
	{
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x13CF870", Offset = "0x13CF870", VA = "0x13CF870")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x13CF9A0", Offset = "0x13CF9A0", VA = "0x13CF9A0")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x13CFAD0", Offset = "0x13CFAD0", VA = "0x13CFAD0")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x13CFC0C", Offset = "0x13CFC0C", VA = "0x13CFC0C")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x13CFD40", Offset = "0x13CFD40", VA = "0x13CFD40")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000168")]
	public static class Voip
	{
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x1336D6C", Offset = "0x1336D6C", VA = "0x1336D6C")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x1336E58", Offset = "0x1336E58", VA = "0x1336E58")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x1336F44", Offset = "0x1336F44", VA = "0x1336F44")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x1337030", Offset = "0x1337030", VA = "0x1337030")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x1337154", Offset = "0x1337154", VA = "0x1337154")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x1337240", Offset = "0x1337240", VA = "0x1337240")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x133731C", Offset = "0x133731C", VA = "0x133731C")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x13373F8", Offset = "0x13373F8", VA = "0x13373F8")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x13374E8", Offset = "0x13374E8", VA = "0x13374E8")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x13375D8", Offset = "0x13375D8", VA = "0x13375D8")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x13376C8", Offset = "0x13376C8", VA = "0x13376C8")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x1337830", Offset = "0x1337830", VA = "0x1337830")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x133794C", Offset = "0x133794C", VA = "0x133794C")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x13379C4", Offset = "0x13379C4", VA = "0x13379C4")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x1337A3C", Offset = "0x1337A3C", VA = "0x1337A3C")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000169")]
	public static class Achievements
	{
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x1D0564C", Offset = "0x1D0564C", VA = "0x1D0564C")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x1D05824", Offset = "0x1D05824", VA = "0x1D05824")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x1D05A18", Offset = "0x1D05A18", VA = "0x1D05A18")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x1D05B94", Offset = "0x1D05B94", VA = "0x1D05B94")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x1D05D10", Offset = "0x1D05D10", VA = "0x1D05D10")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x1D05F90", Offset = "0x1D05F90", VA = "0x1D05F90")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x1D06210", Offset = "0x1D06210", VA = "0x1D06210")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x1D063D0", Offset = "0x1D063D0", VA = "0x1D063D0")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x1D065F0", Offset = "0x1D065F0", VA = "0x1D065F0")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200016A")]
	public static class Application
	{
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1D06A3C", Offset = "0x1D06A3C", VA = "0x1D06A3C")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x1D06BB8", Offset = "0x1D06BB8", VA = "0x1D06BB8")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x200016B")]
	public static class AssetFile
	{
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x1D0729C", Offset = "0x1D0729C", VA = "0x1D0729C")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x1D07434", Offset = "0x1D07434", VA = "0x1D07434")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1D075CC", Offset = "0x1D075CC", VA = "0x1D075CC")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x1D0778C", Offset = "0x1D0778C", VA = "0x1D0778C")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1D07924", Offset = "0x1D07924", VA = "0x1D07924")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x1D07ABC", Offset = "0x1D07ABC", VA = "0x1D07ABC")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x1D07C7C", Offset = "0x1D07C7C", VA = "0x1D07C7C")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1D07E14", Offset = "0x1D07E14", VA = "0x1D07E14")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x1D07FAC", Offset = "0x1D07FAC", VA = "0x1D07FAC")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1D0816C", Offset = "0x1D0816C", VA = "0x1D0816C")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1D082E8", Offset = "0x1D082E8", VA = "0x1D082E8")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x1D08480", Offset = "0x1D08480", VA = "0x1D08480")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x1D08618", Offset = "0x1D08618", VA = "0x1D08618")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x1D087D8", Offset = "0x1D087D8", VA = "0x1D087D8")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200016C")]
	public static class Avatar
	{
	}
	[Token(Token = "0x200016D")]
	public static class Cal
	{
	}
	[Token(Token = "0x200016E")]
	public static class CloudStorage
	{
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x13CD6A0", Offset = "0x13CD6A0", VA = "0x13CD6A0")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x13CD7C4", Offset = "0x13CD7C4", VA = "0x13CD7C4")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x13CD8E8", Offset = "0x13CD8E8", VA = "0x13CD8E8")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x13CDA04", Offset = "0x13CDA04", VA = "0x13CDA04")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x13CDB28", Offset = "0x13CDB28", VA = "0x13CDB28")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x13CDC44", Offset = "0x13CDC44", VA = "0x13CDC44")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x13CDD68", Offset = "0x13CDD68", VA = "0x13CDD68")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x13CDE9C", Offset = "0x13CDE9C", VA = "0x13CDE9C")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x13CDFD0", Offset = "0x13CDFD0", VA = "0x13CDFD0")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x13CE130", Offset = "0x13CE130", VA = "0x13CE130")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200016F")]
	public static class CloudStorage2
	{
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x13CE2AC", Offset = "0x13CE2AC", VA = "0x13CE2AC")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x2000170")]
	public static class Colocation
	{
	}
	[Token(Token = "0x2000171")]
	public static class Entitlements
	{
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x13CEC60", Offset = "0x13CEC60", VA = "0x13CEC60")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x2000172")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x2000173")]
	public static class HTTP
	{
	}
	[Token(Token = "0x2000174")]
	public static class IAP
	{
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x13CED90", Offset = "0x13CED90", VA = "0x13CED90")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x13CEEA4", Offset = "0x13CEEA4", VA = "0x13CEEA4")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x13CEFD4", Offset = "0x13CEFD4", VA = "0x13CEFD4")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x13CF0E0", Offset = "0x13CF0E0", VA = "0x13CF0E0")]
		public static Request<PurchaseList> GetViewerPurchasesDurableCache()
		{
			return null;
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x13CF1EC", Offset = "0x13CF1EC", VA = "0x13CF1EC")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x13CF350", Offset = "0x13CF350", VA = "0x13CF350")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x13CF4CC", Offset = "0x13CF4CC", VA = "0x13CF4CC")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000175")]
	public static class LanguagePack
	{
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x13CF648", Offset = "0x13CF648", VA = "0x13CF648")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x13CF754", Offset = "0x13CF754", VA = "0x13CF754")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x2000176")]
	public static class Livestreaming
	{
		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x13CFE90", Offset = "0x13CFE90", VA = "0x13CFE90")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x13CFF9C", Offset = "0x13CFF9C", VA = "0x13CFF9C")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x13D00A8", Offset = "0x13D00A8", VA = "0x13D00A8")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x13D01B4", Offset = "0x13D01B4", VA = "0x13D01B4")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000177")]
	public static class Media
	{
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x13D2368", Offset = "0x13D2368", VA = "0x13D2368")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000178")]
	public static class NetSync
	{
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x13E135C", Offset = "0x13E135C", VA = "0x13E135C")]
		public static void SetConnectionStatusChangedNotificationCallback(Message<NetSyncConnection>.Callback callback)
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x13E13D4", Offset = "0x13E13D4", VA = "0x13E13D4")]
		public static void SetSessionsChangedNotificationCallback(Message<NetSyncSessionsChangedNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000179")]
	public static class Notifications
	{
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x13E1740", Offset = "0x13E1740", VA = "0x13E1740")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x13E184C", Offset = "0x13E184C", VA = "0x13E184C")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x13E1960", Offset = "0x13E1960", VA = "0x13E1960")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200017A")]
	public static class Parties
	{
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x13E1E10", Offset = "0x13E1E10", VA = "0x13E1E10")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x13E1F1C", Offset = "0x13E1F1C", VA = "0x13E1F1C")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200017B")]
	public static class RichPresence
	{
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x13E26F8", Offset = "0x13E26F8", VA = "0x13E26F8")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x13E27FC", Offset = "0x13E27FC", VA = "0x13E27FC")]
		public static Request<DestinationList> GetDestinations()
		{
			return null;
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x13E2908", Offset = "0x13E2908", VA = "0x13E2908")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x13E2A98", Offset = "0x13E2A98", VA = "0x13E2A98")]
		public static Request<DestinationList> GetNextDestinationListPage(DestinationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200017C")]
	public static class Users
	{
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x13240B4", Offset = "0x13240B4", VA = "0x13240B4")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x13362BC", Offset = "0x13362BC", VA = "0x13362BC")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x1323FA8", Offset = "0x1323FA8", VA = "0x1323FA8")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x13241D0", Offset = "0x13241D0", VA = "0x13241D0")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x13363C8", Offset = "0x13363C8", VA = "0x13363C8")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x13364D4", Offset = "0x13364D4", VA = "0x13364D4")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x133661C", Offset = "0x133661C", VA = "0x133661C")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x1336738", Offset = "0x1336738", VA = "0x1336738")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x1323E9C", Offset = "0x1323E9C", VA = "0x1323E9C")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x1336844", Offset = "0x1336844", VA = "0x1336844")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x1336960", Offset = "0x1336960", VA = "0x1336960")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1336A74", Offset = "0x1336A74", VA = "0x1336A74")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1336BF0", Offset = "0x1336BF0", VA = "0x1336BF0")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200017D")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4000646")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB958", Offset = "0xBDB958")]
		Success = 0,
		[Token(Token = "0x4000647")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB990", Offset = "0xBDB990")]
		Uninitialized = -1,
		[Token(Token = "0x4000648")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDB9C8", Offset = "0xBDB9C8")]
		PreLoaded = -2,
		[Token(Token = "0x4000649")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBA00", Offset = "0xBDBA00")]
		FileInvalid = -3,
		[Token(Token = "0x400064A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBA38", Offset = "0xBDBA38")]
		SignatureInvalid = -4,
		[Token(Token = "0x400064B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBA70", Offset = "0xBDBA70")]
		UnableToVerify = -5,
		[Token(Token = "0x400064C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBAA8", Offset = "0xBDBAA8")]
		VersionMismatch = -6,
		[Token(Token = "0x400064D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBAE0", Offset = "0xBDBAE0")]
		Unknown = -7,
		[Token(Token = "0x400064E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBB18", Offset = "0xBDBB18")]
		InvalidCredentials = -8,
		[Token(Token = "0x400064F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBB50", Offset = "0xBDBB50")]
		NotEntitled = -9
	}
	[Token(Token = "0x200017E")]
	public static class PlatformInternal
	{
		[Token(Token = "0x20002D4")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4000C6D")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4000C6E")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4000C6F")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4000C70")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4000C71")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x4000C72")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x4000C73")]
			Colocation_GetCurrentMapUuid = 878018226u,
			[Token(Token = "0x4000C74")]
			Colocation_RequestMap = 840263277u,
			[Token(Token = "0x4000C75")]
			Colocation_ShareMap = 409847005u,
			[Token(Token = "0x4000C76")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4000C77")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4000C78")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4000C79")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4000C7A")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4000C7B")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4000C7C")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4000C7D")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x4000C7E")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x4000C7F")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x4000C80")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x4000C81")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x4000C82")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x4000C83")]
			NetSync_Connect = 1684899167u,
			[Token(Token = "0x4000C84")]
			NetSync_Disconnect = 359268021u,
			[Token(Token = "0x4000C85")]
			NetSync_GetSessions = 1859521077u,
			[Token(Token = "0x4000C86")]
			NetSync_SetVoipGroup = 1477614734u,
			[Token(Token = "0x4000C87")]
			NetSync_SetVoipMicSource = 855832432u,
			[Token(Token = "0x4000C88")]
			NetSync_SetVoipSessionMuted = 1434844938u,
			[Token(Token = "0x4000C89")]
			NetSync_SetVoipStreamMode = 1742839095u,
			[Token(Token = "0x4000C8A")]
			Party_Create = 450042703u,
			[Token(Token = "0x4000C8B")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x4000C8C")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4000C8D")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4000C8E")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4000C8F")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4000C90")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4000C91")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4000C92")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4000C93")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4000C94")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x4000C95")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x4000C96")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x4000C97")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x4000C98")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x4000C99")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x4000C9A")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4000C9B")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4000C9C")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4000C9D")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4000C9E")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4000C9F")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4000CA0")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4000CA1")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4000CA2")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x20002D5")]
		public static class HTTP
		{
			[Token(Token = "0x60010E9")]
			[Address(RVA = "0x13E2124", Offset = "0x13E2124", VA = "0x13E2124")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x20002D6")]
		public static class Users
		{
			[Token(Token = "0x60010EA")]
			[Address(RVA = "0x13E219C", Offset = "0x13E219C", VA = "0x13E219C")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x13E1F94", Offset = "0x13E1F94", VA = "0x13E1F94")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x13D5380", Offset = "0x13D5380", VA = "0x13D5380")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x13E1FF4", Offset = "0x13E1FF4", VA = "0x13E1FF4")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x200017F")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x1700009A")]
		public static string AppID
		{
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0x13CEC34", Offset = "0x13CEC34", VA = "0x13CEC34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0x13E246C", Offset = "0x13E246C", VA = "0x13E246C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public static string MobileAppID
		{
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0x13CEC14", Offset = "0x13CEC14", VA = "0x13CEC14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x13E249C", Offset = "0x13E249C", VA = "0x13E249C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0x13CE91C", Offset = "0x13CE91C", VA = "0x13CE91C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0x13E24CC", Offset = "0x13E24CC", VA = "0x13E24CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0x13E2340", Offset = "0x13E2340", VA = "0x13E2340")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0x13E24FC", Offset = "0x13E24FC", VA = "0x13E24FC")]
			set
			{
			}
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x13E2554", Offset = "0x13E2554", VA = "0x13E2554")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Message<T>.Callback callback_;

		[Token(Token = "0x6000B0F")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000B10")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000B11")]
		public override void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class Request
	{
		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Message.Callback callback_;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDBBB8", Offset = "0xBDBBB8")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x1700009E")]
		public ulong RequestID
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x13E25CC", Offset = "0x13E25CC", VA = "0x13E25CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0134", Offset = "0xBE0134")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x13E25D4", Offset = "0x13E25D4", VA = "0x13E25D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0144", Offset = "0xBE0144")]
			set
			{
			}
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x13CED64", Offset = "0x13CED64", VA = "0x13CED64")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x13E25DC", Offset = "0x13E25DC", VA = "0x13E25DC")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x13E2664", Offset = "0x13E2664", VA = "0x13E2664", Slot = "4")]
		public virtual void HandleMessage(Message msg)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x13CD5AC", Offset = "0x13CD5AC", VA = "0x13CD5AC")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x2000182")]
	public enum RichPresenceExtraContext
	{
		[Token(Token = "0x4000658")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBBC8", Offset = "0xBDBBC8")]
		Unknown,
		[Token(Token = "0x4000659")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBC00", Offset = "0xBDBC00")]
		None,
		[Token(Token = "0x400065A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBC38", Offset = "0xBDBC38")]
		CurrentCapacity,
		[Token(Token = "0x400065B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBC70", Offset = "0xBDBC70")]
		StartedAgo,
		[Token(Token = "0x400065C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBCA8", Offset = "0xBDBCA8")]
		EndingIn,
		[Token(Token = "0x400065D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBCE0", Offset = "0xBDBCE0")]
		LookingForAMatch
	}
	[Token(Token = "0x2000183")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x13E2C14", Offset = "0x13E2C14", VA = "0x13E2C14")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x13E2C8C", Offset = "0x13E2C8C", VA = "0x13E2C8C")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x13E2D08", Offset = "0x13E2D08", VA = "0x13E2D08")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x13E2D8C", Offset = "0x13E2D8C", VA = "0x13E2D8C")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x13E2DF8", Offset = "0x13E2DF8", VA = "0x13E2DF8")]
		public void SetCurrentCapacity(uint value)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x13E2E74", Offset = "0x13E2E74", VA = "0x13E2E74")]
		public void SetDeeplinkMessageOverride(string value)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x13E2EF0", Offset = "0x13E2EF0", VA = "0x13E2EF0")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x13E2F6C", Offset = "0x13E2F6C", VA = "0x13E2F6C")]
		public void SetExtraContext(RichPresenceExtraContext value)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x13E2FE8", Offset = "0x13E2FE8", VA = "0x13E2FE8")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x13E3064", Offset = "0x13E3064", VA = "0x13E3064")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x13E30E0", Offset = "0x13E30E0", VA = "0x13E30E0")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x13E315C", Offset = "0x13E315C", VA = "0x13E315C")]
		public void SetMaxCapacity(uint value)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x13E31D8", Offset = "0x13E31D8", VA = "0x13E31D8")]
		public void SetStartTime(DateTime value)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x13E2A48", Offset = "0x13E2A48", VA = "0x13E2A48")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x13E3254", Offset = "0x13E3254", VA = "0x13E3254", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x4000660")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBD18", Offset = "0xBDBD18")]
		None,
		[Token(Token = "0x4000661")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBD50", Offset = "0xBDBD50")]
		Everyone,
		[Token(Token = "0x4000662")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBD88", Offset = "0xBDBD88")]
		FriendsOfMembers,
		[Token(Token = "0x4000663")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBDC0", Offset = "0xBDBDC0")]
		FriendsOfOwner,
		[Token(Token = "0x4000664")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBDF8", Offset = "0xBDBDF8")]
		InvitedUsers,
		[Token(Token = "0x4000665")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBE30", Offset = "0xBDBE30")]
		Unknown
	}
	[Token(Token = "0x2000185")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4000667")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBE68", Offset = "0xBDBE68")]
		Unknown,
		[Token(Token = "0x4000668")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBEA0", Offset = "0xBDBEA0")]
		AreIn,
		[Token(Token = "0x4000669")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBED8", Offset = "0xBDBED8")]
		AreKicked,
		[Token(Token = "0x400066A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBF10", Offset = "0xBDBF10")]
		CanJoin,
		[Token(Token = "0x400066B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBF48", Offset = "0xBDBF48")]
		IsFull,
		[Token(Token = "0x400066C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBF80", Offset = "0xBDBF80")]
		NoViewer,
		[Token(Token = "0x400066D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBFB8", Offset = "0xBDBFB8")]
		PolicyPrevents
	}
	[Token(Token = "0x2000186")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x400066F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDBFF0", Offset = "0xBDBFF0")]
		Unknown,
		[Token(Token = "0x4000670")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC028", Offset = "0xBDC028")]
		Lock,
		[Token(Token = "0x4000671")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC060", Offset = "0xBDC060")]
		Unlock
	}
	[Token(Token = "0x2000187")]
	public class RoomOptions
	{
		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x13E330C", Offset = "0x13E330C", VA = "0x13E330C")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x13E3384", Offset = "0x13E3384", VA = "0x13E3384")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x13E3408", Offset = "0x13E3408", VA = "0x13E3408")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x13E3474", Offset = "0x13E3474", VA = "0x13E3474")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x13E34F0", Offset = "0x13E34F0", VA = "0x13E34F0")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x13E356C", Offset = "0x13E356C", VA = "0x13E356C")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x13E35E8", Offset = "0x13E35E8", VA = "0x13E35E8")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x13E3664", Offset = "0x13E3664", VA = "0x13E3664")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x13E36E0", Offset = "0x13E36E0", VA = "0x13E36E0")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x13E375C", Offset = "0x13E375C", VA = "0x13E375C")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x13E37AC", Offset = "0x13E37AC", VA = "0x13E37AC", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public enum RoomType
	{
		[Token(Token = "0x4000674")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC098", Offset = "0xBDC098")]
		Unknown,
		[Token(Token = "0x4000675")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC0D0", Offset = "0xBDC0D0")]
		Matchmaking,
		[Token(Token = "0x4000676")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC108", Offset = "0xBDC108")]
		Moderated,
		[Token(Token = "0x4000677")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC140", Offset = "0xBDC140")]
		Private,
		[Token(Token = "0x4000678")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC178", Offset = "0xBDC178")]
		Solo
	}
	[Token(Token = "0x2000189")]
	public enum SdkAccountType
	{
		[Token(Token = "0x400067A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC1B0", Offset = "0xBDC1B0")]
		Unknown,
		[Token(Token = "0x400067B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC1E8", Offset = "0xBDC1E8")]
		Oculus,
		[Token(Token = "0x400067C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC220", Offset = "0xBDC220")]
		FacebookGameroom
	}
	[Token(Token = "0x200018A")]
	public enum SendPolicy
	{
		[Token(Token = "0x400067E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC258", Offset = "0xBDC258")]
		Unreliable,
		[Token(Token = "0x400067F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC290", Offset = "0xBDC290")]
		Reliable,
		[Token(Token = "0x4000680")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC2C8", Offset = "0xBDC2C8")]
		Unknown
	}
	[Token(Token = "0x200018B")]
	public enum ServiceProvider
	{
		[Token(Token = "0x4000682")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC300", Offset = "0xBDC300")]
		Unknown,
		[Token(Token = "0x4000683")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC338", Offset = "0xBDC338")]
		Dropbox,
		[Token(Token = "0x4000684")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC370", Offset = "0xBDC370")]
		Facebook,
		[Token(Token = "0x4000685")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC3A8", Offset = "0xBDC3A8")]
		Google,
		[Token(Token = "0x4000686")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC3E0", Offset = "0xBDC3E0")]
		Instagram,
		[Token(Token = "0x4000687")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC418", Offset = "0xBDC418")]
		RemoteMedia
	}
	[Token(Token = "0x200018C")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x4000689")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC450", Offset = "0xBDC450")]
		Unknown,
		[Token(Token = "0x400068A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC488", Offset = "0xBDC488")]
		Shared,
		[Token(Token = "0x400068B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC4C0", Offset = "0xBDC4C0")]
		Canceled
	}
	[Token(Token = "0x200018D")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBD8684", Offset = "0xBD8684")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x1335910", Offset = "0x1335910", VA = "0x1335910")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x1335A50", Offset = "0x1335A50", VA = "0x1335A50")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x1335B14", Offset = "0x1335B14", VA = "0x1335B14")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x1700009F")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0x1335E58", Offset = "0x1335E58", VA = "0x1335E58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0x1335EA8", Offset = "0x1335EA8", VA = "0x1335EA8")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x1335EAC", Offset = "0x1335EAC", VA = "0x1335EAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0x1335EFC", Offset = "0x1335EFC", VA = "0x1335EFC")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x1335F00", Offset = "0x1335F00", VA = "0x1335F00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x1335F50", Offset = "0x1335F50", VA = "0x1335F50")]
			set
			{
			}
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x1335F54", Offset = "0x1335F54", VA = "0x1335F54")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x400068D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC4F8", Offset = "0xBDC4F8")]
		Unknown,
		[Token(Token = "0x400068E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC530", Offset = "0xBDC530")]
		Unavailable,
		[Token(Token = "0x400068F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC568", Offset = "0xBDC568")]
		Suppressed,
		[Token(Token = "0x4000690")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC5A0", Offset = "0xBDC5A0")]
		Active
	}
	[Token(Token = "0x2000190")]
	public enum TimeWindow
	{
		[Token(Token = "0x4000692")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC5D8", Offset = "0xBDC5D8")]
		Unknown,
		[Token(Token = "0x4000693")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC610", Offset = "0xBDC610")]
		OneHour,
		[Token(Token = "0x4000694")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC648", Offset = "0xBDC648")]
		OneDay,
		[Token(Token = "0x4000695")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC680", Offset = "0xBDC680")]
		OneWeek,
		[Token(Token = "0x4000696")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC6B8", Offset = "0xBDC6B8")]
		ThirtyDays,
		[Token(Token = "0x4000697")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC6F0", Offset = "0xBDC6F0")]
		NinetyDays
	}
	[Token(Token = "0x2000191")]
	public class UserOptions
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x1335F5C", Offset = "0x1335F5C", VA = "0x1335F5C")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x1335FD4", Offset = "0x1335FD4", VA = "0x1335FD4")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x1336050", Offset = "0x1336050", VA = "0x1336050")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x13360CC", Offset = "0x13360CC", VA = "0x13360CC")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1336138", Offset = "0x1336138", VA = "0x1336138")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x13361B4", Offset = "0x13361B4", VA = "0x13361B4")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1336204", Offset = "0x1336204", VA = "0x1336204", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public enum UserOrdering
	{
		[Token(Token = "0x400069A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC728", Offset = "0xBDC728")]
		Unknown,
		[Token(Token = "0x400069B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC760", Offset = "0xBDC760")]
		None,
		[Token(Token = "0x400069C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC798", Offset = "0xBDC798")]
		PresenceAlphabetical
	}
	[Token(Token = "0x2000193")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x400069E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC7D0", Offset = "0xBDC7D0")]
		Unknown,
		[Token(Token = "0x400069F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC808", Offset = "0xBDC808")]
		Online,
		[Token(Token = "0x40006A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC840", Offset = "0xBDC840")]
		Offline
	}
	[Token(Token = "0x2000194")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x20002D8")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x4000CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4000CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x60010EF")]
			[Address(RVA = "0x1338280", Offset = "0x1338280", VA = "0x1338280")]
			private void Awake()
			{
			}

			[Token(Token = "0x60010F0")]
			[Address(RVA = "0x1338340", Offset = "0x1338340", VA = "0x1338340")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x60010F1")]
			[Address(RVA = "0x1338838", Offset = "0x1338838", VA = "0x1338838")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x170000A2")]
		public ulong senderID
		{
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0x1337AB4", Offset = "0x1337AB4", VA = "0x1337AB4")]
			set
			{
			}
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x1337B78", Offset = "0x1337B78", VA = "0x1337B78")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x1337B7C", Offset = "0x1337B7C", VA = "0x1337B7C")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x1337BB8", Offset = "0x1337BB8", VA = "0x1337BB8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x1337E7C", Offset = "0x1337E7C", VA = "0x1337E7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x1337E98", Offset = "0x1337E98", VA = "0x1337E98", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x1337F08", Offset = "0x1337F08", VA = "0x1337F08")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x1337F90", Offset = "0x1337F90", VA = "0x1337F90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x1338274", Offset = "0x1338274", VA = "0x1338274")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public enum VoipBitrate
	{
		[Token(Token = "0x40006A8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC878", Offset = "0xBDC878")]
		Unknown,
		[Token(Token = "0x40006A9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC8B0", Offset = "0xBDC8B0")]
		B16000,
		[Token(Token = "0x40006AA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC8E8", Offset = "0xBDC8E8")]
		B24000,
		[Token(Token = "0x40006AB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC920", Offset = "0xBDC920")]
		B32000,
		[Token(Token = "0x40006AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC958", Offset = "0xBDC958")]
		B64000,
		[Token(Token = "0x40006AD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC990", Offset = "0xBDC990")]
		B96000,
		[Token(Token = "0x40006AE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDC9C8", Offset = "0xBDC9C8")]
		B128000
	}
	[Token(Token = "0x2000196")]
	public enum VoipDtxState
	{
		[Token(Token = "0x40006B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDCA00", Offset = "0xBDCA00")]
		Unknown,
		[Token(Token = "0x40006B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDCA38", Offset = "0xBDCA38")]
		Enabled,
		[Token(Token = "0x40006B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDCA70", Offset = "0xBDCA70")]
		Disabled
	}
	[Token(Token = "0x2000197")]
	public enum VoipMuteState
	{
		[Token(Token = "0x40006B4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDCAA8", Offset = "0xBDCAA8")]
		Unknown,
		[Token(Token = "0x40006B5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDCAE0", Offset = "0xBDCAE0")]
		Muted,
		[Token(Token = "0x40006B6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDCB18", Offset = "0xBDCB18")]
		Unmuted
	}
	[Token(Token = "0x2000198")]
	public class VoipOptions
	{
		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x1338840", Offset = "0x1338840", VA = "0x1338840")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x13388B8", Offset = "0x13388B8", VA = "0x13388B8")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1338934", Offset = "0x1338934", VA = "0x1338934")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x13377E0", Offset = "0x13377E0", VA = "0x13377E0")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x13389B0", Offset = "0x13389B0", VA = "0x13389B0", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1338A68", Offset = "0x1338A68", VA = "0x1338A68", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x1338B28", Offset = "0x1338B28", VA = "0x1338B28", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x1338B30", Offset = "0x1338B30", VA = "0x1338B30", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x1338BD0", Offset = "0x1338BD0", VA = "0x1338BD0", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x1337F00", Offset = "0x1337F00", VA = "0x1337F00")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x40006BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDCB50", Offset = "0xBDCB50")]
		Unknown,
		[Token(Token = "0x40006BB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDCB88", Offset = "0xBDCB88")]
		HZ24000,
		[Token(Token = "0x40006BC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDCBC0", Offset = "0xBDCBC0")]
		HZ44100,
		[Token(Token = "0x40006BD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBDCBF8", Offset = "0xBDCBF8")]
		HZ48000
	}
	[Token(Token = "0x200019B")]
	public class WindowsPlatform
	{
		[Token(Token = "0x20002D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xBD8698", Offset = "0xBD8698")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x1338BD4", Offset = "0x1338BD4", VA = "0x1338BD4")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x1338CAC", Offset = "0x1338CAC", VA = "0x1338CAC")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x1338CEC", Offset = "0x1338CEC", VA = "0x1338CEC")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x1338DD0", Offset = "0x1338DD0", VA = "0x1338DD0")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x1338EE4", Offset = "0x1338EE4", VA = "0x1338EE4")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x200019C")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x13D60EC", Offset = "0x13D60EC", VA = "0x13D60EC")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class AchievementDefinition
	{
		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x13DF1CC", Offset = "0x13DF1CC", VA = "0x13DF1CC")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x13D625C", Offset = "0x13D625C", VA = "0x13D625C")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class AchievementProgress
	{
		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x13DF290", Offset = "0x13DF290", VA = "0x13DF290")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x13D655C", Offset = "0x13D655C", VA = "0x13D655C")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class AchievementUpdate
	{
		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x13D685C", Offset = "0x13D685C", VA = "0x13D685C")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class ApplicationVersion
	{
		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x13D69E0", Offset = "0x13D69E0", VA = "0x13D69E0")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class AssetDetails
	{
		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCC30", Offset = "0xBDCC30")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string Metadata;

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x13D6B8C", Offset = "0x13D6B8C", VA = "0x13D6B8C")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x13D6E10", Offset = "0x13D6E10", VA = "0x13D6E10")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x13D70C8", Offset = "0x13D70C8", VA = "0x13D70C8")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x13D7270", Offset = "0x13D7270", VA = "0x13D7270")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x13D7418", Offset = "0x13D7418", VA = "0x13D7418")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x13D7598", Offset = "0x13D7598", VA = "0x13D7598")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x13D7744", Offset = "0x13D7744", VA = "0x13D7744")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x13D78D4", Offset = "0x13D78D4", VA = "0x13D78D4")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x13DF43C", Offset = "0x13DF43C", VA = "0x13DF43C")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x13D7A9C", Offset = "0x13D7A9C", VA = "0x13D7A9C")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x13D7D54", Offset = "0x13D7D54", VA = "0x13D7D54")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class CloudStorageData
	{
		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x13D7F28", Offset = "0x13D7F28", VA = "0x13D7F28")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x13D83E0", Offset = "0x13D83E0", VA = "0x13D83E0")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x13D80E0", Offset = "0x13D80E0", VA = "0x13D80E0")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x13D85E4", Offset = "0x13D85E4", VA = "0x13D85E4")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBD80A8", Offset = "0xBD80A8")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x170000A3")]
		public int Count
		{
			[Token(Token = "0x6000B72")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A4")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6000B73")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A5")]
		public T Item
		{
			[Token(Token = "0x6000B75")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000B76")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBE2244", Offset = "0xBE2244")]
		public List<T> Data
		{
			[Token(Token = "0x6000B81")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000B82")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A8")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6000B83")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A9")]
		public string NextUrl
		{
			[Token(Token = "0x6000B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		public string PreviousUrl
		{
			[Token(Token = "0x6000B85")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B74")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000B77")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000B78")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B79")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7A")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000B7B")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B7C")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000B7D")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7E")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000B7F")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6000B80")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B86")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class Destination
	{
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApiName;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DisplayName;

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x13DF4DC", Offset = "0x13DF4DC", VA = "0x13DF4DC")]
		public Destination(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class DestinationList : DeserializableList<Destination>
	{
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x13D879C", Offset = "0x13D879C", VA = "0x13D879C")]
		public DestinationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class Error
	{
		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x13D26F8", Offset = "0x13D26F8", VA = "0x13D26F8")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x13D8A9C", Offset = "0x13D8A9C", VA = "0x13D8A9C")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class InstalledApplication
	{
		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x13DF5A4", Offset = "0x13DF5A4", VA = "0x13DF5A4")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x13D8D30", Offset = "0x13D8D30", VA = "0x13D8D30")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x13DF374", Offset = "0x13DF374", VA = "0x13DF374")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x13D9048", Offset = "0x13D9048", VA = "0x13D9048")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class LaunchDetails
	{
		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DestinationApiName;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchSource;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCC68", Offset = "0xBDCC68")]
		public readonly UserList Users;

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x13DF698", Offset = "0x13DF698", VA = "0x13DF698")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x13D91C8", Offset = "0x13D91C8", VA = "0x13D91C8")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x13D93A8", Offset = "0x13D93A8", VA = "0x13D93A8")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x13D9584", Offset = "0x13D9584", VA = "0x13D9584")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x13DF7F8", Offset = "0x13DF7F8", VA = "0x13DF7F8")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x13D97C0", Offset = "0x13D97C0", VA = "0x13D97C0")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class LinkedAccount
	{
		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x13DF8F8", Offset = "0x13DF8F8", VA = "0x13DF8F8")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x13D9B50", Offset = "0x13D9B50", VA = "0x13D9B50")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x13D9E68", Offset = "0x13D9E68", VA = "0x13D9E68")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x13DA034", Offset = "0x13DA034", VA = "0x13DA034")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x13DA19C", Offset = "0x13DA19C", VA = "0x13DA19C")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x13DA3B4", Offset = "0x13DA3B4", VA = "0x13DA3B4")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x13DA544", Offset = "0x13DA544", VA = "0x13DA544")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x13DFB8C", Offset = "0x13DFB8C", VA = "0x13DFB8C")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x13DF9B4", Offset = "0x13DF9B4", VA = "0x13DF9B4")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x13DA748", Offset = "0x13DA748", VA = "0x13DA748")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCCA0", Offset = "0xBDCCA0")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x13DA91C", Offset = "0x13DA91C", VA = "0x13DA91C")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x13DAB7C", Offset = "0x13DAB7C", VA = "0x13DAB7C")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCCD8", Offset = "0xBDCCD8")]
		public readonly User User;

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x13DFC60", Offset = "0x13DFC60", VA = "0x13DFC60")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x13DFD70", Offset = "0x13DFD70", VA = "0x13DFD70")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double SkillMean;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double SkillStandardDeviation;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly uint WinCount;

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x13DB244", Offset = "0x13DB244", VA = "0x13DB244")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class NetSyncConnection
	{
		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncDisconnectReason DisconnectReason;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly NetSyncConnectionStatus Status;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string ZoneId;

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x13DB3FC", Offset = "0x13DB3FC", VA = "0x13DB3FC")]
		public NetSyncConnection(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class NetSyncSession
	{
		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool Muted;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong UserId;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VoipGroup;

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x13DFF48", Offset = "0x13DFF48", VA = "0x13DFF48")]
		public NetSyncSession(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class NetSyncSessionList : DeserializableList<NetSyncSession>
	{
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x13DB60C", Offset = "0x13DB60C", VA = "0x13DB60C")]
		public NetSyncSessionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class NetSyncSessionsChangedNotification
	{
		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncSessionList Sessions;

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x13DB8C4", Offset = "0x13DB8C4", VA = "0x13DB8C4")]
		public NetSyncSessionsChangedNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class NetSyncSetSessionPropertyResult
	{
		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly NetSyncSession Session;

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x13DBAC8", Offset = "0x13DBAC8", VA = "0x13DBAC8")]
		public NetSyncSetSessionPropertyResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class NetworkingPeer
	{
		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCD10", Offset = "0xBDCD10")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCD20", Offset = "0xBDCD20")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x170000AB")]
		public ulong ID
		{
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0x13E001C", Offset = "0x13E001C", VA = "0x13E001C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0154", Offset = "0xBE0154")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x13E0024", Offset = "0x13E0024", VA = "0x13E0024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0164", Offset = "0xBE0164")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x13E002C", Offset = "0x13E002C", VA = "0x13E002C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0174", Offset = "0xBE0174")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x13E0034", Offset = "0x13E0034", VA = "0x13E0034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0184", Offset = "0xBE0184")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x13DBC80", Offset = "0x13DBC80", VA = "0x13DBC80")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class OrgScopedID
	{
		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x13DBD9C", Offset = "0x13DBD9C", VA = "0x13DBD9C")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class Party
	{
		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCD30", Offset = "0xBDCD30")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCD68", Offset = "0xBDCD68")]
		public readonly User Leader;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCDA0", Offset = "0xBDCDA0")]
		public readonly Room Room;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCDD8", Offset = "0xBDCDD8")]
		public readonly UserList Users;

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x13DBF64", Offset = "0x13DBF64", VA = "0x13DBF64")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class PartyID
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x13DC340", Offset = "0x13DC340", VA = "0x13DC340")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong PartyId;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderId;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserAlias;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong UserId;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UserName;

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x13DC588", Offset = "0x13DC588", VA = "0x13DC588")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class Pid
	{
		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x13E003C", Offset = "0x13E003C", VA = "0x13E003C")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x13DC770", Offset = "0x13DC770", VA = "0x13DC770")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class PingResult
	{
		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCE10", Offset = "0xBDCE10")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x170000AD")]
		public ulong ID
		{
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x13E00CC", Offset = "0x13E00CC", VA = "0x13E00CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0194", Offset = "0xBE0194")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x13E00D4", Offset = "0x13E00D4", VA = "0x13E00D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE01A4", Offset = "0xBE01A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x13E00DC", Offset = "0x13E00DC", VA = "0x13E00DC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000AF")]
		public bool IsTimeout
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x13E0144", Offset = "0x13E0144", VA = "0x13E0144")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x13DCAA8", Offset = "0x13DCAA8", VA = "0x13DCAA8")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class PlatformInitialize
	{
		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x13DCBC8", Offset = "0x13DCBC8", VA = "0x13DCBC8")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class Product
	{
		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x13E0190", Offset = "0x13E0190", VA = "0x13E0190")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x13DCD30", Offset = "0x13DCD30", VA = "0x13DCD30")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class Purchase
	{
		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x13DD030", Offset = "0x13DD030", VA = "0x13DD030")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x13DD1D0", Offset = "0x13DD1D0", VA = "0x13DD1D0")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class Room
	{
		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCE20", Offset = "0xBDCE20")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCE58", Offset = "0xBDCE58")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCE90", Offset = "0xBDCE90")]
		public readonly User Owner;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCEC8", Offset = "0xBDCEC8")]
		public readonly TeamList Teams;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly RoomType Type;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCF00", Offset = "0xBDCF00")]
		public readonly UserList Users;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly uint Version;

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x13DAD50", Offset = "0x13DAD50", VA = "0x13DAD50")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x13DDA48", Offset = "0x13DDA48", VA = "0x13DDA48")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x13DD5B0", Offset = "0x13DD5B0", VA = "0x13DD5B0")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x13DD748", Offset = "0x13DD748", VA = "0x13DD748")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class SdkAccount
	{
		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x13E044C", Offset = "0x13E044C", VA = "0x13E044C")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x13DDF08", Offset = "0x13DDF08", VA = "0x13DDF08")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class ShareMediaResult
	{
		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x13DE1C0", Offset = "0x13DE1C0", VA = "0x13DE1C0")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class SystemPermission
	{
		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x13DE434", Offset = "0x13DE434", VA = "0x13DE434")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class SystemVoipState
	{
		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x13DE5B0", Offset = "0x13DE5B0", VA = "0x13DE5B0")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class Team
	{
		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int MaxUsers;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int MinUsers;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x13E04E4", Offset = "0x13E04E4", VA = "0x13E04E4")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x13E0274", Offset = "0x13E0274", VA = "0x13E0274")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class User
	{
		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string PresenceDeeplinkMessage;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string PresenceDestinationApiName;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x13DE728", Offset = "0x13DE728", VA = "0x13DE728")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x13DEC60", Offset = "0x13DEC60", VA = "0x13DEC60")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class UserAndRoom
	{
		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDCF38", Offset = "0xBDCF38")]
		public readonly Room Room;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x13E05D4", Offset = "0x13E05D4", VA = "0x13E05D4")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x13DE960", Offset = "0x13DE960", VA = "0x13DE960")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class UserProof
	{
		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x13DEF60", Offset = "0x13DEF60", VA = "0x13DEF60")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class UserReportID
	{
		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x13DF130", Offset = "0x13DF130", VA = "0x13DF130")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x20001F3")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x132BC38", Offset = "0x132BC38", VA = "0x132BC38")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x132BF30", Offset = "0x132BF30", VA = "0x132BF30")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class AchievementsManager
	{
		[Token(Token = "0x40007AF")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x170000B0")]
		public bool LikesToWin
		{
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0x132BFB0", Offset = "0x132BFB0", VA = "0x132BFB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x132BFB8", Offset = "0x132BFB8", VA = "0x132BFB8")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x132C0D8", Offset = "0x132C0D8", VA = "0x132C0D8")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x132C134", Offset = "0x132C134", VA = "0x132C134")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x132C13C", Offset = "0x132C13C", VA = "0x132C13C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE01B4", Offset = "0xBE01B4")]
		private void <CheckForAchievmentUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x132C374", Offset = "0x132C374", VA = "0x132C374")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x132C37C", Offset = "0x132C37C", VA = "0x132C37C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x132C5F0", Offset = "0x132C5F0", VA = "0x132C5F0")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x20002DA")]
		private enum BasketPhase
		{
			[Token(Token = "0x4000CA6")]
			NONE,
			[Token(Token = "0x4000CA7")]
			TOP,
			[Token(Token = "0x4000CA8")]
			BOTH,
			[Token(Token = "0x4000CA9")]
			BOTTOM
		}

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BasketPhase m_phase;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player m_owningPlayer;

		[Token(Token = "0x170000B1")]
		public Player Player
		{
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x132C5F8", Offset = "0x132C5F8", VA = "0x132C5F8")]
			set
			{
			}
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x132C600", Offset = "0x132C600", VA = "0x132C600")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x132C6E0", Offset = "0x132C6E0", VA = "0x132C6E0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x132C898", Offset = "0x132C898", VA = "0x132C898")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x40007B3")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_eol;

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x132C8A0", Offset = "0x132C8A0", VA = "0x132C8A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x132C93C", Offset = "0x132C93C", VA = "0x132C93C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x132CA78", Offset = "0x132CA78", VA = "0x132CA78")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x40007B8")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x170000B2")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x132CB14", Offset = "0x132CB14", VA = "0x132CB14")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x132CB20", Offset = "0x132CB20", VA = "0x132CB20")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x132CB2C", Offset = "0x132CB2C", VA = "0x132CB2C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x132CB38", Offset = "0x132CB38", VA = "0x132CB38")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x132CB44", Offset = "0x132CB44", VA = "0x132CB44")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x132CB50", Offset = "0x132CB50", VA = "0x132CB50")]
			set
			{
			}
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x132CB5C", Offset = "0x132CB5C", VA = "0x132CB5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x132CCEC", Offset = "0x132CCEC", VA = "0x132CCEC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x132D018", Offset = "0x132D018", VA = "0x132D018")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class LeaderboardManager
	{
		[Token(Token = "0x20002DB")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x20002DC")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x40007BC")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x40007BD")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x40007BE")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x40007BF")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_nextCheckTime;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long m_numWins;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x170000B5")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0x132D2CC", Offset = "0x132D2CC", VA = "0x132D2CC")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0x132DA9C", Offset = "0x132DA9C", VA = "0x132DA9C")]
			set
			{
			}
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x132D02C", Offset = "0x132D02C", VA = "0x132D02C")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x132D094", Offset = "0x132D094", VA = "0x132D094")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x132D2D4", Offset = "0x132D2D4", VA = "0x132D2D4")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x132D1B0", Offset = "0x132D1B0", VA = "0x132D1B0")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x132DAA4", Offset = "0x132DAA4", VA = "0x132DAA4")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x132E1C0", Offset = "0x132E1C0", VA = "0x132E1C0")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x132E274", Offset = "0x132E274", VA = "0x132E274")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x170000B7")]
		public override uint Score
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x132E304", Offset = "0x132E304", VA = "0x132E304", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x132E5E4", Offset = "0x132E5E4", VA = "0x132E5E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x132E764", Offset = "0x132E764", VA = "0x132E764")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x20002DD")]
		private enum State
		{
			[Token(Token = "0x4000CAB")]
			UNKNOWN,
			[Token(Token = "0x4000CAC")]
			NONE,
			[Token(Token = "0x4000CAD")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x4000CAE")]
			PRACTICING,
			[Token(Token = "0x4000CAF")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x4000CB0")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x4000CB1")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x4000CB2")]
			PLAYING_MATCH,
			[Token(Token = "0x4000CB3")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_currentState;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_localSlot;

		[Token(Token = "0x170000B8")]
		public float MatchStartTime
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x132F010", Offset = "0x132F010", VA = "0x132F010")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0x132F030", Offset = "0x132F030", VA = "0x132F030")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x132E768", Offset = "0x132E768", VA = "0x132E768")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x132ED48", Offset = "0x132ED48", VA = "0x132ED48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x132EA68", Offset = "0x132EA68", VA = "0x132EA68")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x132ED6C", Offset = "0x132ED6C", VA = "0x132ED6C")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x132EE10", Offset = "0x132EE10", VA = "0x132EE10")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x132F038", Offset = "0x132F038", VA = "0x132F038")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x132F2AC", Offset = "0x132F2AC", VA = "0x132F2AC")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x132F974", Offset = "0x132F974", VA = "0x132F974")]
		private Player MatchPlayerAddedCallback(int slot, User user)
		{
			return null;
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x132F0E4", Offset = "0x132F0E4", VA = "0x132F0E4")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x132F3AC", Offset = "0x132F3AC", VA = "0x132F3AC")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x132FC20", Offset = "0x132FC20", VA = "0x132FC20")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x132FC38", Offset = "0x132FC38", VA = "0x132FC38")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x132FDE8", Offset = "0x132FDE8", VA = "0x132FDE8")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x132FDFC", Offset = "0x132FDFC", VA = "0x132FDFC")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x132FF00", Offset = "0x132FF00", VA = "0x132FF00")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x1330450", Offset = "0x1330450", VA = "0x1330450")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x132F530", Offset = "0x132F530", VA = "0x132F530")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x132FA84", Offset = "0x132FA84", VA = "0x132FA84")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1330A54", Offset = "0x1330A54", VA = "0x1330A54")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class MatchmakingManager
	{
		[Token(Token = "0x20002DE")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x20002DF")]
		public delegate Player OnMatchPlayerAdded(int slot, User user);

		[Token(Token = "0x40007D8")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_matchRoom;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, User> m_remotePlayers;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x170000B9")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x1330BC0", Offset = "0x1330BC0", VA = "0x1330BC0")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x1330BC8", Offset = "0x1330BC8", VA = "0x1330BC8")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x1330BD0", Offset = "0x1330BD0", VA = "0x1330BD0")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x1330BD8", Offset = "0x1330BD8", VA = "0x1330BD8")]
			set
			{
			}
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1330ACC", Offset = "0x1330ACC", VA = "0x1330ACC")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x132FD08", Offset = "0x132FD08", VA = "0x132FD08")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x1330BE0", Offset = "0x1330BE0", VA = "0x1330BE0")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x1330F18", Offset = "0x1330F18", VA = "0x1330F18")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1330FE8", Offset = "0x1330FE8", VA = "0x1330FE8")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x133180C", Offset = "0x133180C", VA = "0x133180C")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x132F844", Offset = "0x132F844", VA = "0x132F844")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x132FDC0", Offset = "0x132FDC0", VA = "0x132FDC0")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class P2PManager
	{
		[Token(Token = "0x20002E0")]
		private class RemotePlayerData
		{
			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeerConnectionState state;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RemotePlayer player;

			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float remoteTimeOffset;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x6001106")]
			[Address(RVA = "0x13330B8", Offset = "0x13330B8", VA = "0x13330B8")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x20002E1")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x40007DF")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x40007E0")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x40007E1")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x40007E2")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x40007E3")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x40007E4")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x40007E5")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x40007E6")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x40007E7")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x40007E8")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x40007E9")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x40007EA")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x170000BB")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0x1333A60", Offset = "0x1333A60", VA = "0x1333A60")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0x1333A68", Offset = "0x1333A68", VA = "0x1333A68")]
			set
			{
			}
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1331E88", Offset = "0x1331E88", VA = "0x1331E88")]
		public P2PManager()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x133203C", Offset = "0x133203C", VA = "0x133203C")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x1331654", Offset = "0x1331654", VA = "0x1331654")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x1331C30", Offset = "0x1331C30", VA = "0x1331C30")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x1333134", Offset = "0x1333134", VA = "0x1333134")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x1333314", Offset = "0x1333314", VA = "0x1333314")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x133357C", Offset = "0x133357C", VA = "0x133357C")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x1332238", Offset = "0x1332238", VA = "0x1332238")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x13339B8", Offset = "0x13339B8", VA = "0x13339B8")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x13337FC", Offset = "0x13337FC", VA = "0x13337FC")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x13327F4", Offset = "0x13327F4", VA = "0x13327F4")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x1333D0C", Offset = "0x1333D0C", VA = "0x1333D0C")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x1332850", Offset = "0x1332850", VA = "0x1332850")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x132E6CC", Offset = "0x132E6CC", VA = "0x132E6CC")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x1334174", Offset = "0x1334174", VA = "0x1334174")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x1332D68", Offset = "0x1332D68", VA = "0x1332D68")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x133298C", Offset = "0x133298C", VA = "0x133298C")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x132E46C", Offset = "0x132E46C", VA = "0x132E46C")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x1332CC0", Offset = "0x1332CC0", VA = "0x1332CC0")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x1333F04", Offset = "0x1333F04", VA = "0x1333F04")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1333F54", Offset = "0x1333F54", VA = "0x1333F54")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x133487C", Offset = "0x133487C", VA = "0x133487C")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x13336C8", Offset = "0x13336C8", VA = "0x13336C8")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1333770", Offset = "0x1333770", VA = "0x1333770")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x1333CD8", Offset = "0x1333CD8", VA = "0x1333CD8")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x1334264", Offset = "0x1334264", VA = "0x1334264")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x133436C", Offset = "0x133436C", VA = "0x133436C")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x133474C", Offset = "0x133474C", VA = "0x133474C")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x13347EC", Offset = "0x13347EC", VA = "0x13347EC")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x133421C", Offset = "0x133421C", VA = "0x133421C")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x1334320", Offset = "0x1334320", VA = "0x1334320")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001FF")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastCollisionTime;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x170000BC")]
		public Vector3 velocity
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x1334304", Offset = "0x1334304", VA = "0x1334304")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x13349A0", Offset = "0x13349A0", VA = "0x13349A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x13341F0", Offset = "0x13341F0", VA = "0x13341F0")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x13345E0", Offset = "0x13345E0", VA = "0x13345E0")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1334A10", Offset = "0x1334A10", VA = "0x1334A10")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1334B4C", Offset = "0x1334B4C", VA = "0x1334B4C")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1334C94", Offset = "0x1334C94", VA = "0x1334C94")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1334CBC", Offset = "0x1334CBC", VA = "0x1334CBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1334CFC", Offset = "0x1334CFC", VA = "0x1334CFC")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoalMover m_goal;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_sendUpdates;

		[Token(Token = "0x170000BD")]
		public bool SendUpdates
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x1334D04", Offset = "0x1334D04", VA = "0x1334D04")]
			set
			{
			}
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1334D10", Offset = "0x1334D10", VA = "0x1334D10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1334D80", Offset = "0x1334D80", VA = "0x1334D80")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1334E5C", Offset = "0x1334E5C", VA = "0x1334E5C")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1333FAC", Offset = "0x1333FAC", VA = "0x1333FAC")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1334F18", Offset = "0x1334F18", VA = "0x1334F18")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x20002E2")]
		public enum State
		{
			[Token(Token = "0x4000CBA")]
			INITIALIZING,
			[Token(Token = "0x4000CBB")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x4000CBC")]
			MATCH_TRANSITION,
			[Token(Token = "0x4000CBD")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x4000CBE")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private P2PManager m_p2p;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ulong m_myID;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_myOculusID;

		[Token(Token = "0x170000BE")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x132E974", Offset = "0x132E974", VA = "0x132E974")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public static P2PManager P2P
		{
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0x132E410", Offset = "0x132E410", VA = "0x132E410")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x132EA0C", Offset = "0x132EA0C", VA = "0x132EA0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x13309F8", Offset = "0x13309F8", VA = "0x13309F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		public static State CurrentState
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x132C83C", Offset = "0x132C83C", VA = "0x132C83C")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x170000C3")]
		public static ulong MyID
		{
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x132D664", Offset = "0x132D664", VA = "0x132D664")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000C4")]
		public static string MyOculusID
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x132F8C0", Offset = "0x132F8C0", VA = "0x132F8C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1334F20", Offset = "0x1334F20", VA = "0x1334F20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x1334F54", Offset = "0x1334F54", VA = "0x1334F54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1335144", Offset = "0x1335144", VA = "0x1335144")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x13351DC", Offset = "0x13351DC", VA = "0x13351DC")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x13352AC", Offset = "0x13352AC", VA = "0x13352AC")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1331B84", Offset = "0x1331B84", VA = "0x1331B84")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x133535C", Offset = "0x133535C", VA = "0x133535C")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1335364", Offset = "0x1335364", VA = "0x1335364")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x132F1FC", Offset = "0x132F1FC", VA = "0x132F1FC")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x1335398", Offset = "0x1335398", VA = "0x1335398")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x40007FD")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x40007FE")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x40007FF")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_score;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_scoreUI;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_heldBall;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextSpawnTime;

		[Token(Token = "0x170000C5")]
		public virtual uint Score
		{
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x13353A0", Offset = "0x13353A0", VA = "0x13353A0", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x132E34C", Offset = "0x132E34C", VA = "0x132E34C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x13353A8", Offset = "0x13353A8", VA = "0x13353A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		protected bool HasBall
		{
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x132BC9C", Offset = "0x132BC9C", VA = "0x132BC9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x13353B0", Offset = "0x13353B0", VA = "0x13353B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x13343F8", Offset = "0x13343F8", VA = "0x13343F8")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x132BEA4", Offset = "0x132BEA4", VA = "0x132BEA4")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x132BD0C", Offset = "0x132BD0C", VA = "0x132BD0C")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1335480", Offset = "0x1335480", VA = "0x1335480")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x132BF34", Offset = "0x132BF34", VA = "0x132BF34")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_playerHead;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_nameText;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x170000C8")]
		public Player Player
		{
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0x13309A0", Offset = "0x13309A0", VA = "0x13309A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		public Text NameText
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x13355AC", Offset = "0x13355AC", VA = "0x13355AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x13355B4", Offset = "0x13355B4", VA = "0x13355B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C64")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x13356BC", Offset = "0x13356BC", VA = "0x13356BC")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private User m_user;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x170000CA")]
		public User User
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x13356C4", Offset = "0x13356C4", VA = "0x13356C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public ulong ID
		{
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x133309C", Offset = "0x133309C", VA = "0x133309C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000CC")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x13356CC", Offset = "0x13356CC", VA = "0x13356CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x13356D4", Offset = "0x13356D4", VA = "0x13356D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public override uint Score
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x13356DC", Offset = "0x13356DC", VA = "0x13356DC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1334878", Offset = "0x1334878", VA = "0x1334878")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x13356E0", Offset = "0x13356E0", VA = "0x13356E0")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x13356E4", Offset = "0x13356E4", VA = "0x13356E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1335908", Offset = "0x1335908", VA = "0x1335908")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x2000206")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDD080", Offset = "0xBDD080")]
		public int x;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDD0C0", Offset = "0xBDD0C0")]
		public int y;

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1326920", Offset = "0x1326920", VA = "0x1326920")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button m_currentButton;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1326928", Offset = "0x1326928", VA = "0x1326928")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x13272D8", Offset = "0x13272D8", VA = "0x13272D8")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x20002E3")]
		private struct PositionInfo
		{
			[Token(Token = "0x4000CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x4000CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pieceOwner;

			[Token(Token = "0x4000CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x4000817")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x4000818")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x4000819")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] m_scores;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x13272E0", Offset = "0x13272E0", VA = "0x13272E0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x13274BC", Offset = "0x13274BC", VA = "0x13274BC")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x13275B0", Offset = "0x13275B0", VA = "0x13275B0")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1327674", Offset = "0x1327674", VA = "0x1327674")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1327738", Offset = "0x1327738", VA = "0x1327738")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x1327CFC", Offset = "0x1327CFC", VA = "0x1327CFC")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1327DDC", Offset = "0x1327DDC", VA = "0x1327DDC")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1327F9C", Offset = "0x1327F9C", VA = "0x1327F9C")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x1327930", Offset = "0x1327930", VA = "0x1327930")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x13280D8", Offset = "0x13280D8", VA = "0x13280D8")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1327AAC", Offset = "0x1327AAC", VA = "0x1327AAC")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1328114", Offset = "0x1328114", VA = "0x1328114")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x20002E4")]
		private enum GameState
		{
			[Token(Token = "0x4000CC3")]
			None,
			[Token(Token = "0x4000CC4")]
			PracticingMyTurn,
			[Token(Token = "0x4000CC5")]
			PracticingAiTurn,
			[Token(Token = "0x4000CC6")]
			OnlineMatchMyTurn,
			[Token(Token = "0x4000CC7")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameState m_state;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint m_powerBallcount;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_opponentName;

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1328218", Offset = "0x1328218", VA = "0x1328218")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1328374", Offset = "0x1328374", VA = "0x1328374")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1328240", Offset = "0x1328240", VA = "0x1328240")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x132879C", Offset = "0x132879C", VA = "0x132879C")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1328378", Offset = "0x1328378", VA = "0x1328378")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1328EE0", Offset = "0x1328EE0", VA = "0x1328EE0")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1328A34", Offset = "0x1328A34", VA = "0x1328A34")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1329014", Offset = "0x1329014", VA = "0x1329014")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1329080", Offset = "0x1329080", VA = "0x1329080")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1329124", Offset = "0x1329124", VA = "0x1329124")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1329138", Offset = "0x1329138", VA = "0x1329138")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1326F4C", Offset = "0x1326F4C", VA = "0x1326F4C")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1326F20", Offset = "0x1326F20", VA = "0x1326F20")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1326F74", Offset = "0x1326F74", VA = "0x1326F74")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x132720C", Offset = "0x132720C", VA = "0x132720C")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1328C44", Offset = "0x1328C44", VA = "0x1328C44")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1328D58", Offset = "0x1328D58", VA = "0x1328D58")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x13293B8", Offset = "0x13293B8", VA = "0x13293B8")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x13293C0", Offset = "0x13293C0", VA = "0x13293C0")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x1328248", Offset = "0x1328248", VA = "0x1328248")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x1328430", Offset = "0x1328430", VA = "0x1328430")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x1329514", Offset = "0x1329514", VA = "0x1329514")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x20002E5")]
		public enum Piece
		{
			[Token(Token = "0x4000CC9")]
			A,
			[Token(Token = "0x4000CCA")]
			B,
			[Token(Token = "0x4000CCB")]
			PowerBall
		}

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoardPosition m_position;

		[Token(Token = "0x170000CE")]
		public Piece Type
		{
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x1329578", Offset = "0x1329578", VA = "0x1329578")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x170000CF")]
		public BoardPosition Position
		{
			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x1329580", Offset = "0x1329580", VA = "0x1329580")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x1329588", Offset = "0x1329588", VA = "0x1329588")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public GameObject Prefab
		{
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x1328FE8", Offset = "0x1328FE8", VA = "0x1328FE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x13290FC", Offset = "0x13290FC", VA = "0x13290FC")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1329590", Offset = "0x1329590", VA = "0x1329590")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x4000838")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1329598", Offset = "0x1329598", VA = "0x1329598")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x13295BC", Offset = "0x13295BC", VA = "0x13295BC")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1329784", Offset = "0x1329784", VA = "0x1329784")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x13296DC", Offset = "0x13296DC", VA = "0x13296DC")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1329C48", Offset = "0x1329C48", VA = "0x1329C48")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x132A050", Offset = "0x132A050", VA = "0x132A050")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x132A104", Offset = "0x132A104", VA = "0x132A104")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x132A1EC", Offset = "0x132A1EC", VA = "0x132A1EC")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x20002E6")]
		private enum MatchRoomState
		{
			[Token(Token = "0x4000CCD")]
			None,
			[Token(Token = "0x4000CCE")]
			Queued,
			[Token(Token = "0x4000CCF")]
			Configuring,
			[Token(Token = "0x4000CD0")]
			MyTurn,
			[Token(Token = "0x4000CD1")]
			RemoteTurn
		}

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x400083C")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_matchRoom;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private User m_remotePlayer;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lastUpdateTime;

		[Token(Token = "0x4000840")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MatchRoomState m_state;

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x132A1F4", Offset = "0x132A1F4", VA = "0x132A1F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x132A44C", Offset = "0x132A44C", VA = "0x132A44C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x132A574", Offset = "0x132A574", VA = "0x132A574")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1328880", Offset = "0x1328880", VA = "0x1328880")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x132A630", Offset = "0x132A630", VA = "0x132A630")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x132A2B4", Offset = "0x132A2B4", VA = "0x132A2B4")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x132A66C", Offset = "0x132A66C", VA = "0x132A66C")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x132A92C", Offset = "0x132A92C", VA = "0x132A92C")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x132AA7C", Offset = "0x132AA7C", VA = "0x132AA7C")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x132B208", Offset = "0x132B208", VA = "0x132B208")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x132AD6C", Offset = "0x132AD6C", VA = "0x132AD6C")]
		private void ProcessRoomData(Room room)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x132B5B0", Offset = "0x132B5B0", VA = "0x132B5B0")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1329194", Offset = "0x1329194", VA = "0x1329194")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x132B798", Offset = "0x132B798", VA = "0x132B798")]
		private void UpdateDataStoreCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x132B568", Offset = "0x132B568", VA = "0x132B568")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x132B7CC", Offset = "0x132B7CC", VA = "0x132B7CC")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x132B890", Offset = "0x132B890", VA = "0x132B890")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_myID;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_myOculusID;

		[Token(Token = "0x170000D1")]
		public static ulong MyID
		{
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0x132A58C", Offset = "0x132A58C", VA = "0x132A58C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000D2")]
		public static string MyOculusID
		{
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x1329460", Offset = "0x1329460", VA = "0x1329460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x132B898", Offset = "0x132B898", VA = "0x132B898")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x132B9E0", Offset = "0x132B9E0", VA = "0x132B9E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x132BA78", Offset = "0x132BA78", VA = "0x132BA78")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x132BB48", Offset = "0x132BB48", VA = "0x132BB48")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1329B9C", Offset = "0x1329B9C", VA = "0x1329B9C")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x132BC30", Offset = "0x132BC30", VA = "0x132BC30")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x200020E")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x1321F28", Offset = "0x1321F28", VA = "0x1321F28")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1322030", Offset = "0x1322030", VA = "0x1322030")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x13220F4", Offset = "0x13220F4", VA = "0x13220F4")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1323D28", Offset = "0x1323D28", VA = "0x1323D28")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1323C10", Offset = "0x1323C10", VA = "0x1323C10")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1323B58", Offset = "0x1323B58", VA = "0x1323B58")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1323A74", Offset = "0x1323A74", VA = "0x1323A74")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x13239C4", Offset = "0x13239C4", VA = "0x13239C4")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x13238B0", Offset = "0x13238B0", VA = "0x13238B0")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x132379C", Offset = "0x132379C", VA = "0x132379C")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1321F98", Offset = "0x1321F98", VA = "0x1321F98")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x13236E4", Offset = "0x13236E4", VA = "0x13236E4")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x13228C4", Offset = "0x13228C4", VA = "0x13228C4")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x13229D0", Offset = "0x13229D0", VA = "0x13229D0")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x1322A8C", Offset = "0x1322A8C", VA = "0x1322A8C")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x1322B88", Offset = "0x1322B88", VA = "0x1322B88")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1322C88", Offset = "0x1322C88", VA = "0x1322C88")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1322D84", Offset = "0x1322D84", VA = "0x1322D84")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1322EB0", Offset = "0x1322EB0", VA = "0x1322EB0")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1322F68", Offset = "0x1322F68", VA = "0x1322F68")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x1323060", Offset = "0x1323060", VA = "0x1323060")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x1323118", Offset = "0x1323118", VA = "0x1323118")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x13231D4", Offset = "0x13231D4", VA = "0x13231D4")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x13232E8", Offset = "0x13232E8", VA = "0x13232E8")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x13233FC", Offset = "0x13233FC", VA = "0x13233FC")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x1323DE4", Offset = "0x1323DE4", VA = "0x1323DE4")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x13242DC", Offset = "0x13242DC", VA = "0x13242DC")]
		private void outputRoomDetails(Room room)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x13248D0", Offset = "0x13248D0", VA = "0x13248D0")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x1324E34", Offset = "0x1324E34", VA = "0x1324E34")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x1324F0C", Offset = "0x1324F0C", VA = "0x1324F0C")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x1324F8C", Offset = "0x1324F8C", VA = "0x1324F8C")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x1325568", Offset = "0x1325568", VA = "0x1325568")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x1325688", Offset = "0x1325688", VA = "0x1325688")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x1325744", Offset = "0x1325744", VA = "0x1325744")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x1325800", Offset = "0x1325800", VA = "0x1325800")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x13258BC", Offset = "0x13258BC", VA = "0x13258BC")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x1325C34", Offset = "0x1325C34", VA = "0x1325C34")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x1326024", Offset = "0x1326024", VA = "0x1326024")]
		private void createAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x13260FC", Offset = "0x13260FC", VA = "0x13260FC")]
		private void getCurrentRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x13261D4", Offset = "0x13261D4", VA = "0x13261D4")]
		private void joinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x13262AC", Offset = "0x13262AC", VA = "0x13262AC")]
		private void leaveRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x1326384", Offset = "0x1326384", VA = "0x1326384")]
		private void getUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x13266AC", Offset = "0x13266AC", VA = "0x13266AC")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x1326784", Offset = "0x1326784", VA = "0x1326784")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x132685C", Offset = "0x132685C", VA = "0x132685C")]
		private void inviteUserCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x1326918", Offset = "0x1326918", VA = "0x1326918")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x200020F")]
	internal enum states
	{
		[Token(Token = "0x4000847")]
		NOT_INIT,
		[Token(Token = "0x4000848")]
		IDLE,
		[Token(Token = "0x4000849")]
		REQUEST_FIND,
		[Token(Token = "0x400084A")]
		FINDING_ROOM,
		[Token(Token = "0x400084B")]
		REQUEST_CREATE,
		[Token(Token = "0x400084C")]
		REQUEST_JOIN,
		[Token(Token = "0x400084D")]
		REQUEST_LEAVE,
		[Token(Token = "0x400084E")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x400084F")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x2000210")]
	public static class Constants
	{
		[Token(Token = "0x4000850")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x4000851")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x4000852")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x2000211")]
	public class chatPacket
	{
		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDD2B0", Offset = "0xBDD2B0")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDD2C0", Offset = "0xBDD2C0")]
		private string <textString>k__BackingField;

		[Token(Token = "0x170000D3")]
		public int packetID
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x13E84C8", Offset = "0x13E84C8", VA = "0x13E84C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE01C4", Offset = "0xBE01C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x13E84D0", Offset = "0x13E84D0", VA = "0x13E84D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE01D4", Offset = "0xBE01D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public string textString
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x13E84D8", Offset = "0x13E84D8", VA = "0x13E84D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE01E4", Offset = "0xBE01E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x13E84E0", Offset = "0x13E84E0", VA = "0x13E84E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE01F4", Offset = "0xBE01F4")]
			set
			{
			}
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x13E7CC8", Offset = "0x13E7CC8", VA = "0x13E7CC8")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x13E7FCC", Offset = "0x13E7FCC", VA = "0x13E7FCC")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x13E7CC0", Offset = "0x13E7CC0", VA = "0x13E7CC0")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private states currentState;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private User localUser;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private User remoteUser;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Room currentRoom;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPacketID;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool ratedMatchStarted;

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x13E5A00", Offset = "0x13E5A00", VA = "0x13E5A00")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x13E5BB8", Offset = "0x13E5BB8", VA = "0x13E5BB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x13E5C80", Offset = "0x13E5C80", VA = "0x13E5C80")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x13E7020", Offset = "0x13E7020", VA = "0x13E7020")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x13E5B1C", Offset = "0x13E5B1C", VA = "0x13E5B1C")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x13E70D8", Offset = "0x13E70D8", VA = "0x13E70D8")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x13E71C4", Offset = "0x13E71C4", VA = "0x13E71C4")]
		private void init(Message<User> msg)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x13E6164", Offset = "0x13E6164", VA = "0x13E6164")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x13E72EC", Offset = "0x13E72EC", VA = "0x13E72EC")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x13E62E0", Offset = "0x13E62E0", VA = "0x13E62E0")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x13E66A0", Offset = "0x13E66A0", VA = "0x13E66A0")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x13E6814", Offset = "0x13E6814", VA = "0x13E6814")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x13E742C", Offset = "0x13E742C", VA = "0x13E742C")]
		private void foundMatch(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x13E7564", Offset = "0x13E7564", VA = "0x13E7564")]
		private void joinRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x13E652C", Offset = "0x13E652C", VA = "0x13E652C")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x13E7874", Offset = "0x13E7874", VA = "0x13E7874")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x13E7944", Offset = "0x13E7944", VA = "0x13E7944")]
		private void updateRoom(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x13E6B28", Offset = "0x13E6B28", VA = "0x13E6B28")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x13E5FDC", Offset = "0x13E5FDC", VA = "0x13E5FDC")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x13E6C2C", Offset = "0x13E6C2C", VA = "0x13E6C2C")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x13E8244", Offset = "0x13E8244", VA = "0x13E8244")]
		private void leaveRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x13E6D54", Offset = "0x13E6D54", VA = "0x13E6D54")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x13E8334", Offset = "0x13E8334", VA = "0x13E8334")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x13E6E64", Offset = "0x13E6E64", VA = "0x13E6E64")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x13E8404", Offset = "0x13E8404", VA = "0x13E8404")]
		private void reportResultsResponse(Message msg)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x13E84C0", Offset = "0x13E84C0", VA = "0x13E84C0")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x2000213")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x14000015")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x13E52C0", Offset = "0x13E52C0", VA = "0x13E52C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0204", Offset = "0xBE0204")]
			add
			{
			}
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x13E5374", Offset = "0x13E5374", VA = "0x13E5374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0214", Offset = "0xBE0214")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x13E5428", Offset = "0x13E5428", VA = "0x13E5428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0224", Offset = "0xBE0224")]
			add
			{
			}
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x13E54E0", Offset = "0x13E54E0", VA = "0x13E54E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0234", Offset = "0xBE0234")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x13E5598", Offset = "0x13E5598", VA = "0x13E5598")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x13E59D0", Offset = "0x13E59D0", VA = "0x13E59D0")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x13E5754", Offset = "0x13E5754", VA = "0x13E5754")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x13E59F0", Offset = "0x13E59F0", VA = "0x13E59F0")]
		public EntitlementCheck()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000214")]
	public static class AvatarLogger
	{
		[Token(Token = "0x400085F")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000860")]
		public const string Tab = "    ";

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1581C60", Offset = "0x1581C60", VA = "0x1581C60")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE0244", Offset = "0xBE0244")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE0244", Offset = "0xBE0244")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1581CE8", Offset = "0x1581CE8", VA = "0x1581CE8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE02A4", Offset = "0xBE02A4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE02A4", Offset = "0xBE02A4")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x1581D80", Offset = "0x1581D80", VA = "0x1581D80")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE0304", Offset = "0xBE0304")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE0304", Offset = "0xBE0304")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x1581E08", Offset = "0x1581E08", VA = "0x1581E08")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE0364", Offset = "0xBE0364")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE0364", Offset = "0xBE0364")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x1581E90", Offset = "0x1581E90", VA = "0x1581E90")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE03C4", Offset = "0xBE03C4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBE03C4", Offset = "0xBE03C4")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class CAPI
	{
		[Token(Token = "0x20002E7")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20002E8")]
		public enum Result
		{
			[Token(Token = "0x4000CD3")]
			Success = 0,
			[Token(Token = "0x4000CD4")]
			Failure = -1000,
			[Token(Token = "0x4000CD5")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000CD6")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000CD7")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000CD8")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000CD9")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000CDA")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000CDB")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20002E9")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x600110F")]
			[Address(RVA = "0x1D05078", Offset = "0x1D05078", VA = "0x1D05078")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000861")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000869")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x1581F90", Offset = "0x1581F90", VA = "0x1581F90")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x1582020", Offset = "0x1582020", VA = "0x1582020")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x15821E8", Offset = "0x15821E8", VA = "0x15821E8")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x15822CC", Offset = "0x15822CC", VA = "0x15822CC")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x158233C", Offset = "0x158233C", VA = "0x158233C")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x15823B0", Offset = "0x15823B0", VA = "0x15823B0")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x1582430", Offset = "0x1582430", VA = "0x1582430")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x1582548", Offset = "0x1582548", VA = "0x1582548")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x15825C8", Offset = "0x15825C8", VA = "0x15825C8")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x15826E0", Offset = "0x15826E0", VA = "0x15826E0")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1582760", Offset = "0x1582760", VA = "0x1582760")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x15827E0", Offset = "0x15827E0", VA = "0x15827E0")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x1582860", Offset = "0x1582860", VA = "0x1582860")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x15828E0", Offset = "0x15828E0", VA = "0x15828E0")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x1582970", Offset = "0x1582970", VA = "0x1582970")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x1582A00", Offset = "0x1582A00", VA = "0x1582A00")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x1582A90", Offset = "0x1582A90", VA = "0x1582A90")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x1582B10", Offset = "0x1582B10", VA = "0x1582B10")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x1582B90", Offset = "0x1582B90", VA = "0x1582B90")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x1582C20", Offset = "0x1582C20", VA = "0x1582C20")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x1582CB0", Offset = "0x1582CB0", VA = "0x1582CB0")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x1582D40", Offset = "0x1582D40", VA = "0x1582D40")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x1582DC0", Offset = "0x1582DC0", VA = "0x1582DC0")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1582E60", Offset = "0x1582E60", VA = "0x1582E60")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x1582EE0", Offset = "0x1582EE0", VA = "0x1582EE0")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x1582F80", Offset = "0x1582F80", VA = "0x1582F80")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x1583040", Offset = "0x1583040", VA = "0x1583040")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x1583110", Offset = "0x1583110", VA = "0x1583110")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x15831A0", Offset = "0x15831A0", VA = "0x15831A0")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x1583230", Offset = "0x1583230", VA = "0x1583230")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x15832C0", Offset = "0x15832C0", VA = "0x15832C0")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x1583350", Offset = "0x1583350", VA = "0x1583350")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x15833E0", Offset = "0x15833E0", VA = "0x15833E0")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x1583460", Offset = "0x1583460", VA = "0x1583460")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x1583580", Offset = "0x1583580", VA = "0x1583580")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x15834F0", Offset = "0x15834F0", VA = "0x15834F0")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x1583780", Offset = "0x1583780", VA = "0x1583780")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x15838B8", Offset = "0x15838B8", VA = "0x15838B8")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D3D")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x1583938", Offset = "0x1583938", VA = "0x1583938")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x1583BA8", Offset = "0x1583BA8", VA = "0x1583BA8")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x1583C28", Offset = "0x1583C28", VA = "0x1583C28")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x1583D60", Offset = "0x1583D60", VA = "0x1583D60")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1583DE0", Offset = "0x1583DE0", VA = "0x1583DE0")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1583F18", Offset = "0x1583F18", VA = "0x1583F18")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x1583F98", Offset = "0x1583F98", VA = "0x1583F98")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x15840D0", Offset = "0x15840D0", VA = "0x15840D0")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1584150", Offset = "0x1584150", VA = "0x1584150")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1584288", Offset = "0x1584288", VA = "0x1584288")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1584308", Offset = "0x1584308", VA = "0x1584308")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1584388", Offset = "0x1584388", VA = "0x1584388")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1584420", Offset = "0x1584420", VA = "0x1584420")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x15844A0", Offset = "0x15844A0", VA = "0x15844A0")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x158464C", Offset = "0x158464C", VA = "0x158464C")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x1584778", Offset = "0x1584778", VA = "0x1584778")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x15845CC", Offset = "0x15845CC", VA = "0x15845CC")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x15847F8", Offset = "0x15847F8", VA = "0x15847F8")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x1584878", Offset = "0x1584878", VA = "0x1584878")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x1584908", Offset = "0x1584908", VA = "0x1584908")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1584988", Offset = "0x1584988", VA = "0x1584988")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1584A18", Offset = "0x1584A18", VA = "0x1584A18")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x1584A98", Offset = "0x1584A98", VA = "0x1584A98")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x1584B18", Offset = "0x1584B18", VA = "0x1584B18")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1584D54", Offset = "0x1584D54", VA = "0x1584D54")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1584DE4", Offset = "0x1584DE4", VA = "0x1584DE4")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1584FD0", Offset = "0x1584FD0", VA = "0x1584FD0")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x1585068", Offset = "0x1585068", VA = "0x1585068")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x158518C", Offset = "0x158518C", VA = "0x158518C")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x158520C", Offset = "0x158520C", VA = "0x158520C")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x158528C", Offset = "0x158528C", VA = "0x158528C")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x15853B4", Offset = "0x15853B4", VA = "0x15853B4")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1585434", Offset = "0x1585434", VA = "0x1585434")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x158555C", Offset = "0x158555C", VA = "0x158555C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x15855DC", Offset = "0x15855DC", VA = "0x15855DC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x158566C", Offset = "0x158566C", VA = "0x158566C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x15856FC", Offset = "0x15856FC", VA = "0x15856FC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x158578C", Offset = "0x158578C", VA = "0x158578C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x158580C", Offset = "0x158580C", VA = "0x158580C")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1585894", Offset = "0x1585894", VA = "0x1585894")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x158591C", Offset = "0x158591C", VA = "0x158591C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x158599C", Offset = "0x158599C", VA = "0x158599C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1585A1C", Offset = "0x1585A1C", VA = "0x1585A1C")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x1585AD0", Offset = "0x1585AD0", VA = "0x1585AD0")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x1585B60", Offset = "0x1585B60", VA = "0x1585B60")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x1585BF0", Offset = "0x1585BF0", VA = "0x1585BF0")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x1585C70", Offset = "0x1585C70", VA = "0x1585C70")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x1585CF0", Offset = "0x1585CF0", VA = "0x1585CF0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x1585D70", Offset = "0x1585D70", VA = "0x1585D70")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x1585E08", Offset = "0x1585E08", VA = "0x1585E08")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1585E98", Offset = "0x1585E98", VA = "0x1585E98")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x1585F28", Offset = "0x1585F28", VA = "0x1585F28")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x1585FB8", Offset = "0x1585FB8", VA = "0x1585FB8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x1586050", Offset = "0x1586050", VA = "0x1586050")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x15860E8", Offset = "0x15860E8", VA = "0x15860E8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1586168", Offset = "0x1586168", VA = "0x1586168")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x15861E8", Offset = "0x15861E8", VA = "0x15861E8")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x1586310", Offset = "0x1586310", VA = "0x1586310")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x1586390", Offset = "0x1586390", VA = "0x1586390")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x15864B8", Offset = "0x15864B8", VA = "0x15864B8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x1586538", Offset = "0x1586538", VA = "0x1586538")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1586660", Offset = "0x1586660", VA = "0x1586660")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x15866E0", Offset = "0x15866E0", VA = "0x15866E0")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x1586888", Offset = "0x1586888", VA = "0x1586888")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1586B24", Offset = "0x1586B24", VA = "0x1586B24")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x1586808", Offset = "0x1586808", VA = "0x1586808")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x1586BB4", Offset = "0x1586BB4", VA = "0x1586BB4")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x1586C34", Offset = "0x1586C34", VA = "0x1586C34")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x1586CC4", Offset = "0x1586CC4", VA = "0x1586CC4")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1586D54", Offset = "0x1586D54", VA = "0x1586D54")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1586DE4", Offset = "0x1586DE4", VA = "0x1586DE4")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x1586E84", Offset = "0x1586E84", VA = "0x1586E84")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1586F24", Offset = "0x1586F24", VA = "0x1586F24")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x1586FC4", Offset = "0x1586FC4", VA = "0x1586FC4")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x1587044", Offset = "0x1587044", VA = "0x1587044")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x15870C4", Offset = "0x15870C4", VA = "0x15870C4")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1587144", Offset = "0x1587144", VA = "0x1587144")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x15871C4", Offset = "0x15871C4", VA = "0x15871C4")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1587244", Offset = "0x1587244", VA = "0x1587244")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x158736C", Offset = "0x158736C", VA = "0x158736C")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1587404", Offset = "0x1587404", VA = "0x1587404")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1587484", Offset = "0x1587484", VA = "0x1587484")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x15874E8", Offset = "0x15874E8", VA = "0x15874E8")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x1587604", Offset = "0x1587604", VA = "0x1587604")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x1587694", Offset = "0x1587694", VA = "0x1587694")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x15877D8", Offset = "0x15877D8", VA = "0x15877D8")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x1587868", Offset = "0x1587868", VA = "0x1587868")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x1587908", Offset = "0x1587908", VA = "0x1587908")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x1587CA0", Offset = "0x1587CA0", VA = "0x1587CA0")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x1587D20", Offset = "0x1587D20", VA = "0x1587D20")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x1587DB8", Offset = "0x1587DB8", VA = "0x1587DB8")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x1588580", Offset = "0x1588580", VA = "0x1588580")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x1588600", Offset = "0x1588600", VA = "0x1588600")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x1581F28", Offset = "0x1581F28", VA = "0x1581F28")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBE0424", Offset = "0xBE0424")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x1588698", Offset = "0x1588698", VA = "0x1588698")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x158871C", Offset = "0x158871C", VA = "0x158871C")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x158879C", Offset = "0x158879C", VA = "0x158879C")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x158881C", Offset = "0x158881C", VA = "0x158881C")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x158889C", Offset = "0x158889C", VA = "0x158889C")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x158927C", Offset = "0x158927C", VA = "0x158927C")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x15892FC", Offset = "0x15892FC", VA = "0x15892FC")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x1589704", Offset = "0x1589704", VA = "0x1589704")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x1589674", Offset = "0x1589674", VA = "0x1589674")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x1589778", Offset = "0x1589778", VA = "0x1589778")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000216")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0xBDD2F0", Offset = "0xBDD2F0")]
		public SoundFXRef testSound1;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x157E408", Offset = "0x157E408", VA = "0x157E408")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x157E40C", Offset = "0x157E40C", VA = "0x157E40C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x157E4CC", Offset = "0x157E4CC", VA = "0x157E4CC")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD33C", Offset = "0xBDD33C")]
		public bool autoRetrigger;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xBDD374", Offset = "0xBDD374")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD398", Offset = "0xBDD398")]
		public Transform[] playPositions;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x15750A4", Offset = "0x15750A4", VA = "0x15750A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1575254", Offset = "0x1575254", VA = "0x1575254")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x1575430", Offset = "0x1575430", VA = "0x1575430")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x15752B4", Offset = "0x15752B4", VA = "0x15752B4")]
		public void Play()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x1575570", Offset = "0x1575570", VA = "0x1575570")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x15756E4", Offset = "0x15756E4", VA = "0x15756E4")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000878")]
		Default,
		[Token(Token = "0x4000879")]
		Preload,
		[Token(Token = "0x400087A")]
		ManualPreload
	}
	[Token(Token = "0x2000219")]
	public enum Fade
	{
		[Token(Token = "0x400087C")]
		In,
		[Token(Token = "0x400087D")]
		Out
	}
	[Serializable]
	[Token(Token = "0x200021A")]
	public class SoundGroup
	{
		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDD3D0", Offset = "0xBDD3D0")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x157E298", Offset = "0x157E298", VA = "0x157E298")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x157E34C", Offset = "0x157E34C", VA = "0x157E34C")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x157CC58", Offset = "0x157CC58", VA = "0x157CC58")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x157CD98", Offset = "0x157CD98", VA = "0x157CD98")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x157D8B4", Offset = "0x157D8B4", VA = "0x157D8B4")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200021B")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20002EA")]
		public enum Fade
		{
			[Token(Token = "0x4000CDE")]
			In,
			[Token(Token = "0x4000CDF")]
			Out
		}

		[Token(Token = "0x20002EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD86AC", Offset = "0xBD86AC")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4000CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001111")]
			[Address(RVA = "0x1579A94", Offset = "0x1579A94", VA = "0x1579A94")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6001112")]
			[Address(RVA = "0x157C6DC", Offset = "0x157C6DC", VA = "0x157C6DC")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD86BC", Offset = "0xBD86BC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6001114")]
			[Address(RVA = "0x157C644", Offset = "0x157C644", VA = "0x157C644")]
			public <>c()
			{
			}

			[Token(Token = "0x6001115")]
			[Address(RVA = "0x157C64C", Offset = "0x157C64C", VA = "0x157C64C")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD3FC", Offset = "0xBDD3FC")]
		public bool makePersistent;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD434", Offset = "0xBDD434")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD46C", Offset = "0xBDD46C")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD4A4", Offset = "0xBDD4A4")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD4DC", Offset = "0xBDD4DC")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD514", Offset = "0xBDD514")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD54C", Offset = "0xBDD54C")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD584", Offset = "0xBDD584")]
		public bool verboseLogging;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD5BC", Offset = "0xBDD5BC")]
		public int maxSoundEmitters;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD5F4", Offset = "0xBDD5F4")]
		public float volumeSoundFX;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD62C", Offset = "0xBDD62C")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000D5")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x15757BC", Offset = "0x15757BC", VA = "0x15757BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D6")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x157589C", Offset = "0x157589C", VA = "0x157589C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x1575904", Offset = "0x1575904", VA = "0x1575904")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D8")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x1575978", Offset = "0x1575978", VA = "0x1575978")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D9")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x15759EC", Offset = "0x15759EC", VA = "0x15759EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x1575A60", Offset = "0x1575A60", VA = "0x1575A60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x1575AD4", Offset = "0x1575AD4", VA = "0x1575AD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x1577978", Offset = "0x1577978", VA = "0x1577978")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1575B48", Offset = "0x1575B48", VA = "0x1575B48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1575D7C", Offset = "0x1575D7C", VA = "0x1575D7C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1575B4C", Offset = "0x1575B4C", VA = "0x1575B4C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1576A9C", Offset = "0x1576A9C", VA = "0x1576A9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1575ED4", Offset = "0x1575ED4", VA = "0x1575ED4")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1577114", Offset = "0x1577114", VA = "0x1577114")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1577294", Offset = "0x1577294", VA = "0x1577294")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1577430", Offset = "0x1577430", VA = "0x1577430")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1577530", Offset = "0x1577530", VA = "0x1577530")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x15775C0", Offset = "0x15775C0", VA = "0x15775C0")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x1576388", Offset = "0x1576388", VA = "0x1576388")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x1576AA0", Offset = "0x1576AA0", VA = "0x1576AA0")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x1577C2C", Offset = "0x1577C2C", VA = "0x1577C2C")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1577D30", Offset = "0x1577D30", VA = "0x1577D30")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1577E38", Offset = "0x1577E38", VA = "0x1577E38")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1577AF4", Offset = "0x1577AF4", VA = "0x1577AF4")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1577FAC", Offset = "0x1577FAC", VA = "0x1577FAC")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1578100", Offset = "0x1578100", VA = "0x1578100")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x15782B0", Offset = "0x15782B0", VA = "0x15782B0")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x15754C0", Offset = "0x15754C0", VA = "0x15754C0")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1575634", Offset = "0x1575634", VA = "0x1575634")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x157845C", Offset = "0x157845C", VA = "0x157845C")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x1578528", Offset = "0x1578528", VA = "0x1578528")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x15785BC", Offset = "0x15785BC", VA = "0x15785BC")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1578680", Offset = "0x1578680", VA = "0x1578680")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x1578724", Offset = "0x1578724", VA = "0x1578724")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1578804", Offset = "0x1578804", VA = "0x1578804")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x157939C", Offset = "0x157939C", VA = "0x157939C")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1579A9C", Offset = "0x1579A9C", VA = "0x1579A9C")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1579C7C", Offset = "0x1579C7C", VA = "0x1579C7C")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x157AA88", Offset = "0x157AA88", VA = "0x157AA88")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x1578A0C", Offset = "0x1578A0C", VA = "0x1578A0C")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x157ABA8", Offset = "0x157ABA8", VA = "0x157ABA8")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x157ACA0", Offset = "0x157ACA0", VA = "0x157ACA0")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x157ADE4", Offset = "0x157ADE4", VA = "0x157ADE4")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x157B1E4", Offset = "0x157B1E4", VA = "0x157B1E4")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x157B3F8", Offset = "0x157B3F8", VA = "0x157B3F8")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x157B514", Offset = "0x157B514", VA = "0x157B514")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x157B6DC", Offset = "0x157B6DC", VA = "0x157B6DC")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x157B7B4", Offset = "0x157B7B4", VA = "0x157B7B4")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x157B8FC", Offset = "0x157B8FC", VA = "0x157B8FC")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x157BD00", Offset = "0x157BD00", VA = "0x157BD00")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40008A5")]
		None = -1,
		[Token(Token = "0x40008A6")]
		Reserved,
		[Token(Token = "0x40008A7")]
		Any
	}
	[Serializable]
	[Token(Token = "0x200021D")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x157C7D8", Offset = "0x157C7D8", VA = "0x157C7D8")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float minDefaultVal;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDefaultVal;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float min;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float max;

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x157C77C", Offset = "0x157C77C", VA = "0x157C77C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20002ED")]
		public enum FadeState
		{
			[Token(Token = "0x4000CE4")]
			Null,
			[Token(Token = "0x4000CE5")]
			FadingIn,
			[Token(Token = "0x4000CE6")]
			FadingOut,
			[Token(Token = "0x4000CE7")]
			Ducking
		}

		[Token(Token = "0x20002EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD86CC", Offset = "0xBD86CC")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x1700015D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001119")]
				[Address(RVA = "0x157D29C", Offset = "0x157D29C", VA = "0x157D29C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600111B")]
				[Address(RVA = "0x157D304", Offset = "0x157D304", VA = "0x157D304", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001116")]
			[Address(RVA = "0x157CF58", Offset = "0x157CF58", VA = "0x157CF58")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001117")]
			[Address(RVA = "0x157D1A0", Offset = "0x157D1A0", VA = "0x157D1A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001118")]
			[Address(RVA = "0x157D1A4", Offset = "0x157D1A4", VA = "0x157D1A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600111A")]
			[Address(RVA = "0x157D2A4", Offset = "0x157D2A4", VA = "0x157D2A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD86DC", Offset = "0xBD86DC")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x1700015F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600111F")]
				[Address(RVA = "0x157D774", Offset = "0x157D774", VA = "0x157D774", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000160")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001121")]
				[Address(RVA = "0x157D7DC", Offset = "0x157D7DC", VA = "0x157D7DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600111C")]
			[Address(RVA = "0x157D130", Offset = "0x157D130", VA = "0x157D130")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x600111D")]
			[Address(RVA = "0x157D5FC", Offset = "0x157D5FC", VA = "0x157D5FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600111E")]
			[Address(RVA = "0x157D600", Offset = "0x157D600", VA = "0x157D600", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001120")]
			[Address(RVA = "0x157D77C", Offset = "0x157D77C", VA = "0x157D77C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD86EC", Offset = "0xBD86EC")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000161")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001125")]
				[Address(RVA = "0x157D58C", Offset = "0x157D58C", VA = "0x157D58C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000162")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001127")]
				[Address(RVA = "0x157D5F4", Offset = "0x157D5F4", VA = "0x157D5F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001122")]
			[Address(RVA = "0x157D15C", Offset = "0x157D15C", VA = "0x157D15C")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001123")]
			[Address(RVA = "0x157D30C", Offset = "0x157D30C", VA = "0x157D30C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001124")]
			[Address(RVA = "0x157D310", Offset = "0x157D310", VA = "0x157D310", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001126")]
			[Address(RVA = "0x157D594", Offset = "0x157D594", VA = "0x157D594", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000DD")]
		public float volume
		{
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x157AA6C", Offset = "0x157AA6C", VA = "0x157AA6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x157C878", Offset = "0x157C878", VA = "0x157C878")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public float pitch
		{
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x157C894", Offset = "0x157C894", VA = "0x157C894")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x157C8B0", Offset = "0x157C8B0", VA = "0x157C8B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public AudioClip clip
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x157C8CC", Offset = "0x157C8CC", VA = "0x157C8CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x157C8E8", Offset = "0x157C8E8", VA = "0x157C8E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public float time
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x157C904", Offset = "0x157C904", VA = "0x157C904")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x15787E8", Offset = "0x15787E8", VA = "0x15787E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public float length
		{
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x157C920", Offset = "0x157C920", VA = "0x157C920")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E2")]
		public bool loop
		{
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x157C9D8", Offset = "0x157C9D8", VA = "0x157C9D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x157C9F4", Offset = "0x157C9F4", VA = "0x157C9F4")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public bool mute
		{
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x157CA14", Offset = "0x157CA14", VA = "0x157CA14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x157CA30", Offset = "0x157CA30", VA = "0x157CA30")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x157CA50", Offset = "0x157CA50", VA = "0x157CA50")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x157CA6C", Offset = "0x157CA6C", VA = "0x157CA6C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public bool isPlaying
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x157CA88", Offset = "0x157CA88", VA = "0x157CA88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x157CAA4", Offset = "0x157CAA4", VA = "0x157CAA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x157AA34", Offset = "0x157AA34", VA = "0x157AA34")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x157CCE8", Offset = "0x157CCE8", VA = "0x157CCE8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x157ADB0", Offset = "0x157ADB0", VA = "0x157ADB0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x157CCF0", Offset = "0x157CCF0", VA = "0x157CCF0")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x157CCF8", Offset = "0x157CCF8", VA = "0x157CCF8")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x157B634", Offset = "0x157B634", VA = "0x157B634")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x1577BC0", Offset = "0x1577BC0", VA = "0x1577BC0")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x157CD00", Offset = "0x157CD00", VA = "0x157CD00")]
		public void Play()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x157CD60", Offset = "0x157CD60", VA = "0x157CD60")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x15779E0", Offset = "0x15779E0", VA = "0x15779E0")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x157CE28", Offset = "0x157CE28", VA = "0x157CE28")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x157B0D8", Offset = "0x157B0D8", VA = "0x157B0D8")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x157B328", Offset = "0x157B328", VA = "0x157B328")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x1577F64", Offset = "0x1577F64", VA = "0x1577F64")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x157CE80", Offset = "0x157CE80", VA = "0x157CE80")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x157CEAC", Offset = "0x157CEAC", VA = "0x157CEAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE0488", Offset = "0xBE0488")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x157CF84", Offset = "0x157CF84", VA = "0x157CF84")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x1578368", Offset = "0x1578368", VA = "0x1578368")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x15783E4", Offset = "0x15783E4", VA = "0x15783E4")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x1578218", Offset = "0x1578218", VA = "0x1578218")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x1578064", Offset = "0x1578064", VA = "0x1578064")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x157CFEC", Offset = "0x157CFEC", VA = "0x157CFEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE04EC", Offset = "0xBE04EC")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x157D07C", Offset = "0x157D07C", VA = "0x157D07C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE0550", Offset = "0xBE0550")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x157D188", Offset = "0x157D188", VA = "0x157D188")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40008BE")]
		Random,
		[Token(Token = "0x40008BF")]
		Sequential
	}
	[Token(Token = "0x2000221")]
	public enum FreqHint
	{
		[Token(Token = "0x40008C1")]
		None,
		[Token(Token = "0x40008C2")]
		Wide,
		[Token(Token = "0x40008C3")]
		Narrow
	}
	[Token(Token = "0x2000222")]
	public enum SoundPriority
	{
		[Token(Token = "0x40008C5")]
		VeryLow = -2,
		[Token(Token = "0x40008C6")]
		Low,
		[Token(Token = "0x40008C7")]
		Default,
		[Token(Token = "0x40008C8")]
		High,
		[Token(Token = "0x40008C9")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public class OSPProps
	{
		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD714", Offset = "0xBDD714")]
		public bool enableSpatialization;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD74C", Offset = "0xBDD74C")]
		public bool useFastOverride;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD784", Offset = "0xBDD784")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDD784", Offset = "0xBDD784")]
		public float gain;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD7D8", Offset = "0xBDD7D8")]
		public bool enableInvSquare;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD810", Offset = "0xBDD810")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDD810", Offset = "0xBDD810")]
		public float volumetric;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD868", Offset = "0xBDD868")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xBDD868", Offset = "0xBDD868")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x157C7E8", Offset = "0x157C7E8", VA = "0x157C7E8")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000224")]
	public class SoundFX
	{
		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD8C8", Offset = "0xBDD8C8")]
		public string name;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD900", Offset = "0xBDD900")]
		public SoundFXNext playback;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD938", Offset = "0xBDD938")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDD938", Offset = "0xBDD938")]
		public float volume;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD98C", Offset = "0xBDD98C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xBDD98C", Offset = "0xBDD98C")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDD9E8", Offset = "0xBDD9E8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xBDD9E8", Offset = "0xBDD9E8")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDA48", Offset = "0xBDDA48")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDA80", Offset = "0xBDDA80")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDAB8", Offset = "0xBDDAB8")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDAF0", Offset = "0xBDDAF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDDAF0", Offset = "0xBDDAF0")]
		public float spread;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDB48", Offset = "0xBDDB48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDDB48", Offset = "0xBDDB48")]
		public float pctChanceToPlay;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDB9C", Offset = "0xBDDB9C")]
		public SoundPriority priority;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDBD4", Offset = "0xBDDBD4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xBDDBD4", Offset = "0xBDDBD4")]
		public Vector2 delay;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDC30", Offset = "0xBDDC30")]
		public bool looping;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDC68", Offset = "0xBDDC68")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170000E6")]
		public int Length
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x157D7E4", Offset = "0x157D7E4", VA = "0x157D7E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E7")]
		public bool IsValid
		{
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x157D800", Offset = "0x157D800", VA = "0x157D800")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E8")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0x157D8A4", Offset = "0x157D8A4", VA = "0x157D8A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x157D8AC", Offset = "0x157D8AC", VA = "0x157D8AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x157A93C", Offset = "0x157A93C", VA = "0x157A93C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EA")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x157A970", Offset = "0x157A970", VA = "0x157A970")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x157C080", Offset = "0x157C080", VA = "0x157C080")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x157A86C", Offset = "0x157A86C", VA = "0x157A86C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x157A994", Offset = "0x157A994", VA = "0x157A994")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x157A948", Offset = "0x157A948", VA = "0x157A948")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x157D8D4", Offset = "0x157D8D4", VA = "0x157D8D4")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x157A988", Offset = "0x157A988", VA = "0x157A988")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x157D9D0", Offset = "0x157D9D0", VA = "0x157D9D0")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x157DAAC", Offset = "0x157DAAC", VA = "0x157DAAC")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x157DBC0", Offset = "0x157DBC0", VA = "0x157DBC0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x157DC4C", Offset = "0x157DC4C", VA = "0x157DC4C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x157DCE0", Offset = "0x157DCE0", VA = "0x157DCE0")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x157DD6C", Offset = "0x157DD6C", VA = "0x157DD6C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x157DDF8", Offset = "0x157DDF8", VA = "0x157DDF8")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000225")]
	public class SoundFXRef
	{
		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000EB")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x157DE70", Offset = "0x157DE70", VA = "0x157DE70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public string name
		{
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x157DF84", Offset = "0x157DF84", VA = "0x157DF84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x157DF8C", Offset = "0x157DF8C", VA = "0x157DF8C")]
			set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public int Length
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x157DFB4", Offset = "0x157DFB4", VA = "0x157DFB4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EE")]
		public bool IsValid
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x157DFF8", Offset = "0x157DFF8", VA = "0x157DFF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x157DEA0", Offset = "0x157DEA0", VA = "0x157DEA0")]
		private void Init()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x157E030", Offset = "0x157E030", VA = "0x157E030")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x157E068", Offset = "0x157E068", VA = "0x157E068")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x157E0A8", Offset = "0x157E0A8", VA = "0x157E0A8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x1575440", Offset = "0x1575440", VA = "0x1575440")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x157E0F0", Offset = "0x157E0F0", VA = "0x157E0F0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x157E130", Offset = "0x157E130", VA = "0x157E130")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x157E180", Offset = "0x157E180", VA = "0x157E180")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x157E1B8", Offset = "0x157E1B8", VA = "0x157E1B8")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x157E1F8", Offset = "0x157E1F8", VA = "0x157E1F8")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x157E230", Offset = "0x157E230", VA = "0x157E230")]
		public SoundFXRef()
		{
		}
	}
}
namespace PlayStationVRExample
{
	[Token(Token = "0x2000226")]
	public class DisableAfterDelay : MonoBehaviour
	{
		[Token(Token = "0x20002F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD86FC", Offset = "0xBD86FC")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DisableAfterDelay <>4__this;

			[Token(Token = "0x17000163")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600112B")]
				[Address(RVA = "0x11F31D8", Offset = "0x11F31D8", VA = "0x11F31D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000164")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600112D")]
				[Address(RVA = "0x11F3240", Offset = "0x11F3240", VA = "0x11F3240", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001128")]
			[Address(RVA = "0x11F30BC", Offset = "0x11F30BC", VA = "0x11F30BC")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001129")]
			[Address(RVA = "0x11F30F8", Offset = "0x11F30F8", VA = "0x11F30F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600112A")]
			[Address(RVA = "0x11F30FC", Offset = "0x11F30FC", VA = "0x11F30FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600112C")]
			[Address(RVA = "0x11F31E0", Offset = "0x11F31E0", VA = "0x11F31E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disableOnPlay;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float delay;

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x11F3040", Offset = "0x11F3040", VA = "0x11F3040")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE05B4", Offset = "0xBE05B4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x11F30E8", Offset = "0x11F30E8", VA = "0x11F30E8")]
		public DisableAfterDelay()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class InstructionsManager : MonoBehaviour
	{
		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD870C", Offset = "0xBD870C")]
		private sealed class <BeginGameCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstructionsManager <>4__this;

			[Token(Token = "0x17000165")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001131")]
				[Address(RVA = "0x11F3FE8", Offset = "0x11F3FE8", VA = "0x11F3FE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000166")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001133")]
				[Address(RVA = "0x11F4050", Offset = "0x11F4050", VA = "0x11F4050", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600112E")]
			[Address(RVA = "0x11F3CEC", Offset = "0x11F3CEC", VA = "0x11F3CEC")]
			[DebuggerHidden]
			public <BeginGameCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600112F")]
			[Address(RVA = "0x11F3D28", Offset = "0x11F3D28", VA = "0x11F3D28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001130")]
			[Address(RVA = "0x11F3D2C", Offset = "0x11F3D2C", VA = "0x11F3D2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001132")]
			[Address(RVA = "0x11F3FF0", Offset = "0x11F3FF0", VA = "0x11F3FF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup instructionsCanvasGroup;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeSpeed;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_HasStarted;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WeaponController[] m_WeaponControls;

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x11F3BB4", Offset = "0x11F3BB4", VA = "0x11F3BB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x11F3C30", Offset = "0x11F3C30", VA = "0x11F3C30")]
		public void BeginGame()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x11F3C70", Offset = "0x11F3C70", VA = "0x11F3C70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE0618", Offset = "0xBE0618")]
		private IEnumerator BeginGameCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x11F3D18", Offset = "0x11F3D18", VA = "0x11F3D18")]
		public InstructionsManager()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class LookAtTarget : MonoBehaviour
	{
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform lookAtTarget;

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x11F4214", Offset = "0x11F4214", VA = "0x11F4214")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x11F42B8", Offset = "0x11F42B8", VA = "0x11F42B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x11F43C0", Offset = "0x11F43C0", VA = "0x11F43C0")]
		public LookAtTarget()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class MainMenuManager : MonoBehaviour
	{
		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text ds4StatusText;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider ds4Slider;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text moveStatusText;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider moveSlider;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text aimStatusText;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider aimSlider;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text renderScaleText;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Slider renderScaleSlider;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text socialScreenText;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Slider socialScreenSlider;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text minOutputColorText;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Slider minOutputColorSlider;

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x11F43C8", Offset = "0x11F43C8", VA = "0x11F43C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x11F44C8", Offset = "0x11F44C8", VA = "0x11F44C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x11F44CC", Offset = "0x11F44CC", VA = "0x11F44CC")]
		private void DualShock4Check()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x11F44D0", Offset = "0x11F44D0", VA = "0x11F44D0")]
		private void MoveCheck()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x11F4584", Offset = "0x11F4584", VA = "0x11F4584")]
		private void AimCheck()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x11F4588", Offset = "0x11F4588", VA = "0x11F4588")]
		public void GoToDualShock4Scene()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x11F466C", Offset = "0x11F466C", VA = "0x11F466C")]
		public void GoToMoveScene()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x11F46EC", Offset = "0x11F46EC", VA = "0x11F46EC")]
		public void GoToAimScene()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x11F476C", Offset = "0x11F476C", VA = "0x11F476C")]
		public void OptionsToggleShowHmdView()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x11F4964", Offset = "0x11F4964", VA = "0x11F4964")]
		public void SwitchRenderScale()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x11F4A68", Offset = "0x11F4A68", VA = "0x11F4A68")]
		private void OptionsToggleMinimumOutputColor()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x11F4A6C", Offset = "0x11F4A6C", VA = "0x11F4A6C")]
		public MainMenuManager()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class SceneSwitcher : MonoBehaviour
	{
		[Token(Token = "0x20002F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD871C", Offset = "0xBD871C")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x17000167")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001137")]
				[Address(RVA = "0x11F5108", Offset = "0x11F5108", VA = "0x11F5108", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000168")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001139")]
				[Address(RVA = "0x11F5170", Offset = "0x11F5170", VA = "0x11F5170", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001134")]
			[Address(RVA = "0x11F4AF0", Offset = "0x11F4AF0", VA = "0x11F4AF0")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001135")]
			[Address(RVA = "0x11F4FAC", Offset = "0x11F4FAC", VA = "0x11F4FAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001136")]
			[Address(RVA = "0x11F4FB0", Offset = "0x11F4FB0", VA = "0x11F4FB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001138")]
			[Address(RVA = "0x11F5110", Offset = "0x11F5110", VA = "0x11F5110", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD872C", Offset = "0xBD872C")]
		private sealed class <FadeDownRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x17000169")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600113D")]
				[Address(RVA = "0x11F4F3C", Offset = "0x11F4F3C", VA = "0x11F4F3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600113F")]
				[Address(RVA = "0x11F4FA4", Offset = "0x11F4FA4", VA = "0x11F4FA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600113A")]
			[Address(RVA = "0x11F4C18", Offset = "0x11F4C18", VA = "0x11F4C18")]
			[DebuggerHidden]
			public <FadeDownRoutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600113B")]
			[Address(RVA = "0x11F4DD0", Offset = "0x11F4DD0", VA = "0x11F4DD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600113C")]
			[Address(RVA = "0x11F4DD4", Offset = "0x11F4DD4", VA = "0x11F4DD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600113E")]
			[Address(RVA = "0x11F4F44", Offset = "0x11F4F44", VA = "0x11F4F44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD873C", Offset = "0xBD873C")]
		private sealed class <SwitchToSceneRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x4000D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int sceneIndex;

			[Token(Token = "0x1700016B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001143")]
				[Address(RVA = "0x11F5358", Offset = "0x11F5358", VA = "0x11F5358", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001145")]
				[Address(RVA = "0x11F53C0", Offset = "0x11F53C0", VA = "0x11F53C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001140")]
			[Address(RVA = "0x11F4CD0", Offset = "0x11F4CD0", VA = "0x11F4CD0")]
			[DebuggerHidden]
			public <SwitchToSceneRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001141")]
			[Address(RVA = "0x11F5178", Offset = "0x11F5178", VA = "0x11F5178", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001142")]
			[Address(RVA = "0x11F517C", Offset = "0x11F517C", VA = "0x11F517C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001144")]
			[Address(RVA = "0x11F5360", Offset = "0x11F5360", VA = "0x11F5360", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD874C", Offset = "0xBD874C")]
		private sealed class <SwitchToSceneRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x4000D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x1700016D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001149")]
				[Address(RVA = "0x11F55A8", Offset = "0x11F55A8", VA = "0x11F55A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600114B")]
				[Address(RVA = "0x11F5610", Offset = "0x11F5610", VA = "0x11F5610", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001146")]
			[Address(RVA = "0x11F4D94", Offset = "0x11F4D94", VA = "0x11F4D94")]
			[DebuggerHidden]
			public <SwitchToSceneRoutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001147")]
			[Address(RVA = "0x11F53C8", Offset = "0x11F53C8", VA = "0x11F53C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001148")]
			[Address(RVA = "0x11F53CC", Offset = "0x11F53CC", VA = "0x11F53CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600114A")]
			[Address(RVA = "0x11F55B0", Offset = "0x11F55B0", VA = "0x11F55B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeSpeed;

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x11F4A74", Offset = "0x11F4A74", VA = "0x11F4A74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE067C", Offset = "0xBE067C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x11F4B1C", Offset = "0x11F4B1C", VA = "0x11F4B1C")]
		public void SwitchToScene(int sceneIndex)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x11F4608", Offset = "0x11F4608", VA = "0x11F4608")]
		public void SwitchToScene(string sceneName)
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x11F4B9C", Offset = "0x11F4B9C", VA = "0x11F4B9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE06E0", Offset = "0xBE06E0")]
		private IEnumerator FadeDownRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x11F4C44", Offset = "0x11F4C44", VA = "0x11F4C44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE0744", Offset = "0xBE0744")]
		private IEnumerator SwitchToSceneRoutine(int sceneIndex)
		{
			return null;
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x11F4CFC", Offset = "0x11F4CFC", VA = "0x11F4CFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE07A8", Offset = "0xBE07A8")]
		private IEnumerator SwitchToSceneRoutine(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x11F4DC0", Offset = "0x11F4DC0", VA = "0x11F4DC0")]
		public SceneSwitcher()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class ScoreManager : MonoBehaviour
	{
		[Token(Token = "0x20002F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD875C", Offset = "0xBD875C")]
		private sealed class <EndTimer>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScoreManager <>4__this;

			[Token(Token = "0x1700016F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600114F")]
				[Address(RVA = "0x11F5E38", Offset = "0x11F5E38", VA = "0x11F5E38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000170")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001151")]
				[Address(RVA = "0x11F5EA0", Offset = "0x11F5EA0", VA = "0x11F5EA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600114C")]
			[Address(RVA = "0x11F5AE4", Offset = "0x11F5AE4", VA = "0x11F5AE4")]
			[DebuggerHidden]
			public <EndTimer>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600114D")]
			[Address(RVA = "0x11F5C64", Offset = "0x11F5C64", VA = "0x11F5C64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600114E")]
			[Address(RVA = "0x11F5C68", Offset = "0x11F5C68", VA = "0x11F5C68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001150")]
			[Address(RVA = "0x11F5E40", Offset = "0x11F5E40", VA = "0x11F5E40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text timerText;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image timerDisplay;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text scoreText;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text accuracyText;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text highScoreText;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float totalTime;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int scoreValue;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_TheScore;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_HighScore;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_Accuracy;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_RollingScore;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_CurrentTime;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_TimerIsRunning;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TargetsManager m_TargetsManager;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WeaponController[] m_WeaponControls;

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x11F5618", Offset = "0x11F5618", VA = "0x11F5618")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x11F57B8", Offset = "0x11F57B8", VA = "0x11F57B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x11F5888", Offset = "0x11F5888", VA = "0x11F5888")]
		private void Timer()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x11F580C", Offset = "0x11F580C", VA = "0x11F580C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE080C", Offset = "0xBE080C")]
		private IEnumerator EndTimer()
		{
			return null;
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x11F5940", Offset = "0x11F5940", VA = "0x11F5940")]
		private void UpdateScoreDisplay()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x11F3FD0", Offset = "0x11F3FD0", VA = "0x11F3FD0")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x11F5B10", Offset = "0x11F5B10", VA = "0x11F5B10")]
		private void CalculateAccuracy()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x11F5BAC", Offset = "0x11F5BAC", VA = "0x11F5BAC")]
		public void IncreaseScore()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x11F5BBC", Offset = "0x11F5BBC", VA = "0x11F5BBC")]
		public void Quit()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x11F5C44", Offset = "0x11F5C44", VA = "0x11F5C44")]
		public ScoreManager()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class SetupManager : MonoBehaviour
	{
		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator m_StateMachine;

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x11F5EA8", Offset = "0x11F5EA8", VA = "0x11F5EA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x11F5FA4", Offset = "0x11F5FA4", VA = "0x11F5FA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x11F60A8", Offset = "0x11F60A8", VA = "0x11F60A8")]
		public void FinishedUIInteraction()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x11F6104", Offset = "0x11F6104", VA = "0x11F6104")]
		public void ProgressToMainMenu()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x11F6184", Offset = "0x11F6184", VA = "0x11F6184")]
		public SetupManager()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class Spinner : MonoBehaviour
	{
		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool local;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool allowManual;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool allowAutomatic;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool lockZ;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float autoTimer;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 spinDirection;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_GoAutomaticTime;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_AutoSpinDirection;

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x11F618C", Offset = "0x11F618C", VA = "0x11F618C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x11F61A0", Offset = "0x11F61A0", VA = "0x11F61A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x11F62C8", Offset = "0x11F62C8", VA = "0x11F62C8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x11F6524", Offset = "0x11F6524", VA = "0x11F6524")]
		public Spinner()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class TargetObject : MonoBehaviour
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject explosionEffect;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject solidTarget;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject brokenTarget;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip audioClipSpawned;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip audioClipHit;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float destructionForce;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float debisDestroyDelay;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource m_AudioPlayer;

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x11F65BC", Offset = "0x11F65BC", VA = "0x11F65BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x11F6688", Offset = "0x11F6688", VA = "0x11F6688")]
		public void DestroyTarget()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x11F6B14", Offset = "0x11F6B14", VA = "0x11F6B14")]
		public TargetObject()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class TargetsManager : MonoBehaviour
	{
		[Token(Token = "0x20002F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD876C", Offset = "0xBD876C")]
		private sealed class <SpawnTarget>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetsManager <>4__this;

			[Token(Token = "0x17000171")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001155")]
				[Address(RVA = "0x11F702C", Offset = "0x11F702C", VA = "0x11F702C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000172")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001157")]
				[Address(RVA = "0x11F7094", Offset = "0x11F7094", VA = "0x11F7094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001152")]
			[Address(RVA = "0x11F6CDC", Offset = "0x11F6CDC", VA = "0x11F6CDC")]
			[DebuggerHidden]
			public <SpawnTarget>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001153")]
			[Address(RVA = "0x11F6F14", Offset = "0x11F6F14", VA = "0x11F6F14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001154")]
			[Address(RVA = "0x11F6F18", Offset = "0x11F6F18", VA = "0x11F6F18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001156")]
			[Address(RVA = "0x11F7034", Offset = "0x11F7034", VA = "0x11F7034", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float spawnRateMin;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spawnRateMax;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject targetPrefab;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform spawnPoint;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 spawnArea;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int maxSpawnedObjects;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_AllowSpawning;

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x11F3F9C", Offset = "0x11F3F9C", VA = "0x11F3F9C")]
		public void BeginSpawning()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x11F5E2C", Offset = "0x11F5E2C", VA = "0x11F5E2C")]
		public void StopSpawning()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x11F6AC4", Offset = "0x11F6AC4", VA = "0x11F6AC4")]
		public void SpawnTargetImmediately()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x11F6B28", Offset = "0x11F6B28", VA = "0x11F6B28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE0870", Offset = "0xBE0870")]
		private IEnumerator SpawnTarget()
		{
			return null;
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x11F6BA4", Offset = "0x11F6BA4", VA = "0x11F6BA4")]
		private void Spawn()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x11F6E3C", Offset = "0x11F6E3C", VA = "0x11F6E3C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x11F6D08", Offset = "0x11F6D08", VA = "0x11F6D08")]
		private Vector3 RandomSpawnPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x11F6E88", Offset = "0x11F6E88", VA = "0x11F6E88")]
		public TargetsManager()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class InputVisualiser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002F9")]
		public class Controller
		{
			[Token(Token = "0x4000D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform buttonCross;

			[Token(Token = "0x4000D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform buttonCircle;

			[Token(Token = "0x4000D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform buttonSquare;

			[Token(Token = "0x4000D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform buttonTriangle;

			[Token(Token = "0x4000D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform buttonOptions;

			[Token(Token = "0x4000D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform buttonTouchpad;

			[Token(Token = "0x4000D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Transform dpadDown;

			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform dpadRight;

			[Token(Token = "0x4000D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform dpadUp;

			[Token(Token = "0x4000D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform dpadLeft;

			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Transform buttonL1;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform buttonR1;

			[Token(Token = "0x4000D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform buttonR12;

			[Token(Token = "0x4000D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform triggerL2;

			[Token(Token = "0x4000D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Transform triggerR2;

			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Transform thumbstickL3;

			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Transform thumbstickR3;

			[Token(Token = "0x6001158")]
			[Address(RVA = "0x11F3BAC", Offset = "0x11F3BAC", VA = "0x11F3BAC")]
			public Controller()
			{
			}
		}

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Controller controller;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float buttonPressDistance;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float triggerPullAngle;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float thumbstickAngle;

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x11F3248", Offset = "0x11F3248", VA = "0x11F3248")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x11F3BA4", Offset = "0x11F3BA4", VA = "0x11F3BA4")]
		public InputVisualiser()
		{
		}
	}
	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD80E0", Offset = "0xBD80E0")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer m_Line;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RaycastHit m_Hit;

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x11F4058", Offset = "0x11F4058", VA = "0x11F4058")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x11F40B8", Offset = "0x11F40B8", VA = "0x11F40B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x11F420C", Offset = "0x11F420C", VA = "0x11F420C")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class WeaponController : MonoBehaviour
	{
		[Token(Token = "0x20002FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD877C", Offset = "0xBD877C")]
		private sealed class <Vibrate>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000173")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600115C")]
				[Address(RVA = "0x11F8E30", Offset = "0x11F8E30", VA = "0x11F8E30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000174")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600115E")]
				[Address(RVA = "0x11F8E98", Offset = "0x11F8E98", VA = "0x11F8E98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001159")]
			[Address(RVA = "0x11F8D4C", Offset = "0x11F8D4C", VA = "0x11F8D4C")]
			[DebuggerHidden]
			public <Vibrate>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600115A")]
			[Address(RVA = "0x11F8D88", Offset = "0x11F8D88", VA = "0x11F8D88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600115B")]
			[Address(RVA = "0x11F8D8C", Offset = "0x11F8D8C", VA = "0x11F8D8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600115D")]
			[Address(RVA = "0x11F8E38", Offset = "0x11F8E38", VA = "0x11F8E38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fireRate;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem shotEmitter;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isMoveController;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isSecondaryMoveController;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isAimController;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource shotSound;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource missSound;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LaserPointer m_LaserPointer;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RaycastHit m_Hit;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_LastShotTime;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_CanShoot;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_HasShootInput;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public int shotsFired;

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x11F89EC", Offset = "0x11F89EC", VA = "0x11F89EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x11F8A7C", Offset = "0x11F8A7C", VA = "0x11F8A7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x11F8ADC", Offset = "0x11F8ADC", VA = "0x11F8ADC")]
		private bool CheckForInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x11F8B28", Offset = "0x11F8B28", VA = "0x11F8B28")]
		private void Fire()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x11F8CEC", Offset = "0x11F8CEC", VA = "0x11F8CEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE08D4", Offset = "0xBE08D4")]
		private IEnumerator Vibrate()
		{
			return null;
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x11F3F54", Offset = "0x11F3F54", VA = "0x11F3F54")]
		public void WeaponCanShoot(bool shootBool)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x11F8D78", Offset = "0x11F8D78", VA = "0x11F8D78")]
		public WeaponController()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class TrackedPlayStationDevices : MonoBehaviour
	{
		[Token(Token = "0x20002FB")]
		public enum TrackedDevicesType
		{
			[Token(Token = "0x4000D31")]
			DualShock4 = 1,
			[Token(Token = "0x4000D32")]
			Aim = 2,
			[Token(Token = "0x4000D33")]
			Move = 4
		}

		[Serializable]
		[Token(Token = "0x20002FC")]
		public class TrackedDevice
		{
			[Token(Token = "0x4000D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int handle;

			[Token(Token = "0x4000D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer light;

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Quaternion orientation;

			[Token(Token = "0x600115F")]
			[Address(RVA = "0x11F7A5C", Offset = "0x11F7A5C", VA = "0x11F7A5C")]
			public TrackedDevice()
			{
			}
		}

		[Token(Token = "0x20002FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD878C", Offset = "0xBD878C")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrackedPlayStationDevices <>4__this;

			[Token(Token = "0x17000175")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001163")]
				[Address(RVA = "0x11F79EC", Offset = "0x11F79EC", VA = "0x11F79EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000176")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001165")]
				[Address(RVA = "0x11F7A54", Offset = "0x11F7A54", VA = "0x11F7A54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001160")]
			[Address(RVA = "0x11F7118", Offset = "0x11F7118", VA = "0x11F7118")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001161")]
			[Address(RVA = "0x11F770C", Offset = "0x11F770C", VA = "0x11F770C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001162")]
			[Address(RVA = "0x11F7710", Offset = "0x11F7710", VA = "0x11F7710", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001164")]
			[Address(RVA = "0x11F79F4", Offset = "0x11F79F4", VA = "0x11F79F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD879C", Offset = "0xBD879C")]
		private sealed class <RegisterDualShock4Controller>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000177")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001169")]
				[Address(RVA = "0x11F75CC", Offset = "0x11F75CC", VA = "0x11F75CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000178")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600116B")]
				[Address(RVA = "0x11F7634", Offset = "0x11F7634", VA = "0x11F7634", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001166")]
			[Address(RVA = "0x11F73FC", Offset = "0x11F73FC", VA = "0x11F73FC")]
			[DebuggerHidden]
			public <RegisterDualShock4Controller>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001167")]
			[Address(RVA = "0x11F756C", Offset = "0x11F756C", VA = "0x11F756C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001168")]
			[Address(RVA = "0x11F7570", Offset = "0x11F7570", VA = "0x11F7570", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600116A")]
			[Address(RVA = "0x11F75D4", Offset = "0x11F75D4", VA = "0x11F75D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD87AC", Offset = "0xBD87AC")]
		private sealed class <RegisterAimController>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000179")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600116F")]
				[Address(RVA = "0x11F74FC", Offset = "0x11F74FC", VA = "0x11F74FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001171")]
				[Address(RVA = "0x11F7564", Offset = "0x11F7564", VA = "0x11F7564", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600116C")]
			[Address(RVA = "0x11F7428", Offset = "0x11F7428", VA = "0x11F7428")]
			[DebuggerHidden]
			public <RegisterAimController>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600116D")]
			[Address(RVA = "0x11F749C", Offset = "0x11F749C", VA = "0x11F749C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600116E")]
			[Address(RVA = "0x11F74A0", Offset = "0x11F74A0", VA = "0x11F74A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001170")]
			[Address(RVA = "0x11F7504", Offset = "0x11F7504", VA = "0x11F7504", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD87BC", Offset = "0xBD87BC")]
		private sealed class <RegisterMoveControllers>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700017B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001175")]
				[Address(RVA = "0x11F769C", Offset = "0x11F769C", VA = "0x11F769C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001177")]
				[Address(RVA = "0x11F7704", Offset = "0x11F7704", VA = "0x11F7704", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001172")]
			[Address(RVA = "0x11F7454", Offset = "0x11F7454", VA = "0x11F7454")]
			[DebuggerHidden]
			public <RegisterMoveControllers>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001173")]
			[Address(RVA = "0x11F763C", Offset = "0x11F763C", VA = "0x11F763C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001174")]
			[Address(RVA = "0x11F7640", Offset = "0x11F7640", VA = "0x11F7640", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001176")]
			[Address(RVA = "0x11F76A4", Offset = "0x11F76A4", VA = "0x11F76A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackedDevicesType trackedDevicesType;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackedDevice deviceDualShock4;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrackedDevice deviceAim;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TrackedDevice deviceMovePrimary;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TrackedDevice deviceMoveSecondary;

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x11F709C", Offset = "0x11F709C", VA = "0x11F709C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE0938", Offset = "0xBE0938")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x11F7144", Offset = "0x11F7144", VA = "0x11F7144")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x11F71DC", Offset = "0x11F71DC", VA = "0x11F71DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x11F7234", Offset = "0x11F7234", VA = "0x11F7234")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x11F7238", Offset = "0x11F7238", VA = "0x11F7238")]
		public void ResetDeviceTracking()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x11F71D0", Offset = "0x11F71D0", VA = "0x11F71D0")]
		private void UpdateDualShock4Transforms()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x11F71D4", Offset = "0x11F71D4", VA = "0x11F71D4")]
		private void UpdateAimTransforms()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x11F71D8", Offset = "0x11F71D8", VA = "0x11F71D8")]
		private void UpdateMoveTransforms()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x11F725C", Offset = "0x11F725C", VA = "0x11F725C")]
		public void RegisterDevices()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x11F72DC", Offset = "0x11F72DC", VA = "0x11F72DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE099C", Offset = "0xBE099C")]
		private IEnumerator RegisterDualShock4Controller()
		{
			return null;
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x11F733C", Offset = "0x11F733C", VA = "0x11F733C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE0A00", Offset = "0xBE0A00")]
		private IEnumerator RegisterAimController()
		{
			return null;
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x11F739C", Offset = "0x11F739C", VA = "0x11F739C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE0A64", Offset = "0xBE0A64")]
		private IEnumerator RegisterMoveControllers()
		{
			return null;
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x11F71E0", Offset = "0x11F71E0", VA = "0x11F71E0")]
		public void UnregisterDevices()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x11F7480", Offset = "0x11F7480", VA = "0x11F7480")]
		private void UnregisterDualShock4()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x11F7484", Offset = "0x11F7484", VA = "0x11F7484")]
		private void UnregisterAimController()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x11F7488", Offset = "0x11F7488", VA = "0x11F7488")]
		private void UnregisterMoveControllers()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x11F748C", Offset = "0x11F748C", VA = "0x11F748C")]
		public TrackedPlayStationDevices()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class VRDeviceNames
	{
		[Token(Token = "0x400093B")]
		public const string None = "None";

		[Token(Token = "0x400093C")]
		public const string Unknown = "Unknown";

		[Token(Token = "0x400093D")]
		public const string Oculus = "Oculus";

		[Token(Token = "0x400093E")]
		public const string playStationVR = "PlayStationVR";

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x11F7B0C", Offset = "0x11F7B0C", VA = "0x11F7B0C")]
		public VRDeviceNames()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class VRManager : MonoBehaviour
	{
		[Token(Token = "0x2000301")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD87CC", Offset = "0xBD87CC")]
		private sealed class <SetupVR>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRManager <>4__this;

			[Token(Token = "0x1700017D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600117B")]
				[Address(RVA = "0x11F7ED0", Offset = "0x11F7ED0", VA = "0x11F7ED0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600117D")]
				[Address(RVA = "0x11F7F38", Offset = "0x11F7F38", VA = "0x11F7F38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001178")]
			[Address(RVA = "0x11F7CF4", Offset = "0x11F7CF4", VA = "0x11F7CF4")]
			[DebuggerHidden]
			public <SetupVR>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001179")]
			[Address(RVA = "0x11F7E08", Offset = "0x11F7E08", VA = "0x11F7E08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600117A")]
			[Address(RVA = "0x11F7E0C", Offset = "0x11F7E0C", VA = "0x11F7E0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600117C")]
			[Address(RVA = "0x11F7ED8", Offset = "0x11F7ED8", VA = "0x11F7ED8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000302")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD87DC", Offset = "0xBD87DC")]
		private sealed class <ShutdownVR>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700017F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001181")]
				[Address(RVA = "0x11F8044", Offset = "0x11F8044", VA = "0x11F8044", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000180")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001183")]
				[Address(RVA = "0x11F80AC", Offset = "0x11F80AC", VA = "0x11F80AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600117E")]
			[Address(RVA = "0x11F7DAC", Offset = "0x11F7DAC", VA = "0x11F7DAC")]
			[DebuggerHidden]
			public <ShutdownVR>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600117F")]
			[Address(RVA = "0x11F7F40", Offset = "0x11F7F40", VA = "0x11F7F40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001180")]
			[Address(RVA = "0x11F7F44", Offset = "0x11F7F44", VA = "0x11F7F44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001182")]
			[Address(RVA = "0x11F804C", Offset = "0x11F804C", VA = "0x11F804C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float renderScale;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool showHmdViewOnMonitor;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool doSetupOnAwake;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRManager s_Instance;

		[Token(Token = "0x170000EF")]
		public static VRManager instance
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x11F4848", Offset = "0x11F4848", VA = "0x11F4848")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x11F7B14", Offset = "0x11F7B14", VA = "0x11F7B14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x11F5F78", Offset = "0x11F5F78", VA = "0x11F5F78")]
		public void BeginVRSetup()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x11F7C78", Offset = "0x11F7C78", VA = "0x11F7C78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE0AC8", Offset = "0xBE0AC8")]
		private IEnumerator SetupVR()
		{
			return null;
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x11F7D20", Offset = "0x11F7D20", VA = "0x11F7D20")]
		public void BeginShutdownVR()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x11F7D4C", Offset = "0x11F7D4C", VA = "0x11F7D4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE0B2C", Offset = "0xBE0B2C")]
		private IEnumerator ShutdownVR()
		{
			return null;
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x11F60A4", Offset = "0x11F60A4", VA = "0x11F60A4")]
		public void SetupHmdDevice()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x11F7DD8", Offset = "0x11F7DD8", VA = "0x11F7DD8")]
		public void ToggleHmdViewOnMonitor(bool showOnMonitor)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x11F4944", Offset = "0x11F4944", VA = "0x11F4944")]
		public void ToggleHmdViewOnMonitor()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x11F4A60", Offset = "0x11F4A60", VA = "0x11F4A60")]
		public void ChangeRenderScale(float scale)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x11F7DEC", Offset = "0x11F7DEC", VA = "0x11F7DEC")]
		public VRManager()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class VRPlaySpace : MonoBehaviour
	{
		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform frustumTransform;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] frustumRenderers;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float safeDistance;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeSpeed;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color showColor;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color hideColor;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_ShowFrustum;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_CamAcceleration;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_HmdPositionRaw;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion m_HmdRotationUnity;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion m_HmdRotationRaw;

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x11F80B4", Offset = "0x11F80B4", VA = "0x11F80B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x11F8140", Offset = "0x11F8140", VA = "0x11F8140")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x11F8144", Offset = "0x11F8144", VA = "0x11F8144")]
		private void UpdateFrustumTransform()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x11F8148", Offset = "0x11F8148", VA = "0x11F8148")]
		private void UpdateFrustumDisplay()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x11F829C", Offset = "0x11F829C", VA = "0x11F829C")]
		public VRPlaySpace()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class VRPostReprojection : MonoBehaviour
	{
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject busySpinner;

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x11F82B0", Offset = "0x11F82B0", VA = "0x11F82B0")]
		public VRPostReprojection()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class VRUIComplete : MonoBehaviour
	{
		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string message;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool disableColliderAfterUse;

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x11F82B8", Offset = "0x11F82B8", VA = "0x11F82B8")]
		public void Complete()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x11F8398", Offset = "0x11F8398", VA = "0x11F8398")]
		public VRUIComplete()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class VRUIController : MonoBehaviour
	{
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask uiLayerMask;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_SliderFillSpeed;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RaycastHit m_Hit;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Slider m_CurrentSlider;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource m_AudioSrc;

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x11F83F8", Offset = "0x11F83F8", VA = "0x11F83F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x11F8458", Offset = "0x11F8458", VA = "0x11F8458")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x11F89DC", Offset = "0x11F89DC", VA = "0x11F89DC")]
		public VRUIController()
		{
		}
	}
}
namespace HutongGames.PlayMaker
{
	[Token(Token = "0x200023A")]
	[Preserve]
	public class FsmProcessor
	{
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x1208BA4", Offset = "0x1208BA4", VA = "0x1208BA4")]
		public static void OnPreprocess(PlayMakerFSM fsm)
		{
		}

		[Token(Token = "0x6000EA7")]
		private static void HandleUiEvent<T>(PlayMakerFSM fsm, UiEvents uiEvent) where T : PlayMakerUiEventBase
		{
		}

		[Token(Token = "0x6000EA8")]
		private static void AddUiEventHandler<T>(PlayMakerFSM fsm) where T : PlayMakerUiEventBase
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x1208D74", Offset = "0x1208D74", VA = "0x1208D74")]
		private static bool AddEventHandlerComponent(PlayMakerFSM fsm, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x1208F3C", Offset = "0x1208F3C", VA = "0x1208F3C")]
		public static PlayMakerProxyBase GetEventHandlerComponent(GameObject go, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x12090AC", Offset = "0x12090AC", VA = "0x12090AC")]
		public FsmProcessor()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class UpdateHelper
	{
		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool editorPrefLoaded;

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x12090B4", Offset = "0x12090B4", VA = "0x12090B4")]
		public static void SetDirty(Fsm fsm)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x12090B8", Offset = "0x12090B8", VA = "0x12090B8")]
		public UpdateHelper()
		{
		}
	}
}
namespace HutongGames.PlayMaker.Actions
{
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0xBD8154", Offset = "0xBD8154")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8154", Offset = "0xBD8154")]
	public class GetComponentInChildren : FsmStateAction
	{
		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDCB0", Offset = "0xBDDCB0")]
		public FsmOwnerDefault gameObject;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0xBDDCE8", Offset = "0xBDDCE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDCE8", Offset = "0xBDDCE8")]
		public FsmObject storeComponent;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDD38", Offset = "0xBDDD38")]
		public bool everyFrame;

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x12088DC", Offset = "0x12088DC", VA = "0x12088DC", Slot = "28")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x1208918", Offset = "0x1208918", VA = "0x1208918", Slot = "32")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x1208A38", Offset = "0x1208A38", VA = "0x1208A38", Slot = "34")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x1208954", Offset = "0x1208954", VA = "0x1208954")]
		private void DoGetComponent()
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1208A3C", Offset = "0x1208A3C", VA = "0x1208A3C")]
		public GetComponentInChildren()
		{
		}
	}
	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0xBD81A4", Offset = "0xBD81A4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD81A4", Offset = "0xBD81A4")]
	public class GetComponentOwner : FsmStateAction
	{
		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[RequiredField]
		public FsmObject componentToUse;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0xBDDD80", Offset = "0xBDDD80")]
		public FsmGameObject storeGameObject;

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1208A44", Offset = "0x1208A44", VA = "0x1208A44", Slot = "28")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x1208A78", Offset = "0x1208A78", VA = "0x1208A78", Slot = "32")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x1208AA0", Offset = "0x1208AA0", VA = "0x1208AA0")]
		public void DoGetComponentOwner()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x1208B9C", Offset = "0x1208B9C", VA = "0x1208B9C")]
		public GetComponentOwner()
		{
		}
	}
}
namespace DigitalRuby.LightningBolt
{
	[Token(Token = "0x200023E")]
	public enum LightningBoltAnimationMode
	{
		[Token(Token = "0x400095E")]
		None,
		[Token(Token = "0x400095F")]
		Random,
		[Token(Token = "0x4000960")]
		Loop,
		[Token(Token = "0x4000961")]
		PingPong
	}
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBD81F4", Offset = "0xBD81F4")]
	public class LightningBoltScript : MonoBehaviour
	{
		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDD94", Offset = "0xBDDD94")]
		public GameObject StartObject;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDDCC", Offset = "0xBDDDCC")]
		public Vector3 StartPosition;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDE04", Offset = "0xBDDE04")]
		public GameObject EndObject;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDE3C", Offset = "0xBDDE3C")]
		public Vector3 EndPosition;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDDE74", Offset = "0xBDDE74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDE74", Offset = "0xBDDE74")]
		public int Generations;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDDEC8", Offset = "0xBDDEC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDEC8", Offset = "0xBDDEC8")]
		public float Duration;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timer;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDDF20", Offset = "0xBDDF20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDF20", Offset = "0xBDDF20")]
		public float ChaosFactor;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDF74", Offset = "0xBDDF74")]
		public bool ManualMode;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDDFAC", Offset = "0xBDDFAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDDFAC", Offset = "0xBDDFAC")]
		public int Rows;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBDE004", Offset = "0xBDE004")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDE004", Offset = "0xBDE004")]
		public int Columns;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBDE05C", Offset = "0xBDE05C")]
		public LightningBoltAnimationMode AnimationMode;

		[NonSerialized]
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public System.Random RandomGenerator;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<Vector3, Vector3>> segments;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int startIndex;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector2 size;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2[] offsets;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int animationOffsetIndex;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int animationPingPongDirection;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool orthographic;

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x1203670", Offset = "0x1203670", VA = "0x1203670")]
		private void GetPerpendicularVector(ref Vector3 directionNormalized, out Vector3 side)
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x120381C", Offset = "0x120381C", VA = "0x120381C")]
		private void GenerateLightningBolt(Vector3 start, Vector3 end, int generation, int totalGenerations, float offsetAmount)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x1203C18", Offset = "0x1203C18", VA = "0x1203C18")]
		public void RandomVector(ref Vector3 start, ref Vector3 end, float offsetAmount, out Vector3 result)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x1203E84", Offset = "0x1203E84", VA = "0x1203E84")]
		private void SelectOffsetFromAnimationMode()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x1203FE0", Offset = "0x1203FE0", VA = "0x1203FE0")]
		private void UpdateLineRenderer()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x1204164", Offset = "0x1204164", VA = "0x1204164")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x12043C0", Offset = "0x12043C0", VA = "0x12043C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x12044CC", Offset = "0x12044CC", VA = "0x12044CC")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x1204254", Offset = "0x1204254", VA = "0x1204254")]
		public void UpdateFromMaterialChange()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x1204718", Offset = "0x1204718", VA = "0x1204718")]
		public LightningBoltScript()
		{
		}
	}
}
namespace EpicToonFX
{
	[Token(Token = "0x2000240")]
	public class ETFXButtonScript : MonoBehaviour
	{
		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Button;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text MyButtonText;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string projectileParticleName;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ETFXFireProjectile effectScript;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ETFXProjectileScript projectileScript;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float buttonsX;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float buttonsY;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float buttonsSizeX;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float buttonsSizeY;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float buttonsDistance;

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x1205764", Offset = "0x1205764", VA = "0x1205764")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x1205914", Offset = "0x1205914", VA = "0x1205914")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x1205850", Offset = "0x1205850", VA = "0x1205850")]
		public void getProjectileNames()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x1205940", Offset = "0x1205940", VA = "0x1205940")]
		public bool overButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x1205A4C", Offset = "0x1205A4C", VA = "0x1205A4C")]
		public ETFXButtonScript()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class ETFXFireProjectile : MonoBehaviour
	{
		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public GameObject[] projectiles;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE0B4", Offset = "0xBDE0B4")]
		public Transform spawnPosition;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentProjectile;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ETFXButtonScript selectedProjectileButton;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RaycastHit hit;

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x1205A54", Offset = "0x1205A54", VA = "0x1205A54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x1205ACC", Offset = "0x1205ACC", VA = "0x1205ACC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x1205F10", Offset = "0x1205F10", VA = "0x1205F10")]
		public void nextEffect()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x1205F50", Offset = "0x1205F50", VA = "0x1205F50")]
		public void previousEffect()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x1205F90", Offset = "0x1205F90", VA = "0x1205F90")]
		public void AdjustSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x1205F98", Offset = "0x1205F98", VA = "0x1205F98")]
		public ETFXFireProjectile()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class ETFXLoopScript : MonoBehaviour
	{
		[Token(Token = "0x2000303")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD87EC", Offset = "0xBD87EC")]
		private sealed class <EffectLoop>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ETFXLoopScript <>4__this;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <effectPlayer>5__2;

			[Token(Token = "0x17000181")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001187")]
				[Address(RVA = "0x12065EC", Offset = "0x12065EC", VA = "0x12065EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000182")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001189")]
				[Address(RVA = "0x1206654", Offset = "0x1206654", VA = "0x1206654", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001184")]
			[Address(RVA = "0x1206318", Offset = "0x1206318", VA = "0x1206318")]
			[DebuggerHidden]
			public <EffectLoop>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001185")]
			[Address(RVA = "0x120635C", Offset = "0x120635C", VA = "0x120635C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0x1206360", Offset = "0x1206360", VA = "0x1206360", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001188")]
			[Address(RVA = "0x12065F4", Offset = "0x12065F4", VA = "0x12065F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject chosenEffect;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float loopTimeLimit;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE0FC", Offset = "0xBDE0FC")]
		public bool spawnWithoutLight;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool spawnWithoutSound;

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x1206244", Offset = "0x1206244", VA = "0x1206244")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x1206248", Offset = "0x1206248", VA = "0x1206248")]
		public void PlayEffect()
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x120629C", Offset = "0x120629C", VA = "0x120629C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE0B90", Offset = "0xBE0B90")]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x1206344", Offset = "0x1206344", VA = "0x1206344")]
		public ETFXLoopScript()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class ETFXMouseOrbit : MonoBehaviour
	{
		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xSpeed;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ySpeed;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yMinLimit;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMaxLimit;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float distanceMin;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceMax;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float smoothTime;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float rotationYAxis;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationXAxis;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float velocityX;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float velocityY;

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x120665C", Offset = "0x120665C", VA = "0x120665C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x1206738", Offset = "0x1206738", VA = "0x1206738")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1206B38", Offset = "0x1206B38", VA = "0x1206B38")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x1206BE8", Offset = "0x1206BE8", VA = "0x1206BE8")]
		public ETFXMouseOrbit()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class ETFXLightFade : MonoBehaviour
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE134", Offset = "0xBDE134")]
		public float life;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killAfterLife;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light li;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float initIntensity;

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x1205FA8", Offset = "0x1205FA8", VA = "0x1205FA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x12060C8", Offset = "0x12060C8", VA = "0x12060C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x1206228", Offset = "0x1206228", VA = "0x1206228")]
		public ETFXLightFade()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class ETFXPitchRandomizer : MonoBehaviour
	{
		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float randomPercent;

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1206C04", Offset = "0x1206C04", VA = "0x1206C04")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x1206CBC", Offset = "0x1206CBC", VA = "0x1206CBC")]
		public ETFXPitchRandomizer()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class ETFXRotation : MonoBehaviour
	{
		[Token(Token = "0x2000304")]
		public enum spaceEnum
		{
			[Token(Token = "0x4000D4C")]
			Local,
			[Token(Token = "0x4000D4D")]
			World
		}

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDE16C", Offset = "0xBDE16C")]
		public Vector3 rotateVector;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public spaceEnum rotateSpace;

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x1206CCC", Offset = "0x1206CCC", VA = "0x1206CCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x1206CD0", Offset = "0x1206CD0", VA = "0x1206CD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x1206E24", Offset = "0x1206E24", VA = "0x1206E24")]
		public ETFXRotation()
		{
		}
	}
}
