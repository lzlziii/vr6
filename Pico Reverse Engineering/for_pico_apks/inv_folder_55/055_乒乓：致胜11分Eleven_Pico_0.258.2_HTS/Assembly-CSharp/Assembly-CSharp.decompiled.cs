using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using ELEVEN;
using Il2CppDummyDll;
using Qiyi.UI.InputField;
using QiyiVRSdk;
using TMPro;
using Unity.Jobs;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xAB4700", Offset = "0xAB4700")]
public class FastList<T>
{
	[Token(Token = "0x2000144")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB4FF0", Offset = "0xAB4FF0")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170001EC")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000C51")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C53")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4E")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000C4F")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C50")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C52")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x6000003")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000004")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x6000005")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000006")]
		set
		{
		}
	}

	[Token(Token = "0x6000001")]
	public FastList()
	{
	}

	[Token(Token = "0x6000002")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000007")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000008")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000009")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600000A")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600000B")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600000D")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600000E")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600000F")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000010")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000011")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000012")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000013")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000014")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000015")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9404", Offset = "0xAB9404")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000016")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000017")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000018")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000019")]
	public void Clear()
	{
	}

	[Token(Token = "0x600001A")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000003")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x162B318", Offset = "0x162B318", VA = "0x162B318")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000004")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x162B2E4", Offset = "0x162B2E4", VA = "0x162B2E4")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000005")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000146")]
	public delegate void OnClick();

	[Token(Token = "0x2000147")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000148")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000149")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200014A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5000", Offset = "0xAB5000")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x1001A6C", Offset = "0x1001A6C", VA = "0x1001A6C")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x1001A74", Offset = "0x1001A74", VA = "0x1001A74")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5010", Offset = "0xAB5010")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x1001C98", Offset = "0x1001C98", VA = "0x1001C98")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x1001CA0", Offset = "0x1001CA0", VA = "0x1001CA0")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200014C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5020", Offset = "0xAB5020")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x1001EEC", Offset = "0x1001EEC", VA = "0x1001EEC")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1001EF4", Offset = "0x1001EF4", VA = "0x1001EF4")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5030", Offset = "0xAB5030")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x1002288", Offset = "0x1002288", VA = "0x1002288")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1002290", Offset = "0x1002290", VA = "0x1002290")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200014E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5040", Offset = "0xAB5040")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x10022B0", Offset = "0x10022B0", VA = "0x10022B0")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x10022B8", Offset = "0x10022B8", VA = "0x10022B8")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000006")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000007")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000008")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000015")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000016")]
	private const float marginH = 16f;

	[Token(Token = "0x4000017")]
	private const float marginV = 16f;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x101C378", Offset = "0x101C378", VA = "0x101C378")]
	public void Awake()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x101C8A8", Offset = "0x101C8A8", VA = "0x101C8A8")]
	public void Show()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x101CE80", Offset = "0x101CE80", VA = "0x101CE80")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x101CC60", Offset = "0x101CC60", VA = "0x101CC60")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x101D03C", Offset = "0x101D03C", VA = "0x101D03C")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x101D35C", Offset = "0x101D35C", VA = "0x101D35C")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x101D5F8", Offset = "0x101D5F8", VA = "0x101D5F8")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x101D6FC", Offset = "0x101D6FC", VA = "0x101D6FC")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x101D8E0", Offset = "0x101D8E0", VA = "0x101D8E0")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x101D984", Offset = "0x101D984", VA = "0x101D984")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x101DB74", Offset = "0x101DB74", VA = "0x101DB74")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x101DD7C", Offset = "0x101DD7C", VA = "0x101DD7C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x101E080", Offset = "0x101E080", VA = "0x101E080")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x101E12C", Offset = "0x101E12C", VA = "0x101E12C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000006")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1029980", Offset = "0x1029980", VA = "0x1029980")]
	private void Start()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1029A30", Offset = "0x1029A30", VA = "0x1029A30")]
	private void Update()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1029AF0", Offset = "0x1029AF0", VA = "0x1029AF0")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1029B2C", Offset = "0x1029B2C", VA = "0x1029B2C")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000007")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200014F")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40007DD")]
		On,
		[Token(Token = "0x40007DE")]
		Off,
		[Token(Token = "0x40007DF")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000003")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000030")]
		[Address(RVA = "0x162D6F0", Offset = "0x162D6F0", VA = "0x162D6F0")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600002F")]
		[Address(RVA = "0x162D6AC", Offset = "0x162D6AC", VA = "0x162D6AC")]
		set
		{
		}
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x162D6F8", Offset = "0x162D6F8", VA = "0x162D6F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x162D754", Offset = "0x162D754", VA = "0x162D754")]
	private void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x162D898", Offset = "0x162D898", VA = "0x162D898", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x162D8B4", Offset = "0x162D8B4", VA = "0x162D8B4", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x162D908", Offset = "0x162D908", VA = "0x162D908")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x162DAC4", Offset = "0x162DAC4", VA = "0x162DAC4")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x162DBD8", Offset = "0x162DBD8", VA = "0x162DBD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x162DC68", Offset = "0x162DC68", VA = "0x162DC68")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x162DD34", Offset = "0x162DD34", VA = "0x162DD34")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x162DDE8", Offset = "0x162DDE8", VA = "0x162DDE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x162DED4", Offset = "0x162DED4", VA = "0x162DED4")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000008")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400002B")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x400002C")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x400002D")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB565C", Offset = "0xAB565C")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5694", Offset = "0xAB5694")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB56CC", Offset = "0xAB56CC")]
	public float HeightOffset;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5704", Offset = "0xAB5704")]
	public float MinimumHeight;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB573C", Offset = "0xAB573C")]
	public float MaximumHeight;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x150EC60", Offset = "0x150EC60", VA = "0x150EC60")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x150EC68", Offset = "0x150EC68", VA = "0x150EC68")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x150ECF4", Offset = "0x150ECF4", VA = "0x150ECF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x150ED88", Offset = "0x150ED88", VA = "0x150ED88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x150EE1C", Offset = "0x150EE1C", VA = "0x150EE1C")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x150F148", Offset = "0x150F148", VA = "0x150F148")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x150F378", Offset = "0x150F378", VA = "0x150F378")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000009")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1634EC8", Offset = "0x1634EC8", VA = "0x1634EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1634F94", Offset = "0x1634F94", VA = "0x1634F94")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200000A")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000150")]
	public enum States
	{
		[Token(Token = "0x40007E1")]
		Ready,
		[Token(Token = "0x40007E2")]
		Aim,
		[Token(Token = "0x40007E3")]
		CancelAim,
		[Token(Token = "0x40007E4")]
		PreTeleport,
		[Token(Token = "0x40007E5")]
		CancelTeleport,
		[Token(Token = "0x40007E6")]
		Teleporting,
		[Token(Token = "0x40007E7")]
		PostTeleport
	}

	[Token(Token = "0x2000151")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40007E9")]
		None,
		[Token(Token = "0x40007EA")]
		Aim,
		[Token(Token = "0x40007EB")]
		PreTeleport,
		[Token(Token = "0x40007EC")]
		Teleport
	}

	[Token(Token = "0x2000152")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40007EE")]
		Point,
		[Token(Token = "0x40007EF")]
		Sphere,
		[Token(Token = "0x40007F0")]
		Capsule
	}

	[Token(Token = "0x2000153")]
	public class AimData
	{
		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8D30", Offset = "0xAB8D30")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170001EE")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x1006EAC", Offset = "0x1006EAC", VA = "0x1006EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBEFC", Offset = "0xABBEFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0x1006EB4", Offset = "0x1006EB4", VA = "0x1006EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBF0C", Offset = "0xABBF0C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1006E28", Offset = "0x1006E28", VA = "0x1006E28")]
		public AimData()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1006EBC", Offset = "0x1006EBC", VA = "0x1006EBC")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5050", Offset = "0xAB5050")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x1006C74", Offset = "0x1006C74", VA = "0x1006C74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0x1006CBC", Offset = "0x1006CBC", VA = "0x1006CBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x1006B38", Offset = "0x1006B38", VA = "0x1006B38")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x1006B64", Offset = "0x1006B64", VA = "0x1006B64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1006B68", Offset = "0x1006B68", VA = "0x1006B68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1006C7C", Offset = "0x1006C7C", VA = "0x1006C7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5060", Offset = "0xAB5060")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0x10065A4", Offset = "0x10065A4", VA = "0x10065A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0x10065EC", Offset = "0x10065EC", VA = "0x10065EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x100641C", Offset = "0x100641C", VA = "0x100641C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1006448", Offset = "0x1006448", VA = "0x1006448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x100644C", Offset = "0x100644C", VA = "0x100644C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x10065AC", Offset = "0x10065AC", VA = "0x10065AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5070", Offset = "0xAB5070")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x10066D0", Offset = "0x10066D0", VA = "0x10066D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x1006718", Offset = "0x1006718", VA = "0x1006718", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x10065F4", Offset = "0x10065F4", VA = "0x10065F4")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1006620", Offset = "0x1006620", VA = "0x1006620", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1006624", Offset = "0x1006624", VA = "0x1006624", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x10066D8", Offset = "0x10066D8", VA = "0x10066D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5080", Offset = "0xAB5080")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x1006AE8", Offset = "0x1006AE8", VA = "0x1006AE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x1006B30", Offset = "0x1006B30", VA = "0x1006B30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x10069CC", Offset = "0x10069CC", VA = "0x10069CC")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x10069F8", Offset = "0x10069F8", VA = "0x10069F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x10069FC", Offset = "0x10069FC", VA = "0x10069FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1006AF0", Offset = "0x1006AF0", VA = "0x1006AF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5090", Offset = "0xAB5090")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x10067FC", Offset = "0x10067FC", VA = "0x10067FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x1006844", Offset = "0x1006844", VA = "0x1006844", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1006720", Offset = "0x1006720", VA = "0x1006720")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x100674C", Offset = "0x100674C", VA = "0x100674C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1006750", Offset = "0x1006750", VA = "0x1006750", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1006804", Offset = "0x1006804", VA = "0x1006804", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB50A0", Offset = "0xAB50A0")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x1006DD8", Offset = "0x1006DD8", VA = "0x1006DD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x1006E20", Offset = "0x1006E20", VA = "0x1006E20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x1006CC4", Offset = "0x1006CC4", VA = "0x1006CC4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x1006CF0", Offset = "0x1006CF0", VA = "0x1006CF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x1006CF4", Offset = "0x1006CF4", VA = "0x1006CF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x1006DE0", Offset = "0x1006DE0", VA = "0x1006DE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB50B0", Offset = "0xAB50B0")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C99")]
			[Address(RVA = "0x100697C", Offset = "0x100697C", VA = "0x100697C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x10069C4", Offset = "0x10069C4", VA = "0x10069C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x100684C", Offset = "0x100684C", VA = "0x100684C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x1006878", Offset = "0x1006878", VA = "0x1006878", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x100687C", Offset = "0x100687C", VA = "0x100687C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1006984", Offset = "0x1006984", VA = "0x1006984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5774", Offset = "0xAB5774")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB57AC", Offset = "0xAB57AC")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB57E4", Offset = "0xAB57E4")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB581C", Offset = "0xAB581C")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5854", Offset = "0xAB5854")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB588C", Offset = "0xAB588C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB58C4", Offset = "0xAB58C4")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB58FC", Offset = "0xAB58FC")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5934", Offset = "0xAB5934")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5944", Offset = "0xAB5944")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB597C", Offset = "0xAB597C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB59C4", Offset = "0xAB59C4")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB59D4", Offset = "0xAB59D4")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5A0C", Offset = "0xAB5A0C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5A44", Offset = "0xAB5A44")]
	public float AimCollisionRadius;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5A7C", Offset = "0xAB5A7C")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000004")]
	public States CurrentState
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0x1635A70", Offset = "0x1635A70", VA = "0x1635A70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9464", Offset = "0xAB9464")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000048")]
		[Address(RVA = "0x1635A78", Offset = "0x1635A78", VA = "0x1635A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9474", Offset = "0xAB9474")]
		private set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x1635C9C", Offset = "0x1635C9C", VA = "0x1635C9C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000006")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x1635CC4", Offset = "0x1635CC4", VA = "0x1635CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB94A4", Offset = "0xAB94A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600004E")]
		[Address(RVA = "0x1635CCC", Offset = "0x1635CCC", VA = "0x1635CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB94B4", Offset = "0xAB94B4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0x1635A80", Offset = "0x1635A80", VA = "0x1635A80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9484", Offset = "0xAB9484")]
		add
		{
		}
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x1635B20", Offset = "0x1635B20", VA = "0x1635B20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9494", Offset = "0xAB9494")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000058")]
		[Address(RVA = "0x163630C", Offset = "0x163630C", VA = "0x163630C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB94FC", Offset = "0xAB94FC")]
		add
		{
		}
		[Token(Token = "0x6000059")]
		[Address(RVA = "0x16363AC", Offset = "0x16363AC", VA = "0x16363AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB950C", Offset = "0xAB950C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600005B")]
		[Address(RVA = "0x163644C", Offset = "0x163644C", VA = "0x163644C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB957C", Offset = "0xAB957C")]
		add
		{
		}
		[Token(Token = "0x600005C")]
		[Address(RVA = "0x16364EC", Offset = "0x16364EC", VA = "0x16364EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB958C", Offset = "0xAB958C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600005D")]
		[Address(RVA = "0x163658C", Offset = "0x163658C", VA = "0x163658C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB959C", Offset = "0xAB959C")]
		add
		{
		}
		[Token(Token = "0x600005E")]
		[Address(RVA = "0x163662C", Offset = "0x163662C", VA = "0x163662C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB95AC", Offset = "0xAB95AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000060")]
		[Address(RVA = "0x163673C", Offset = "0x163673C", VA = "0x163673C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB95BC", Offset = "0xAB95BC")]
		add
		{
		}
		[Token(Token = "0x6000061")]
		[Address(RVA = "0x16367DC", Offset = "0x16367DC", VA = "0x16367DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB95CC", Offset = "0xAB95CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0x16368F4", Offset = "0x16368F4", VA = "0x16368F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB963C", Offset = "0xAB963C")]
		add
		{
		}
		[Token(Token = "0x6000064")]
		[Address(RVA = "0x1636994", Offset = "0x1636994", VA = "0x1636994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB964C", Offset = "0xAB964C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000066")]
		[Address(RVA = "0x1636AAC", Offset = "0x1636AAC", VA = "0x1636AAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB96BC", Offset = "0xAB96BC")]
		add
		{
		}
		[Token(Token = "0x6000067")]
		[Address(RVA = "0x1636B4C", Offset = "0x1636B4C", VA = "0x1636B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB96CC", Offset = "0xAB96CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000069")]
		[Address(RVA = "0x1636C64", Offset = "0x1636C64", VA = "0x1636C64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB973C", Offset = "0xAB973C")]
		add
		{
		}
		[Token(Token = "0x600006A")]
		[Address(RVA = "0x1636D04", Offset = "0x1636D04", VA = "0x1636D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB974C", Offset = "0xAB974C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600006C")]
		[Address(RVA = "0x1636E1C", Offset = "0x1636E1C", VA = "0x1636E1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB97BC", Offset = "0xAB97BC")]
		add
		{
		}
		[Token(Token = "0x600006D")]
		[Address(RVA = "0x1636EBC", Offset = "0x1636EBC", VA = "0x1636EBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB97CC", Offset = "0xAB97CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600006F")]
		[Address(RVA = "0x1636FD4", Offset = "0x1636FD4", VA = "0x1636FD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB983C", Offset = "0xAB983C")]
		add
		{
		}
		[Token(Token = "0x6000070")]
		[Address(RVA = "0x1637074", Offset = "0x1637074", VA = "0x1637074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB984C", Offset = "0xAB984C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000072")]
		[Address(RVA = "0x163718C", Offset = "0x163718C", VA = "0x163718C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB98BC", Offset = "0xAB98BC")]
		add
		{
		}
		[Token(Token = "0x6000073")]
		[Address(RVA = "0x163722C", Offset = "0x163722C", VA = "0x163722C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB98CC", Offset = "0xAB98CC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x163571C", Offset = "0x163571C", VA = "0x163571C")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1635740", Offset = "0x1635740", VA = "0x1635740")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x1635BC0", Offset = "0x1635BC0", VA = "0x1635BC0")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1635CD4", Offset = "0x1635CD4", VA = "0x1635CD4")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1635F20", Offset = "0x1635F20", VA = "0x1635F20")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAB94C4", Offset = "0xAB94C4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1635FD4", Offset = "0x1635FD4", VA = "0x1635FD4")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x16360D4", Offset = "0x16360D4", VA = "0x16360D4")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x16360F0", Offset = "0x16360F0", VA = "0x16360F0")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x16361B4", Offset = "0x16361B4", VA = "0x16361B4")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x16361F8", Offset = "0x16361F8", VA = "0x16361F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x163625C", Offset = "0x163625C", VA = "0x163625C", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x1636304", Offset = "0x1636304", VA = "0x1636304", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x163628C", Offset = "0x163628C", VA = "0x163628C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB951C", Offset = "0xAB951C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x16366CC", Offset = "0x16366CC", VA = "0x16366CC")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x163687C", Offset = "0x163687C", VA = "0x163687C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB95DC", Offset = "0xAB95DC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1636A34", Offset = "0x1636A34", VA = "0x1636A34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB965C", Offset = "0xAB965C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1636BEC", Offset = "0x1636BEC", VA = "0x1636BEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB96DC", Offset = "0xAB96DC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1636DA4", Offset = "0x1636DA4", VA = "0x1636DA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB975C", Offset = "0xAB975C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1636F5C", Offset = "0x1636F5C", VA = "0x1636F5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB97DC", Offset = "0xAB97DC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1637114", Offset = "0x1637114", VA = "0x1637114")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB985C", Offset = "0xAB985C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x16372CC", Offset = "0x16372CC", VA = "0x16372CC")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x163740C", Offset = "0x163740C", VA = "0x163740C")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1637440", Offset = "0x1637440", VA = "0x1637440")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1637508", Offset = "0x1637508", VA = "0x1637508")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1637600", Offset = "0x1637600", VA = "0x1637600")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200000B")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000079")]
		[Address(RVA = "0x2A708B8", Offset = "0x2A708B8", VA = "0x2A708B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB98DC", Offset = "0xAB98DC")]
		add
		{
		}
		[Token(Token = "0x600007A")]
		[Address(RVA = "0x2A70958", Offset = "0x2A70958", VA = "0x2A70958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB98EC", Offset = "0xAB98EC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600007B")]
		[Address(RVA = "0x2A709F8", Offset = "0x2A709F8", VA = "0x2A709F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB98FC", Offset = "0xAB98FC")]
		add
		{
		}
		[Token(Token = "0x600007C")]
		[Address(RVA = "0x2A70A98", Offset = "0x2A70A98", VA = "0x2A70A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB990C", Offset = "0xAB990C")]
		remove
		{
		}
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x2A70B38", Offset = "0x2A70B38", VA = "0x2A70B38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x2A70C24", Offset = "0x2A70C24", VA = "0x2A70C24")]
	private void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x2A70C28", Offset = "0x2A70C28", VA = "0x2A70C28")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x2A70C9C", Offset = "0x2A70C9C", VA = "0x2A70C9C")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x2A70DC0", Offset = "0x2A70DC0", VA = "0x2A70DC0")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x2A70FA8", Offset = "0x2A70FA8", VA = "0x2A70FA8")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x2A71170", Offset = "0x2A71170", VA = "0x2A71170")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200000C")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000084")]
	[Address(RVA = "0x16FC670", Offset = "0x16FC670", VA = "0x16FC670", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x16FC710", Offset = "0x16FC710", VA = "0x16FC710", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000086")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x16FC800", Offset = "0x16FC800", VA = "0x16FC800")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200000D")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5B74", Offset = "0xAB5B74")]
	public float Range;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x16FC810", Offset = "0x16FC810", VA = "0x16FC810", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x16FC90C", Offset = "0x16FC90C", VA = "0x16FC90C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200000E")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5BAC", Offset = "0xAB5BAC")]
	public float Range;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5BE4", Offset = "0xAB5BE4")]
	public float MinimumElevation;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5C1C", Offset = "0xAB5C1C")]
	public float Gravity;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5C54", Offset = "0xAB5C54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB5C54", Offset = "0xAB5C54")]
	public float AimVelocity;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5CB0", Offset = "0xAB5CB0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB5CB0", Offset = "0xAB5CB0")]
	public float AimStep;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x16FC91C", Offset = "0x16FC91C", VA = "0x16FC91C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x16FCAAC", Offset = "0x16FCAAC", VA = "0x16FCAAC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200000F")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5D08", Offset = "0xAB5D08")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x16FCAC0", Offset = "0x16FCAC0", VA = "0x16FCAC0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x16FCBFC", Offset = "0x16FCBFC", VA = "0x16FCBFC")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x16FCC2C", Offset = "0x16FCC2C", VA = "0x16FCC2C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x16FCC5C", Offset = "0x16FCC5C", VA = "0x16FCC5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x16FCD0C", Offset = "0x16FCD0C", VA = "0x16FCD0C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x16FCD78", Offset = "0x16FCD78", VA = "0x16FCD78", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x16FCDE0", Offset = "0x16FCDE0", VA = "0x16FCDE0")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000010")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5D40", Offset = "0xAB5D40")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5D50", Offset = "0xAB5D50")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5D88", Offset = "0xAB5D88")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5DC0", Offset = "0xAB5DC0")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000007")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000093")]
		[Address(RVA = "0x16FCF04", Offset = "0x16FCF04", VA = "0x16FCF04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB991C", Offset = "0xAB991C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000094")]
		[Address(RVA = "0x16FCF0C", Offset = "0x16FCF0C", VA = "0x16FCF0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB992C", Offset = "0xAB992C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000099")]
		[Address(RVA = "0x16FD0C8", Offset = "0x16FD0C8", VA = "0x16FD0C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB993C", Offset = "0xAB993C")]
		add
		{
		}
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x16FD168", Offset = "0x16FD168", VA = "0x16FD168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB994C", Offset = "0xAB994C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x16FCF18", Offset = "0x16FCF18", VA = "0x16FCF18")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x16FCFB0", Offset = "0x16FCFB0", VA = "0x16FCFB0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x16FD084", Offset = "0x16FD084", VA = "0x16FD084")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x16FD0C4", Offset = "0x16FD0C4", VA = "0x16FD0C4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x16FD208", Offset = "0x16FD208", VA = "0x16FD208")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x16FD26C", Offset = "0x16FD26C", VA = "0x16FD26C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x16FD28C", Offset = "0x16FD28C", VA = "0x16FD28C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000011")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200015B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB50C0", Offset = "0xAB50C0")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170001FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x10163F4", Offset = "0x10163F4", VA = "0x10163F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x101643C", Offset = "0x101643C", VA = "0x101643C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x101632C", Offset = "0x101632C", VA = "0x101632C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1016358", Offset = "0x1016358", VA = "0x1016358", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x101635C", Offset = "0x101635C", VA = "0x101635C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x10163FC", Offset = "0x10163FC", VA = "0x10163FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB50D0", Offset = "0xAB50D0")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170001FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x10162DC", Offset = "0x10162DC", VA = "0x10162DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x1016324", Offset = "0x1016324", VA = "0x1016324", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1016210", Offset = "0x1016210", VA = "0x1016210")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x101623C", Offset = "0x101623C", VA = "0x101623C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x1016240", Offset = "0x1016240", VA = "0x1016240", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x10162E4", Offset = "0x10162E4", VA = "0x10162E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x16FD498", Offset = "0x16FD498", VA = "0x16FD498")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x16FD56C", Offset = "0x16FD56C", VA = "0x16FD56C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x16FD5CC", Offset = "0x16FD5CC", VA = "0x16FD5CC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x16FD68C", Offset = "0x16FD68C", VA = "0x16FD68C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB995C", Offset = "0xAB995C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x16FD704", Offset = "0x16FD704", VA = "0x16FD704")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB99BC", Offset = "0xAB99BC")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60000A4")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x16FD77C", Offset = "0x16FD77C", VA = "0x16FD77C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9A1C", Offset = "0xAB9A1C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x16FD7A8", Offset = "0x16FD7A8", VA = "0x16FD7A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9A2C", Offset = "0xAB9A2C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000012")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5E08", Offset = "0xAB5E08")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5E18", Offset = "0xAB5E18")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5E50", Offset = "0xAB5E50")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5E88", Offset = "0xAB5E88")]
	public bool FastTeleport;

	[Token(Token = "0x17000008")]
	public Transform Pointer
	{
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x16FD7D4", Offset = "0x16FD7D4", VA = "0x16FD7D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9A3C", Offset = "0xAB9A3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x16FD7DC", Offset = "0x16FD7DC", VA = "0x16FD7DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9A4C", Offset = "0xAB9A4C")]
		private set
		{
		}
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x16FD7E4", Offset = "0x16FD7E4", VA = "0x16FD7E4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x16FD93C", Offset = "0x16FD93C", VA = "0x16FD93C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x16FD9F4", Offset = "0x16FD9F4", VA = "0x16FD9F4")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000013")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200015D")]
	public enum InputModes
	{
		[Token(Token = "0x4000812")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000813")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000814")]
		ThumbstickTeleport,
		[Token(Token = "0x4000815")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200015E")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000817")]
		A,
		[Token(Token = "0x4000818")]
		B,
		[Token(Token = "0x4000819")]
		LeftTrigger,
		[Token(Token = "0x400081A")]
		LeftThumbstick,
		[Token(Token = "0x400081B")]
		RightTrigger,
		[Token(Token = "0x400081C")]
		RightThumbstick,
		[Token(Token = "0x400081D")]
		X,
		[Token(Token = "0x400081E")]
		Y
	}

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5EC0", Offset = "0xAB5EC0")]
	public InputModes InputMode;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5EF8", Offset = "0xAB5EF8")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5F30", Offset = "0xAB5F30")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5F68", Offset = "0xAB5F68")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x16FD9F8", Offset = "0x16FD9F8", VA = "0x16FD9F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x16FD9FC", Offset = "0x16FD9FC", VA = "0x16FD9FC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x16FDDE4", Offset = "0x16FDDE4", VA = "0x16FDDE4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x16FDEA4", Offset = "0x16FDEA4", VA = "0x16FDEA4")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000014")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200015F")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000820")]
		HeadRelative,
		[Token(Token = "0x4000821")]
		ForwardFacing
	}

	[Token(Token = "0x2000160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB50E0", Offset = "0xAB50E0")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000201")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x1016524", Offset = "0x1016524", VA = "0x1016524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x101656C", Offset = "0x101656C", VA = "0x101656C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1016444", Offset = "0x1016444", VA = "0x1016444")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x1016470", Offset = "0x1016470", VA = "0x1016470", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1016474", Offset = "0x1016474", VA = "0x1016474", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x101652C", Offset = "0x101652C", VA = "0x101652C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x16FDF88", Offset = "0x16FDF88", VA = "0x16FDF88")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x16FE07C", Offset = "0x16FE07C", VA = "0x16FE07C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x16FE084", Offset = "0x16FE084", VA = "0x16FE084", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x16FE0D0", Offset = "0x16FE0D0", VA = "0x16FE0D0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x16FE118", Offset = "0x16FE118", VA = "0x16FE118")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9A5C", Offset = "0xAB9A5C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000B5")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60000B6")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x16FE190", Offset = "0x16FE190", VA = "0x16FE190")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x16FE24C", Offset = "0x16FE24C", VA = "0x16FE24C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9ABC", Offset = "0xAB9ABC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000015")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x16FE278", Offset = "0x16FE278", VA = "0x16FE278", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x16FE27C", Offset = "0x16FE27C", VA = "0x16FE27C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x16FE2F8", Offset = "0x16FE2F8", VA = "0x16FE2F8")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000016")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5FA0", Offset = "0xAB5FA0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB5FD8", Offset = "0xAB5FD8")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6010", Offset = "0xAB6010")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6048", Offset = "0xAB6048")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x16FE2FC", Offset = "0x16FE2FC", VA = "0x16FE2FC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x16FE328", Offset = "0x16FE328", VA = "0x16FE328", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x16FE6D8", Offset = "0x16FE6D8", VA = "0x16FE6D8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000017")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6080", Offset = "0xAB6080")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB60B8", Offset = "0xAB60B8")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB60F0", Offset = "0xAB60F0")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x16FE6DC", Offset = "0x16FE6DC", VA = "0x16FE6DC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x16FE720", Offset = "0x16FE720", VA = "0x16FE720", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x16FEAC8", Offset = "0x16FEAC8", VA = "0x16FEAC8")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000018")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x16FEAD8", Offset = "0x16FEAD8", VA = "0x16FEAD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x16FEADC", Offset = "0x16FEADC", VA = "0x16FEADC")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x16FEAE4", Offset = "0x16FEAE4", VA = "0x16FEAE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x16FEBA0", Offset = "0x16FEBA0", VA = "0x16FEBA0")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x16FEBC8", Offset = "0x16FEBC8", VA = "0x16FEBC8")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000019")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6128", Offset = "0xAB6128")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000009")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x16FEBE0", Offset = "0x16FEBE0", VA = "0x16FEBE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9ACC", Offset = "0xAB9ACC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x16FEBE8", Offset = "0x16FEBE8", VA = "0x16FEBE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9ADC", Offset = "0xAB9ADC")]
		private set
		{
		}
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x16FC6A4", Offset = "0x16FC6A4", VA = "0x16FC6A4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x16FC7CC", Offset = "0x16FC7CC", VA = "0x16FC7CC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x16FEBF0", Offset = "0x16FEBF0", VA = "0x16FEBF0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAB9AEC", Offset = "0xAB9AEC")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x16FCD6C", Offset = "0x16FCD6C", VA = "0x16FCD6C", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x16FCDD8", Offset = "0x16FCDD8", VA = "0x16FCDD8", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x16FC808", Offset = "0x16FC808", VA = "0x16FC808")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200001A")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000161")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB50F0", Offset = "0xAB50F0")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000203")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0x1016844", Offset = "0x1016844", VA = "0x1016844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x101688C", Offset = "0x101688C", VA = "0x101688C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1016574", Offset = "0x1016574", VA = "0x1016574")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x10165A0", Offset = "0x10165A0", VA = "0x10165A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x10165A4", Offset = "0x10165A4", VA = "0x10165A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x101684C", Offset = "0x101684C", VA = "0x101684C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6138", Offset = "0xAB6138")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40000A2")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x16FECCC", Offset = "0x16FECCC", VA = "0x16FECCC")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x16FEDDC", Offset = "0x16FEDDC", VA = "0x16FEDDC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x16FEE08", Offset = "0x16FEE08", VA = "0x16FEE08", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x16FEE30", Offset = "0x16FEE30", VA = "0x16FEE30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9B24", Offset = "0xAB9B24")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x16FEEA8", Offset = "0x16FEEA8", VA = "0x16FEEA8", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60000D4")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x16FEEC4", Offset = "0x16FEEC4", VA = "0x16FEEC4", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x16FEFE4", Offset = "0x16FEFE4", VA = "0x16FEFE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9B84", Offset = "0xAB9B84")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200001B")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x16FF010", Offset = "0x16FF010", VA = "0x16FF010")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x16FF074", Offset = "0x16FF074", VA = "0x16FF074", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x16FF16C", Offset = "0x16FF16C", VA = "0x16FF16C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x16FF264", Offset = "0x16FF264", VA = "0x16FF264")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAB9B94", Offset = "0xAB9B94")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x16FF268", Offset = "0x16FF268", VA = "0x16FF268")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200001C")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6170", Offset = "0xAB6170")]
	public float LOSOffset;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB61A8", Offset = "0xAB61A8")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x16FF274", Offset = "0x16FF274", VA = "0x16FF274", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x16FF480", Offset = "0x16FF480", VA = "0x16FF480")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200001D")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x16FF48C", Offset = "0x16FF48C", VA = "0x16FF48C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x16FF584", Offset = "0x16FF584", VA = "0x16FF584")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200001E")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x16FF588", Offset = "0x16FF588", VA = "0x16FF588", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x16FF61C", Offset = "0x16FF61C", VA = "0x16FF61C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000E2")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x16FF6AC", Offset = "0x16FF6AC", VA = "0x16FF6AC")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200001F")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000162")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5100", Offset = "0xAB5100")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000205")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x10169CC", Offset = "0x10169CC", VA = "0x10169CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x1016A14", Offset = "0x1016A14", VA = "0x1016A14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1016894", Offset = "0x1016894", VA = "0x1016894")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x10168C0", Offset = "0x10168C0", VA = "0x10168C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x10168C4", Offset = "0x10168C4", VA = "0x10168C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x10169D4", Offset = "0x10169D4", VA = "0x10169D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB61E0", Offset = "0xAB61E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB61E0", Offset = "0xAB61E0")]
	public float TransitionDuration;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6238", Offset = "0xAB6238")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB6238", Offset = "0xAB6238")]
	public float TeleportDelay;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB628C", Offset = "0xAB628C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x16FF6B4", Offset = "0x16FF6B4", VA = "0x16FF6B4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x16FF6E0", Offset = "0x16FF6E0", VA = "0x16FF6E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9BCC", Offset = "0xAB9BCC")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x16FF758", Offset = "0x16FF758", VA = "0x16FF758")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000020")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x16FF904", Offset = "0x16FF904", VA = "0x16FF904", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x16FF920", Offset = "0x16FF920", VA = "0x16FF920")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000021")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000163")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5110", Offset = "0xAB5110")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000207")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x1016B88", Offset = "0x1016B88", VA = "0x1016B88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0x1016BD0", Offset = "0x1016BD0", VA = "0x1016BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1016A1C", Offset = "0x1016A1C", VA = "0x1016A1C")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x1016A48", Offset = "0x1016A48", VA = "0x1016A48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1016A4C", Offset = "0x1016A4C", VA = "0x1016A4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1016B90", Offset = "0x1016B90", VA = "0x1016B90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB62C4", Offset = "0xAB62C4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB62C4", Offset = "0xAB62C4")]
	public float TransitionDuration;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x16FF928", Offset = "0x16FF928", VA = "0x16FF928", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x16FF954", Offset = "0x16FF954", VA = "0x16FF954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9C2C", Offset = "0xAB9C2C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x16FF9CC", Offset = "0x16FF9CC", VA = "0x16FF9CC")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000022")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000164")]
	public enum PlabackState
	{
		[Token(Token = "0x4000834")]
		Idle = 1,
		[Token(Token = "0x4000835")]
		Preparing,
		[Token(Token = "0x4000836")]
		Buffering,
		[Token(Token = "0x4000837")]
		Ready,
		[Token(Token = "0x4000838")]
		Ended
	}

	[Token(Token = "0x2000165")]
	public enum StereoMode
	{
		[Token(Token = "0x400083A")]
		Unknown = -1,
		[Token(Token = "0x400083B")]
		Mono,
		[Token(Token = "0x400083C")]
		TopBottom,
		[Token(Token = "0x400083D")]
		LeftRight,
		[Token(Token = "0x400083E")]
		Mesh
	}

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700000A")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x17141AC", Offset = "0x17141AC", VA = "0x17141AC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700000B")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x17144DC", Offset = "0x17144DC", VA = "0x17144DC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700000C")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x170CCF4", Offset = "0x170CCF4", VA = "0x170CCF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000D")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x170E4A0", Offset = "0x170E4A0", VA = "0x170E4A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000E")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x17147AC", Offset = "0x17147AC", VA = "0x17147AC")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700000F")]
	public static long Duration
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x170E6C4", Offset = "0x170E6C4", VA = "0x170E6C4")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000010")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x170D31C", Offset = "0x170D31C", VA = "0x170D31C")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000011")]
	public static int VideoWidth
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x170D0F4", Offset = "0x170D0F4", VA = "0x170D0F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000012")]
	public static int VideoHeight
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x170D208", Offset = "0x170D208", VA = "0x170D208")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000013")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x170E5B0", Offset = "0x170E5B0", VA = "0x170E5B0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x170DBD4", Offset = "0x170DBD4", VA = "0x170DBD4")]
		set
		{
		}
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x17148C0", Offset = "0x17148C0", VA = "0x17148C0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x170EA94", Offset = "0x170EA94", VA = "0x170EA94")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x170D820", Offset = "0x170D820", VA = "0x170D820")]
	public static void Play()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x170D9C0", Offset = "0x170D9C0", VA = "0x170D9C0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x170E88C", Offset = "0x170E88C", VA = "0x170E88C")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1714AEC", Offset = "0x1714AEC", VA = "0x1714AEC")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x170E2B0", Offset = "0x170E2B0", VA = "0x170E2B0")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000023")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x150B4A8", Offset = "0x150B4A8", VA = "0x150B4A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9C8C", Offset = "0xAB9C8C")]
		add
		{
		}
		[Token(Token = "0x6000100")]
		[Address(RVA = "0x150B548", Offset = "0x150B548", VA = "0x150B548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9C9C", Offset = "0xAB9C9C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x150B5E8", Offset = "0x150B5E8", VA = "0x150B5E8", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x150B5FC", Offset = "0x150B5FC", VA = "0x150B5FC")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000024")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000166")]
	public enum ButtonType
	{
		[Token(Token = "0x4000840")]
		Play,
		[Token(Token = "0x4000841")]
		Pause,
		[Token(Token = "0x4000842")]
		FastForward,
		[Token(Token = "0x4000843")]
		Rewind,
		[Token(Token = "0x4000844")]
		SkipForward,
		[Token(Token = "0x4000845")]
		SkipBack,
		[Token(Token = "0x4000846")]
		Stop
	}

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000014")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000103")]
		[Address(RVA = "0x1637610", Offset = "0x1637610", VA = "0x1637610")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000104")]
		[Address(RVA = "0x1637618", Offset = "0x1637618", VA = "0x1637618")]
		set
		{
		}
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x163763C", Offset = "0x163763C", VA = "0x163763C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1638AD4", Offset = "0x1638AD4", VA = "0x1638AD4")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000025")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000167")]
	public enum VideoShape
	{
		[Token(Token = "0x4000848")]
		_360,
		[Token(Token = "0x4000849")]
		_180,
		[Token(Token = "0x400084A")]
		Quad
	}

	[Token(Token = "0x2000168")]
	public enum VideoStereo
	{
		[Token(Token = "0x400084C")]
		Mono,
		[Token(Token = "0x400084D")]
		TopBottom,
		[Token(Token = "0x400084E")]
		LeftRight,
		[Token(Token = "0x400084F")]
		BottomTop
	}

	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5120", Offset = "0xAB5120")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000209")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x100864C", Offset = "0x100864C", VA = "0x100864C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0x1008694", Offset = "0x1008694", VA = "0x1008694", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1008458", Offset = "0x1008458", VA = "0x1008458")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1008484", Offset = "0x1008484", VA = "0x1008484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1008488", Offset = "0x1008488", VA = "0x1008488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1008654", Offset = "0x1008654", VA = "0x1008654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5130", Offset = "0xAB5130")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1008360", Offset = "0x1008360", VA = "0x1008360")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x1008368", Offset = "0x1008368", VA = "0x1008368")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB634C", Offset = "0xAB634C")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB635C", Offset = "0xAB635C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB636C", Offset = "0xAB636C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000015")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0x170CA18", Offset = "0x170CA18", VA = "0x170CA18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9CAC", Offset = "0xAB9CAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x170CA20", Offset = "0x170CA20", VA = "0x170CA20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9CBC", Offset = "0xAB9CBC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public long Duration
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x170CA2C", Offset = "0x170CA2C", VA = "0x170CA2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9CCC", Offset = "0xAB9CCC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x170CA34", Offset = "0x170CA34", VA = "0x170CA34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9CDC", Offset = "0xAB9CDC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x170CA3C", Offset = "0x170CA3C", VA = "0x170CA3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9CEC", Offset = "0xAB9CEC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600010C")]
		[Address(RVA = "0x170CA44", Offset = "0x170CA44", VA = "0x170CA44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9CFC", Offset = "0xAB9CFC")]
		private set
		{
		}
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x170CA4C", Offset = "0x170CA4C", VA = "0x170CA4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x170CD64", Offset = "0x170CD64", VA = "0x170CD64")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x170CDC8", Offset = "0x170CDC8", VA = "0x170CDC8")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x170D430", Offset = "0x170D430", VA = "0x170D430")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9D0C", Offset = "0xAB9D0C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x170D4A8", Offset = "0x170D4A8", VA = "0x170D4A8")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x170D790", Offset = "0x170D790", VA = "0x170D790")]
	public void Play()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x170D934", Offset = "0x170D934", VA = "0x170D934")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x170DAD4", Offset = "0x170DAD4", VA = "0x170DAD4")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x170DD48", Offset = "0x170DD48", VA = "0x170DD48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x170E7D8", Offset = "0x170E7D8", VA = "0x170E7D8")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x170EA08", Offset = "0x170EA08", VA = "0x170EA08")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x170EBA8", Offset = "0x170EBA8", VA = "0x170EBA8")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x170EC94", Offset = "0x170EC94", VA = "0x170EC94")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000026")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200016B")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000857")]
		Playing,
		[Token(Token = "0x4000858")]
		Paused,
		[Token(Token = "0x4000859")]
		Rewinding,
		[Token(Token = "0x400085A")]
		FastForwarding
	}

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x170ECA4", Offset = "0x170ECA4", VA = "0x170ECA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x170EFB0", Offset = "0x170EFB0", VA = "0x170EFB0")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x170F0DC", Offset = "0x170F0DC", VA = "0x170F0DC")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x170F1E8", Offset = "0x170F1E8", VA = "0x170F1E8")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x170F2C8", Offset = "0x170F2C8", VA = "0x170F2C8")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x170F1BC", Offset = "0x170F1BC", VA = "0x170F1BC")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x170F310", Offset = "0x170F310", VA = "0x170F310")]
	private void Update()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x170EE9C", Offset = "0x170EE9C", VA = "0x170EE9C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x170F674", Offset = "0x170F674", VA = "0x170F674")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000027")]
public static class VectorUtil
{
	[Token(Token = "0x6000123")]
	[Address(RVA = "0xFFC5B4", Offset = "0xFFC5B4", VA = "0xFFC5B4")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000028")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x101E1B0", Offset = "0x101E1B0", VA = "0x101E1B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x101E6C4", Offset = "0x101E6C4", VA = "0x101E6C4")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x101E784", Offset = "0x101E784", VA = "0x101E784")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x101EA04", Offset = "0x101EA04", VA = "0x101EA04")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x101EAE4", Offset = "0x101EAE4", VA = "0x101EAE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x101EBC8", Offset = "0x101EBC8", VA = "0x101EBC8")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x101EC3C", Offset = "0x101EC3C", VA = "0x101EC3C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x101EC44", Offset = "0x101EC44", VA = "0x101EC44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9D7C", Offset = "0xAB9D7C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x101ECA8", Offset = "0x101ECA8", VA = "0x101ECA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9D8C", Offset = "0xAB9D8C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x101ED0C", Offset = "0x101ED0C", VA = "0x101ED0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9D9C", Offset = "0xAB9D9C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x101ED70", Offset = "0x101ED70", VA = "0x101ED70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9DAC", Offset = "0xAB9DAC")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000029")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200016C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5140", Offset = "0xAB5140")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0x1002F60", Offset = "0x1002F60", VA = "0x1002F60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x1002FA8", Offset = "0x1002FA8", VA = "0x1002FA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x1002DE4", Offset = "0x1002DE4", VA = "0x1002DE4")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x1002E10", Offset = "0x1002E10", VA = "0x1002E10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x1002E14", Offset = "0x1002E14", VA = "0x1002E14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1002F68", Offset = "0x1002F68", VA = "0x1002F68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x1029B34", Offset = "0x1029B34", VA = "0x1029B34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1029C50", Offset = "0x1029C50", VA = "0x1029C50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x1029BD8", Offset = "0x1029BD8", VA = "0x1029BD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xAB9DBC", Offset = "0xAB9DBC")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x1029DFC", Offset = "0x1029DFC", VA = "0x1029DFC")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x200002A")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB638C", Offset = "0xAB638C")]
	public int SubdivisionsU;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB63A8", Offset = "0xAB63A8")]
	public int SubdivisionsV;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x150F844", Offset = "0x150F844", VA = "0x150F844")]
	private void Update()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x151028C", Offset = "0x151028C", VA = "0x151028C")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200002B")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000018")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0x1634F9C", Offset = "0x1634F9C", VA = "0x1634F9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1634FF0", Offset = "0x1634FF0", VA = "0x1634FF0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x16353F8", Offset = "0x16353F8", VA = "0x16353F8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x16354E4", Offset = "0x16354E4", VA = "0x16354E4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xAB9E1C", Offset = "0xAB9E1C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000139")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600013B")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600013C")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600013D")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600013E")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600013F")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000140")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1635548", Offset = "0x1635548", VA = "0x1635548")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1635584", Offset = "0x1635584", VA = "0x1635584")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x16355F4", Offset = "0x16355F4", VA = "0x16355F4")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1635764", Offset = "0x1635764", VA = "0x1635764")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1635840", Offset = "0x1635840", VA = "0x1635840")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x16352F0", Offset = "0x16352F0", VA = "0x16352F0")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1635908", Offset = "0x1635908", VA = "0x1635908")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1635970", Offset = "0x1635970", VA = "0x1635970")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1635A68", Offset = "0x1635A68", VA = "0x1635A68")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200002C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4758", Offset = "0xAB4758")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200016D")]
	public enum DrawMode
	{
		[Token(Token = "0x400085F")]
		Opaque,
		[Token(Token = "0x4000860")]
		OpaqueWithClip,
		[Token(Token = "0x4000861")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000862")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000019")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000150")]
		[Address(RVA = "0x17162A8", Offset = "0x17162A8", VA = "0x17162A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x1716338", Offset = "0x1716338", VA = "0x1716338")]
		set
		{
		}
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1714D24", Offset = "0x1714D24", VA = "0x1714D24")]
	private void Start()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1715914", Offset = "0x1715914", VA = "0x1715914")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1715994", Offset = "0x1715994", VA = "0x1715994")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1715A84", Offset = "0x1715A84", VA = "0x1715A84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1715B74", Offset = "0x1715B74", VA = "0x1715B74", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1715D80", Offset = "0x1715D80", VA = "0x1715D80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1716404", Offset = "0x1716404", VA = "0x1716404")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200002D")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200016E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5150", Offset = "0xAB5150")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x100DC38", Offset = "0x100DC38", VA = "0x100DC38")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x100DC40", Offset = "0x100DC40", VA = "0x100DC40")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x172FD4C", Offset = "0x172FD4C", VA = "0x172FD4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x172FF60", Offset = "0x172FF60", VA = "0x172FF60")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1730070", Offset = "0x1730070", VA = "0x1730070")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200002E")]
public class QVRInput
{
	[Token(Token = "0x200016F")]
	public enum Handedness
	{
		[Token(Token = "0x4000866")]
		RightHanded = 0,
		[Token(Token = "0x4000867")]
		LeftHanded = 1,
		[Token(Token = "0x4000868")]
		Default = 0
	}

	[Token(Token = "0x2000170")]
	[Flags]
	public enum Controller
	{
		[Token(Token = "0x400086A")]
		None = 0,
		[Token(Token = "0x400086B")]
		LTouch = 1,
		[Token(Token = "0x400086C")]
		RTouch = 2,
		[Token(Token = "0x400086D")]
		Touch = 3,
		[Token(Token = "0x400086E")]
		HeadDevice = 4,
		[Token(Token = "0x400086F")]
		Default = 0x10
	}

	[Token(Token = "0x2000171")]
	[Flags]
	public enum Button
	{
		[Token(Token = "0x4000871")]
		None = 0,
		[Token(Token = "0x4000872")]
		Trigger = 1,
		[Token(Token = "0x4000873")]
		Grip = 2,
		[Token(Token = "0x4000874")]
		Home = 0x40,
		[Token(Token = "0x4000875")]
		A = 0x10,
		[Token(Token = "0x4000876")]
		B = 0x20,
		[Token(Token = "0x4000877")]
		JoyStick = 0x80
	}

	[Token(Token = "0x2000172")]
	public enum VirtualButton
	{
		[Token(Token = "0x4000879")]
		None,
		[Token(Token = "0x400087A")]
		Trigger,
		[Token(Token = "0x400087B")]
		Grip,
		[Token(Token = "0x400087C")]
		Home,
		[Token(Token = "0x400087D")]
		A,
		[Token(Token = "0x400087E")]
		B,
		[Token(Token = "0x400087F")]
		JoyStick,
		[Token(Token = "0x4000880")]
		X,
		[Token(Token = "0x4000881")]
		Y,
		[Token(Token = "0x4000882")]
		ControllerConnect,
		[Token(Token = "0x4000883")]
		Gaze,
		[Token(Token = "0x4000884")]
		Test1,
		[Token(Token = "0x4000885")]
		Test2,
		[Token(Token = "0x4000886")]
		Test3
	}

	[Token(Token = "0x2000173")]
	public enum ButtonAction
	{
		[Token(Token = "0x4000888")]
		None,
		[Token(Token = "0x4000889")]
		Up,
		[Token(Token = "0x400088A")]
		Down,
		[Token(Token = "0x400088B")]
		LongDown,
		[Token(Token = "0x400088C")]
		ShortDown,
		[Token(Token = "0x400088D")]
		Force,
		[Token(Token = "0x400088E")]
		Pos,
		[Token(Token = "0x400088F")]
		SwipeLeft,
		[Token(Token = "0x4000890")]
		SwipeRight,
		[Token(Token = "0x4000891")]
		SwipeUp,
		[Token(Token = "0x4000892")]
		SwipeDown,
		[Token(Token = "0x4000893")]
		Touch,
		[Token(Token = "0x4000894")]
		UnTouch
	}

	[Token(Token = "0x2000174")]
	public enum Gesture
	{
		[Token(Token = "0x4000896")]
		None,
		[Token(Token = "0x4000897")]
		FIST,
		[Token(Token = "0x4000898")]
		GRIP,
		[Token(Token = "0x4000899")]
		OPEN,
		[Token(Token = "0x400089A")]
		POINT,
		[Token(Token = "0x400089B")]
		POINT_THUMB,
		[Token(Token = "0x400089C")]
		REST,
		[Token(Token = "0x400089D")]
		THUMB_UP
	}

	[Token(Token = "0x2000175")]
	public enum ControllerVibrationLevel
	{
		[Token(Token = "0x400089F")]
		OneLevel = 0,
		[Token(Token = "0x40008A0")]
		TwoLevel = 3,
		[Token(Token = "0x40008A1")]
		ThreeLevel = 7,
		[Token(Token = "0x40008A2")]
		FourLevel = 12,
		[Token(Token = "0x40008A3")]
		FiveLevel = 15
	}

	[Token(Token = "0x2000176")]
	private class ControllerParameter
	{
		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _key;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _data;

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x100AFBC", Offset = "0x100AFBC", VA = "0x100AFBC")]
		public ControllerParameter(string key, string data)
		{
		}
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x148AF84", Offset = "0x148AF84", VA = "0x148AF84")]
	public static void Start()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x148AFE8", Offset = "0x148AFE8", VA = "0x148AFE8")]
	public static void OnDestroy()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x148AFEC", Offset = "0x148AFEC", VA = "0x148AFEC")]
	public static void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x148AFF0", Offset = "0x148AFF0", VA = "0x148AFF0")]
	public static void Update()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1482F7C", Offset = "0x1482F7C", VA = "0x1482F7C")]
	public static Handedness GetDominentHand()
	{
		return default(Handedness);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x14830C8", Offset = "0x14830C8", VA = "0x14830C8")]
	public static void SetDominentHand(Handedness val)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x148378C", Offset = "0x148378C", VA = "0x148378C")]
	public static bool GetRawDown(VirtualButton virtualButton, Controller controllerMask = Controller.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1486584", Offset = "0x1486584", VA = "0x1486584")]
	public static int GetTriggerForce(Controller controllerMask = Controller.Default)
	{
		return default(int);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x14866C8", Offset = "0x14866C8", VA = "0x14866C8")]
	public static int GetGripForce(Controller controllerMask = Controller.Default)
	{
		return default(int);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x148B0CC", Offset = "0x148B0CC", VA = "0x148B0CC")]
	public static bool GetRawTouch(VirtualButton virtualButton, Controller controllerMask = Controller.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x148B178", Offset = "0x148B178", VA = "0x148B178")]
	public static float GetPressTime(VirtualButton virtualButton, Controller controllerMask = Controller.Default)
	{
		return default(float);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x148B210", Offset = "0x148B210", VA = "0x148B210")]
	public static bool Get(VirtualButton virtualButton, ButtonAction buttonAction, Controller controllerMask = Controller.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1483030", Offset = "0x1483030", VA = "0x1483030")]
	public static bool GetDown(VirtualButton virtualButton, Controller controllerMask = Controller.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1483838", Offset = "0x1483838", VA = "0x1483838")]
	public static bool GetUp(VirtualButton virtualButton, Controller controllerMask = Controller.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x148B2AC", Offset = "0x148B2AC", VA = "0x148B2AC")]
	public static bool GetButtonTouch(VirtualButton virtualButton, Controller controllerMask = Controller.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1486A68", Offset = "0x1486A68", VA = "0x1486A68")]
	public static Vector2 GetJoyStickPosition(Controller controllerMask = Controller.Default)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x148B344", Offset = "0x148B344", VA = "0x148B344")]
	public static bool GetJoyStickSwipeEvent(ButtonAction buttonAction, Controller controllerMask = Controller.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1484894", Offset = "0x1484894", VA = "0x1484894")]
	public static Vector3 GetLocalControllerPosition(Controller controllerMask = Controller.Default)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1483990", Offset = "0x1483990", VA = "0x1483990")]
	public static Quaternion GetLocalControllerRotation(Controller controllerMask = Controller.Default)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x148B414", Offset = "0x148B414", VA = "0x148B414")]
	public static Vector3 GetLocalControllerVelocity(Controller controllerMask = Controller.Default)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x148B488", Offset = "0x148B488", VA = "0x148B488")]
	public static Vector3 GetLocalControllerAcceleration(Controller controllerMask = Controller.Default)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x148B4FC", Offset = "0x148B4FC", VA = "0x148B4FC")]
	public static Vector3 GetLocalControllerAngularVelocity(Controller controllerMask = Controller.Default)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x148B570", Offset = "0x148B570", VA = "0x148B570")]
	public static Vector3 GetLocalControllerAngularAcceleration(Controller controllerMask = Controller.Default)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x14835E4", Offset = "0x14835E4", VA = "0x14835E4")]
	public static int GetLocalControllerBatteryPercent(Controller controllerMask = Controller.Default)
	{
		return default(int);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x148318C", Offset = "0x148318C", VA = "0x148318C")]
	public static bool IsControllerConnected(Controller controllerMask = Controller.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x148B5E4", Offset = "0x148B5E4", VA = "0x148B5E4")]
	public static void StartVibration(int amplitude, int duration, Controller controllerMask = Controller.Default)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x148B618", Offset = "0x148B618", VA = "0x148B618")]
	public static bool GetButtonOk()
	{
		return default(bool);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x148B67C", Offset = "0x148B67C", VA = "0x148B67C")]
	public static bool GetButtonCancel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x148B688", Offset = "0x148B688", VA = "0x148B688")]
	public static GameObject GetCurrentHitGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x148B85C", Offset = "0x148B85C", VA = "0x148B85C")]
	public QVRInput()
	{
	}
}
[Token(Token = "0x200002F")]
public class QVRInputManager : QVRSingletion<QVRInputManager>
{
	[Token(Token = "0x2000177")]
	public enum InputModuleType
	{
		[Token(Token = "0x40008A7")]
		NONE,
		[Token(Token = "0x40008A8")]
		GAZE,
		[Token(Token = "0x40008A9")]
		CONTROLLER
	}

	[Serializable]
	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5180", Offset = "0xAB5180")]
	private sealed class <>c
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, bool> <>9__26_0;

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x100B070", Offset = "0x100B070", VA = "0x100B070")]
		public <>c()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x100B078", Offset = "0x100B078", VA = "0x100B078")]
		internal bool <.ctor>b__26_0(GameObject go)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Func<GameObject, bool> InputFiltering;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputModuleType lastInputModuleType;

	[Token(Token = "0x1700001A")]
	public InputModuleType currentInputModuleType
	{
		[Token(Token = "0x6000175")]
		[Address(RVA = "0x1487F18", Offset = "0x1487F18", VA = "0x1487F18")]
		get
		{
			return default(InputModuleType);
		}
		[Token(Token = "0x6000176")]
		[Address(RVA = "0x148B8B8", Offset = "0x148B8B8", VA = "0x148B8B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public InputModuleType CurrentInputModule
	{
		[Token(Token = "0x6000177")]
		[Address(RVA = "0x148B8E4", Offset = "0x148B8E4", VA = "0x148B8E4")]
		get
		{
			return default(InputModuleType);
		}
	}

	[Token(Token = "0x1700001C")]
	public QVRBaseInputModule CurrentVRInputModule
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x148B798", Offset = "0x148B798", VA = "0x148B798")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001D")]
	public Camera UIRaycastCamera
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x148BC6C", Offset = "0x148BC6C", VA = "0x148BC6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000010")]
	public event Action<InputModuleType> OnModuleSwitch
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x148B904", Offset = "0x148B904", VA = "0x148B904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9E54", Offset = "0xAB9E54")]
		add
		{
		}
		[Token(Token = "0x600017A")]
		[Address(RVA = "0x148B9A4", Offset = "0x148B9A4", VA = "0x148B9A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9E64", Offset = "0xAB9E64")]
		remove
		{
		}
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x148BA44", Offset = "0x148BA44", VA = "0x148BA44")]
	private void Start()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x148BA64", Offset = "0x148BA64", VA = "0x148BA64")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x148BA68", Offset = "0x148BA68", VA = "0x148BA68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x148BA6C", Offset = "0x148BA6C", VA = "0x148BA6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x148BA70", Offset = "0x148BA70", VA = "0x148BA70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x148BC68", Offset = "0x148BC68", VA = "0x148BC68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x148BAC8", Offset = "0x148BAC8", VA = "0x148BAC8")]
	public void ChangeInputModule(InputModuleType inputModuleType)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1488258", Offset = "0x1488258", VA = "0x1488258")]
	public void RefreshEventCamera()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x148BC70", Offset = "0x148BC70", VA = "0x148BC70")]
	private void AutoChangeInputModule()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x148BCEC", Offset = "0x148BCEC", VA = "0x148BCEC")]
	public void DisableInputModule(bool b)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x148BA5C", Offset = "0x148BA5C", VA = "0x148BA5C")]
	private void GetLaserHand()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x148BD8C", Offset = "0x148BD8C", VA = "0x148BD8C")]
	public QVRInputManager()
	{
	}
}
[Token(Token = "0x2000030")]
public class QVRInteractiveFlag : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x6000188")]
	[Address(RVA = "0x148BF20", Offset = "0x148BF20", VA = "0x148BF20", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x148BF24", Offset = "0x148BF24", VA = "0x148BF24")]
	public QVRInteractiveFlag()
	{
	}
}
[Token(Token = "0x2000031")]
public class QVRReticle : MonoBehaviour
{
	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture hoverTex;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture normalTex;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isHover;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool disableHoverEffect;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material _material;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x2A5F1C8", Offset = "0x2A5F1C8", VA = "0x2A5F1C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x2A5F234", Offset = "0x2A5F234", VA = "0x2A5F234")]
	public void EnterPointer()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x2A5F2D4", Offset = "0x2A5F2D4", VA = "0x2A5F2D4")]
	public void ExitPointer()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x2A5F370", Offset = "0x2A5F370", VA = "0x2A5F370")]
	public QVRReticle()
	{
	}
}
[Token(Token = "0x2000032")]
public class ImeDelegateImpl : ImeDelegateBase, IDragHandler, IEventSystemHandler, IPointerDownHandler, IPointerUpHandler
{
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text mText;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject mPanel;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ImeManager mManager;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D mTexture;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 mTextureSize;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x102AFAC", Offset = "0x102AFAC", VA = "0x102AFAC", Slot = "4")]
	public override void OnIMEShow(Vector2 vSize)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x102B120", Offset = "0x102B120", VA = "0x102B120", Slot = "5")]
	public override void OnIMEHide()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x102B1B0", Offset = "0x102B1B0", VA = "0x102B1B0", Slot = "6")]
	public override void OnIMECommit(string strCommit)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x102B20C", Offset = "0x102B20C", VA = "0x102B20C", Slot = "7")]
	public override void OnIMEKey(SGImeKey key)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x102B2E0", Offset = "0x102B2E0", VA = "0x102B2E0", Slot = "8")]
	public override void OnIMEError(SGImeError nType, string strErr)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x102B2E4", Offset = "0x102B2E4", VA = "0x102B2E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x102B490", Offset = "0x102B490", VA = "0x102B490")]
	private void Update()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x102B2E8", Offset = "0x102B2E8", VA = "0x102B2E8")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x102B51C", Offset = "0x102B51C", VA = "0x102B51C")]
	private void CorrectPos(ref float x, ref float y)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x102B5C0", Offset = "0x102B5C0", VA = "0x102B5C0")]
	private void DispatchMessageToAndroid(SGImeMotionEventType type, PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x102B75C", Offset = "0x102B75C", VA = "0x102B75C")]
	private void LogEvent(string prefix, PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x102BA40", Offset = "0x102BA40", VA = "0x102BA40")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x102BA8C", Offset = "0x102BA8C", VA = "0x102BA8C", Slot = "11")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x102BAF4", Offset = "0x102BAF4", VA = "0x102BAF4")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x102BB40", Offset = "0x102BB40", VA = "0x102BB40")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x102BB8C", Offset = "0x102BB8C", VA = "0x102BB8C", Slot = "12")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x102BBF4", Offset = "0x102BBF4", VA = "0x102BBF4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x102BC40", Offset = "0x102BC40", VA = "0x102BC40")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x102BCB4", Offset = "0x102BCB4", VA = "0x102BCB4", Slot = "13")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x102BD1C", Offset = "0x102BD1C", VA = "0x102BD1C", Slot = "9")]
	public override void SetPose(Action<Transform> fun)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x102BD20", Offset = "0x102BD20", VA = "0x102BD20", Slot = "10")]
	public override Transform GetTransform()
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x102BD28", Offset = "0x102BD28", VA = "0x102BD28")]
	public ImeDelegateImpl()
	{
	}
}
[Token(Token = "0x2000033")]
public class SGViewGather
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject[] mViews;

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x2A67BA0", Offset = "0x2A67BA0", VA = "0x2A67BA0")]
	public SGViewGather(GameObject[] param)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x2A67BD4", Offset = "0x2A67BD4", VA = "0x2A67BD4")]
	public void SetActive(bool bActive)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x2A67C50", Offset = "0x2A67C50", VA = "0x2A67C50")]
	public bool FindName(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x2A67CE4", Offset = "0x2A67CE4", VA = "0x2A67CE4")]
	public void SetTexture(Texture2D tex)
	{
	}
}
[Token(Token = "0x2000034")]
public class SGMouseTracker
{
	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool mDownOld;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector2 mPtOld;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private SGImeMotionEventType mEvent;

	[Token(Token = "0x4000127")]
	private const float mTrackRadius = 10f;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private long mTimeDown;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool mLongPressed;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private long mIntervelLongPress;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x2A678F0", Offset = "0x2A678F0", VA = "0x2A678F0")]
	public bool Track(Vector2 pt, bool bDown)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x2A67B64", Offset = "0x2A67B64", VA = "0x2A67B64")]
	public bool TrackOuter()
	{
		return default(bool);
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x2A67B80", Offset = "0x2A67B80", VA = "0x2A67B80")]
	public Vector2 GetPoint()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x2A67B88", Offset = "0x2A67B88", VA = "0x2A67B88")]
	public SGImeMotionEventType GetEvent()
	{
		return default(SGImeMotionEventType);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x2A67A9C", Offset = "0x2A67A9C", VA = "0x2A67A9C")]
	private float PointDist(Vector2 ptNew, Vector2 ptOld)
	{
		return default(float);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x2A67B90", Offset = "0x2A67B90", VA = "0x2A67B90")]
	public SGMouseTracker()
	{
	}
}
[Token(Token = "0x2000035")]
public class ImeDelegateImpl_kbd : ImeDelegateBase
{
	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static IVrInputField _inputField;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] mKbdViews;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SGViewGather mKbdView;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ImeManager mManager;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D mTexture;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 mTextureSize;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 mPtKbd;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SGMouseTracker mTracker;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fixDistance;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 posOffSet;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform tr;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action<Transform> setPoseAction;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x102BD3C", Offset = "0x102BD3C", VA = "0x102BD3C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x102BDAC", Offset = "0x102BDAC", VA = "0x102BDAC")]
	public void SetPos()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x102BEF8", Offset = "0x102BEF8", VA = "0x102BEF8", Slot = "9")]
	public override void SetPose(Action<Transform> fun)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x102BF00", Offset = "0x102BF00", VA = "0x102BF00", Slot = "10")]
	public override Transform GetTransform()
	{
		return null;
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x102BF1C", Offset = "0x102BF1C", VA = "0x102BF1C", Slot = "4")]
	public override void OnIMEShow(Vector2 vSize)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x102C1FC", Offset = "0x102C1FC", VA = "0x102C1FC", Slot = "5")]
	public override void OnIMEHide()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x102C3F8", Offset = "0x102C3F8", VA = "0x102C3F8", Slot = "6")]
	public override void OnIMECommit(string strCommit)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x102C5D4", Offset = "0x102C5D4", VA = "0x102C5D4", Slot = "7")]
	public override void OnIMEKey(SGImeKey key)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x102C290", Offset = "0x102C290", VA = "0x102C290")]
	public void FinishInput()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x102C5FC", Offset = "0x102C5FC", VA = "0x102C5FC", Slot = "8")]
	public override void OnIMEError(SGImeError nType, string strErr)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x102C45C", Offset = "0x102C45C", VA = "0x102C45C")]
	public void KeyPressEvent(KeyCode code, char c, EventModifiers modifiers)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x102C600", Offset = "0x102C600", VA = "0x102C600")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x102C68C", Offset = "0x102C68C", VA = "0x102C68C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x102C690", Offset = "0x102C690", VA = "0x102C690")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x102C090", Offset = "0x102C090", VA = "0x102C090")]
	private void CreateTexture(Vector2 vSize)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x102C7C0", Offset = "0x102C7C0", VA = "0x102C7C0")]
	private void DispatchMessageToAndroid(SGImeMotionEventType type, Vector2 pt)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x102C87C", Offset = "0x102C87C", VA = "0x102C87C")]
	private void LogEvent(string prefix, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x102C718", Offset = "0x102C718", VA = "0x102C718")]
	private void CheckMouseEvent(Ray ray, bool isDown, bool isValid)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x102CB60", Offset = "0x102CB60", VA = "0x102CB60")]
	private bool Point2UV(Ray ray, ref Vector2 ptUV)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x102CCE0", Offset = "0x102CCE0", VA = "0x102CCE0")]
	public ImeDelegateImpl_kbd()
	{
	}
}
[Token(Token = "0x2000036")]
internal class UnderlineProperty
{
	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color _color;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 _position;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _width;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _height;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 _privot;

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1707ADC", Offset = "0x1707ADC", VA = "0x1707ADC")]
	public UnderlineProperty()
	{
	}
}
[Token(Token = "0x2000037")]
public class MultipleLinkButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
{
	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text _text;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _curCharacterCount;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Image> _lines;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action _clickEvent;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isInitUnderline;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool m_bNeedPaint;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_strLastText;

	[Token(Token = "0x1700001E")]
	public Action ClickEvent
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x17126BC", Offset = "0x17126BC", VA = "0x17126BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x17126C4", Offset = "0x17126C4", VA = "0x17126C4")]
		set
		{
		}
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x17126CC", Offset = "0x17126CC", VA = "0x17126CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x17127D4", Offset = "0x17127D4", VA = "0x17127D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x17129D8", Offset = "0x17129D8", VA = "0x17129D8")]
	private List<UnderlineProperty> GetUnderlinePropertys()
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x171362C", Offset = "0x171362C", VA = "0x171362C")]
	private float GetWidth(int idx, IList<UICharInfo> info)
	{
		return default(float);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x17139AC", Offset = "0x17139AC", VA = "0x17139AC")]
	private Vector2 GetTextAnchorPivot(TextAnchor anchor)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1712ECC", Offset = "0x1712ECC", VA = "0x1712ECC")]
	private void CreateUnderLines(List<UnderlineProperty> list)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x17139E8", Offset = "0x17139E8", VA = "0x17139E8")]
	public void CleanUnderLines()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1713AF0", Offset = "0x1713AF0", VA = "0x1713AF0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x1713CCC", Offset = "0x1713CCC", VA = "0x1713CCC", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1713EA8", Offset = "0x1713EA8", VA = "0x1713EA8")]
	public void SetPaintUnderLine(bool p_bNeedPaint)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1713F64", Offset = "0x1713F64", VA = "0x1713F64")]
	public void SetUnderLineText(string p_strPaintText, string p_strLastText)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x1714114", Offset = "0x1714114", VA = "0x1714114")]
	public MultipleLinkButton()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x1714198", Offset = "0x1714198", VA = "0x1714198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9E74", Offset = "0xAB9E74")]
	private void <Start>b__10_0()
	{
	}
}
[Token(Token = "0x2000038")]
public class TextHandler : MonoBehaviour, IPointerUpHandler, IEventSystemHandler, IPointerDownHandler
{
	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ImeManager mManager;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SGImeInputType mInputType;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SGImeTextType mTextType;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x1703EBC", Offset = "0x1703EBC", VA = "0x1703EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x1703EC0", Offset = "0x1703EC0", VA = "0x1703EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1703EC4", Offset = "0x1703EC4", VA = "0x1703EC4", Slot = "5")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1703EC8", Offset = "0x1703EC8", VA = "0x1703EC8", Slot = "4")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1703F84", Offset = "0x1703F84", VA = "0x1703F84")]
	private void LogEvent(string prefix, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x1704268", Offset = "0x1704268", VA = "0x1704268")]
	public TextHandler()
	{
	}
}
[Token(Token = "0x2000039")]
internal interface ImeBase
{
	[Token(Token = "0x60001D8")]
	bool Create(ImeDelegateBase pDelegate);

	[Token(Token = "0x60001D9")]
	void GetSize(ref Vector2 size);

	[Token(Token = "0x60001DA")]
	void Draw(Texture2D tex);

	[Token(Token = "0x60001DB")]
	void OnTouch(float x, float y, SGImeMotionEventType type);

	[Token(Token = "0x60001DC")]
	void UpdateData();

	[Token(Token = "0x60001DD")]
	void Show(SGImeInputType typeInput, SGImeTextType typeText);

	[Token(Token = "0x60001DE")]
	void Hide();

	[Token(Token = "0x60001DF")]
	bool IsShow();
}
[Token(Token = "0x200003A")]
public enum SGImeError
{
	[Token(Token = "0x4000147")]
	UNKNOWN,
	[Token(Token = "0x4000148")]
	SERVICE_NOT_CONNECTED
}
[Token(Token = "0x200003B")]
public enum SGImeKey
{
	[Token(Token = "0x400014A")]
	KEYCODE_COMMIT = -1,
	[Token(Token = "0x400014B")]
	KEYCODE_UNKNOWN = 0,
	[Token(Token = "0x400014C")]
	KEYCODE_ENTER = 66,
	[Token(Token = "0x400014D")]
	KEYCODE_DEL = 67,
	[Token(Token = "0x400014E")]
	KEYCODE_VOICE_START = 1000,
	[Token(Token = "0x400014F")]
	KEYCODE_VOICE_END = 1001
}
[Token(Token = "0x200003C")]
public enum SGImeInputType
{
	[Token(Token = "0x4000151")]
	TYPE_CLASS_TEXT = 1,
	[Token(Token = "0x4000152")]
	TYPE_CLASS_NUMBER,
	[Token(Token = "0x4000153")]
	TYPE_CLASS_PHONE,
	[Token(Token = "0x4000154")]
	TYPE_CLASS_DATETIME,
	[Token(Token = "0x4000155")]
	TYPE_CLASS_MUTE_TEXT
}
[Token(Token = "0x200003D")]
public enum SGImeTextType
{
	[Token(Token = "0x4000157")]
	TYPE_TEXT_VARIATION_NORMAL = 0,
	[Token(Token = "0x4000158")]
	TYPE_TEXT_VARIATION_URI = 16,
	[Token(Token = "0x4000159")]
	TYPE_TEXT_VARIATION_EMAIL_ADDRESS = 32,
	[Token(Token = "0x400015A")]
	TYPE_TEXT_VARIATION_EMAIL_SUBJECT = 48,
	[Token(Token = "0x400015B")]
	TYPE_TEXT_VARIATION_SHORT_MESSAGE = 64,
	[Token(Token = "0x400015C")]
	TYPE_TEXT_VARIATION_LONG_MESSAGE = 80,
	[Token(Token = "0x400015D")]
	TYPE_TEXT_VARIATION_PERSON_NAME = 96,
	[Token(Token = "0x400015E")]
	TYPE_TEXT_VARIATION_POSTAL_ADDRESS = 112,
	[Token(Token = "0x400015F")]
	TYPE_TEXT_VARIATION_PASSWORD = 128,
	[Token(Token = "0x4000160")]
	TYPE_TEXT_VARIATION_VISIBLE_PASSWORD = 144,
	[Token(Token = "0x4000161")]
	TYPE_TEXT_VARIATION_WEB_EDIT_TEXT = 160,
	[Token(Token = "0x4000162")]
	TYPE_TEXT_VARIATION_FILTER = 176,
	[Token(Token = "0x4000163")]
	TYPE_TEXT_VARIATION_PHONETIC = 192,
	[Token(Token = "0x4000164")]
	TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS = 208,
	[Token(Token = "0x4000165")]
	TYPE_TEXT_VARIATION_WEB_PASSWORD = 224
}
[Token(Token = "0x200003E")]
public enum SGImeMotionEventType
{
	[Token(Token = "0x4000167")]
	ACTION_DOWN = 0,
	[Token(Token = "0x4000168")]
	ACTION_UP = 1,
	[Token(Token = "0x4000169")]
	ACTION_MOVE = 2,
	[Token(Token = "0x400016A")]
	ACTION_CANCEL = 3,
	[Token(Token = "0x400016B")]
	ACTION_OUTSIDE = 4,
	[Token(Token = "0x400016C")]
	ACTION_POINTER_DOWN = 5,
	[Token(Token = "0x400016D")]
	ACTION_POINTER_UP = 6,
	[Token(Token = "0x400016E")]
	ACTION_HOVER_MOVE = 7,
	[Token(Token = "0x400016F")]
	ACTION_SCROLL = 8,
	[Token(Token = "0x4000170")]
	ACTION_HOVER_ENTER = 9,
	[Token(Token = "0x4000171")]
	ACTION_HOVER_EXIT = 10,
	[Token(Token = "0x4000172")]
	ACTION_BUTTON_PRESS = 11,
	[Token(Token = "0x4000173")]
	ACTION_BUTTON_RELEASE = 12,
	[Token(Token = "0x4000174")]
	ACTION_LONGPRESS = 100
}
[Token(Token = "0x200003F")]
public abstract class ImeDelegateBase : MonoBehaviour
{
	[Token(Token = "0x60001E0")]
	public abstract void OnIMEShow(Vector2 vSize);

	[Token(Token = "0x60001E1")]
	public abstract void OnIMEHide();

	[Token(Token = "0x60001E2")]
	public abstract void OnIMECommit(string strCommit);

	[Token(Token = "0x60001E3")]
	public abstract void OnIMEKey(SGImeKey key);

	[Token(Token = "0x60001E4")]
	public abstract void OnIMEError(SGImeError nType, string strErr);

	[Token(Token = "0x60001E5")]
	public abstract void SetPose(Action<Transform> fun);

	[Token(Token = "0x60001E6")]
	public abstract Transform GetTransform();

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x102AFA4", Offset = "0x102AFA4", VA = "0x102AFA4")]
	protected ImeDelegateBase()
	{
	}
}
[Token(Token = "0x2000040")]
public class DummyIme : ImeBase
{
	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ImeDelegateBase mDelegate;

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x10236AC", Offset = "0x10236AC", VA = "0x10236AC", Slot = "4")]
	public bool Create(ImeDelegateBase pDelegate)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x1023748", Offset = "0x1023748", VA = "0x1023748", Slot = "5")]
	public void GetSize(ref Vector2 size)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x10237F0", Offset = "0x10237F0", VA = "0x10237F0", Slot = "6")]
	public void Draw(Texture2D tex)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x10237F4", Offset = "0x10237F4", VA = "0x10237F4", Slot = "7")]
	public void OnTouch(float x, float y, SGImeMotionEventType type)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x1023ABC", Offset = "0x1023ABC", VA = "0x1023ABC", Slot = "8")]
	public void UpdateData()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x1023AC0", Offset = "0x1023AC0", VA = "0x1023AC0", Slot = "9")]
	public void Show(SGImeInputType typeInput, SGImeTextType typeText)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x1023C34", Offset = "0x1023C34", VA = "0x1023C34", Slot = "10")]
	public void Hide()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1023CC4", Offset = "0x1023CC4", VA = "0x1023CC4", Slot = "11")]
	public bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x1023CCC", Offset = "0x1023CCC", VA = "0x1023CCC")]
	public DummyIme()
	{
	}
}
[Token(Token = "0x2000041")]
public class SGIme : ImeBase
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool mUseAndroid;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AndroidJavaObject javaIme;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ImeDelegateBase mDelegate;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 mTextureSize;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string mStrCommit;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool mShow;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x2A66290", Offset = "0x2A66290", VA = "0x2A66290", Slot = "4")]
	public bool Create(ImeDelegateBase pDelegate)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x2A66818", Offset = "0x2A66818", VA = "0x2A66818", Slot = "5")]
	public void GetSize(ref Vector2 size)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x2A66924", Offset = "0x2A66924", VA = "0x2A66924", Slot = "6")]
	public void Draw(Texture2D tex)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x2A66C40", Offset = "0x2A66C40", VA = "0x2A66C40", Slot = "9")]
	public void Show(SGImeInputType typeInput, SGImeTextType typeText)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x2A6669C", Offset = "0x2A6669C", VA = "0x2A6669C", Slot = "10")]
	public void Hide()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x2A66ED4", Offset = "0x2A66ED4", VA = "0x2A66ED4", Slot = "7")]
	public void OnTouch(float x, float y, SGImeMotionEventType type)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x2A67320", Offset = "0x2A67320", VA = "0x2A67320", Slot = "8")]
	public void UpdateData()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x2A6633C", Offset = "0x2A6633C", VA = "0x2A6633C")]
	private void JavaInit()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x2A66B10", Offset = "0x2A66B10", VA = "0x2A66B10")]
	private bool IsInited()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x2A66B30", Offset = "0x2A66B30", VA = "0x2A66B30")]
	private bool IsNeedUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x2A675B0", Offset = "0x2A675B0", VA = "0x2A675B0")]
	private int GetCommitCode()
	{
		return default(int);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x2A676C0", Offset = "0x2A676C0", VA = "0x2A676C0")]
	private string GetCommitString()
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x2A677D0", Offset = "0x2A677D0", VA = "0x2A677D0", Slot = "11")]
	public bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x2A678E0", Offset = "0x2A678E0", VA = "0x2A678E0")]
	public SGIme()
	{
	}
}
[Token(Token = "0x2000042")]
public class ImeManager : MonoBehaviour
{
	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ImeManager Instance;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ImeDelegateBase mDelegate;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ImeBase mIme;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 mSize;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool mIsPaused;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool mIsFocus;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x102CD68", Offset = "0x102CD68", VA = "0x102CD68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x102CDBC", Offset = "0x102CDBC", VA = "0x102CDBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x102CEF8", Offset = "0x102CEF8", VA = "0x102CEF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x102CFC0", Offset = "0x102CFC0", VA = "0x102CFC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x102D078", Offset = "0x102D078", VA = "0x102D078")]
	public void Show(SGImeInputType typeInput, SGImeTextType typeText)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x102CEFC", Offset = "0x102CEFC", VA = "0x102CEFC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x102D1BC", Offset = "0x102D1BC", VA = "0x102D1BC")]
	public bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x102D26C", Offset = "0x102D26C", VA = "0x102D26C")]
	public void SetPose(Action<Transform> fun)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x102D28C", Offset = "0x102D28C", VA = "0x102D28C")]
	public Transform GetTransform()
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x102B060", Offset = "0x102B060", VA = "0x102B060")]
	public void Draw(Texture2D tex)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x102B684", Offset = "0x102B684", VA = "0x102B684")]
	public void OnTouch(float x, float y, SGImeMotionEventType type)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x102D2AC", Offset = "0x102D2AC", VA = "0x102D2AC")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x102D2B8", Offset = "0x102D2B8", VA = "0x102D2B8")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x102D2EC", Offset = "0x102D2EC", VA = "0x102D2EC")]
	public ImeManager()
	{
	}
}
[Token(Token = "0x2000043")]
public class testClick : MonoBehaviour
{
	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1000028", Offset = "0x1000028", VA = "0x1000028")]
	private void Start()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x100002C", Offset = "0x100002C", VA = "0x100002C")]
	private void Update()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1000690", Offset = "0x1000690", VA = "0x1000690")]
	public void Click()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x1000704", Offset = "0x1000704", VA = "0x1000704")]
	private void LogEvent(string prefix, PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x10009E8", Offset = "0x10009E8", VA = "0x10009E8")]
	public testClick()
	{
	}
}
[Token(Token = "0x2000044")]
public class SvrConfigOptions
{
	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SvrConfigOptions instance;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string optionsFileName;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6444", Offset = "0xAB6444")]
	private bool <FreezeAnimations>k__BackingField;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6454", Offset = "0xAB6454")]
	private float <FreezeAnimationsAtTimeInSecs>k__BackingField;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6464", Offset = "0xAB6464")]
	private bool <UseFixedViewport>k__BackingField;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6474", Offset = "0xAB6474")]
	private Vector3 <FixedViewportPosition>k__BackingField;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6484", Offset = "0xAB6484")]
	private Vector3 <FixedViewportEulerAnglesRotation>k__BackingField;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6494", Offset = "0xAB6494")]
	private int <OverrideRenderTextureMSAA>k__BackingField;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB64A4", Offset = "0xAB64A4")]
	private bool <DisableAudio>k__BackingField;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB64B4", Offset = "0xAB64B4")]
	private bool <DisableParticles>k__BackingField;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB64C4", Offset = "0xAB64C4")]
	private float? <EyeResolutionScale>k__BackingField;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB64D4", Offset = "0xAB64D4")]
	private float? <OverlayResolutionScale>k__BackingField;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB64E4", Offset = "0xAB64E4")]
	private bool? <FoveationEnabled>k__BackingField;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB64F4", Offset = "0xAB64F4")]
	private int? <FoveationLevel>k__BackingField;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6504", Offset = "0xAB6504")]
	private bool? <FoveationSubsampled>k__BackingField;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6514", Offset = "0xAB6514")]
	private float <FoveationArea>k__BackingField;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6524", Offset = "0xAB6524")]
	private Vector2 <FoveationGain>k__BackingField;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6534", Offset = "0xAB6534")]
	private float <FoveationMinimum>k__BackingField;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6544", Offset = "0xAB6544")]
	private bool? <TrackEyesEnabled>k__BackingField;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6554", Offset = "0xAB6554")]
	private bool? <TrackPositionEnabled>k__BackingField;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6564", Offset = "0xAB6564")]
	private bool? <GazeReticleEnabled>k__BackingField;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6574", Offset = "0xAB6574")]
	private bool? <DebugHudEnabled>k__BackingField;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6584", Offset = "0xAB6584")]
	private Vector3? <StartPosition>k__BackingField;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6594", Offset = "0xAB6594")]
	private Vector3? <StartRotation>k__BackingField;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB65A4", Offset = "0xAB65A4")]
	private Vector3? <AugmentPosition>k__BackingField;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB65B4", Offset = "0xAB65B4")]
	private Vector3? <AugmentRotation>k__BackingField;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB65C4", Offset = "0xAB65C4")]
	private Vector3? <AugmentScale>k__BackingField;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB65D4", Offset = "0xAB65D4")]
	private bool <ThermalEnabled>k__BackingField;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB65E4", Offset = "0xAB65E4")]
	private bool <ThermalTouchTest>k__BackingField;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB65F4", Offset = "0xAB65F4")]
	private List<string> <ThermalStatesDefault>k__BackingField;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6604", Offset = "0xAB6604")]
	private List<string> <CpuState0>k__BackingField;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6614", Offset = "0xAB6614")]
	private List<string> <CpuState1>k__BackingField;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6624", Offset = "0xAB6624")]
	private List<string> <CpuState2>k__BackingField;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6634", Offset = "0xAB6634")]
	private List<string> <CpuState3>k__BackingField;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6644", Offset = "0xAB6644")]
	private List<string> <CpuState4>k__BackingField;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6654", Offset = "0xAB6654")]
	private List<string> <GpuState0>k__BackingField;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6664", Offset = "0xAB6664")]
	private List<string> <GpuState1>k__BackingField;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6674", Offset = "0xAB6674")]
	private List<string> <GpuState2>k__BackingField;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6684", Offset = "0xAB6684")]
	private List<string> <GpuState3>k__BackingField;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6694", Offset = "0xAB6694")]
	private List<string> <GpuState4>k__BackingField;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB66A4", Offset = "0xAB66A4")]
	private List<string> <SkinState0>k__BackingField;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB66B4", Offset = "0xAB66B4")]
	private List<string> <SkinState1>k__BackingField;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB66C4", Offset = "0xAB66C4")]
	private List<string> <SkinState2>k__BackingField;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB66D4", Offset = "0xAB66D4")]
	private List<string> <SkinState3>k__BackingField;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB66E4", Offset = "0xAB66E4")]
	private List<string> <SkinState4>k__BackingField;

	[Token(Token = "0x1700001F")]
	public static SvrConfigOptions Instance
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0x1730088", Offset = "0x1730088", VA = "0x1730088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public bool FreezeAnimations
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x1730200", Offset = "0x1730200", VA = "0x1730200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9E84", Offset = "0xAB9E84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000214")]
		[Address(RVA = "0x1730208", Offset = "0x1730208", VA = "0x1730208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9E94", Offset = "0xAB9E94")]
		private set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public float FreezeAnimationsAtTimeInSecs
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x1730214", Offset = "0x1730214", VA = "0x1730214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9EA4", Offset = "0xAB9EA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x173021C", Offset = "0x173021C", VA = "0x173021C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9EB4", Offset = "0xAB9EB4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public bool UseFixedViewport
	{
		[Token(Token = "0x6000217")]
		[Address(RVA = "0x1730224", Offset = "0x1730224", VA = "0x1730224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9EC4", Offset = "0xAB9EC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000218")]
		[Address(RVA = "0x173022C", Offset = "0x173022C", VA = "0x173022C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9ED4", Offset = "0xAB9ED4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public Vector3 FixedViewportPosition
	{
		[Token(Token = "0x6000219")]
		[Address(RVA = "0x1730238", Offset = "0x1730238", VA = "0x1730238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9EE4", Offset = "0xAB9EE4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600021A")]
		[Address(RVA = "0x1730244", Offset = "0x1730244", VA = "0x1730244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9EF4", Offset = "0xAB9EF4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public Vector3 FixedViewportEulerAnglesRotation
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x1730250", Offset = "0x1730250", VA = "0x1730250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9F04", Offset = "0xAB9F04")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x173025C", Offset = "0x173025C", VA = "0x173025C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9F14", Offset = "0xAB9F14")]
		private set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public int OverrideRenderTextureMSAA
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x1730268", Offset = "0x1730268", VA = "0x1730268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9F24", Offset = "0xAB9F24")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x1730270", Offset = "0x1730270", VA = "0x1730270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9F34", Offset = "0xAB9F34")]
		private set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public bool DisableAudio
	{
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x1730278", Offset = "0x1730278", VA = "0x1730278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9F44", Offset = "0xAB9F44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000220")]
		[Address(RVA = "0x1730280", Offset = "0x1730280", VA = "0x1730280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9F54", Offset = "0xAB9F54")]
		private set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public bool DisableParticles
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x173028C", Offset = "0x173028C", VA = "0x173028C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9F64", Offset = "0xAB9F64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x1730294", Offset = "0x1730294", VA = "0x1730294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9F74", Offset = "0xAB9F74")]
		private set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public float? EyeResolutionScale
	{
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x17302A0", Offset = "0x17302A0", VA = "0x17302A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9F84", Offset = "0xAB9F84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x17302A8", Offset = "0x17302A8", VA = "0x17302A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9F94", Offset = "0xAB9F94")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public float? OverlayResolutionScale
	{
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x17302B0", Offset = "0x17302B0", VA = "0x17302B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9FA4", Offset = "0xAB9FA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x17302B8", Offset = "0x17302B8", VA = "0x17302B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9FB4", Offset = "0xAB9FB4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public bool? FoveationEnabled
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x17302C0", Offset = "0x17302C0", VA = "0x17302C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9FC4", Offset = "0xAB9FC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x17302C8", Offset = "0x17302C8", VA = "0x17302C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9FD4", Offset = "0xAB9FD4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public int? FoveationLevel
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x17302D0", Offset = "0x17302D0", VA = "0x17302D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9FE4", Offset = "0xAB9FE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x17302D8", Offset = "0x17302D8", VA = "0x17302D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB9FF4", Offset = "0xAB9FF4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public bool? FoveationSubsampled
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x17302E0", Offset = "0x17302E0", VA = "0x17302E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA004", Offset = "0xABA004")]
		get
		{
			return null;
		}
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x17302E8", Offset = "0x17302E8", VA = "0x17302E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA014", Offset = "0xABA014")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public float FoveationArea
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x17302F0", Offset = "0x17302F0", VA = "0x17302F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA024", Offset = "0xABA024")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x17302F8", Offset = "0x17302F8", VA = "0x17302F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA034", Offset = "0xABA034")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public Vector2 FoveationGain
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x1730300", Offset = "0x1730300", VA = "0x1730300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA044", Offset = "0xABA044")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x1730308", Offset = "0x1730308", VA = "0x1730308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA054", Offset = "0xABA054")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public float FoveationMinimum
	{
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x1730310", Offset = "0x1730310", VA = "0x1730310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA064", Offset = "0xABA064")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x1730318", Offset = "0x1730318", VA = "0x1730318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA074", Offset = "0xABA074")]
		private set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public bool? TrackEyesEnabled
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x1730320", Offset = "0x1730320", VA = "0x1730320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA084", Offset = "0xABA084")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x1730328", Offset = "0x1730328", VA = "0x1730328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA094", Offset = "0xABA094")]
		private set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public bool? TrackPositionEnabled
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x1730330", Offset = "0x1730330", VA = "0x1730330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA0A4", Offset = "0xABA0A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x1730338", Offset = "0x1730338", VA = "0x1730338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA0B4", Offset = "0xABA0B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public bool? GazeReticleEnabled
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x1730340", Offset = "0x1730340", VA = "0x1730340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA0C4", Offset = "0xABA0C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x1730348", Offset = "0x1730348", VA = "0x1730348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA0D4", Offset = "0xABA0D4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public bool? DebugHudEnabled
	{
		[Token(Token = "0x6000239")]
		[Address(RVA = "0x1730350", Offset = "0x1730350", VA = "0x1730350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA0E4", Offset = "0xABA0E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x1730358", Offset = "0x1730358", VA = "0x1730358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA0F4", Offset = "0xABA0F4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public Vector3? StartPosition
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0x1730360", Offset = "0x1730360", VA = "0x1730360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA104", Offset = "0xABA104")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x1730370", Offset = "0x1730370", VA = "0x1730370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA114", Offset = "0xABA114")]
		private set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public Vector3? StartRotation
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x173037C", Offset = "0x173037C", VA = "0x173037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA124", Offset = "0xABA124")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x173038C", Offset = "0x173038C", VA = "0x173038C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA134", Offset = "0xABA134")]
		private set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public Vector3? AugmentPosition
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x1730398", Offset = "0x1730398", VA = "0x1730398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA144", Offset = "0xABA144")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x17303A8", Offset = "0x17303A8", VA = "0x17303A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA154", Offset = "0xABA154")]
		private set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public Vector3? AugmentRotation
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0x17303B4", Offset = "0x17303B4", VA = "0x17303B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA164", Offset = "0xABA164")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000242")]
		[Address(RVA = "0x17303C4", Offset = "0x17303C4", VA = "0x17303C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA174", Offset = "0xABA174")]
		private set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public Vector3? AugmentScale
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0x17303D0", Offset = "0x17303D0", VA = "0x17303D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA184", Offset = "0xABA184")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000244")]
		[Address(RVA = "0x17303E0", Offset = "0x17303E0", VA = "0x17303E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA194", Offset = "0xABA194")]
		private set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public bool ThermalEnabled
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0x17303EC", Offset = "0x17303EC", VA = "0x17303EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA1A4", Offset = "0xABA1A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000246")]
		[Address(RVA = "0x17303F4", Offset = "0x17303F4", VA = "0x17303F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA1B4", Offset = "0xABA1B4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public bool ThermalTouchTest
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0x1730400", Offset = "0x1730400", VA = "0x1730400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA1C4", Offset = "0xABA1C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000248")]
		[Address(RVA = "0x1730408", Offset = "0x1730408", VA = "0x1730408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA1D4", Offset = "0xABA1D4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public List<string> ThermalStatesDefault
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0x1730414", Offset = "0x1730414", VA = "0x1730414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA1E4", Offset = "0xABA1E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600024A")]
		[Address(RVA = "0x173041C", Offset = "0x173041C", VA = "0x173041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA1F4", Offset = "0xABA1F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public List<string> CpuState0
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0x1730424", Offset = "0x1730424", VA = "0x1730424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA204", Offset = "0xABA204")]
		get
		{
			return null;
		}
		[Token(Token = "0x600024C")]
		[Address(RVA = "0x173042C", Offset = "0x173042C", VA = "0x173042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA214", Offset = "0xABA214")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public List<string> CpuState1
	{
		[Token(Token = "0x600024D")]
		[Address(RVA = "0x1730434", Offset = "0x1730434", VA = "0x1730434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA224", Offset = "0xABA224")]
		get
		{
			return null;
		}
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x173043C", Offset = "0x173043C", VA = "0x173043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA234", Offset = "0xABA234")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public List<string> CpuState2
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x1730444", Offset = "0x1730444", VA = "0x1730444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA244", Offset = "0xABA244")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000250")]
		[Address(RVA = "0x173044C", Offset = "0x173044C", VA = "0x173044C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA254", Offset = "0xABA254")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public List<string> CpuState3
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x1730454", Offset = "0x1730454", VA = "0x1730454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA264", Offset = "0xABA264")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x173045C", Offset = "0x173045C", VA = "0x173045C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA274", Offset = "0xABA274")]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public List<string> CpuState4
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0x1730464", Offset = "0x1730464", VA = "0x1730464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA284", Offset = "0xABA284")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000254")]
		[Address(RVA = "0x173046C", Offset = "0x173046C", VA = "0x173046C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA294", Offset = "0xABA294")]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public List<string> GpuState0
	{
		[Token(Token = "0x6000255")]
		[Address(RVA = "0x1730474", Offset = "0x1730474", VA = "0x1730474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA2A4", Offset = "0xABA2A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x173047C", Offset = "0x173047C", VA = "0x173047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA2B4", Offset = "0xABA2B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public List<string> GpuState1
	{
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x1730484", Offset = "0x1730484", VA = "0x1730484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA2C4", Offset = "0xABA2C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000258")]
		[Address(RVA = "0x173048C", Offset = "0x173048C", VA = "0x173048C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA2D4", Offset = "0xABA2D4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public List<string> GpuState2
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x173049C", Offset = "0x173049C", VA = "0x173049C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA2E4", Offset = "0xABA2E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x17304A4", Offset = "0x17304A4", VA = "0x17304A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA2F4", Offset = "0xABA2F4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public List<string> GpuState3
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x17304B4", Offset = "0x17304B4", VA = "0x17304B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA304", Offset = "0xABA304")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x17304BC", Offset = "0x17304BC", VA = "0x17304BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA314", Offset = "0xABA314")]
		private set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public List<string> GpuState4
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x17304CC", Offset = "0x17304CC", VA = "0x17304CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA324", Offset = "0xABA324")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x17304D4", Offset = "0x17304D4", VA = "0x17304D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA334", Offset = "0xABA334")]
		private set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public List<string> SkinState0
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x17304E4", Offset = "0x17304E4", VA = "0x17304E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA344", Offset = "0xABA344")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x17304EC", Offset = "0x17304EC", VA = "0x17304EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA354", Offset = "0xABA354")]
		private set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public List<string> SkinState1
	{
		[Token(Token = "0x6000261")]
		[Address(RVA = "0x17304FC", Offset = "0x17304FC", VA = "0x17304FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA364", Offset = "0xABA364")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x1730504", Offset = "0x1730504", VA = "0x1730504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA374", Offset = "0xABA374")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public List<string> SkinState2
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x1730514", Offset = "0x1730514", VA = "0x1730514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA384", Offset = "0xABA384")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000264")]
		[Address(RVA = "0x173051C", Offset = "0x173051C", VA = "0x173051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA394", Offset = "0xABA394")]
		private set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public List<string> SkinState3
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x173052C", Offset = "0x173052C", VA = "0x173052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA3A4", Offset = "0xABA3A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x1730534", Offset = "0x1730534", VA = "0x1730534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA3B4", Offset = "0xABA3B4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public List<string> SkinState4
	{
		[Token(Token = "0x6000267")]
		[Address(RVA = "0x1730544", Offset = "0x1730544", VA = "0x1730544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA3C4", Offset = "0xABA3C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000268")]
		[Address(RVA = "0x173054C", Offset = "0x173054C", VA = "0x173054C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA3D4", Offset = "0xABA3D4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	private string ConfigFilePath
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x173055C", Offset = "0x173055C", VA = "0x173055C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x173014C", Offset = "0x173014C", VA = "0x173014C")]
	private SvrConfigOptions()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1730650", Offset = "0x1730650", VA = "0x1730650")]
	private void ParseConfigFile(string path)
	{
	}
}
[Token(Token = "0x2000045")]
public class SvrConfigSettings : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5190", Offset = "0xAB5190")]
	private sealed class <>c
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__2_0;

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x100DCC8", Offset = "0x100DCC8", VA = "0x100DCC8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x100DCD0", Offset = "0x100DCD0", VA = "0x100DCD0")]
		internal bool <Start>b__2_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB51A0", Offset = "0xAB51A0")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrConfigSettings <>4__this;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x100EB64", Offset = "0x100EB64", VA = "0x100EB64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0x100EBAC", Offset = "0x100EBAC", VA = "0x100EBAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x100DD3C", Offset = "0x100DD3C", VA = "0x100DD3C")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x100DD68", Offset = "0x100DD68", VA = "0x100DD68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x100DD6C", Offset = "0x100DD6C", VA = "0x100DD6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x100EB6C", Offset = "0x100EB6C", VA = "0x100EB6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform reticle;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1732DBC", Offset = "0x1732DBC", VA = "0x1732DBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1732DC0", Offset = "0x1732DC0", VA = "0x1732DC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA3E4", Offset = "0xABA3E4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1732E38", Offset = "0x1732E38", VA = "0x1732E38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x17330AC", Offset = "0x17330AC", VA = "0x17330AC")]
	private void FreezeAllAnimationsAtTime(float timeInSec)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x17331A8", Offset = "0x17331A8", VA = "0x17331A8")]
	private void DisableSvrInput()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1733274", Offset = "0x1733274", VA = "0x1733274")]
	private void SetSvrCameraView(Vector3 position, Vector3 eulerAnglesRotation)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x17333C4", Offset = "0x17333C4", VA = "0x17333C4")]
	private void SetSvrRenderTextureAntialiasing(int mode)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x17335B0", Offset = "0x17335B0", VA = "0x17335B0")]
	private void DisableAudio()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x173367C", Offset = "0x173367C", VA = "0x173367C")]
	private void SetFoveatedRendering(Vector2 gain, float area, float minimum)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x1733734", Offset = "0x1733734", VA = "0x1733734")]
	public SvrConfigSettings()
	{
	}
}
[Token(Token = "0x2000046")]
public class SvrController : MonoBehaviour, SvrManager.SvrEventListener
{
	[Token(Token = "0x200017B")]
	public enum svrControllerMessageType
	{
		[Token(Token = "0x40008B2")]
		kControllerMessageRecenter,
		[Token(Token = "0x40008B3")]
		kControllerMessageVibration
	}

	[Token(Token = "0x200017C")]
	public enum svrControllerQueryType
	{
		[Token(Token = "0x40008B5")]
		kControllerBatteryRemaining,
		[Token(Token = "0x40008B6")]
		kControllerControllerCaps
	}

	[Token(Token = "0x200017D")]
	public enum svrControllerConnectionState
	{
		[Token(Token = "0x40008B8")]
		kNotInitialized,
		[Token(Token = "0x40008B9")]
		kDisconnected,
		[Token(Token = "0x40008BA")]
		kConnected,
		[Token(Token = "0x40008BB")]
		kConnecting,
		[Token(Token = "0x40008BC")]
		kError
	}

	[Token(Token = "0x200017E")]
	public enum svrControllerTouch
	{
		[Token(Token = "0x40008BE")]
		None = 0,
		[Token(Token = "0x40008BF")]
		One = 1,
		[Token(Token = "0x40008C0")]
		Two = 2,
		[Token(Token = "0x40008C1")]
		Three = 4,
		[Token(Token = "0x40008C2")]
		Four = 8,
		[Token(Token = "0x40008C3")]
		PrimaryThumbstick = 16,
		[Token(Token = "0x40008C4")]
		SecondaryThumstick = 32,
		[Token(Token = "0x40008C5")]
		Any = -1
	}

	[Token(Token = "0x200017F")]
	public enum svrControllerAxis1D
	{
		[Token(Token = "0x40008C7")]
		PrimaryIndexTrigger,
		[Token(Token = "0x40008C8")]
		SecondaryIndexTrigger,
		[Token(Token = "0x40008C9")]
		PrimaryHandTrigger,
		[Token(Token = "0x40008CA")]
		SecondaryHandTrigger
	}

	[Token(Token = "0x2000180")]
	public enum svrControllerAxis2D
	{
		[Token(Token = "0x40008CC")]
		PrimaryThumbstick,
		[Token(Token = "0x40008CD")]
		SecondaryThumbstick
	}

	[Token(Token = "0x2000181")]
	public enum svrControllerButton
	{
		[Token(Token = "0x40008CF")]
		None = 0,
		[Token(Token = "0x40008D0")]
		One = 1,
		[Token(Token = "0x40008D1")]
		Two = 2,
		[Token(Token = "0x40008D2")]
		Three = 4,
		[Token(Token = "0x40008D3")]
		Four = 8,
		[Token(Token = "0x40008D4")]
		DpadUp = 16,
		[Token(Token = "0x40008D5")]
		DpadDown = 32,
		[Token(Token = "0x40008D6")]
		DpadLeft = 64,
		[Token(Token = "0x40008D7")]
		DpadRight = 128,
		[Token(Token = "0x40008D8")]
		Start = 256,
		[Token(Token = "0x40008D9")]
		Back = 512,
		[Token(Token = "0x40008DA")]
		PrimaryShoulder = 4096,
		[Token(Token = "0x40008DB")]
		PrimaryIndexTrigger = 8192,
		[Token(Token = "0x40008DC")]
		PrimaryHandTrigger = 16384,
		[Token(Token = "0x40008DD")]
		PrimaryThumbstick = 32768,
		[Token(Token = "0x40008DE")]
		PrimaryThumbstickUp = 65536,
		[Token(Token = "0x40008DF")]
		PrimaryThumbstickDown = 131072,
		[Token(Token = "0x40008E0")]
		PrimaryThumbstickLeft = 262144,
		[Token(Token = "0x40008E1")]
		PrimaryThumbstickRight = 524288,
		[Token(Token = "0x40008E2")]
		SecondaryShoulder = 1048576,
		[Token(Token = "0x40008E3")]
		SecondaryIndexTrigger = 2097152,
		[Token(Token = "0x40008E4")]
		SecondaryHandTrigger = 4194304,
		[Token(Token = "0x40008E5")]
		SecondaryThumbstick = 8388608,
		[Token(Token = "0x40008E6")]
		SecondaryThumbstickUp = 16777216,
		[Token(Token = "0x40008E7")]
		SecondaryThumbstickDown = 33554432,
		[Token(Token = "0x40008E8")]
		SecondaryThumbstickLeft = 67108864,
		[Token(Token = "0x40008E9")]
		SecondaryThumbstickRight = 134217728,
		[Token(Token = "0x40008EA")]
		Up = 268435456,
		[Token(Token = "0x40008EB")]
		Down = 536870912,
		[Token(Token = "0x40008EC")]
		Left = 1073741824,
		[Token(Token = "0x40008ED")]
		Right = int.MinValue,
		[Token(Token = "0x40008EE")]
		Any = -1
	}

	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB51B0", Offset = "0xAB51B0")]
	private sealed class <OnFrameEnd>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrController <>4__this;

		[Token(Token = "0x1700020F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x100ECFC", Offset = "0x100ECFC", VA = "0x100ECFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x100ED44", Offset = "0x100ED44", VA = "0x100ED44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x100EBB4", Offset = "0x100EBB4", VA = "0x100EBB4")]
		[DebuggerHidden]
		public <OnFrameEnd>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x100EBE0", Offset = "0x100EBE0", VA = "0x100EBE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x100EBE4", Offset = "0x100EBE4", VA = "0x100EBE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x100ED04", Offset = "0x100ED04", VA = "0x100ED04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string controllerParams;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int handle;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int space;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string manufacturer;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string identifier;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SvrControllerState currentState;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int previousButtonState;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int previousTouchState;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine frameDelimiter;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x1700004C")]
	public SvrControllerState State
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0x1733CD8", Offset = "0x1733CD8", VA = "0x1733CD8")]
		get
		{
			return default(SvrControllerState);
		}
	}

	[Token(Token = "0x1700004D")]
	public svrControllerConnectionState ConnectionState
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0x1733CE8", Offset = "0x1733CE8", VA = "0x1733CE8")]
		get
		{
			return default(svrControllerConnectionState);
		}
	}

	[Token(Token = "0x1700004E")]
	public Quaternion Orientation
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0x1733F18", Offset = "0x1733F18", VA = "0x1733F18")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700004F")]
	public Vector3 Position
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0x1733FA0", Offset = "0x1733FA0", VA = "0x1733FA0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000050")]
	public long Timestamp
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0x1734020", Offset = "0x1734020", VA = "0x1734020")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000051")]
	public int BatteryLevel
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0x1734104", Offset = "0x1734104", VA = "0x1734104")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000052")]
	public SvrControllerCaps GetCapability
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0x1733AF0", Offset = "0x1733AF0", VA = "0x1733AF0")]
		get
		{
			return default(SvrControllerCaps);
		}
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x173373C", Offset = "0x173373C", VA = "0x173373C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x1733824", Offset = "0x1733824", VA = "0x1733824", Slot = "4")]
	public void OnSvrEvent(SvrManager.SvrEvent ev)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x1733C14", Offset = "0x1733C14", VA = "0x1733C14")]
	private void OnApplicationPause(bool isPaused)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x1733CF0", Offset = "0x1733CF0", VA = "0x1733CF0")]
	public void SendMessage(svrControllerMessageType what, int arg1, int arg2)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x1733D98", Offset = "0x1733D98", VA = "0x1733D98")]
	public void Recenter()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x1733E24", Offset = "0x1733E24", VA = "0x1733E24")]
	public void Vibrate(int arg1, int arg2)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1733EC0", Offset = "0x1733EC0", VA = "0x1733EC0")]
	public bool GetButton(svrControllerButton buttonId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1733ED0", Offset = "0x1733ED0", VA = "0x1733ED0")]
	public bool GetButtonUp(svrControllerButton buttonId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1733EF4", Offset = "0x1733EF4", VA = "0x1733EF4")]
	public bool GetButtonDown(svrControllerButton buttonId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1734028", Offset = "0x1734028", VA = "0x1734028")]
	public Vector2 GetAxis2D(svrControllerAxis2D axi2d)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1734070", Offset = "0x1734070", VA = "0x1734070")]
	public float GetAxis1D(svrControllerAxis1D axis1d)
	{
		return default(float);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x17340AC", Offset = "0x17340AC", VA = "0x17340AC")]
	public bool GetTouch(svrControllerTouch touch)
	{
		return default(bool);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x17340BC", Offset = "0x17340BC", VA = "0x17340BC")]
	public bool GetTouchDown(svrControllerTouch touch)
	{
		return default(bool);
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x17340E0", Offset = "0x17340E0", VA = "0x17340E0")]
	public bool GetTouchUp(svrControllerTouch touch)
	{
		return default(bool);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x17341F4", Offset = "0x17341F4", VA = "0x17341F4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x17342A8", Offset = "0x17342A8", VA = "0x17342A8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1734230", Offset = "0x1734230", VA = "0x1734230")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA444", Offset = "0xABA444")]
	private IEnumerator OnFrameEnd()
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x17342B4", Offset = "0x17342B4", VA = "0x17342B4")]
	public object Query(svrControllerQueryType what)
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1734344", Offset = "0x1734344", VA = "0x1734344")]
	public SvrController()
	{
	}
}
[Token(Token = "0x2000047")]
public struct SvrControllerCaps
{
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string deviceManufacturer;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string deviceIdentifier;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint caps;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint activeButtons;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint active2DAnalogs;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public uint active1DAnalogs;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint activeTouchButtons;
}
[Token(Token = "0x2000048")]
public struct SvrControllerState
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Quaternion rotation;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 position;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 gyro;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 accelerometer;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public long timestamp;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int buttonState;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2[] analog2D;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] analog1D;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int isTouching;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int connectionState;
}
[Token(Token = "0x2000049")]
public class SvrDebugHud : MonoBehaviour, SvrManager.SvrEventListener
{
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB51C0", Offset = "0xAB51C0")]
	private sealed class <CalculateFramesPerSecond>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrDebugHud <>4__this;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <lastFrameCount>5__2;

		[Token(Token = "0x17000211")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x100EE4C", Offset = "0x100EE4C", VA = "0x100EE4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x100EE94", Offset = "0x100EE94", VA = "0x100EE94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x100ED4C", Offset = "0x100ED4C", VA = "0x100ED4C")]
		[DebuggerHidden]
		public <CalculateFramesPerSecond>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x100ED78", Offset = "0x100ED78", VA = "0x100ED78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x100ED7C", Offset = "0x100ED7C", VA = "0x100ED7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x100EE54", Offset = "0x100EE54", VA = "0x100EE54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB51D0", Offset = "0xAB51D0")]
	private sealed class <DisplayEvents>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrDebugHud <>4__this;

		[Token(Token = "0x17000213")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x100F0C8", Offset = "0x100F0C8", VA = "0x100F0C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x100F110", Offset = "0x100F110", VA = "0x100F110", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x100EE9C", Offset = "0x100EE9C", VA = "0x100EE9C")]
		[DebuggerHidden]
		public <DisplayEvents>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x100EEC8", Offset = "0x100EEC8", VA = "0x100EEC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x100EECC", Offset = "0x100EECC", VA = "0x100EECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x100F0D0", Offset = "0x100F0D0", VA = "0x100F0D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB66F4", Offset = "0xAB66F4")]
	private static SvrDebugHud <Instance>k__BackingField;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SvrManager svrManager;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EventDisplay;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PositionWarning;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject FramesPerSecond;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Orientation;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Position;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Eyes;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Text _eventText;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Text _warningText;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Text _fpsText;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Text _orientationText;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Text _positionText;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Text _eyesText;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _framesPerSecond;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<SvrManager.svrEventType> events;

	[Token(Token = "0x17000053")]
	public static SvrDebugHud Instance
	{
		[Token(Token = "0x6000291")]
		[Address(RVA = "0x17343E0", Offset = "0x17343E0", VA = "0x17343E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA4A4", Offset = "0xABA4A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000292")]
		[Address(RVA = "0x173442C", Offset = "0x173442C", VA = "0x173442C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA4B4", Offset = "0xABA4B4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1734480", Offset = "0x1734480", VA = "0x1734480")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x17345DC", Offset = "0x17345DC", VA = "0x17345DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1734924", Offset = "0x1734924", VA = "0x1734924")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1734834", Offset = "0x1734834", VA = "0x1734834")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA4C4", Offset = "0xABA4C4")]
	private IEnumerator CalculateFramesPerSecond()
	{
		return null;
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x17348AC", Offset = "0x17348AC", VA = "0x17348AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA524", Offset = "0xABA524")]
	private IEnumerator DisplayEvents()
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1735140", Offset = "0x1735140", VA = "0x1735140", Slot = "4")]
	public void OnSvrEvent(SvrManager.SvrEvent ev)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x17351E4", Offset = "0x17351E4", VA = "0x17351E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x17351EC", Offset = "0x17351EC", VA = "0x17351EC")]
	public SvrDebugHud()
	{
	}
}
[Token(Token = "0x200004A")]
public class SvrDebugOverrideSettings : MonoBehaviour
{
	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1735270", Offset = "0x1735270", VA = "0x1735270")]
	private void Update()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1736328", Offset = "0x1736328", VA = "0x1736328")]
	public SvrDebugOverrideSettings()
	{
	}
}
[Token(Token = "0x200004B")]
public class SvrDebugThermalEvents : MonoBehaviour, SvrManager.SvrEventListener
{
	[Token(Token = "0x2000185")]
	private enum svrThermalLevel
	{
		[Token(Token = "0x40008FA")]
		kSafe,
		[Token(Token = "0x40008FB")]
		kLevel1,
		[Token(Token = "0x40008FC")]
		kLevel2,
		[Token(Token = "0x40008FD")]
		kLevel3,
		[Token(Token = "0x40008FE")]
		kCritical,
		[Token(Token = "0x40008FF")]
		kNumThermalLevels
	}

	[Token(Token = "0x2000186")]
	public class BaseFsa
	{
		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string>[] actions;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _state;

		[Token(Token = "0x17000215")]
		public int state
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x100F118", Offset = "0x100F118", VA = "0x100F118")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x100F120", Offset = "0x100F120", VA = "0x100F120")]
			set
			{
			}
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x100F14C", Offset = "0x100F14C", VA = "0x100F14C")]
		public void OnEnter(int state)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x100F148", Offset = "0x100F148", VA = "0x100F148")]
		public void OnExit(int state)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x100F188", Offset = "0x100F188", VA = "0x100F188")]
		public void Apply(List<string> actions)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x1010444", Offset = "0x1010444", VA = "0x1010444")]
		public BaseFsa()
		{
		}
	}

	[Token(Token = "0x2000187")]
	public class CpuFsa : BaseFsa
	{
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x10104AC", Offset = "0x10104AC", VA = "0x10104AC")]
		public CpuFsa()
		{
		}
	}

	[Token(Token = "0x2000188")]
	public class GpuFsa : BaseFsa
	{
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x10104B0", Offset = "0x10104B0", VA = "0x10104B0")]
		public GpuFsa()
		{
		}
	}

	[Token(Token = "0x2000189")]
	public class SkinFsa : BaseFsa
	{
		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x10104B4", Offset = "0x10104B4", VA = "0x10104B4")]
		public SkinFsa()
		{
		}
	}

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CpuFsa cpu;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GpuFsa gpu;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SkinFsa skin;

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1736330", Offset = "0x1736330", VA = "0x1736330")]
	private void Start()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x17368DC", Offset = "0x17368DC", VA = "0x17368DC", Slot = "4")]
	public void OnSvrEvent(SvrManager.SvrEvent ev)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x173702C", Offset = "0x173702C", VA = "0x173702C")]
	public void Update()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1736994", Offset = "0x1736994", VA = "0x1736994")]
	private void UpdateThermalEvent(int zone, int level)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1736B54", Offset = "0x1736B54", VA = "0x1736B54")]
	private void SetThermalEvent(List<string> states)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x17370E8", Offset = "0x17370E8", VA = "0x17370E8")]
	public SvrDebugThermalEvents()
	{
	}
}
[Token(Token = "0x200004C")]
public class SvrEye : MonoBehaviour, IComparable<SvrEye>
{
	[Token(Token = "0x200018A")]
	public enum eType
	{
		[Token(Token = "0x4000903")]
		RenderTexture,
		[Token(Token = "0x4000904")]
		StandardTexture,
		[Token(Token = "0x4000905")]
		EglTexture
	}

	[Token(Token = "0x200018B")]
	public delegate void OnPostRenderCallback(int sideMask, int layerMask);

	[Token(Token = "0x200018C")]
	public delegate void OnPreRenderCallback(int sideMask, int textureId, int previousId);

	[Token(Token = "0x200018D")]
	public delegate void OnOccludeRenderCallback(Matrix4x4 proj, Matrix4x4 view);

	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB51E0", Offset = "0xAB51E0")]
	private sealed class <>c__DisplayClass87_0
	{
		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int prevTextureIndex;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SvrEye <>4__this;

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x10104B8", Offset = "0x10104B8", VA = "0x10104B8")]
		public <>c__DisplayClass87_0()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x10104C0", Offset = "0x10104C0", VA = "0x10104C0")]
		internal bool <RecreateBuffersDeferred>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200018F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB51F0", Offset = "0xAB51F0")]
	private sealed class <RecreateBuffersDeferred>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrEye <>4__this;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000216")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x1010CA8", Offset = "0x1010CA8", VA = "0x1010CA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x1010CF0", Offset = "0x1010CF0", VA = "0x1010CF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x10104E8", Offset = "0x10104E8", VA = "0x10104E8")]
		[DebuggerHidden]
		public <RecreateBuffersDeferred>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x1010514", Offset = "0x1010514", VA = "0x1010514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x1010518", Offset = "0x1010518", VA = "0x1010518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x1010CB0", Offset = "0x1010CB0", VA = "0x1010CB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SvrEye> Instances;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OnPostRenderCallback OnPostRenderListener;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OnPreRenderCallback OnPreRenderListener;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OnOccludeRenderCallback OnOccludeRenderListener;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6704", Offset = "0xAB6704")]
	public int layerDepth;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB673C", Offset = "0xAB673C")]
	public Camera imageCamera;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6774", Offset = "0xAB6774")]
	public eType imageType;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB67AC", Offset = "0xAB67AC")]
	public Texture imageTexture;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB67E4", Offset = "0xAB67E4")]
	public Transform imageTransform;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB681C", Offset = "0xAB681C")]
	public Vector4 clipLowerLeft;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector4 clipUpperLeft;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector4 clipUpperRight;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 clipLowerRight;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6854", Offset = "0xAB6854")]
	public Vector2 uvLowerLeft;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector2 uvUpperLeft;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector2 uvUpperRight;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector2 uvLowerRight;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB688C", Offset = "0xAB688C")]
	public SvrPlugin.EyeMask side;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float fovMargin;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private RenderTextureFormat format;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector2 resolution;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float resolutionScaleFactor;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int antiAliasing;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int depth;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SvrManager.SvrSettings.eFrustumType frustumType;

	[Token(Token = "0x40001F7")]
	private const int bufferCount = 3;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private RenderTexture[] eyeTextures;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int[] eyeTextureIds;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int currentTextureIndex;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Camera[] mainCameras;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool dirty;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine recreateBuffersCoroutine;

	[Token(Token = "0x17000054")]
	public float FovMargin
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x17371E8", Offset = "0x17371E8", VA = "0x17371E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x17371F0", Offset = "0x17371F0", VA = "0x17371F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public SvrManager.SvrSettings.eFrustumType FrustumType
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x17371F8", Offset = "0x17371F8", VA = "0x17371F8")]
		get
		{
			return default(SvrManager.SvrSettings.eFrustumType);
		}
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x1737200", Offset = "0x1737200", VA = "0x1737200")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public eType ImageType
	{
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x17378B8", Offset = "0x17378B8", VA = "0x17378B8")]
		get
		{
			return default(eType);
		}
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x17378C0", Offset = "0x17378C0", VA = "0x17378C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public SvrPlugin.EyeMask Side
	{
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x17378C8", Offset = "0x17378C8", VA = "0x17378C8")]
		get
		{
			return default(SvrPlugin.EyeMask);
		}
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x17378D0", Offset = "0x17378D0", VA = "0x17378D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public RenderTextureFormat Format
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x17378D8", Offset = "0x17378D8", VA = "0x17378D8")]
		get
		{
			return default(RenderTextureFormat);
		}
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x17378E0", Offset = "0x17378E0", VA = "0x17378E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public int AntiAliasing
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x173793C", Offset = "0x173793C", VA = "0x173793C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x1737944", Offset = "0x1737944", VA = "0x1737944")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public int Depth
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x1737974", Offset = "0x1737974", VA = "0x1737974")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x173797C", Offset = "0x173797C", VA = "0x173797C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public Vector2 Resolution
	{
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x17379AC", Offset = "0x17379AC", VA = "0x17379AC")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x17379B4", Offset = "0x17379B4", VA = "0x17379B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public float ResolutionScaleFactor
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x1737A30", Offset = "0x1737A30", VA = "0x1737A30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x1737A38", Offset = "0x1737A38", VA = "0x1737A38")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public int TextureId
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x1737A98", Offset = "0x1737A98", VA = "0x1737A98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x1737AD8", Offset = "0x1737AD8", VA = "0x1737AD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public int PreviousId
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x1737B18", Offset = "0x1737B18", VA = "0x1737B18")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005F")]
	public Texture TexturePtr
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x1737B7C", Offset = "0x1737B7C", VA = "0x1737B7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x17371C8", Offset = "0x17371C8", VA = "0x17371C8", Slot = "4")]
	public int CompareTo(SvrEye that)
	{
		return default(int);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1737208", Offset = "0x1737208", VA = "0x1737208")]
	public void SetImage(Texture2D texture)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1737910", Offset = "0x1737910", VA = "0x1737910")]
	private void SetDirty(bool value)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1737C28", Offset = "0x1737C28", VA = "0x1737C28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1737E4C", Offset = "0x1737E4C", VA = "0x1737E4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1737CC4", Offset = "0x1737CC4", VA = "0x1737CC4")]
	private void AcquireComponents()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1737ED8", Offset = "0x1737ED8", VA = "0x1737ED8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1737EDC", Offset = "0x1737EDC", VA = "0x1737EDC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1738220", Offset = "0x1738220", VA = "0x1738220")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1737230", Offset = "0x1737230", VA = "0x1737230")]
	private void InitializeBuffers()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1738244", Offset = "0x1738244", VA = "0x1738244")]
	private void InitializeCameras()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1737DB4", Offset = "0x1737DB4", VA = "0x1737DB4")]
	private void InitializeCoords()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x1737EE0", Offset = "0x1737EE0", VA = "0x1737EE0")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1738654", Offset = "0x1738654", VA = "0x1738654")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x17387E4", Offset = "0x17387E4", VA = "0x17387E4")]
	private void SwapBuffers()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x173891C", Offset = "0x173891C", VA = "0x173891C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x1738974", Offset = "0x1738974", VA = "0x1738974")]
	private void RecreateBuffersIfDirty()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x17389EC", Offset = "0x17389EC", VA = "0x17389EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA584", Offset = "0xABA584")]
	private IEnumerator RecreateBuffersDeferred()
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x1738A64", Offset = "0x1738A64", VA = "0x1738A64")]
	public SvrEye()
	{
	}
}
[Token(Token = "0x200004D")]
public class SvrInput : MonoBehaviour
{
	[Token(Token = "0x2000190")]
	public delegate void OnRecenterCallback();

	[Token(Token = "0x2000191")]
	public delegate IEnumerator OnBackCallback();

	[Token(Token = "0x2000192")]
	public enum eInputStyle
	{
		[Token(Token = "0x400090D")]
		Press,
		[Token(Token = "0x400090E")]
		Tap,
		[Token(Token = "0x400090F")]
		Hold,
		[Token(Token = "0x4000910")]
		Release,
		[Token(Token = "0x4000911")]
		None
	}

	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5200", Offset = "0xAB5200")]
	private sealed class <HandleQuit>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrInput <>4__this;

		[Token(Token = "0x17000218")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x101193C", Offset = "0x101193C", VA = "0x101193C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x1011984", Offset = "0x1011984", VA = "0x1011984", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x10117D0", Offset = "0x10117D0", VA = "0x10117D0")]
		[DebuggerHidden]
		public <HandleQuit>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x10117FC", Offset = "0x10117FC", VA = "0x10117FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x1011800", Offset = "0x1011800", VA = "0x1011800", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x1011944", Offset = "0x1011944", VA = "0x1011944", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SvrManager svrManager;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SvrController PrimaryController;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SvrController SecondaryController;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB68C4", Offset = "0xAB68C4")]
	private static SvrInput <Instance>k__BackingField;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OnRecenterCallback OnRecenterListener;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OnBackCallback OnBackListener;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB68D4", Offset = "0xAB68D4")]
	private Coroutine <HandleBack>k__BackingField;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB68E4", Offset = "0xAB68E4")]
	public eInputStyle backInputType;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float backHoldTimer;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB691C", Offset = "0xAB691C")]
	public eInputStyle recenterInputType;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float recenterHoldTimer;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6954", Offset = "0xAB6954")]
	public float ButtonHoldDuration;

	[Token(Token = "0x17000060")]
	public static SvrInput Instance
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x1738C94", Offset = "0x1738C94", VA = "0x1738C94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA5E4", Offset = "0xABA5E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x1738CE0", Offset = "0x1738CE0", VA = "0x1738CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA5F4", Offset = "0xABA5F4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public static SvrController Controller
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x1738D34", Offset = "0x1738D34", VA = "0x1738D34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000062")]
	public Coroutine HandleBack
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x1738D8C", Offset = "0x1738D8C", VA = "0x1738D8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA604", Offset = "0xABA604")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x1738D94", Offset = "0x1738D94", VA = "0x1738D94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA614", Offset = "0xABA614")]
		set
		{
		}
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1738D9C", Offset = "0x1738D9C", VA = "0x1738D9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1738F08", Offset = "0x1738F08", VA = "0x1738F08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA624", Offset = "0xABA624")]
	public IEnumerator HandleQuit()
	{
		return null;
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1738F80", Offset = "0x1738F80", VA = "0x1738F80")]
	public void HandleRecenter()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1739064", Offset = "0x1739064", VA = "0x1739064")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1739360", Offset = "0x1739360", VA = "0x1739360")]
	public bool CheckButton(bool buttonValue, eInputStyle buttonInputType, ref float buttonHoldTimer)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x173953C", Offset = "0x173953C", VA = "0x173953C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1739654", Offset = "0x1739654", VA = "0x1739654")]
	public SvrInput()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x173966C", Offset = "0x173966C", VA = "0x173966C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA684", Offset = "0xABA684")]
	private bool <HandleQuit>b__24_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x200004E")]
public class SvrManager : MonoBehaviour
{
	[Token(Token = "0x2000194")]
	public class EnumFlagsAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x1012BB8", Offset = "0x1012BB8", VA = "0x1012BB8")]
		public EnumFlagsAttribute()
		{
		}
	}

	[Token(Token = "0x2000195")]
	public enum svrEventType
	{
		[Token(Token = "0x4000916")]
		kEventNone,
		[Token(Token = "0x4000917")]
		kEventSdkServiceStarting,
		[Token(Token = "0x4000918")]
		kEventSdkServiceStarted,
		[Token(Token = "0x4000919")]
		kEventSdkServiceStopped,
		[Token(Token = "0x400091A")]
		kEventControllerConnecting,
		[Token(Token = "0x400091B")]
		kEventControllerConnected,
		[Token(Token = "0x400091C")]
		kEventControllerDisconnected,
		[Token(Token = "0x400091D")]
		kEventThermal,
		[Token(Token = "0x400091E")]
		kEventVrModeStarted,
		[Token(Token = "0x400091F")]
		kEventVrModeStopping,
		[Token(Token = "0x4000920")]
		kEventVrModeStopped,
		[Token(Token = "0x4000921")]
		kEventSensorError,
		[Token(Token = "0x4000922")]
		kEventMagnometerUncalibrated,
		[Token(Token = "0x4000923")]
		kEventBoundarySystemCollision,
		[Token(Token = "0x4000924")]
		kEvent6dofRelocation,
		[Token(Token = "0x4000925")]
		kEvent6dofWarningFeatureCount,
		[Token(Token = "0x4000926")]
		kEvent6dofWarningLowLight,
		[Token(Token = "0x4000927")]
		kEvent6dofWarningBrightLight,
		[Token(Token = "0x4000928")]
		kEvent6dofWarningCameraCalibration
	}

	[Serializable]
	[Token(Token = "0x2000196")]
	public class SvrSettings
	{
		[Token(Token = "0x2000274")]
		public enum eAntiAliasing
		{
			[Token(Token = "0x4000C69")]
			k1 = 1,
			[Token(Token = "0x4000C6A")]
			k2 = 2,
			[Token(Token = "0x4000C6B")]
			k4 = 4
		}

		[Token(Token = "0x2000275")]
		public enum eDepth
		{
			[Token(Token = "0x4000C6D")]
			k16 = 16,
			[Token(Token = "0x4000C6E")]
			k24 = 24
		}

		[Token(Token = "0x2000276")]
		public enum eChromaticAberrationCorrection
		{
			[Token(Token = "0x4000C70")]
			kDisable,
			[Token(Token = "0x4000C71")]
			kEnable
		}

		[Token(Token = "0x2000277")]
		public enum eVSyncCount
		{
			[Token(Token = "0x4000C73")]
			k1 = 1,
			[Token(Token = "0x4000C74")]
			k2
		}

		[Token(Token = "0x2000278")]
		public enum eMasterTextureLimit
		{
			[Token(Token = "0x4000C76")]
			k0,
			[Token(Token = "0x4000C77")]
			k1,
			[Token(Token = "0x4000C78")]
			k2,
			[Token(Token = "0x4000C79")]
			k3,
			[Token(Token = "0x4000C7A")]
			k4
		}

		[Token(Token = "0x2000279")]
		public enum ePerfLevel
		{
			[Token(Token = "0x4000C7C")]
			Minimum = 1,
			[Token(Token = "0x4000C7D")]
			Medium,
			[Token(Token = "0x4000C7E")]
			Maximum
		}

		[Token(Token = "0x200027A")]
		[Flags]
		public enum eOptionFlags
		{
			[Token(Token = "0x4000C80")]
			ProtectedContent = 1,
			[Token(Token = "0x4000C81")]
			MotionAwareFrames = 2,
			[Token(Token = "0x4000C82")]
			FoveationSubsampled = 4,
			[Token(Token = "0x4000C83")]
			EnableCameraLayer = 8,
			[Token(Token = "0x4000C84")]
			Enable3drOcclusion = 0x10
		}

		[Token(Token = "0x200027B")]
		public enum eFoveationLevel
		{
			[Token(Token = "0x4000C86")]
			None = -1,
			[Token(Token = "0x4000C87")]
			Low,
			[Token(Token = "0x4000C88")]
			Med,
			[Token(Token = "0x4000C89")]
			High
		}

		[Token(Token = "0x200027C")]
		public enum eFrustumType
		{
			[Token(Token = "0x4000C8B")]
			Camera,
			[Token(Token = "0x4000C8C")]
			Device
		}

		[Token(Token = "0x200027D")]
		public enum eEyeBufferType
		{
			[Token(Token = "0x4000C8E")]
			StereoSeperate = 1
		}

		[Token(Token = "0x200027E")]
		public enum eCameraPassThruVideo
		{
			[Token(Token = "0x4000C90")]
			Disabled,
			[Token(Token = "0x4000C91")]
			Enabled
		}

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8D40", Offset = "0xAB8D40")]
		public bool poseStatusFade;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8D78", Offset = "0xAB8D78")]
		public bool trackEyes;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8DB0", Offset = "0xAB8DB0")]
		public bool trackPosition;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8DE8", Offset = "0xAB8DE8")]
		public float trackPositionScale;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8E20", Offset = "0xAB8E20")]
		public float headHeight;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8E58", Offset = "0xAB8E58")]
		public float headDepth;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8E90", Offset = "0xAB8E90")]
		public float interPupilDistance;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8EC8", Offset = "0xAB8EC8")]
		public float eyeFovMargin;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8F00", Offset = "0xAB8F00")]
		public float eyeResolutionScaleFactor;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8F38", Offset = "0xAB8F38")]
		public eDepth eyeDepth;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8F70", Offset = "0xAB8F70")]
		public eAntiAliasing eyeAntiAliasing;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8FA8", Offset = "0xAB8FA8")]
		public float overlayResolutionScaleFactor;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB8FE0", Offset = "0xAB8FE0")]
		public eDepth overlayDepth;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB9018", Offset = "0xAB9018")]
		public eAntiAliasing overlayAntiAliasing;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB9050", Offset = "0xAB9050")]
		public eVSyncCount vSyncCount;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB9088", Offset = "0xAB9088")]
		public eChromaticAberrationCorrection chromaticAberationCorrection;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB90C0", Offset = "0xAB90C0")]
		public eMasterTextureLimit masterTextureLimit;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB90F8", Offset = "0xAB90F8")]
		public ePerfLevel cpuPerfLevel;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB9130", Offset = "0xAB9130")]
		public ePerfLevel gpuPerfLevel;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB9168", Offset = "0xAB9168")]
		[EnumFlags]
		public eOptionFlags optionFlags;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB91B4", Offset = "0xAB91B4")]
		public eFoveationLevel foveationLevel;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB91EC", Offset = "0xAB91EC")]
		public Vector2 foveationGain;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB9224", Offset = "0xAB9224")]
		public float foveationArea;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB925C", Offset = "0xAB925C")]
		public float foveationMinimum;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB9294", Offset = "0xAB9294")]
		public eFrustumType frustumType;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB92CC", Offset = "0xAB92CC")]
		public eEyeBufferType displayType;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB9304", Offset = "0xAB9304")]
		public eCameraPassThruVideo cameraPassThruVideo;

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x1012C0C", Offset = "0x1012C0C", VA = "0x1012C0C")]
		public SvrSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000197")]
	public class SvrStatus
	{
		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB933C", Offset = "0xAB933C")]
		public bool initialized;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB9374", Offset = "0xAB9374")]
		public bool running;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB93AC", Offset = "0xAB93AC")]
		public int pose;

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x1012C6C", Offset = "0x1012C6C", VA = "0x1012C6C")]
		public SvrStatus()
		{
		}
	}

	[Token(Token = "0x2000198")]
	public enum eFadeState
	{
		[Token(Token = "0x4000948")]
		FadeIn,
		[Token(Token = "0x4000949")]
		FadeOut
	}

	[Token(Token = "0x2000199")]
	public delegate void OnEventSvrInitedOk();

	[Token(Token = "0x200019A")]
	public interface SvrEventListener
	{
		[Token(Token = "0x6000D21")]
		void OnSvrEvent(SvrEvent ev);
	}

	[Token(Token = "0x200019B")]
	public enum svrThermalLevel
	{
		[Token(Token = "0x400094B")]
		kSafe,
		[Token(Token = "0x400094C")]
		kLevel1,
		[Token(Token = "0x400094D")]
		kLevel2,
		[Token(Token = "0x400094E")]
		kLevel3,
		[Token(Token = "0x400094F")]
		kCritical,
		[Token(Token = "0x4000950")]
		kNumThermalLevels
	}

	[Token(Token = "0x200019C")]
	public enum svrThermalZone
	{
		[Token(Token = "0x4000952")]
		kCpu,
		[Token(Token = "0x4000953")]
		kGpu,
		[Token(Token = "0x4000954")]
		kSkin,
		[Token(Token = "0x4000955")]
		kNumThermalZones
	}

	[Token(Token = "0x200019D")]
	public struct svrEventData_Thermal
	{
		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public svrThermalZone zone;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public svrThermalLevel level;
	}

	[StructLayout(2)]
	[Token(Token = "0x200019E")]
	public struct svrEventData
	{
		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public svrEventData_Thermal thermal;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long data;
	}

	[Token(Token = "0x200019F")]
	public struct SvrEvent
	{
		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public svrEventType eventType;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint deviceId;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventTimeStamp;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public svrEventData eventData;
	}

	[Token(Token = "0x20001A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5210", Offset = "0xAB5210")]
	private sealed class <Start>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrManager <>4__this;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <recenterTimeout>5__2;

		[Token(Token = "0x1700021A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x1012994", Offset = "0x1012994", VA = "0x1012994", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x10129DC", Offset = "0x10129DC", VA = "0x10129DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1012404", Offset = "0x1012404", VA = "0x1012404")]
		[DebuggerHidden]
		public <Start>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x1012430", Offset = "0x1012430", VA = "0x1012430", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x1012434", Offset = "0x1012434", VA = "0x1012434", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x101299C", Offset = "0x101299C", VA = "0x101299C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5220", Offset = "0xAB5220")]
	private sealed class <Initialize>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrManager <>4__this;

		[Token(Token = "0x1700021C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x1012128", Offset = "0x1012128", VA = "0x1012128", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x1012170", Offset = "0x1012170", VA = "0x1012170", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x1011E44", Offset = "0x1011E44", VA = "0x1011E44")]
		[DebuggerHidden]
		public <Initialize>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x1011E70", Offset = "0x1011E70", VA = "0x1011E70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x1011E74", Offset = "0x1011E74", VA = "0x1011E74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x1012130", Offset = "0x1012130", VA = "0x1012130", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5230", Offset = "0xAB5230")]
	private sealed class <SubmitFrame>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrManager <>4__this;

		[Token(Token = "0x1700021E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x1012B68", Offset = "0x1012B68", VA = "0x1012B68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x1012BB0", Offset = "0x1012BB0", VA = "0x1012BB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x10129E4", Offset = "0x10129E4", VA = "0x10129E4")]
		[DebuggerHidden]
		public <SubmitFrame>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x1012A10", Offset = "0x1012A10", VA = "0x1012A10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x1012A14", Offset = "0x1012A14", VA = "0x1012A14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x1012B70", Offset = "0x1012B70", VA = "0x1012B70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5240", Offset = "0xAB5240")]
	private sealed class <OnResume>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrManager <>4__this;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <recenterTimeout>5__2;

		[Token(Token = "0x17000220")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x10123B4", Offset = "0x10123B4", VA = "0x10123B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x10123FC", Offset = "0x10123FC", VA = "0x10123FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x1012178", Offset = "0x1012178", VA = "0x1012178")]
		[DebuggerHidden]
		public <OnResume>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x10121A4", Offset = "0x10121A4", VA = "0x10121A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x10121A8", Offset = "0x10121A8", VA = "0x10121A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x10123BC", Offset = "0x10123BC", VA = "0x10123BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SvrManager instance;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int EyeLayerMax;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int OverlayLayerMax;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int RenderLayersMax;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public SvrSettings settings;

	[NonSerialized]
	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eFadeState fadeState;

	[NonSerialized]
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fadeDuration;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB699C", Offset = "0xAB699C")]
	public Transform head;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<QVREyeWrap> eyeWrapList;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera monoCamera;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera leftCamera;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Camera rightCamera;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera leftOverlay;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Camera rightOverlay;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Camera monoOverlay;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SvrOverlay fadeOverlay;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SvrOverlay reticleOverlay;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int frameCount;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int renderCount;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SvrPlugin plugin;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<SvrEye> eyes;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<SvrOverlay> overlays;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool disableInput;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine onResume;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Coroutine submitFrame;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private SvrPlugin.HeadPose headPose;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private SvrPlugin.EyePose eyePose;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private SvrPlugin.Foveation foveation;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3 eyeDirection;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private Vector2 eyeFocus;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float eyeSmoother;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float[] frameDelta;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private SvrPlugin.HeadPose recenterPose;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private List<SvrEventListener> eventListeners;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float fadeAlpha;

	[Token(Token = "0x17000063")]
	public static SvrManager Instance
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x1732ED0", Offset = "0x1732ED0", VA = "0x1732ED0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000064")]
	[SerializeField]
	public SvrStatus status
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x1735020", Offset = "0x1735020", VA = "0x1735020")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000065")]
	public bool Initialized
	{
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x17396C0", Offset = "0x17396C0", VA = "0x17396C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000066")]
	public bool IsRunning
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x17396E0", Offset = "0x17396E0", VA = "0x17396E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000067")]
	public SvrPlugin.HeadPose HeadPose
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x1739700", Offset = "0x1739700", VA = "0x1739700")]
		get
		{
			return default(SvrPlugin.HeadPose);
		}
	}

	[Token(Token = "0x17000068")]
	public SvrPlugin.EyePose EyePose
	{
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x1739714", Offset = "0x1739714", VA = "0x1739714")]
		get
		{
			return default(SvrPlugin.EyePose);
		}
	}

	[Token(Token = "0x17000069")]
	public Vector3 EyeDirection
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x1739724", Offset = "0x1739724", VA = "0x1739724")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006A")]
	public int FrameCount
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x1739734", Offset = "0x1739734", VA = "0x1739734")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006B")]
	public SvrPlugin.HeadPose RecenterPose
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x1739884", Offset = "0x1739884", VA = "0x1739884")]
		get
		{
			return default(SvrPlugin.HeadPose);
		}
	}

	[Token(Token = "0x1700006C")]
	public bool DisableInput
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x17398A4", Offset = "0x17398A4", VA = "0x17398A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x17398AC", Offset = "0x17398AC", VA = "0x17398AC")]
		set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event OnEventSvrInitedOk svrInitedListener
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x173973C", Offset = "0x173973C", VA = "0x173973C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA694", Offset = "0xABA694")]
		add
		{
		}
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x17397E0", Offset = "0x17397E0", VA = "0x17397E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABA6A4", Offset = "0xABA6A4")]
		remove
		{
		}
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x17398B8", Offset = "0x17398B8", VA = "0x17398B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x173991C", Offset = "0x173991C", VA = "0x173991C")]
	private bool ValidateReferencedComponents()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x173A0AC", Offset = "0x173A0AC", VA = "0x173A0AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA6B4", Offset = "0xABA6B4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x173A124", Offset = "0x173A124", VA = "0x173A124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA714", Offset = "0xABA714")]
	private IEnumerator Initialize()
	{
		return null;
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x173A19C", Offset = "0x173A19C", VA = "0x173A19C")]
	private void InitializeFoveation()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x173A844", Offset = "0x173A844", VA = "0x173A844")]
	private void InitEyeWrapList()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x173A8F4", Offset = "0x173A8F4", VA = "0x173A8F4")]
	private void InitializeCameras()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x173ACD0", Offset = "0x173ACD0", VA = "0x173ACD0")]
	private void InitializeEyes()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x173B1EC", Offset = "0x173B1EC", VA = "0x173B1EC")]
	private void AddOverlays(Camera cam, SvrPlugin.EyeMask side)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x173B39C", Offset = "0x173B39C", VA = "0x173B39C")]
	private void InitializeOverlays()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x173B910", Offset = "0x173B910", VA = "0x173B910")]
	public void SetOverlayFade(eFadeState fadeValue)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1739694", Offset = "0x1739694", VA = "0x1739694")]
	public bool IsOverlayFading()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x173B92C", Offset = "0x173B92C", VA = "0x173B92C")]
	private void UpdateOverlayFade(float targetAlpha, float rate = 0f)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x173A3C8", Offset = "0x173A3C8", VA = "0x173A3C8")]
	private SvrPlugin.Foveation GetFoveationValues()
	{
		return default(SvrPlugin.Foveation);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x173BB0C", Offset = "0x173BB0C", VA = "0x173BB0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA774", Offset = "0xABA774")]
	private IEnumerator SubmitFrame()
	{
		return null;
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x173BB84", Offset = "0x173BB84", VA = "0x173BB84")]
	public bool RecenterTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x173BBD0", Offset = "0x173BBD0", VA = "0x173BBD0")]
	private void OnPreRenderListener(int sideMask, int textureId, int previousId)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x173BCC4", Offset = "0x173BCC4", VA = "0x173BCC4")]
	private void OnOccludeRenderListener(Matrix4x4 projMat, Matrix4x4 viewMat)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x173BD84", Offset = "0x173BD84", VA = "0x173BD84")]
	private void OnPostRenderListener(int sideMask, int layerMask)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x173BDE8", Offset = "0x173BDE8", VA = "0x173BDE8")]
	public void SetPause(bool pause)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x173BEBC", Offset = "0x173BEBC", VA = "0x173BEBC")]
	public void OnPause()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x173BE44", Offset = "0x173BE44", VA = "0x173BE44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA7D4", Offset = "0xABA7D4")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x173BF90", Offset = "0x173BF90", VA = "0x173BF90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x173C51C", Offset = "0x173C51C", VA = "0x173C51C")]
	public void Shutdown()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x173C5C8", Offset = "0x173C5C8", VA = "0x173C5C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1738440", Offset = "0x1738440", VA = "0x1738440")]
	public static Matrix4x4 Perspective(float left, float right, float bottom, float top, float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1739A40", Offset = "0x1739A40", VA = "0x1739A40")]
	private void RegisterListeners()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x173C5CC", Offset = "0x173C5CC", VA = "0x173C5CC")]
	private void UnregisterListeners()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x173CC38", Offset = "0x173CC38", VA = "0x173CC38")]
	private void OnEyeAntiAliasingChanged(SvrOverrideSettings.eAntiAliasing antiAliasing)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x173CD8C", Offset = "0x173CD8C", VA = "0x173CD8C")]
	private void OnEyeDepthChanged(SvrOverrideSettings.eDepth depth)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x173CEE0", Offset = "0x173CEE0", VA = "0x173CEE0")]
	private void OnEyeResolutionScaleFactorChanged(float scaleFactor)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x173D020", Offset = "0x173D020", VA = "0x173D020")]
	private void OnOverlayAntiAliasingChanged(SvrOverrideSettings.eAntiAliasing antiAliasing)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x173D174", Offset = "0x173D174", VA = "0x173D174")]
	private void OnOverlayDepthChanged(SvrOverrideSettings.eDepth depth)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x173D2C8", Offset = "0x173D2C8", VA = "0x173D2C8")]
	private void OnOverlayResolutionScaleFactorChanged(float scaleFactor)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x173D408", Offset = "0x173D408", VA = "0x173D408")]
	private void OnChromaticAberrationCorrectionChanged(SvrOverrideSettings.eChromaticAberrationCorrection aberrationCorrection)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x173D444", Offset = "0x173D444", VA = "0x173D444")]
	private void OnVSyncCountChanged(SvrOverrideSettings.eVSyncCount vSyncCount)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x173D4B8", Offset = "0x173D4B8", VA = "0x173D4B8")]
	private void OnMasterTextureLimitChanged(SvrOverrideSettings.eMasterTextureLimit masterTextureLimit)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x173D4E4", Offset = "0x173D4E4", VA = "0x173D4E4")]
	private void OnPerfLevelChanged(SvrOverrideSettings.ePerfLevel cpuPerfLevel, SvrOverrideSettings.ePerfLevel gpuPerfLevel)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x173D64C", Offset = "0x173D64C", VA = "0x173D64C")]
	private void OnFoveateChanged(Vector2 gain, float area, float minPixelDensity)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x173D8EC", Offset = "0x173D8EC", VA = "0x173D8EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x17337A8", Offset = "0x17337A8", VA = "0x17337A8")]
	public void AddEventListener(SvrEventListener listener)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1733ACC", Offset = "0x1733ACC", VA = "0x1733ACC")]
	public int ControllerStartTracking(string desc)
	{
		return default(int);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1733CB4", Offset = "0x1733CB4", VA = "0x1733CB4")]
	public void ControllerStopTracking(int handle)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x173DB8C", Offset = "0x173DB8C", VA = "0x173DB8C")]
	public SvrControllerState ControllerGetState(int handle, int space = 0)
	{
		return default(SvrControllerState);
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1733BF0", Offset = "0x1733BF0", VA = "0x1733BF0")]
	public void ControllerSendMessage(int handle, SvrController.svrControllerMessageType what, int arg1, int arg2)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x17341D0", Offset = "0x17341D0", VA = "0x17341D0")]
	public object ControllerQuery(int handle, SvrController.svrControllerQueryType what)
	{
		return null;
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x173DBE0", Offset = "0x173DBE0", VA = "0x173DBE0")]
	public SvrManager()
	{
	}
}
[Token(Token = "0x200004F")]
public class SvrOverlay : MonoBehaviour, IComparable<SvrOverlay>
{
	[Token(Token = "0x20001A4")]
	public enum eType
	{
		[Token(Token = "0x400096D")]
		RenderTexture,
		[Token(Token = "0x400096E")]
		StandardTexture,
		[Token(Token = "0x400096F")]
		EglTexture
	}

	[Token(Token = "0x20001A5")]
	public delegate void OnPostRenderCallback(int sideMask, int layerMask);

	[Token(Token = "0x20001A6")]
	public delegate void OnPreRenderCallback(int sideMask, int textureId, int previousId);

	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5250", Offset = "0xAB5250")]
	private sealed class <>c__DisplayClass81_0
	{
		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int prevTextureIndex;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SvrOverlay <>4__this;

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1012C74", Offset = "0x1012C74", VA = "0x1012C74")]
		public <>c__DisplayClass81_0()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1012C7C", Offset = "0x1012C7C", VA = "0x1012C7C")]
		internal bool <RecreateBuffersDeferred>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5260", Offset = "0xAB5260")]
	private sealed class <RecreateBuffersDeferred>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrOverlay <>4__this;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000222")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x1013464", Offset = "0x1013464", VA = "0x1013464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x10134AC", Offset = "0x10134AC", VA = "0x10134AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x1012CA4", Offset = "0x1012CA4", VA = "0x1012CA4")]
		[DebuggerHidden]
		public <RecreateBuffersDeferred>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x1012CD0", Offset = "0x1012CD0", VA = "0x1012CD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1012CD4", Offset = "0x1012CD4", VA = "0x1012CD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x101346C", Offset = "0x101346C", VA = "0x101346C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SvrOverlay> Instances;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OnPostRenderCallback OnPostRenderListener;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OnPreRenderCallback OnPreRenderListener;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB69E4", Offset = "0xAB69E4")]
	public int layerDepth;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6A1C", Offset = "0xAB6A1C")]
	public Camera imageCamera;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6A54", Offset = "0xAB6A54")]
	public eType imageType;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6A8C", Offset = "0xAB6A8C")]
	public Texture imageTexture;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6AC4", Offset = "0xAB6AC4")]
	public Transform imageTransform;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6AFC", Offset = "0xAB6AFC")]
	public Vector4 clipLowerLeft;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 clipUpperLeft;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 clipUpperRight;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector4 clipLowerRight;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6B34", Offset = "0xAB6B34")]
	public Vector2 uvLowerLeft;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector2 uvUpperLeft;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector2 uvUpperRight;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector2 uvLowerRight;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB6B6C", Offset = "0xAB6B6C")]
	public SvrPlugin.EyeMask side;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private RenderTextureFormat format;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector2 resolution;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float resolutionScaleFactor;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int antiAliasing;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int depth;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public SvrManager.SvrSettings.eFrustumType frustumType;

	[Token(Token = "0x4000246")]
	private const int bufferCount = 4;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RenderTexture[] overlayTextures;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] overlayTextureIds;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int currentTextureIndex;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Camera[] mainCameras;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool dirty;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Coroutine recreateBuffersCoroutine;

	[Token(Token = "0x1700006D")]
	public SvrManager.SvrSettings.eFrustumType FrustumType
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0x173DEC0", Offset = "0x173DEC0", VA = "0x173DEC0")]
		get
		{
			return default(SvrManager.SvrSettings.eFrustumType);
		}
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x173DEC8", Offset = "0x173DEC8", VA = "0x173DEC8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public eType ImageType
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0x173E580", Offset = "0x173E580", VA = "0x173E580")]
		get
		{
			return default(eType);
		}
		[Token(Token = "0x600031C")]
		[Address(RVA = "0x173E588", Offset = "0x173E588", VA = "0x173E588")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public SvrPlugin.EyeMask Side
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0x173E590", Offset = "0x173E590", VA = "0x173E590")]
		get
		{
			return default(SvrPlugin.EyeMask);
		}
		[Token(Token = "0x600031E")]
		[Address(RVA = "0x173E598", Offset = "0x173E598", VA = "0x173E598")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public RenderTextureFormat Format
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x173E5A0", Offset = "0x173E5A0", VA = "0x173E5A0")]
		get
		{
			return default(RenderTextureFormat);
		}
		[Token(Token = "0x6000320")]
		[Address(RVA = "0x173B780", Offset = "0x173B780", VA = "0x173B780")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public int AntiAliasing
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0x173E5D4", Offset = "0x173E5D4", VA = "0x173E5D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x173B8BC", Offset = "0x173B8BC", VA = "0x173B8BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public int Depth
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x173E5DC", Offset = "0x173E5DC", VA = "0x173E5DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x173B88C", Offset = "0x173B88C", VA = "0x173B88C")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public Vector2 Resolution
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x173E5E4", Offset = "0x173E5E4", VA = "0x173E5E4")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x173B7B0", Offset = "0x173B7B0", VA = "0x173B7B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public float ResolutionScaleFactor
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x173E5EC", Offset = "0x173E5EC", VA = "0x173E5EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x173B82C", Offset = "0x173B82C", VA = "0x173B82C")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public int TextureId
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0x173E5F4", Offset = "0x173E5F4", VA = "0x173E5F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x173E634", Offset = "0x173E634", VA = "0x173E634")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public int PreviousId
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0x173E674", Offset = "0x173E674", VA = "0x173E674")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000077")]
	public Texture TexturePtr
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0x173E6CC", Offset = "0x173E6CC", VA = "0x173E6CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x173DEA0", Offset = "0x173DEA0", VA = "0x173DEA0", Slot = "4")]
	public int CompareTo(SvrOverlay that)
	{
		return default(int);
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x173DED0", Offset = "0x173DED0", VA = "0x173DED0")]
	public void SetImage(Texture2D texture)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x173E5A8", Offset = "0x173E5A8", VA = "0x173E5A8")]
	private void SetDirty(bool value)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x173E778", Offset = "0x173E778", VA = "0x173E778")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x173E900", Offset = "0x173E900", VA = "0x173E900")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x173E80C", Offset = "0x173E80C", VA = "0x173E80C")]
	private void AcquireComponents()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x173E98C", Offset = "0x173E98C", VA = "0x173E98C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x173E990", Offset = "0x173E990", VA = "0x173E990")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x173B8EC", Offset = "0x173B8EC", VA = "0x173B8EC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x173DEF8", Offset = "0x173DEF8", VA = "0x173DEF8")]
	private void InitializeBuffers()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x173ECD4", Offset = "0x173ECD4", VA = "0x173ECD4")]
	private void InitializeCameras()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x173E8FC", Offset = "0x173E8FC", VA = "0x173E8FC")]
	private void InitializeCoords()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x173E994", Offset = "0x173E994", VA = "0x173E994")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x173EE9C", Offset = "0x173EE9C", VA = "0x173EE9C")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x173EF20", Offset = "0x173EF20", VA = "0x173EF20")]
	private void SwapBuffers()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x173F04C", Offset = "0x173F04C", VA = "0x173F04C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x173F0A4", Offset = "0x173F0A4", VA = "0x173F0A4")]
	private void RecreateBuffersIfDirty()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x173F11C", Offset = "0x173F11C", VA = "0x173F11C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA834", Offset = "0xABA834")]
	private IEnumerator RecreateBuffersDeferred()
	{
		return null;
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x173F194", Offset = "0x173F194", VA = "0x173F194")]
	public SvrOverlay()
	{
	}
}
[Token(Token = "0x2000050")]
public static class SvrOverrideSettings
{
	[Token(Token = "0x20001A9")]
	public enum eAntiAliasing
	{
		[Token(Token = "0x4000977")]
		NoOverride = -1,
		[Token(Token = "0x4000978")]
		k1 = 1,
		[Token(Token = "0x4000979")]
		k2 = 2,
		[Token(Token = "0x400097A")]
		k4 = 4
	}

	[Token(Token = "0x20001AA")]
	public enum eDepth
	{
		[Token(Token = "0x400097C")]
		NoOverride = -1,
		[Token(Token = "0x400097D")]
		k16 = 16,
		[Token(Token = "0x400097E")]
		k24 = 24
	}

	[Token(Token = "0x20001AB")]
	public enum eChromaticAberrationCorrection
	{
		[Token(Token = "0x4000980")]
		NoOverride = -1,
		[Token(Token = "0x4000981")]
		kDisable,
		[Token(Token = "0x4000982")]
		kEnable
	}

	[Token(Token = "0x20001AC")]
	public enum eVSyncCount
	{
		[Token(Token = "0x4000984")]
		NoOverride = -1,
		[Token(Token = "0x4000985")]
		k1 = 1,
		[Token(Token = "0x4000986")]
		k2 = 2
	}

	[Token(Token = "0x20001AD")]
	public enum eMasterTextureLimit
	{
		[Token(Token = "0x4000988")]
		NoOverride = -1,
		[Token(Token = "0x4000989")]
		k0,
		[Token(Token = "0x400098A")]
		k1,
		[Token(Token = "0x400098B")]
		k2,
		[Token(Token = "0x400098C")]
		k3,
		[Token(Token = "0x400098D")]
		k4
	}

	[Token(Token = "0x20001AE")]
	public enum ePerfLevel
	{
		[Token(Token = "0x400098F")]
		NoOverride = -1,
		[Token(Token = "0x4000990")]
		System,
		[Token(Token = "0x4000991")]
		Minimum,
		[Token(Token = "0x4000992")]
		Medium,
		[Token(Token = "0x4000993")]
		Maximum
	}

	[Token(Token = "0x20001AF")]
	public delegate void OnAntiAliasingChangedCallback(eAntiAliasing antiAliasing);

	[Token(Token = "0x20001B0")]
	public delegate void OnDepthChangedCallback(eDepth depth);

	[Token(Token = "0x20001B1")]
	public delegate void OnResolutionScaleFactorChangedCallback(float resolutionScaleFactor);

	[Token(Token = "0x20001B2")]
	public delegate void OnChromaticAberrationCorrectionChangedCallback(eChromaticAberrationCorrection chromaticAberrationCorrection);

	[Token(Token = "0x20001B3")]
	public delegate void OnVSyncCountChangedCallback(eVSyncCount vSyncCount);

	[Token(Token = "0x20001B4")]
	public delegate void OnMasterTextureLimitChangedCallback(eMasterTextureLimit masterTextureLimit);

	[Token(Token = "0x20001B5")]
	public delegate void OnPerfLevelChangedCallback(ePerfLevel cpuPerfLevel, ePerfLevel gpuPerfLevel);

	[Token(Token = "0x20001B6")]
	public delegate void OnFoveateChangedCallback(Vector2 gain, float area, float minimum);

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OnAntiAliasingChangedCallback OnEyeAntiAliasingChangedEvent;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OnDepthChangedCallback OnEyeDepthChangedEvent;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OnResolutionScaleFactorChangedCallback OnEyeResolutionScaleFactorChangedEvent;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static OnAntiAliasingChangedCallback OnOverlayAntiAliasingChangedEvent;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static OnDepthChangedCallback OnOverlayDepthChangedEvent;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static OnResolutionScaleFactorChangedCallback OnOverlayResolutionScaleFactorChangedEvent;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static OnChromaticAberrationCorrectionChangedCallback OnChromaticAberrationCorrectionChangedEvent;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static OnVSyncCountChangedCallback OnVSyncCountChangedEvent;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static OnMasterTextureLimitChangedCallback OnMasterTextureLimitChangedEvent;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static OnPerfLevelChangedCallback OnPerfLevelChangedEvent;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static OnFoveateChangedCallback OnFoveateChangedEvent;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static eAntiAliasing eyeAntiAliasing;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static eDepth eyeDepth;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float eyeResolutionScaleFactor;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static eAntiAliasing overlayAntiAliasing;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static eDepth overlayDepth;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private static float overlayResolutionScaleFactor;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static eChromaticAberrationCorrection chromaticAberrationCorrection;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static eVSyncCount vSyncCount;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static eMasterTextureLimit masterTextureLimit;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private static ePerfLevel cpuPerfLevel;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static ePerfLevel gpuPerfLevel;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private static Vector2 foveateGain;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private static float foveateArea;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static float foveateMinimum;

	[Token(Token = "0x17000078")]
	public static eAntiAliasing EyeAntiAliasing
	{
		[Token(Token = "0x600033F")]
		[Address(RVA = "0x173F3B8", Offset = "0x173F3B8", VA = "0x173F3B8")]
		get
		{
			return default(eAntiAliasing);
		}
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x1735E84", Offset = "0x1735E84", VA = "0x1735E84")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public static eDepth EyeDepth
	{
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x173F41C", Offset = "0x173F41C", VA = "0x173F41C")]
		get
		{
			return default(eDepth);
		}
		[Token(Token = "0x6000342")]
		[Address(RVA = "0x173F480", Offset = "0x173F480", VA = "0x173F480")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public static float EyeResolutionScaleFactor
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0x173F500", Offset = "0x173F500", VA = "0x173F500")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1735F04", Offset = "0x1735F04", VA = "0x1735F04")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public static eAntiAliasing OverlayAntiAliasing
	{
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x173F564", Offset = "0x173F564", VA = "0x173F564")]
		get
		{
			return default(eAntiAliasing);
		}
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x173F5C8", Offset = "0x173F5C8", VA = "0x173F5C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public static eDepth OverlayDepth
	{
		[Token(Token = "0x6000347")]
		[Address(RVA = "0x173F648", Offset = "0x173F648", VA = "0x173F648")]
		get
		{
			return default(eDepth);
		}
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x173F6AC", Offset = "0x173F6AC", VA = "0x173F6AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public static float OverlayResolutionScaleFactor
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x173F72C", Offset = "0x173F72C", VA = "0x173F72C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x173F790", Offset = "0x173F790", VA = "0x173F790")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public static eChromaticAberrationCorrection ChromaticAberrationCorrection
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x173F818", Offset = "0x173F818", VA = "0x173F818")]
		get
		{
			return default(eChromaticAberrationCorrection);
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x173610C", Offset = "0x173610C", VA = "0x173610C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public static eVSyncCount VSyncCount
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x173F87C", Offset = "0x173F87C", VA = "0x173F87C")]
		get
		{
			return default(eVSyncCount);
		}
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x173618C", Offset = "0x173618C", VA = "0x173618C")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public static eMasterTextureLimit MasterTextureLimit
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x173F8E0", Offset = "0x173F8E0", VA = "0x173F8E0")]
		get
		{
			return default(eMasterTextureLimit);
		}
		[Token(Token = "0x6000350")]
		[Address(RVA = "0x1735F8C", Offset = "0x1735F8C", VA = "0x1735F8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public static ePerfLevel CpuPerfLevel
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0x173F944", Offset = "0x173F944", VA = "0x173F944")]
		get
		{
			return default(ePerfLevel);
		}
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x173600C", Offset = "0x173600C", VA = "0x173600C")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public static ePerfLevel GpuPerfLevel
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x173F9A8", Offset = "0x173F9A8", VA = "0x173F9A8")]
		get
		{
			return default(ePerfLevel);
		}
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x173608C", Offset = "0x173608C", VA = "0x173608C")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public static Vector2 FoveateGain
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x173FA0C", Offset = "0x173FA0C", VA = "0x173FA0C")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x1736298", Offset = "0x1736298", VA = "0x1736298")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public static float FoveateArea
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x173FA70", Offset = "0x173FA70", VA = "0x173FA70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x173620C", Offset = "0x173620C", VA = "0x173620C")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public static float FoveateMinimum
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0x173FAD4", Offset = "0x173FAD4", VA = "0x173FAD4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600035A")]
		[Address(RVA = "0x173FB38", Offset = "0x173FB38", VA = "0x173FB38")]
		set
		{
		}
	}
}
[StructLayout(0, CharSet = CharSet.Unicode)]
[Token(Token = "0x2000051")]
public struct QiyiData
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float originDistance;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float poseQuality;
}
[Token(Token = "0x2000052")]
public abstract class SvrPlugin
{
	[Token(Token = "0x20001B7")]
	public enum EyeMask
	{
		[Token(Token = "0x4000995")]
		kLeft = 1,
		[Token(Token = "0x4000996")]
		kRight,
		[Token(Token = "0x4000997")]
		kBoth
	}

	[Token(Token = "0x20001B8")]
	public enum TextureType
	{
		[Token(Token = "0x4000999")]
		kTypeTexture,
		[Token(Token = "0x400099A")]
		kTypeTextureArray,
		[Token(Token = "0x400099B")]
		kTypeImage,
		[Token(Token = "0x400099C")]
		kTypeEquiRectTexture,
		[Token(Token = "0x400099D")]
		kTypeEquiRectImage,
		[Token(Token = "0x400099E")]
		kTypeCubemapTexture,
		[Token(Token = "0x400099F")]
		kTypeVulkan,
		[Token(Token = "0x40009A0")]
		kTypeCamera
	}

	[Token(Token = "0x20001B9")]
	public enum LayerFlags
	{
		[Token(Token = "0x40009A2")]
		kLayerFlagNone = 0,
		[Token(Token = "0x40009A3")]
		kLayerFlagHeadLocked = 1,
		[Token(Token = "0x40009A4")]
		kLayerFlagOpaque = 2,
		[Token(Token = "0x40009A5")]
		kLayerFlagSubsampled = 4
	}

	[Token(Token = "0x20001BA")]
	public enum PerfLevel
	{
		[Token(Token = "0x40009A7")]
		kPerfSystem,
		[Token(Token = "0x40009A8")]
		kPerfMaximum,
		[Token(Token = "0x40009A9")]
		kPerfNormal,
		[Token(Token = "0x40009AA")]
		kPerfMinimum
	}

	[Token(Token = "0x20001BB")]
	public enum OptionFlags
	{
		[Token(Token = "0x40009AC")]
		kProtectedContent = 1,
		[Token(Token = "0x40009AD")]
		kMotionAwareFrames = 2,
		[Token(Token = "0x40009AE")]
		kFoveationSubsampled = 4
	}

	[Token(Token = "0x20001BC")]
	public enum TrackingMode
	{
		[Token(Token = "0x40009B0")]
		kTrackingOrientation = 1,
		[Token(Token = "0x40009B1")]
		kTrackingPosition = 2,
		[Token(Token = "0x40009B2")]
		kTrackingEye = 4
	}

	[Token(Token = "0x20001BD")]
	public enum EyePoseStatus
	{
		[Token(Token = "0x40009B4")]
		kGazePointValid = 1,
		[Token(Token = "0x40009B5")]
		kGazeVectorValid = 2,
		[Token(Token = "0x40009B6")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x40009B7")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x40009B8")]
		kEyePositionGuideValid = 0x10,
		[Token(Token = "0x40009B9")]
		kEyeBlinkValid = 0x20
	}

	[Token(Token = "0x20001BE")]
	public enum ServiceCapabilities
	{
		[Token(Token = "0x40009BB")]
		kCapabilityCombinedGaze = 1,
		[Token(Token = "0x40009BC")]
		kCapabilityConvergenceDistance = 2,
		[Token(Token = "0x40009BD")]
		kCapabilityFoveatedGaze = 4,
		[Token(Token = "0x40009BE")]
		kCapabilityPerEyeGazeOrigin = 8,
		[Token(Token = "0x40009BF")]
		kCapabilityPerEyeGazeDirection = 0x10,
		[Token(Token = "0x40009C0")]
		kCapabilityPerEyeGazePoint = 0x20,
		[Token(Token = "0x40009C1")]
		kCapabilityPerEyeGazeOpenness = 0x40,
		[Token(Token = "0x40009C2")]
		kCapabilityPerEyePupilDilation = 0x80,
		[Token(Token = "0x40009C3")]
		kCapabilityPerEyePositionGuide = 0x100,
		[Token(Token = "0x40009C4")]
		kCapabilityPerEyeBlink = 0x200
	}

	[Token(Token = "0x20001BF")]
	public enum FrameOption
	{
		[Token(Token = "0x40009C6")]
		kDisableDistortionCorrection = 1,
		[Token(Token = "0x40009C7")]
		kDisableReprojection = 2,
		[Token(Token = "0x40009C8")]
		kEnableMotionToPhoton = 4,
		[Token(Token = "0x40009C9")]
		kDisableChromaticCorrection = 8
	}

	[Token(Token = "0x20001C0")]
	public struct HeadPose
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong timestamp;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 position;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion orientation;
	}

	[Token(Token = "0x20001C1")]
	public struct EyePose
	{
		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong timestamp;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int leftStatus;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int rightStatus;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int combinedStatus;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 leftPosition;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 rightPosition;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 combinedPosition;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 leftDirection;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 rightDirection;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 combinedDirection;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool leftBlink;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool rightBlink;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float leftOpenness;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float rightOpenness;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float leftDilation;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float rightDilation;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 leftGuide;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 rightGuide;
	}

	[Token(Token = "0x20001C2")]
	public struct ViewFrustum
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion rotation;
	}

	[Token(Token = "0x20001C3")]
	public struct Foveation
	{
		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 Gain;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Area;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Minimum;
	}

	[Token(Token = "0x20001C4")]
	public struct CameraIntrinsics
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 PrincipalPoint;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 FocalLength;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Distortion0;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Distortion1;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Distortion2;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Distortion3;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Distortion4;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Distortion5;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Distortion6;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Distortion7;
	}

	[Token(Token = "0x20001C5")]
	public struct DeviceInfo
	{
		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int displayWidthPixels;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int displayHeightPixels;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float displayRefreshRateHz;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int targetEyeWidthPixels;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int targetEyeHeightPixels;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float targetFovXRad;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float targetFovYRad;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ViewFrustum targetFrustumRight;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float targetFrustumConvergence;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float targetFrustumPitch;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Foveation lowFoveation;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Foveation medFoveation;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Foveation highFoveation;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Matrix4x4 trackingCalibration;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public CameraIntrinsics trackingIntrinsics;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public ulong trackingCapabilities;
	}

	[Token(Token = "0x20001C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5270", Offset = "0xAB5270")]
	private sealed class <Initialize>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrPlugin <>4__this;

		[Token(Token = "0x17000224")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0x1015720", Offset = "0x1015720", VA = "0x1015720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0x1015768", Offset = "0x1015768", VA = "0x1015768", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x10155CC", Offset = "0x10155CC", VA = "0x10155CC")]
		[DebuggerHidden]
		public <Initialize>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x10155F8", Offset = "0x10155F8", VA = "0x10155F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x10155FC", Offset = "0x10155FC", VA = "0x10155FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x1015728", Offset = "0x1015728", VA = "0x1015728", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5280", Offset = "0xAB5280")]
	private sealed class <BeginVr>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrPlugin <>4__this;

		[Token(Token = "0x17000226")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0x101557C", Offset = "0x101557C", VA = "0x101557C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D75")]
			[Address(RVA = "0x10155C4", Offset = "0x10155C4", VA = "0x10155C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x101534C", Offset = "0x101534C", VA = "0x101534C")]
		[DebuggerHidden]
		public <BeginVr>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x1015378", Offset = "0x1015378", VA = "0x1015378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x101537C", Offset = "0x101537C", VA = "0x101537C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x1015584", Offset = "0x1015584", VA = "0x1015584", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SvrPlugin instance;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SvrManager svrCamera;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SvrEye[] eyes;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SvrOverlay[] overlays;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DeviceInfo deviceInfo;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public CommandBuffer beginEyeCommandBuffer;

	[Token(Token = "0x17000086")]
	public static SvrPlugin Instance
	{
		[Token(Token = "0x600035C")]
		[Address(RVA = "0x17350A0", Offset = "0x17350A0", VA = "0x17350A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x173FD68", Offset = "0x173FD68", VA = "0x173FD68", Slot = "4")]
	public virtual bool PollEvent(ref SvrManager.SvrEvent frameEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x173FD70", Offset = "0x173FD70", VA = "0x173FD70", Slot = "5")]
	public virtual bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x173FD78", Offset = "0x173FD78", VA = "0x173FD78", Slot = "6")]
	public virtual bool IsRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x173FD80", Offset = "0x173FD80", VA = "0x173FD80", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA894", Offset = "0xABA894")]
	public virtual IEnumerator Initialize()
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x173FDF8", Offset = "0x173FDF8", VA = "0x173FDF8", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA8F4", Offset = "0xABA8F4")]
	public virtual IEnumerator BeginVr(int cpuPerfLevel, int gpuPerfLevel, int optionFlags)
	{
		return null;
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x173FE70", Offset = "0x173FE70", VA = "0x173FE70", Slot = "9")]
	public virtual void EndVr()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x173FEA4", Offset = "0x173FEA4", VA = "0x173FEA4", Slot = "10")]
	public virtual void BeginEye(int renderIndex, int sideMask, float[] frameDelta)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x173FEA8", Offset = "0x173FEA8", VA = "0x173FEA8", Slot = "11")]
	public virtual void OccludeEye(int renderIndex, Matrix4x4 proj, Matrix4x4 view)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x173FEAC", Offset = "0x173FEAC", VA = "0x173FEAC", Slot = "12")]
	public virtual void EndEye(int renderIndex, int sideMask, int layerMask)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x173FEB0", Offset = "0x173FEB0", VA = "0x173FEB0", Slot = "13")]
	public virtual void SetTrackingMode(int mode)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x173FEB4", Offset = "0x173FEB4", VA = "0x173FEB4", Slot = "14")]
	public virtual void SetFoveationParameters(int renderIndex, int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x173FEB8", Offset = "0x173FEB8", VA = "0x173FEB8", Slot = "15")]
	public virtual void ApplyFoveation()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x173FEBC", Offset = "0x173FEBC", VA = "0x173FEBC", Slot = "16")]
	public virtual int GetTrackingMode()
	{
		return default(int);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x173FEC4", Offset = "0x173FEC4", VA = "0x173FEC4", Slot = "17")]
	public virtual void SetPerformanceLevels(int newCpuPerfLevel, int newGpuPerfLevel)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x173FEC8", Offset = "0x173FEC8", VA = "0x173FEC8", Slot = "18")]
	public virtual void SetFrameOption(FrameOption frameOption)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x173FECC", Offset = "0x173FECC", VA = "0x173FECC", Slot = "19")]
	public virtual void UnsetFrameOption(FrameOption frameOption)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x173FED0", Offset = "0x173FED0", VA = "0x173FED0", Slot = "20")]
	public virtual void SetVSyncCount(int vSyncCount)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x173FED4", Offset = "0x173FED4", VA = "0x173FED4", Slot = "21")]
	public virtual bool RecenterTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x173FEDC", Offset = "0x173FEDC", VA = "0x173FEDC", Slot = "22")]
	public virtual void SubmitFrame(int frameIndex, float fieldOfView, int frameType)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x173FEE0", Offset = "0x173FEE0", VA = "0x173FEE0", Slot = "23")]
	public virtual void GetRecenterOffsetPose(ref Quaternion orientation, ref Vector3 position)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x173FF20", Offset = "0x173FF20", VA = "0x173FF20", Slot = "24")]
	public virtual int GetPredictedPose(ref Quaternion orientation, ref Vector3 position, int frameIndex = -1)
	{
		return default(int);
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x173FF64", Offset = "0x173FF64", VA = "0x173FF64", Slot = "25")]
	public virtual int GetHeadPose(ref HeadPose headPose, int frameIndex = -1)
	{
		return default(int);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x173FFA8", Offset = "0x173FFA8", VA = "0x173FFA8", Slot = "26")]
	public virtual int GetEyePose(ref EyePose eyePose, int frameIndex = -1)
	{
		return default(int);
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x173FFB8", Offset = "0x173FFB8", VA = "0x173FFB8", Slot = "27")]
	public virtual int GetEyeFocalPoint(ref Vector2 focalPoint)
	{
		return default(int);
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x173FFE4", Offset = "0x173FFE4", VA = "0x173FFE4", Slot = "28")]
	public virtual bool Is3drOcclusion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x173FFEC", Offset = "0x173FFEC", VA = "0x173FFEC", Slot = "29")]
	public virtual void GetOcclusionMesh()
	{
	}

	[Token(Token = "0x6000377")]
	public abstract DeviceInfo GetDeviceInfo();

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x173FFF0", Offset = "0x173FFF0", VA = "0x173FFF0", Slot = "31")]
	public virtual void Shutdown()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1740040", Offset = "0x1740040", VA = "0x1740040", Slot = "32")]
	public virtual int ControllerStartTracking(string desc)
	{
		return default(int);
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1740048", Offset = "0x1740048", VA = "0x1740048", Slot = "33")]
	public virtual void ControllerStopTracking(int handle)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x174004C", Offset = "0x174004C", VA = "0x174004C", Slot = "34")]
	public virtual SvrControllerState ControllerGetState(int handle, int space)
	{
		return default(SvrControllerState);
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1740088", Offset = "0x1740088", VA = "0x1740088", Slot = "35")]
	public virtual void ControllerSendMessage(int handle, SvrController.svrControllerMessageType what, int arg1, int arg2)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x174008C", Offset = "0x174008C", VA = "0x174008C", Slot = "36")]
	public virtual object ControllerQuery(int handle, SvrController.svrControllerQueryType what)
	{
		return null;
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1740094", Offset = "0x1740094", VA = "0x1740094")]
	protected SvrPlugin()
	{
	}
}
[Token(Token = "0x2000053")]
internal class SvrPluginAndroid : SvrPlugin
{
	[Token(Token = "0x20001C8")]
	private enum RenderEvent
	{
		[Token(Token = "0x4000A0C")]
		Initialize,
		[Token(Token = "0x4000A0D")]
		BeginVr,
		[Token(Token = "0x4000A0E")]
		EndVr,
		[Token(Token = "0x4000A0F")]
		BeginEye,
		[Token(Token = "0x4000A10")]
		EndEye,
		[Token(Token = "0x4000A11")]
		SubmitFrame,
		[Token(Token = "0x4000A12")]
		Foveation,
		[Token(Token = "0x4000A13")]
		Shutdown,
		[Token(Token = "0x4000A14")]
		RecenterTracking,
		[Token(Token = "0x4000A15")]
		SetTrackingMode,
		[Token(Token = "0x4000A16")]
		SetPerformanceLevels,
		[Token(Token = "0x4000A17")]
		OccludeEye,
		[Token(Token = "0x4000A18")]
		OcclusionMesh
	}

	[Serializable]
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5290", Offset = "0xAB5290")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__39_0;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<bool> <>9__40_0;

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x10157D4", Offset = "0x10157D4", VA = "0x10157D4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x10157DC", Offset = "0x10157DC", VA = "0x10157DC")]
		internal bool <Initialize>b__39_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x10157E4", Offset = "0x10157E4", VA = "0x10157E4")]
		internal bool <BeginVr>b__40_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB52A0", Offset = "0xAB52A0")]
	private sealed class <Initialize>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrPluginAndroid <>4__this;

		[Token(Token = "0x17000228")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x1015F94", Offset = "0x1015F94", VA = "0x1015F94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x1015FDC", Offset = "0x1015FDC", VA = "0x1015FDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x1015C44", Offset = "0x1015C44", VA = "0x1015C44")]
		[DebuggerHidden]
		public <Initialize>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1015C70", Offset = "0x1015C70", VA = "0x1015C70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x1015C74", Offset = "0x1015C74", VA = "0x1015C74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1015F9C", Offset = "0x1015F9C", VA = "0x1015F9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB52B0", Offset = "0xAB52B0")]
	private sealed class <BeginVr>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrPluginAndroid <>4__this;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cpuPerfLevel;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int gpuPerfLevel;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int optionFlags;

		[Token(Token = "0x1700022A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D83")]
			[Address(RVA = "0x1015BF4", Offset = "0x1015BF4", VA = "0x1015BF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x1015C3C", Offset = "0x1015C3C", VA = "0x1015C3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x10157EC", Offset = "0x10157EC", VA = "0x10157EC")]
		[DebuggerHidden]
		public <BeginVr>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x1015818", Offset = "0x1015818", VA = "0x1015818", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x101581C", Offset = "0x101581C", VA = "0x101581C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1015BFC", Offset = "0x1015BFC", VA = "0x1015BFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x600037F")]
	[Address(RVA = "0x174009C", Offset = "0x174009C", VA = "0x174009C")]
	private static extern IntPtr GetRenderEventFunc();

	[PreserveSig]
	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1740110", Offset = "0x1740110", VA = "0x1740110")]
	private static extern bool SvrIsInitialized();

	[PreserveSig]
	[Token(Token = "0x6000381")]
	[Address(RVA = "0x174018C", Offset = "0x174018C", VA = "0x174018C")]
	private static extern bool SvrIsRunning();

	[PreserveSig]
	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1740208", Offset = "0x1740208", VA = "0x1740208")]
	private static extern bool SvrCanBeginVR();

	[PreserveSig]
	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1740284", Offset = "0x1740284", VA = "0x1740284")]
	private static extern void SvrInitializeEventData(IntPtr activity);

	[PreserveSig]
	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1740304", Offset = "0x1740304", VA = "0x1740304")]
	private static extern void SvrSubmitFrameEventData(int frameIndex, float fieldOfView, int frameType);

	[PreserveSig]
	[Token(Token = "0x6000385")]
	[Address(RVA = "0x17403A4", Offset = "0x17403A4", VA = "0x17403A4")]
	private static extern void SvrSetupLayerCoords(int layerIndex, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

	[PreserveSig]
	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1740474", Offset = "0x1740474", VA = "0x1740474")]
	private static extern void SvrSetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags);

	[PreserveSig]
	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1740524", Offset = "0x1740524", VA = "0x1740524")]
	private static extern void SvrSetTrackingModeEventData(int mode);

	[PreserveSig]
	[Token(Token = "0x6000388")]
	[Address(RVA = "0x17405A4", Offset = "0x17405A4", VA = "0x17405A4")]
	private static extern void SvrSetPerformanceLevelsEventData(int newCpuPerfLevel, int newGpuPerfLevel);

	[PreserveSig]
	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1740634", Offset = "0x1740634", VA = "0x1740634")]
	private static extern void SvrSetEyeEventData(int renderIndex, int sideMask, int layerMask);

	[PreserveSig]
	[Token(Token = "0x600038A")]
	[Address(RVA = "0x17406CC", Offset = "0x17406CC", VA = "0x17406CC")]
	private static extern void SvrSetEyeRenderData(int renderIndex, float[] eyeProjMat, float[] eyeViewMat);

	[PreserveSig]
	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1740774", Offset = "0x1740774", VA = "0x1740774")]
	private static extern void SvrSetColorSpace(int colorSpace);

	[PreserveSig]
	[Token(Token = "0x600038C")]
	[Address(RVA = "0x17407F4", Offset = "0x17407F4", VA = "0x17407F4")]
	private static extern void SvrSetOptionFlags(int optionFlags);

	[PreserveSig]
	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1740874", Offset = "0x1740874", VA = "0x1740874")]
	private static extern void SvrSetFrameOption(uint frameOption);

	[PreserveSig]
	[Token(Token = "0x600038E")]
	[Address(RVA = "0x17408F4", Offset = "0x17408F4", VA = "0x17408F4")]
	private static extern void SvrUnsetFrameOption(uint frameOption);

	[PreserveSig]
	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1740974", Offset = "0x1740974", VA = "0x1740974")]
	private static extern void SvrSetVSyncCount(int vSyncCount);

	[PreserveSig]
	[Token(Token = "0x6000390")]
	[Address(RVA = "0x17409F4", Offset = "0x17409F4", VA = "0x17409F4")]
	private static extern int SvrGetPredictedPose(ref ulong timeStampNs, ref float rx, ref float ry, ref float rz, ref float rw, ref float px, ref float py, ref float pz, int frameIndex, bool isMultiThreadedRender);

	[PreserveSig]
	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1740AE4", Offset = "0x1740AE4", VA = "0x1740AE4")]
	private static extern int SvrGetEyeFocalPoint(ref ulong timeStampNs, ref ulong foveatedStatus, ref float foveatedDirectionX, ref float foveatedDirectionY, ref float foveatedDirectionZ);

	[PreserveSig]
	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1740B94", Offset = "0x1740B94", VA = "0x1740B94")]
	private static extern int SvrGetEyePose(ref ulong timeStampNs, ref int leftStatus, ref int rightStatus, ref int combinedStatus, ref bool leftBlink, ref bool rightBlink, ref float leftOpenness, ref float rightOpenness, ref float leftDilation, ref float rightDilation, ref float leftDirectionX, ref float leftDirectionY, ref float leftDirectionZ, ref float leftPositionX, ref float leftPositionY, ref float leftPositionZ, ref float leftGuideX, ref float leftGuideY, ref float leftGuideZ, ref float rightDirectionX, ref float rightDirectionY, ref float rightDirectionZ, ref float rightPositionX, ref float rightPositionY, ref float rightPositionZ, ref float rightGuideX, ref float rightGuideY, ref float rightGuideZ, ref float combinedDirectionX, ref float combinedDirectionY, ref float combinedDirectionZ, ref float combinedPositionX, ref float combinedPositionY, ref float combinedPositionZ, int frameIndex);

	[PreserveSig]
	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1740DC0", Offset = "0x1740DC0", VA = "0x1740DC0")]
	private static extern bool SvrRecenterTrackingPose();

	[PreserveSig]
	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1740E3C", Offset = "0x1740E3C", VA = "0x1740E3C")]
	private static extern int SvrGetTrackingMode();

	[PreserveSig]
	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1740EB0", Offset = "0x1740EB0", VA = "0x1740EB0")]
	private static extern void SvrGetRecenterOffsetHeadPose(ref float rotX, ref float rotY, ref float rotZ, ref float rotW, ref float positionX, ref float positionY, ref float positionZ);

	[PreserveSig]
	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1740F78", Offset = "0x1740F78", VA = "0x1740F78")]
	private static extern bool SvrIs3drOcclusion();

	[PreserveSig]
	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1740FF4", Offset = "0x1740FF4", VA = "0x1740FF4")]
	private static extern void SvrGetDeviceInfo(ref int displayWidthPixels, ref int displayHeightPixels, ref float displayRefreshRateHz, ref int targetEyeWidthPixels, ref int targetEyeHeightPixels, ref float targetFovXRad, ref float targetFovYRad, ref float leftFrustumLeft, ref float leftFrustumRight, ref float leftFrustumBottom, ref float leftFrustumTop, ref float leftFrustumNear, ref float leftEyeFrustumFar, ref float leftFrustumPositionX, ref float leftFrustumPositionY, ref float leftFrustumPositionZ, ref float leftFrustumRotationX, ref float leftFrustumRotationY, ref float leftFrustumRotationZ, ref float leftFrustumRotationW, ref float rightFrustumLeft, ref float rightFrustumRight, ref float rightFrustumBottom, ref float rightFrustumTop, ref float rightFrustumNear, ref float rightFrustumFar, ref float rightFrustumPositionX, ref float rightFrustumPositionY, ref float rightFrustumPositionZ, ref float rightFrustumRotationX, ref float rightFrustumRotationY, ref float rightFrustumRotationZ, ref float rightFrustumRotationW, ref float targetfrustumConvergence, ref float targetFrustumPitch, ref float lowFoveationGainX, ref float lowFoveationGainY, ref float lowFoveationArea, ref float lowFoveationMinimum, ref float medFoveationGainX, ref float medFoveationGainY, ref float medFoveationArea, ref float medFoveationMinimum, ref float highFoveationGainX, ref float highFoveationGainY, ref float highFoveationArea, ref float highFoveationMinimum, ref float trackingCalibrationM00, ref float trackingCalibrationM01, ref float trackingCalibrationM02, ref float trackingCalibrationM03, ref float trackingCalibrationM10, ref float trackingCalibrationM11, ref float trackingCalibrationM12, ref float trackingCalibrationM13, ref float trackingCalibrationM20, ref float trackingCalibrationM21, ref float trackingCalibrationM22, ref float trackingCalibrationM23, ref float trackingPrincipalPointX, ref float trackingPrincipalPointY, ref float trackingFocalLengthX, ref float trackingFocalLengthY, ref float trackingDistortion0, ref float trackingDistortion1, ref float trackingDistortion2, ref float trackingDistortion3, ref float trackingDistortion4, ref float trackingDistortion5, ref float trackingDistortion6, ref float trackingDistortion7, ref ulong trackingCapabilities);

	[PreserveSig]
	[Token(Token = "0x6000398")]
	[Address(RVA = "0x174142C", Offset = "0x174142C", VA = "0x174142C")]
	private static extern void SvrSetFrameOffset(int renderIndex, float[] delta);

	[PreserveSig]
	[Token(Token = "0x6000399")]
	[Address(RVA = "0x17414C4", Offset = "0x17414C4", VA = "0x17414C4")]
	private static extern void SvrSetFoveationParameters(int renderIndex, int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

	[PreserveSig]
	[Token(Token = "0x600039A")]
	[Address(RVA = "0x17415A4", Offset = "0x17415A4", VA = "0x17415A4")]
	private static extern bool SvrPollEvent(ref int eventType, ref uint deviceId, ref float eventTimeStamp, int eventDataCount, uint[] eventData);

	[PreserveSig]
	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1741664", Offset = "0x1741664", VA = "0x1741664")]
	private static extern int SvrControllerStartTracking(string desc);

	[PreserveSig]
	[Token(Token = "0x600039C")]
	[Address(RVA = "0x17416FC", Offset = "0x17416FC", VA = "0x17416FC")]
	private static extern void SvrControllerStopTracking(int handle);

	[PreserveSig]
	[Token(Token = "0x600039D")]
	[Address(RVA = "0x174177C", Offset = "0x174177C", VA = "0x174177C")]
	private static extern void SvrControllerGetState(int handle, int space, ref SvrControllerState state);

	[PreserveSig]
	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1741870", Offset = "0x1741870", VA = "0x1741870")]
	private static extern void SvrControllerSendMessage(int handle, int what, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1741918", Offset = "0x1741918", VA = "0x1741918")]
	private static extern int SvrControllerQuery(int handle, int what, IntPtr mem, int size);

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x173FC88", Offset = "0x173FC88", VA = "0x173FC88")]
	public static SvrPluginAndroid Create()
	{
		return null;
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x17419C0", Offset = "0x17419C0", VA = "0x17419C0")]
	private SvrPluginAndroid()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1741A54", Offset = "0x1741A54", VA = "0x1741A54")]
	private void IssueEvent(RenderEvent e)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1741A7C", Offset = "0x1741A7C", VA = "0x1741A7C", Slot = "5")]
	public override bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1741A80", Offset = "0x1741A80", VA = "0x1741A80", Slot = "6")]
	public override bool IsRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x1741A84", Offset = "0x1741A84", VA = "0x1741A84", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA954", Offset = "0xABA954")]
	public override IEnumerator Initialize()
	{
		return null;
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1741AFC", Offset = "0x1741AFC", VA = "0x1741AFC", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABA9B4", Offset = "0xABA9B4")]
	public override IEnumerator BeginVr(int cpuPerfLevel, int gpuPerfLevel, int optionFlags)
	{
		return null;
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1741B98", Offset = "0x1741B98", VA = "0x1741B98", Slot = "9")]
	public override void EndVr()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1741BDC", Offset = "0x1741BDC", VA = "0x1741BDC", Slot = "10")]
	public override void BeginEye(int renderIndex, int sideMask, float[] frameDelta)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1741C24", Offset = "0x1741C24", VA = "0x1741C24", Slot = "11")]
	public override void OccludeEye(int renderIndex, Matrix4x4 projection, Matrix4x4 view)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1741F38", Offset = "0x1741F38", VA = "0x1741F38", Slot = "12")]
	public override void EndEye(int renderIndex, int sideMask, int layerMask)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x1741F64", Offset = "0x1741F64", VA = "0x1741F64", Slot = "13")]
	public override void SetTrackingMode(int modeMask)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x1741F88", Offset = "0x1741F88", VA = "0x1741F88", Slot = "14")]
	public override void SetFoveationParameters(int renderIndex, int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1741F98", Offset = "0x1741F98", VA = "0x1741F98", Slot = "15")]
	public override void ApplyFoveation()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1741FB4", Offset = "0x1741FB4", VA = "0x1741FB4", Slot = "16")]
	public override int GetTrackingMode()
	{
		return default(int);
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1741FB8", Offset = "0x1741FB8", VA = "0x1741FB8", Slot = "17")]
	public override void SetPerformanceLevels(int newCpuPerfLevel, int newGpuPerfLevel)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1741FE0", Offset = "0x1741FE0", VA = "0x1741FE0", Slot = "18")]
	public override void SetFrameOption(FrameOption frameOption)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1741FE8", Offset = "0x1741FE8", VA = "0x1741FE8", Slot = "19")]
	public override void UnsetFrameOption(FrameOption frameOption)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x1741FF0", Offset = "0x1741FF0", VA = "0x1741FF0", Slot = "20")]
	public override void SetVSyncCount(int vSyncCount)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x1741FF8", Offset = "0x1741FF8", VA = "0x1741FF8", Slot = "21")]
	public override bool RecenterTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1741FFC", Offset = "0x1741FFC", VA = "0x1741FFC", Slot = "23")]
	public override void GetRecenterOffsetPose(ref Quaternion orientation, ref Vector3 position)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x174206C", Offset = "0x174206C", VA = "0x174206C", Slot = "24")]
	public override int GetPredictedPose(ref Quaternion orientation, ref Vector3 position, int frameIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1742130", Offset = "0x1742130", VA = "0x1742130", Slot = "25")]
	public override int GetHeadPose(ref HeadPose headPose, int frameIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x17421FC", Offset = "0x17421FC", VA = "0x17421FC", Slot = "26")]
	public override int GetEyePose(ref EyePose eyePose, int frameIndex = -1)
	{
		return default(int);
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x17423D4", Offset = "0x17423D4", VA = "0x17423D4", Slot = "27")]
	public override int GetEyeFocalPoint(ref Vector2 focalPoint)
	{
		return default(int);
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x17424E4", Offset = "0x17424E4", VA = "0x17424E4", Slot = "28")]
	public override bool Is3drOcclusion()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x17424E8", Offset = "0x17424E8", VA = "0x17424E8", Slot = "29")]
	public override void GetOcclusionMesh()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1742504", Offset = "0x1742504", VA = "0x1742504", Slot = "30")]
	public override DeviceInfo GetDeviceInfo()
	{
		return default(DeviceInfo);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1742928", Offset = "0x1742928", VA = "0x1742928", Slot = "22")]
	public override void SubmitFrame(int frameIndex, float fieldOfView, int frameType)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x17431D0", Offset = "0x17431D0", VA = "0x17431D0", Slot = "31")]
	public override void Shutdown()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x17431F0", Offset = "0x17431F0", VA = "0x17431F0", Slot = "4")]
	public override bool PollEvent(ref SvrManager.SvrEvent frameEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x174333C", Offset = "0x174333C", VA = "0x174333C", Slot = "32")]
	public override int ControllerStartTracking(string desc)
	{
		return default(int);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1743344", Offset = "0x1743344", VA = "0x1743344", Slot = "33")]
	public override void ControllerStopTracking(int handle)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x174334C", Offset = "0x174334C", VA = "0x174334C")]
	private void dumpState(SvrControllerState state)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x17434C8", Offset = "0x17434C8", VA = "0x17434C8", Slot = "34")]
	public override SvrControllerState ControllerGetState(int handle, int space)
	{
		return default(SvrControllerState);
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1743544", Offset = "0x1743544", VA = "0x1743544", Slot = "35")]
	public override void ControllerSendMessage(int handle, SvrController.svrControllerMessageType what, int arg1, int arg2)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x1743558", Offset = "0x1743558", VA = "0x1743558", Slot = "36")]
	public override object ControllerQuery(int handle, SvrController.svrControllerQueryType what)
	{
		return null;
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1743724", Offset = "0x1743724", VA = "0x1743724")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAA14", Offset = "0xABAA14")]
	[DebuggerHidden]
	private IEnumerator <>n__0()
	{
		return null;
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1743728", Offset = "0x1743728", VA = "0x1743728")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAA4C", Offset = "0xABAA4C")]
	[DebuggerHidden]
	private IEnumerator <>n__1(int cpuPerfLevel, int gpuPerfLevel, int optionFlags)
	{
		return null;
	}
}
[Token(Token = "0x2000054")]
internal class SvrPluginWin : SvrPlugin
{
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB52C0", Offset = "0xAB52C0")]
	private sealed class <Initialize>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrPluginWin <>4__this;

		[Token(Token = "0x1700022C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0x10161C0", Offset = "0x10161C0", VA = "0x10161C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0x1016208", Offset = "0x1016208", VA = "0x1016208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x10160DC", Offset = "0x10160DC", VA = "0x10160DC")]
		[DebuggerHidden]
		public <Initialize>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x1016108", Offset = "0x1016108", VA = "0x1016108", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x101610C", Offset = "0x101610C", VA = "0x101610C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x10161C8", Offset = "0x10161C8", VA = "0x10161C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB52D0", Offset = "0xAB52D0")]
	private sealed class <BeginVr>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrPluginWin <>4__this;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cpuPerfLevel;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int gpuPerfLevel;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int optionFlags;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0x101608C", Offset = "0x101608C", VA = "0x101608C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0x10160D4", Offset = "0x10160D4", VA = "0x10160D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1015FE4", Offset = "0x1015FE4", VA = "0x1015FE4")]
		[DebuggerHidden]
		public <BeginVr>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1016010", Offset = "0x1016010", VA = "0x1016010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1016014", Offset = "0x1016014", VA = "0x1016014", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x1016094", Offset = "0x1016094", VA = "0x1016094", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x16FB5A4", Offset = "0x16FB5A4", VA = "0x16FB5A4")]
	public static SvrPluginWin Create()
	{
		return null;
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x16FB5F8", Offset = "0x16FB5F8", VA = "0x16FB5F8")]
	private SvrPluginWin()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x16FB668", Offset = "0x16FB668", VA = "0x16FB668", Slot = "5")]
	public override bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x16FB6D4", Offset = "0x16FB6D4", VA = "0x16FB6D4", Slot = "6")]
	public override bool IsRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x16FB6E4", Offset = "0x16FB6E4", VA = "0x16FB6E4", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAA84", Offset = "0xABAA84")]
	public override IEnumerator Initialize()
	{
		return null;
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x16FB75C", Offset = "0x16FB75C", VA = "0x16FB75C", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAAE4", Offset = "0xABAAE4")]
	public override IEnumerator BeginVr(int cpuPerfLevel, int gpuPerfLevel, int optionFlags)
	{
		return null;
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x16FB7F8", Offset = "0x16FB7F8", VA = "0x16FB7F8", Slot = "20")]
	public override void SetVSyncCount(int vSyncCount)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x16FB804", Offset = "0x16FB804", VA = "0x16FB804", Slot = "25")]
	public override int GetHeadPose(ref HeadPose headPose, int frameIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x16FB970", Offset = "0x16FB970", VA = "0x16FB970", Slot = "30")]
	public override DeviceInfo GetDeviceInfo()
	{
		return default(DeviceInfo);
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x16FBAD0", Offset = "0x16FBAD0", VA = "0x16FBAD0", Slot = "22")]
	public override void SubmitFrame(int frameIndex, float fieldOfView, int frameType)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x16FC520", Offset = "0x16FC520", VA = "0x16FC520", Slot = "31")]
	public override void Shutdown()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x16FC528", Offset = "0x16FC528", VA = "0x16FC528")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAB44", Offset = "0xABAB44")]
	[DebuggerHidden]
	private IEnumerator <>n__0()
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x16FC530", Offset = "0x16FC530", VA = "0x16FC530")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAB7C", Offset = "0xABAB7C")]
	[DebuggerHidden]
	private IEnumerator <>n__1(int cpuPerfLevel, int gpuPerfLevel, int optionFlags)
	{
		return null;
	}
}
[Token(Token = "0x2000055")]
public class QVRSingletion<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string MonoSingletionName;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject MonoSingletionRoot;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isQuit;

	[Token(Token = "0x17000087")]
	public static T Instance
	{
		[Token(Token = "0x60003D5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D4")]
	public void Register()
	{
	}

	[Token(Token = "0x60003D6")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60003D7")]
	public virtual void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60003D8")]
	public QVRSingletion()
	{
	}
}
[Token(Token = "0x2000056")]
public class QVRSortOrder : MonoBehaviour
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int order;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isUI;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x2A5F79C", Offset = "0x2A5F79C", VA = "0x2A5F79C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x2A5F7A0", Offset = "0x2A5F7A0", VA = "0x2A5F7A0")]
	private void SetSortOrder()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x2A5F920", Offset = "0x2A5F920", VA = "0x2A5F920")]
	public QVRSortOrder()
	{
	}
}
[Token(Token = "0x2000057")]
public class QVREvent
{
	[Token(Token = "0x20001CE")]
	public delegate void EventCallBack(params object[] args);

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string TAG;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, EventCallBack> listeners;

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1484008", Offset = "0x1484008", VA = "0x1484008")]
	public static void AddListener(string message, EventCallBack callback)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x14842B0", Offset = "0x14842B0", VA = "0x14842B0")]
	public static void RemoveListener(string message, EventCallBack callback)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1487664", Offset = "0x1487664", VA = "0x1487664")]
	public static void Trigger(string message, params object[] args)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1487934", Offset = "0x1487934", VA = "0x1487934")]
	public QVREvent()
	{
	}
}
[Token(Token = "0x2000058")]
public class QVREventType
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string DEVICE_INPUT_EVENT;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string DEVICE_INPUT_EVENT_VALUE;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string CONTROLLER_LOADED;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string CONNECTION_CHANGE;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string CONTROLLER_INSTANCE_CHANGE;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string RAY_ONENTER;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string RAY_ONEXIT;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string GESTURE_CHANGE;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x148841C", Offset = "0x148841C", VA = "0x148841C")]
	public QVREventType()
	{
	}
}
[Token(Token = "0x2000059")]
internal class QVRMain : MonoBehaviour
{
	[Token(Token = "0x20001CF")]
	public enum ControllerInstanceType
	{
		[Token(Token = "0x4000A2F")]
		Controller,
		[Token(Token = "0x4000A30")]
		Hand
	}

	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB52E0", Offset = "0xAB52E0")]
	private sealed class <InitializeAfterSvr>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000230")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x100B174", Offset = "0x100B174", VA = "0x100B174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x100B1BC", Offset = "0x100B1BC", VA = "0x100B1BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x100B080", Offset = "0x100B080", VA = "0x100B080")]
		[DebuggerHidden]
		public <InitializeAfterSvr>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x100B0AC", Offset = "0x100B0AC", VA = "0x100B0AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x100B0B0", Offset = "0x100B0B0", VA = "0x100B0B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x100B17C", Offset = "0x100B17C", VA = "0x100B17C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static QVRMain instance;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isOneQVR;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool disabledHomeButtonQuit;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public QVRInputManager.InputModuleType currentInputModuleType;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lockHeadPositon;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool lockHeadRotation;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool showController;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool showControllerLaser;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private ControllerInstanceType controllerShowType;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private QVRControllerLoader leftControllerLoader;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private QVRControllerLoader rightControllerLoader;

	[Token(Token = "0x17000088")]
	public static QVRMain Instance
	{
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x148257C", Offset = "0x148257C", VA = "0x148257C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000089")]
	public ControllerInstanceType ControllerShowType
	{
		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x148C958", Offset = "0x148C958", VA = "0x148C958")]
		get
		{
			return default(ControllerInstanceType);
		}
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x148C960", Offset = "0x148C960", VA = "0x148C960")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public QVRControllerLoader LeftControllerLoader
	{
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x148C968", Offset = "0x148C968", VA = "0x148C968")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008B")]
	public QVRControllerLoader RightControllerLoader
	{
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x148C970", Offset = "0x148C970", VA = "0x148C970")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008C")]
	public QVRVisualBase LeftControllerMono
	{
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x1482F4C", Offset = "0x1482F4C", VA = "0x1482F4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008D")]
	public QVRVisualBase RightControllerMono
	{
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1482F64", Offset = "0x1482F64", VA = "0x1482F64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008E")]
	public Transform Head
	{
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x148CF24", Offset = "0x148CF24", VA = "0x148CF24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008F")]
	public bool Initialized
	{
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x148CF90", Offset = "0x148CF90", VA = "0x148CF90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000090")]
	public bool IsRunning
	{
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x148D018", Offset = "0x148D018", VA = "0x148D018")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000091")]
	public int Pose
	{
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x148D0A0", Offset = "0x148D0A0", VA = "0x148D0A0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x148C978", Offset = "0x148C978", VA = "0x148C978")]
	public void Awake()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x148CD7C", Offset = "0x148CD7C", VA = "0x148CD7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x148CE68", Offset = "0x148CE68", VA = "0x148CE68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABABB4", Offset = "0xABABB4")]
	private IEnumerator InitializeAfterSvr()
	{
		return null;
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x148CEC4", Offset = "0x148CEC4", VA = "0x148CEC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x148CEC8", Offset = "0x148CEC8", VA = "0x148CEC8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x148CECC", Offset = "0x148CECC", VA = "0x148CECC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x148D128", Offset = "0x148D128", VA = "0x148D128")]
	public void Recenter()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x148D194", Offset = "0x148D194", VA = "0x148D194")]
	public bool GetEventRayWorldValid(out Ray ray)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x148D2EC", Offset = "0x148D2EC", VA = "0x148D2EC")]
	public QVRMain()
	{
	}
}
[Token(Token = "0x200005A")]
public class QVRRaycaster : GraphicRaycaster
{
	[NonSerialized]
	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Canvas canvas_;

	[Token(Token = "0x17000092")]
	private Canvas canvas
	{
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x148E4B4", Offset = "0x148E4B4", VA = "0x148E4B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000093")]
	public override Camera eventCamera
	{
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x148E568", Offset = "0x148E568", VA = "0x148E568", Slot = "18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x148E584", Offset = "0x148E584", VA = "0x148E584", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x148E5BC", Offset = "0x148E5BC", VA = "0x148E5BC")]
	public QVRRaycaster()
	{
	}
}
[Token(Token = "0x200005B")]
public class QVRTrackedPoseDriver : MonoBehaviour
{
	[Token(Token = "0x20001D1")]
	public enum TrackPoseSource
	{
		[Token(Token = "0x4000A34")]
		Head,
		[Token(Token = "0x4000A35")]
		LeftController,
		[Token(Token = "0x4000A36")]
		RightController
	}

	[Token(Token = "0x20001D2")]
	public enum TrackType
	{
		[Token(Token = "0x4000A38")]
		Position,
		[Token(Token = "0x4000A39")]
		Rotaton,
		[Token(Token = "0x4000A3A")]
		PositionAndRotaton
	}

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackPoseSource poseSource;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TrackType trackingType;

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x2A5F930", Offset = "0x2A5F930", VA = "0x2A5F930")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x2A5FB50", Offset = "0x2A5FB50", VA = "0x2A5FB50")]
	public QVRTrackedPoseDriver()
	{
	}
}
[Token(Token = "0x200005C")]
public enum QVRMessageCode : uint
{
	[Token(Token = "0x400028D")]
	QiyuSdkInit,
	[Token(Token = "0x400028E")]
	End
}
[Token(Token = "0x200005D")]
public class QVRMessageListener
{
	[Token(Token = "0x20001D3")]
	public delegate void EventCallBack(params object[] args);

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string TAG;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<int, EventCallBack> listeners;

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1486FCC", Offset = "0x1486FCC", VA = "0x1486FCC")]
	public static void AddListener(QVRMessageCode messageCode, EventCallBack callback)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x148D2FC", Offset = "0x148D2FC", VA = "0x148D2FC")]
	public static void RemoveListener(QVRMessageCode messageCode, EventCallBack callback)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x148D43C", Offset = "0x148D43C", VA = "0x148D43C")]
	public static void Trigger(QVRMessageCode messageCode, params object[] args)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x148D70C", Offset = "0x148D70C", VA = "0x148D70C")]
	public QVRMessageListener()
	{
	}
}
[Token(Token = "0x200005E")]
public class ChangeFoveation : MonoBehaviour
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button btn;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text btnText;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int foveationLevel;

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x150E7DC", Offset = "0x150E7DC", VA = "0x150E7DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x150E958", Offset = "0x150E958", VA = "0x150E958")]
	private void ShowTest()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x150EA54", Offset = "0x150EA54", VA = "0x150EA54")]
	public ChangeFoveation()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x150EA64", Offset = "0x150EA64", VA = "0x150EA64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAC14", Offset = "0xABAC14")]
	private void <Start>b__3_0()
	{
	}
}
[Token(Token = "0x200005F")]
public class ChangeScene : MonoBehaviour
{
	[Token(Token = "0x6000407")]
	[Address(RVA = "0x150EB00", Offset = "0x150EB00", VA = "0x150EB00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x150EB04", Offset = "0x150EB04", VA = "0x150EB04")]
	public void GoScene(string sceneName)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x150EBCC", Offset = "0x150EBCC", VA = "0x150EBCC")]
	private void Update()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x150EC58", Offset = "0x150EC58", VA = "0x150EC58")]
	public ChangeScene()
	{
	}
}
[Token(Token = "0x2000060")]
public class DebugShow : MonoBehaviour
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugShow Instance;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text _showText;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> _showList;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x101B598", Offset = "0x101B598", VA = "0x101B598")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x101B62C", Offset = "0x101B62C", VA = "0x101B62C")]
	private void Start()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x101B76C", Offset = "0x101B76C", VA = "0x101B76C")]
	private void Update()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x101B86C", Offset = "0x101B86C", VA = "0x101B86C")]
	private void Add(string info)
	{
	}

	[Token(Token = "0x600040F")]
	public string GetEnumNameByKey<T>(int key)
	{
		return null;
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x101BA00", Offset = "0x101BA00", VA = "0x101BA00")]
	private void CONTROLLER_EVENT(object[] args)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x101BCE0", Offset = "0x101BCE0", VA = "0x101BCE0")]
	private void CONTROLLER_CHANGE(object[] args)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x101C054", Offset = "0x101C054", VA = "0x101C054")]
	private void RAY_ONENTER(object[] args)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x101C0FC", Offset = "0x101C0FC", VA = "0x101C0FC")]
	private void RAY_ONEXIT(object[] args)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x101C1A4", Offset = "0x101C1A4", VA = "0x101C1A4")]
	private void JOYSTICK_POS(object[] args)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x101C2F4", Offset = "0x101C2F4", VA = "0x101C2F4")]
	public DebugShow()
	{
	}
}
[Token(Token = "0x2000061")]
public class FPS : MonoBehaviour
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text textField;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_LastUpdateShowTime;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_UpdateShowDeltaTime;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_FrameUpdate;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_FPS;

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1025798", Offset = "0x1025798", VA = "0x1025798")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1025828", Offset = "0x1025828", VA = "0x1025828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1025850", Offset = "0x1025850", VA = "0x1025850")]
	private void Update()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1025A04", Offset = "0x1025A04", VA = "0x1025A04")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1025DAC", Offset = "0x1025DAC", VA = "0x1025DAC")]
	public FPS()
	{
	}
}
[Token(Token = "0x2000062")]
public class HandTest : MonoBehaviour
{
	[Token(Token = "0x20001D4")]
	public class VirtualButtonTest
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Text _text;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int count;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x1002DDC", Offset = "0x1002DDC", VA = "0x1002DDC")]
		public VirtualButtonTest()
		{
		}
	}

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject textTemplate;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform lHnadTR;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform rHnadTR;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, VirtualButtonTest> vbtDic;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x102887C", Offset = "0x102887C", VA = "0x102887C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x10289EC", Offset = "0x10289EC", VA = "0x10289EC")]
	private VirtualButtonTest GetObj(QVRInput.Controller controller, string name)
	{
		return null;
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x1028C30", Offset = "0x1028C30", VA = "0x1028C30")]
	private void Update()
	{
	}

	[Token(Token = "0x600041E")]
	public string GetEnumNameByKey<T>(int key)
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x102971C", Offset = "0x102971C", VA = "0x102971C")]
	private void CONTROLLER_EVENT(object[] args)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x10298FC", Offset = "0x10298FC", VA = "0x10298FC")]
	public HandTest()
	{
	}
}
[Token(Token = "0x2000063")]
public class QVRDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB52F0", Offset = "0xAB52F0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<QVRPlugin.QVRMessageResult<QVRPlugin.AppUpdateInfo>> <>9__1_2;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static QVRMessageListener.EventCallBack <>9__1_0;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<QVRPlugin.QVRMessageResult<QVRPlugin.QiyuAccountInfo>> <>9__1_1;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<QVRPlugin.QVRMessageResult<QVRPlugin.DeepLinkParam>> <>9__2_0;

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x100A710", Offset = "0x100A710", VA = "0x100A710")]
		public <>c()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x100A718", Offset = "0x100A718", VA = "0x100A718")]
		internal void <Start>b__1_0(object[] ret)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x100A918", Offset = "0x100A918", VA = "0x100A918")]
		internal void <Start>b__1_2(QVRPlugin.QVRMessageResult<QVRPlugin.AppUpdateInfo> msg1)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x100A96C", Offset = "0x100A96C", VA = "0x100A96C")]
		internal void <Start>b__1_1(QVRPlugin.QVRMessageResult<QVRPlugin.QiyuAccountInfo> msg)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x100AC00", Offset = "0x100AC00", VA = "0x100AC00")]
		internal void <LauncherApp>b__2_0(QVRPlugin.QVRMessageResult<QVRPlugin.DeepLinkParam> ret)
		{
		}
	}

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button btn;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1486CEC", Offset = "0x1486CEC", VA = "0x1486CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x14871B0", Offset = "0x14871B0", VA = "0x14871B0")]
	public void LauncherApp()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1487374", Offset = "0x1487374", VA = "0x1487374")]
	public void ChangeHand()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x1487400", Offset = "0x1487400", VA = "0x1487400")]
	private void Update()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1487428", Offset = "0x1487428", VA = "0x1487428")]
	public QVRDemo()
	{
	}
}
[Token(Token = "0x2000064")]
public class UIDepth : MonoBehaviour
{
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int order;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isUI;

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x170794C", Offset = "0x170794C", VA = "0x170794C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1707ACC", Offset = "0x1707ACC", VA = "0x1707ACC")]
	public UIDepth()
	{
	}
}
[Token(Token = "0x2000065")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x17000094")]
	public static bool Initialized
	{
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x1730078", Offset = "0x1730078", VA = "0x1730078")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1730080", Offset = "0x1730080", VA = "0x1730080")]
	public SteamManager()
	{
	}
}
namespace Qiyi.UI.InputField
{
	[Token(Token = "0x2000066")]
	public abstract class AbstractInputField : IVrInputField
	{
		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ICaret _caret;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IInputEventProcessor _inputEventProcessor;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ITextComponentWrapper _editableText;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IInputFieldController _controller;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color _selectionColor;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color _defaultColor;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _interactive;

		[Token(Token = "0x17000095")]
		protected virtual ITextComponentWrapper EditableText
		{
			[Token(Token = "0x600042A")]
			[Address(RVA = "0x14FB9C4", Offset = "0x14FB9C4", VA = "0x14FB9C4", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		protected virtual IInputFieldController InputFieldController
		{
			[Token(Token = "0x600042B")]
			[Address(RVA = "0x14FB9CC", Offset = "0x14FB9CC", VA = "0x14FB9CC", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		public virtual Color SelectionColor
		{
			[Token(Token = "0x600042C")]
			[Address(RVA = "0x14FB9D4", Offset = "0x14FB9D4", VA = "0x14FB9D4", Slot = "16")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600042D")]
			[Address(RVA = "0x14FB9E0", Offset = "0x14FB9E0", VA = "0x14FB9E0", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public virtual Color DefaultColor
		{
			[Token(Token = "0x600042E")]
			[Address(RVA = "0x14FB9EC", Offset = "0x14FB9EC", VA = "0x14FB9EC", Slot = "18")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600042F")]
			[Address(RVA = "0x14FB9F8", Offset = "0x14FB9F8", VA = "0x14FB9F8", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public virtual string TextValue
		{
			[Token(Token = "0x6000430")]
			[Address(RVA = "0x14FBA04", Offset = "0x14FBA04", VA = "0x14FBA04", Slot = "20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000431")]
			[Address(RVA = "0x14FBAB4", Offset = "0x14FBAB4", VA = "0x14FBAB4", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public string text
		{
			[Token(Token = "0x6000432")]
			[Address(RVA = "0x14FBBF4", Offset = "0x14FBBF4", VA = "0x14FBBF4", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000433")]
			[Address(RVA = "0x14FBC04", Offset = "0x14FBC04", VA = "0x14FBC04", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		protected virtual ICaret Caret
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0x14FBC14", Offset = "0x14FBC14", VA = "0x14FBC14", Slot = "22")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000435")]
			[Address(RVA = "0x14FBC1C", Offset = "0x14FBC1C", VA = "0x14FBC1C", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x14FBD00", Offset = "0x14FBD00", VA = "0x14FBD00")]
		protected AbstractInputField(ICaret caret, IInputEventProcessor inputEventProcessor, IInputFieldController controller, ITextComponentWrapper text)
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x14FBE04", Offset = "0x14FBE04", VA = "0x14FBE04", Slot = "24")]
		public virtual void DrawCaretOrSelection(ITextComponentWrapper text)
		{
		}

		[Token(Token = "0x6000438")]
		protected abstract void DrawSelection(ICaret caret, Color color, ITextComponentWrapper text, Vector2 offset);

		[Token(Token = "0x6000439")]
		protected abstract void DrawCaret(ICaret caret, Color color, ITextComponentWrapper text, Vector2 offset);

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x14FC10C", Offset = "0x14FC10C", VA = "0x14FC10C", Slot = "27")]
		public virtual void ProcessEvent(Event evt)
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x14FC344", Offset = "0x14FC344", VA = "0x14FC344", Slot = "28")]
		public virtual void ActivateInputField()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x14FC424", Offset = "0x14FC424", VA = "0x14FC424", Slot = "29")]
		public virtual void DeactivateInputField()
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x14FC4EC", Offset = "0x14FC4EC", VA = "0x14FC4EC", Slot = "30")]
		public virtual void FinishInput()
		{
		}

		[Token(Token = "0x600043E")]
		protected abstract string ProcessText(ITextComponentWrapper text, ICaret caret);

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x14FC5B8", Offset = "0x14FC5B8", VA = "0x14FC5B8", Slot = "32")]
		public virtual void UpdateText()
		{
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x14FC770", Offset = "0x14FC770", VA = "0x14FC770", Slot = "33")]
		public virtual bool IsInteractive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000441")]
		public abstract void OnPointerDown(PointerEventData eventData);

		[Token(Token = "0x6000442")]
		public abstract void OnDrag(PointerEventData eventData);
	}
	[Token(Token = "0x2000067")]
	public class BaseTextProcessor : IInputEventProcessor
	{
		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StringBuilder _processedText;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ICaretNavigator _caretNavigator;

		[Token(Token = "0x1700009C")]
		private static string _clipboard
		{
			[Token(Token = "0x6000443")]
			[Address(RVA = "0x15045A8", Offset = "0x15045A8", VA = "0x15045A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000444")]
			[Address(RVA = "0x15045B0", Offset = "0x15045B0", VA = "0x15045B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public string TextValue
		{
			[Token(Token = "0x6000445")]
			[Address(RVA = "0x15045B8", Offset = "0x15045B8", VA = "0x15045B8", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000446")]
			[Address(RVA = "0x15045D8", Offset = "0x15045D8", VA = "0x15045D8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x150464C", Offset = "0x150464C", VA = "0x150464C")]
		public BaseTextProcessor(StringBuilder textToProcess, ICaretNavigator receiver)
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x150469C", Offset = "0x150469C", VA = "0x150469C", Slot = "4")]
		public bool ProcessEvent(Event keyEvent, int caretIndex, int selectionIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x1505484", Offset = "0x1505484", VA = "0x1505484")]
		private bool HasSelection(int index, int selectionIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x1505490", Offset = "0x1505490", VA = "0x1505490", Slot = "8")]
		protected virtual bool HandleInputChar(StringBuilder text, int index, int selectionIndex, char c)
		{
			return default(bool);
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x1504968", Offset = "0x1504968", VA = "0x1504968")]
		private bool Ctrl(Event evt)
		{
			return default(bool);
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x15049E4", Offset = "0x15049E4", VA = "0x15049E4")]
		private bool Shift(Event evt)
		{
			return default(bool);
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x15049BC", Offset = "0x15049BC", VA = "0x15049BC")]
		private bool Alt(Event evt)
		{
			return default(bool);
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x1504C38", Offset = "0x1504C38", VA = "0x1504C38", Slot = "7")]
		public void SelectAll()
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x1504A0C", Offset = "0x1504A0C", VA = "0x1504A0C")]
		private void Backspace(StringBuilder text, int caretIndex, int selectionIndex)
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x150550C", Offset = "0x150550C", VA = "0x150550C")]
		private void Delete(StringBuilder text, int start, int end)
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x1504A34", Offset = "0x1504A34", VA = "0x1504A34")]
		private void ForwardSpace(StringBuilder text, int caretIndex, int selectionIndex)
		{
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x15056F0", Offset = "0x15056F0", VA = "0x15056F0")]
		private void Append(char c, int index)
		{
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x1504AA4", Offset = "0x1504AA4", VA = "0x1504AA4")]
		private void MoveTextStart(bool shift)
		{
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x1504B64", Offset = "0x1504B64", VA = "0x1504B64")]
		private void MoveTextEnd(bool shift)
		{
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x1504DC4", Offset = "0x1504DC4", VA = "0x1504DC4")]
		private string Copy(StringBuilder text, int start, int end)
		{
			return null;
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x1504D78", Offset = "0x1504D78", VA = "0x1504D78")]
		private void Cut(StringBuilder text, int start, int end)
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x1504E3C", Offset = "0x1504E3C", VA = "0x1504E3C")]
		private void Paste(StringBuilder text, int start, int end)
		{
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x1505604", Offset = "0x1505604", VA = "0x1505604")]
		private void Insert(StringBuilder text, char insert, int start)
		{
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x150504C", Offset = "0x150504C", VA = "0x150504C")]
		private void MoveRight(int index, int selectionIndex, bool shift)
		{
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x1504ED8", Offset = "0x1504ED8", VA = "0x1504ED8")]
		private void MoveLeft(int index, int selectionIndex, bool shift)
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x15051B4", Offset = "0x15051B4", VA = "0x15051B4")]
		private void MoveUp(int index, int selectionIndex, bool shift)
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x150531C", Offset = "0x150531C", VA = "0x150531C")]
		private void MoveDown(int index, int selectionIndex, bool shift)
		{
		}
	}
	[Token(Token = "0x2000068")]
	public class CaretNavigator : ICaretNavigator
	{
		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ICaret _caret;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ITextComponentWrapper _textWrapper;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IVrInputField _inputField;

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x150E1B8", Offset = "0x150E1B8", VA = "0x150E1B8")]
		public CaretNavigator(ICaret caret, ITextComponentWrapper text, IVrInputField inputField)
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x150E21C", Offset = "0x150E21C", VA = "0x150E21C", Slot = "4")]
		public void MoveCaretTo(int index, bool withSelection)
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x150E37C", Offset = "0x150E37C", VA = "0x150E37C", Slot = "7")]
		public void MoveDown(bool goToLastChar, bool withSelection)
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x150E4E0", Offset = "0x150E4E0", VA = "0x150E4E0", Slot = "5")]
		public void MoveLeft(bool withSelection)
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x150E5AC", Offset = "0x150E5AC", VA = "0x150E5AC", Slot = "6")]
		public void MoveRight(bool withSelection)
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x150E678", Offset = "0x150E678", VA = "0x150E678", Slot = "8")]
		public void MoveUp(bool goToFirstChar, bool withSelection)
		{
		}
	}
	[Token(Token = "0x2000069")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB47C8", Offset = "0xAB47C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB47C8", Offset = "0xAB47C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB47C8", Offset = "0xAB47C8")]
	public class DefaultCaret : MonoBehaviour, ICaret
	{
		[Token(Token = "0x20001D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5300", Offset = "0xAB5300")]
		private sealed class <CaretBlink>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DefaultCaret <>4__this;

			[Token(Token = "0x4000A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <timer>5__2;

			[Token(Token = "0x17000232")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DAA")]
				[Address(RVA = "0x1002818", Offset = "0x1002818", VA = "0x1002818", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000233")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DAC")]
				[Address(RVA = "0x1002860", Offset = "0x1002860", VA = "0x1002860", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x1002694", Offset = "0x1002694", VA = "0x1002694")]
			[DebuggerHidden]
			public <CaretBlink>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x10026C0", Offset = "0x10026C0", VA = "0x10026C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x10026C4", Offset = "0x10026C4", VA = "0x10026C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x1002820", Offset = "0x1002820", VA = "0x1002820", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _selectionAnchorIndex;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _index;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isVisible;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isVisibleTmp;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine _blinkCoroutine;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6BB4", Offset = "0xAB6BB4")]
		private IInputFieldController <InputFieldController>k__BackingField;

		[Token(Token = "0x1700009E")]
		public IInputFieldController InputFieldController
		{
			[Token(Token = "0x6000464")]
			[Address(RVA = "0x101EDDC", Offset = "0x101EDDC", VA = "0x101EDDC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAC34", Offset = "0xABAC34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000463")]
			[Address(RVA = "0x101EDD4", Offset = "0x101EDD4", VA = "0x101EDD4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAC24", Offset = "0xABAC24")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public CanvasRenderer CaretRenderer
		{
			[Token(Token = "0x6000468")]
			[Address(RVA = "0x101F074", Offset = "0x101F074", VA = "0x101F074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x101EDE4", Offset = "0x101EDE4", VA = "0x101EDE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x101F0C0", Offset = "0x101F0C0", VA = "0x101F0C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x101F154", Offset = "0x101F154", VA = "0x101F154")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x101F224", Offset = "0x101F224", VA = "0x101F224", Slot = "6")]
		public void ActivateCaret()
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x101F2E0", Offset = "0x101F2E0", VA = "0x101F2E0", Slot = "7")]
		public void DeactivateCaret()
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x101F0C4", Offset = "0x101F0C4", VA = "0x101F0C4", Slot = "11")]
		public void DestroyCaret()
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x101F3B8", Offset = "0x101F3B8", VA = "0x101F3B8")]
		private bool HasSelection()
		{
			return default(bool);
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x101F3C8", Offset = "0x101F3C8", VA = "0x101F3C8", Slot = "9")]
		public int GetIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x101F3D0", Offset = "0x101F3D0", VA = "0x101F3D0", Slot = "13")]
		public void MoveTo(int index, bool withSelection)
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x101F3F8", Offset = "0x101F3F8", VA = "0x101F3F8")]
		private void SetupCursorVertsPositions(ref UIVertex[] verts, Rect drawRect)
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x101F51C", Offset = "0x101F51C", VA = "0x101F51C", Slot = "12")]
		public bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x101F53C", Offset = "0x101F53C", VA = "0x101F53C", Slot = "8")]
		public void Draw(Rect drawRect, Color color, VertexHelper helper)
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x101F634", Offset = "0x101F634", VA = "0x101F634")]
		private void GenerateCursorOrSelection(VertexHelper helper, Rect drawRect, Color color)
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x101EF8C", Offset = "0x101EF8C", VA = "0x101EF8C")]
		private void AlignPosition(RectTransform textTransform, RectTransform caretTransform)
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x101F268", Offset = "0x101F268", VA = "0x101F268")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAC44", Offset = "0xABAC44")]
		private IEnumerator CaretBlink()
		{
			return null;
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x101F800", Offset = "0x101F800", VA = "0x101F800", Slot = "10")]
		public int GetSelectionIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x101F808", Offset = "0x101F808", VA = "0x101F808")]
		public DefaultCaret()
		{
		}
	}
	[Token(Token = "0x200006A")]
	public class EditableText : ITextComponentWrapper
	{
		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Text _textComponent;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextGenerator _rawTextGenerator;

		[Token(Token = "0x170000A0")]
		private TextGenerator DisplayedTextGenerator
		{
			[Token(Token = "0x6000477")]
			[Address(RVA = "0x10240CC", Offset = "0x10240CC", VA = "0x10240CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		private TextGenerator RawTextGenerator
		{
			[Token(Token = "0x6000478")]
			[Address(RVA = "0x10240E8", Offset = "0x10240E8", VA = "0x10240E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		public Rect DisplayRect
		{
			[Token(Token = "0x600047A")]
			[Address(RVA = "0x10241AC", Offset = "0x10241AC", VA = "0x10241AC", Slot = "5")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x170000A3")]
		public int DisplayedTextLength
		{
			[Token(Token = "0x600047B")]
			[Address(RVA = "0x10241D8", Offset = "0x10241D8", VA = "0x10241D8", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A4")]
		public int LineCount
		{
			[Token(Token = "0x600047C")]
			[Address(RVA = "0x102420C", Offset = "0x102420C", VA = "0x102420C", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x102415C", Offset = "0x102415C", VA = "0x102415C")]
		public EditableText(Text text, TextGenerator generator)
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x102422C", Offset = "0x102422C", VA = "0x102422C", Slot = "4")]
		public Vector2 MousePositionInTextRect(PointerEventData eventData)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x10242F4", Offset = "0x10242F4", VA = "0x10242F4", Slot = "12")]
		public void Populate(string text, GameObject context)
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x1024444", Offset = "0x1024444", VA = "0x1024444", Slot = "14")]
		public Vector2 CursorPositionAt(int relativeIndex)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x102458C", Offset = "0x102458C", VA = "0x102458C", Slot = "13")]
		public float CharWidth(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x1024664", Offset = "0x1024664", VA = "0x1024664")]
		private Vector2 RoundedTextPivotLocalPosition(Text textComponent)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x10247F0", Offset = "0x10247F0", VA = "0x10247F0")]
		private int LineFromPosition(Vector2 pos, TextGenerator generator)
		{
			return default(int);
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x1024A08", Offset = "0x1024A08", VA = "0x1024A08", Slot = "18")]
		public int RelativeIndexFromPosition(Vector2 pos)
		{
			return default(int);
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x1024CEC", Offset = "0x1024CEC", VA = "0x1024CEC", Slot = "10")]
		public int LineEndIndex(int line)
		{
			return default(int);
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x1024E8C", Offset = "0x1024E8C", VA = "0x1024E8C", Slot = "11")]
		public int LineStartIndex(int line)
		{
			return default(int);
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x1025008", Offset = "0x1025008", VA = "0x1025008", Slot = "8")]
		public float LineHeight(int line)
		{
			return default(float);
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x1025104", Offset = "0x1025104", VA = "0x1025104", Slot = "9")]
		public float LineTop(int line)
		{
			return default(float);
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x10251DC", Offset = "0x10251DC", VA = "0x10251DC", Slot = "15")]
		public Vector2 CaretOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x10251E4", Offset = "0x10251E4", VA = "0x10251E4", Slot = "17")]
		public int GetLineByCharIndex(int caretIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x102530C", Offset = "0x102530C", VA = "0x102530C", Slot = "19")]
		public int LineDownIndex(bool goToLastChar, int index)
		{
			return default(int);
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x10255A0", Offset = "0x10255A0", VA = "0x10255A0", Slot = "20")]
		public int LineUpIndex(bool goToFirstChar, int index)
		{
			return default(int);
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x1025774", Offset = "0x1025774", VA = "0x1025774", Slot = "16")]
		public void UpdateDisplayText(string text)
		{
		}
	}
	[Token(Token = "0x200006B")]
	public interface ICaret
	{
		[Token(Token = "0x170000A5")]
		IInputFieldController InputFieldController
		{
			[Token(Token = "0x600048D")]
			get;
			[Token(Token = "0x600048E")]
			set;
		}

		[Token(Token = "0x600048F")]
		void ActivateCaret();

		[Token(Token = "0x6000490")]
		void DeactivateCaret();

		[Token(Token = "0x6000491")]
		void Draw(Rect drawRect, Color color, VertexHelper helper);

		[Token(Token = "0x6000492")]
		int GetIndex();

		[Token(Token = "0x6000493")]
		int GetSelectionIndex();

		[Token(Token = "0x6000494")]
		void DestroyCaret();

		[Token(Token = "0x6000495")]
		bool IsVisible();

		[Token(Token = "0x6000496")]
		void MoveTo(int index, bool withSelection);
	}
	[Token(Token = "0x200006C")]
	public interface ICaretNavigator
	{
		[Token(Token = "0x6000497")]
		void MoveCaretTo(int index, bool withSelection);

		[Token(Token = "0x6000498")]
		void MoveLeft(bool withSelection);

		[Token(Token = "0x6000499")]
		void MoveRight(bool withSelection);

		[Token(Token = "0x600049A")]
		void MoveDown(bool goToLastChar, bool withSelection);

		[Token(Token = "0x600049B")]
		void MoveUp(bool goToFistChar, bool withSelection);
	}
	[Token(Token = "0x200006D")]
	public interface IInputEventProcessor
	{
		[Token(Token = "0x170000A6")]
		string TextValue
		{
			[Token(Token = "0x600049E")]
			get;
			[Token(Token = "0x600049D")]
			set;
		}

		[Token(Token = "0x600049C")]
		bool ProcessEvent(Event keyEvent, int caretIndex, int selectionIndex);

		[Token(Token = "0x600049F")]
		void SelectAll();
	}
	[Token(Token = "0x200006E")]
	public interface IInputFieldController
	{
		[Token(Token = "0x60004A0")]
		void MarkGeometryAsDirty();

		[Token(Token = "0x60004A1")]
		void OnEndInput(string text);

		[Token(Token = "0x60004A2")]
		void UpdateDisplayText(string text);

		[Token(Token = "0x60004A3")]
		void PopulateText(string text);
	}
	[Token(Token = "0x200006F")]
	public interface ITextComponentWrapper
	{
		[Token(Token = "0x170000A7")]
		Rect DisplayRect
		{
			[Token(Token = "0x60004A5")]
			get;
		}

		[Token(Token = "0x170000A8")]
		int DisplayedTextLength
		{
			[Token(Token = "0x60004A6")]
			get;
		}

		[Token(Token = "0x170000A9")]
		int LineCount
		{
			[Token(Token = "0x60004A7")]
			get;
		}

		[Token(Token = "0x60004A4")]
		Vector2 MousePositionInTextRect(PointerEventData eventData);

		[Token(Token = "0x60004A8")]
		float LineHeight(int line);

		[Token(Token = "0x60004A9")]
		float LineTop(int line);

		[Token(Token = "0x60004AA")]
		int LineEndIndex(int line);

		[Token(Token = "0x60004AB")]
		int LineStartIndex(int line);

		[Token(Token = "0x60004AC")]
		void Populate(string text, GameObject context);

		[Token(Token = "0x60004AD")]
		float CharWidth(int index);

		[Token(Token = "0x60004AE")]
		Vector2 CursorPositionAt(int relativeIndex);

		[Token(Token = "0x60004AF")]
		Vector2 CaretOffset();

		[Token(Token = "0x60004B0")]
		void UpdateDisplayText(string text);

		[Token(Token = "0x60004B1")]
		int GetLineByCharIndex(int index);

		[Token(Token = "0x60004B2")]
		int RelativeIndexFromPosition(Vector2 position);

		[Token(Token = "0x60004B3")]
		int LineDownIndex(bool goToLastChar, int currentIndex);

		[Token(Token = "0x60004B4")]
		int LineUpIndex(bool goToFirstChar, int currentIndex);
	}
	[Token(Token = "0x2000070")]
	public interface IVrInputField
	{
		[Token(Token = "0x170000AA")]
		string TextValue
		{
			[Token(Token = "0x60004B5")]
			get;
			[Token(Token = "0x60004B6")]
			set;
		}

		[Token(Token = "0x170000AB")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xABD0EC", Offset = "0xABD0EC")]
		string text
		{
			[Token(Token = "0x60004B7")]
			get;
			[Token(Token = "0x60004B8")]
			set;
		}

		[Token(Token = "0x60004B9")]
		void ProcessEvent(Event evt);

		[Token(Token = "0x60004BA")]
		void ActivateInputField();

		[Token(Token = "0x60004BB")]
		void DeactivateInputField();

		[Token(Token = "0x60004BC")]
		void FinishInput();

		[Token(Token = "0x60004BD")]
		void UpdateText();

		[Token(Token = "0x60004BE")]
		bool IsInteractive();
	}
	[Token(Token = "0x2000071")]
	public class MultiLineInputFieldImpl : AbstractInputField
	{
		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color _selectionColor;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _drawStart;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _drawEnd;

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x170FB1C", Offset = "0x170FB1C", VA = "0x170FB1C")]
		public MultiLineInputFieldImpl(ICaret caret, IInputEventProcessor inputEventProcessor, IInputFieldController controller, ITextComponentWrapper text)
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x170FBB0", Offset = "0x170FBB0", VA = "0x170FBB0", Slot = "31")]
		protected override string ProcessText(ITextComponentWrapper text, ICaret caret)
		{
			return null;
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x1710580", Offset = "0x1710580", VA = "0x1710580", Slot = "25")]
		protected override void DrawSelection(ICaret caret, Color color, ITextComponentWrapper text, Vector2 offset)
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x1711114", Offset = "0x1711114", VA = "0x1711114", Slot = "26")]
		protected override void DrawCaret(ICaret caret, Color color, ITextComponentWrapper text, Vector2 offset)
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x171089C", Offset = "0x171089C", VA = "0x171089C")]
		private List<Rect> CalculateSelectionRects(ICaret caret, ITextComponentWrapper text, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x17115C0", Offset = "0x17115C0", VA = "0x17115C0")]
		private Rect HightedLineRect(int startIndex, int endIndex, float height, ITextComponentWrapper text)
		{
			return default(Rect);
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x17117BC", Offset = "0x17117BC", VA = "0x17117BC", Slot = "34")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x17119E4", Offset = "0x17119E4", VA = "0x17119E4", Slot = "35")]
		public override void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x17113D8", Offset = "0x17113D8", VA = "0x17113D8")]
		private Rect CalculateCaretDrawRect(ITextComponentWrapper text, Vector2 offset, int relativeIndex)
		{
			return default(Rect);
		}
	}
	[Token(Token = "0x2000072")]
	internal static class SetPropertyUtility
	{
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x2A69984", Offset = "0x2A69984", VA = "0x2A69984")]
		public static bool SetColor(ref Color currentValue, Color newValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60004C9")]
		public static bool SetStruct<T>(ref T currentValue, T newValue) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x60004CA")]
		public static bool SetClass<T>(ref T currentValue, T newValue) where T : class
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000073")]
	public class SingleLineInputProcessor : BaseTextProcessor
	{
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x2A71190", Offset = "0x2A71190", VA = "0x2A71190")]
		public SingleLineInputProcessor(StringBuilder textToProcess, ICaretNavigator receiver)
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x2A71198", Offset = "0x2A71198", VA = "0x2A71198", Slot = "8")]
		protected override bool HandleInputChar(StringBuilder text, int index, int selectionIndex, char c)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000074")]
	public class VrInputField : Selectable, IVrInputField, ICanvasElement, IUpdateSelectedHandler, IEventSystemHandler, IInputFieldController, IDragHandler, ISelectHandler, IDeselectHandler, IPointerClickHandler
	{
		[Token(Token = "0x20001D7")]
		private enum LineType
		{
			[Token(Token = "0x4000A48")]
			SingleLine,
			[Token(Token = "0x4000A49")]
			MultiLine
		}

		[Serializable]
		[Token(Token = "0x20001D8")]
		public class OnValueChangedEvent : UnityEvent<string>
		{
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x1017888", Offset = "0x1017888", VA = "0x1017888")]
			public OnValueChangedEvent()
			{
			}
		}

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string ReginFormat_Num;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Text _textComponent;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject _placeHolder;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Color _selectionColor;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private LineType _lineType;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private int _characterLimit;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private SGImeInputType sgImeInputType;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private SGImeTextType sgImeTextType;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private string _regexFormat;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public OnValueChangedEvent onValueChanged;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AbstractInputField _impl;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private ITextComponentWrapper _editableText;

		[Token(Token = "0x170000AC")]
		public int CharacterLimit
		{
			[Token(Token = "0x60004CD")]
			[Address(RVA = "0xFFCE70", Offset = "0xFFCE70", VA = "0xFFCE70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004CE")]
			[Address(RVA = "0xFFCE78", Offset = "0xFFCE78", VA = "0xFFCE78")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public string RegexFormat
		{
			[Token(Token = "0x60004CF")]
			[Address(RVA = "0xFFCF14", Offset = "0xFFCF14", VA = "0xFFCF14")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D0")]
			[Address(RVA = "0xFFCF1C", Offset = "0xFFCF1C", VA = "0xFFCF1C")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		private AbstractInputField Impl
		{
			[Token(Token = "0x60004D1")]
			[Address(RVA = "0xFFCF2C", Offset = "0xFFCF2C", VA = "0xFFCF2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		public string TextValue
		{
			[Token(Token = "0x60004D2")]
			[Address(RVA = "0xFFD1D8", Offset = "0xFFD1D8", VA = "0xFFD1D8", Slot = "39")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0xFFD21C", Offset = "0xFFD21C", VA = "0xFFD21C", Slot = "40")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public string text
		{
			[Token(Token = "0x60004D4")]
			[Address(RVA = "0xFFD2C8", Offset = "0xFFD2C8", VA = "0xFFD2C8", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D5")]
			[Address(RVA = "0xFFD2CC", Offset = "0xFFD2CC", VA = "0xFFD2CC", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xFFD2D0", Offset = "0xFFD2D0", VA = "0xFFD2D0", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xFFD3AC", Offset = "0xFFD3AC", VA = "0xFFD3AC", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xFFD2F8", Offset = "0xFFD2F8", VA = "0xFFD2F8", Slot = "44")]
		public void ActivateInputField()
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xFFD3B4", Offset = "0xFFD3B4", VA = "0xFFD3B4", Slot = "45")]
		public void DeactivateInputField()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xFFD3D0", Offset = "0xFFD3D0", VA = "0xFFD3D0", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xFFD494", Offset = "0xFFD494", VA = "0xFFD494", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xFFD5B0", Offset = "0xFFD5B0", VA = "0xFFD5B0", Slot = "48")]
		public bool IsInteractive()
		{
			return default(bool);
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xFFD618", Offset = "0xFFD618", VA = "0xFFD618", Slot = "46")]
		public void FinishInput()
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xFFD65C", Offset = "0xFFD65C", VA = "0xFFD65C", Slot = "43")]
		public void ProcessEvent(Event evt)
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xFFCF5C", Offset = "0xFFCF5C", VA = "0xFFCF5C")]
		private void initialize()
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xFFD79C", Offset = "0xFFD79C", VA = "0xFFD79C")]
		private ICaret CreateCaret()
		{
			return null;
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xFFD40C", Offset = "0xFFD40C", VA = "0xFFD40C")]
		public void RegisterTextComponentDirtyCallbacks(Text textComponent)
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xFFD528", Offset = "0xFFD528", VA = "0xFFD528")]
		public void UnregisterTextComponentDirtyCallbacks(Text textComponent)
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xFFDB28", Offset = "0xFFDB28", VA = "0xFFDB28", Slot = "55")]
		public void MarkGeometryAsDirty()
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xFFDB8C", Offset = "0xFFDB8C", VA = "0xFFDB8C", Slot = "49")]
		public void Rebuild(CanvasUpdate executing)
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xFFDBE8", Offset = "0xFFDBE8", VA = "0xFFDBE8", Slot = "51")]
		public void LayoutComplete()
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xFFDBEC", Offset = "0xFFDBEC", VA = "0xFFDBEC", Slot = "52")]
		public void GraphicUpdateComplete()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xFFDBF0", Offset = "0xFFDBF0", VA = "0xFFDBF0", Slot = "47")]
		public void UpdateText()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xFFDC34", Offset = "0xFFDC34", VA = "0xFFDC34", Slot = "58")]
		public void PopulateText(string text)
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xFFDD10", Offset = "0xFFDD10", VA = "0xFFDD10", Slot = "54")]
		public void OnUpdateSelected(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xFFDD14", Offset = "0xFFDD14", VA = "0xFFDD14", Slot = "57")]
		public void UpdateDisplayText(string text)
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xFFDE54", Offset = "0xFFDE54", VA = "0xFFDE54", Slot = "56")]
		public void OnEndInput(string text)
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xFFDE58", Offset = "0xFFDE58", VA = "0xFFDE58")]
		public void RegisterTextComponentDirtyCallbacks()
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xFFDE60", Offset = "0xFFDE60", VA = "0xFFDE60", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xFFDF40", Offset = "0xFFDF40", VA = "0xFFDF40", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xFFDED8", Offset = "0xFFDED8", VA = "0xFFDED8")]
		private bool AcceptPointerEvent(PointerEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xFFE09C", Offset = "0xFFE09C", VA = "0xFFE09C", Slot = "59")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xFFE0FC", Offset = "0xFFE0FC", VA = "0xFFE0FC", Slot = "60")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xFFE10C", Offset = "0xFFE10C", VA = "0xFFE10C")]
		public VrInputField()
		{
		}

		[SpecialName]
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xFFE220", Offset = "0xFFE220", VA = "0xFFE220", Slot = "50")]
		private Transform UnityEngine.UI.ICanvasElement.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x2000075")]
	public class VrInputFieldImpl : AbstractInputField
	{
		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _drawStart;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _drawEnd;

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xFFDB20", Offset = "0xFFDB20", VA = "0xFFDB20")]
		public VrInputFieldImpl(ICaret caret, IInputEventProcessor inputEventProcessor, IInputFieldController controller, ITextComponentWrapper editableText)
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xFFE228", Offset = "0xFFE228", VA = "0xFFE228", Slot = "31")]
		protected override string ProcessText(ITextComponentWrapper editableText, ICaret caret)
		{
			return null;
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xFFE7B8", Offset = "0xFFE7B8", VA = "0xFFE7B8")]
		private Rect CalculateCaretDrawRect(ITextComponentWrapper text, Vector2 offset, int index, int selectionIndex)
		{
			return default(Rect);
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xFFE9C8", Offset = "0xFFE9C8", VA = "0xFFE9C8")]
		private int LocalIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xFFEA98", Offset = "0xFFEA98", VA = "0xFFEA98")]
		private int LocalSelectionIndex(ITextComponentWrapper text)
		{
			return default(int);
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xFFEC04", Offset = "0xFFEC04", VA = "0xFFEC04", Slot = "25")]
		protected override void DrawSelection(ICaret caret, Color color, ITextComponentWrapper text, Vector2 offset)
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xFFEE94", Offset = "0xFFEE94", VA = "0xFFEE94", Slot = "26")]
		protected override void DrawCaret(ICaret caret, Color color, ITextComponentWrapper text, Vector2 offset)
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xFFF124", Offset = "0xFFF124", VA = "0xFFF124", Slot = "34")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xFFF3C8", Offset = "0xFFF3C8", VA = "0xFFF3C8", Slot = "35")]
		public override void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xFFF2BC", Offset = "0xFFF2BC", VA = "0xFFF2BC")]
		private void MoveCaretWithinBounds(int index, bool withSelection)
		{
		}
	}
}
namespace Qiyi.InputMethod
{
	[Token(Token = "0x2000076")]
	public sealed class CandidateInfo
	{
		[Token(Token = "0x20001D9")]
		public class Builder
		{
			[Token(Token = "0x4000A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string _word;

			[Token(Token = "0x4000A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string _pinyin;

			[Token(Token = "0x4000A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int _pageNumber;

			[Token(Token = "0x4000A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int _indexInPage;

			[Token(Token = "0x4000A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _matchLength;

			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x10012B0", Offset = "0x10012B0", VA = "0x10012B0")]
			public Builder Word(string word)
			{
				return null;
			}

			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x10012D8", Offset = "0x10012D8", VA = "0x10012D8")]
			public Builder Pinyin(string pinyin)
			{
				return null;
			}

			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x1001300", Offset = "0x1001300", VA = "0x1001300")]
			public Builder PageNumber(int pageNumber)
			{
				return null;
			}

			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x1001308", Offset = "0x1001308", VA = "0x1001308")]
			public Builder IndexInPage(int index)
			{
				return null;
			}

			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x1001310", Offset = "0x1001310", VA = "0x1001310")]
			public Builder MatchLength(int matchLength)
			{
				return null;
			}

			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x1001318", Offset = "0x1001318", VA = "0x1001318")]
			public CandidateInfo Build()
			{
				return null;
			}

			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x10013B4", Offset = "0x10013B4", VA = "0x10013B4")]
			public Builder()
			{
			}
		}

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CandidateInfo NONE;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6C44", Offset = "0xAB6C44")]
		private string <Word>k__BackingField;

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6C54", Offset = "0xAB6C54")]
		private string <Pinyin>k__BackingField;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6C64", Offset = "0xAB6C64")]
		private int <PageNumber>k__BackingField;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6C74", Offset = "0xAB6C74")]
		private int <IndexInPage>k__BackingField;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6C84", Offset = "0xAB6C84")]
		private int <MatchLength>k__BackingField;

		[Token(Token = "0x170000B1")]
		public string Word
		{
			[Token(Token = "0x6000500")]
			[Address(RVA = "0x150C0B4", Offset = "0x150C0B4", VA = "0x150C0B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABACB4", Offset = "0xABACB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004FF")]
			[Address(RVA = "0x150C0AC", Offset = "0x150C0AC", VA = "0x150C0AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABACA4", Offset = "0xABACA4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public string Pinyin
		{
			[Token(Token = "0x6000502")]
			[Address(RVA = "0x150C0C4", Offset = "0x150C0C4", VA = "0x150C0C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABACD4", Offset = "0xABACD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000501")]
			[Address(RVA = "0x150C0BC", Offset = "0x150C0BC", VA = "0x150C0BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABACC4", Offset = "0xABACC4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public int PageNumber
		{
			[Token(Token = "0x6000504")]
			[Address(RVA = "0x150C0D4", Offset = "0x150C0D4", VA = "0x150C0D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABACF4", Offset = "0xABACF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000503")]
			[Address(RVA = "0x150C0CC", Offset = "0x150C0CC", VA = "0x150C0CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABACE4", Offset = "0xABACE4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public int IndexInPage
		{
			[Token(Token = "0x6000506")]
			[Address(RVA = "0x150C0E4", Offset = "0x150C0E4", VA = "0x150C0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAD14", Offset = "0xABAD14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000505")]
			[Address(RVA = "0x150C0DC", Offset = "0x150C0DC", VA = "0x150C0DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAD04", Offset = "0xABAD04")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public int MatchLength
		{
			[Token(Token = "0x6000508")]
			[Address(RVA = "0x150C0F4", Offset = "0x150C0F4", VA = "0x150C0F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAD34", Offset = "0xABAD34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000507")]
			[Address(RVA = "0x150C0EC", Offset = "0x150C0EC", VA = "0x150C0EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAD24", Offset = "0xABAD24")]
			private set
			{
			}
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x150C0FC", Offset = "0x150C0FC", VA = "0x150C0FC")]
		private CandidateInfo()
		{
		}
	}
	[Token(Token = "0x2000077")]
	internal class CandidateSource : ICandidateSource
	{
		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _globalIndex;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Page> _pages;

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x150DE50", Offset = "0x150DE50", VA = "0x150DE50", Slot = "7")]
		public List<Page> GetPages()
		{
			return null;
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x150DE58", Offset = "0x150DE58", VA = "0x150DE58", Slot = "4")]
		public CandidateInfo GetNextCandidate(Func<CandidateInfo> RequestMorePage)
		{
			return null;
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x150E018", Offset = "0x150E018", VA = "0x150E018", Slot = "6")]
		public void Clear()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x150E070", Offset = "0x150E070", VA = "0x150E070", Slot = "5")]
		public bool AddPage(Page page)
		{
			return default(bool);
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x150E134", Offset = "0x150E134", VA = "0x150E134")]
		public CandidateSource()
		{
		}
	}
	[Token(Token = "0x2000078")]
	internal class DummyIMProvider : IInputMethodProvider
	{
		[Token(Token = "0x40002D1")]
		private const uint PAGE_SIZE = 48u;

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1022F3C", Offset = "0x1022F3C", VA = "0x1022F3C", Slot = "4")]
		public void Initialize(Action OnSuccess, Action OnFail, MonoBehaviour monoObject)
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x1022F58", Offset = "0x1022F58", VA = "0x1022F58", Slot = "5")]
		public void ShutDown()
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x1022F5C", Offset = "0x1022F5C", VA = "0x1022F5C", Slot = "6")]
		public Page Convert(string input)
		{
			return null;
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x10231B4", Offset = "0x10231B4", VA = "0x10231B4", Slot = "7")]
		public Page HandleSelection(string compositionString, int pageNumber, int selectedIndexInPage)
		{
			return null;
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x10235BC", Offset = "0x10235BC", VA = "0x10235BC", Slot = "8")]
		public Page PageDown()
		{
			return null;
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x1023214", Offset = "0x1023214", VA = "0x1023214")]
		private Page WordPrediction(int pageNumber, int indexInPage)
		{
			return null;
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x102304C", Offset = "0x102304C", VA = "0x102304C")]
		private List<CandidateInfo> GetCandidates(int count, int pageNumber, string pinyin)
		{
			return null;
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x10236A4", Offset = "0x10236A4", VA = "0x10236A4")]
		public DummyIMProvider()
		{
		}
	}
	[Token(Token = "0x2000079")]
	internal interface ICandidateSource
	{
		[Token(Token = "0x6000518")]
		CandidateInfo GetNextCandidate(Func<CandidateInfo> OnRunOut);

		[Token(Token = "0x6000519")]
		bool AddPage(Page page);

		[Token(Token = "0x600051A")]
		void Clear();

		[Token(Token = "0x600051B")]
		List<Page> GetPages();
	}
	[Token(Token = "0x200007A")]
	internal interface IInputMethodProvider
	{
		[Token(Token = "0x600051C")]
		void Initialize(Action OnSuccess, Action OnFail, MonoBehaviour monoObject);

		[Token(Token = "0x600051D")]
		void ShutDown();

		[Token(Token = "0x600051E")]
		Page Convert(string input);

		[Token(Token = "0x600051F")]
		Page HandleSelection(string compositionString, int pageNumber, int selectedIndexInPage);

		[Token(Token = "0x6000520")]
		Page PageDown();
	}
	[Token(Token = "0x200007B")]
	public interface IInputMethodView
	{
		[Token(Token = "0x6000521")]
		MonoBehaviour GetMonoContext();

		[Token(Token = "0x6000522")]
		void InitFail();

		[Token(Token = "0x6000523")]
		void InitSuccess();
	}
	[Token(Token = "0x200007C")]
	internal class InputMethod : MonoBehaviour, IInputMethodView
	{
		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int MAX_INPUT_LENGTH;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static InputMethod _instance;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6C94", Offset = "0xAB6C94")]
		private InputMethodImpl <Impl>k__BackingField;

		[Token(Token = "0x170000B6")]
		private InputMethodImpl Impl
		{
			[Token(Token = "0x6000525")]
			[Address(RVA = "0x1629DA8", Offset = "0x1629DA8", VA = "0x1629DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAD54", Offset = "0xABAD54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000524")]
			[Address(RVA = "0x1629DA0", Offset = "0x1629DA0", VA = "0x1629DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAD44", Offset = "0xABAD44")]
			set
			{
			}
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x1629DB0", Offset = "0x1629DB0", VA = "0x1629DB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x162A0EC", Offset = "0x162A0EC", VA = "0x162A0EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x162A218", Offset = "0x162A218", VA = "0x162A218", Slot = "4")]
		public MonoBehaviour GetMonoContext()
		{
			return null;
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x162A21C", Offset = "0x162A21C", VA = "0x162A21C", Slot = "5")]
		public void InitFail()
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x162A220", Offset = "0x162A220", VA = "0x162A220", Slot = "6")]
		public void InitSuccess()
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x162A28C", Offset = "0x162A28C", VA = "0x162A28C")]
		public static bool HandleInput(string input)
		{
			return default(bool);
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x162A58C", Offset = "0x162A58C", VA = "0x162A58C")]
		public static bool HandleSelection(string compositionString, int pageNumber, int indexInPage)
		{
			return default(bool);
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x162A8C0", Offset = "0x162A8C0", VA = "0x162A8C0")]
		public static CandidateInfo GetCandidate()
		{
			return null;
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x162AB08", Offset = "0x162AB08", VA = "0x162AB08")]
		public static string GetPinyinSep(int page, int index)
		{
			return null;
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x162AEB4", Offset = "0x162AEB4", VA = "0x162AEB4")]
		public InputMethod()
		{
		}
	}
	[Token(Token = "0x200007D")]
	internal class InputMethodImpl
	{
		[Token(Token = "0x20001DA")]
		private static class IMComponentFactory
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x1005DB8", Offset = "0x1005DB8", VA = "0x1005DB8")]
			internal static IInputMethodProvider CreateIMProvider()
			{
				return null;
			}

			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x1005E10", Offset = "0x1005E10", VA = "0x1005E10")]
			internal static ICandidateSource CreateCandidateSource()
			{
				return null;
			}
		}

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IInputMethodProvider _imProvider;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ICandidateSource _candidateSource;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IInputMethodView _view;

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x1629EF4", Offset = "0x1629EF4", VA = "0x1629EF4")]
		public InputMethodImpl(IInputMethodView view)
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x162AF0C", Offset = "0x162AF0C", VA = "0x162AF0C")]
		private void OnInitSuccess()
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x162B02C", Offset = "0x162B02C", VA = "0x162B02C")]
		private void OnInitFail()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x162B128", Offset = "0x162B128", VA = "0x162B128")]
		private CandidateInfo OnRunOut()
		{
			return null;
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x162B1AC", Offset = "0x162B1AC", VA = "0x162B1AC")]
		private bool PageDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x162A168", Offset = "0x162A168", VA = "0x162A168")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x162AC78", Offset = "0x162AC78", VA = "0x162AC78")]
		public string GetPinyinSep(int page, int index)
		{
			return null;
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x162A3D8", Offset = "0x162A3D8", VA = "0x162A3D8")]
		public bool HandleInput(string input)
		{
			return default(bool);
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x162A6F4", Offset = "0x162A6F4", VA = "0x162A6F4")]
		public bool HandleSelection(string compositionString, int pageNumber, int indexInPage)
		{
			return default(bool);
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x162A9F8", Offset = "0x162A9F8", VA = "0x162A9F8")]
		public CandidateInfo GetCandidate()
		{
			return null;
		}
	}
	[Token(Token = "0x200007E")]
	internal class Page
	{
		[Token(Token = "0x20001DB")]
		public class Builder
		{
			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _pageSize;

			[Token(Token = "0x4000A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool _hasNextPage;

			[Token(Token = "0x4000A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			private bool _hasPrevPage;

			[Token(Token = "0x4000A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string _input;

			[Token(Token = "0x4000A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int _pageNumber;

			[Token(Token = "0x4000A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<CandidateInfo> _candidates;

			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x1008964", Offset = "0x1008964", VA = "0x1008964")]
			public Builder PageSize(int pageSize)
			{
				return null;
			}

			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x100896C", Offset = "0x100896C", VA = "0x100896C")]
			public Builder HasNextPage(bool hasNextPage)
			{
				return null;
			}

			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x1008978", Offset = "0x1008978", VA = "0x1008978")]
			public Builder HasPrevPage(bool hasPrevPage)
			{
				return null;
			}

			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x1008984", Offset = "0x1008984", VA = "0x1008984")]
			public Builder Input(string input)
			{
				return null;
			}

			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x10089AC", Offset = "0x10089AC", VA = "0x10089AC")]
			public Builder Candidates(List<CandidateInfo> candidates)
			{
				return null;
			}

			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x10089D4", Offset = "0x10089D4", VA = "0x10089D4")]
			public Builder PageNumber(int num)
			{
				return null;
			}

			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x10089DC", Offset = "0x10089DC", VA = "0x10089DC")]
			public Page Build()
			{
				return null;
			}

			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x1008A80", Offset = "0x1008A80", VA = "0x1008A80")]
			public Builder()
			{
			}
		}

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Page EMPTY;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6CA4", Offset = "0xAB6CA4")]
		private int <PageSize>k__BackingField;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6CB4", Offset = "0xAB6CB4")]
		private bool <HasNextPage>k__BackingField;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6CC4", Offset = "0xAB6CC4")]
		private bool <HasPrevPage>k__BackingField;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6CD4", Offset = "0xAB6CD4")]
		private string <Input>k__BackingField;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6CE4", Offset = "0xAB6CE4")]
		private int <PageNumber>k__BackingField;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6CF4", Offset = "0xAB6CF4")]
		private List<CandidateInfo> <Candidates>k__BackingField;

		[Token(Token = "0x170000B7")]
		public int PageSize
		{
			[Token(Token = "0x600053C")]
			[Address(RVA = "0x1477540", Offset = "0x1477540", VA = "0x1477540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAD74", Offset = "0xABAD74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600053B")]
			[Address(RVA = "0x1477538", Offset = "0x1477538", VA = "0x1477538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAD64", Offset = "0xABAD64")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public bool HasNextPage
		{
			[Token(Token = "0x600053E")]
			[Address(RVA = "0x1477554", Offset = "0x1477554", VA = "0x1477554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAD94", Offset = "0xABAD94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600053D")]
			[Address(RVA = "0x1477548", Offset = "0x1477548", VA = "0x1477548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAD84", Offset = "0xABAD84")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public bool HasPrevPage
		{
			[Token(Token = "0x6000540")]
			[Address(RVA = "0x1477568", Offset = "0x1477568", VA = "0x1477568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABADB4", Offset = "0xABADB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600053F")]
			[Address(RVA = "0x147755C", Offset = "0x147755C", VA = "0x147755C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABADA4", Offset = "0xABADA4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public string Input
		{
			[Token(Token = "0x6000542")]
			[Address(RVA = "0x1477578", Offset = "0x1477578", VA = "0x1477578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABADD4", Offset = "0xABADD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000541")]
			[Address(RVA = "0x1477570", Offset = "0x1477570", VA = "0x1477570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABADC4", Offset = "0xABADC4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public int PageNumber
		{
			[Token(Token = "0x6000544")]
			[Address(RVA = "0x1477588", Offset = "0x1477588", VA = "0x1477588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABADF4", Offset = "0xABADF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000543")]
			[Address(RVA = "0x1477580", Offset = "0x1477580", VA = "0x1477580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABADE4", Offset = "0xABADE4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public List<CandidateInfo> Candidates
		{
			[Token(Token = "0x6000546")]
			[Address(RVA = "0x1477598", Offset = "0x1477598", VA = "0x1477598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAE14", Offset = "0xABAE14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000545")]
			[Address(RVA = "0x1477590", Offset = "0x1477590", VA = "0x1477590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAE04", Offset = "0xABAE04")]
			private set
			{
			}
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x14775A0", Offset = "0x14775A0", VA = "0x14775A0")]
		private Page()
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x14775A8", Offset = "0x14775A8", VA = "0x14775A8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200007F")]
	internal class PinyinIMProvider : IInputMethodProvider
	{
		[Token(Token = "0x20001DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5310", Offset = "0xAB5310")]
		private sealed class <InitPinyinIme>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string fromPath;

			[Token(Token = "0x4000A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string toPath;

			[Token(Token = "0x4000A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PinyinIMProvider <>4__this;

			[Token(Token = "0x4000A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string[] <>7__wrap1;

			[Token(Token = "0x4000A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap2;

			[Token(Token = "0x4000A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <file>5__4;

			[Token(Token = "0x4000A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private WWW <www>5__5;

			[Token(Token = "0x17000234")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DC2")]
				[Address(RVA = "0x1009EAC", Offset = "0x1009EAC", VA = "0x1009EAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000235")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DC4")]
				[Address(RVA = "0x1009EF4", Offset = "0x1009EF4", VA = "0x1009EF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x1008CC4", Offset = "0x1008CC4", VA = "0x1008CC4")]
			[DebuggerHidden]
			public <InitPinyinIme>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0x1008CF0", Offset = "0x1008CF0", VA = "0x1008CF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x1008CF4", Offset = "0x1008CF4", VA = "0x1008CF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x1009EB4", Offset = "0x1009EB4", VA = "0x1009EB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002DF")]
		private const int MAX_INPUT_LEGNTH = 20;

		[Token(Token = "0x40002E0")]
		private const int WORD_BUFFER_SIZE = 24;

		[Token(Token = "0x40002E1")]
		private const uint PAGE_SIZE = 48u;

		[Token(Token = "0x40002E2")]
		private const string DLL_NAME = "sogou_ime";

		[Token(Token = "0x40002E3")]
		private const string DICT_FOLDER_NAME = "Dict";

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action _onSuccess;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action _onFail;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _currentInput;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MonoBehaviour _monoContext;

		[PreserveSig]
		[Token(Token = "0x600054A")]
		[Address(RVA = "0x1478D44", Offset = "0x1478D44", VA = "0x1478D44")]
		private static extern bool InitPinyinNative(string dictPath, uint fuzzy, uint pageSize = 0u);

		[PreserveSig]
		[Token(Token = "0x600054B")]
		[Address(RVA = "0x1478DF0", Offset = "0x1478DF0", VA = "0x1478DF0")]
		private static extern int ConvertNative(string input, StringBuilder pinyinSep, out bool hasNextPage);

		[PreserveSig]
		[Token(Token = "0x600054C")]
		[Address(RVA = "0x1478EDC", Offset = "0x1478EDC", VA = "0x1478EDC")]
		private static extern int NextWordNative(StringBuilder builder, int index);

		[PreserveSig]
		[Token(Token = "0x600054D")]
		[Address(RVA = "0x1478F94", Offset = "0x1478F94", VA = "0x1478F94")]
		private static extern int WordPredictionNative(int pageNumber, int selected, out bool hasNextPage);

		[PreserveSig]
		[Token(Token = "0x600054E")]
		[Address(RVA = "0x1479044", Offset = "0x1479044", VA = "0x1479044")]
		private static extern void DeactiveInputMethodNative();

		[PreserveSig]
		[Token(Token = "0x600054F")]
		[Address(RVA = "0x14790B8", Offset = "0x14790B8", VA = "0x14790B8")]
		private static extern int PageDownNative(out bool hasNextPage, out int nativePageNumber);

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x1479160", Offset = "0x1479160", VA = "0x1479160", Slot = "4")]
		public void Initialize(Action OnSuccess, Action OnFail, MonoBehaviour monoObject)
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0x147933C", Offset = "0x147933C", VA = "0x147933C", Slot = "5")]
		public void ShutDown()
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x1479360", Offset = "0x1479360", VA = "0x1479360", Slot = "6")]
		public Page Convert(string input)
		{
			return null;
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x14797EC", Offset = "0x14797EC", VA = "0x14797EC", Slot = "8")]
		public Page PageDown()
		{
			return null;
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x14799EC", Offset = "0x14799EC", VA = "0x14799EC", Slot = "7")]
		public Page HandleSelection(string compositionString, int pageNumber, int selectedIndexInPage)
		{
			return null;
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x1479A50", Offset = "0x1479A50", VA = "0x1479A50")]
		private Page WordPrediction(int pageNumber, int selectedIndexInPage)
		{
			return null;
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x1479DE0", Offset = "0x1479DE0", VA = "0x1479DE0")]
		private void ResetBuffer(StringBuilder builder)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x1479294", Offset = "0x1479294", VA = "0x1479294")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAE24", Offset = "0xABAE24")]
		private IEnumerator InitPinyinIme(string fromPath, string toPath)
		{
			return null;
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x1479608", Offset = "0x1479608", VA = "0x1479608")]
		private List<CandidateInfo> GetCandidates(int count, int pageNumber, string pinyin)
		{
			return null;
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x1479C4C", Offset = "0x1479C4C", VA = "0x1479C4C")]
		private List<CandidateInfo> GetPredictionCandidates(int count, int pageNumber)
		{
			return null;
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x1479E30", Offset = "0x1479E30", VA = "0x1479E30")]
		public PinyinIMProvider()
		{
		}
	}
}
namespace Qiyi.InputMethod.Keyboard
{
	[Token(Token = "0x2000080")]
	public class CandidateItemPool
	{
		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject pooledItem;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> pool;

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x150C168", Offset = "0x150C168", VA = "0x150C168")]
		public CandidateItemPool(GameObject pooledItem)
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x150C208", Offset = "0x150C208", VA = "0x150C208")]
		public GameObject GetPooledObject(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x150C4DC", Offset = "0x150C4DC", VA = "0x150C4DC")]
		public void RecycleObject(GameObject obj)
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x150C528", Offset = "0x150C528", VA = "0x150C528")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x2000081")]
	public class CandidatePager : MonoBehaviour, ICandidatePager
	{
		[Token(Token = "0x20001DD")]
		private class CandidateItem
		{
			[Token(Token = "0x4000A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB93E4", Offset = "0xAB93E4")]
			private CandidateInfo <Info>k__BackingField;

			[Token(Token = "0x4000A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB93F4", Offset = "0xAB93F4")]
			private float <ItemWidth>k__BackingField;

			[Token(Token = "0x17000236")]
			public CandidateInfo Info
			{
				[Token(Token = "0x6000DC6")]
				[Address(RVA = "0x1001A0C", Offset = "0x1001A0C", VA = "0x1001A0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCA1C", Offset = "0xABCA1C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000DC5")]
				[Address(RVA = "0x1001A04", Offset = "0x1001A04", VA = "0x1001A04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCA0C", Offset = "0xABCA0C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000237")]
			public float ItemWidth
			{
				[Token(Token = "0x6000DC8")]
				[Address(RVA = "0x1001A1C", Offset = "0x1001A1C", VA = "0x1001A1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCA3C", Offset = "0xABCA3C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000DC7")]
				[Address(RVA = "0x1001A14", Offset = "0x1001A14", VA = "0x1001A14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABCA2C", Offset = "0xABCA2C")]
				private set
				{
				}
			}

			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x1001A24", Offset = "0x1001A24", VA = "0x1001A24")]
			public CandidateItem(CandidateInfo info, float width)
			{
			}
		}

		[Token(Token = "0x20001DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5320", Offset = "0xAB5320")]
		private sealed class <ExpandPanelAnimation>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CandidatePager <>4__this;

			[Token(Token = "0x4000A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000238")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DCD")]
				[Address(RVA = "0x10015C8", Offset = "0x10015C8", VA = "0x10015C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000239")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DCF")]
				[Address(RVA = "0x1001610", Offset = "0x1001610", VA = "0x1001610", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x1001424", Offset = "0x1001424", VA = "0x1001424")]
			[DebuggerHidden]
			public <ExpandPanelAnimation>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x1001450", Offset = "0x1001450", VA = "0x1001450", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x1001454", Offset = "0x1001454", VA = "0x1001454", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x10015D0", Offset = "0x10015D0", VA = "0x10015D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5330", Offset = "0xAB5330")]
		private sealed class <FoldPanelAnimation>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CandidatePager <>4__this;

			[Token(Token = "0x4000A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x1700023A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DD3")]
				[Address(RVA = "0x10017BC", Offset = "0x10017BC", VA = "0x10017BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DD5")]
				[Address(RVA = "0x1001804", Offset = "0x1001804", VA = "0x1001804", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x1001618", Offset = "0x1001618", VA = "0x1001618")]
			[DebuggerHidden]
			public <FoldPanelAnimation>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x1001644", Offset = "0x1001644", VA = "0x1001644", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x1001648", Offset = "0x1001648", VA = "0x1001648", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x10017C4", Offset = "0x10017C4", VA = "0x10017C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5340", Offset = "0xAB5340")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4000A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<CandidateInfo> onclick;

			[Token(Token = "0x4000A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CandidateItem data;

			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x10013BC", Offset = "0x10013BC", VA = "0x10013BC")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x10013C4", Offset = "0x10013C4", VA = "0x10013C4")]
			internal void <BindCandidateObject>b__0()
			{
			}
		}

		[Token(Token = "0x20001E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5350", Offset = "0xAB5350")]
		private sealed class <TranslateXBy>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CandidatePager <>4__this;

			[Token(Token = "0x4000A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float offset;

			[Token(Token = "0x4000A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform t;

			[Token(Token = "0x4000A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <currentPosition>5__2;

			[Token(Token = "0x4000A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <speed>5__3;

			[Token(Token = "0x4000A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <delta>5__4;

			[Token(Token = "0x1700023C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DDB")]
				[Address(RVA = "0x10019B4", Offset = "0x10019B4", VA = "0x10019B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DDD")]
				[Address(RVA = "0x10019FC", Offset = "0x10019FC", VA = "0x10019FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x100180C", Offset = "0x100180C", VA = "0x100180C")]
			[DebuggerHidden]
			public <TranslateXBy>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x1001838", Offset = "0x1001838", VA = "0x1001838", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x100183C", Offset = "0x100183C", VA = "0x100183C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x10019BC", Offset = "0x10019BC", VA = "0x10019BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button m_PageUpButton;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button m_PageDownButton;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_CandidateItemPrefab;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_LinePrefab;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform m_ContentRect;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text m_InputPinyinText;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_LineWidth;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button m_ExpandButton;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button m_FoldButton;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_ItemMinWidth;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private int m_RowCount;

		[Token(Token = "0x40002F5")]
		private const int UNIT_WORD_LENGTH = 3;

		[Token(Token = "0x40002F6")]
		private const float ANIMATION_DURATION = 0.2f;

		[Token(Token = "0x40002F7")]
		private const float PAGING_DURATION = 0.7f;

		[Token(Token = "0x40002F8")]
		private const int CANDIDATE_QUEUE_SIZE = 5;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_InitialRectWidth;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_FoldedHeight;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_ExpandedHeight;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_PagerScrolledOffset;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CandidateItemPool m_CandidateItemPool;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<CandidateItem> m_CandidateBindingQueue;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_HasMoreCandidates;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_HasPreviousPage;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool m_IsExpanded;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_CurrentDisplayPage;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_TotalPage;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RectTransform _rect;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _isAnimating;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6DB4", Offset = "0xAB6DB4")]
		private Action<CandidateInfo> <OnCandidateClickDelegate>k__BackingField;

		[Token(Token = "0x170000BD")]
		private RectTransform CachedRect
		{
			[Token(Token = "0x600055F")]
			[Address(RVA = "0x150C600", Offset = "0x150C600", VA = "0x150C600")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000560")]
			[Address(RVA = "0x150C6B4", Offset = "0x150C6B4", VA = "0x150C6B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public Action<CandidateInfo> OnCandidateClickDelegate
		{
			[Token(Token = "0x6000565")]
			[Address(RVA = "0x150C900", Offset = "0x150C900", VA = "0x150C900", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAE84", Offset = "0xABAE84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000566")]
			[Address(RVA = "0x150C908", Offset = "0x150C908", VA = "0x150C908", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAE94", Offset = "0xABAE94")]
			set
			{
			}
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x150C6BC", Offset = "0x150C6BC", VA = "0x150C6BC", Slot = "7")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x150C730", Offset = "0x150C730", VA = "0x150C730", Slot = "6")]
		public void Show()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x150C758", Offset = "0x150C758", VA = "0x150C758", Slot = "8")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x150C77C", Offset = "0x150C77C", VA = "0x150C77C", Slot = "9")]
		public void UpdateWords()
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x150C910", Offset = "0x150C910", VA = "0x150C910")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x150C980", Offset = "0x150C980", VA = "0x150C980", Slot = "10")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x150CB14", Offset = "0x150CB14", VA = "0x150CB14")]
		private void SetupViews()
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x150CC28", Offset = "0x150CC28", VA = "0x150CC28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x150CD3C", Offset = "0x150CD3C", VA = "0x150CD3C")]
		private void ExpandPanel(bool animate = true)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x150CDE8", Offset = "0x150CDE8", VA = "0x150CDE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAEA4", Offset = "0xABAEA4")]
		private IEnumerator ExpandPanelAnimation()
		{
			return null;
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x150CEFC", Offset = "0x150CEFC", VA = "0x150CEFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAF04", Offset = "0xABAF04")]
		private IEnumerator FoldPanelAnimation()
		{
			return null;
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x150CF74", Offset = "0x150CF74", VA = "0x150CF74")]
		private void FoldPanel(bool animate = true)
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x150D018", Offset = "0x150D018", VA = "0x150D018")]
		private void HandlePageDown()
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x150D324", Offset = "0x150D324", VA = "0x150D324")]
		private void HandlePageUp()
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x150D3EC", Offset = "0x150D3EC", VA = "0x150D3EC")]
		private CandidateItem GetNextCandidateData()
		{
			return null;
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x150D0F4", Offset = "0x150D0F4", VA = "0x150D0F4")]
		private void PopulatePage(Action<CandidateInfo> onItemClick)
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x150D56C", Offset = "0x150D56C", VA = "0x150D56C")]
		private bool PopulateLine(Transform line, Action<CandidateInfo> onItemClick)
		{
			return default(bool);
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x150D530", Offset = "0x150D530", VA = "0x150D530")]
		private float CalculateItemWidth(int wordLength, int unitWordLength, float unitWidth)
		{
			return default(float);
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x150D830", Offset = "0x150D830", VA = "0x150D830")]
		private GameObject BindCandidateObject(Transform parent, Action<CandidateInfo> onclick, CandidateItem data)
		{
			return null;
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x150DA50", Offset = "0x150DA50", VA = "0x150DA50")]
		private void UpdateDisplayPinyin(string pinyin)
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x150C7B0", Offset = "0x150C7B0", VA = "0x150C7B0")]
		private void PopulateFirstPage(Action<CandidateInfo> onclick)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x150CE60", Offset = "0x150CE60", VA = "0x150CE60")]
		private void UpdatePagerButtonsVisibility()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x150DA74", Offset = "0x150DA74", VA = "0x150DA74")]
		private void ClearContent()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x150CCAC", Offset = "0x150CCAC", VA = "0x150CCAC")]
		private void Reset()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x150D280", Offset = "0x150D280", VA = "0x150D280")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABAF64", Offset = "0xABAF64")]
		private IEnumerator TranslateXBy(Transform t, float offset)
		{
			return null;
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x150DDAC", Offset = "0x150DDAC", VA = "0x150DDAC")]
		public CandidatePager()
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x150DE40", Offset = "0x150DE40", VA = "0x150DE40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAFC4", Offset = "0xABAFC4")]
		private void <Start>b__40_0()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x150DE48", Offset = "0x150DE48", VA = "0x150DE48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAFD4", Offset = "0xABAFD4")]
		private void <Start>b__40_1()
		{
		}
	}
	[Token(Token = "0x2000082")]
	public interface ICandidatePager
	{
		[Token(Token = "0x170000BF")]
		Action<CandidateInfo> OnCandidateClickDelegate
		{
			[Token(Token = "0x600057F")]
			get;
			[Token(Token = "0x6000580")]
			set;
		}

		[Token(Token = "0x6000581")]
		void Show();

		[Token(Token = "0x6000582")]
		void Hide();

		[Token(Token = "0x6000583")]
		bool IsActive();

		[Token(Token = "0x6000584")]
		void UpdateWords();
	}
	[Token(Token = "0x2000083")]
	public class TextHoverEffect : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Color _highlightedColor;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Color _normalColor;

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x1704270", Offset = "0x1704270", VA = "0x1704270")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x17042CC", Offset = "0x17042CC", VA = "0x17042CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x17042FC", Offset = "0x17042FC", VA = "0x17042FC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x170432C", Offset = "0x170432C", VA = "0x170432C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x170435C", Offset = "0x170435C", VA = "0x170435C")]
		public TextHoverEffect()
		{
		}
	}
}
namespace QiyiVRSdk
{
	[Token(Token = "0x2000084")]
	public abstract class QVRBaseInputModule : BaseInputModule
	{
		[Token(Token = "0x20001E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5360", Offset = "0xAB5360")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4000A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PointerEventData pointerEventData;

			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x1009EFC", Offset = "0x1009EFC", VA = "0x1009EFC")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x1009F04", Offset = "0x1009F04", VA = "0x1009F04")]
			internal void <UpdateReticle>b__0(QVRIPointerHoverHandler x, BaseEventData y)
			{
			}
		}

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6DC4", Offset = "0xAB6DC4")]
		private static QVRInputPointer <InputPointer>k__BackingField;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PointerEventData pointerData;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool isActive;

		[Token(Token = "0x400030D")]
		protected const float clickTime = 0.1f;

		[Token(Token = "0x170000C0")]
		public static QVRInputPointer InputPointer
		{
			[Token(Token = "0x600058A")]
			[Address(RVA = "0x147F458", Offset = "0x147F458", VA = "0x147F458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAFE4", Offset = "0xABAFE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600058B")]
			[Address(RVA = "0x147F4A4", Offset = "0x147F4A4", VA = "0x147F4A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABAFF4", Offset = "0xABAFF4")]
			set
			{
			}
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x147F4F8", Offset = "0x147F4F8", VA = "0x147F4F8")]
		public Vector3 GetIntersectionPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x147F5D8", Offset = "0x147F5D8", VA = "0x147F5D8", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x147F61C", Offset = "0x147F61C", VA = "0x147F61C", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x147F898", Offset = "0x147F898", VA = "0x147F898", Slot = "20")]
		public override bool IsPointerOverGameObject(int pointerId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000590")]
		protected abstract void CastRay(ref PointerEventData pointerData);

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x147F91C", Offset = "0x147F91C", VA = "0x147F91C", Slot = "27")]
		protected virtual void HandleInput(ref PointerEventData pointerData, GameObject currentGameObject)
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x147FC40", Offset = "0x147FC40", VA = "0x147FC40", Slot = "28")]
		protected virtual bool FindObject(List<RaycastResult> raycastResultCache, out RaycastResult raycastResult)
		{
			return default(bool);
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x147FD80", Offset = "0x147FD80", VA = "0x147FD80", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x147FF44", Offset = "0x147FF44", VA = "0x147FF44")]
		protected void UpdateCurrentObject()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x147FA90", Offset = "0x147FA90", VA = "0x147FA90")]
		protected void DeselectIfselectionChange(GameObject go, PointerEventData data)
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x147FF64", Offset = "0x147FF64", VA = "0x147FF64", Slot = "29")]
		protected virtual void UpdateReticle(ref PointerEventData pointerData, GameObject previousHitedObject)
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x1480558", Offset = "0x1480558", VA = "0x1480558", Slot = "30")]
		protected virtual void HandleDrag()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x14808C8", Offset = "0x14808C8", VA = "0x14808C8", Slot = "31")]
		protected virtual bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x1480918", Offset = "0x1480918", VA = "0x1480918", Slot = "32")]
		public virtual void HandlePendingClick()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x1480D98", Offset = "0x1480D98", VA = "0x1480D98", Slot = "33")]
		public virtual void HandleTrigger()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x147F9F0", Offset = "0x147F9F0", VA = "0x147F9F0")]
		public GameObject GetCurrentGameObject()
		{
			return null;
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x147F5AC", Offset = "0x147F5AC", VA = "0x147F5AC")]
		public Vector3 GetIntersectionPosition(Camera cam, PointerEventData pointerData)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x147F75C", Offset = "0x147F75C", VA = "0x147F75C")]
		protected void DisableInputPointer()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x1481158", Offset = "0x1481158", VA = "0x1481158")]
		public static Vector2 NormalizedCartesianToSpherical(Vector3 cartCoords)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1481210", Offset = "0x1481210", VA = "0x1481210", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1481274", Offset = "0x1481274", VA = "0x1481274")]
		protected QVRBaseInputModule()
		{
		}
	}
	[Token(Token = "0x2000085")]
	internal sealed class QVRController : QVRInputModuleWrapper<QVRControllerInputModule>
	{
		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject laser;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isShowLaser;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public QVRVisualBase dominentVisual;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float mouseX;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float mouseY;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float mouseZ;

		[Token(Token = "0x170000C1")]
		public static QVRController Inst
		{
			[Token(Token = "0x60005A1")]
			[Address(RVA = "0x1482338", Offset = "0x1482338", VA = "0x1482338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x14823B4", Offset = "0x14823B4", VA = "0x14823B4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x1482450", Offset = "0x1482450", VA = "0x1482450", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x148249C", Offset = "0x148249C", VA = "0x148249C", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x14824E8", Offset = "0x14824E8", VA = "0x14824E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x1482DC4", Offset = "0x1482DC4", VA = "0x1482DC4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x14826FC", Offset = "0x14826FC", VA = "0x14826FC")]
		private void UpdateController()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x1482D0C", Offset = "0x1482D0C", VA = "0x1482D0C")]
		private void ChangeDomninentHand()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x148293C", Offset = "0x148293C", VA = "0x148293C")]
		private void UpdateLaserShow()
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x1482DC8", Offset = "0x1482DC8", VA = "0x1482DC8")]
		private void LastUpdateLaserShow()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x1483200", Offset = "0x1483200", VA = "0x1483200")]
		private void UpdateSimulatedSensor()
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x148340C", Offset = "0x148340C", VA = "0x148340C")]
		public QVRController()
		{
		}
	}
	[Token(Token = "0x2000086")]
	public class QVRControllerBattery : MonoBehaviour
	{
		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture tex_0_20;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture tex_20_40;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture tex_40_60;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture tex_60_80;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture tex_80_100;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public QVRInput.Controller controller;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material batteryMaterial;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float timer;

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x148345C", Offset = "0x148345C", VA = "0x148345C")]
		private void Start()
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x1483594", Offset = "0x1483594", VA = "0x1483594")]
		private void Update()
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x14834D0", Offset = "0x14834D0", VA = "0x14834D0")]
		private void UpdateBatteryUI()
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x1483658", Offset = "0x1483658", VA = "0x1483658")]
		public QVRControllerBattery()
		{
		}
	}
	[Token(Token = "0x2000087")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4890", Offset = "0xAB4890")]
	internal sealed class QVRControllerInputModule : QVRBaseInputModule
	{
		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector2 lastCameraPose;

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x1483668", Offset = "0x1483668", VA = "0x1483668", Slot = "27")]
		protected override void HandleInput(ref PointerEventData pointerData, GameObject currentGameObject)
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x14838D0", Offset = "0x14838D0", VA = "0x14838D0", Slot = "31")]
		protected override bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x1483A04", Offset = "0x1483A04", VA = "0x1483A04", Slot = "26")]
		protected override void CastRay(ref PointerEventData pointerData)
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x1483D58", Offset = "0x1483D58", VA = "0x1483D58")]
		public QVRControllerInputModule()
		{
		}
	}
	[Token(Token = "0x2000088")]
	public enum Hand
	{
		[Token(Token = "0x400031E")]
		L,
		[Token(Token = "0x400031F")]
		R
	}
	[Token(Token = "0x2000089")]
	public class QVRControllerLoader : MonoBehaviour
	{
		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand _hand;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int showControllerIndex;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> controllerAssetList;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject handAsset;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private QVRVisualBase controllerMono;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private QVRVisualBase handMono;

		[Token(Token = "0x170000C2")]
		public int CurrentShowControllerIndex
		{
			[Token(Token = "0x60005B6")]
			[Address(RVA = "0x1483D60", Offset = "0x1483D60", VA = "0x1483D60")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C3")]
		public QVRVisualBase ActiveGOMono
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0x1483D68", Offset = "0x1483D68", VA = "0x1483D68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x1483DA8", Offset = "0x1483DA8", VA = "0x1483DA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x1483DAC", Offset = "0x1483DAC", VA = "0x1483DAC")]
		private void Start()
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x1483ED0", Offset = "0x1483ED0", VA = "0x1483ED0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x1483ED4", Offset = "0x1483ED4", VA = "0x1483ED4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x148417C", Offset = "0x148417C", VA = "0x148417C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x14843F0", Offset = "0x14843F0", VA = "0x14843F0")]
		public void ShowController(int controllerIndex)
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x1484704", Offset = "0x1484704", VA = "0x1484704")]
		private QVRVisualBase InstantAsset(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x148482C", Offset = "0x148482C", VA = "0x148482C")]
		private void UpdatePose(Transform tr)
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x1484908", Offset = "0x1484908", VA = "0x1484908")]
		private void OnConnectionChange(params object[] args)
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x1483DF4", Offset = "0x1483DF4", VA = "0x1483DF4")]
		private void CheckControllerConnection(bool currentConnection)
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x1484A08", Offset = "0x1484A08", VA = "0x1484A08")]
		public QVRControllerLoader()
		{
		}
	}
	[Token(Token = "0x200008A")]
	public class QVRControllerTips : MonoBehaviour
	{
		[Token(Token = "0x20001E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5370", Offset = "0xAB5370")]
		private sealed class <FadeIn>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QVRControllerTips <>4__this;

			[Token(Token = "0x4000A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <lerp>5__2;

			[Token(Token = "0x1700023E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DE3")]
				[Address(RVA = "0x100A508", Offset = "0x100A508", VA = "0x100A508", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DE5")]
				[Address(RVA = "0x100A550", Offset = "0x100A550", VA = "0x100A550", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x100A404", Offset = "0x100A404", VA = "0x100A404")]
			[DebuggerHidden]
			public <FadeIn>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0x100A430", Offset = "0x100A430", VA = "0x100A430", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0x100A434", Offset = "0x100A434", VA = "0x100A434", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x100A510", Offset = "0x100A510", VA = "0x100A510", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5380", Offset = "0xAB5380")]
		private sealed class <FadeOut>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QVRControllerTips <>4__this;

			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <lerp>5__2;

			[Token(Token = "0x17000240")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DE9")]
				[Address(RVA = "0x100A65C", Offset = "0x100A65C", VA = "0x100A65C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000241")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DEB")]
				[Address(RVA = "0x100A6A4", Offset = "0x100A6A4", VA = "0x100A6A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x100A558", Offset = "0x100A558", VA = "0x100A558")]
			[DebuggerHidden]
			public <FadeOut>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x100A584", Offset = "0x100A584", VA = "0x100A584", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x100A588", Offset = "0x100A588", VA = "0x100A588", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x100A664", Offset = "0x100A664", VA = "0x100A664", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup _tips;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000328")]
		private const float FADE_ALPHA = 0.4f;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private LayerMask _layerMask;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private QVRControllerTips _currentInteractive;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private QVRControllerTips _previousInteractive;

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x1484A10", Offset = "0x1484A10", VA = "0x1484A10")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x1484AC4", Offset = "0x1484AC4", VA = "0x1484AC4")]
		private void Update()
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x1484E68", Offset = "0x1484E68", VA = "0x1484E68")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x1484E2C", Offset = "0x1484E2C", VA = "0x1484E2C")]
		public void OnEnter(Vector3 impactPoint)
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x1484DF4", Offset = "0x1484DF4", VA = "0x1484DF4")]
		public void OnExit()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x1484E64", Offset = "0x1484E64", VA = "0x1484E64")]
		public void OnStay(Vector3 impactPoint)
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x1484E6C", Offset = "0x1484E6C", VA = "0x1484E6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB004", Offset = "0xABB004")]
		private IEnumerator FadeIn()
		{
			return null;
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x1484EE4", Offset = "0x1484EE4", VA = "0x1484EE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB064", Offset = "0xABB064")]
		private IEnumerator FadeOut()
		{
			return null;
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x1484F5C", Offset = "0x1484F5C", VA = "0x1484F5C")]
		public QVRControllerTips()
		{
		}
	}
	[Token(Token = "0x200008B")]
	public class QVRControllerVisual : QVRVisualBase
	{
		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float COLOR_FACTOR_ON;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float GRIP_FORCE_LIMIT;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float TRIGGER_FORCE_LIMIT;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Vector3 BUTTON_DOWN_POS1;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Vector3 BUTTON_DOWN_POS2;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float JOYSTICK_ANGLE_LIMIT;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform handleTrans;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshRenderer bodyMR;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform homeTrans;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshRenderer homeMR;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform aTrans;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshRenderer aMR;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform bTrans;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MeshRenderer bMR;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform gripTrans;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MeshRenderer gripMR;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform triggerTrans;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public MeshRenderer triggerMR;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform joyStickTrans;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public MeshRenderer joyStickMR;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform laserMount;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Material matNormal;

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x1484FF0", Offset = "0x1484FF0", VA = "0x1484FF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x1485514", Offset = "0x1485514", VA = "0x1485514")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x1485648", Offset = "0x1485648", VA = "0x1485648")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x148577C", Offset = "0x148577C", VA = "0x148577C")]
		private void CONTROLLER_EVENT(params object[] args)
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x1485310", Offset = "0x1485310", VA = "0x1485310")]
		private void InitMats()
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x1485F4C", Offset = "0x1485F4C", VA = "0x1485F4C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB0C4", Offset = "0xABB0C4")]
		public void SetABtnOn()
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x1486068", Offset = "0x1486068", VA = "0x1486068")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB0FC", Offset = "0xABB0FC")]
		public void SetABtnOff()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x1486138", Offset = "0x1486138", VA = "0x1486138")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB134", Offset = "0xABB134")]
		public void SetBBtnOn()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x1486254", Offset = "0x1486254", VA = "0x1486254")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB16C", Offset = "0xABB16C")]
		public void SetBBtnOff()
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x1485DA4", Offset = "0x1485DA4", VA = "0x1485DA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB1A4", Offset = "0xABB1A4")]
		public void SetGripOn()
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x1485E98", Offset = "0x1485E98", VA = "0x1485E98")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB1DC", Offset = "0xABB1DC")]
		public void SetGripOff()
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x1485A10", Offset = "0x1485A10", VA = "0x1485A10")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB214", Offset = "0xABB214")]
		public void SetHomeBtnOn()
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x1485B2C", Offset = "0x1485B2C", VA = "0x1485B2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB24C", Offset = "0xABB24C")]
		public void SetHomeBtnOff()
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x1485BFC", Offset = "0x1485BFC", VA = "0x1485BFC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB284", Offset = "0xABB284")]
		public void SetTriggerOn()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x1485CF0", Offset = "0x1485CF0", VA = "0x1485CF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB2BC", Offset = "0xABB2BC")]
		public void SetTriggerOff()
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x1486324", Offset = "0x1486324", VA = "0x1486324")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB2F4", Offset = "0xABB2F4")]
		public void SetJoyStickOn()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x1486440", Offset = "0x1486440", VA = "0x1486440")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB32C", Offset = "0xABB32C")]
		public void SetJoyStickOff()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x1486510", Offset = "0x1486510", VA = "0x1486510", Slot = "6")]
		public override void LateUpdate()
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x1486624", Offset = "0x1486624", VA = "0x1486624")]
		public void SetTriggerForce(float force)
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x1486768", Offset = "0x1486768", VA = "0x1486768")]
		public void SetGripForce(float force)
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x1486810", Offset = "0x1486810", VA = "0x1486810")]
		public void SetJoyStick()
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x1486B08", Offset = "0x1486B08", VA = "0x1486B08", Slot = "4")]
		public override Vector3 GetBeamOriginPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x1486B24", Offset = "0x1486B24", VA = "0x1486B24", Slot = "5")]
		public override Quaternion GetBeamOriginRot()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x1486B40", Offset = "0x1486B40", VA = "0x1486B40")]
		public QVRControllerVisual()
		{
		}
	}
	[Token(Token = "0x200008C")]
	public class QVRCursor : MonoBehaviour
	{
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x1486BF0", Offset = "0x1486BF0", VA = "0x1486BF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x1486BF4", Offset = "0x1486BF4", VA = "0x1486BF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x1486BF8", Offset = "0x1486BF8", VA = "0x1486BF8")]
		public QVRCursor()
		{
		}
	}
	[Token(Token = "0x200008D")]
	public sealed class QVREditorMouse : MonoBehaviour
	{
		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StandaloneInputModule _inputModule;

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x1487430", Offset = "0x1487430", VA = "0x1487430")]
		public void Active()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x148753C", Offset = "0x148753C", VA = "0x148753C")]
		public void DeActive()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x148765C", Offset = "0x148765C", VA = "0x148765C")]
		public QVREditorMouse()
		{
		}
	}
	[Token(Token = "0x200008E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB48F0", Offset = "0xAB48F0")]
	internal sealed class QVREventCamera : MonoBehaviour
	{
		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera eventCamera;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static QVREventCamera instance;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QVRInputManager.InputModuleType curType;

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x14879F0", Offset = "0x14879F0", VA = "0x14879F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x1487BFC", Offset = "0x1487BFC", VA = "0x1487BFC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x1487F64", Offset = "0x1487F64", VA = "0x1487F64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x1488134", Offset = "0x1488134", VA = "0x1488134")]
		public static void SetEnable(bool b)
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x1483CAC", Offset = "0x1483CAC", VA = "0x1483CAC")]
		public static Camera EventCamera()
		{
			return null;
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x1488380", Offset = "0x1488380", VA = "0x1488380")]
		public Ray GetRayWorld()
		{
			return default(Ray);
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x1488414", Offset = "0x1488414", VA = "0x1488414")]
		public QVREventCamera()
		{
		}
	}
	[Token(Token = "0x200008F")]
	internal class QVRGaze : QVRInputModuleWrapper<QVRGazeInputModule>
	{
		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject recenterCanvas;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float mouseX;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float mouseY;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float mouseZ;

		[Token(Token = "0x170000C4")]
		public static QVRGaze Inst
		{
			[Token(Token = "0x60005F2")]
			[Address(RVA = "0x1487B64", Offset = "0x1487B64", VA = "0x1487B64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x1488D1C", Offset = "0x1488D1C", VA = "0x1488D1C")]
		public void HandlePendingClick()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x1488D80", Offset = "0x1488D80", VA = "0x1488D80")]
		public void HandleTrigger()
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x1488DE4", Offset = "0x1488DE4", VA = "0x1488DE4", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x1488F34", Offset = "0x1488F34", VA = "0x1488F34", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x1488FFC", Offset = "0x1488FFC", VA = "0x1488FFC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x1489000", Offset = "0x1489000", VA = "0x1489000")]
		private void FollowHead()
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x148915C", Offset = "0x148915C", VA = "0x148915C")]
		private void UpdateSimulatedSensor()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x14892F4", Offset = "0x14892F4", VA = "0x14892F4")]
		public QVRGaze()
		{
		}
	}
	[Token(Token = "0x2000090")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4950", Offset = "0xAB4950")]
	internal sealed class QVRGazeInputModule : QVRBaseInputModule
	{
		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector2 lastHeadPose;

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x1489340", Offset = "0x1489340", VA = "0x1489340", Slot = "27")]
		protected override void HandleInput(ref PointerEventData pointerData, GameObject currentGameObject)
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x1489414", Offset = "0x1489414", VA = "0x1489414", Slot = "31")]
		protected override bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x148941C", Offset = "0x148941C", VA = "0x148941C", Slot = "26")]
		protected override void CastRay(ref PointerEventData pointerData)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x14896E4", Offset = "0x14896E4", VA = "0x14896E4")]
		public QVRGazeInputModule()
		{
		}
	}
	[Token(Token = "0x2000091")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB49B0", Offset = "0xAB49B0")]
	internal sealed class QVRGazePointer : QVRInputPointer
	{
		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _originalScale;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private QVRReticle _reticle;

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x14896EC", Offset = "0x14896EC", VA = "0x14896EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x14897B4", Offset = "0x14897B4", VA = "0x14897B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x1489804", Offset = "0x1489804", VA = "0x1489804")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x14898F4", Offset = "0x14898F4", VA = "0x14898F4", Slot = "10")]
		public override void OnEnter(GameObject targetObject, Vector3 intersectionPosition, float intersectionDisatance, bool isInteractive)
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x1489A00", Offset = "0x1489A00", VA = "0x1489A00", Slot = "11")]
		public override void OnStay(GameObject targetObject, Vector3 intersectionPosition, float intersectionDisatance, bool isInteractive)
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x1489AD8", Offset = "0x1489AD8", VA = "0x1489AD8", Slot = "12")]
		public override void OnExit(GameObject targetObject)
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x1489B34", Offset = "0x1489B34", VA = "0x1489B34", Slot = "13")]
		public override void OnTriggerStart()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x1489B38", Offset = "0x1489B38", VA = "0x1489B38", Slot = "14")]
		public override void OnTriggerEnd()
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x1489B3C", Offset = "0x1489B3C", VA = "0x1489B3C", Slot = "15")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x14899E4", Offset = "0x14899E4", VA = "0x14899E4")]
		private void EnterPointer()
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x1489B18", Offset = "0x1489B18", VA = "0x1489B18")]
		private void ExitPointer()
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x1489C10", Offset = "0x1489C10", VA = "0x1489C10")]
		public QVRGazePointer()
		{
		}
	}
	[Token(Token = "0x2000092")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4A10", Offset = "0xAB4A10")]
	internal sealed class QVRGazePointerAuto : QVRInputPointer
	{
		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _originalScale;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _matReticle;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine _coroutineClick;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _escapeTime;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float factor;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isEnter;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _clickDelayTime;

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x1489C20", Offset = "0x1489C20", VA = "0x1489C20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x1489CE8", Offset = "0x1489CE8", VA = "0x1489CE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x1489D38", Offset = "0x1489D38", VA = "0x1489D38")]
		private void Awake()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x1489E34", Offset = "0x1489E34", VA = "0x1489E34", Slot = "10")]
		public override void OnEnter(GameObject targetObject, Vector3 intersectionPosition, float intersectionDisatance, bool isInteractive)
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x1489F88", Offset = "0x1489F88", VA = "0x1489F88", Slot = "11")]
		public override void OnStay(GameObject targetObject, Vector3 intersectionPosition, float intersectionDisatance, bool isInteractive)
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x148A060", Offset = "0x148A060", VA = "0x148A060", Slot = "12")]
		public override void OnExit(GameObject targetObject)
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x148A0F4", Offset = "0x148A0F4", VA = "0x148A0F4", Slot = "13")]
		public override void OnTriggerStart()
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x148A0F8", Offset = "0x148A0F8", VA = "0x148A0F8", Slot = "14")]
		public override void OnTriggerEnd()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x148A0FC", Offset = "0x148A0FC", VA = "0x148A0FC", Slot = "15")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x1489F1C", Offset = "0x1489F1C", VA = "0x1489F1C")]
		private void EnterPointer()
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x148A090", Offset = "0x148A090", VA = "0x148A090")]
		private void ExitPointer()
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x148A1D0", Offset = "0x148A1D0", VA = "0x148A1D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x148A2C4", Offset = "0x148A2C4", VA = "0x148A2C4")]
		public QVRGazePointerAuto()
		{
		}
	}
	[Token(Token = "0x2000093")]
	public class QVRHandVisual : QVRVisualBase
	{
		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SkinnedMeshRenderer handMR;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.Animation anim;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform handTrans;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 tempEA;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 tempPos;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float crossfadeLength;

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x148A2D4", Offset = "0x148A2D4", VA = "0x148A2D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x148A3F4", Offset = "0x148A3F4", VA = "0x148A3F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x148A528", Offset = "0x148A528", VA = "0x148A528")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x148A65C", Offset = "0x148A65C", VA = "0x148A65C")]
		private void OnUpdateStatus(params object[] args)
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x148A6B4", Offset = "0x148A6B4", VA = "0x148A6B4")]
		public new void SetHandlePos(Vector3 pos)
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x148A6E8", Offset = "0x148A6E8", VA = "0x148A6E8")]
		public new void SetHandleRot(Quaternion rot)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x148A748", Offset = "0x148A748", VA = "0x148A748")]
		private void OnGestureChange(params object[] args)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x148AB1C", Offset = "0x148AB1C", VA = "0x148AB1C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB364", Offset = "0xABB364")]
		public void Fist()
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x148ABB0", Offset = "0x148ABB0", VA = "0x148ABB0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB39C", Offset = "0xABB39C")]
		public void Grip()
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x148AC44", Offset = "0x148AC44", VA = "0x148AC44")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB3D4", Offset = "0xABB3D4")]
		public void Open()
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x148ACD8", Offset = "0x148ACD8", VA = "0x148ACD8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB40C", Offset = "0xABB40C")]
		public void Point()
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x148AD6C", Offset = "0x148AD6C", VA = "0x148AD6C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB444", Offset = "0xABB444")]
		public void PointThumb()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x148AE00", Offset = "0x148AE00", VA = "0x148AE00")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB47C", Offset = "0xABB47C")]
		public void Rest()
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x148AE94", Offset = "0x148AE94", VA = "0x148AE94")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xABB4B4", Offset = "0xABB4B4")]
		public void ThumbUp()
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x148AF28", Offset = "0x148AF28", VA = "0x148AF28")]
		public QVRHandVisual()
		{
		}
	}
	[Token(Token = "0x2000094")]
	public interface QVRIInputPointer
	{
		[Token(Token = "0x6000628")]
		void OnEnter(GameObject targetObject, Vector3 intersectionPosition, float intersectionDisatance, bool isInteractive);

		[Token(Token = "0x6000629")]
		void OnStay(GameObject targetObject, Vector3 intersectionPosition, float intersectionDisatance, bool isInteractive);

		[Token(Token = "0x600062A")]
		void OnExit(GameObject targetObject);

		[Token(Token = "0x600062B")]
		void OnTriggerStart();

		[Token(Token = "0x600062C")]
		void OnTriggerEnd();

		[Token(Token = "0x600062D")]
		void ResetPosition();
	}
	[Token(Token = "0x2000095")]
	public interface QVRIPointerHoverHandler : IEventSystemHandler
	{
		[Token(Token = "0x600062E")]
		void OnPointerHover(PointerEventData pointerData);
	}
	[Token(Token = "0x2000096")]
	public class VirtualButtonWrap
	{
		[Token(Token = "0x400035A")]
		public const int ControllerOffset = 1000000;

		[Token(Token = "0x400035B")]
		public const int ButtonOffset = 1000;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _virtualButtonName;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _vbID;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ButtonAlgoBase _algo;

		[Token(Token = "0x170000C5")]
		public int VBID
		{
			[Token(Token = "0x6000632")]
			[Address(RVA = "0xFFCBDC", Offset = "0xFFCBDC", VA = "0xFFCBDC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C6")]
		public ButtonAlgoBase Algo
		{
			[Token(Token = "0x6000633")]
			[Address(RVA = "0xFFCBE4", Offset = "0xFFCBE4", VA = "0xFFCBE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000634")]
			[Address(RVA = "0xFFCBEC", Offset = "0xFFCBEC", VA = "0xFFCBEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public int Controller
		{
			[Token(Token = "0x6000635")]
			[Address(RVA = "0xFFCBF4", Offset = "0xFFCBF4", VA = "0xFFCBF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C8")]
		public int VirtualButton
		{
			[Token(Token = "0x6000636")]
			[Address(RVA = "0xFFCC14", Offset = "0xFFCC14", VA = "0xFFCC14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C9")]
		public int ButtonAction
		{
			[Token(Token = "0x6000637")]
			[Address(RVA = "0xFFCC58", Offset = "0xFFCC58", VA = "0xFFCC58")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xFFC83C", Offset = "0xFFC83C", VA = "0xFFC83C")]
		public VirtualButtonWrap(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction)
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xFFCB18", Offset = "0xFFCB18", VA = "0xFFCB18")]
		public VirtualButtonWrap(string virtualButtonName, QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction)
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xFFCB88", Offset = "0xFFCB88", VA = "0xFFCB88")]
		public VirtualButtonWrap(string virtualButtonName, VirtualButtonWrap vb)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xFFCAFC", Offset = "0xFFCAFC", VA = "0xFFCAFC")]
		public static int GetVirtualButtonKey(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction)
		{
			return default(int);
		}

		[Token(Token = "0x6000639")]
		public string GetEnumNameByKey<T>(int key)
		{
			return null;
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xFFCC84", Offset = "0xFFCC84", VA = "0xFFCC84")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x2000097")]
	public class VirtualButtonWrapHelp
	{
		[Token(Token = "0x20001E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5390", Offset = "0xAB5390")]
		private sealed class <>c__DisplayClass0_0<T> where T : IEquatable<T>
		{
			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.Controller controller;

			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.VirtualButton virtualButton;

			[Token(Token = "0x4000A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.ButtonAction buttonAction;

			[Token(Token = "0x6000DEC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000DED")]
			internal void <Constructor_Event>b__0()
			{
			}
		}

		[Token(Token = "0x20001E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB53A0", Offset = "0xAB53A0")]
		private sealed class <>c__DisplayClass1_0<T> where T : IComparable<T>
		{
			[Token(Token = "0x4000A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.Controller controller;

			[Token(Token = "0x4000A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.VirtualButton virtualButton;

			[Token(Token = "0x4000A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.ButtonAction buttonAction;

			[Token(Token = "0x6000DEE")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000DEF")]
			internal void <Constructor_EventRange>b__0()
			{
			}
		}

		[Token(Token = "0x20001E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB53B0", Offset = "0xAB53B0")]
		private sealed class <>c__DisplayClass2_0<T> where T : IEquatable<T>
		{
			[Token(Token = "0x4000A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.Controller controller;

			[Token(Token = "0x4000A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.VirtualButton virtualButton;

			[Token(Token = "0x6000DF0")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000DF1")]
			internal void <Constructor_Change>b__0(T value)
			{
			}
		}

		[Token(Token = "0x20001E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB53C0", Offset = "0xAB53C0")]
		private sealed class <>c__DisplayClass3_0<T> where T : IEquatable<T>
		{
			[Token(Token = "0x4000A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.Controller controller;

			[Token(Token = "0x4000A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.VirtualButton virtualButton;

			[Token(Token = "0x4000A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.ButtonAction buttonAction;

			[Token(Token = "0x6000DF2")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6000DF3")]
			internal void <Constructor_Change>b__0(T value)
			{
			}
		}

		[Token(Token = "0x20001E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB53D0", Offset = "0xAB53D0")]
		private sealed class <>c__DisplayClass5_0<T> where T : IEquatable<T>
		{
			[Token(Token = "0x4000A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.Controller controller;

			[Token(Token = "0x4000A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.VirtualButton virtualButton;

			[Token(Token = "0x4000A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QVRInput.ButtonAction buttonAction;

			[Token(Token = "0x6000DF4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000DF5")]
			internal void <Constructor_JoyStickSwipe>b__0()
			{
			}
		}

		[Token(Token = "0x20001EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB53E0", Offset = "0xAB53E0")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public QVRInput.Controller controller;

			[Token(Token = "0x4000A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public QVRInput.VirtualButton virtualButton;

			[Token(Token = "0x4000A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public QVRInput.ButtonAction buttonAction;

			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0xFFCE4C", Offset = "0xFFCE4C", VA = "0xFFCE4C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x1017674", Offset = "0x1017674", VA = "0x1017674")]
			internal void <ButtonAlgoCombinationKey>b__0()
			{
			}
		}

		[Token(Token = "0x600063B")]
		public static VirtualButtonWrap Constructor_Event<T>(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction, T initValue, ButtonAlgo_RawButton<T>.VariableGenerator variableGenerator, T treggerValue, float time = -1f) where T : IEquatable<T>
		{
			return null;
		}

		[Token(Token = "0x600063C")]
		public static VirtualButtonWrap Constructor_EventRange<T>(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction, ButtonAlgo_RawButton<T>.VariableGenerator variableGenerator, T lowRange, T upRange, bool lowClose = true, bool upClose = true, float time = -1f) where T : IComparable<T>
		{
			return null;
		}

		[Token(Token = "0x600063D")]
		public static VirtualButtonWrap Constructor_Change<T>(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, T initValue, ButtonAlgo_RawButton<T>.VariableGenerator variableGenerator) where T : IEquatable<T>
		{
			return null;
		}

		[Token(Token = "0x600063E")]
		public static VirtualButtonWrap Constructor_Change<T>(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction, T initValue, ButtonAlgo_RawButton<T>.VariableGenerator variableGenerator) where T : IEquatable<T>
		{
			return null;
		}

		[Token(Token = "0x600063F")]
		public static VirtualButtonWrap Constructor_RawButton<T>(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction, ButtonAlgo_RawButton<T>.VariableGenerator variableGenerator) where T : IEquatable<T>
		{
			return null;
		}

		[Token(Token = "0x6000640")]
		public static VirtualButtonWrap Constructor_JoyStickSwipe<T>(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction, ButtonAlgo_JoyStickSwipe.VariableGenerator variableGenerator) where T : IEquatable<T>
		{
			return null;
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xFFCCA4", Offset = "0xFFCCA4", VA = "0xFFCCA4")]
		public static VirtualButtonWrap ButtonAlgoCombinationKey(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction, float time, ButtonAlgo_CombinationKey.CombinationKeyRelation ckr, params int[] vbIDList)
		{
			return null;
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xFFCE68", Offset = "0xFFCE68", VA = "0xFFCE68")]
		public VirtualButtonWrapHelp()
		{
		}
	}
	[Token(Token = "0x2000098")]
	public class ButtonAlgoBase
	{
		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string _name;

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x150A160", Offset = "0x150A160", VA = "0x150A160", Slot = "4")]
		public virtual string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x150A168", Offset = "0x150A168", VA = "0x150A168", Slot = "5")]
		public virtual bool IsTriggerEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x150A170", Offset = "0x150A170", VA = "0x150A170", Slot = "6")]
		public virtual float GetDurationTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x150A178", Offset = "0x150A178", VA = "0x150A178", Slot = "7")]
		public virtual float GetTriggerTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x150A180", Offset = "0x150A180", VA = "0x150A180", Slot = "8")]
		public virtual bool IsTriggerState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x150A188", Offset = "0x150A188", VA = "0x150A188", Slot = "9")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x150A18C", Offset = "0x150A18C", VA = "0x150A18C")]
		public ButtonAlgoBase()
		{
		}
	}
	[Token(Token = "0x2000099")]
	public class ButtonAlgo_RawButton<T> : ButtonAlgoBase
	{
		[Token(Token = "0x20001EB")]
		public delegate T VariableGenerator();

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected VariableGenerator _generator;

		[Token(Token = "0x600064A")]
		public ButtonAlgo_RawButton(string name, VariableGenerator generator)
		{
		}

		[Token(Token = "0x600064B")]
		public T GetVariableGenerator()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200009A")]
	public class ButtonAlgo_Event<T> : ButtonAlgo_RawButton<T> where T : IEquatable<T>
	{
		[Token(Token = "0x20001EC")]
		public delegate void EventPublisher();

		[Token(Token = "0x20001ED")]
		public delegate void ChangePublisher(T val);

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _triggerState;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private EventPublisher _eventPublisher;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ChangePublisher _changePublisher;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _currentFrameTrigger;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _prevValue;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _currentValue;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _triggerValue;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _beginTime;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _time;

		[Token(Token = "0x170000CA")]
		public T CurrentValue
		{
			[Token(Token = "0x600064C")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x600064D")]
		public ButtonAlgo_Event(string name, VariableGenerator generator, [Optional] T initValue)
		{
		}

		[Token(Token = "0x600064E")]
		public ButtonAlgo_Event<T> AddEventPublisher(T t, EventPublisher epub, float time = -1f)
		{
			return null;
		}

		[Token(Token = "0x600064F")]
		public ButtonAlgo_Event<T> AddChangePublisher(ChangePublisher cpub)
		{
			return null;
		}

		[Token(Token = "0x6000650")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000651")]
		public override bool IsTriggerEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000652")]
		public override bool IsTriggerState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000653")]
		public override float GetDurationTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000654")]
		public override float GetTriggerTime()
		{
			return default(float);
		}
	}
	[Token(Token = "0x200009B")]
	public class ButtonAlgo_EventRange<T> : ButtonAlgo_RawButton<T> where T : IComparable<T>
	{
		[Token(Token = "0x20001EE")]
		public delegate void EventPublisher();

		[Token(Token = "0x20001EF")]
		public delegate void ChangePublisher(T val);

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _triggerState;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private EventPublisher _eventPublisher;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ChangePublisher _changePublisher;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _currentFrameTrigger;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _prevValue;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _currentValue;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _lowRange;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _lowClose;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _upRange;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _upClose;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _beginTime;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _time;

		[Token(Token = "0x170000CB")]
		public T CurrentValue
		{
			[Token(Token = "0x6000655")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000656")]
		public ButtonAlgo_EventRange(string name, VariableGenerator generator, T lowRange, T upRange, bool lowClose = true, bool upClose = true)
		{
		}

		[Token(Token = "0x6000657")]
		public ButtonAlgo_EventRange<T> AddEventPublisher(EventPublisher epub, float time = -1f)
		{
			return null;
		}

		[Token(Token = "0x6000658")]
		public ButtonAlgo_EventRange<T> AddChangePublisher(ChangePublisher cpub)
		{
			return null;
		}

		[Token(Token = "0x6000659")]
		private bool CheckRange(T value)
		{
			return default(bool);
		}

		[Token(Token = "0x600065A")]
		public override void Update()
		{
		}

		[Token(Token = "0x600065B")]
		public override bool IsTriggerEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x600065C")]
		public override bool IsTriggerState()
		{
			return default(bool);
		}

		[Token(Token = "0x600065D")]
		public override float GetDurationTime()
		{
			return default(float);
		}

		[Token(Token = "0x600065E")]
		public override float GetTriggerTime()
		{
			return default(float);
		}
	}
	[Token(Token = "0x200009C")]
	public class ButtonAlgo_CombinationKey : ButtonAlgoBase
	{
		[Token(Token = "0x20001F0")]
		public enum CombinationKeyRelation
		{
			[Token(Token = "0x4000A8D")]
			And,
			[Token(Token = "0x4000A8E")]
			Or,
			[Token(Token = "0x4000A8F")]
			Sequence
		}

		[Token(Token = "0x20001F1")]
		public delegate void EventPublisher();

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<VirtualButtonWrap> vbwList;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _triggerState;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventPublisher _eventPublisher;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _currentFrameTrigger;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _beginTime;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _time;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private CombinationKeyRelation _ckr;

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x150A1E8", Offset = "0x150A1E8", VA = "0x150A1E8")]
		public ButtonAlgo_CombinationKey(string name, CombinationKeyRelation ckr, params int[] vbIDList)
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x150A3FC", Offset = "0x150A3FC", VA = "0x150A3FC")]
		public ButtonAlgo_CombinationKey AddEventPublisher(EventPublisher epub, float time = -1f)
		{
			return null;
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x150A428", Offset = "0x150A428", VA = "0x150A428", Slot = "9")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x150A450", Offset = "0x150A450", VA = "0x150A450")]
		private void CheckAnd()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x150A510", Offset = "0x150A510", VA = "0x150A510")]
		private void CheckOr()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x150A5D0", Offset = "0x150A5D0", VA = "0x150A5D0")]
		private void CheckSequence()
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x150A728", Offset = "0x150A728", VA = "0x150A728")]
		private void Trigger()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x150A7E4", Offset = "0x150A7E4", VA = "0x150A7E4", Slot = "6")]
		public override float GetDurationTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x150A810", Offset = "0x150A810", VA = "0x150A810", Slot = "8")]
		public override bool IsTriggerState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x150A818", Offset = "0x150A818", VA = "0x150A818", Slot = "5")]
		public override bool IsTriggerEvent()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200009D")]
	public class ButtonAlgo_JoyStickSwipe : ButtonAlgoBase
	{
		[Token(Token = "0x20001F2")]
		public delegate void EventPublisher();

		[Token(Token = "0x20001F3")]
		public delegate float VariableGenerator();

		[Token(Token = "0x400037D")]
		public const float SwipeOffset = 0.4f;

		[Token(Token = "0x400037E")]
		public const float InitOffset = 0.35f;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _beginTime;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _time;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VariableGenerator _generator;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventPublisher eventPublisher;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isRun;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _currentFrameTrigger;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool _triggerState;

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x150A820", Offset = "0x150A820", VA = "0x150A820")]
		public ButtonAlgo_JoyStickSwipe(string name, VariableGenerator generator)
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x150A894", Offset = "0x150A894", VA = "0x150A894")]
		public ButtonAlgo_JoyStickSwipe AddEventPublisher(EventPublisher epub)
		{
			return null;
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x150A8BC", Offset = "0x150A8BC", VA = "0x150A8BC", Slot = "9")]
		public override void Update()
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x150A988", Offset = "0x150A988", VA = "0x150A988", Slot = "5")]
		public override bool IsTriggerEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x150A990", Offset = "0x150A990", VA = "0x150A990", Slot = "6")]
		public override float GetDurationTime()
		{
			return default(float);
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x150A9BC", Offset = "0x150A9BC", VA = "0x150A9BC", Slot = "8")]
		public override bool IsTriggerState()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200009E")]
	public class InputAlgoManager
	{
		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static InputAlgoManager Instance;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<VirtualButtonWrap> virtualButtonList;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, VirtualButtonWrap> virtualButtonDic;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<IMonitor> _monitors;

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x102D4AC", Offset = "0x102D4AC", VA = "0x102D4AC")]
		public void RegisterMonitor(IMonitor monitors)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x102D748", Offset = "0x102D748", VA = "0x102D748")]
		public void UnRegisterMonitor(string id)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x102D8AC", Offset = "0x102D8AC", VA = "0x102D8AC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x102DA38", Offset = "0x102DA38", VA = "0x102DA38")]
		public void AddVirtualButton(VirtualButtonWrap vbw)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x102DAEC", Offset = "0x102DAEC", VA = "0x102DAEC")]
		public void NotRegisteButton(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction)
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x102DE0C", Offset = "0x102DE0C", VA = "0x102DE0C")]
		public VirtualButtonWrap GetVirtualButtonWrap(int vbID)
		{
			return null;
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x102DEBC", Offset = "0x102DEBC", VA = "0x102DEBC")]
		public bool GetTriggerEvent(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction)
		{
			return default(bool);
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x102DFC0", Offset = "0x102DFC0", VA = "0x102DFC0")]
		public float GetDurationTime(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction)
		{
			return default(float);
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x102E0C0", Offset = "0x102E0C0", VA = "0x102E0C0")]
		public bool GetLogicTriggerState(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction)
		{
			return default(bool);
		}

		[Token(Token = "0x6000678")]
		public T GetVirtualButtonRawData<T>(QVRInput.Controller controller, QVRInput.VirtualButton virtualButton, QVRInput.ButtonAction buttonAction) where T : IEquatable<T>
		{
			return (T)null;
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x102E1C4", Offset = "0x102E1C4", VA = "0x102E1C4")]
		public InputAlgoManager()
		{
		}
	}
	[Token(Token = "0x200009F")]
	public class InputControllerData
	{
		[Token(Token = "0x20001F4")]
		public class QVR_Controller_State
		{
			[Token(Token = "0x200027F")]
			public struct DebugPoseInfo
			{
				[Token(Token = "0x4000C92")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Vector3 _position;

				[Token(Token = "0x4000C93")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public Quaternion _rotation;
			}

			[Token(Token = "0x2000280")]
			public class Controller_State
			{
				[Token(Token = "0x4000C94")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool _isConnected;

				[Token(Token = "0x4000C95")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public int _button;

				[Token(Token = "0x4000C96")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int _buttonTouch;

				[Token(Token = "0x4000C97")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public int _batteryLevel;

				[Token(Token = "0x4000C98")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public int _triggerForce;

				[Token(Token = "0x4000C99")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				public int _gripForce;

				[Token(Token = "0x4000C9A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public bool isShow;

				[Token(Token = "0x4000C9B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				public Vector2 _joyStickPos;

				[Token(Token = "0x4000C9C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				public Vector3 _position;

				[Token(Token = "0x4000C9D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public Quaternion _rotation;

				[Token(Token = "0x4000C9E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				public Vector3 _positionRaw;

				[Token(Token = "0x4000C9F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
				public Quaternion _rotationRaw;

				[Token(Token = "0x4000CA0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
				public Vector3 _velocity;

				[Token(Token = "0x4000CA1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
				public Vector3 _acceleration;

				[Token(Token = "0x4000CA2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
				public Vector3 _angVelocity;

				[Token(Token = "0x4000CA3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
				public Vector3 _angAcceleration;

				[Token(Token = "0x6000F6C")]
				[Address(RVA = "0x1005380", Offset = "0x1005380", VA = "0x1005380")]
				public void DebugShow(bool isLeft = true)
				{
				}

				[Token(Token = "0x6000F6D")]
				[Address(RVA = "0x1017BE4", Offset = "0x1017BE4", VA = "0x1017BE4")]
				public Controller_State()
				{
				}
			}

			[Token(Token = "0x4000A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Controller_State[] _state;

			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x1005314", Offset = "0x1005314", VA = "0x1005314")]
			public void DebugShow()
			{
			}

			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x1005D50", Offset = "0x1005D50", VA = "0x1005D50")]
			public QVR_Controller_State()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB53F0", Offset = "0xAB53F0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static QVRVariableMonitor<bool>.VariableGenerator <>9__7_0;

			[Token(Token = "0x4000A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static QVRVariableMonitor<bool>.ChangePublisher <>9__7_1;

			[Token(Token = "0x4000A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static QVRVariableMonitor<bool>.VariableGenerator <>9__7_2;

			[Token(Token = "0x4000A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static QVRVariableMonitor<bool>.ChangePublisher <>9__7_3;

			[Token(Token = "0x4000A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_4;

			[Token(Token = "0x4000A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_5;

			[Token(Token = "0x4000A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_6;

			[Token(Token = "0x4000A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_7;

			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_8;

			[Token(Token = "0x4000A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_9;

			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_10;

			[Token(Token = "0x4000A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_11;

			[Token(Token = "0x4000A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_12;

			[Token(Token = "0x4000A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_13;

			[Token(Token = "0x4000AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_14;

			[Token(Token = "0x4000AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_15;

			[Token(Token = "0x4000AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_16;

			[Token(Token = "0x4000AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_17;

			[Token(Token = "0x4000AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_18;

			[Token(Token = "0x4000AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_19;

			[Token(Token = "0x4000AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ButtonAlgo_RawButton<Vector2>.VariableGenerator <>9__7_20;

			[Token(Token = "0x4000AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ButtonAlgo_RawButton<int>.VariableGenerator <>9__7_21;

			[Token(Token = "0x4000AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ButtonAlgo_RawButton<int>.VariableGenerator <>9__7_22;

			[Token(Token = "0x4000AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static ButtonAlgo_JoyStickSwipe.VariableGenerator <>9__7_23;

			[Token(Token = "0x4000AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static ButtonAlgo_JoyStickSwipe.VariableGenerator <>9__7_24;

			[Token(Token = "0x4000AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static ButtonAlgo_JoyStickSwipe.VariableGenerator <>9__7_25;

			[Token(Token = "0x4000AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public static ButtonAlgo_JoyStickSwipe.VariableGenerator <>9__7_26;

			[Token(Token = "0x4000AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_27;

			[Token(Token = "0x4000AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_28;

			[Token(Token = "0x4000AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_29;

			[Token(Token = "0x4000AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_30;

			[Token(Token = "0x4000AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_31;

			[Token(Token = "0x4000AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_32;

			[Token(Token = "0x4000AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_33;

			[Token(Token = "0x4000AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_34;

			[Token(Token = "0x4000AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_35;

			[Token(Token = "0x4000AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_36;

			[Token(Token = "0x4000AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_37;

			[Token(Token = "0x4000AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_38;

			[Token(Token = "0x4000AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_39;

			[Token(Token = "0x4000ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_40;

			[Token(Token = "0x4000ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_41;

			[Token(Token = "0x4000ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_42;

			[Token(Token = "0x4000ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_43;

			[Token(Token = "0x4000ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_44;

			[Token(Token = "0x4000ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_45;

			[Token(Token = "0x4000AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_46;

			[Token(Token = "0x4000AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_47;

			[Token(Token = "0x4000AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_48;

			[Token(Token = "0x4000AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_49;

			[Token(Token = "0x4000AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_50;

			[Token(Token = "0x4000AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_51;

			[Token(Token = "0x4000AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
			public static ButtonAlgo_RawButton<Vector2>.VariableGenerator <>9__7_52;

			[Token(Token = "0x4000AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
			public static ButtonAlgo_RawButton<int>.VariableGenerator <>9__7_53;

			[Token(Token = "0x4000AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
			public static ButtonAlgo_RawButton<int>.VariableGenerator <>9__7_54;

			[Token(Token = "0x4000AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
			public static ButtonAlgo_JoyStickSwipe.VariableGenerator <>9__7_55;

			[Token(Token = "0x4000ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
			public static ButtonAlgo_JoyStickSwipe.VariableGenerator <>9__7_56;

			[Token(Token = "0x4000ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
			public static ButtonAlgo_JoyStickSwipe.VariableGenerator <>9__7_57;

			[Token(Token = "0x4000ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			public static ButtonAlgo_JoyStickSwipe.VariableGenerator <>9__7_58;

			[Token(Token = "0x4000ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_59;

			[Token(Token = "0x4000ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_60;

			[Token(Token = "0x4000ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_61;

			[Token(Token = "0x4000AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_62;

			[Token(Token = "0x4000AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_63;

			[Token(Token = "0x4000AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_64;

			[Token(Token = "0x4000AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_65;

			[Token(Token = "0x4000AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_66;

			[Token(Token = "0x4000AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__7_67;

			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x10033B0", Offset = "0x10033B0", VA = "0x10033B0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x10033B8", Offset = "0x10033B8", VA = "0x10033B8")]
			internal bool <Register>b__7_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x1003418", Offset = "0x1003418", VA = "0x1003418")]
			internal void <Register>b__7_1(bool x)
			{
			}

			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x1003624", Offset = "0x1003624", VA = "0x1003624")]
			internal bool <Register>b__7_2()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x1003684", Offset = "0x1003684", VA = "0x1003684")]
			internal void <Register>b__7_3(bool x)
			{
			}

			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x1003894", Offset = "0x1003894", VA = "0x1003894")]
			internal bool <Register>b__7_4()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x10038F8", Offset = "0x10038F8", VA = "0x10038F8")]
			internal bool <Register>b__7_5()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x1003968", Offset = "0x1003968", VA = "0x1003968")]
			internal bool <Register>b__7_6()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x10039CC", Offset = "0x10039CC", VA = "0x10039CC")]
			internal bool <Register>b__7_7()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x1003A3C", Offset = "0x1003A3C", VA = "0x1003A3C")]
			internal bool <Register>b__7_8()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x1003AA0", Offset = "0x1003AA0", VA = "0x1003AA0")]
			internal bool <Register>b__7_9()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x1003B10", Offset = "0x1003B10", VA = "0x1003B10")]
			internal bool <Register>b__7_10()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x1003B74", Offset = "0x1003B74", VA = "0x1003B74")]
			internal bool <Register>b__7_11()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x1003BE4", Offset = "0x1003BE4", VA = "0x1003BE4")]
			internal bool <Register>b__7_12()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x1003C48", Offset = "0x1003C48", VA = "0x1003C48")]
			internal bool <Register>b__7_13()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x1003CB8", Offset = "0x1003CB8", VA = "0x1003CB8")]
			internal bool <Register>b__7_14()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x1003D1C", Offset = "0x1003D1C", VA = "0x1003D1C")]
			internal bool <Register>b__7_15()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x1003D8C", Offset = "0x1003D8C", VA = "0x1003D8C")]
			internal bool <Register>b__7_16()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x1003DF0", Offset = "0x1003DF0", VA = "0x1003DF0")]
			internal bool <Register>b__7_17()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x1003E60", Offset = "0x1003E60", VA = "0x1003E60")]
			internal bool <Register>b__7_18()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x1003EC4", Offset = "0x1003EC4", VA = "0x1003EC4")]
			internal bool <Register>b__7_19()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x1003F34", Offset = "0x1003F34", VA = "0x1003F34")]
			internal Vector2 <Register>b__7_20()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x1003F94", Offset = "0x1003F94", VA = "0x1003F94")]
			internal int <Register>b__7_21()
			{
				return default(int);
			}

			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x1003FF4", Offset = "0x1003FF4", VA = "0x1003FF4")]
			internal int <Register>b__7_22()
			{
				return default(int);
			}

			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x1004054", Offset = "0x1004054", VA = "0x1004054")]
			internal float <Register>b__7_23()
			{
				return default(float);
			}

			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x10040D0", Offset = "0x10040D0", VA = "0x10040D0")]
			internal float <Register>b__7_24()
			{
				return default(float);
			}

			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x100413C", Offset = "0x100413C", VA = "0x100413C")]
			internal float <Register>b__7_25()
			{
				return default(float);
			}

			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x10041A8", Offset = "0x10041A8", VA = "0x10041A8")]
			internal float <Register>b__7_26()
			{
				return default(float);
			}

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x1004224", Offset = "0x1004224", VA = "0x1004224")]
			internal bool <Register>b__7_27()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x1004284", Offset = "0x1004284", VA = "0x1004284")]
			internal bool <Register>b__7_28()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x10042E8", Offset = "0x10042E8", VA = "0x10042E8")]
			internal bool <Register>b__7_29()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x1004358", Offset = "0x1004358", VA = "0x1004358")]
			internal bool <Register>b__7_30()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x10043BC", Offset = "0x10043BC", VA = "0x10043BC")]
			internal bool <Register>b__7_31()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x100442C", Offset = "0x100442C", VA = "0x100442C")]
			internal bool <Register>b__7_32()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x1004490", Offset = "0x1004490", VA = "0x1004490")]
			internal bool <Register>b__7_33()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x1004500", Offset = "0x1004500", VA = "0x1004500")]
			internal bool <Register>b__7_34()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x1004564", Offset = "0x1004564", VA = "0x1004564")]
			internal bool <Register>b__7_35()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x10045D4", Offset = "0x10045D4", VA = "0x10045D4")]
			internal bool <Register>b__7_36()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x1004638", Offset = "0x1004638", VA = "0x1004638")]
			internal bool <Register>b__7_37()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x10046A8", Offset = "0x10046A8", VA = "0x10046A8")]
			internal bool <Register>b__7_38()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x100470C", Offset = "0x100470C", VA = "0x100470C")]
			internal bool <Register>b__7_39()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x100477C", Offset = "0x100477C", VA = "0x100477C")]
			internal bool <Register>b__7_40()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x10047E0", Offset = "0x10047E0", VA = "0x10047E0")]
			internal bool <Register>b__7_41()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x1004850", Offset = "0x1004850", VA = "0x1004850")]
			internal bool <Register>b__7_42()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x10048B4", Offset = "0x10048B4", VA = "0x10048B4")]
			internal bool <Register>b__7_43()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x1004924", Offset = "0x1004924", VA = "0x1004924")]
			internal bool <Register>b__7_44()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x1004988", Offset = "0x1004988", VA = "0x1004988")]
			internal bool <Register>b__7_45()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x10049F8", Offset = "0x10049F8", VA = "0x10049F8")]
			internal bool <Register>b__7_46()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x1004A5C", Offset = "0x1004A5C", VA = "0x1004A5C")]
			internal bool <Register>b__7_47()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x1004ACC", Offset = "0x1004ACC", VA = "0x1004ACC")]
			internal bool <Register>b__7_48()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x1004B30", Offset = "0x1004B30", VA = "0x1004B30")]
			internal bool <Register>b__7_49()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x1004BA0", Offset = "0x1004BA0", VA = "0x1004BA0")]
			internal bool <Register>b__7_50()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x1004C04", Offset = "0x1004C04", VA = "0x1004C04")]
			internal bool <Register>b__7_51()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x1004C74", Offset = "0x1004C74", VA = "0x1004C74")]
			internal Vector2 <Register>b__7_52()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x1004CD4", Offset = "0x1004CD4", VA = "0x1004CD4")]
			internal int <Register>b__7_53()
			{
				return default(int);
			}

			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x1004D34", Offset = "0x1004D34", VA = "0x1004D34")]
			internal int <Register>b__7_54()
			{
				return default(int);
			}

			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x1004D94", Offset = "0x1004D94", VA = "0x1004D94")]
			internal float <Register>b__7_55()
			{
				return default(float);
			}

			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x1004E10", Offset = "0x1004E10", VA = "0x1004E10")]
			internal float <Register>b__7_56()
			{
				return default(float);
			}

			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x1004E7C", Offset = "0x1004E7C", VA = "0x1004E7C")]
			internal float <Register>b__7_57()
			{
				return default(float);
			}

			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x1004EE8", Offset = "0x1004EE8", VA = "0x1004EE8")]
			internal float <Register>b__7_58()
			{
				return default(float);
			}

			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x1004F64", Offset = "0x1004F64", VA = "0x1004F64")]
			internal bool <Register>b__7_59()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x1004FC4", Offset = "0x1004FC4", VA = "0x1004FC4")]
			internal bool <Register>b__7_60()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x1005028", Offset = "0x1005028", VA = "0x1005028")]
			internal bool <Register>b__7_61()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x1005098", Offset = "0x1005098", VA = "0x1005098")]
			internal bool <Register>b__7_62()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x10050FC", Offset = "0x10050FC", VA = "0x10050FC")]
			internal bool <Register>b__7_63()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x100516C", Offset = "0x100516C", VA = "0x100516C")]
			internal bool <Register>b__7_64()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x10051D0", Offset = "0x10051D0", VA = "0x10051D0")]
			internal bool <Register>b__7_65()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x1005240", Offset = "0x1005240", VA = "0x1005240")]
			internal bool <Register>b__7_66()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x10052A4", Offset = "0x10052A4", VA = "0x10052A4")]
			internal bool <Register>b__7_67()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Matrix4x4 Svr2Unitymatrix;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static float JOYSTICK_MAX;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static QVRPlugin.ControllerData rawControllerDataLeft;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private static QVRPlugin.ControllerData rawControllerDataRight;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private static QVR_Controller_State _rawData;

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x102E340", Offset = "0x102E340", VA = "0x102E340")]
		static InputControllerData()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x102E5D4", Offset = "0x102E5D4", VA = "0x102E5D4")]
		public static void Register()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x1031C04", Offset = "0x1031C04", VA = "0x1031C04")]
		public static void UpdateRawData()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x103228C", Offset = "0x103228C", VA = "0x103228C")]
		public static void Update()
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x10322E4", Offset = "0x10322E4", VA = "0x10322E4")]
		private static void EditorDebug()
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x1032E3C", Offset = "0x1032E3C", VA = "0x1032E3C")]
		public static bool GetIsConnected(DEVICE_ID deviceId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x1032F1C", Offset = "0x1032F1C", VA = "0x1032F1C")]
		public static bool GetIsShow(DEVICE_ID deviceId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x1032FFC", Offset = "0x1032FFC", VA = "0x1032FFC")]
		public static bool GetRawDown(DEVICE_ID deviceId, QVRInput.Button button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x103328C", Offset = "0x103328C", VA = "0x103328C")]
		public static bool GetRawTouch(DEVICE_ID deviceId, QVRInput.Button button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x1033354", Offset = "0x1033354", VA = "0x1033354")]
		public static Vector2 GetRawjoyStickPos(DEVICE_ID deviceId)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x1033124", Offset = "0x1033124", VA = "0x1033124")]
		public static int GetRawTriggerForce(DEVICE_ID deviceId)
		{
			return default(int);
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x10331D8", Offset = "0x10331D8", VA = "0x10331D8")]
		public static int GetRawGripForce(DEVICE_ID deviceId)
		{
			return default(int);
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x103340C", Offset = "0x103340C", VA = "0x103340C")]
		public static int GetRawBatteryLevel(DEVICE_ID deviceId)
		{
			return default(int);
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x10334C0", Offset = "0x10334C0", VA = "0x10334C0")]
		public static Vector3 GetRawPosition(DEVICE_ID deviceId)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x103357C", Offset = "0x103357C", VA = "0x103357C")]
		public static Quaternion GetRawRotation(DEVICE_ID deviceId)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x1033638", Offset = "0x1033638", VA = "0x1033638")]
		public static Vector3 GetRawVelocity(DEVICE_ID deviceId)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x10336F4", Offset = "0x10336F4", VA = "0x10336F4")]
		public static Vector3 GetRawAcc(DEVICE_ID deviceId)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x10337B0", Offset = "0x10337B0", VA = "0x10337B0")]
		public static Vector3 GetRawAngVelocity(DEVICE_ID deviceId)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x103386C", Offset = "0x103386C", VA = "0x103386C")]
		public static Vector3 GetRawAngAcc(DEVICE_ID deviceId)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x1033928", Offset = "0x1033928", VA = "0x1033928")]
		public InputControllerData()
		{
		}
	}
	[Token(Token = "0x20000A0")]
	public class HeadDeviceData
	{
		[Serializable]
		[Token(Token = "0x20001F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5400", Offset = "0xAB5400")]
		private sealed class <>c
		{
			[Token(Token = "0x4000AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ButtonAlgo_RawButton<bool>.VariableGenerator <>9__1_0;

			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x10032F8", Offset = "0x10032F8", VA = "0x10032F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x1003300", Offset = "0x1003300", VA = "0x1003300")]
			internal bool <Register>b__1_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _gazeDown;

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x102AE6C", Offset = "0x102AE6C", VA = "0x102AE6C")]
		public static void Register()
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x102AF9C", Offset = "0x102AF9C", VA = "0x102AF9C")]
		public HeadDeviceData()
		{
		}
	}
	[Token(Token = "0x20000A1")]
	internal sealed class QVRInputModuleManager<T> where T : BaseInputModule
	{
		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6DF4", Offset = "0xAB6DF4")]
		private T <InputModule>k__BackingField;

		[Token(Token = "0x170000CC")]
		public T InputModule
		{
			[Token(Token = "0x6000691")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB4EC", Offset = "0xABB4EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000692")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB4FC", Offset = "0xABB4FC")]
			set
			{
			}
		}

		[Token(Token = "0x6000693")]
		public void OnStart()
		{
		}

		[Token(Token = "0x6000694")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000695")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000696")]
		public QVRInputModuleManager()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	internal class QVRInputModuleWrapper<T> : MonoBehaviour where T : QVRBaseInputModule
	{
		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private QVRInputModuleManager<T> _moduleManager;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static QVRInputModuleWrapper<T> _instance;

		[Token(Token = "0x6000697")]
		public T GetModule()
		{
			return null;
		}

		[Token(Token = "0x6000698")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000699")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600069A")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600069B")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600069C")]
		public static void SetActive(bool active)
		{
		}

		[Token(Token = "0x600069D")]
		public static bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600069E")]
		public QVRInputModuleWrapper()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	public abstract class QVRInputPointer : MonoBehaviour, QVRIInputPointer
	{
		[Token(Token = "0x600069F")]
		public abstract void OnEnter(GameObject targetObject, Vector3 intersectionPosition, float intersectionDisatance, bool isInteractive);

		[Token(Token = "0x60006A0")]
		public abstract void OnStay(GameObject targetObject, Vector3 intersectionPosition, float intersectionDisatance, bool isInteractive);

		[Token(Token = "0x60006A1")]
		public abstract void OnExit(GameObject targetObject);

		[Token(Token = "0x60006A2")]
		public abstract void OnTriggerStart();

		[Token(Token = "0x60006A3")]
		public abstract void OnTriggerEnd();

		[Token(Token = "0x60006A4")]
		public abstract void ResetPosition();

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x1489C18", Offset = "0x1489C18", VA = "0x1489C18")]
		protected QVRInputPointer()
		{
		}
	}
	[Token(Token = "0x20000A4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4A70", Offset = "0xAB4A70")]
	internal sealed class QVRLaserPointer : QVRInputPointer
	{
		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _pointerOriginalScale;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _pointer;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private QVRReticle _reticle;

		[Token(Token = "0x170000CD")]
		public Transform Pointer
		{
			[Token(Token = "0x60006B4")]
			[Address(RVA = "0x148C934", Offset = "0x148C934", VA = "0x148C934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x148BF2C", Offset = "0x148BF2C", VA = "0x148BF2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x148C074", Offset = "0x148C074", VA = "0x148C074")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x148C180", Offset = "0x148C180", VA = "0x148C180")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x148C1D0", Offset = "0x148C1D0", VA = "0x148C1D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x148C1D4", Offset = "0x148C1D4", VA = "0x148C1D4")]
		private void SetLaserStartEndPosition()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x148C374", Offset = "0x148C374", VA = "0x148C374", Slot = "10")]
		public override void OnEnter(GameObject targetObject, Vector3 intersectionPosition, float intersectionDisatance, bool isInteractive)
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x148C5C0", Offset = "0x148C5C0", VA = "0x148C5C0", Slot = "11")]
		public override void OnStay(GameObject targetObject, Vector3 intersectionPosition, float intersectionDisatance, bool isInteractive)
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x148C6A0", Offset = "0x148C6A0", VA = "0x148C6A0", Slot = "12")]
		public override void OnExit(GameObject targetObject)
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x148C850", Offset = "0x148C850", VA = "0x148C850", Slot = "13")]
		public override void OnTriggerStart()
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x148C854", Offset = "0x148C854", VA = "0x148C854", Slot = "14")]
		public override void OnTriggerEnd()
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x148C858", Offset = "0x148C858", VA = "0x148C858", Slot = "15")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x148C548", Offset = "0x148C548", VA = "0x148C548")]
		private void EnterPointer()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x148C7D8", Offset = "0x148C7D8", VA = "0x148C7D8")]
		private void ExitPointer()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x1487F38", Offset = "0x1487F38", VA = "0x1487F38")]
		public Vector3 GetPointerPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x148C950", Offset = "0x148C950", VA = "0x148C950")]
		public QVRLaserPointer()
		{
		}
	}
	[Token(Token = "0x20000A5")]
	public class QVRVisualBase : MonoBehaviour
	{
		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Hand _hand;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 angle;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastPos;

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x2A60024", Offset = "0x2A60024", VA = "0x2A60024")]
		public void SetHand(Hand hand)
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x2A6002C", Offset = "0x2A6002C", VA = "0x2A6002C")]
		public void SetHandleRot(Quaternion rot)
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x2A60138", Offset = "0x2A60138", VA = "0x2A60138")]
		public void SetHandlePos(Vector3 pos)
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x2A6026C", Offset = "0x2A6026C", VA = "0x2A6026C", Slot = "4")]
		public virtual Vector3 GetBeamOriginPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x2A60290", Offset = "0x2A60290", VA = "0x2A60290", Slot = "5")]
		public virtual Quaternion GetBeamOriginRot()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x2A6030C", Offset = "0x2A6030C", VA = "0x2A6030C", Slot = "6")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x2A60370", Offset = "0x2A60370", VA = "0x2A60370")]
		public QVRVisualBase()
		{
		}
	}
	[Token(Token = "0x20000A6")]
	public class QVRConfig
	{
		[Token(Token = "0x20001F7")]
		public class RenderOrderConfig
		{
			[Token(Token = "0x4000AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int POINTER_ORDER;

			[Token(Token = "0x4000AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static readonly int CONTROLLER_MODEL_ORDER;

			[Token(Token = "0x4000ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly int KEYBOARD_CANVAS_ORDER;

			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x100A38C", Offset = "0x100A38C", VA = "0x100A38C")]
			public RenderOrderConfig()
			{
			}
		}

		[Token(Token = "0x20001F8")]
		public class ArmModelConfig
		{
			[Token(Token = "0x4000ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly float POINTER_TILT_ANGLE;

			[Token(Token = "0x4000ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static readonly float ADDED_ELBOW_HEIGHT;

			[Token(Token = "0x4000ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly float ADDED_ELBOW_DEPTH;

			[Token(Token = "0x4000ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static readonly bool USE_ACCERLEROMETER;

			[Token(Token = "0x6000E65")]
			[Address(RVA = "0x100A298", Offset = "0x100A298", VA = "0x100A298")]
			public ArmModelConfig()
			{
			}
		}

		[Token(Token = "0x20001F9")]
		public class InputModuleConfig
		{
			[Token(Token = "0x4000ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly float POINTER_DEFAULT_DISTANCE;

			[Token(Token = "0x4000AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static readonly float LONG_PRESS_TIME;

			[Token(Token = "0x4000AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly float POINTER_OFFSET;

			[Token(Token = "0x6000E67")]
			[Address(RVA = "0x100A310", Offset = "0x100A310", VA = "0x100A310")]
			public InputModuleConfig()
			{
			}
		}

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LayerMask GAZE_STANDALONE_RAYCAST_LAYERMASK;

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x14822D8", Offset = "0x14822D8", VA = "0x14822D8")]
		public QVRConfig()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	public static class QVRInputConst
	{
		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly float CONTROLLER_TOUCHPOINT_SCALER;
	}
	[Token(Token = "0x20000A8")]
	public class QVRExceptions
	{
		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Exception NotImplement;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Exception NotSupported;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Exception NullReference;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Exception IndexOutOfRange;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Exception ParamInvalid;

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x14885A0", Offset = "0x14885A0", VA = "0x14885A0")]
		public QVRExceptions()
		{
		}
	}
	[Token(Token = "0x20000A9")]
	public class QVRPlatform
	{
		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool sIsAndroid;

		[Token(Token = "0x170000CE")]
		public static bool IsAndroid
		{
			[Token(Token = "0x60006C3")]
			[Address(RVA = "0x148E2EC", Offset = "0x148E2EC", VA = "0x148E2EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x148E29C", Offset = "0x148E29C", VA = "0x148E29C")]
		static QVRPlatform()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x148E350", Offset = "0x148E350", VA = "0x148E350")]
		public QVRPlatform()
		{
		}
	}
	[Token(Token = "0x20000AA")]
	public class Version
	{
		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string svr_version;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string controller_version;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string svr_modify_version;

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xFFC780", Offset = "0xFFC780", VA = "0xFFC780")]
		public Version()
		{
		}
	}
	[Token(Token = "0x20000AB")]
	public enum KEY_STATUS
	{
		[Token(Token = "0x40003A6")]
		UP = 0,
		[Token(Token = "0x40003A7")]
		DOWN = 1,
		[Token(Token = "0x40003A8")]
		Touch = 3,
		[Token(Token = "0x40003A9")]
		NoTouch = 4,
		[Token(Token = "0x40003AA")]
		NONE = 5
	}
	[Token(Token = "0x20000AC")]
	public enum DEVICE_ID
	{
		[Token(Token = "0x40003AC")]
		HAND_0 = 1,
		[Token(Token = "0x40003AD")]
		HAND_1,
		[Token(Token = "0x40003AE")]
		HAND_0_1
	}
	[Token(Token = "0x20000AD")]
	public class CMDKey
	{
		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string KEY_VERSION;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string KEY_BATTERY;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string KEY_CONNECTION;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string KEY_ALL_CONTROLLER_STATUS;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string KEY_POSITION;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string KEY_QUATERNION;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string KEY_POSE;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string KEY_VIBRATE;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string KEY_RECENTER;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string KEY_START_PAIRING;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string KEY_CLEAR_PAIRING;

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x150B710", Offset = "0x150B710", VA = "0x150B710")]
		public CMDKey()
		{
		}
	}
	[Token(Token = "0x20000AE")]
	public static class QVRInputUtil
	{
		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x148B3DC", Offset = "0x148B3DC", VA = "0x148B3DC")]
		public static DEVICE_ID Ctrl2DeviceId(QVRInput.Controller controllerMask = QVRInput.Controller.Default)
		{
			return default(DEVICE_ID);
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x148B094", Offset = "0x148B094", VA = "0x148B094")]
		public static QVRInput.Controller GetControllerFromDefault(QVRInput.Controller controller = QVRInput.Controller.Default)
		{
			return default(QVRInput.Controller);
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x148BEEC", Offset = "0x148BEEC", VA = "0x148BEEC")]
		public static float ParseTriggerForce(int origin)
		{
			return default(float);
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x1483DE4", Offset = "0x1483DE4", VA = "0x1483DE4")]
		public static QVRInput.Controller Hand2Ctrl(Hand hand)
		{
			return default(QVRInput.Controller);
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x148BF04", Offset = "0x148BF04", VA = "0x148BF04")]
		public static bool IsFloatEqual(float a, float b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000AF")]
	public static class QVRUtils
	{
		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static long beginTime_;

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x2A5FB60", Offset = "0x2A5FB60", VA = "0x2A5FB60")]
		public static string ParseToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x60006CF")]
		public static T FromJson<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x2A5FBC4", Offset = "0x2A5FBC4", VA = "0x2A5FBC4")]
		public static long GetTimestamp()
		{
			return default(long);
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x2A5FC9C", Offset = "0x2A5FC9C", VA = "0x2A5FC9C")]
		public static void BeginTime()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x2A5FCEC", Offset = "0x2A5FCEC", VA = "0x2A5FCEC")]
		public static long EndTime()
		{
			return default(long);
		}
	}
	[Token(Token = "0x20000B0")]
	public interface IMonitor
	{
		[Token(Token = "0x60006D3")]
		void Update();

		[Token(Token = "0x60006D4")]
		void AppendToStringBuilder(ref StringBuilder sb);

		[Token(Token = "0x60006D5")]
		string GetName();

		[Token(Token = "0x60006D6")]
		bool IsTriggerEvent();

		[Token(Token = "0x60006D7")]
		float GetDurationTime();
	}
	[Token(Token = "0x20000B1")]
	public class QVRVariableMonitor<T> : IMonitor where T : IEquatable<T>
	{
		[Token(Token = "0x20001FA")]
		public delegate T VariableGenerator();

		[Token(Token = "0x20001FB")]
		public delegate void EventPublisher();

		[Token(Token = "0x20001FC")]
		public delegate void ChangePublisher(T val);

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool bEventPublish;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool bChangePublish;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool bChangePublishTime;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private VariableGenerator m_generator;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private EventPublisher m_eventPublisher;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private EventPublisher m_eventPublisherTime;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ChangePublisher m_changePublisher;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string m_name;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_currentValueChange;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_prevValue;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_currentValue;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_triggerValue;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _beginTime;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _time;

		[Token(Token = "0x170000CF")]
		public T CurrentValue
		{
			[Token(Token = "0x60006D8")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60006D9")]
		public QVRVariableMonitor(string name, VariableGenerator generator, [Optional] T initValue)
		{
		}

		[Token(Token = "0x60006DA")]
		public QVRVariableMonitor<T> AddEventPublisher(T t, EventPublisher epub)
		{
			return null;
		}

		[Token(Token = "0x60006DB")]
		public QVRVariableMonitor<T> AddChangePublisher(ChangePublisher cpub)
		{
			return null;
		}

		[Token(Token = "0x60006DC")]
		public QVRVariableMonitor<T> AddEventPublisherTime(T t, float time, EventPublisher epub)
		{
			return null;
		}

		[Token(Token = "0x60006DD")]
		public void Update()
		{
		}

		[Token(Token = "0x60006DE")]
		public void AppendToStringBuilder(ref StringBuilder sb)
		{
		}

		[Token(Token = "0x60006DF")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x60006E0")]
		public bool IsTriggerEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E1")]
		public float GetDurationTime()
		{
			return default(float);
		}
	}
	[Token(Token = "0x20000B2")]
	public class QVRVersion
	{
		[Token(Token = "0x40003C9")]
		private const string QIYI_UNITY_SDK_VERSION = "0.0.1";

		[Token(Token = "0x40003CA")]
		private const string QIYI_UNITY_SDK_VERSION_HEADER = "QIYI VR UNITY SDK VERSION: ";

		[Token(Token = "0x40003CB")]
		private const string QIYI_CONTROLLER_SDK_VERSION_HEADER = "QIYICONTROLLER SDK VERSION: ";

		[Token(Token = "0x40003CC")]
		private const string SVR_API_VERSION_HEADER = "SVR API VERSION: ";

		[Token(Token = "0x40003CD")]
		private const string SVR_MODIFY_VERSION_HEADER = "SVR MODIFY VERSION: ";

		[Token(Token = "0x40003CE")]
		private const string UNITY_VERSION_HEADER = "UNITY RUNTIME VERSION: ";

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x2A5FD40", Offset = "0x2A5FD40", VA = "0x2A5FD40")]
		private static void LogBeforeSceneLoad()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x2A5FD5C", Offset = "0x2A5FD5C", VA = "0x2A5FD5C")]
		private static void LogQiyiUnitySdkVersion()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x2A5FDD0", Offset = "0x2A5FDD0", VA = "0x2A5FDD0")]
		private static void LogControllerVersion()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x2A5FE90", Offset = "0x2A5FE90", VA = "0x2A5FE90")]
		private static void LogSvrVersion()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x2A5FF84", Offset = "0x2A5FF84", VA = "0x2A5FF84")]
		private static void LogUnityVersion()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x2A6001C", Offset = "0x2A6001C", VA = "0x2A6001C")]
		public QVRVersion()
		{
		}
	}
	[Token(Token = "0x20000B3")]
	public class QVRBoundary
	{
		[Token(Token = "0x20001FD")]
		public enum Node
		{
			[Token(Token = "0x4000AE3")]
			HandLeft = 3,
			[Token(Token = "0x4000AE4")]
			HandRight = 4,
			[Token(Token = "0x4000AE5")]
			Head = 9
		}

		[Token(Token = "0x20001FE")]
		public enum BoundaryType
		{
			[Token(Token = "0x4000AE7")]
			OuterBoundary = 1,
			[Token(Token = "0x4000AE8")]
			PlayArea
		}

		[Token(Token = "0x20001FF")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x4000AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x4000AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cachedVector3fSize;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static QVRPlugin.QVRNativeBuffer cachedGeometryNativeBuffer;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float[] cachedGeometryManagedBuffer;

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x148127C", Offset = "0x148127C", VA = "0x148127C")]
		public bool GetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x14812BC", Offset = "0x14812BC", VA = "0x14812BC")]
		public BoundaryTestResult TestNode(QVRPlugin.Node node, QVRPlugin.BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x148137C", Offset = "0x148137C", VA = "0x148137C")]
		public BoundaryTestResult TestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x148143C", Offset = "0x148143C", VA = "0x148143C")]
		public Vector3[] GetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x14817C4", Offset = "0x14817C4", VA = "0x14817C4")]
		public Vector3 GetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x14817DC", Offset = "0x14817DC", VA = "0x14817DC")]
		public bool GetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x148181C", Offset = "0x148181C", VA = "0x148181C")]
		public void SetVisible(bool value)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x148184C", Offset = "0x148184C", VA = "0x148184C")]
		public QVRBoundary()
		{
		}
	}
	[Token(Token = "0x20000B4")]
	public class QVRCameraDaemon : QVRSingletion<QVRCameraDaemon>
	{
		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SvrManager.SvrStatus status;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SvrPlugin plugin;

		[Token(Token = "0x170000D0")]
		public bool Initialized
		{
			[Token(Token = "0x60006F1")]
			[Address(RVA = "0x1481CF8", Offset = "0x1481CF8", VA = "0x1481CF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x1481D14", Offset = "0x1481D14", VA = "0x1481D14")]
		private void Start()
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x1481DB8", Offset = "0x1481DB8", VA = "0x1481DB8")]
		public void SetPause(bool pause)
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x1481ED8", Offset = "0x1481ED8", VA = "0x1481ED8")]
		private void OnPause()
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x1482028", Offset = "0x1482028", VA = "0x1482028")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x14821CC", Offset = "0x14821CC", VA = "0x14821CC")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x14821D4", Offset = "0x14821D4", VA = "0x14821D4", Slot = "5")]
		public override void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x1482228", Offset = "0x1482228", VA = "0x1482228")]
		public QVRCameraDaemon()
		{
		}
	}
	[Token(Token = "0x20000B5")]
	public class QVRDaemon : MonoBehaviour
	{
		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static QVRDaemon Instance;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject editorMouseGO;

		[Token(Token = "0x170000D1")]
		public GameObject EditorMouseGO
		{
			[Token(Token = "0x60006F9")]
			[Address(RVA = "0x1486C00", Offset = "0x1486C00", VA = "0x1486C00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x1486C08", Offset = "0x1486C08", VA = "0x1486C08")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x1486CE4", Offset = "0x1486CE4", VA = "0x1486CE4")]
		public QVRDaemon()
		{
		}
	}
	[Token(Token = "0x20000B6")]
	public class QVREyeWrap : MonoBehaviour
	{
		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SvrEye leftSvrEye;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SvrEye rightSvrEye;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera leftCamera;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera rightCamera;

		[Token(Token = "0x170000D2")]
		public float HorizontalFieldOfView
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x1488788", Offset = "0x1488788", VA = "0x1488788")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x14887E4", Offset = "0x14887E4", VA = "0x14887E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x1488874", Offset = "0x1488874", VA = "0x1488874")]
		public void InitEye(int index, List<SvrEye> eyes)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x1488A3C", Offset = "0x1488A3C", VA = "0x1488A3C")]
		public void InitCamera(SvrPlugin.EyeMask side, Vector3 eyePos, Quaternion eyeRot)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x14888F0", Offset = "0x14888F0", VA = "0x14888F0")]
		private void AddEyes(int index, Camera cam, SvrPlugin.EyeMask side, List<SvrEye> eyes)
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x1488B64", Offset = "0x1488B64", VA = "0x1488B64")]
		private void AddOverlays(Camera cam, SvrPlugin.EyeMask side, List<SvrOverlay> overlays)
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1488D14", Offset = "0x1488D14", VA = "0x1488D14")]
		public QVREyeWrap()
		{
		}
	}
	[Token(Token = "0x20000B7")]
	public class QVRButtonScaleSelector : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x2000200")]
		public delegate void DelegateGazeRecenter(bool enter);

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite normalSprite;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite hoverSprite;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DelegateGazeRecenter delegateGazeRecenter;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isScalParent;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float moveZ;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float scaleXY;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text m_Text;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _transform;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _originalMoveZ;

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x14819A4", Offset = "0x14819A4", VA = "0x14819A4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x1481A60", Offset = "0x1481A60", VA = "0x1481A60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x1481B9C", Offset = "0x1481B9C", VA = "0x1481B9C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x1481CAC", Offset = "0x1481CAC", VA = "0x1481CAC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x1481A64", Offset = "0x1481A64", VA = "0x1481A64")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x1481CE0", Offset = "0x1481CE0", VA = "0x1481CE0")]
		public void ResetScaleAndMove()
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1481CE4", Offset = "0x1481CE4", VA = "0x1481CE4")]
		public QVRButtonScaleSelector()
		{
		}
	}
	[Token(Token = "0x20000B8")]
	internal sealed class QVRRecenterView : MonoBehaviour
	{
		[Token(Token = "0x40003E3")]
		public const string TAG = "RecenterView";

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform recenterTR;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool showRecenter;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float recenterTime;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float escapeTime;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool isRecenterDelayTime;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float recenterDelayTime;

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x148E620", Offset = "0x148E620", VA = "0x148E620")]
		private void Awake()
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x148E774", Offset = "0x148E774", VA = "0x148E774")]
		private void Update()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x148EA20", Offset = "0x148EA20", VA = "0x148EA20")]
		public void Recenter()
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x148E9AC", Offset = "0x148E9AC", VA = "0x148E9AC")]
		public void Snapshot()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x148EA3C", Offset = "0x148EA3C", VA = "0x148EA3C")]
		public QVRRecenterView()
		{
		}
	}
	[Token(Token = "0x20000B9")]
	public class RequestCallback
	{
		[Token(Token = "0x600070F")]
		[Address(RVA = "0x2A65F6C", Offset = "0x2A65F6C", VA = "0x2A65F6C")]
		public RequestCallback()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x2A65F74", Offset = "0x2A65F74", VA = "0x2A65F74", Slot = "4")]
		public virtual void HandleRequestMessage(IntPtr ret, int size)
		{
		}
	}
	[Token(Token = "0x20000BA")]
	public class RequestCallbackByVoid : RequestCallback
	{
		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Action callBack;

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x2A65F78", Offset = "0x2A65F78", VA = "0x2A65F78")]
		public RequestCallbackByVoid(Action callBack)
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x2A65FAC", Offset = "0x2A65FAC", VA = "0x2A65FAC")]
		public static RequestCallback Create(Action callBack)
		{
			return null;
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x2A66018", Offset = "0x2A66018", VA = "0x2A66018", Slot = "4")]
		public override void HandleRequestMessage(IntPtr data, int size)
		{
		}
	}
	[Token(Token = "0x20000BB")]
	public class RequestCallbackByJson<T> : RequestCallback
	{
		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Action<T> callBack;

		[Token(Token = "0x6000714")]
		public RequestCallbackByJson(Action<T> callBack)
		{
		}

		[Token(Token = "0x6000715")]
		public static RequestCallback Create(Action<T> callBack)
		{
			return null;
		}

		[Token(Token = "0x6000716")]
		public override void HandleRequestMessage(IntPtr data, int size)
		{
		}
	}
	[Token(Token = "0x20000BC")]
	public interface IRequestCallbackData<T>
	{
		[Token(Token = "0x6000717")]
		T ParseData(IntPtr ret);
	}
	[Token(Token = "0x20000BD")]
	public class RequestCallbackByBit<T> : RequestCallback
	{
		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Action<T> callBack;

		[Token(Token = "0x6000718")]
		public RequestCallbackByBit(Action<T> callBack)
		{
		}

		[Token(Token = "0x6000719")]
		public static RequestCallback Create(Action<T> callBack)
		{
			return null;
		}

		[Token(Token = "0x600071A")]
		public override void HandleRequestMessage(IntPtr ret, int size)
		{
		}
	}
	[Token(Token = "0x20000BE")]
	public class RequestID
	{
		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ulong id;

		[Token(Token = "0x170000D3")]
		public static ulong ID
		{
			[Token(Token = "0x600071B")]
			[Address(RVA = "0x2A6602C", Offset = "0x2A6602C", VA = "0x2A6602C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x2A66098", Offset = "0x2A66098", VA = "0x2A66098")]
		public RequestID()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	public class QVRMessageManager
	{
		[Token(Token = "0x2000201")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xAB5410", Offset = "0xAB5410")]
		public delegate void CallBack(ulong messageId, IntPtr result, int size);

		[Serializable]
		[Token(Token = "0x2000202")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5424", Offset = "0xAB5424")]
		private sealed class <>c
		{
			[Token(Token = "0x4000AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<QVRPlugin.QVRMessageResult<QVRPlugin.SDKInit>> <>9__12_0;

			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x100B5E0", Offset = "0x100B5E0", VA = "0x100B5E0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x100B5E8", Offset = "0x100B5E8", VA = "0x100B5E8")]
			internal void <RegisterListener>b__12_0(QVRPlugin.QVRMessageResult<QVRPlugin.SDKInit> ret)
			{
			}
		}

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, RequestCallback> requestCallbackList;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<ulong, RequestCallback> listenerCallbackList;

		[Token(Token = "0x170000D4")]
		public static IntPtr RequestProcess_Ptr
		{
			[Token(Token = "0x600071F")]
			[Address(RVA = "0x148DF04", Offset = "0x148DF04", VA = "0x148DF04")]
			get
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x170000D5")]
		public static IntPtr ListenerProcess_Ptr
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0x148DFBC", Offset = "0x148DFBC", VA = "0x148DFBC")]
			get
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x148DCEC", Offset = "0x148DCEC", VA = "0x148DCEC")]
		static QVRMessageManager()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x148D7C8", Offset = "0x148D7C8", VA = "0x148D7C8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xABB50C", Offset = "0xABB50C")]
		public static void MessageProcess(ulong requestId, IntPtr result, int size)
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x148E074", Offset = "0x148E074", VA = "0x148E074")]
		public static ulong AddRequest(RequestCallback rcb)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x148DA84", Offset = "0x148DA84", VA = "0x148DA84")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xABB56C", Offset = "0xABB56C")]
		public static void ListenerProcess(ulong messageCode, IntPtr result, int size)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x148E150", Offset = "0x148E150", VA = "0x148E150")]
		public static void AddRequest(QVRMessageCode messageCode, RequestCallback rcb)
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x148DDAC", Offset = "0x148DDAC", VA = "0x148DDAC")]
		private static void RegisterListener()
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x148E294", Offset = "0x148E294", VA = "0x148E294")]
		public QVRMessageManager()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public static class QVRPlugin
	{
		[Token(Token = "0x2000203")]
		public struct Sizei
		{
			[Token(Token = "0x4000AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int w;

			[Token(Token = "0x4000AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int h;

			[Token(Token = "0x4000AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Sizei zero;
		}

		[Token(Token = "0x2000204")]
		public struct Sizef
		{
			[Token(Token = "0x4000AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float w;

			[Token(Token = "0x4000AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float h;

			[Token(Token = "0x4000AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Sizef zero;
		}

		[Token(Token = "0x2000205")]
		public struct Vector2i
		{
			[Token(Token = "0x4000AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4000AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;
		}

		[Token(Token = "0x2000206")]
		public struct Recti
		{
			[Token(Token = "0x4000AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Vector2i Pos;

			[Token(Token = "0x4000AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Sizei Size;
		}

		[Token(Token = "0x2000207")]
		public struct Rectf
		{
			[Token(Token = "0x4000AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Vector2f Pos;

			[Token(Token = "0x4000AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Sizef Size;
		}

		[Token(Token = "0x2000208")]
		public struct Frustumf
		{
			[Token(Token = "0x4000AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float zNear;

			[Token(Token = "0x4000AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float zFar;

			[Token(Token = "0x4000AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float fovX;

			[Token(Token = "0x4000AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float fovY;
		}

		[Token(Token = "0x2000209")]
		public struct Frustumf2
		{
			[Token(Token = "0x4000AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float zNear;

			[Token(Token = "0x4000B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float zFar;

			[Token(Token = "0x4000B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Fovf Fov;
		}

		[Token(Token = "0x200020A")]
		public struct Vector2f
		{
			[Token(Token = "0x4000B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4000B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;
		}

		[Token(Token = "0x200020B")]
		public struct Vector3f
		{
			[Token(Token = "0x4000B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4000B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4000B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float z;

			[Token(Token = "0x4000B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Vector3f zero;

			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x100D520", Offset = "0x100D520", VA = "0x100D520", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x200020C")]
		public struct Quatf
		{
			[Token(Token = "0x4000B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float z;

			[Token(Token = "0x4000B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float w;

			[Token(Token = "0x4000B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Quatf identity;

			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x100D244", Offset = "0x100D244", VA = "0x100D244", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x200020D")]
		public struct Posef
		{
			[Token(Token = "0x4000B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Quatf Orientation;

			[Token(Token = "0x4000B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3f Position;

			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Posef identity;

			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x100BB40", Offset = "0x100BB40", VA = "0x100BB40", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x200020E")]
		public enum Bool
		{
			[Token(Token = "0x4000B11")]
			False,
			[Token(Token = "0x4000B12")]
			True
		}

		[Token(Token = "0x200020F")]
		public enum Node
		{
			[Token(Token = "0x4000B14")]
			None = -1,
			[Token(Token = "0x4000B15")]
			EyeLeft,
			[Token(Token = "0x4000B16")]
			EyeRight,
			[Token(Token = "0x4000B17")]
			EyeCenter,
			[Token(Token = "0x4000B18")]
			HandLeft,
			[Token(Token = "0x4000B19")]
			HandRight,
			[Token(Token = "0x4000B1A")]
			TrackerZero,
			[Token(Token = "0x4000B1B")]
			TrackerOne,
			[Token(Token = "0x4000B1C")]
			TrackerTwo,
			[Token(Token = "0x4000B1D")]
			TrackerThree,
			[Token(Token = "0x4000B1E")]
			Head,
			[Token(Token = "0x4000B1F")]
			DeviceObjectZero,
			[Token(Token = "0x4000B20")]
			Count
		}

		[Token(Token = "0x2000210")]
		public enum BoundaryType
		{
			[Token(Token = "0x4000B22")]
			OuterBoundary = 1,
			[Token(Token = "0x4000B23")]
			PlayArea
		}

		[Token(Token = "0x2000211")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Bool IsTriggering;

			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3f ClosestPoint;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3f ClosestPointNormal;
		}

		[Token(Token = "0x2000212")]
		public struct BoundaryGeometry
		{
			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BoundaryType BoundaryType;

			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3f[] Points;

			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int PointsCount;
		}

		[Token(Token = "0x2000213")]
		public struct Colorf
		{
			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float r;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float g;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float b;

			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float a;
		}

		[Token(Token = "0x2000214")]
		public struct Fovf
		{
			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float UpTan;

			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float DownTan;

			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float LeftTan;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float RightTan;
		}

		[Token(Token = "0x2000215")]
		public struct ControllerData
		{
			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int isConnect;

			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int button;

			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int buttonTouch;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int batteryLevel;

			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int triggerForce;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int gripForce;

			[Token(Token = "0x4000B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int isShow;

			[Token(Token = "0x4000B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector2f joyStickPos;

			[Token(Token = "0x4000B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3f position;

			[Token(Token = "0x4000B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Quatf rotation;

			[Token(Token = "0x4000B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3f velocity;

			[Token(Token = "0x4000B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3f acceleration;

			[Token(Token = "0x4000B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3f angVelocity;

			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public Vector3f angAcceleration;
		}

		[Token(Token = "0x2000216")]
		public class QVRNativeBuffer : IDisposable
		{
			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool disposed;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int m_numBytes;

			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IntPtr m_ptr;

			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x100BCDC", Offset = "0x100BCDC", VA = "0x100BCDC")]
			public QVRNativeBuffer(int numBytes)
			{
			}

			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x100BDE0", Offset = "0x100BDE0", VA = "0x100BDE0", Slot = "1")]
			~QVRNativeBuffer()
			{
			}

			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x100BE90", Offset = "0x100BE90", VA = "0x100BE90")]
			public void Reset(int numBytes)
			{
			}

			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x100BE94", Offset = "0x100BE94", VA = "0x100BE94")]
			public int GetCapacity()
			{
				return default(int);
			}

			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x100BE9C", Offset = "0x100BE9C", VA = "0x100BE9C")]
			public IntPtr GetPointer(int byteOffset = 0)
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x100BF2C", Offset = "0x100BF2C", VA = "0x100BF2C", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x100BE5C", Offset = "0x100BE5C", VA = "0x100BE5C")]
			private void Dispose(bool disposing)
			{
			}

			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x100BD3C", Offset = "0x100BD3C", VA = "0x100BD3C")]
			private void Reallocate(int numBytes)
			{
			}

			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x100BFA8", Offset = "0x100BFA8", VA = "0x100BFA8")]
			private void Release()
			{
			}
		}

		[Token(Token = "0x2000217")]
		public class QVRMessageResult<T>
		{
			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;

			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string code;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string message;

			[Token(Token = "0x6000E91")]
			public bool IsSuccess()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E92")]
			public QVRMessageResult()
			{
			}
		}

		[Token(Token = "0x2000218")]
		public class SDKInit
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x100D480", Offset = "0x100D480", VA = "0x100D480")]
			public SDKInit()
			{
			}
		}

		[Token(Token = "0x2000219")]
		public class QiyuAccountInfo
		{
			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string uid;

			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4000B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string icon;

			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x100D23C", Offset = "0x100D23C", VA = "0x100D23C")]
			public QiyuAccountInfo()
			{
			}
		}

		[Token(Token = "0x200021A")]
		public class AppUpdateInfo
		{
			[Token(Token = "0x2000281")]
			public class Item
			{
				[Token(Token = "0x4000CA4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string originalName;

				[Token(Token = "0x4000CA5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public string downUrl;

				[Token(Token = "0x4000CA6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string updateTime;

				[Token(Token = "0x6000F6E")]
				[Address(RVA = "0x19B7030", Offset = "0x19B7030", VA = "0x19B7030")]
				public Item()
				{
				}
			}

			[Token(Token = "0x4000B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Item> files;

			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x100BACC", Offset = "0x100BACC", VA = "0x100BACC")]
			public AppUpdateInfo()
			{
			}
		}

		[Token(Token = "0x200021B")]
		public class DeepLinkParam
		{
			[Token(Token = "0x4000B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string appID;

			[Token(Token = "0x4000B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string key;

			[Token(Token = "0x4000B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string value;

			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x100BAD4", Offset = "0x100BAD4", VA = "0x100BAD4")]
			public DeepLinkParam(string appID, string key, string value)
			{
			}

			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x100BB38", Offset = "0x100BB38", VA = "0x100BB38")]
			public string ToJson()
			{
				return null;
			}
		}

		[Token(Token = "0x200021C")]
		public class QVRSDKCorePlugins
		{
			[Token(Token = "0x2000282")]
			public enum QVRSDKRenderEvent
			{
				[Token(Token = "0x4000CA8")]
				RenderEndUpdate
			}

			[Token(Token = "0x4000B4E")]
			private const string pluginName = "qiyivrsdkcore";

			[PreserveSig]
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x100C03C", Offset = "0x100C03C", VA = "0x100C03C")]
			private static extern IntPtr GetVRSDKRenderEventFunc();

			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x100C0B0", Offset = "0x100C0B0", VA = "0x100C0B0")]
			public static void IssueEvent(QVRSDKRenderEvent e)
			{
			}

			[PreserveSig]
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x100C0D8", Offset = "0x100C0D8", VA = "0x100C0D8")]
			public static extern void QVR_Init(IntPtr activity, IntPtr funPtr_request, IntPtr funPtr_listener);

			[PreserveSig]
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x100C170", Offset = "0x100C170", VA = "0x100C170")]
			public static extern void QVR_Update(float deltaTime);

			[PreserveSig]
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x100C1F4", Offset = "0x100C1F4", VA = "0x100C1F4")]
			public static extern void QVR_OnApplicationPause(bool pause);

			[PreserveSig]
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x100C274", Offset = "0x100C274", VA = "0x100C274")]
			public static extern void QVR_SendHomeEvent();

			[PreserveSig]
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x100C2E4", Offset = "0x100C2E4", VA = "0x100C2E4")]
			public static extern Bool QVR_GetBoundaryConfigured();

			[PreserveSig]
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x100C358", Offset = "0x100C358", VA = "0x100C358")]
			public static extern BoundaryTestResult QVR_TestBoundaryNode(Node nodeId, BoundaryType boundaryType);

			[PreserveSig]
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x100C3F0", Offset = "0x100C3F0", VA = "0x100C3F0")]
			public static extern BoundaryTestResult QVR_TestBoundaryPoint(Vector3f point, BoundaryType boundaryType);

			[PreserveSig]
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x100C4A8", Offset = "0x100C4A8", VA = "0x100C4A8")]
			public static extern Bool QVR_GetBoundaryGeometry(BoundaryType boundaryType, IntPtr points, ref int pointsCount);

			[PreserveSig]
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x100C540", Offset = "0x100C540", VA = "0x100C540")]
			public static extern Vector3f QVR_GetBoundaryDimensions(BoundaryType boundaryType);

			[PreserveSig]
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x100C5C0", Offset = "0x100C5C0", VA = "0x100C5C0")]
			public static extern Bool QVR_GetBoundaryVisible();

			[PreserveSig]
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x100C634", Offset = "0x100C634", VA = "0x100C634")]
			public static extern Bool QVR_SetBoundaryVisible(Bool value);

			[PreserveSig]
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x100C6B4", Offset = "0x100C6B4", VA = "0x100C6B4")]
			public static extern void QVR_TestMessageCallBack(ulong requestID, string param);

			[PreserveSig]
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x100C758", Offset = "0x100C758", VA = "0x100C758")]
			public static extern void QVR_GetControllerDate(ref ControllerData left, ref ControllerData right);

			[PreserveSig]
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x100C7E8", Offset = "0x100C7E8", VA = "0x100C7E8")]
			public static extern Bool QVR_GetControllerIsInit();

			[PreserveSig]
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x100C85C", Offset = "0x100C85C", VA = "0x100C85C")]
			public static extern void QVR_ControllerBeginServer();

			[PreserveSig]
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x100C8CC", Offset = "0x100C8CC", VA = "0x100C8CC")]
			public static extern void QVR_ControllerEndServer();

			[PreserveSig]
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x100C93C", Offset = "0x100C93C", VA = "0x100C93C")]
			public static extern void QVR_ControllerSendMsg(string cmd);

			[PreserveSig]
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x100C9CC", Offset = "0x100C9CC", VA = "0x100C9CC")]
			public static extern void QVR_ControllerStartVibration(int deviceId, int amplitude, int duration);

			[PreserveSig]
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x100CA64", Offset = "0x100CA64", VA = "0x100CA64")]
			public static extern void QVR_ControllerSetType(int type);

			[PreserveSig]
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x100CAE4", Offset = "0x100CAE4", VA = "0x100CAE4")]
			public static extern int QVR_ControllerGetType();

			[PreserveSig]
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x100CB58", Offset = "0x100CB58", VA = "0x100CB58")]
			public static extern string QVR_TestString(string param);

			[PreserveSig]
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x100CC08", Offset = "0x100CC08", VA = "0x100CC08")]
			public static extern void QVR_InitQiyuSDK(string app_id, string developer_id, string app_secret, string sign_key);

			[PreserveSig]
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x100CD00", Offset = "0x100CD00", VA = "0x100CD00")]
			public static extern void QVR_GetAppUpdateInfo(ulong requestID, string app_id, string curVersion);

			[PreserveSig]
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x100CDC0", Offset = "0x100CDC0", VA = "0x100CDC0")]
			public static extern void QVR_GetQiyuAccountInfo(ulong requestID);

			[PreserveSig]
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x100CE40", Offset = "0x100CE40", VA = "0x100CE40")]
			public static extern void QVR_LaunchOtherApp(string app_id, string key, string value);

			[PreserveSig]
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x100CF14", Offset = "0x100CF14", VA = "0x100CF14")]
			public static extern void QVR_LaunchHome(string key, string value);

			[PreserveSig]
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x100CFCC", Offset = "0x100CFCC", VA = "0x100CFCC")]
			public static extern void QVR_GetDeepLink(ulong requestID);

			[PreserveSig]
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x100D04C", Offset = "0x100D04C", VA = "0x100D04C")]
			public static extern int QVR_GetHand();

			[PreserveSig]
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x100D0C0", Offset = "0x100D0C0", VA = "0x100D0C0")]
			public static extern int QVR_SetHand(int type);

			[PreserveSig]
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x100D140", Offset = "0x100D140", VA = "0x100D140")]
			public static extern int QVR_GetFoveatEnable();

			[PreserveSig]
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x100D1B4", Offset = "0x100D1B4", VA = "0x100D1B4")]
			public static extern int SvrSetExtraLatencyMode(bool mode);

			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x100D234", Offset = "0x100D234", VA = "0x100D234")]
			public QVRSDKCorePlugins()
			{
			}
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x148E358", Offset = "0x148E358", VA = "0x148E358")]
		public static Color FromColorf(this Colorf c)
		{
			return default(Color);
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x148E35C", Offset = "0x148E35C", VA = "0x148E35C")]
		public static Colorf ToColorf(this Color c)
		{
			return default(Colorf);
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x14817D8", Offset = "0x14817D8", VA = "0x14817D8")]
		public static Vector3 FromVector3f(this Vector3f v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x148E360", Offset = "0x148E360", VA = "0x148E360")]
		public static void WirteToVector3(this Vector3f v, ref Vector3 ret)
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x148E36C", Offset = "0x148E36C", VA = "0x148E36C")]
		public static void WirteToVector2(this Vector2f v, ref Vector2 ret)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x1481374", Offset = "0x1481374", VA = "0x1481374")]
		public static Vector3 FromFlippedZVector3f(this Vector3f v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x148E374", Offset = "0x148E374", VA = "0x148E374")]
		public static Vector3f ToVector3f(this Vector3 v)
		{
			return default(Vector3f);
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x14813FC", Offset = "0x14813FC", VA = "0x14813FC")]
		public static Vector3f ToFlippedZVector3f(this Vector3 v)
		{
			return default(Vector3f);
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x148E378", Offset = "0x148E378", VA = "0x148E378")]
		public static Quaternion FromQuatf(this Quatf q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x148E37C", Offset = "0x148E37C", VA = "0x148E37C")]
		public static void WriteToQuaternion(this Quatf q, ref Quaternion ret)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x148E388", Offset = "0x148E388", VA = "0x148E388")]
		public static Quaternion FromFlippedZQuatf(this Quatf q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x148E394", Offset = "0x148E394", VA = "0x148E394")]
		public static Quatf ToQuatf(this Quaternion q)
		{
			return default(Quatf);
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x148E398", Offset = "0x148E398", VA = "0x148E398")]
		public static Quatf ToFlippedZQuatf(this Quaternion q)
		{
			return default(Quatf);
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x148E3A4", Offset = "0x148E3A4", VA = "0x148E3A4")]
		public static Bool ToBool(bool b)
		{
			return default(Bool);
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x148129C", Offset = "0x148129C", VA = "0x148129C")]
		public static bool GetBoundaryConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x148133C", Offset = "0x148133C", VA = "0x148133C")]
		public static BoundaryTestResult TestBoundaryNode(Node nodeId, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x1481404", Offset = "0x1481404", VA = "0x1481404")]
		public static BoundaryTestResult TestBoundaryPoint(Vector3f point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x14817A4", Offset = "0x14817A4", VA = "0x14817A4")]
		public static bool GetBoundaryGeometry(BoundaryType boundaryType, IntPtr points, ref int pointsCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x14817D0", Offset = "0x14817D0", VA = "0x14817D0")]
		public static Vector3f GetBoundaryDimensions(BoundaryType boundaryType)
		{
			return default(Vector3f);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x14817FC", Offset = "0x14817FC", VA = "0x14817FC")]
		public static bool GetBoundaryVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x1481828", Offset = "0x1481828", VA = "0x1481828")]
		public static bool SetBoundaryVisible(bool value)
		{
			return default(bool);
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x148E3AC", Offset = "0x148E3AC", VA = "0x148E3AC")]
		public static void TestMessageCallBack(string param, RequestCallback callback)
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x148E424", Offset = "0x148E424", VA = "0x148E424")]
		public static string TestString(string param)
		{
			return null;
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1487140", Offset = "0x1487140", VA = "0x1487140")]
		public static void InitQiyuSDK(string app_id, string developer_id, string app_secret, string sign_key)
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1487148", Offset = "0x1487148", VA = "0x1487148")]
		public static void GetQiyuAccountInfo(RequestCallback callback)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x148E42C", Offset = "0x148E42C", VA = "0x148E42C")]
		public static void LaunchOtherApp(string app_id, string key, string value)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1487304", Offset = "0x1487304", VA = "0x1487304")]
		public static void LaunchHome(string key, string value)
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x148E434", Offset = "0x148E434", VA = "0x148E434")]
		public static void GetAppUpdateInfo(string app_id, string curVersion, RequestCallback callback)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x148730C", Offset = "0x148730C", VA = "0x148730C")]
		public static void GetDeepLink(RequestCallback callback)
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public class QVRSDKCore : QVRSingletion<QVRSDKCore>
	{
		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool running;

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x2A5F378", Offset = "0x2A5F378", VA = "0x2A5F378", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x2A5F58C", Offset = "0x2A5F58C", VA = "0x2A5F58C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x2A5F590", Offset = "0x2A5F590", VA = "0x2A5F590")]
		private void Update()
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x2A5F654", Offset = "0x2A5F654", VA = "0x2A5F654")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x2A5F724", Offset = "0x2A5F724", VA = "0x2A5F724")]
		public QVRSDKCore()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20000C2")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170000D6")]
		public bool Highlight
		{
			[Token(Token = "0x6000749")]
			[Address(RVA = "0x1018D90", Offset = "0x1018D90", VA = "0x1018D90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600074A")]
			[Address(RVA = "0x1018D98", Offset = "0x1018D98", VA = "0x1018D98")]
			set
			{
			}
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1018DA4", Offset = "0x1018DA4", VA = "0x1018DA4")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x1018F6C", Offset = "0x1018F6C", VA = "0x1018F6C", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1018F94", Offset = "0x1018F94", VA = "0x1018F94", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1018FBC", Offset = "0x1018FBC", VA = "0x1018FBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x1018E6C", Offset = "0x1018E6C", VA = "0x1018E6C")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1019290", Offset = "0x1019290", VA = "0x1019290")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170000D7")]
		public bool InRange
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0x101F8E8", Offset = "0x101F8E8", VA = "0x101F8E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000753")]
			[Address(RVA = "0x101F8F0", Offset = "0x101F8F0", VA = "0x101F8F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public bool Targeted
		{
			[Token(Token = "0x6000754")]
			[Address(RVA = "0x101FA68", Offset = "0x101FA68", VA = "0x101FA68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000755")]
			[Address(RVA = "0x101FA70", Offset = "0x101FA70", VA = "0x101FA70")]
			set
			{
			}
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x101FA7C", Offset = "0x101FA7C", VA = "0x101FA7C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x101F8FC", Offset = "0x101F8FC", VA = "0x101F8FC")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x101FC84", Offset = "0x101FC84", VA = "0x101FC84")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4AE0", Offset = "0xAB4AE0")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170000D9")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000759")]
			[Address(RVA = "0x101FC8C", Offset = "0x101FC8C", VA = "0x101FC8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600075A")]
			[Address(RVA = "0x101FC94", Offset = "0x101FC94", VA = "0x101FC94")]
			set
			{
			}
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x101FCB0", Offset = "0x101FCB0", VA = "0x101FCB0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x101FEF0", Offset = "0x101FEF0", VA = "0x101FEF0", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x1020808", Offset = "0x1020808", VA = "0x1020808", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x1020C9C", Offset = "0x1020C9C", VA = "0x1020C9C", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x1020F5C", Offset = "0x1020F5C", VA = "0x1020F5C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x1020164", Offset = "0x1020164", VA = "0x1020164")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x102104C", Offset = "0x102104C", VA = "0x102104C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x10214A8", Offset = "0x10214A8", VA = "0x10214A8", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x10214C0", Offset = "0x10214C0", VA = "0x10214C0", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x10214C8", Offset = "0x10214C8", VA = "0x10214C8")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x1027838", Offset = "0x1027838", VA = "0x1027838")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x10278F0", Offset = "0x10278F0", VA = "0x10278F0")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x10279A4", Offset = "0x10279A4", VA = "0x10279A4")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x200021D")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000B50")]
			Disabled,
			[Token(Token = "0x4000B51")]
			Enabled,
			[Token(Token = "0x4000B52")]
			Targeted
		}

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x10279AC", Offset = "0x10279AC", VA = "0x10279AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x101FBE8", Offset = "0x101FBE8", VA = "0x101FBE8")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x1027A18", Offset = "0x1027A18", VA = "0x1027A18")]
		private void Update()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x1027A60", Offset = "0x1027A60", VA = "0x1027A60")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600076C")]
		[Address(RVA = "0x1477D5C", Offset = "0x1477D5C", VA = "0x1477D5C")]
		private void Start()
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x1477E48", Offset = "0x1477E48", VA = "0x1477E48")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x1477E54", Offset = "0x1477E54", VA = "0x1477E54")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1477E60", Offset = "0x1477E60", VA = "0x1477E60")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x1508830", Offset = "0x1508830", VA = "0x1508830")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x1508884", Offset = "0x1508884", VA = "0x1508884")]
		private void Update()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x1508BF0", Offset = "0x1508BF0", VA = "0x1508BF0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x1508CF4", Offset = "0x1508CF4", VA = "0x1508CF4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x1508888", Offset = "0x1508888", VA = "0x1508888")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x1508DF8", Offset = "0x1508DF8", VA = "0x1508DF8")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200021E")]
		public enum ContactTest
		{
			[Token(Token = "0x4000B54")]
			PerpenTest,
			[Token(Token = "0x4000B55")]
			BackwardsPress
		}

		[Token(Token = "0x4000416")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000417")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170000DA")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000776")]
			[Address(RVA = "0x150A9C4", Offset = "0x150A9C4", VA = "0x150A9C4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DB")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000777")]
			[Address(RVA = "0x150A9CC", Offset = "0x150A9CC", VA = "0x150A9CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x150A9D8", Offset = "0x150A9D8", VA = "0x150A9D8", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x150AAEC", Offset = "0x150AAEC", VA = "0x150AAEC")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x150AC58", Offset = "0x150AC58", VA = "0x150AC58", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x150B1FC", Offset = "0x150B1FC", VA = "0x150B1FC")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x150B114", Offset = "0x150B114", VA = "0x150B114")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x150B2A8", Offset = "0x150B2A8", VA = "0x150B2A8")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x150B32C", Offset = "0x150B32C", VA = "0x150B32C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x150B3B8", Offset = "0x150B3B8", VA = "0x150B3B8")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6F64", Offset = "0xAB6F64")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6F74", Offset = "0xAB6F74")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170000DC")]
		public Collider Collider
		{
			[Token(Token = "0x6000780")]
			[Address(RVA = "0x150B604", Offset = "0x150B604", VA = "0x150B604", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB69C", Offset = "0xABB69C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000781")]
			[Address(RVA = "0x150B60C", Offset = "0x150B60C", VA = "0x150B60C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB6AC", Offset = "0xABB6AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0x150B614", Offset = "0x150B614", VA = "0x150B614", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB6BC", Offset = "0xABB6BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000783")]
			[Address(RVA = "0x150B61C", Offset = "0x150B61C", VA = "0x150B61C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB6CC", Offset = "0xABB6CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0x150B624", Offset = "0x150B624", VA = "0x150B624", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x150B674", Offset = "0x150B674", VA = "0x150B674")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x150B708", Offset = "0x150B708", VA = "0x150B708")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public interface ColliderZone
	{
		[Token(Token = "0x170000DF")]
		Collider Collider
		{
			[Token(Token = "0x6000787")]
			get;
		}

		[Token(Token = "0x170000E0")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000788")]
			get;
		}

		[Token(Token = "0x170000E1")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000789")]
			get;
		}
	}
	[Token(Token = "0x20000CC")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1018CD8", Offset = "0x1018CD8", VA = "0x1018CD8")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20000CD")]
	public enum InteractionType
	{
		[Token(Token = "0x400042B")]
		Enter,
		[Token(Token = "0x400042C")]
		Stay,
		[Token(Token = "0x400042D")]
		Exit
	}
	[Token(Token = "0x20000CE")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200021F")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000B57")]
			Mesh,
			[Token(Token = "0x4000B58")]
			Skeleton,
			[Token(Token = "0x4000B59")]
			Both
		}

		[Token(Token = "0x2000220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5434", Offset = "0xAB5434")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000242")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EBD")]
				[Address(RVA = "0x1003244", Offset = "0x1003244", VA = "0x1003244", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000243")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EBF")]
				[Address(RVA = "0x100328C", Offset = "0x100328C", VA = "0x100328C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x1002FB0", Offset = "0x1002FB0", VA = "0x1002FB0")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x1002FDC", Offset = "0x1002FDC", VA = "0x1002FDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x1002FE0", Offset = "0x1002FE0", VA = "0x1002FE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x100324C", Offset = "0x100324C", VA = "0x100324C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400042E")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB6FA4", Offset = "0xAB6FA4")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170000E2")]
		public OVRHand RightHand
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0x1026874", Offset = "0x1026874", VA = "0x1026874")]
			get
			{
				return null;
			}
			[Token(Token = "0x600078C")]
			[Address(RVA = "0x1029E04", Offset = "0x1029E04", VA = "0x1029E04")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0x1029E74", Offset = "0x1029E74", VA = "0x1029E74")]
			get
			{
				return null;
			}
			[Token(Token = "0x600078E")]
			[Address(RVA = "0x1029EAC", Offset = "0x1029EAC", VA = "0x1029EAC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0x1029F1C", Offset = "0x1029F1C", VA = "0x1029F1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000790")]
			[Address(RVA = "0x1029F54", Offset = "0x1029F54", VA = "0x1029F54")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0x1029FC4", Offset = "0x1029FC4", VA = "0x1029FC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000792")]
			[Address(RVA = "0x1029FFC", Offset = "0x1029FFC", VA = "0x1029FFC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000793")]
			[Address(RVA = "0x102A06C", Offset = "0x102A06C", VA = "0x102A06C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000794")]
			[Address(RVA = "0x102A0A4", Offset = "0x102A0A4", VA = "0x102A0A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000795")]
			[Address(RVA = "0x1026840", Offset = "0x1026840", VA = "0x1026840")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000796")]
			[Address(RVA = "0x102A114", Offset = "0x102A114", VA = "0x102A114")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0x102A180", Offset = "0x102A180", VA = "0x102A180")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000798")]
			[Address(RVA = "0x102A1B4", Offset = "0x102A1B4", VA = "0x102A1B4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000799")]
			[Address(RVA = "0x102A220", Offset = "0x102A220", VA = "0x102A220")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079A")]
			[Address(RVA = "0x102A254", Offset = "0x102A254", VA = "0x102A254")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600079B")]
			[Address(RVA = "0x102A2C0", Offset = "0x102A2C0", VA = "0x102A2C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079C")]
			[Address(RVA = "0x102A2F4", Offset = "0x102A2F4", VA = "0x102A2F4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600079D")]
			[Address(RVA = "0x102A360", Offset = "0x102A360", VA = "0x102A360")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079E")]
			[Address(RVA = "0x102A394", Offset = "0x102A394", VA = "0x102A394")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600079F")]
			[Address(RVA = "0x102A400", Offset = "0x102A400", VA = "0x102A400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB6DC", Offset = "0xABB6DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007A0")]
			[Address(RVA = "0x102A44C", Offset = "0x102A44C", VA = "0x102A44C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB6EC", Offset = "0xABB6EC")]
			private set
			{
			}
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x102A4A0", Offset = "0x102A4A0", VA = "0x102A4A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x102A874", Offset = "0x102A874", VA = "0x102A874")]
		private void Update()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x102A7FC", Offset = "0x102A7FC", VA = "0x102A7FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB6FC", Offset = "0xABB6FC")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x101953C", Offset = "0x101953C", VA = "0x101953C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x102A8FC", Offset = "0x102A8FC", VA = "0x102A8FC")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x102AADC", Offset = "0x102AADC", VA = "0x102AADC")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x10266B4", Offset = "0x10266B4", VA = "0x10266B4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x102AD18", Offset = "0x102AD18", VA = "0x102AD18")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000221")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x1005E68", Offset = "0x1005E68", VA = "0x1005E68")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170000ED")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60007A9")]
			[Address(RVA = "0x162B368", Offset = "0x162B368", VA = "0x162B368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60007AA")]
			[Address(RVA = "0x162B370", Offset = "0x162B370", VA = "0x162B370")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0x162B378", Offset = "0x162B378", VA = "0x162B378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0x162B380", Offset = "0x162B380", VA = "0x162B380", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60007AD")]
			[Address(RVA = "0x162B388", Offset = "0x162B388", VA = "0x162B388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB75C", Offset = "0xABB75C")]
			add
			{
			}
			[Token(Token = "0x60007AE")]
			[Address(RVA = "0x162B428", Offset = "0x162B428", VA = "0x162B428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB76C", Offset = "0xABB76C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60007B0")]
			[Address(RVA = "0x162B538", Offset = "0x162B538", VA = "0x162B538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB77C", Offset = "0xABB77C")]
			add
			{
			}
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0x162B5D8", Offset = "0x162B5D8", VA = "0x162B5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB78C", Offset = "0xABB78C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0x162B6E8", Offset = "0x162B6E8", VA = "0x162B6E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB79C", Offset = "0xABB79C")]
			add
			{
			}
			[Token(Token = "0x60007B4")]
			[Address(RVA = "0x162B788", Offset = "0x162B788", VA = "0x162B788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB7AC", Offset = "0xABB7AC")]
			remove
			{
			}
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x162B4C8", Offset = "0x162B4C8", VA = "0x162B4C8", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x162B678", Offset = "0x162B678", VA = "0x162B678", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x162B828", Offset = "0x162B828", VA = "0x162B828", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60007B6")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x162B898", Offset = "0x162B898", VA = "0x162B898", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x162B9C4", Offset = "0x162B9C4", VA = "0x162B9C4", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x162BAF0", Offset = "0x162BAF0", VA = "0x162BAF0")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20000D0")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000446")]
		None,
		[Token(Token = "0x4000447")]
		Proximity,
		[Token(Token = "0x4000448")]
		Contact,
		[Token(Token = "0x4000449")]
		Action
	}
	[Token(Token = "0x20000D1")]
	public enum InteractableState
	{
		[Token(Token = "0x400044B")]
		Default,
		[Token(Token = "0x400044C")]
		ProximityState,
		[Token(Token = "0x400044D")]
		ContactState,
		[Token(Token = "0x400044E")]
		ActionState
	}
	[Token(Token = "0x20000D2")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x162BC48", Offset = "0x162BC48", VA = "0x162BC48")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170000F1")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0x162BB50", Offset = "0x162BB50", VA = "0x162BB50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x162B8F8", Offset = "0x162B8F8", VA = "0x162B8F8")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x162BA24", Offset = "0x162BA24", VA = "0x162BA24")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x162BBB4", Offset = "0x162BBB4", VA = "0x162BBB4")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000222")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5444", Offset = "0xAB5444")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000244")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EC5")]
				[Address(RVA = "0x10063CC", Offset = "0x10063CC", VA = "0x10063CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000245")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EC7")]
				[Address(RVA = "0x1006414", Offset = "0x1006414", VA = "0x1006414", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x1005EB4", Offset = "0x1005EB4", VA = "0x1005EB4")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x1005EE0", Offset = "0x1005EE0", VA = "0x1005EE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x1005F50", Offset = "0x1005F50", VA = "0x1005F50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x1005EFC", Offset = "0x1005EFC", VA = "0x1005EFC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x10063D4", Offset = "0x10063D4", VA = "0x10063D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x162C9CC", Offset = "0x162C9CC", VA = "0x162C9CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x162CA48", Offset = "0x162CA48", VA = "0x162CA48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB7BC", Offset = "0xABB7BC")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x162CAE8", Offset = "0x162CAE8", VA = "0x162CAE8")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x162CBD0", Offset = "0x162CBD0", VA = "0x162CBD0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170000F2")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60007C4")]
			[Address(RVA = "0x162CBD8", Offset = "0x162CBD8", VA = "0x162CBD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x162CD58", Offset = "0x162CD58", VA = "0x162CD58")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x162CE00", Offset = "0x162CE00", VA = "0x162CE00")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x162CEA8", Offset = "0x162CEA8", VA = "0x162CEA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x162D170", Offset = "0x162D170", VA = "0x162D170")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x162D1B8", Offset = "0x162D1B8", VA = "0x162D1B8")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x162D468", Offset = "0x162D468", VA = "0x162D468")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x162D5B4", Offset = "0x162D5B4", VA = "0x162D5B4")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000223")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5454", Offset = "0xAB5454")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000246")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ECB")]
				[Address(RVA = "0x1002CF4", Offset = "0x1002CF4", VA = "0x1002CF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000247")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ECD")]
				[Address(RVA = "0x1002D3C", Offset = "0x1002D3C", VA = "0x1002D3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x10028C0", Offset = "0x10028C0", VA = "0x10028C0")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x10028EC", Offset = "0x10028EC", VA = "0x10028EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x10028F0", Offset = "0x10028F0", VA = "0x10028F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x1002CFC", Offset = "0x1002CFC", VA = "0x1002CFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400045E")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170000F3")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0x102626C", Offset = "0x102626C", VA = "0x102626C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000F4")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0x1026274", Offset = "0x1026274", VA = "0x1026274", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000F5")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0x102627C", Offset = "0x102627C", VA = "0x102627C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F6")]
		public override bool EnableState
		{
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0x1026284", Offset = "0x1026284", VA = "0x1026284", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0x10262B0", Offset = "0x10262B0", VA = "0x10262B0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x10262EC", Offset = "0x10262EC", VA = "0x10262EC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x10263A4", Offset = "0x10263A4", VA = "0x10263A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB81C", Offset = "0xABB81C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x102641C", Offset = "0x102641C", VA = "0x102641C")]
		private void Update()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x10268AC", Offset = "0x10268AC", VA = "0x10268AC")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x1026A38", Offset = "0x1026A38", VA = "0x1026A38")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x1026B2C", Offset = "0x1026B2C", VA = "0x1026B2C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x1026E24", Offset = "0x1026E24", VA = "0x1026E24", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x1026E28", Offset = "0x1026E28", VA = "0x1026E28", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x1026E2C", Offset = "0x1026E2C", VA = "0x1026E2C")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB7034", Offset = "0xAB7034")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB7044", Offset = "0xAB7044")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB7054", Offset = "0xAB7054")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170000F7")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0x1026E44", Offset = "0x1026E44", VA = "0x1026E44", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB87C", Offset = "0xABB87C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x1026E4C", Offset = "0x1026E4C", VA = "0x1026E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB88C", Offset = "0xABB88C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public bool EnableState
		{
			[Token(Token = "0x60007DC")]
			[Address(RVA = "0x1026E54", Offset = "0x1026E54", VA = "0x1026E54", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x1026E70", Offset = "0x1026E70", VA = "0x1026E70", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60007DE")]
			[Address(RVA = "0x1026E90", Offset = "0x1026E90", VA = "0x1026E90", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB89C", Offset = "0xABB89C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x1026E98", Offset = "0x1026E98", VA = "0x1026E98", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB8AC", Offset = "0xABB8AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public float SphereRadius
		{
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x1026EA4", Offset = "0x1026EA4", VA = "0x1026EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB8BC", Offset = "0xABB8BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x1026EAC", Offset = "0x1026EAC", VA = "0x1026EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB8CC", Offset = "0xABB8CC")]
			private set
			{
			}
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x1026EB4", Offset = "0x1026EB4", VA = "0x1026EB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x1026EFC", Offset = "0x1026EFC", VA = "0x1026EFC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x1026F00", Offset = "0x1026F00", VA = "0x1026F00")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x400046E")]
		None = 0,
		[Token(Token = "0x400046F")]
		Ray = 1,
		[Token(Token = "0x4000470")]
		Poke = 4,
		[Token(Token = "0x4000471")]
		All = -1
	}
	[Token(Token = "0x20000D9")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000473")]
		Inactive,
		[Token(Token = "0x4000474")]
		PrimaryInputDown,
		[Token(Token = "0x4000475")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000476")]
		PrimaryInputUp
	}
	[Token(Token = "0x20000DA")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x162BAF8", Offset = "0x162BAF8", VA = "0x162BAF8")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB7064", Offset = "0xAB7064")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB7074", Offset = "0xAB7074")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB7084", Offset = "0xAB7084")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170000FB")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60007E6")]
			[Address(RVA = "0x162BD0C", Offset = "0x162BD0C", VA = "0x162BD0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x162BD14", Offset = "0x162BD14", VA = "0x162BD14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB8DC", Offset = "0xABB8DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0x162BD1C", Offset = "0x162BD1C", VA = "0x162BD1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB8EC", Offset = "0xABB8EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60007E9")]
			get;
		}

		[Token(Token = "0x170000FE")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60007EA")]
			get;
		}

		[Token(Token = "0x170000FF")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60007EB")]
			get;
		}

		[Token(Token = "0x17000100")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60007EC")]
			[Address(RVA = "0x162BD28", Offset = "0x162BD28", VA = "0x162BD28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB8FC", Offset = "0xABB8FC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007ED")]
			[Address(RVA = "0x162BD34", Offset = "0x162BD34", VA = "0x162BD34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB90C", Offset = "0xABB90C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60007EE")]
			[Address(RVA = "0x162BD40", Offset = "0x162BD40", VA = "0x162BD40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB91C", Offset = "0xABB91C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007EF")]
			[Address(RVA = "0x162BD4C", Offset = "0x162BD4C", VA = "0x162BD4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB92C", Offset = "0xABB92C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60007F4")]
			get;
			[Token(Token = "0x60007F5")]
			set;
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x162BD58", Offset = "0x162BD58", VA = "0x162BD58")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60007F1")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60007F2")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60007F3")]
		public abstract void DeFocus();

		[Token(Token = "0x60007F6")]
		public abstract void Initialize();

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x162BD60", Offset = "0x162BD60", VA = "0x162BD60")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x162BDAC", Offset = "0x162BDAC", VA = "0x162BDAC")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x162BE00", Offset = "0x162BE00", VA = "0x162BE00", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x162C0B0", Offset = "0x162C0B0", VA = "0x162C0B0", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x162C83C", Offset = "0x162C83C", VA = "0x162C83C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000103")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60007FC")]
			get;
		}

		[Token(Token = "0x17000104")]
		bool EnableState
		{
			[Token(Token = "0x60007FE")]
			get;
			[Token(Token = "0x60007FF")]
			set;
		}

		[Token(Token = "0x17000105")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000800")]
			get;
			[Token(Token = "0x6000801")]
			set;
		}

		[Token(Token = "0x60007FD")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20000DD")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000224")]
		private enum PinchState
		{
			[Token(Token = "0x4000B6A")]
			None,
			[Token(Token = "0x4000B6B")]
			PinchDown,
			[Token(Token = "0x4000B6C")]
			PinchStay,
			[Token(Token = "0x4000B6D")]
			PinchUp
		}

		[Token(Token = "0x4000483")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000106")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0x14789E4", Offset = "0x14789E4", VA = "0x14789E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000107")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000803")]
			[Address(RVA = "0x1478A6C", Offset = "0x1478A6C", VA = "0x1478A6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000108")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0x1478AF4", Offset = "0x1478AF4", VA = "0x1478AF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1478B7C", Offset = "0x1478B7C", VA = "0x1478B7C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1478BB0", Offset = "0x1478BB0", VA = "0x1478BB0")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000486")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000487")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000488")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000489")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x400048A")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB70A4", Offset = "0xAB70A4")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000109")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0x2A620E0", Offset = "0x2A620E0", VA = "0x2A620E0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700010A")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000808")]
			[Address(RVA = "0x2A620E8", Offset = "0x2A620E8", VA = "0x2A620E8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700010B")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0x2A6215C", Offset = "0x2A6215C", VA = "0x2A6215C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010C")]
		public override bool EnableState
		{
			[Token(Token = "0x600080A")]
			[Address(RVA = "0x2A62164", Offset = "0x2A62164", VA = "0x2A62164", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600080B")]
			[Address(RVA = "0x2A621A8", Offset = "0x2A621A8", VA = "0x2A621A8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x2A6221C", Offset = "0x2A6221C", VA = "0x2A6221C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x2A62284", Offset = "0x2A62284", VA = "0x2A62284")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x2A62328", Offset = "0x2A62328", VA = "0x2A62328")]
		private void Update()
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x2A625EC", Offset = "0x2A625EC", VA = "0x2A625EC")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x2A62674", Offset = "0x2A62674", VA = "0x2A62674", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x2A62A44", Offset = "0x2A62A44", VA = "0x2A62A44")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x2A62B54", Offset = "0x2A62B54", VA = "0x2A62B54")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x2A62C78", Offset = "0x2A62C78", VA = "0x2A62C78")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x2A62F7C", Offset = "0x2A62F7C", VA = "0x2A62F7C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x2A63310", Offset = "0x2A63310", VA = "0x2A63310", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x2A633F8", Offset = "0x2A633F8", VA = "0x2A633F8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x2A63434", Offset = "0x2A63434", VA = "0x2A63434")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000496")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000497")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB7118", Offset = "0xAB7118")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700010D")]
		public bool EnableState
		{
			[Token(Token = "0x6000818")]
			[Address(RVA = "0x2A6218C", Offset = "0x2A6218C", VA = "0x2A6218C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000819")]
			[Address(RVA = "0x2A621C4", Offset = "0x2A621C4", VA = "0x2A621C4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600081A")]
			[Address(RVA = "0x2A6352C", Offset = "0x2A6352C", VA = "0x2A6352C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600081B")]
			[Address(RVA = "0x2A625B0", Offset = "0x2A625B0", VA = "0x2A625B0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600081D")]
			[Address(RVA = "0x2A6378C", Offset = "0x2A6378C", VA = "0x2A6378C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB93C", Offset = "0xABB93C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x2A63794", Offset = "0x2A63794", VA = "0x2A63794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB94C", Offset = "0xABB94C")]
			set
			{
			}
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x2A63534", Offset = "0x2A63534", VA = "0x2A63534")]
		private void Awake()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x2A6334C", Offset = "0x2A6334C", VA = "0x2A6334C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x2A6379C", Offset = "0x2A6379C", VA = "0x2A6379C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x2A63A10", Offset = "0x2A63A10", VA = "0x2A63A10")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x2A63B00", Offset = "0x2A63B00", VA = "0x2A63B00")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000110")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0x10214E8", Offset = "0x10214E8", VA = "0x10214E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000824")]
			[Address(RVA = "0x10214F0", Offset = "0x10214F0", VA = "0x10214F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000825")]
			[Address(RVA = "0x1021578", Offset = "0x1021578", VA = "0x1021578")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000826")]
			[Address(RVA = "0x1021580", Offset = "0x1021580", VA = "0x1021580")]
			set
			{
			}
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x10215EC", Offset = "0x10215EC", VA = "0x10215EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x10218A0", Offset = "0x10218A0", VA = "0x10218A0")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x10218B0", Offset = "0x10218B0", VA = "0x10218B0")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x10218C0", Offset = "0x10218C0", VA = "0x10218C0")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x1019378", Offset = "0x1019378", VA = "0x1019378")]
		private void Awake()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x101937C", Offset = "0x101937C", VA = "0x101937C")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x10193B4", Offset = "0x10193B4", VA = "0x10193B4")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x10193EC", Offset = "0x10193EC", VA = "0x10193EC")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x1019424", Offset = "0x1019424", VA = "0x1019424")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x101945C", Offset = "0x101945C", VA = "0x101945C")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x1019494", Offset = "0x1019494", VA = "0x1019494")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x10194CC", Offset = "0x10194CC", VA = "0x10194CC")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x1019620", Offset = "0x1019620", VA = "0x1019620")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x1019690", Offset = "0x1019690", VA = "0x1019690")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEngine.Animation _cowAnimation;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x1019698", Offset = "0x1019698", VA = "0x1019698")]
		private void Start()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x101969C", Offset = "0x101969C", VA = "0x101969C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x1019654", Offset = "0x1019654", VA = "0x1019654")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x10196DC", Offset = "0x10196DC", VA = "0x10196DC")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000225")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5464", Offset = "0xAB5464")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000248")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ED1")]
				[Address(RVA = "0x1008C74", Offset = "0x1008C74", VA = "0x1008C74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000249")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ED3")]
				[Address(RVA = "0x1008CBC", Offset = "0x1008CBC", VA = "0x1008CBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x1008A88", Offset = "0x1008A88", VA = "0x1008A88")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x1008AB4", Offset = "0x1008AB4", VA = "0x1008AB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x1008AB8", Offset = "0x1008AB8", VA = "0x1008AB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x1008C7C", Offset = "0x1008C7C", VA = "0x1008C7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004A7")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40004A8")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x1477880", Offset = "0x1477880", VA = "0x1477880")]
		private void Awake()
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x147792C", Offset = "0x147792C", VA = "0x147792C")]
		private void Update()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x1477B7C", Offset = "0x1477B7C", VA = "0x1477B7C")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x1477B04", Offset = "0x1477B04", VA = "0x1477B04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB95C", Offset = "0xABB95C")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x1477BC8", Offset = "0x1477BC8", VA = "0x1477BC8")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000226")]
		public enum SelectionState
		{
			[Token(Token = "0x4000B75")]
			Off,
			[Token(Token = "0x4000B76")]
			Selected,
			[Token(Token = "0x4000B77")]
			Highlighted
		}

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000112")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600083E")]
			[Address(RVA = "0x2A69390", Offset = "0x2A69390", VA = "0x2A69390")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600083F")]
			[Address(RVA = "0x2A69398", Offset = "0x2A69398", VA = "0x2A69398")]
			set
			{
			}
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x2A6951C", Offset = "0x2A6951C", VA = "0x2A6951C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x2A69720", Offset = "0x2A69720", VA = "0x2A69720")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x2A69420", Offset = "0x2A69420", VA = "0x2A69420")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x2A6980C", Offset = "0x2A6980C", VA = "0x2A6980C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000227")]
		public enum SegmentType
		{
			[Token(Token = "0x4000B79")]
			Straight,
			[Token(Token = "0x4000B7A")]
			LeftTurn,
			[Token(Token = "0x4000B7B")]
			RightTurn,
			[Token(Token = "0x4000B7C")]
			Switch
		}

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40004BD")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40004BE")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB71F8", Offset = "0xAB71F8")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000113")]
		public float StartDistance
		{
			[Token(Token = "0x6000845")]
			[Address(RVA = "0x1704824", Offset = "0x1704824", VA = "0x1704824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB9BC", Offset = "0xABB9BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000846")]
			[Address(RVA = "0x170482C", Offset = "0x170482C", VA = "0x170482C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABB9CC", Offset = "0xABB9CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public float GridSize
		{
			[Token(Token = "0x6000847")]
			[Address(RVA = "0x1704834", Offset = "0x1704834", VA = "0x1704834")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000848")]
			[Address(RVA = "0x170483C", Offset = "0x170483C", VA = "0x170483C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public int SubDivCount
		{
			[Token(Token = "0x6000849")]
			[Address(RVA = "0x1704844", Offset = "0x1704844", VA = "0x1704844")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x170484C", Offset = "0x170484C", VA = "0x170484C")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public SegmentType Type
		{
			[Token(Token = "0x600084B")]
			[Address(RVA = "0x1704854", Offset = "0x1704854", VA = "0x1704854")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000117")]
		public Pose EndPose
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0x170485C", Offset = "0x170485C", VA = "0x170485C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		public float Radius
		{
			[Token(Token = "0x600084D")]
			[Address(RVA = "0x1704BB8", Offset = "0x1704BB8", VA = "0x1704BB8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000119")]
		public float SegmentLength
		{
			[Token(Token = "0x600084F")]
			[Address(RVA = "0x17048C4", Offset = "0x17048C4", VA = "0x17048C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x1704BC8", Offset = "0x1704BC8", VA = "0x1704BC8")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x1704BE0", Offset = "0x1704BE0", VA = "0x1704BE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x1704904", Offset = "0x1704904", VA = "0x1704904")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x1704BE4", Offset = "0x1704BE4", VA = "0x1704BE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x1704BE8", Offset = "0x1704BE8", VA = "0x1704BE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x1704C50", Offset = "0x1704C50", VA = "0x1704C50")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x1705518", Offset = "0x1705518", VA = "0x1705518")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x17057C4", Offset = "0x17057C4", VA = "0x17057C4")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5474", Offset = "0xAB5474")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700024A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ED7")]
				[Address(RVA = "0x1017078", Offset = "0x1017078", VA = "0x1017078", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ED9")]
				[Address(RVA = "0x10170C0", Offset = "0x10170C0", VA = "0x10170C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x1016ED4", Offset = "0x1016ED4", VA = "0x1016ED4")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x1016F00", Offset = "0x1016F00", VA = "0x1016F00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x1016F04", Offset = "0x1016F04", VA = "0x1016F04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x1017080", Offset = "0x1017080", VA = "0x1017080", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004C4")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40004C5")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x1705894", Offset = "0x1705894", VA = "0x1705894")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x1705950", Offset = "0x1705950", VA = "0x1705950")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x1705A00", Offset = "0x1705A00", VA = "0x1705A00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x1705B78", Offset = "0x1705B78", VA = "0x1705B78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1705D40", Offset = "0x1705D40", VA = "0x1705D40")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x1705E28", Offset = "0x1705E28", VA = "0x1705E28")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x170603C", Offset = "0x170603C", VA = "0x170603C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1705F3C", Offset = "0x1705F3C", VA = "0x1705F3C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x1705F50", Offset = "0x1705F50", VA = "0x1705F50")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x1706094", Offset = "0x1706094", VA = "0x1706094")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABB9DC", Offset = "0xABB9DC")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x170610C", Offset = "0x170610C", VA = "0x170610C")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700011A")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0x17061BC", Offset = "0x17061BC", VA = "0x17061BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x17061CC", Offset = "0x17061CC", VA = "0x17061CC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x17061D4", Offset = "0x17061D4", VA = "0x17061D4", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x1706518", Offset = "0x1706518", VA = "0x1706518")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40004D8")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40004D9")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB72F8", Offset = "0xAB72F8")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700011B")]
		public float Distance
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x1706628", Offset = "0x1706628", VA = "0x1706628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBA3C", Offset = "0xABBA3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000867")]
			[Address(RVA = "0x1706630", Offset = "0x1706630", VA = "0x1706630")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBA4C", Offset = "0xABBA4C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public float Scale
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0x1706638", Offset = "0x1706638", VA = "0x1706638")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000869")]
			[Address(RVA = "0x1706640", Offset = "0x1706640", VA = "0x1706640")]
			set
			{
			}
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x17061D0", Offset = "0x17061D0", VA = "0x17061D0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x1706648", Offset = "0x1706648", VA = "0x1706648")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x170621C", Offset = "0x170621C", VA = "0x170621C")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x1706440", Offset = "0x1706440", VA = "0x1706440")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600086E")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x1706584", Offset = "0x1706584", VA = "0x1706584")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000229")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5484", Offset = "0xAB5484")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700024C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EDD")]
				[Address(RVA = "0x1017360", Offset = "0x1017360", VA = "0x1017360", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EDF")]
				[Address(RVA = "0x10173A8", Offset = "0x10173A8", VA = "0x10173A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x10170C8", Offset = "0x10170C8", VA = "0x10170C8")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x10170F4", Offset = "0x10170F4", VA = "0x10170F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x10170F8", Offset = "0x10170F8", VA = "0x10170F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x1017368", Offset = "0x1017368", VA = "0x1017368", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x17067E8", Offset = "0x17067E8", VA = "0x17067E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x1706848", Offset = "0x1706848", VA = "0x1706848")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x1706950", Offset = "0x1706950", VA = "0x1706950")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x1706AA8", Offset = "0x1706AA8", VA = "0x1706AA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x17069B0", Offset = "0x17069B0", VA = "0x17069B0")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x1706B84", Offset = "0x1706B84", VA = "0x1706B84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBA5C", Offset = "0xABBA5C")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x1706C0C", Offset = "0x1706C0C", VA = "0x1706C0C")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x1706CB8", Offset = "0x1706CB8", VA = "0x1706CB8")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1706D18", Offset = "0x1706D18", VA = "0x1706D18")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200022A")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000B8F")]
			Start,
			[Token(Token = "0x4000B90")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000B91")]
			Stop
		}

		[Token(Token = "0x200022B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5494", Offset = "0xAB5494")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700024E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EE3")]
				[Address(RVA = "0x1017624", Offset = "0x1017624", VA = "0x1017624", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EE5")]
				[Address(RVA = "0x101766C", Offset = "0x101766C", VA = "0x101766C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x10173B0", Offset = "0x10173B0", VA = "0x10173B0")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x10173DC", Offset = "0x10173DC", VA = "0x10173DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x10173E0", Offset = "0x10173E0", VA = "0x10173E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x101762C", Offset = "0x101762C", VA = "0x101762C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004EC")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40004ED")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40004EE")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40004EF")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB7358", Offset = "0xAB7358")]
		protected float _initialSpeed;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x1706D74", Offset = "0x1706D74", VA = "0x1706D74")]
		private void Start()
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x1706EE0", Offset = "0x1706EE0", VA = "0x1706EE0")]
		private void Update()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1706EEC", Offset = "0x1706EEC", VA = "0x1706EEC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x170703C", Offset = "0x170703C", VA = "0x170703C")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x1706E54", Offset = "0x1706E54", VA = "0x1706E54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBABC", Offset = "0xABBABC")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x170709C", Offset = "0x170709C", VA = "0x170709C")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x1706FD8", Offset = "0x1706FD8", VA = "0x1706FD8")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x17072A0", Offset = "0x17072A0", VA = "0x17072A0")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x17073C4", Offset = "0x17073C4", VA = "0x17073C4")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x170730C", Offset = "0x170730C", VA = "0x170730C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x1707430", Offset = "0x1707430", VA = "0x1707430")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x1707450", Offset = "0x1707450", VA = "0x1707450")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x17074DC", Offset = "0x17074DC", VA = "0x17074DC")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x1707594", Offset = "0x1707594", VA = "0x1707594")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x17075A4", Offset = "0x17075A4", VA = "0x17075A4")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700011D")]
		public float TrackLength
		{
			[Token(Token = "0x6000889")]
			[Address(RVA = "0x170760C", Offset = "0x170760C", VA = "0x170760C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600088A")]
			[Address(RVA = "0x1707614", Offset = "0x1707614", VA = "0x1707614")]
			private set
			{
			}
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x170761C", Offset = "0x170761C", VA = "0x170761C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x17066C8", Offset = "0x17066C8", VA = "0x17066C8")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x1707620", Offset = "0x1707620", VA = "0x1707620")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x1707834", Offset = "0x1707834", VA = "0x1707834")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x1707930", Offset = "0x1707930", VA = "0x1707930")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public class Pose
	{
		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x147A17C", Offset = "0x147A17C", VA = "0x147A17C")]
		public Pose()
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x147A1C0", Offset = "0x147A1C0", VA = "0x147A1C0")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200022C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB54A4", Offset = "0xAB54A4")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000250")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EE9")]
				[Address(RVA = "0x1017A70", Offset = "0x1017A70", VA = "0x1017A70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000251")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EEB")]
				[Address(RVA = "0x1017AB8", Offset = "0x1017AB8", VA = "0x1017AB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0xFFFAA8", Offset = "0xFFFAA8", VA = "0xFFFAA8")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x10178D4", Offset = "0x10178D4", VA = "0x10178D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x10178D8", Offset = "0x10178D8", VA = "0x10178D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x1017A78", Offset = "0x1017A78", VA = "0x1017A78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200022D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB54B4", Offset = "0xAB54B4")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000252")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EEF")]
				[Address(RVA = "0x1017B94", Offset = "0x1017B94", VA = "0x1017B94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000253")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EF1")]
				[Address(RVA = "0x1017BDC", Offset = "0x1017BDC", VA = "0x1017BDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0xFFFB8C", Offset = "0xFFFB8C", VA = "0xFFFB8C")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x1017AC0", Offset = "0x1017AC0", VA = "0x1017AC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x1017AC4", Offset = "0x1017AC4", VA = "0x1017AC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x1017B9C", Offset = "0x1017B9C", VA = "0x1017B9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000512")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB7540", Offset = "0xAB7540")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700011E")]
		public bool IsMoving
		{
			[Token(Token = "0x6000892")]
			[Address(RVA = "0xFFF878", Offset = "0xFFF878", VA = "0xFFF878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBB1C", Offset = "0xABBB1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000893")]
			[Address(RVA = "0xFFF880", Offset = "0xFFF880", VA = "0xFFF880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBB2C", Offset = "0xABBB2C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xFFF88C", Offset = "0xFFF88C", VA = "0xFFF88C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xFFF8C8", Offset = "0xFFF8C8", VA = "0xFFF8C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xFFF9AC", Offset = "0xFFF9AC", VA = "0xFFF9AC")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xFFFA20", Offset = "0xFFFA20", VA = "0xFFFA20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBB3C", Offset = "0xABBB3C")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xFFFAD4", Offset = "0xFFFAD4", VA = "0xFFFAD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBB9C", Offset = "0xABBB9C")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xFFFBB8", Offset = "0xFFFBB8", VA = "0xFFFBB8")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xFFFC24", Offset = "0xFFFC24", VA = "0xFFFC24")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xFFFC2C", Offset = "0xFFFC2C", VA = "0xFFFC2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xFFFCA0", Offset = "0xFFFCA0", VA = "0xFFFCA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xFFFD84", Offset = "0xFFFD84", VA = "0xFFFD84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xFFFEBC", Offset = "0xFFFEBC", VA = "0xFFFEBC")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xFFFF3C", Offset = "0xFFFF3C", VA = "0xFFFF3C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1000018", Offset = "0x1000018", VA = "0x1000018")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000523")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000524")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000525")]
		EUDT_None,
		[Token(Token = "0x4000526")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20000F0")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200022E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB54C4", Offset = "0xAB54C4")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000254")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EF5")]
				[Address(RVA = "0x10088CC", Offset = "0x10088CC", VA = "0x10088CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000255")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EF7")]
				[Address(RVA = "0x1008914", Offset = "0x1008914", VA = "0x1008914", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x100869C", Offset = "0x100869C", VA = "0x100869C")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x10086C8", Offset = "0x10086C8", VA = "0x10086C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x10086CC", Offset = "0x10086CC", VA = "0x10086CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x10088D4", Offset = "0x10088D4", VA = "0x10088D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000528")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000529")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400052A")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB7580", Offset = "0xAB7580")]
		public GameObject mainCamera;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xAB75B8", Offset = "0xAB75B8")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x17164CC", Offset = "0x17164CC", VA = "0x17164CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x1716CF0", Offset = "0x1716CF0", VA = "0x1716CF0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x1716E38", Offset = "0x1716E38", VA = "0x1716E38")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x1716F74", Offset = "0x1716F74", VA = "0x1716F74")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x17170B0", Offset = "0x17170B0", VA = "0x17170B0")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x1716E0C", Offset = "0x1716E0C", VA = "0x1716E0C")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1717190", Offset = "0x1717190", VA = "0x1717190")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBBFC", Offset = "0xABBBFC")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1717208", Offset = "0x1717208", VA = "0x1717208")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x1716924", Offset = "0x1716924", VA = "0x1716924")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x171735C", Offset = "0x171735C", VA = "0x171735C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x171723C", Offset = "0x171723C", VA = "0x171723C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1717674", Offset = "0x1717674", VA = "0x1717674")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x1717764", Offset = "0x1717764", VA = "0x1717764")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x17177F4", Offset = "0x17177F4", VA = "0x17177F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBC5C", Offset = "0xABBC5C")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x171784C", Offset = "0x171784C", VA = "0x171784C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBC6C", Offset = "0xABBC6C")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x17178A4", Offset = "0x17178A4", VA = "0x17178A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBC7C", Offset = "0xABBC7C")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4B50", Offset = "0xAB4B50")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200022F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB54D4", Offset = "0xAB54D4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x1002DA8", Offset = "0x1002DA8", VA = "0x1002DA8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x1002DB0", Offset = "0x1002DB0", VA = "0x1002DB0")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400053F")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000540")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000541")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000542")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000543")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000544")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000545")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000546")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000547")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000548")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000549")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1027A68", Offset = "0x1027A68", VA = "0x1027A68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1027AC4", Offset = "0x1027AC4", VA = "0x1027AC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1027F58", Offset = "0x1027F58", VA = "0x1027F58")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1028044", Offset = "0x1028044", VA = "0x1028044")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x10281A8", Offset = "0x10281A8", VA = "0x10281A8")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x10284B0", Offset = "0x10284B0", VA = "0x10284B0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x10285A8", Offset = "0x10285A8", VA = "0x10285A8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1028708", Offset = "0x1028708", VA = "0x1028708")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1028240", Offset = "0x1028240", VA = "0x1028240")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1028294", Offset = "0x1028294", VA = "0x1028294")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1027DFC", Offset = "0x1027DFC", VA = "0x1027DFC")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1028844", Offset = "0x1028844", VA = "0x1028844")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public enum HandPoseId
	{
		[Token(Token = "0x400055C")]
		Default,
		[Token(Token = "0x400055D")]
		Generic,
		[Token(Token = "0x400055E")]
		PingPongBall,
		[Token(Token = "0x400055F")]
		Controller
	}
	[Token(Token = "0x20000F3")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700011F")]
		public bool AllowPointing
		{
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0x102885C", Offset = "0x102885C", VA = "0x102885C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000120")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60008BE")]
			[Address(RVA = "0x1028864", Offset = "0x1028864", VA = "0x1028864")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000121")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0x102886C", Offset = "0x102886C", VA = "0x102886C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1028874", Offset = "0x1028874", VA = "0x1028874")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1704494", Offset = "0x1704494", VA = "0x1704494")]
		private void Update()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x170477C", Offset = "0x170477C", VA = "0x170477C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x17047D8", Offset = "0x17047D8", VA = "0x17047D8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x170481C", Offset = "0x170481C", VA = "0x170481C")]
		public TouchController()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20000F5")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0xAB7670", Offset = "0xAB7670")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1703E08", Offset = "0x1703E08", VA = "0x1703E08")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1703E0C", Offset = "0x1703E0C", VA = "0x1703E0C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x1703EB4", Offset = "0x1703EB4", VA = "0x1703EB4")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB76BC", Offset = "0xAB76BC")]
		public bool autoRetrigger;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xAB76F4", Offset = "0xAB76F4")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7718", Offset = "0xAB7718")]
		public Transform[] playPositions;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x14FC778", Offset = "0x14FC778", VA = "0x14FC778")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x14FC948", Offset = "0x14FC948", VA = "0x14FC948")]
		private void Update()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x14FCB24", Offset = "0x14FCB24", VA = "0x14FCB24")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x14FC9A8", Offset = "0x14FC9A8", VA = "0x14FC9A8")]
		public void Play()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x14FCBE4", Offset = "0x14FCBE4", VA = "0x14FCBE4")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x14FCD54", Offset = "0x14FCD54", VA = "0x14FCD54")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000573")]
		Default,
		[Token(Token = "0x4000574")]
		Preload,
		[Token(Token = "0x4000575")]
		ManualPreload
	}
	[Token(Token = "0x20000F8")]
	public enum Fade
	{
		[Token(Token = "0x4000577")]
		In,
		[Token(Token = "0x4000578")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20000F9")]
	public class SoundGroup
	{
		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB7750", Offset = "0xAB7750")]
		public int maxPlayingSounds;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x172FB34", Offset = "0x172FB34", VA = "0x172FB34")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x172FBF0", Offset = "0x172FBF0", VA = "0x172FBF0")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x172FCB4", Offset = "0x172FCB4", VA = "0x172FCB4")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x172FCF0", Offset = "0x172FCF0", VA = "0x172FCF0")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x172FD2C", Offset = "0x172FD2C", VA = "0x172FD2C")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000FA")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000230")]
		public enum Fade
		{
			[Token(Token = "0x4000BAD")]
			In,
			[Token(Token = "0x4000BAE")]
			Out
		}

		[Token(Token = "0x2000231")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB54E4", Offset = "0xAB54E4")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x1000AE8", Offset = "0x1000AE8", VA = "0x1000AE8")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x1000AF0", Offset = "0x1000AF0", VA = "0x1000AF0")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000232")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB54F4", Offset = "0xAB54F4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x1000A54", Offset = "0x1000A54", VA = "0x1000A54")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x1000A5C", Offset = "0x1000A5C", VA = "0x1000A5C")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB777C", Offset = "0xAB777C")]
		public bool makePersistent;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB77B4", Offset = "0xAB77B4")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB77EC", Offset = "0xAB77EC")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7824", Offset = "0xAB7824")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB785C", Offset = "0xAB785C")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7894", Offset = "0xAB7894")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB78CC", Offset = "0xAB78CC")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7904", Offset = "0xAB7904")]
		public bool verboseLogging;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB793C", Offset = "0xAB793C")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7974", Offset = "0xAB7974")]
		public float volumeSoundFX;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB79AC", Offset = "0xAB79AC")]
		public float soundFxFadeSecs;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000122")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0x14FCE14", Offset = "0x14FCE14", VA = "0x14FCE14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000123")]
		public static AudioManager Instance
		{
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0x14FCEFC", Offset = "0x14FCEFC", VA = "0x14FCEFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		public static float NearFallOff
		{
			[Token(Token = "0x60008D5")]
			[Address(RVA = "0x14FCF60", Offset = "0x14FCF60", VA = "0x14FCF60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000125")]
		public static float FarFallOff
		{
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0x14FCFD0", Offset = "0x14FCFD0", VA = "0x14FCFD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000126")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0x14FD040", Offset = "0x14FD040", VA = "0x14FD040")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x14FD0B0", Offset = "0x14FD0B0", VA = "0x14FD0B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x14FD120", Offset = "0x14FD120", VA = "0x14FD120")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x14FF0D0", Offset = "0x14FF0D0", VA = "0x14FF0D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x14FD190", Offset = "0x14FD190", VA = "0x14FD190")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x14FD3D8", Offset = "0x14FD3D8", VA = "0x14FD3D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x14FD194", Offset = "0x14FD194", VA = "0x14FD194")]
		private void Init()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x14FE0D8", Offset = "0x14FE0D8", VA = "0x14FE0D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x14FD538", Offset = "0x14FD538", VA = "0x14FD538")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x14FE7D8", Offset = "0x14FE7D8", VA = "0x14FE7D8")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x14FE96C", Offset = "0x14FE96C", VA = "0x14FE96C")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x14FEB40", Offset = "0x14FEB40", VA = "0x14FEB40")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x14FEC48", Offset = "0x14FEC48", VA = "0x14FEC48")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x14FECD4", Offset = "0x14FECD4", VA = "0x14FECD4")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x14FF134", Offset = "0x14FF134", VA = "0x14FF134")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x14FF1A8", Offset = "0x14FF1A8", VA = "0x14FF1A8")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x14FDA54", Offset = "0x14FDA54", VA = "0x14FDA54")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x14FE0DC", Offset = "0x14FE0DC", VA = "0x14FE0DC")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x14FF2F0", Offset = "0x14FF2F0", VA = "0x14FF2F0")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x14FF420", Offset = "0x14FF420", VA = "0x14FF420")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x14FF554", Offset = "0x14FF554", VA = "0x14FF554")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x14FF21C", Offset = "0x14FF21C", VA = "0x14FF21C")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x14FF69C", Offset = "0x14FF69C", VA = "0x14FF69C")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x14FF754", Offset = "0x14FF754", VA = "0x14FF754")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x14FF870", Offset = "0x14FF870", VA = "0x14FF870")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x14FCB34", Offset = "0x14FCB34", VA = "0x14FCB34")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x14FCCA4", Offset = "0x14FCCA4", VA = "0x14FCCA4")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x14FF928", Offset = "0x14FF928", VA = "0x14FF928")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x14FF9F0", Offset = "0x14FF9F0", VA = "0x14FF9F0")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x14FFA84", Offset = "0x14FFA84", VA = "0x14FFA84")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x14FFB48", Offset = "0x14FFB48", VA = "0x14FFB48")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x14FFBE8", Offset = "0x14FFBE8", VA = "0x14FFBE8")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x14FFCA0", Offset = "0x14FFCA0", VA = "0x14FFCA0")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x15007D8", Offset = "0x15007D8", VA = "0x15007D8")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x1500ED8", Offset = "0x1500ED8", VA = "0x1500ED8")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x150109C", Offset = "0x150109C", VA = "0x150109C")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x1501C68", Offset = "0x1501C68", VA = "0x1501C68")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x14FFE8C", Offset = "0x14FFE8C", VA = "0x14FFE8C")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x1501D84", Offset = "0x1501D84", VA = "0x1501D84")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x1501E68", Offset = "0x1501E68", VA = "0x1501E68")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x1501F54", Offset = "0x1501F54", VA = "0x1501F54")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x150217C", Offset = "0x150217C", VA = "0x150217C")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x15022D0", Offset = "0x15022D0", VA = "0x15022D0")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x15023F4", Offset = "0x15023F4", VA = "0x15023F4")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x1502520", Offset = "0x1502520", VA = "0x1502520")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x1502600", Offset = "0x1502600", VA = "0x1502600")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x1502750", Offset = "0x1502750", VA = "0x1502750")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x1502B6C", Offset = "0x1502B6C", VA = "0x1502B6C")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40005A0")]
		None = -1,
		[Token(Token = "0x40005A1")]
		Reserved,
		[Token(Token = "0x40005A2")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20000FC")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x170CA08", Offset = "0x170CA08", VA = "0x170CA08")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x170C598", Offset = "0x170C598", VA = "0x170C598")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000233")]
		public enum FadeState
		{
			[Token(Token = "0x4000BB3")]
			Null,
			[Token(Token = "0x4000BB4")]
			FadingIn,
			[Token(Token = "0x4000BB5")]
			FadingOut,
			[Token(Token = "0x4000BB6")]
			Ducking
		}

		[Token(Token = "0x2000234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5504", Offset = "0xAB5504")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000256")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F03")]
				[Address(RVA = "0x100D758", Offset = "0x100D758", VA = "0x100D758", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000257")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F05")]
				[Address(RVA = "0x100D7A0", Offset = "0x100D7A0", VA = "0x100D7A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x100D638", Offset = "0x100D638", VA = "0x100D638")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x100D664", Offset = "0x100D664", VA = "0x100D664", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x100D668", Offset = "0x100D668", VA = "0x100D668", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x100D760", Offset = "0x100D760", VA = "0x100D760", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000235")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5514", Offset = "0xAB5514")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000258")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F09")]
				[Address(RVA = "0x100DBE8", Offset = "0x100DBE8", VA = "0x100DBE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000259")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F0B")]
				[Address(RVA = "0x100DC30", Offset = "0x100DC30", VA = "0x100DC30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x100DA7C", Offset = "0x100DA7C", VA = "0x100DA7C")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x100DAA8", Offset = "0x100DAA8", VA = "0x100DAA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x100DAAC", Offset = "0x100DAAC", VA = "0x100DAAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x100DBF0", Offset = "0x100DBF0", VA = "0x100DBF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000236")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB5524", Offset = "0xAB5524")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x1700025A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F0F")]
				[Address(RVA = "0x100DA2C", Offset = "0x100DA2C", VA = "0x100DA2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F11")]
				[Address(RVA = "0x100DA74", Offset = "0x100DA74", VA = "0x100DA74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x100D7A8", Offset = "0x100D7A8", VA = "0x100D7A8")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x100D7D4", Offset = "0x100D7D4", VA = "0x100D7D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x100D7D8", Offset = "0x100D7D8", VA = "0x100D7D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x100DA34", Offset = "0x100DA34", VA = "0x100DA34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x1700012A")]
		public float volume
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x2A711C8", Offset = "0x2A711C8", VA = "0x2A711C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x2A711E4", Offset = "0x2A711E4", VA = "0x2A711E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public float pitch
		{
			[Token(Token = "0x600090C")]
			[Address(RVA = "0x2A71200", Offset = "0x2A71200", VA = "0x2A71200")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600090D")]
			[Address(RVA = "0x2A7121C", Offset = "0x2A7121C", VA = "0x2A7121C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public AudioClip clip
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x2A71238", Offset = "0x2A71238", VA = "0x2A71238")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090F")]
			[Address(RVA = "0x2A71254", Offset = "0x2A71254", VA = "0x2A71254")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public float time
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x2A71270", Offset = "0x2A71270", VA = "0x2A71270")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000911")]
			[Address(RVA = "0x2A7128C", Offset = "0x2A7128C", VA = "0x2A7128C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public float length
		{
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x2A712A8", Offset = "0x2A712A8", VA = "0x2A712A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700012F")]
		public bool loop
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x2A7135C", Offset = "0x2A7135C", VA = "0x2A7135C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000914")]
			[Address(RVA = "0x2A71378", Offset = "0x2A71378", VA = "0x2A71378")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public bool mute
		{
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x2A71398", Offset = "0x2A71398", VA = "0x2A71398")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000916")]
			[Address(RVA = "0x2A713B4", Offset = "0x2A713B4", VA = "0x2A713B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000917")]
			[Address(RVA = "0x2A713D4", Offset = "0x2A713D4", VA = "0x2A713D4")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000918")]
			[Address(RVA = "0x2A713F0", Offset = "0x2A713F0", VA = "0x2A713F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public bool isPlaying
		{
			[Token(Token = "0x6000919")]
			[Address(RVA = "0x2A7140C", Offset = "0x2A7140C", VA = "0x2A7140C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x2A71428", Offset = "0x2A71428", VA = "0x2A71428")]
		private void Awake()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x2A71618", Offset = "0x2A71618", VA = "0x2A71618")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x2A71654", Offset = "0x2A71654", VA = "0x2A71654")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x2A7165C", Offset = "0x2A7165C", VA = "0x2A7165C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x2A71690", Offset = "0x2A71690", VA = "0x2A71690")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x2A71698", Offset = "0x2A71698", VA = "0x2A71698")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x2A716A0", Offset = "0x2A716A0", VA = "0x2A716A0")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x2A71744", Offset = "0x2A71744", VA = "0x2A71744")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x2A717B0", Offset = "0x2A717B0", VA = "0x2A717B0")]
		public void Play()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x2A71810", Offset = "0x2A71810", VA = "0x2A71810")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x2A71848", Offset = "0x2A71848", VA = "0x2A71848")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x2A71968", Offset = "0x2A71968", VA = "0x2A71968")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x2A719C0", Offset = "0x2A719C0", VA = "0x2A719C0")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x2A71AE0", Offset = "0x2A71AE0", VA = "0x2A71AE0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x2A71BAC", Offset = "0x2A71BAC", VA = "0x2A71BAC")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x2A71BF4", Offset = "0x2A71BF4", VA = "0x2A71BF4")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x2A71C20", Offset = "0x2A71C20", VA = "0x2A71C20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBC8C", Offset = "0xABBC8C")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x2A71CC8", Offset = "0x2A71CC8", VA = "0x2A71CC8")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x2A71DBC", Offset = "0x2A71DBC", VA = "0x2A71DBC")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x2A71EE8", Offset = "0x2A71EE8", VA = "0x2A71EE8")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x2A71F60", Offset = "0x2A71F60", VA = "0x2A71F60")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x2A71FF8", Offset = "0x2A71FF8", VA = "0x2A71FF8")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x2A71D30", Offset = "0x2A71D30", VA = "0x2A71D30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBCEC", Offset = "0xABBCEC")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x2A71E38", Offset = "0x2A71E38", VA = "0x2A71E38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBD4C", Offset = "0xABBD4C")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x2A72094", Offset = "0x2A72094", VA = "0x2A72094")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40005B9")]
		Random,
		[Token(Token = "0x40005BA")]
		Sequential
	}
	[Token(Token = "0x2000100")]
	public enum FreqHint
	{
		[Token(Token = "0x40005BC")]
		None,
		[Token(Token = "0x40005BD")]
		Wide,
		[Token(Token = "0x40005BE")]
		Narrow
	}
	[Token(Token = "0x2000101")]
	public enum SoundPriority
	{
		[Token(Token = "0x40005C0")]
		VeryLow = -2,
		[Token(Token = "0x40005C1")]
		Low,
		[Token(Token = "0x40005C2")]
		Default,
		[Token(Token = "0x40005C3")]
		High,
		[Token(Token = "0x40005C4")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000102")]
	public class OSPProps
	{
		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7A94", Offset = "0xAB7A94")]
		public bool enableSpatialization;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7ACC", Offset = "0xAB7ACC")]
		public bool useFastOverride;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7B04", Offset = "0xAB7B04")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB7B04", Offset = "0xAB7B04")]
		public float gain;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7B58", Offset = "0xAB7B58")]
		public bool enableInvSquare;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7B90", Offset = "0xAB7B90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB7B90", Offset = "0xAB7B90")]
		public float volumetric;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7BE8", Offset = "0xAB7BE8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xAB7BE8", Offset = "0xAB7BE8")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x1714CD8", Offset = "0x1714CD8", VA = "0x1714CD8")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000103")]
	public class SoundFX
	{
		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7C48", Offset = "0xAB7C48")]
		public string name;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7C80", Offset = "0xAB7C80")]
		public SoundFXNext playback;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7CB8", Offset = "0xAB7CB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB7CB8", Offset = "0xAB7CB8")]
		public float volume;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7D0C", Offset = "0xAB7D0C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xAB7D0C", Offset = "0xAB7D0C")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7D68", Offset = "0xAB7D68")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xAB7D68", Offset = "0xAB7D68")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7DC8", Offset = "0xAB7DC8")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7E00", Offset = "0xAB7E00")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7E38", Offset = "0xAB7E38")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7E70", Offset = "0xAB7E70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB7E70", Offset = "0xAB7E70")]
		public float spread;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7EC8", Offset = "0xAB7EC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xAB7EC8", Offset = "0xAB7EC8")]
		public float pctChanceToPlay;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7F1C", Offset = "0xAB7F1C")]
		public SoundPriority priority;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7F54", Offset = "0xAB7F54")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xAB7F54", Offset = "0xAB7F54")]
		public Vector2 delay;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7FB0", Offset = "0xAB7FB0")]
		public bool looping;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xAB7FE8", Offset = "0xAB7FE8")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000133")]
		public int Length
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0x2A725E4", Offset = "0x2A725E4", VA = "0x2A725E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000134")]
		public bool IsValid
		{
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x2A72600", Offset = "0x2A72600", VA = "0x2A72600")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000135")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000937")]
			[Address(RVA = "0x2A726A0", Offset = "0x2A726A0", VA = "0x2A726A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000938")]
			[Address(RVA = "0x2A726A8", Offset = "0x2A726A8", VA = "0x2A726A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0x2A726B0", Offset = "0x2A726B0", VA = "0x2A726B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000137")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x600093A")]
			[Address(RVA = "0x2A726BC", Offset = "0x2A726BC", VA = "0x2A726BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x2A720AC", Offset = "0x2A720AC", VA = "0x2A720AC")]
		public SoundFX()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x2A726D4", Offset = "0x2A726D4", VA = "0x2A726D4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x2A727A4", Offset = "0x2A727A4", VA = "0x2A727A4")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x2A72840", Offset = "0x2A72840", VA = "0x2A72840")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x2A72870", Offset = "0x2A72870", VA = "0x2A72870")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x2A72968", Offset = "0x2A72968", VA = "0x2A72968")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x2A72974", Offset = "0x2A72974", VA = "0x2A72974")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x2A72A50", Offset = "0x2A72A50", VA = "0x2A72A50")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x2A72B64", Offset = "0x2A72B64", VA = "0x2A72B64")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x2A72BF0", Offset = "0x2A72BF0", VA = "0x2A72BF0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x2A72C84", Offset = "0x2A72C84", VA = "0x2A72C84")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x2A72D10", Offset = "0x2A72D10", VA = "0x2A72D10")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x2A72D9C", Offset = "0x2A72D9C", VA = "0x2A72D9C")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000104")]
	public class SoundFXRef
	{
		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000138")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0x172F660", Offset = "0x172F660", VA = "0x172F660")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		public string name
		{
			[Token(Token = "0x6000948")]
			[Address(RVA = "0x172F784", Offset = "0x172F784", VA = "0x172F784")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000949")]
			[Address(RVA = "0x172F78C", Offset = "0x172F78C", VA = "0x172F78C")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public int Length
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0x172F7B4", Offset = "0x172F7B4", VA = "0x172F7B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700013B")]
		public bool IsValid
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0x172F7F0", Offset = "0x172F7F0", VA = "0x172F7F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x172F690", Offset = "0x172F690", VA = "0x172F690")]
		private void Init()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x172F82C", Offset = "0x172F82C", VA = "0x172F82C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x172F868", Offset = "0x172F868", VA = "0x172F868")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x172F8AC", Offset = "0x172F8AC", VA = "0x172F8AC")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x172F8F8", Offset = "0x172F8F8", VA = "0x172F8F8")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x172F97C", Offset = "0x172F97C", VA = "0x172F97C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x172F9C0", Offset = "0x172F9C0", VA = "0x172F9C0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x172FA14", Offset = "0x172FA14", VA = "0x172FA14")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x172FA50", Offset = "0x172FA50", VA = "0x172FA50")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x172FA94", Offset = "0x172FA94", VA = "0x172FA94")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x172FAD0", Offset = "0x172FAD0", VA = "0x172FAD0")]
		public SoundFXRef()
		{
		}
	}
}
namespace ELEVEN
{
	[Token(Token = "0x2000105")]
	public class GlobalHapticModifierController : BaseComponent
	{
		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_Text defaultMaxRumbleTime;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TMP_Text currentMaxRumbleTime;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TMP_Text currentMaxRumbleTimeFactored;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int lastWrittenDefaultMaxRumbleTime;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int lastWrittenCurrentMaxRumbleTime;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int lastWrittenCurrentMaxRumbleTimeFactored;

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x102725C", Offset = "0x102725C", VA = "0x102725C", Slot = "37")]
		public override void ComponentWillMount()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x10275A4", Offset = "0x10275A4", VA = "0x10275A4", Slot = "41")]
		public override void ComponentWillUnmount()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x102768C", Offset = "0x102768C", VA = "0x102768C")]
		private void UpdateValues()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x10273AC", Offset = "0x10273AC", VA = "0x10273AC")]
		private void UpdateValues(bool force)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x1027694", Offset = "0x1027694", VA = "0x1027694")]
		private void UpdateDefaultMaxRumbleTime(float value, bool force = false)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x1027718", Offset = "0x1027718", VA = "0x1027718")]
		private void UpdateCurrentMaxRumbleTime(float value, bool force = false)
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x102779C", Offset = "0x102779C", VA = "0x102779C")]
		private void UpdateCurrentMaxRumbleTimeFactored(float value, bool force = false)
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x1027820", Offset = "0x1027820", VA = "0x1027820")]
		public GlobalHapticModifierController()
		{
		}
	}
}
namespace Nyahoon
{
	[Token(Token = "0x2000106")]
	public class ThreadPool
	{
		[Token(Token = "0x2000237")]
		private struct Job : IJob
		{
			[Token(Token = "0x4000BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private GCHandle m_func;

			[Token(Token = "0x4000BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private GCHandle m_arg;

			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x1016DE4", Offset = "0x1016DE4", VA = "0x1016DE4")]
			public Job(WaitCallback callback, object state)
			{
			}

			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x1016E24", Offset = "0x1016E24", VA = "0x1016E24", Slot = "4")]
			public void Execute()
			{
			}
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x17043EC", Offset = "0x17043EC", VA = "0x17043EC")]
		public static void InitInstance()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x17043F0", Offset = "0x17043F0", VA = "0x17043F0")]
		public static bool InitInstance(int queueSize, int threadNum)
		{
			return default(bool);
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x17043F8", Offset = "0x17043F8", VA = "0x17043F8")]
		public static void QueueUserWorkItem(WaitCallback callback, object state)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x170448C", Offset = "0x170448C", VA = "0x170448C")]
		public ThreadPool()
		{
		}
	}
}
namespace FastShadowReceiver
{
	[Token(Token = "0x2000107")]
	public class BinaryMeshTreeSearch : MeshTreeSearch
	{
		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<int[]>[] m_triangleList;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<int[]>[] m_triangleListToScissor;

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x1505D18", Offset = "0x1505D18", VA = "0x1505D18")]
		internal new void Initialize(int lightmapCountPlusOne)
		{
		}

		[Token(Token = "0x6000964")]
		private void ScissorTrianglesInList<Vertex, VertexFunc, VertexArray, VertexArrayFunc>(VertexArray vertices, int[] indices, List<int[]> triangleListToScissor, ref ScissoredTriangleCount scissoredTriangleCount) where VertexFunc : IScissoredVertexFunctions<Vertex> where VertexArrayFunc : IVertexArrayFunction<Vertex, VertexArray>
		{
		}

		[Token(Token = "0x6000965")]
		private void AddTriangleList<Vertex, VertexArray, VertexArrayFunc>(SearchResult result, VertexArray array, int[] indices, List<int[]> triangleList) where VertexArrayFunc : IVertexArrayFunction<Vertex, VertexArray>
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x150610C", Offset = "0x150610C", VA = "0x150610C")]
		internal void Finalize(Vector3[] vertices, int[] indices, Vector3[] normals, Vector2[] uvs)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x1508164", Offset = "0x1508164", VA = "0x1508164")]
		private void Finalize(Vector3[] vertices, int[] indices, Vector3[] normals, Vector2[] uvs, int lightmapIndexPlusOne)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x1506B00", Offset = "0x1506B00", VA = "0x1506B00")]
		internal bool IsInView(Bounds bounds, out float scissorDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x1506818", Offset = "0x1506818", VA = "0x1506818")]
		internal void AddTriangles(int[] trianglesToAdd, Bounds bounds, bool isPartial, int lightmapIndexPlusOne)
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x1505B7C", Offset = "0x1505B7C", VA = "0x1505B7C")]
		public BinaryMeshTreeSearch()
		{
		}
	}
	[Token(Token = "0x2000108")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4BB0", Offset = "0xAB4BB0")]
	public class DynamicMesh : MonoBehaviour
	{
		[Token(Token = "0x40005E9")]
		private const int BUFFER_COUNT = 2;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_nCurrentBuffer;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh[] m_meshes;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x1700013C")]
		public Mesh[] meshes
		{
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x1023CD4", Offset = "0x1023CD4", VA = "0x1023CD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		public Mesh currentMesh
		{
			[Token(Token = "0x600096C")]
			[Address(RVA = "0x1023CDC", Offset = "0x1023CDC", VA = "0x1023CDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x1023D1C", Offset = "0x1023D1C", VA = "0x1023D1C")]
		public void SwapMesh()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x1023D70", Offset = "0x1023D70", VA = "0x1023D70")]
		public void Awake()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x1023F8C", Offset = "0x1023F8C", VA = "0x1023F8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x10240C4", Offset = "0x10240C4", VA = "0x10240C4")]
		public DynamicMesh()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public abstract class MeshTree : MeshTreeBase
	{
		[Serializable]
		[Token(Token = "0x2000238")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xAB5534", Offset = "0xAB5534")]
		protected struct TriangleList
		{
			[Token(Token = "0x4000BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] triangles;

			[Token(Token = "0x1700025C")]
			public int Item
			{
				[Token(Token = "0x6000F16")]
				[Address(RVA = "0x10071E4", Offset = "0x10071E4", VA = "0x10071E4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000F17")]
				[Address(RVA = "0x1007220", Offset = "0x1007220", VA = "0x1007220")]
				set
				{
				}
			}

			[Token(Token = "0x1700025D")]
			public int Length
			{
				[Token(Token = "0x6000F18")]
				[Address(RVA = "0x100725C", Offset = "0x100725C", VA = "0x100725C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x1007198", Offset = "0x1007198", VA = "0x1007198")]
			public static TriangleList CreateFromArray(int[] array)
			{
				return default(TriangleList);
			}

			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x10071C4", Offset = "0x10071C4", VA = "0x10071C4")]
			public bool IsEmpty()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000239")]
		public enum UVIndex
		{
			[Token(Token = "0x4000BD6")]
			None,
			[Token(Token = "0x4000BD7")]
			UV2
		}

		[Token(Token = "0x40005ED")]
		public const int MAX_LIGHTMAP_INDEX = 65534;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Object m_srcMesh;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private LayerMask m_layerMask;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[HideInInspector]
		private bool m_excludeIgnoreProjectorMaterial;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private string[] m_excludeRenderTypes;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected Vector3[] m_vertices;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		protected Vector3[] m_normals;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] m_uvs;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		protected int[] m_indices;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		protected float m_scaledOffset;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[HideInInspector]
		protected float m_fixedOffset;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_debugVertexSum;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_debugSquareVertexSum;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UVIndex m_lightmapUVIndex;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[HideInInspector]
		private int[] m_lightmapSegments;

		[Token(Token = "0x1700013E")]
		public UnityEngine.Object srcMesh
		{
			[Token(Token = "0x6000971")]
			[Address(RVA = "0x163C1EC", Offset = "0x163C1EC", VA = "0x163C1EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x163C1F4", Offset = "0x163C1F4", VA = "0x163C1F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public string[] excludeRenderTypes
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0x163C330", Offset = "0x163C330", VA = "0x163C330")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000975")]
			[Address(RVA = "0x163C338", Offset = "0x163C338", VA = "0x163C338")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public bool excludeIgnoreProjectorMaterial
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0x163C340", Offset = "0x163C340", VA = "0x163C340")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000977")]
			[Address(RVA = "0x163C348", Offset = "0x163C348", VA = "0x163C348")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public LayerMask layerMask
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x163C354", Offset = "0x163C354", VA = "0x163C354")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000979")]
			[Address(RVA = "0x163C35C", Offset = "0x163C35C", VA = "0x163C35C")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public float scaledOffset
		{
			[Token(Token = "0x600097A")]
			[Address(RVA = "0x163C364", Offset = "0x163C364", VA = "0x163C364")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600097B")]
			[Address(RVA = "0x163C36C", Offset = "0x163C36C", VA = "0x163C36C")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public float fixedOffset
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0x163C374", Offset = "0x163C374", VA = "0x163C374")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600097D")]
			[Address(RVA = "0x163C37C", Offset = "0x163C37C", VA = "0x163C37C")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		protected int lightmapCount
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0x163DDD0", Offset = "0x163DDD0", VA = "0x163DDD0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x163C328", Offset = "0x163C328", VA = "0x163C328")]
		public void SetSrcMeshWithoutClear(UnityEngine.Object mesh)
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x163C384", Offset = "0x163C384", VA = "0x163C384", Slot = "4")]
		public override bool IsPrebuilt()
		{
			return default(bool);
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x163C4A0", Offset = "0x163C4A0", VA = "0x163C4A0", Slot = "6")]
		public override bool IsReadyToBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x163C52C", Offset = "0x163C52C", VA = "0x163C52C", Slot = "15")]
		protected virtual void Clear()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x163C57C", Offset = "0x163C57C", VA = "0x163C57C", Slot = "13")]
		protected override void PrepareForBuild()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x163C798", Offset = "0x163C798", VA = "0x163C798")]
		private void CombineMeshes(GameObject rootObject)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x163DD60", Offset = "0x163DD60", VA = "0x163DD60")]
		protected int GetLightmapIndexOfTriangle(int triangleIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x163DDE8", Offset = "0x163DDE8", VA = "0x163DDE8", Slot = "8")]
		public override string CheckError(GameObject rootObject)
		{
			return null;
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x163E468", Offset = "0x163E468", VA = "0x163E468")]
		protected MeshTree()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public abstract class MeshTreeBase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200023A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB556C", Offset = "0xAB556C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static WaitCallback <>9__10_0;

			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x10072DC", Offset = "0x10072DC", VA = "0x10072DC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x10072E4", Offset = "0x10072E4", VA = "0x10072E4")]
			internal void <AsyncBuild>b__10_0(object arg)
			{
			}
		}

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		protected Bounds m_bounds;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ManualResetEvent m_event;

		[Token(Token = "0x17000145")]
		public Bounds bounds
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x170A410", Offset = "0x170A410", VA = "0x170A410")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x6000988")]
		public abstract bool IsPrebuilt();

		[Token(Token = "0x6000989")]
		public abstract void BuildFromPrebuiltData();

		[Token(Token = "0x600098A")]
		public abstract bool IsReadyToBuild();

		[Token(Token = "0x600098B")]
		public abstract bool IsBuildFinished();

		[Token(Token = "0x600098C")]
		public abstract string CheckError(GameObject rootObject);

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x170A424", Offset = "0x170A424", VA = "0x170A424")]
		public bool IsBuilding()
		{
			return default(bool);
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x170A464", Offset = "0x170A464", VA = "0x170A464")]
		public void AsyncBuild()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x170A604", Offset = "0x170A604", VA = "0x170A604")]
		public void WaitForBuild()
		{
		}

		[Token(Token = "0x6000990")]
		public abstract Type GetSearchType();

		[Token(Token = "0x6000991")]
		public abstract MeshTreeSearch CreateSearch();

		[Token(Token = "0x6000992")]
		public abstract void Search(MeshTreeSearch search);

		[Token(Token = "0x6000993")]
		public abstract void Raycast(MeshTreeRaycast raycast);

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x170A64C", Offset = "0x170A64C", VA = "0x170A64C")]
		private void BuildStart()
		{
		}

		[Token(Token = "0x6000995")]
		protected abstract void PrepareForBuild();

		[Token(Token = "0x6000996")]
		protected abstract void Build();

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x170A7D4", Offset = "0x170A7D4", VA = "0x170A7D4")]
		protected MeshTreeBase()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class MeshTreeSearch
	{
		[Token(Token = "0x200023B")]
		protected class SearchResult
		{
			[Token(Token = "0x4000BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector3> vertices;

			[Token(Token = "0x4000BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Vector3> normals;

			[Token(Token = "0x4000BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Vector2> uvs;

			[Token(Token = "0x4000BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<int> indices;

			[Token(Token = "0x4000BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 minBounds;

			[Token(Token = "0x4000BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 maxBounds;

			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x1007D00", Offset = "0x1007D00", VA = "0x1007D00")]
			public SearchResult()
			{
			}
		}

		[Token(Token = "0x200023C")]
		protected struct VertexAndNormal
		{
			[Token(Token = "0x4000BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 v;

			[Token(Token = "0x4000BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 n;

			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x1007680", Offset = "0x1007680", VA = "0x1007680")]
			public VertexAndNormal(Vector3 v0, Vector3 n0)
			{
			}
		}

		[Token(Token = "0x200023D")]
		protected struct VertexAndNormalArray
		{
			[Token(Token = "0x4000BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3[] v;

			[Token(Token = "0x4000BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3[] n;
		}

		[Token(Token = "0x200023E")]
		protected struct VertexAndUV
		{
			[Token(Token = "0x4000BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 v;

			[Token(Token = "0x4000BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector2 uv;

			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x100785C", Offset = "0x100785C", VA = "0x100785C")]
			public VertexAndUV(Vector3 v0, Vector2 uv0)
			{
			}
		}

		[Token(Token = "0x200023F")]
		protected struct VertexAndUVArray
		{
			[Token(Token = "0x4000BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3[] v;

			[Token(Token = "0x4000BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2[] uv;
		}

		[Token(Token = "0x2000240")]
		protected struct VertexNormalAndUV
		{
			[Token(Token = "0x4000BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 v;

			[Token(Token = "0x4000BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 n;

			[Token(Token = "0x4000BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 uv;

			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x1007C04", Offset = "0x1007C04", VA = "0x1007C04")]
			public VertexNormalAndUV(Vector3 v0, Vector3 n0, Vector2 uv0)
			{
			}
		}

		[Token(Token = "0x2000241")]
		protected struct VertexNormalAndUVArray
		{
			[Token(Token = "0x4000BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3[] v;

			[Token(Token = "0x4000BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3[] n;

			[Token(Token = "0x4000BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2[] uv;
		}

		[StructLayout(2)]
		[Token(Token = "0x2000242")]
		protected struct ScissoredTriangles
		{
			[Token(Token = "0x4000BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3[] scissoredVertices;

			[Token(Token = "0x4000BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VertexAndNormal[] scissoredVerticesAndNormals;

			[Token(Token = "0x4000BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VertexAndUV[] scissoredVerticesAndUVs;

			[Token(Token = "0x4000BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VertexNormalAndUV[] scissoredVerticesNormalsAndUVs;
		}

		[Token(Token = "0x2000243")]
		protected interface IVertexArrayFunction<T, TArray>
		{
			[Token(Token = "0x6000F20")]
			T GetVertexFromArray(ref TArray array, int index);

			[Token(Token = "0x6000F21")]
			void AddVertex(SearchResult result, ref TArray array, int srcIndex);

			[Token(Token = "0x6000F22")]
			Vector3 GetVertexPosition(ref TArray array, int index);
		}

		[Token(Token = "0x2000244")]
		protected interface IScissoredVertexFunctions<T>
		{
			[Token(Token = "0x6000F23")]
			void Initialize(ref ScissoredTriangles vertices, int size);

			[Token(Token = "0x6000F24")]
			T Lerp(ref T a, ref T b, float t);

			[Token(Token = "0x6000F25")]
			T[] GetVertexArray(ref ScissoredTriangles vertices);

			[Token(Token = "0x6000F26")]
			void SetVertexArray(ref ScissoredTriangles vertice, T[] vertexArray);

			[Token(Token = "0x6000F27")]
			int GetSize(ref ScissoredTriangles vertices);

			[Token(Token = "0x6000F28")]
			Vector3 GetVertexPosition(ref T vertex);

			[Token(Token = "0x6000F29")]
			void AddVertex(SearchResult result, T vertex);
		}

		[Token(Token = "0x2000245")]
		protected struct ScissorVertexFunc : IScissoredVertexFunctions<Vector3>
		{
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x100793C", Offset = "0x100793C", VA = "0x100793C", Slot = "4")]
			public void Initialize(ref ScissoredTriangles vertices, int size)
			{
			}

			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x10079A4", Offset = "0x10079A4", VA = "0x10079A4", Slot = "5")]
			public Vector3 Lerp(ref Vector3 a, ref Vector3 b, float t)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x10079F8", Offset = "0x10079F8", VA = "0x10079F8", Slot = "6")]
			public Vector3[] GetVertexArray(ref ScissoredTriangles vertices)
			{
				return null;
			}

			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x1007A00", Offset = "0x1007A00", VA = "0x1007A00", Slot = "7")]
			public void SetVertexArray(ref ScissoredTriangles vertices, Vector3[] vertexArray)
			{
			}

			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x1007A10", Offset = "0x1007A10", VA = "0x1007A10", Slot = "8")]
			public int GetSize(ref ScissoredTriangles vertices)
			{
				return default(int);
			}

			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x1007A28", Offset = "0x1007A28", VA = "0x1007A28", Slot = "9")]
			public Vector3 GetVertexPosition(ref Vector3 vertex)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x1007A34", Offset = "0x1007A34", VA = "0x1007A34", Slot = "10")]
			public void AddVertex(SearchResult result, Vector3 vertex)
			{
			}
		}

		[Token(Token = "0x2000246")]
		protected struct VertexArrayFunc : IVertexArrayFunction<Vector3, Vector3[]>
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x1008038", Offset = "0x1008038", VA = "0x1008038", Slot = "4")]
			public Vector3 GetVertexFromArray(ref Vector3[] array, int index)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x1008080", Offset = "0x1008080", VA = "0x1008080", Slot = "5")]
			public void AddVertex(SearchResult result, ref Vector3[] array, int srcIndex)
			{
			}

			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x100811C", Offset = "0x100811C", VA = "0x100811C", Slot = "6")]
			public Vector3 GetVertexPosition(ref Vector3[] array, int index)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000247")]
		protected struct ScissorVertexAndNormalFunc : IScissoredVertexFunctions<VertexAndNormal>
		{
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x1007554", Offset = "0x1007554", VA = "0x1007554", Slot = "4")]
			public void Initialize(ref ScissoredTriangles vertices, int size)
			{
			}

			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x10075BC", Offset = "0x10075BC", VA = "0x10075BC", Slot = "5")]
			public VertexAndNormal Lerp(ref VertexAndNormal a, ref VertexAndNormal b, float t)
			{
				return default(VertexAndNormal);
			}

			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x1007690", Offset = "0x1007690", VA = "0x1007690", Slot = "6")]
			public VertexAndNormal[] GetVertexArray(ref ScissoredTriangles vertices)
			{
				return null;
			}

			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x1007698", Offset = "0x1007698", VA = "0x1007698", Slot = "7")]
			public void SetVertexArray(ref ScissoredTriangles vertices, VertexAndNormal[] vertexArray)
			{
			}

			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x10076A8", Offset = "0x10076A8", VA = "0x10076A8", Slot = "8")]
			public int GetSize(ref ScissoredTriangles vertices)
			{
				return default(int);
			}

			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x10076C0", Offset = "0x10076C0", VA = "0x10076C0", Slot = "9")]
			public Vector3 GetVertexPosition(ref VertexAndNormal vertex)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x10076CC", Offset = "0x10076CC", VA = "0x10076CC", Slot = "10")]
			public void AddVertex(SearchResult result, VertexAndNormal vertex)
			{
			}
		}

		[Token(Token = "0x2000248")]
		protected struct VertexAndNormalArrayFunc : IVertexArrayFunction<VertexAndNormal, VertexAndNormalArray>
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x1007D08", Offset = "0x1007D08", VA = "0x1007D08", Slot = "4")]
			public VertexAndNormal GetVertexFromArray(ref VertexAndNormalArray array, int index)
			{
				return default(VertexAndNormal);
			}

			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x1007D84", Offset = "0x1007D84", VA = "0x1007D84", Slot = "5")]
			public void AddVertex(SearchResult result, ref VertexAndNormalArray array, int srcIndex)
			{
			}

			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x1007E5C", Offset = "0x1007E5C", VA = "0x1007E5C", Slot = "6")]
			public Vector3 GetVertexPosition(ref VertexAndNormalArray array, int index)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000249")]
		protected struct ScissorVertexAndUVFunc : IScissoredVertexFunctions<VertexAndUV>
		{
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x1007750", Offset = "0x1007750", VA = "0x1007750", Slot = "4")]
			public void Initialize(ref ScissoredTriangles vertices, int size)
			{
			}

			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x10077B8", Offset = "0x10077B8", VA = "0x10077B8", Slot = "5")]
			public VertexAndUV Lerp(ref VertexAndUV a, ref VertexAndUV b, float t)
			{
				return default(VertexAndUV);
			}

			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x100786C", Offset = "0x100786C", VA = "0x100786C", Slot = "6")]
			public VertexAndUV[] GetVertexArray(ref ScissoredTriangles vertices)
			{
				return null;
			}

			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x1007874", Offset = "0x1007874", VA = "0x1007874", Slot = "7")]
			public void SetVertexArray(ref ScissoredTriangles vertices, VertexAndUV[] vertexArray)
			{
			}

			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x1007884", Offset = "0x1007884", VA = "0x1007884", Slot = "8")]
			public int GetSize(ref ScissoredTriangles vertices)
			{
				return default(int);
			}

			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x100789C", Offset = "0x100789C", VA = "0x100789C", Slot = "9")]
			public Vector3 GetVertexPosition(ref VertexAndUV vertex)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x10078A8", Offset = "0x10078A8", VA = "0x10078A8", Slot = "10")]
			public void AddVertex(SearchResult result, VertexAndUV vertex)
			{
			}
		}

		[Token(Token = "0x200024A")]
		protected struct VertexAndUVArrayFunc : IVertexArrayFunction<VertexAndUV, VertexAndUVArray>
		{
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0x1007EA4", Offset = "0x1007EA4", VA = "0x1007EA4", Slot = "4")]
			public VertexAndUV GetVertexFromArray(ref VertexAndUVArray array, int index)
			{
				return default(VertexAndUV);
			}

			[Token(Token = "0x6000F46")]
			[Address(RVA = "0x1007F14", Offset = "0x1007F14", VA = "0x1007F14", Slot = "5")]
			public void AddVertex(SearchResult result, ref VertexAndUVArray array, int srcIndex)
			{
			}

			[Token(Token = "0x6000F47")]
			[Address(RVA = "0x1007FF0", Offset = "0x1007FF0", VA = "0x1007FF0", Slot = "6")]
			public Vector3 GetVertexPosition(ref VertexAndUVArray array, int index)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200024B")]
		protected struct ScissorVertexNormalAndUVFunc : IScissoredVertexFunctions<VertexNormalAndUV>
		{
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x1007AB4", Offset = "0x1007AB4", VA = "0x1007AB4", Slot = "4")]
			public void Initialize(ref ScissoredTriangles vertices, int size)
			{
			}

			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x1007B1C", Offset = "0x1007B1C", VA = "0x1007B1C", Slot = "5")]
			public VertexNormalAndUV Lerp(ref VertexNormalAndUV a, ref VertexNormalAndUV b, float t)
			{
				return default(VertexNormalAndUV);
			}

			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x1007C18", Offset = "0x1007C18", VA = "0x1007C18", Slot = "6")]
			public VertexNormalAndUV[] GetVertexArray(ref ScissoredTriangles vertices)
			{
				return null;
			}

			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x1007C20", Offset = "0x1007C20", VA = "0x1007C20", Slot = "7")]
			public void SetVertexArray(ref ScissoredTriangles vertices, VertexNormalAndUV[] vertexArray)
			{
			}

			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0x1007C30", Offset = "0x1007C30", VA = "0x1007C30", Slot = "8")]
			public int GetSize(ref ScissoredTriangles vertices)
			{
				return default(int);
			}

			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x1007C48", Offset = "0x1007C48", VA = "0x1007C48", Slot = "9")]
			public Vector3 GetVertexPosition(ref VertexNormalAndUV vertex)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x1007C54", Offset = "0x1007C54", VA = "0x1007C54", Slot = "10")]
			public void AddVertex(SearchResult result, VertexNormalAndUV vertex)
			{
			}
		}

		[Token(Token = "0x200024C")]
		protected struct VertexNormalAndUVArrayFunc : IVertexArrayFunction<VertexNormalAndUV, VertexNormalAndUVArray>
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x1008164", Offset = "0x1008164", VA = "0x1008164", Slot = "4")]
			public VertexNormalAndUV GetVertexFromArray(ref VertexNormalAndUVArray array, int index)
			{
				return default(VertexNormalAndUV);
			}

			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x1008200", Offset = "0x1008200", VA = "0x1008200", Slot = "5")]
			public void AddVertex(SearchResult result, ref VertexNormalAndUVArray array, int srcIndex)
			{
			}

			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x1008318", Offset = "0x1008318", VA = "0x1008318", Slot = "6")]
			public Vector3 GetVertexPosition(ref VertexNormalAndUVArray array, int index)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200024D")]
		protected struct ScissoredTriangleCount
		{
			[Token(Token = "0x4000BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int m_nTriangleCount;

			[Token(Token = "0x4000BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int m_nVertexCount;

			[Token(Token = "0x4000BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int m_nIndexCount;
		}

		[Serializable]
		[Token(Token = "0x200024E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB557C", Offset = "0xAB557C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x10074C4", Offset = "0x10074C4", VA = "0x10074C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x10074CC", Offset = "0x10074CC", VA = "0x10074CC")]
			internal void <.cctor>b__73_0(object arg)
			{
			}
		}

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ClipPlanes m_clipPlanes;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_scissorMargin;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool m_bScissor;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool m_bOutputNormals;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool m_bOutputUVs;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool m_bBackfaceCulling;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, List<SearchResult>> m_resultBuffer;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3[] m_clipMetric;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected SearchResult[] m_results;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ManualResetEvent m_event;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshTreeBase m_tree;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Type m_scissoredVertexType;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected ScissoredTriangles[] m_scissoredTriangles;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected int[] m_scissoredTriangleVertexCount;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected ScissoredTriangles m_tempScissorBuffer;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_projectionDir;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_projectionPos;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_isOrthographic;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WaitCallback s_searchCallback;

		[Token(Token = "0x17000146")]
		public List<Vector3> vertices
		{
			[Token(Token = "0x600099A")]
			[Address(RVA = "0x170B2C0", Offset = "0x170B2C0", VA = "0x170B2C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		public List<Vector3> normals
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0x170B2FC", Offset = "0x170B2FC", VA = "0x170B2FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		public List<int> triangles
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0x170B338", Offset = "0x170B338", VA = "0x170B338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		public Bounds bounds
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x170B374", Offset = "0x170B374", VA = "0x170B374")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x1700014A")]
		public int lightmapCount
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0x170B3EC", Offset = "0x170B3EC", VA = "0x170B3EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x170B1DC", Offset = "0x170B1DC", VA = "0x170B1DC")]
		public void SetProjectionDir(bool isOrtho, Vector3 direction, Vector3 position)
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x170B1F4", Offset = "0x170B1F4", VA = "0x170B1F4")]
		public bool isFrontFaceTriangle(Vector3 v0, Vector3 v1, Vector3 v2)
		{
			return default(bool);
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x170B40C", Offset = "0x170B40C", VA = "0x170B40C")]
		public bool HasResult(int lightmapIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x170B4A4", Offset = "0x170B4A4", VA = "0x170B4A4")]
		public List<Vector3> GetVertices(int lightmapIndex)
		{
			return null;
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x170B4EC", Offset = "0x170B4EC", VA = "0x170B4EC")]
		public List<Vector3> GetNormals(int lightmapIndex)
		{
			return null;
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x170B534", Offset = "0x170B534", VA = "0x170B534")]
		public List<Vector2> GetLightmapUVs(int lightmapIndex)
		{
			return null;
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x170B57C", Offset = "0x170B57C", VA = "0x170B57C")]
		public List<int> GetTriangles(int lightmapIndex)
		{
			return null;
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x170B5C4", Offset = "0x170B5C4", VA = "0x170B5C4")]
		public Bounds GetBounds(int lightmapIndex)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x170B648", Offset = "0x170B648", VA = "0x170B648")]
		public void FillMesh(Mesh mesh, int lightmapIndex)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x170B74C", Offset = "0x170B74C", VA = "0x170B74C")]
		public void AsyncStart(MeshTreeBase tree)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x170B834", Offset = "0x170B834", VA = "0x170B834")]
		private void Search()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x170BA04", Offset = "0x170BA04", VA = "0x170BA04")]
		public void Wait()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x170BA1C", Offset = "0x170BA1C", VA = "0x170BA1C")]
		public bool IsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x170BA38", Offset = "0x170BA38", VA = "0x170BA38")]
		private void PushResultBuffer(SearchResult result)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x170BC68", Offset = "0x170BC68", VA = "0x170BC68")]
		private SearchResult PopResultBuffer(int vertexCount)
		{
			return null;
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x170BD70", Offset = "0x170BD70", VA = "0x170BD70")]
		protected void Initialize(int lightmapCountPlusOne)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x170BEF8", Offset = "0x170BEF8", VA = "0x170BEF8")]
		protected void InitClipMetrics()
		{
		}

		[Token(Token = "0x60009AE")]
		protected void InitScissorBuffer<Vertex, VertexFunc>(int maxTriangleNum) where VertexFunc : IScissoredVertexFunctions<Vertex>
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x170BC2C", Offset = "0x170BC2C", VA = "0x170BC2C")]
		private int GetResultBufferIndex(int count)
		{
			return default(int);
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x170C094", Offset = "0x170C094", VA = "0x170C094")]
		private int GetResultBufferCapacity(int count)
		{
			return default(int);
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x170C0D8", Offset = "0x170C0D8", VA = "0x170C0D8")]
		protected void InitResultBuffer(int vertexCount, int indexCount, bool bNormal, bool bUV, int lightmapIndexPlusOne)
		{
		}

		[Token(Token = "0x60009B2")]
		protected int ScissorTriangle<Vertex, VertexFunc>(ref Vertex v0, ref Vertex v1, ref Vertex v2, ref ScissoredTriangleCount triCount) where VertexFunc : IScissoredVertexFunctions<Vertex>
		{
			return default(int);
		}

		[Token(Token = "0x60009B3")]
		protected void AddScissoredTrianglesToResults<Vertex, VertexFunc>(int scissoredTriangleCount, int lightmapIndexPlusOne) where VertexFunc : IScissoredVertexFunctions<Vertex>
		{
		}

		[Token(Token = "0x60009B4")]
		protected void CalculateScissoredVertexBounds<Vertex, VertexFunc>(int scissoredTriangleCount, int lightmapIndexPlusOne, bool resetBounds) where VertexFunc : IScissoredVertexFunctions<Vertex>
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x170C4C4", Offset = "0x170C4C4", VA = "0x170C4C4")]
		public MeshTreeSearch()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class OctMeshTreeSearch : MeshTreeSearch
	{
		[Token(Token = "0x200024F")]
		private struct ClipFlags
		{
			[Token(Token = "0x4000BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte all;

			[Token(Token = "0x4000BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public byte xFlags;

			[Token(Token = "0x4000BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public byte yFlags;

			[Token(Token = "0x4000BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public byte zFlags;
		}

		[Token(Token = "0x4000611")]
		internal const byte FLAGS_LEFT = 85;

		[Token(Token = "0x4000612")]
		internal const byte FLAGS_RIGHT = 170;

		[Token(Token = "0x4000613")]
		internal const byte FLAGS_BOTTOM = 51;

		[Token(Token = "0x4000614")]
		internal const byte FLAGS_TOP = 204;

		[Token(Token = "0x4000615")]
		internal const byte FLAGS_FRONT = 15;

		[Token(Token = "0x4000616")]
		internal const byte FLAGS_BACK = 240;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ClipFlags[] m_clipFlags;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ClipFlags[] m_clipFlags2;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private HashSet<int> m_triangleSet;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<int>[] m_triangleList;

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x1717E44", Offset = "0x1717E44", VA = "0x1717E44")]
		internal new void Initialize(int lightmapCountPlusOne)
		{
		}

		[Token(Token = "0x60009B8")]
		private void ScissorTrianglesInList<Vertex, VertexFunc, VertexArray, VertexArrayFunc>(VertexArray vertices, int[] indices, List<int> triangleList, ref ScissoredTriangleCount scissoredTriangleCount) where VertexFunc : IScissoredVertexFunctions<Vertex> where VertexArrayFunc : IVertexArrayFunction<Vertex, VertexArray>
		{
		}

		[Token(Token = "0x60009B9")]
		private void AddTriangleList<Vertex, VertexArray, VertexArrayFunc>(SearchResult result, VertexArray array, int[] indices, List<int> triangleList) where VertexArrayFunc : IVertexArrayFunction<Vertex, VertexArray>
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x1718684", Offset = "0x1718684", VA = "0x1718684")]
		internal void Finalize(Vector3[] vertices, int[] indices, Vector3[] normals, Vector2[] uvs)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x171A664", Offset = "0x171A664", VA = "0x171A664")]
		private void Finalize(Vector3[] vertices, int[] indices, Vector3[] normals, Vector2[] uvs, int lightmapIndexPlusOne)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x171AD18", Offset = "0x171AD18", VA = "0x171AD18")]
		private static uint UpdateClipFlags(uint flags, ClipFlags clipFlags, float distance, float xExtent, float yExtent, float zExtent)
		{
			return default(uint);
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x17191C0", Offset = "0x17191C0", VA = "0x17191C0")]
		internal uint IsInView(Vector3 center, Vector3 extents, out bool isPartial)
		{
			return default(uint);
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x1718E88", Offset = "0x1718E88", VA = "0x1718E88")]
		internal void AddTriangles(int[] trianglesToAdd, Vector3 center, Vector3 extents, int lightmapCountPlusOne)
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x1717C50", Offset = "0x1717C50", VA = "0x1717C50")]
		public OctMeshTreeSearch()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public abstract class PlaneShadowReceiverBase : ReceiverBase
	{
		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] m_vertices;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3[] m_normals;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_selfTransform;

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1479E38", Offset = "0x1479E38", VA = "0x1479E38", Slot = "5")]
		protected override void OnAwake()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x1479F98", Offset = "0x1479F98", VA = "0x1479F98")]
		protected void UpdatePlane(Plane plane)
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x147A174", Offset = "0x147A174", VA = "0x147A174")]
		protected PlaneShadowReceiverBase()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public abstract class ProjectorBase : MonoBehaviour, IProjector
	{
		[Token(Token = "0x1700014B")]
		public abstract bool isOrthographic
		{
			[Token(Token = "0x60009C3")]
			get;
		}

		[Token(Token = "0x1700014C")]
		public abstract Vector3 position
		{
			[Token(Token = "0x60009C4")]
			get;
		}

		[Token(Token = "0x1700014D")]
		public abstract Vector3 direction
		{
			[Token(Token = "0x60009C5")]
			get;
		}

		[Token(Token = "0x1700014E")]
		public abstract Quaternion rotation
		{
			[Token(Token = "0x60009C6")]
			get;
		}

		[Token(Token = "0x1700014F")]
		public abstract Matrix4x4 uvProjectionMatrix
		{
			[Token(Token = "0x60009C7")]
			get;
		}

		[Token(Token = "0x17000150")]
		public abstract float nearClipPlane
		{
			[Token(Token = "0x60009C8")]
			get;
		}

		[Token(Token = "0x17000151")]
		public abstract float farClipPlane
		{
			[Token(Token = "0x60009C9")]
			get;
		}

		[Token(Token = "0x14000015")]
		public event Action updateTransform
		{
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x147AED8", Offset = "0x147AED8", VA = "0x147AED8", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBDAC", Offset = "0xABBDAC")]
			add
			{
			}
			[Token(Token = "0x60009CE")]
			[Address(RVA = "0x147AF78", Offset = "0x147AF78", VA = "0x147AF78", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBDBC", Offset = "0xABBDBC")]
			remove
			{
			}
		}

		[Token(Token = "0x60009CA")]
		public abstract void GetPlaneIntersection(Vector3[] vertices, Plane plane);

		[Token(Token = "0x60009CB")]
		public abstract void GetClipPlanes(ref ClipPlanes clipPlanes, Transform clipPlaneTransform);

		[Token(Token = "0x60009CC")]
		public abstract void GetClipPlanes(ref ClipPlanes clipPlanes, Transform clipPlaneTransform, ITransformPredictor predictor);

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x147B018", Offset = "0x147B018", VA = "0x147B018", Slot = "16")]
		public void InvokeUpdateTransform()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x147B02C", Offset = "0x147B02C", VA = "0x147B02C", Slot = "27")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x147B084", Offset = "0x147B084", VA = "0x147B084")]
		public static void DrawFrustum(IProjector projector, Color color)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x147BBDC", Offset = "0x147BBDC", VA = "0x147BBDC")]
		protected ProjectorBase()
		{
		}
	}
	[Token(Token = "0x200010F")]
	[ExecuteAlways]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4C10", Offset = "0xAB4C10")]
	public abstract class ReceiverBase : MonoBehaviour
	{
		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Component m_projectorComponent;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_manualUpdate;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IProjector m_projector;

		[Token(Token = "0x4000622")]
		private const int BUFFER_COUNT = 2;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_nCurrentBuffer;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh[] m_meshes;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Renderer m_renderer;

		[Token(Token = "0x17000152")]
		public Projector unityProjector
		{
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0x2A6522C", Offset = "0x2A6522C", VA = "0x2A6522C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0x2A65290", Offset = "0x2A65290", VA = "0x2A65290")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public ProjectorBase customProjector
		{
			[Token(Token = "0x60009D5")]
			[Address(RVA = "0x2A65408", Offset = "0x2A65408", VA = "0x2A65408")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0x2A65488", Offset = "0x2A65488", VA = "0x2A65488")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public IProjector projectorInterface
		{
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0x2A65538", Offset = "0x2A65538", VA = "0x2A65538")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0x2A65540", Offset = "0x2A65540", VA = "0x2A65540")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public bool manualUpdate
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x2A65634", Offset = "0x2A65634", VA = "0x2A65634")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x2A6563C", Offset = "0x2A6563C", VA = "0x2A6563C")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		protected IProjector projector
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x2A6579C", Offset = "0x2A6579C", VA = "0x2A6579C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		protected Mesh[] meshes
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x2A657A4", Offset = "0x2A657A4", VA = "0x2A657A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		protected Mesh currentMesh
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0x2A657AC", Offset = "0x2A657AC", VA = "0x2A657AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x2A65648", Offset = "0x2A65648", VA = "0x2A65648")]
		public void UpdateReceiver()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x2A657EC", Offset = "0x2A657EC", VA = "0x2A657EC")]
		protected void SwapMesh()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x2A651D4", Offset = "0x2A651D4", VA = "0x2A651D4")]
		protected void Hide(bool bHide)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x2A65840", Offset = "0x2A65840", VA = "0x2A65840", Slot = "4")]
		protected virtual bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x2A65848", Offset = "0x2A65848", VA = "0x2A65848", Slot = "5")]
		protected virtual void OnAwake()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x2A6584C", Offset = "0x2A6584C", VA = "0x2A6584C", Slot = "6")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x2A65850", Offset = "0x2A65850", VA = "0x2A65850", Slot = "7")]
		protected virtual void OnTerminate()
		{
		}

		[Token(Token = "0x60009E5")]
		protected abstract void OnUpdate();

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x2A65854", Offset = "0x2A65854", VA = "0x2A65854")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x2A65D48", Offset = "0x2A65D48", VA = "0x2A65D48")]
		private void Start()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x2A65D54", Offset = "0x2A65D54", VA = "0x2A65D54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x2A65E1C", Offset = "0x2A65E1C", VA = "0x2A65E1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x2A65F64", Offset = "0x2A65F64", VA = "0x2A65F64")]
		protected ReceiverBase()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class TerrainMeshTreeSearch : MeshTreeSearch
	{
		[Token(Token = "0x2000250")]
		private struct Patch
		{
			[Token(Token = "0x4000BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int m_posX;

			[Token(Token = "0x4000BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int m_posZ;

			[Token(Token = "0x4000BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int m_width;

			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x1016BD8", Offset = "0x1016BD8", VA = "0x1016BD8")]
			public Patch(int posX, int posZ, int width)
			{
			}
		}

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private uint[] m_clipFlags;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_minX;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int m_maxX;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_minZ;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int m_maxZ;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<Patch> m_patchList;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<Patch> m_patchListToScissor;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int m_indexCount;

		[Token(Token = "0x400062F")]
		private const uint CLIP_FLAGS_NXNZ = 5431u;

		[Token(Token = "0x4000630")]
		private const uint CLIP_FLAGS_NXPZ = 17869u;

		[Token(Token = "0x4000631")]
		private const uint CLIP_FLAGS_PXNZ = 10811u;

		[Token(Token = "0x4000632")]
		private const uint CLIP_FLAGS_PXPZ = 35534u;

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x16FFF98", Offset = "0x16FFF98", VA = "0x16FFF98")]
		internal void Initialize()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x170066C", Offset = "0x170066C", VA = "0x170066C")]
		internal void Finalize(float[,] heightMap, float scaleX, float scaleZ, int heightmapWidth, bool[,] holeMap)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x17035B0", Offset = "0x17035B0", VA = "0x17035B0")]
		private Vector3 CalculateNormal(float[,] heightMap, float invScaleX, float invScaleZ, int z, int x)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x170244C", Offset = "0x170244C", VA = "0x170244C")]
		internal uint IsInView(Vector3 center, Vector3 extents, out bool isPartial)
		{
			return default(uint);
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x1703748", Offset = "0x1703748", VA = "0x1703748")]
		private static uint UpdateClipFlags(uint flags, uint clipFlags, float distance, float xExtent, float yExtent, float zExtent)
		{
			return default(uint);
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x17028B4", Offset = "0x17028B4", VA = "0x17028B4")]
		internal uint IsInView(Vector3 center, Vector3 extents)
		{
			return default(uint);
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x1702664", Offset = "0x1702664", VA = "0x1702664")]
		public void AddPatch(int posX, int posZ, int width, float minY, float maxY, bool isPartial)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x16FFDA4", Offset = "0x16FFDA4", VA = "0x16FFDA4")]
		public TerrainMeshTreeSearch()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class BinaryMeshTree : MeshTree
	{
		[Serializable]
		[Token(Token = "0x2000251")]
		private struct TreeNode
		{
			[Token(Token = "0x4000BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Bounds m_bounds;

			[Token(Token = "0x4000BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int m_childIndex;

			[Token(Token = "0x4000BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] m_triangles;
		}

		[Serializable]
		[Token(Token = "0x2000252")]
		private struct TreeNodeVer2
		{
			[Token(Token = "0x4000C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Bounds m_bounds;

			[Token(Token = "0x4000C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int m_childIndex;

			[Token(Token = "0x4000C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int m_triangleListIndex;
		}

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAB8388", Offset = "0xAB8388")]
		private TreeNode[] m_treeNodes;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		private TreeNodeVer2[] m_treeNodes2;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private TriangleList[] m_triangleListForEachNode;

		[Token(Token = "0x4000636")]
		private const int LEAFNODE_TRIANGLE_COUNT = 2;

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x15057CC", Offset = "0x15057CC", VA = "0x15057CC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x15057D0", Offset = "0x15057D0", VA = "0x15057D0")]
		private void UpdateTreeNodes()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x1505A90", Offset = "0x1505A90", VA = "0x1505A90", Slot = "7")]
		public override bool IsBuildFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x1505AB0", Offset = "0x1505AB0", VA = "0x1505AB0", Slot = "9")]
		public override Type GetSearchType()
		{
			return null;
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x1505B28", Offset = "0x1505B28", VA = "0x1505B28", Slot = "10")]
		public override MeshTreeSearch CreateSearch()
		{
			return null;
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x1505BE0", Offset = "0x1505BE0", VA = "0x1505BE0", Slot = "11")]
		public override void Search(MeshTreeSearch search)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x1506194", Offset = "0x1506194", VA = "0x1506194", Slot = "12")]
		public override void Raycast(MeshTreeRaycast raycast)
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x15066A4", Offset = "0x15066A4", VA = "0x15066A4", Slot = "5")]
		public override void BuildFromPrebuiltData()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x15066A8", Offset = "0x15066A8", VA = "0x15066A8")]
		private void AddAllTrianglesInChildren(BinaryMeshTreeSearch search, ref TreeNodeVer2 node, bool bScissor)
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x1505FE4", Offset = "0x1505FE4", VA = "0x1505FE4")]
		private void Search(BinaryMeshTreeSearch search, ref TreeNodeVer2 node)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x1506228", Offset = "0x1506228", VA = "0x1506228")]
		private bool Raycast(MeshTreeRaycast raycast, ref TreeNodeVer2 node, ref MeshTreeRaycast.TemporaryParam param)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x1506C84", Offset = "0x1506C84", VA = "0x1506C84", Slot = "15")]
		protected override void Clear()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x1506CB4", Offset = "0x1506CB4", VA = "0x1506CB4", Slot = "13")]
		protected override void PrepareForBuild()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x1506CE4", Offset = "0x1506CE4", VA = "0x1506CE4", Slot = "14")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x15076F0", Offset = "0x15076F0", VA = "0x15076F0")]
		private static void DivideTrianglesByXAxis(List<int> triangleList, List<int> list1, List<int> list2, Vector3 center, Bounds[] triangleBounds)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x1507848", Offset = "0x1507848", VA = "0x1507848")]
		private static void DivideTrianglesByYAxis(List<int> triangleList, List<int> list1, List<int> list2, Vector3 center, Bounds[] triangleBounds)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x15079A0", Offset = "0x15079A0", VA = "0x15079A0")]
		private static void DivideTrianglesByZAxis(List<int> triangleList, List<int> list1, List<int> list2, Vector3 center, Bounds[] triangleBounds)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1507AF8", Offset = "0x1507AF8", VA = "0x1507AF8")]
		private void AddTriangleList(ref List<TriangleList> triangleListForEachNode, List<int> triangleList)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x1507130", Offset = "0x1507130", VA = "0x1507130")]
		private void BuildMeshTree(List<TreeNodeVer2> nodeList, ref TreeNodeVer2 parentNode, ref List<TriangleList> triangleListForEachNode, List<int> triangleList, Bounds[] triangleBounds)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1507E6C", Offset = "0x1507E6C", VA = "0x1507E6C")]
		private void CalculateBounds(ref TreeNodeVer2 node, List<int> triangleList, Bounds[] triangleBounds)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x150815C", Offset = "0x150815C", VA = "0x150815C")]
		public BinaryMeshTree()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class OctMeshTree : MeshTree
	{
		[Serializable]
		[Token(Token = "0x2000253")]
		private struct TreeNode
		{
			[Token(Token = "0x4000C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int m_childIndex;

			[Token(Token = "0x4000C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int[] m_triangles;

			[Token(Token = "0x1700025E")]
			public int childIndex
			{
				[Token(Token = "0x6000F57")]
				[Address(RVA = "0x1008928", Offset = "0x1008928", VA = "0x1008928")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700025F")]
			public uint collapseFlags
			{
				[Token(Token = "0x6000F58")]
				[Address(RVA = "0x1008934", Offset = "0x1008934", VA = "0x1008934")]
				get
				{
					return default(uint);
				}
			}

			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x100891C", Offset = "0x100891C", VA = "0x100891C")]
			public void SetChildIndex(int index, uint collapseFlags)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000254")]
		private struct TreeNodeVer2
		{
			[Token(Token = "0x4000C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int m_childIndex;

			[Token(Token = "0x4000C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int m_triangleListIndex;

			[Token(Token = "0x17000260")]
			public int childIndex
			{
				[Token(Token = "0x6000F5A")]
				[Address(RVA = "0x100894C", Offset = "0x100894C", VA = "0x100894C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000261")]
			public uint collapseFlags
			{
				[Token(Token = "0x6000F5B")]
				[Address(RVA = "0x1008958", Offset = "0x1008958", VA = "0x1008958")]
				get
				{
					return default(uint);
				}
			}

			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x1008940", Offset = "0x1008940", VA = "0x1008940")]
			public void SetChildIndex(int index, uint collapseFlags)
			{
			}
		}

		[Token(Token = "0x2000255")]
		private struct TriangleBounds
		{
			[Token(Token = "0x4000C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 m_min;

			[Token(Token = "0x4000C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 m_max;
		}

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_minNodeSize;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xAB8440", Offset = "0xAB8440")]
		private TreeNode[] m_treeNodes;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private TreeNodeVer2[] m_treeNodes2;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		private TriangleList[] m_triangleListForEachNode;

		[Token(Token = "0x400063B")]
		private const int LEAFNODE_TRIANGLE_COUNT = 2;

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x17178FC", Offset = "0x17178FC", VA = "0x17178FC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1717900", Offset = "0x1717900", VA = "0x1717900")]
		private void UpdateTreeNodes()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1717B64", Offset = "0x1717B64", VA = "0x1717B64", Slot = "7")]
		public override bool IsBuildFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x1717B84", Offset = "0x1717B84", VA = "0x1717B84", Slot = "9")]
		public override Type GetSearchType()
		{
			return null;
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x1717BFC", Offset = "0x1717BFC", VA = "0x1717BFC", Slot = "10")]
		public override MeshTreeSearch CreateSearch()
		{
			return null;
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x1717CB4", Offset = "0x1717CB4", VA = "0x1717CB4", Slot = "11")]
		public override void Search(MeshTreeSearch search)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x171870C", Offset = "0x171870C", VA = "0x171870C", Slot = "12")]
		public override void Raycast(MeshTreeRaycast raycast)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1718D08", Offset = "0x1718D08", VA = "0x1718D08", Slot = "5")]
		public override void BuildFromPrebuiltData()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x1718D0C", Offset = "0x1718D0C", VA = "0x1718D0C")]
		private void AddAllTrianglesInChildren(OctMeshTreeSearch search, ref TreeNodeVer2 node, Vector3 center, Vector3 extents)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x1718404", Offset = "0x1718404", VA = "0x1718404")]
		private void Search(OctMeshTreeSearch search, ref TreeNodeVer2 node, Vector3 center, Vector3 extents)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1718828", Offset = "0x1718828", VA = "0x1718828")]
		private bool Raycast(MeshTreeRaycast raycast, ref TreeNodeVer2 node, Vector3 center, Vector3 extents, ref MeshTreeRaycast.TemporaryParam param, uint order)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1719400", Offset = "0x1719400", VA = "0x1719400", Slot = "15")]
		protected override void Clear()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1719430", Offset = "0x1719430", VA = "0x1719430", Slot = "13")]
		protected override void PrepareForBuild()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1719460", Offset = "0x1719460", VA = "0x1719460", Slot = "14")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x171A118", Offset = "0x171A118", VA = "0x171A118")]
		private static void MergeSortedTriangleList(List<int> list1, List<int> list2)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x171A2E0", Offset = "0x171A2E0", VA = "0x171A2E0")]
		private void AddTriangleList(ref List<TriangleList> triangleListForEachNode, List<int> triangleList)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x17198B0", Offset = "0x17198B0", VA = "0x17198B0")]
		private void BuildMeshTree(List<TreeNodeVer2> nodeList, ref TreeNodeVer2 parentNode, ref List<TriangleList> triangleListForEachNode, Vector3 center, Vector3 extents, List<int> triangleList, TriangleBounds[] triangleBounds)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x171A654", Offset = "0x171A654", VA = "0x171A654")]
		public OctMeshTree()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class TerrainMeshTree : MeshTreeBase
	{
		[Serializable]
		[Token(Token = "0x2000256")]
		private struct TreeNode
		{
			[Token(Token = "0x4000C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m_yCenter;

			[Token(Token = "0x4000C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float m_yExtent;

			[Token(Token = "0x4000C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int m_childIndex;
		}

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private TerrainData m_terrainData;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private float[] m_yCenters;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private float[] m_yExtents;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected int[] m_childNodes;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[,] m_heightMap;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool[,] m_holeMap;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_heightMapWidth;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_scale;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		private TreeNode[] m_treeNodes;

		[Token(Token = "0x4000645")]
		private const int CHILD_INDEX_OF_LEAF_NODE = -1;

		[Token(Token = "0x4000646")]
		private const int CHILD_INDEX_OF_HOLE_NODE = -2;

		[Token(Token = "0x17000159")]
		public TerrainData terrainData
		{
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0x16FFA20", Offset = "0x16FFA20", VA = "0x16FFA20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x16FFA28", Offset = "0x16FFA28", VA = "0x16FFA28")]
			set
			{
			}
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x16FFADC", Offset = "0x16FFADC", VA = "0x16FFADC", Slot = "7")]
		public override bool IsBuildFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x16FFB04", Offset = "0x16FFB04", VA = "0x16FFB04", Slot = "4")]
		public override bool IsPrebuilt()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x16FFB3C", Offset = "0x16FFB3C", VA = "0x16FFB3C", Slot = "6")]
		public override bool IsReadyToBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x16FFBA8", Offset = "0x16FFBA8", VA = "0x16FFBA8", Slot = "15")]
		protected virtual void Clear()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x16FFC08", Offset = "0x16FFC08", VA = "0x16FFC08", Slot = "13")]
		protected override void PrepareForBuild()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x16FFCD8", Offset = "0x16FFCD8", VA = "0x16FFCD8", Slot = "9")]
		public override Type GetSearchType()
		{
			return null;
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x16FFD50", Offset = "0x16FFD50", VA = "0x16FFD50", Slot = "10")]
		public override MeshTreeSearch CreateSearch()
		{
			return null;
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x16FFE08", Offset = "0x16FFE08", VA = "0x16FFE08", Slot = "11")]
		public override void Search(MeshTreeSearch search)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1701CB8", Offset = "0x1701CB8", VA = "0x1701CB8", Slot = "12")]
		public override void Raycast(MeshTreeRaycast raycast)
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x1702134", Offset = "0x1702134", VA = "0x1702134", Slot = "5")]
		public override void BuildFromPrebuiltData()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x17002F8", Offset = "0x17002F8", VA = "0x17002F8")]
		private void Search(TerrainMeshTreeSearch search, ref TreeNode node, Vector3 extents, int posX, int posZ, int width)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1701DA0", Offset = "0x1701DA0", VA = "0x1701DA0")]
		private bool Raycast(MeshTreeRaycast raycast, ref TreeNode node, Vector3 extents, int posX, int posZ, int width, ref MeshTreeRaycast.TemporaryParam param, uint order)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1702AAC", Offset = "0x1702AAC", VA = "0x1702AAC", Slot = "14")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x1702CA4", Offset = "0x1702CA4", VA = "0x1702CA4")]
		private void BuildMeshTree(List<TreeNode> nodeList, ref TreeNode parentNode, int posX, int posZ, int width)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x1702FE8", Offset = "0x1702FE8", VA = "0x1702FE8")]
		private bool UpdateNodeBounds(ref TreeNode node, int posX, int posZ, int width)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x170325C", Offset = "0x170325C", VA = "0x170325C", Slot = "8")]
		public override string CheckError(GameObject rootObject)
		{
			return null;
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x17035A8", Offset = "0x17035A8", VA = "0x17035A8")]
		public TerrainMeshTree()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public class CustomProjector : ProjectorBase
	{
		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_isOrthographic;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_nearClipPlane;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_farClipPlane;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_fieldOfView;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_orthographicSize;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_aspectRatio;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x1700015A")]
		public override bool isOrthographic
		{
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x10196E4", Offset = "0x10196E4", VA = "0x10196E4", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015B")]
		public override float nearClipPlane
		{
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x101970C", Offset = "0x101970C", VA = "0x101970C", Slot = "22")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015C")]
		public override float farClipPlane
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x101971C", Offset = "0x101971C", VA = "0x101971C", Slot = "23")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015D")]
		public float fieldOfView
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x101972C", Offset = "0x101972C", VA = "0x101972C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x1019734", Offset = "0x1019734", VA = "0x1019734")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public float orthographicSize
		{
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x101973C", Offset = "0x101973C", VA = "0x101973C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x1019744", Offset = "0x1019744", VA = "0x1019744")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public float aspectRatio
		{
			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x101974C", Offset = "0x101974C", VA = "0x101974C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x1019754", Offset = "0x1019754", VA = "0x1019754")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public override Vector3 position
		{
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x101975C", Offset = "0x101975C", VA = "0x101975C", Slot = "18")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000161")]
		public override Vector3 direction
		{
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x1019778", Offset = "0x1019778", VA = "0x1019778", Slot = "19")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000162")]
		public override Quaternion rotation
		{
			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0x1019794", Offset = "0x1019794", VA = "0x1019794", Slot = "20")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000163")]
		public override Matrix4x4 uvProjectionMatrix
		{
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x10197B0", Offset = "0x10197B0", VA = "0x10197B0", Slot = "21")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x10196EC", Offset = "0x10196EC", VA = "0x10196EC")]
		public void SetOrthographic(bool bOrthographic)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1019714", Offset = "0x1019714", VA = "0x1019714")]
		public void SetNearClipPlane(float value)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x1019724", Offset = "0x1019724", VA = "0x1019724")]
		public void SetFarClipPlane(float value)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x10199C4", Offset = "0x10199C4", VA = "0x10199C4", Slot = "24")]
		public override void GetPlaneIntersection(Vector3[] vertices, Plane plane)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x1019FFC", Offset = "0x1019FFC", VA = "0x1019FFC", Slot = "25")]
		public override void GetClipPlanes(ref ClipPlanes clipPlanes, Transform clipPlaneTransform)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x101A794", Offset = "0x101A794", VA = "0x101A794", Slot = "26")]
		public override void GetClipPlanes(ref ClipPlanes clipPlanes, Transform clipPlaneTransform, ITransformPredictor predictor)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x101B54C", Offset = "0x101B54C", VA = "0x101B54C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x101B57C", Offset = "0x101B57C", VA = "0x101B57C")]
		public CustomProjector()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public class LightProjector : ProjectorBase
	{
		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light m_light;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Bounds m_targetBounds;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform m_target;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_nearClipPlane;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_farClipPlane;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_lightTransform;

		[Token(Token = "0x17000164")]
		public override bool isOrthographic
		{
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0x162DEE4", Offset = "0x162DEE4", VA = "0x162DEE4", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000165")]
		public override Vector3 position
		{
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0x162DF10", Offset = "0x162DF10", VA = "0x162DF10", Slot = "18")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000166")]
		public override Vector3 direction
		{
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x162DF7C", Offset = "0x162DF7C", VA = "0x162DF7C", Slot = "19")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000167")]
		public override Quaternion rotation
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x162E044", Offset = "0x162E044", VA = "0x162E044", Slot = "20")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000168")]
		public override Matrix4x4 uvProjectionMatrix
		{
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0x162E24C", Offset = "0x162E24C", VA = "0x162E24C", Slot = "21")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000169")]
		public override float nearClipPlane
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0x1631348", Offset = "0x1631348", VA = "0x1631348", Slot = "22")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016A")]
		public override float farClipPlane
		{
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0x1631414", Offset = "0x1631414", VA = "0x1631414", Slot = "23")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016B")]
		private Transform lightTransform
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x16315A4", Offset = "0x16315A4", VA = "0x16315A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x162EBAC", Offset = "0x162EBAC", VA = "0x162EBAC", Slot = "24")]
		public override void GetPlaneIntersection(Vector3[] vertices, Plane plane)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x162F5C4", Offset = "0x162F5C4", VA = "0x162F5C4", Slot = "25")]
		public override void GetClipPlanes(ref ClipPlanes clipPlanes, Transform clipPlaneTransform)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x1630158", Offset = "0x1630158", VA = "0x1630158", Slot = "26")]
		public override void GetClipPlanes(ref ClipPlanes clipPlanes, Transform clipPlaneTransform, ITransformPredictor predictor)
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x16314E0", Offset = "0x16314E0", VA = "0x16314E0", Slot = "27")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x1631568", Offset = "0x1631568", VA = "0x1631568")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x16315AC", Offset = "0x16315AC", VA = "0x16315AC")]
		public LightProjector()
		{
		}
	}
	[Token(Token = "0x2000116")]
	public struct ClipPlanes
	{
		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Plane[] clipPlanes;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] maxDistance;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool twoSideClipping;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int scissorPlaneCount;

		[Token(Token = "0x1700016C")]
		public int clipPlaneCount
		{
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0x1018BEC", Offset = "0x1018BEC", VA = "0x1018BEC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x1018C08", Offset = "0x1018C08", VA = "0x1018C08")]
		public void SetClipPlaneNum(int clipPlaneNum, int scissorePlaneNum, bool twoSideClip)
		{
		}
	}
	[Token(Token = "0x2000117")]
	public interface IProjector
	{
		[Token(Token = "0x1700016D")]
		Vector3 position
		{
			[Token(Token = "0x6000A52")]
			get;
		}

		[Token(Token = "0x1700016E")]
		Vector3 direction
		{
			[Token(Token = "0x6000A53")]
			get;
		}

		[Token(Token = "0x1700016F")]
		Quaternion rotation
		{
			[Token(Token = "0x6000A54")]
			get;
		}

		[Token(Token = "0x17000170")]
		Matrix4x4 uvProjectionMatrix
		{
			[Token(Token = "0x6000A55")]
			get;
		}

		[Token(Token = "0x17000171")]
		bool isOrthographic
		{
			[Token(Token = "0x6000A56")]
			get;
		}

		[Token(Token = "0x17000172")]
		float nearClipPlane
		{
			[Token(Token = "0x6000A57")]
			get;
		}

		[Token(Token = "0x17000173")]
		float farClipPlane
		{
			[Token(Token = "0x6000A58")]
			get;
		}

		[Token(Token = "0x14000016")]
		event Action updateTransform;

		[Token(Token = "0x6000A59")]
		void GetPlaneIntersection(Vector3[] vertices, Plane plane);

		[Token(Token = "0x6000A5A")]
		void GetClipPlanes(ref ClipPlanes clipPlanes, Transform clipPlaneTransform);

		[Token(Token = "0x6000A5B")]
		void GetClipPlanes(ref ClipPlanes clipPlanes, Transform clipPlaneTransform, ITransformPredictor predictor);

		[Token(Token = "0x6000A5E")]
		void InvokeUpdateTransform();
	}
	[Token(Token = "0x2000118")]
	public class UnityProjector : IProjector
	{
		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Projector m_projector;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_projectorTransform;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_isScaleEnabled;

		[Token(Token = "0x17000174")]
		public Projector projector
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x1707D24", Offset = "0x1707D24", VA = "0x1707D24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0x1707D2C", Offset = "0x1707D2C", VA = "0x1707D2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public Vector3 position
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0x1707D74", Offset = "0x1707D74", VA = "0x1707D74", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000176")]
		public Vector3 direction
		{
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0x1707D90", Offset = "0x1707D90", VA = "0x1707D90", Slot = "5")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000177")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0x1707DAC", Offset = "0x1707DAC", VA = "0x1707DAC", Slot = "6")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000178")]
		public Matrix4x4 uvProjectionMatrix
		{
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0x1707DC8", Offset = "0x1707DC8", VA = "0x1707DC8", Slot = "7")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000179")]
		public bool isOrthographic
		{
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0x1708178", Offset = "0x1708178", VA = "0x1708178", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017A")]
		public float nearClipPlane
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x1708194", Offset = "0x1708194", VA = "0x1708194", Slot = "9")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017B")]
		public float farClipPlane
		{
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0x17081B0", Offset = "0x17081B0", VA = "0x17081B0", Slot = "10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000017")]
		public event Action updateTransform
		{
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0x1707AE4", Offset = "0x1707AE4", VA = "0x1707AE4", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBDEC", Offset = "0xABBDEC")]
			add
			{
			}
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0x1707B84", Offset = "0x1707B84", VA = "0x1707B84", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBDFC", Offset = "0xABBDFC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x1707C24", Offset = "0x1707C24", VA = "0x1707C24", Slot = "16")]
		public void InvokeUpdateTransform()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x1707C38", Offset = "0x1707C38", VA = "0x1707C38")]
		public UnityProjector(Projector unityProjector)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x17081CC", Offset = "0x17081CC", VA = "0x17081CC", Slot = "17")]
		public virtual void GetPlaneIntersection(Vector3[] vertices, Plane plane)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x1708A30", Offset = "0x1708A30", VA = "0x1708A30", Slot = "18")]
		public virtual void GetClipPlanes(ref ClipPlanes clipPlanes, Transform clipPlaneTransform)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x17093F0", Offset = "0x17093F0", VA = "0x17093F0", Slot = "19")]
		public virtual void GetClipPlanes(ref ClipPlanes clipPlanes, Transform clipPlaneTransform, ITransformPredictor predictor)
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class InfinitePlaneShadowReceiver : PlaneShadowReceiverBase
	{
		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform m_target;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 m_normal;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float m_height;

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x102D2F4", Offset = "0x102D2F4", VA = "0x102D2F4", Slot = "8")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x102D478", Offset = "0x102D478", VA = "0x102D478")]
		public InfinitePlaneShadowReceiver()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class MeshShadowReceiver : ReceiverBase
	{
		[Token(Token = "0x2000257")]
		private enum MaterialPropertyType
		{
			[Token(Token = "0x4000C0D")]
			Texture,
			[Token(Token = "0x4000C0E")]
			TextureScaleOffset,
			[Token(Token = "0x4000C0F")]
			Color,
			[Token(Token = "0x4000C10")]
			Float,
			[Token(Token = "0x4000C11")]
			Vector,
			[Token(Token = "0x4000C12")]
			Matrix
		}

		[Serializable]
		[Token(Token = "0x2000258")]
		private struct MaterialPropertyInfo
		{
			[Token(Token = "0x4000C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MaterialPropertyType Type;

			[Token(Token = "0x4000C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Name;

			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int NameID;

			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x1006F1C", Offset = "0x1006F1C", VA = "0x1006F1C")]
			public MaterialPropertyInfo(MaterialPropertyType type, string name)
			{
			}

			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x1006F50", Offset = "0x1006F50", VA = "0x1006F50")]
			public void InitializeNameID()
			{
			}

			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x1006FBC", Offset = "0x1006FBC", VA = "0x1006FBC")]
			public void Copy(MaterialPropertyBlock dst, Material src)
			{
			}
		}

		[Token(Token = "0x2000259")]
		private enum MeshState
		{
			[Token(Token = "0x4000C17")]
			Uncreated,
			[Token(Token = "0x4000C18")]
			Creating,
			[Token(Token = "0x4000C19")]
			Created
		}

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_addToProjectorManagerWhenAwake;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MeshTreeBase m_meshTree;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_meshTransform;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool m_hasNormals;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		private bool m_dontUseLightmap;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[SerializeField]
		private bool m_cullBackFace;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[SerializeField]
		private bool m_scissor;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_scissorMargin;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		private Material m_projectorMaterialForLightmappedMesh;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		private MaterialPropertyInfo[] m_staticMaterialPropertiesToCopyFromProjector;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		private MaterialPropertyInfo[] m_dynamicMaterialPropertiesToCopyFromProjector;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[HideInInspector]
		private bool m_enablePrediction;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[HideInInspector]
		private Component m_predictor;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[HideInInspector]
		private bool m_updateOnlyWhenProjectorMoved;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[HideInInspector]
		private float m_margin;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_multiThreading;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MeshTreeSearch m_search;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform m_selfTransform;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 m_projectorPositionWhenMeshCreated;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion m_projectorRotationWhenMeshCreated;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Plane[] m_prevClipPlanes;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float[] m_prevClipDistance;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private MeshState m_meshState;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GameObject m_subMeshRendererFolder;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Component m_singleLightmapRenderer;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Type[] subMeshRendererComponents;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private MaterialPropertyBlock m_tempPropertyBlock;

		[Token(Token = "0x1700017C")]
		public bool addToProjectorManagerWhenAwake
		{
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0x1638B38", Offset = "0x1638B38", VA = "0x1638B38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0x1638B40", Offset = "0x1638B40", VA = "0x1638B40")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public MeshTreeBase meshTree
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x1638B4C", Offset = "0x1638B4C", VA = "0x1638B4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A74")]
			[Address(RVA = "0x1638B54", Offset = "0x1638B54", VA = "0x1638B54")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public Transform meshTransform
		{
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0x1639188", Offset = "0x1639188", VA = "0x1639188")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x1639190", Offset = "0x1639190", VA = "0x1639190")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public bool hasNormals
		{
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0x1639198", Offset = "0x1639198", VA = "0x1639198")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x16391A0", Offset = "0x16391A0", VA = "0x16391A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public bool dontUseLightmaps
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0x16391AC", Offset = "0x16391AC", VA = "0x16391AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0x16391B4", Offset = "0x16391B4", VA = "0x16391B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public bool cullBackFace
		{
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0x16391C0", Offset = "0x16391C0", VA = "0x16391C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x16391C8", Offset = "0x16391C8", VA = "0x16391C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public bool scissorEnabled
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x16391D4", Offset = "0x16391D4", VA = "0x16391D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x16391DC", Offset = "0x16391DC", VA = "0x16391DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public float scissorMargin
		{
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0x16391E8", Offset = "0x16391E8", VA = "0x16391E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x16391F0", Offset = "0x16391F0", VA = "0x16391F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public bool predictEnabled
		{
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0x16391F8", Offset = "0x16391F8", VA = "0x16391F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x1639268", Offset = "0x1639268", VA = "0x1639268")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public ITransformPredictor predictor
		{
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0x1639274", Offset = "0x1639274", VA = "0x1639274")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0x16392C0", Offset = "0x16392C0", VA = "0x16392C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public bool updateOnlyWhenProjectorMoved
		{
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0x16393E4", Offset = "0x16393E4", VA = "0x16393E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0x16393EC", Offset = "0x16393EC", VA = "0x16393EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public float margin
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0x16393F8", Offset = "0x16393F8", VA = "0x16393F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0x1639400", Offset = "0x1639400", VA = "0x1639400")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public bool multiThreadEnabled
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0x1639530", Offset = "0x1639530", VA = "0x1639530")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0x1639538", Offset = "0x1639538", VA = "0x1639538")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		private MaterialPropertyBlock temporaryMaterialPropertyBlock
		{
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x163AF18", Offset = "0x163AF18", VA = "0x163AF18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		private Material projectorMaterial
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x163B79C", Offset = "0x163B79C", VA = "0x163B79C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x1639408", Offset = "0x1639408", VA = "0x1639408", Slot = "4")]
		protected override bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x163959C", Offset = "0x163959C", VA = "0x163959C", Slot = "5")]
		protected override void OnAwake()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x1639B74", Offset = "0x1639B74", VA = "0x1639B74", Slot = "7")]
		protected override void OnTerminate()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x1639054", Offset = "0x1639054", VA = "0x1639054")]
		private void CheckError()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x1639C34", Offset = "0x1639C34", VA = "0x1639C34")]
		private bool UpdateSearchCondition(bool bPredict)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x163ADD8", Offset = "0x163ADD8", VA = "0x163ADD8")]
		private void HideSubMeshes()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x163AE6C", Offset = "0x163AE6C", VA = "0x163AE6C")]
		private void ShowSubMeshes(int lightmapCount)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x163AF90", Offset = "0x163AF90", VA = "0x163AF90")]
		private DynamicMesh GetSubMesh(int lightmapIndex)
		{
			return null;
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x163B850", Offset = "0x163B850", VA = "0x163B850")]
		private void SetupSubMesh(DynamicMesh mesh)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x163B98C", Offset = "0x163B98C", VA = "0x163B98C")]
		public void UpdateMesh()
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x1638D78", Offset = "0x1638D78", VA = "0x1638D78")]
		public void SyncAndSwap()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x163BEEC", Offset = "0x163BEEC", VA = "0x163BEEC", Slot = "8")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x163BEF0", Offset = "0x163BEF0", VA = "0x163BEF0")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x163BF24", Offset = "0x163BF24", VA = "0x163BF24")]
		public MeshShadowReceiver()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class RaycastPlaneShadowReceiver : PlaneShadowReceiverBase
	{
		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LayerMask m_raycastMask;

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x2A64F18", Offset = "0x2A64F18", VA = "0x2A64F18", Slot = "8")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x2A651F8", Offset = "0x2A651F8", VA = "0x2A651F8")]
		public RaycastPlaneShadowReceiver()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class DeterminateTransformPredictor : MonoBehaviour, ITransformPredictor
	{
		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 averageMove;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 moveRange;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 averageEulerAngle;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 eulerAngleRange;

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x101F810", Offset = "0x101F810", VA = "0x101F810", Slot = "4")]
		public Bounds PredictNextFramePositionChanges()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x101F878", Offset = "0x101F878", VA = "0x101F878", Slot = "5")]
		public Bounds PredictNextFrameEulerAngleChanges()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x101F8E0", Offset = "0x101F8E0", VA = "0x101F8E0")]
		public DeterminateTransformPredictor()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public interface ITransformPredictor
	{
		[Token(Token = "0x6000AA1")]
		Bounds PredictNextFramePositionChanges();

		[Token(Token = "0x6000AA2")]
		Bounds PredictNextFrameEulerAngleChanges();
	}
	[Token(Token = "0x200011E")]
	public class VelocityTransformPredictor : MonoBehaviour, ITransformPredictor
	{
		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 averageVelocity;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 velocityRange;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 averageEulerAngleVelocity;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 eulerAngleVelocityRange;

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xFFC648", Offset = "0xFFC648", VA = "0xFFC648", Slot = "4")]
		public Bounds PredictNextFramePositionChanges()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xFFC6E0", Offset = "0xFFC6E0", VA = "0xFFC6E0", Slot = "5")]
		public Bounds PredictNextFrameEulerAngleChanges()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xFFC778", Offset = "0xFFC778", VA = "0xFFC778")]
		public VelocityTransformPredictor()
		{
		}
	}
	[Token(Token = "0x200011F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4C80", Offset = "0xAB4C80")]
	public class AutoProjector : MonoBehaviour
	{
		[Token(Token = "0x4000683")]
		public const string SHADOW_ALPHA_PROPERTY_NAME = "_Alpha";

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Component m_predictor;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityProjector m_projector;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_transform;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_canFadeout;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_projectorWeight;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_quadShadowWeight;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_originalAlpha;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_receiverLayer;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ReceiverBase> m_receivers;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_enableProjector;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_distanceFromCamera;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isVisible;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3[] m_vertices;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_uvIndex;

		[Token(Token = "0x1700018B")]
		public ITransformPredictor predictor
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x1502F54", Offset = "0x1502F54", VA = "0x1502F54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x1502FA0", Offset = "0x1502FA0", VA = "0x1502FA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public UnityProjector projector
		{
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x15038A8", Offset = "0x15038A8", VA = "0x15038A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		public bool isProjectorActive
		{
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0x1504234", Offset = "0x1504234", VA = "0x1504234")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018E")]
		public bool isVisible
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0x150425C", Offset = "0x150425C", VA = "0x150425C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018F")]
		public float quadShadowWeight
		{
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0x1504264", Offset = "0x1504264", VA = "0x1504264")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000190")]
		public float quadShadowAlpha
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0x150426C", Offset = "0x150426C", VA = "0x150426C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000191")]
		public float projectorShadowAlpha
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0x1504278", Offset = "0x1504278", VA = "0x1504278")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000192")]
		public float distanceFromCamera
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0x1504288", Offset = "0x1504288", VA = "0x1504288")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000193")]
		public int uvIndex
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0x1504290", Offset = "0x1504290", VA = "0x1504290")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0x1504298", Offset = "0x1504298", VA = "0x1504298")]
			set
			{
			}
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x15030C4", Offset = "0x15030C4", VA = "0x15030C4")]
		public void OnTextureChanged()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x150317C", Offset = "0x150317C", VA = "0x150317C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x15034D8", Offset = "0x15034D8", VA = "0x15034D8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x150353C", Offset = "0x150353C", VA = "0x150353C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x1503744", Offset = "0x1503744", VA = "0x1503744")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x15038B0", Offset = "0x15038B0", VA = "0x15038B0")]
		private bool CheckVisibility(Plane targetPlane, Plane zPlane, Plane[] cameraClipPlanes, float cameraNear, float cameraFar)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x1503BB0", Offset = "0x1503BB0", VA = "0x1503BB0")]
		public bool UpdateVisibility(Plane targetPlane, Plane zPlane, Plane[] cameraClipPlanes, float cameraNear, float cameraFar)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x1503C30", Offset = "0x1503C30", VA = "0x1503C30")]
		public bool UpdateVisibility(Plane zPlane, Plane[] cameraClipPlanes, float cameraNear, float cameraFar)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x1503EE4", Offset = "0x1503EE4", VA = "0x1503EE4")]
		public void EnableProjector()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1503F28", Offset = "0x1503F28", VA = "0x1503F28")]
		public void DisableProjector()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x1503F30", Offset = "0x1503F30", VA = "0x1503F30")]
		public void SetReceivers(List<ReceiverBase> receivers)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x15040EC", Offset = "0x15040EC", VA = "0x15040EC")]
		public void SetReceiverLayer(int receiverLayer, int receiverLayerMask)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x1504220", Offset = "0x1504220", VA = "0x1504220")]
		public List<ReceiverBase> GetReceivers()
		{
			return null;
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x1504228", Offset = "0x1504228", VA = "0x1504228")]
		public void ClearReceivers()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x15042A0", Offset = "0x15042A0", VA = "0x15042A0")]
		public void GetQuadShadowVertices(Vector3[] vertices, int offset)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x15043BC", Offset = "0x15043BC", VA = "0x15043BC")]
		public void UpdateWeights(float fadeStep, bool alwaysShowQuadShadow)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1504598", Offset = "0x1504598", VA = "0x1504598")]
		public AutoProjector()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class LightProjectorShadowCaster : MonoBehaviour
	{
		[Token(Token = "0x200025A")]
		public enum ProjectionType
		{
			[Token(Token = "0x4000C1B")]
			Sprite,
			[Token(Token = "0x4000C1C")]
			Billboard,
			[Token(Token = "0x4000C1D")]
			Plane
		}

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture m_shadowTexture;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 m_extension;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ProjectionType m_projectionType;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_nearClipPlane;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_nearClipSharpness;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool m_manualUpdate;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB8920", Offset = "0xAB8920")]
		private Transform <transform>k__BackingField;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<LightProjectorShadowCaster> s_listCasters;

		[Token(Token = "0x17000194")]
		public new Transform transform
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x16315C0", Offset = "0x16315C0", VA = "0x16315C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBE0C", Offset = "0xABBE0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x16315C8", Offset = "0x16315C8", VA = "0x16315C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBE1C", Offset = "0xABBE1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public Texture shadowTexture
		{
			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0x16315D0", Offset = "0x16315D0", VA = "0x16315D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0x16315D8", Offset = "0x16315D8", VA = "0x16315D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public Vector2 extension
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x16315E0", Offset = "0x16315E0", VA = "0x16315E0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0x16315E8", Offset = "0x16315E8", VA = "0x16315E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public ProjectionType projectionType
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0x16315F0", Offset = "0x16315F0", VA = "0x16315F0")]
			get
			{
				return default(ProjectionType);
			}
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0x16315F8", Offset = "0x16315F8", VA = "0x16315F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public float nearClipPlane
		{
			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0x1631600", Offset = "0x1631600", VA = "0x1631600")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0x1631608", Offset = "0x1631608", VA = "0x1631608")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public float nearClipSharpness
		{
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0x1631610", Offset = "0x1631610", VA = "0x1631610")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0x1631618", Offset = "0x1631618", VA = "0x1631618")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public bool manualUpdate
		{
			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x1631620", Offset = "0x1631620", VA = "0x1631620")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0x1631628", Offset = "0x1631628", VA = "0x1631628")]
			set
			{
			}
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x1631634", Offset = "0x1631634", VA = "0x1631634")]
		public Matrix4x4 GetProjectionMatrix(Vector3 lightPos)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x1631D40", Offset = "0x1631D40", VA = "0x1631D40")]
		public Matrix4x4 GetOrthoProjectionMatrix(Vector3 lightDir)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x1632260", Offset = "0x1632260", VA = "0x1632260")]
		public void GetShadowPlaneAxes(Vector3 lightDir, out Vector3 x, out Vector3 y)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1632490", Offset = "0x1632490", VA = "0x1632490")]
		public static List<LightProjectorShadowCaster> GetAllCasters()
		{
			return null;
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x16324F4", Offset = "0x16324F4", VA = "0x16324F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x1632524", Offset = "0x1632524", VA = "0x1632524")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x1632608", Offset = "0x1632608", VA = "0x1632608")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x1632694", Offset = "0x1632694", VA = "0x1632694")]
		public LightProjectorShadowCaster()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class LightProjectorShadowReceiver : MonoBehaviour
	{
		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_manualUpdate;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask m_shadowCasterMask;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] s_shadowProjectionMatrixPropertyIDs;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[] s_shadowTexturePropertyIDs;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] s_shadowNumKeyword;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_shadowCasterCount;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_prevShadowCasterCount;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LightProjectorShadowCaster[] m_shadowCasters;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LightProjectorShadowCaster[] m_prevShadowCasters;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material m_material;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IProjector m_projectorInterface;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ClipPlanes m_clipPlanes;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_maxShadowNum;

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x1632758", Offset = "0x1632758", VA = "0x1632758")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x16327A8", Offset = "0x16327A8", VA = "0x16327A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x16330FC", Offset = "0x16330FC", VA = "0x16330FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x163310C", Offset = "0x163310C", VA = "0x163310C")]
		public void UpdateShadows()
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1633A34", Offset = "0x1633A34", VA = "0x1633A34")]
		private bool IsInProjectionVolume(LightProjectorShadowCaster caster)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1633E90", Offset = "0x1633E90", VA = "0x1633E90")]
		private void AddCaster(LightProjectorShadowCaster caster)
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x16338C0", Offset = "0x16338C0", VA = "0x16338C0")]
		private void RemoveCaster(LightProjectorShadowCaster caster)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1633FCC", Offset = "0x1633FCC", VA = "0x1633FCC")]
		public LightProjectorShadowReceiver()
		{
		}
	}
	[Token(Token = "0x2000122")]
	[ExecuteAlways]
	public class LightmapDataInPrefab : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200025B")]
		private struct RendererData
		{
			[Token(Token = "0x4000C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Renderer renderer;

			[Token(Token = "0x4000C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lightmapIndex;

			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector4 lightmapScaleOffset;
		}

		[Serializable]
		[Token(Token = "0x200025C")]
		private struct LightmapData
		{
			[Token(Token = "0x4000C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Texture2D lightmapColor;

			[Token(Token = "0x4000C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Texture2D lightmapDir;

			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D shadowMask;
		}

		[Token(Token = "0x200025D")]
		public enum AutoMode
		{
			[Token(Token = "0x4000C25")]
			None,
			[Token(Token = "0x4000C26")]
			AutoCollect,
			[Token(Token = "0x4000C27")]
			AutoCollectAndSave,
			[Token(Token = "0x4000C28")]
			AutoApply
		}

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RendererData[] m_renderers;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LightmapData[] m_lightmaps;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AutoMode m_autoMode;

		[Token(Token = "0x1700019B")]
		public AutoMode autoMode
		{
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x1634004", Offset = "0x1634004", VA = "0x1634004")]
			get
			{
				return default(AutoMode);
			}
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x163400C", Offset = "0x163400C", VA = "0x163400C")]
		public int GetRealLightmapIndexFromIndexInPrefab(int indexInPrefab)
		{
			return default(int);
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x1634208", Offset = "0x1634208", VA = "0x1634208")]
		public int GetLightmapIndexInPrefab(Renderer r)
		{
			return default(int);
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x1634330", Offset = "0x1634330", VA = "0x1634330")]
		public void ApplyLightmaps()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x1634AD4", Offset = "0x1634AD4", VA = "0x1634AD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x1634AE8", Offset = "0x1634AE8", VA = "0x1634AE8")]
		public LightmapDataInPrefab()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public static class LightmapSettingsCache
	{
		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LightmapData[] s_lightmapDataCache;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool s_lightmapDataCached;

		[Token(Token = "0x1700019C")]
		public static LightmapData[] lightmaps
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x1634AF8", Offset = "0x1634AF8", VA = "0x1634AF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public static LightmapsMode lightmapsMode
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x1634DAC", Offset = "0x1634DAC", VA = "0x1634DAC")]
			get
			{
				return default(LightmapsMode);
			}
		}

		[Token(Token = "0x1700019E")]
		public static LightProbes lightProbes
		{
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x1634DB4", Offset = "0x1634DB4", VA = "0x1634DB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x1634B9C", Offset = "0x1634B9C", VA = "0x1634B9C")]
		public static void CacheLightmapData()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x16348D4", Offset = "0x16348D4", VA = "0x16348D4")]
		public static void UncacheLightmapData()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1634DBC", Offset = "0x1634DBC", VA = "0x1634DBC")]
		private static void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x1634E14", Offset = "0x1634E14", VA = "0x1634E14")]
		private static void OnSceneUnloaded(Scene scene)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x1634E6C", Offset = "0x1634E6C", VA = "0x1634E6C")]
		private static void OnActiveSceneChanged(Scene scene1, Scene scene2)
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class MeshTreeRaycast
	{
		[Token(Token = "0x200025E")]
		public struct TemporaryParam
		{
			[Token(Token = "0x4000C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 m_dirsign;

			[Token(Token = "0x4000C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 m_invdir;
		}

		[Serializable]
		[Token(Token = "0x200025F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB558C", Offset = "0xAB558C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x10073D0", Offset = "0x10073D0", VA = "0x10073D0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x10073D8", Offset = "0x10073D8", VA = "0x10073D8")]
			internal void <.cctor>b__31_0(object arg)
			{
			}
		}

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 m_origin;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 m_direction;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_distance;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_cullBackFace;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_hitDistance;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_hitNormal;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ManualResetEvent m_event;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshTreeBase m_tree;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WaitCallback s_raycastCallback;

		[Token(Token = "0x1700019F")]
		public bool isHit
		{
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x170A7DC", Offset = "0x170A7DC", VA = "0x170A7DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A0")]
		public Vector3 hitPosition
		{
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0x170A7F0", Offset = "0x170A7F0", VA = "0x170A7F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001A1")]
		public Vector3 hitNormal
		{
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x170A81C", Offset = "0x170A81C", VA = "0x170A81C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001A2")]
		public float hitDistance
		{
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0x170A828", Offset = "0x170A828", VA = "0x170A828")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A3")]
		public Vector3 origin
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x170A830", Offset = "0x170A830", VA = "0x170A830")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001A4")]
		public Vector3 direction
		{
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x170A83C", Offset = "0x170A83C", VA = "0x170A83C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x170A848", Offset = "0x170A848", VA = "0x170A848")]
		public void Wait()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x170A860", Offset = "0x170A860", VA = "0x170A860")]
		public bool IsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x170A87C", Offset = "0x170A87C", VA = "0x170A87C")]
		public void AsyncRaycast(MeshTreeBase tree, Vector3 origin, Vector3 direction, float distance, bool cullBackFace)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x170A9EC", Offset = "0x170A9EC", VA = "0x170A9EC")]
		public bool Raycast(MeshTreeBase tree, Vector3 origin, Vector3 direction, float distance, bool cullBackFace)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x170AAA4", Offset = "0x170AAA4", VA = "0x170AAA4")]
		private void Raycast()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x170ACB8", Offset = "0x170ACB8", VA = "0x170ACB8")]
		public TemporaryParam CreateTemporaryParam()
		{
			return default(TemporaryParam);
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x170ADE8", Offset = "0x170ADE8", VA = "0x170ADE8")]
		public bool BoundsHitTest(Vector3 center, Vector3 extents, TemporaryParam param, out float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x170AECC", Offset = "0x170AECC", VA = "0x170AECC")]
		public bool TriangleHitTest(Vector3 v0, Vector3 v1, Vector3 v2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x170B108", Offset = "0x170B108", VA = "0x170B108")]
		public MeshTreeRaycast()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class ProjectionReceiverRenderer : MonoBehaviour
	{
		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Component m_projectorComponent;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_material;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IProjector m_projector;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer m_renderer;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock m_propertyBlock;

		[Token(Token = "0x40006BA")]
		private const string LIGHTMAP_TEXTURE_NAME = "unity_Lightmap";

		[Token(Token = "0x40006BB")]
		private const string SHADOWMASK_TEXTURE_NAME = "unity_ShadowMask";

		[Token(Token = "0x40006BC")]
		private const string LIGHTMAP_ST_NAME = "unity_LightmapST";

		[Token(Token = "0x170001A5")]
		public Projector unityProjector
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0x147A230", Offset = "0x147A230", VA = "0x147A230")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x147A294", Offset = "0x147A294", VA = "0x147A294")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public ProjectorBase customProjector
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x147A40C", Offset = "0x147A40C", VA = "0x147A40C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x147A48C", Offset = "0x147A48C", VA = "0x147A48C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x147A53C", Offset = "0x147A53C", VA = "0x147A53C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x147AA98", Offset = "0x147AA98", VA = "0x147AA98")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x147ABF4", Offset = "0x147ABF4", VA = "0x147ABF4")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x147AEC8", Offset = "0x147AEC8", VA = "0x147AEC8")]
		private bool IsVertexPrescaled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x147A814", Offset = "0x147A814", VA = "0x147A814")]
		public void UpdateShadowMaskProperties(Renderer renderer)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x147AED0", Offset = "0x147AED0", VA = "0x147AED0")]
		public ProjectionReceiverRenderer()
		{
		}
	}
	[Token(Token = "0x2000126")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4CF0", Offset = "0xAB4CF0")]
	public class ProjectorManager : MonoBehaviour
	{
		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ProjectorManager s_instance;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask m_receiverLayerMask;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LayerMask m_environmentLayers;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<ReceiverBase> m_receivers;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_mainCamera;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_projectorFadeoutDistance;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_fadeDuration;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LayerMask m_raycastPlaneMask;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool m_useInfinitePlane;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_infinitePlaneTransform;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 m_infinitePlaneNormal;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_infinitePlaneHeight;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Texture2D[] m_blobShadowTextures;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Texture2D m_packedBlobShadowTexture;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int m_packedTexturePadding;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private int m_packedTextureMaxSize;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Rect[] m_blobShadowTextureRects;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string m_shadowTexName;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool m_manualUpdate;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<AutoProjector> m_projectors;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<List<ReceiverBase>> m_receiverInstances;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Stack<List<ReceiverBase>> m_freeReceiverInstances;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform m_cameraTransform;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_firstReceiverLayer;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int m_lastReceiverLayer;

		[Token(Token = "0x40006D6")]
		private const int BUFFER_COUNT = 2;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_nCurrentBuffer;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3[] m_vertices;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color32[] m_colors;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector2[] m_uvs;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int[] m_triangles;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Mesh[] m_meshes;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Renderer m_renderer;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Plane[] m_cameraClipPlanes;

		[Token(Token = "0x170001A7")]
		public static ProjectorManager Instance
		{
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0x147BBE4", Offset = "0x147BBE4", VA = "0x147BBE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		public LayerMask receiverLayerMask
		{
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0x147BE78", Offset = "0x147BE78", VA = "0x147BE78")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0x147BE80", Offset = "0x147BE80", VA = "0x147BE80")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public LayerMask raycastPlaneMask
		{
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x147BFA4", Offset = "0x147BFA4", VA = "0x147BFA4")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000B10")]
			[Address(RVA = "0x147BFAC", Offset = "0x147BFAC", VA = "0x147BFAC")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public List<ReceiverBase> receivers
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x147BFB4", Offset = "0x147BFB4", VA = "0x147BFB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		public LayerMask environmentLayers
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x147BFBC", Offset = "0x147BFBC", VA = "0x147BFBC")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x147BFC4", Offset = "0x147BFC4", VA = "0x147BFC4")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public bool useInfinitPlane
		{
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x147BFCC", Offset = "0x147BFCC", VA = "0x147BFCC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x147BFD4", Offset = "0x147BFD4", VA = "0x147BFD4")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public Transform infinitPlaneTransform
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x147BFE0", Offset = "0x147BFE0", VA = "0x147BFE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x147BFE8", Offset = "0x147BFE8", VA = "0x147BFE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public Vector3 infinitePlaneNormal
		{
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0x147BFF0", Offset = "0x147BFF0", VA = "0x147BFF0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0x147BFFC", Offset = "0x147BFFC", VA = "0x147BFFC")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public float infinitePlaneHeight
		{
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0x147C008", Offset = "0x147C008", VA = "0x147C008")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0x147C010", Offset = "0x147C010", VA = "0x147C010")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public Camera mainCamera
		{
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0x147C018", Offset = "0x147C018", VA = "0x147C018")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0x147C020", Offset = "0x147C020", VA = "0x147C020")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public float projectorFadeoutDistance
		{
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0x147C028", Offset = "0x147C028", VA = "0x147C028")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0x147C030", Offset = "0x147C030", VA = "0x147C030")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public float fadeDuration
		{
			[Token(Token = "0x6000B20")]
			[Address(RVA = "0x147C038", Offset = "0x147C038", VA = "0x147C038")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B21")]
			[Address(RVA = "0x147C040", Offset = "0x147C040", VA = "0x147C040")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public bool manualUpdate
		{
			[Token(Token = "0x6000B22")]
			[Address(RVA = "0x147C048", Offset = "0x147C048", VA = "0x147C048")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B23")]
			[Address(RVA = "0x147C050", Offset = "0x147C050", VA = "0x147C050")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public Texture2D[] blobShadowTextures
		{
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0x147C05C", Offset = "0x147C05C", VA = "0x147C05C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public Texture2D packedBlobShadowTexture
		{
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0x147C064", Offset = "0x147C064", VA = "0x147C064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public Rect[] blobShadowTextureRects
		{
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0x147C06C", Offset = "0x147C06C", VA = "0x147C06C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public int packedTexturePadding
		{
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0x147C074", Offset = "0x147C074", VA = "0x147C074")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x147C07C", Offset = "0x147C07C", VA = "0x147C07C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public int packedTextureMaxSize
		{
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x147C084", Offset = "0x147C084", VA = "0x147C084")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x147C08C", Offset = "0x147C08C", VA = "0x147C08C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public string blobShadowTextureName
		{
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x147C094", Offset = "0x147C094", VA = "0x147C094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		public int projectorCount
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x1478980", Offset = "0x1478980", VA = "0x1478980")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BB")]
		public int activeProjectorCount
		{
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x14788C0", Offset = "0x14788C0", VA = "0x14788C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x147BC48", Offset = "0x147BC48", VA = "0x147BC48")]
		public ProjectorManager()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x147C09C", Offset = "0x147C09C", VA = "0x147C09C")]
		public void AddProjector(AutoProjector projector)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x147C190", Offset = "0x147C190", VA = "0x147C190")]
		public void UpdateUVIndex(AutoProjector projector)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x147C2F8", Offset = "0x147C2F8", VA = "0x147C2F8")]
		public void RemoveProjector(AutoProjector projector)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x147C560", Offset = "0x147C560", VA = "0x147C560")]
		public void AddReceiver(ReceiverBase receiver)
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x147C874", Offset = "0x147C874", VA = "0x147C874")]
		public void RemoveReceiver(ReceiverBase receiver)
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x147CA30", Offset = "0x147CA30", VA = "0x147CA30")]
		public void UpdateScene()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x147DD0C", Offset = "0x147DD0C", VA = "0x147DD0C")]
		public void PackBlobShadowTextures(Texture2D packedTexture)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x147E044", Offset = "0x147E044", VA = "0x147E044")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x147E7A0", Offset = "0x147E7A0", VA = "0x147E7A0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x147E81C", Offset = "0x147E81C", VA = "0x147E81C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x147E8A8", Offset = "0x147E8A8", VA = "0x147E8A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x147EC5C", Offset = "0x147EC5C", VA = "0x147EC5C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x147ED48", Offset = "0x147ED48", VA = "0x147ED48")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x147DCA0", Offset = "0x147DCA0", VA = "0x147DCA0")]
		private int GetNextReceiverLayer(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x147BEDC", Offset = "0x147BEDC", VA = "0x147BEDC")]
		private void UpdateReceiverLayer()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x147DA10", Offset = "0x147DA10", VA = "0x147DA10")]
		private List<ReceiverBase> GetFreeReceivers()
		{
			return null;
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x147C380", Offset = "0x147C380", VA = "0x147C380")]
		private void FreeReceivers(List<ReceiverBase> receivers)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x147ED58", Offset = "0x147ED58", VA = "0x147ED58")]
		public void AddBlobShadowTextureIfNotExist(Texture2D tex)
		{
		}
	}
}
namespace FastShadowReceiver.Demo
{
	[Token(Token = "0x2000127")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4D50", Offset = "0xAB4D50")]
	public class BulletMarkReceiver : MonoBehaviour
	{
		[Token(Token = "0x2000260")]
		private class SearchInstance
		{
			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshTreeSearch search;

			[Token(Token = "0x4000C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Matrix4x4 uvProjection;

			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x1000B8C", Offset = "0x1000B8C", VA = "0x1000B8C")]
			public SearchInstance()
			{
			}
		}

		[Token(Token = "0x2000261")]
		private struct UVBuffer
		{
			[Token(Token = "0x4000C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2[] uv1;

			[Token(Token = "0x4000C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2[] uv2;
		}

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshTreeBase m_meshTree;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_meshTransform;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_scissorMargin;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool m_allowDelay;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stack<SearchInstance> m_freeSearch;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<SearchInstance> m_activeSearch;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_transform;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, UVBuffer> s_uvBuffer;

		[Token(Token = "0x40006E8")]
		private const int BUFFER_COUNT = 2;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_nCurrentBuffer;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh[] m_meshes;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Mesh m_tempMesh;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Renderer m_renderer;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CombineInstance[] m_meshCombine;

		[Token(Token = "0x170001BC")]
		private Mesh currentMesh
		{
			[Token(Token = "0x6000B47")]
			[Address(RVA = "0x1509E58", Offset = "0x1509E58", VA = "0x1509E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private Mesh nextMesh
		{
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0x1509E00", Offset = "0x1509E00", VA = "0x1509E00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x1508EC8", Offset = "0x1508EC8", VA = "0x1508EC8")]
		public void AddShot(IProjector bulletProjector)
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1509310", Offset = "0x1509310", VA = "0x1509310")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x15096F0", Offset = "0x15096F0", VA = "0x15096F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x1509740", Offset = "0x1509740", VA = "0x1509740")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x15098CC", Offset = "0x15098CC", VA = "0x15098CC")]
		private bool AddBulletMark(SearchInstance searchInstance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x150945C", Offset = "0x150945C", VA = "0x150945C")]
		private void InitMesh()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x1509DAC", Offset = "0x1509DAC", VA = "0x1509DAC")]
		private void SwapMesh()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x1509E98", Offset = "0x1509E98", VA = "0x1509E98")]
		public BulletMarkReceiver()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class BulletProjector : MonoBehaviour
	{
		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BulletMarkReceiver m_bulletReceiver;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IProjector m_projector;

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x1509F34", Offset = "0x1509F34", VA = "0x1509F34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x150A024", Offset = "0x150A024", VA = "0x150A024")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x150A158", Offset = "0x150A158", VA = "0x150A158")]
		public BulletProjector()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x2000262")]
		private enum MouseButtonState
		{
			[Token(Token = "0x4000C31")]
			Normal,
			[Token(Token = "0x4000C32")]
			LeftButtonDown,
			[Token(Token = "0x4000C33")]
			RightButtonDown
		}

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_lookAt;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_speed;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_distance;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_cameraAngleX;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_cameraAngleY;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_mousePosition;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private MouseButtonState m_mouseButtonState;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_transform;

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x150B90C", Offset = "0x150B90C", VA = "0x150B90C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x150B9E4", Offset = "0x150B9E4", VA = "0x150B9E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x150C09C", Offset = "0x150C09C", VA = "0x150C09C")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class FPSCameraController : MonoBehaviour
	{
		[Token(Token = "0x2000263")]
		private enum MouseButtonState
		{
			[Token(Token = "0x4000C35")]
			Normal,
			[Token(Token = "0x4000C36")]
			MouseButtonDown
		}

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_speed;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_cameraAngleX;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_cameraAngleY;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_mousePosition;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MouseButtonState m_mouseButtonState;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1025DC0", Offset = "0x1025DC0", VA = "0x1025DC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x1025E20", Offset = "0x1025E20", VA = "0x1025E20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x102625C", Offset = "0x102625C", VA = "0x102625C")]
		public FPSCameraController()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class MovingAround : MonoBehaviour, ITransformPredictor
	{
		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_rotateCenter;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_rotationSpeed;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_transform;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_nextPosition;

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x170F684", Offset = "0x170F684", VA = "0x170F684")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x170F6D4", Offset = "0x170F6D4", VA = "0x170F6D4")]
		private Vector3 CalculateMoveVector(float dt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x170F780", Offset = "0x170F780", VA = "0x170F780")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x170F7EC", Offset = "0x170F7EC", VA = "0x170F7EC", Slot = "4")]
		public Bounds PredictNextFramePositionChanges()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x170F864", Offset = "0x170F864", VA = "0x170F864", Slot = "5")]
		public Bounds PredictNextFrameEulerAngleChanges()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x170F870", Offset = "0x170F870", VA = "0x170F870")]
		public MovingAround()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class MovingToward : MonoBehaviour, ITransformPredictor
	{
		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_target;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bounds m_randomTargetRange;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_speed;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_transform;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_nextPosition;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_velocity;

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x170F880", Offset = "0x170F880", VA = "0x170F880")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x170F9EC", Offset = "0x170F9EC", VA = "0x170F9EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x170F9F0", Offset = "0x170F9F0", VA = "0x170F9F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x170F9F4", Offset = "0x170F9F4", VA = "0x170F9F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x170FA90", Offset = "0x170FA90", VA = "0x170FA90", Slot = "4")]
		public Bounds PredictNextFramePositionChanges()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x170FB08", Offset = "0x170FB08", VA = "0x170FB08", Slot = "5")]
		public Bounds PredictNextFrameEulerAngleChanges()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x170FB14", Offset = "0x170FB14", VA = "0x170FB14")]
		public MovingToward()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class MultiProjectorTest : MonoBehaviour
	{
		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material m_visualizeShadow;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material m_normalShadow;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Projector[] m_projectors;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ReceiverBase[] m_shadowReceivers;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_ignoreProjectorLayer;

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x17120F0", Offset = "0x17120F0", VA = "0x17120F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x1712150", Offset = "0x1712150", VA = "0x1712150")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x17126B4", Offset = "0x17126B4", VA = "0x17126B4")]
		public MultiProjectorTest()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class PanningSpotLight : MonoBehaviour
	{
		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_minAngle;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_maxAngle;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_frequency;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_transform;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_initialRotation;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_time;

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x1477C34", Offset = "0x1477C34", VA = "0x1477C34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x1477C88", Offset = "0x1477C88", VA = "0x1477C88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x1477D48", Offset = "0x1477D48", VA = "0x1477D48")]
		public PanningSpotLight()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class PerformanceCounter : MonoBehaviour
	{
		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshShadowReceiver m_meshShadowReceiver;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshShadowReceiver[] m_meshShadowReceivers;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BinaryMeshTree m_binaryMeshTree;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OctMeshTree m_octMeshTree;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ProjectorManager m_projectorManager;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_fps;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_fpsUpdateInterval;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_accumTime;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_timeLeft;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_frameCount;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_meshSearchAccumTime;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_meshSearchTime;

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x1477E68", Offset = "0x1477E68", VA = "0x1477E68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x1477F18", Offset = "0x1477F18", VA = "0x1477F18")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x147804C", Offset = "0x147804C", VA = "0x147804C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x14789CC", Offset = "0x14789CC", VA = "0x14789CC")]
		public PerformanceCounter()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class ProjectorTest : MonoBehaviour
	{
		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material m_visualizeShadow;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material m_normalShadow;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Projector m_projector;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ReceiverBase m_shadowReceiver;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_ignoreProjectorLayer;

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x147EF60", Offset = "0x147EF60", VA = "0x147EF60")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x147EFC0", Offset = "0x147EFC0", VA = "0x147EFC0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x147F450", Offset = "0x147F450", VA = "0x147F450")]
		public ProjectorTest()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class RandomLevelGeneration : MonoBehaviour
	{
		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_prefabObjects;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_objectCount;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Bounds m_positionRange;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BinaryMeshTree m_meshTree;

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x2A60388", Offset = "0x2A60388", VA = "0x2A60388")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x2A606D8", Offset = "0x2A606D8", VA = "0x2A606D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x2A608E4", Offset = "0x2A608E4", VA = "0x2A608E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x2A6094C", Offset = "0x2A6094C", VA = "0x2A6094C")]
		private void ReloadLevel()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x2A60EB0", Offset = "0x2A60EB0", VA = "0x2A60EB0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x2A60F70", Offset = "0x2A60F70", VA = "0x2A60F70")]
		public RandomLevelGeneration()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class RandomSpawnTest : MonoBehaviour
	{
		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material m_visualizeShadow;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material m_normalShadow;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Projector m_projector;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SceneManager m_sceneManager;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_ignoreProjectorLayer;

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x2A60F80", Offset = "0x2A60F80", VA = "0x2A60F80")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x2A60FE0", Offset = "0x2A60FE0", VA = "0x2A60FE0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x2A620D8", Offset = "0x2A620D8", VA = "0x2A620D8")]
		public RandomSpawnTest()
		{
		}
	}
	[Token(Token = "0x2000133")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4DB0", Offset = "0xAB4DB0")]
	public class RaycastBulletMarkReceiver : MonoBehaviour
	{
		[Token(Token = "0x2000264")]
		private struct MeshData
		{
			[Token(Token = "0x4000C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3[] m_vertices;

			[Token(Token = "0x4000C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3[] m_normals;

			[Token(Token = "0x4000C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2[] m_uvs;

			[Token(Token = "0x4000C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] m_triangles;
		}

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshTreeBase m_meshTree;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_meshTransform;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_allowDelay;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_cullBackFace;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_bulletMarkRadius;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stack<MeshTreeRaycast> m_freeRays;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<MeshTreeRaycast> m_activeRays;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_transform;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<MeshTreeRaycast> m_hitRays;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, MeshData> m_meshData;

		[Token(Token = "0x4000738")]
		private const int BUFFER_COUNT = 2;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_nCurrentBuffer;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Mesh[] m_meshes;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh m_tempMesh;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Renderer m_renderer;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CombineInstance[] m_meshCombine;

		[Token(Token = "0x170001BE")]
		private Mesh currentMesh
		{
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0x2A64C3C", Offset = "0x2A64C3C", VA = "0x2A64C3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private Mesh nextMesh
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0x2A64BE4", Offset = "0x2A64BE4", VA = "0x2A64BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x2A63B68", Offset = "0x2A63B68", VA = "0x2A63B68")]
		public void AddShot(Vector3 origin, Vector3 dir, float distance)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x2A63D38", Offset = "0x2A63D38", VA = "0x2A63D38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x2A641B0", Offset = "0x2A641B0", VA = "0x2A641B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x2A64200", Offset = "0x2A64200", VA = "0x2A64200")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x2A643E0", Offset = "0x2A643E0", VA = "0x2A643E0")]
		private void AddBulletMarks(List<MeshTreeRaycast> rays)
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x2A63F1C", Offset = "0x2A63F1C", VA = "0x2A63F1C")]
		private void InitMesh()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x2A64B90", Offset = "0x2A64B90", VA = "0x2A64B90")]
		private void SwapMesh()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x2A64C7C", Offset = "0x2A64C7C", VA = "0x2A64C7C")]
		public RaycastBulletMarkReceiver()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class RaycastBulletProjector : MonoBehaviour
	{
		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RaycastBulletMarkReceiver m_bulletReceiver;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_range;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_scatteringAngle;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_numPellets;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_probDensitiy;

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x2A64C98", Offset = "0x2A64C98", VA = "0x2A64C98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x2A64CD4", Offset = "0x2A64CD4", VA = "0x2A64CD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x2A64F00", Offset = "0x2A64F00", VA = "0x2A64F00")]
		public RaycastBulletProjector()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class RollingLight : MonoBehaviour
	{
		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_rollSpeed;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x2A660A4", Offset = "0x2A660A4", VA = "0x2A660A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x2A660D4", Offset = "0x2A660D4", VA = "0x2A660D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x2A6619C", Offset = "0x2A6619C", VA = "0x2A6619C")]
		public RollingLight()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class SceneController : MonoBehaviour
	{
		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] m_scenes;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_currentScene;

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x2A67DA4", Offset = "0x2A67DA4", VA = "0x2A67DA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x2A67E08", Offset = "0x2A67E08", VA = "0x2A67E08")]
		private void LoadLevel(int index)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x2A67EA8", Offset = "0x2A67EA8", VA = "0x2A67EA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x2A67EC0", Offset = "0x2A67EC0", VA = "0x2A67EC0")]
		private void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x2A67F4C", Offset = "0x2A67F4C", VA = "0x2A67F4C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x2A681B4", Offset = "0x2A681B4", VA = "0x2A681B4")]
		public SceneController()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class SceneManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000265")]
		private struct SpawnedObject
		{
			[Token(Token = "0x4000C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m_time;

			[Token(Token = "0x4000C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject m_object;
		}

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_environment;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] m_objectsToSpawn;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_environmentTileSize;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_objectLifeSpan;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_objectSpawnRate;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Bounds m_spawnBounds;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform m_playerTransform;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask m_spawnedProjectorLayers;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<SpawnedObject> m_objectInstances;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> m_freeObjectInstances;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_spawnCount;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_currentProjectorLayer;

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x2A686FC", Offset = "0x2A686FC", VA = "0x2A686FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x2A68E84", Offset = "0x2A68E84", VA = "0x2A68E84")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x2A68B78", Offset = "0x2A68B78", VA = "0x2A68B78")]
		private void RegisterReceiversInChildren(GameObject env)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x2A68CD0", Offset = "0x2A68CD0", VA = "0x2A68CD0")]
		private void CopyLightmapScaleOffset(Transform dst, Transform src)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x2A690DC", Offset = "0x2A690DC", VA = "0x2A690DC")]
		private void SpawnObject()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x2A68FCC", Offset = "0x2A68FCC", VA = "0x2A68FCC")]
		private void KillObjects()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x2A689DC", Offset = "0x2A689DC", VA = "0x2A689DC")]
		private void AssignProjectorLayer(GameObject obj)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x2A61628", Offset = "0x2A61628", VA = "0x2A61628")]
		public void SetProjectorMaterial(Material material)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x2A61EE4", Offset = "0x2A61EE4", VA = "0x2A61EE4")]
		public void SetProjectorIgnoreLayers(int layerMask)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x2A61850", Offset = "0x2A61850", VA = "0x2A61850")]
		public void ResetProjectorIgnoreLayers(int layerMask)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x2A61D1C", Offset = "0x2A61D1C", VA = "0x2A61D1C")]
		public void ForceEnableAutoProjectors()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x2A61A48", Offset = "0x2A61A48", VA = "0x2A61A48")]
		public void ForceDisableAutoProjectors()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x2A6930C", Offset = "0x2A6930C", VA = "0x2A6930C")]
		public SceneManager()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class SelfRotation : MonoBehaviour
	{
		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_rotationSpeed;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x2A69880", Offset = "0x2A69880", VA = "0x2A69880")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x2A698B0", Offset = "0x2A698B0", VA = "0x2A698B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x2A69974", Offset = "0x2A69974", VA = "0x2A69974")]
		public SelfRotation()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class ShadowmapTest : MonoBehaviour
	{
		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material m_visualizeShadow;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material m_normalShadow;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material m_debugDiffuse;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material m_normalDiffuse;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject m_rootNoShadow;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject m_rootEnvironment;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ReceiverBase m_shadowReceiver;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Renderer[] m_allShadowReceivers;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Renderer[] m_noShadowRenderers;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_shadowReceiverRenderer;

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x2A70414", Offset = "0x2A70414", VA = "0x2A70414")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x2A704DC", Offset = "0x2A704DC", VA = "0x2A704DC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x2A708B0", Offset = "0x2A708B0", VA = "0x2A708B0")]
		public ShadowmapTest()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class TerrainRover : MonoBehaviour
	{
		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Terrain m_terrain;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_hoverHeight;

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x17037CC", Offset = "0x17037CC", VA = "0x17037CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x1703818", Offset = "0x1703818", VA = "0x1703818")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x1703884", Offset = "0x1703884", VA = "0x1703884")]
		public TerrainRover()
		{
		}
	}
}
namespace DynamicShadowProjector
{
	[Token(Token = "0x200013B")]
	[ExecuteAlways]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4E10", Offset = "0xAB4E10")]
	public class DrawSceneObject : MonoBehaviour
	{
		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Shader m_replacementShader;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask m_cullingMask;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ShadowTextureRenderer m_shadowTextureRenderer;

		[Token(Token = "0x170001C0")]
		public Shader replacementShader
		{
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0x10218C8", Offset = "0x10218C8", VA = "0x10218C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0x10218D0", Offset = "0x10218D0", VA = "0x10218D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public LayerMask cullingMask
		{
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x1021A04", Offset = "0x1021A04", VA = "0x1021A04")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x1021A0C", Offset = "0x1021A0C", VA = "0x1021A0C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public ShadowTextureRenderer shadowTextureRenderer
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x1021950", Offset = "0x1021950", VA = "0x1021950")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x1021A64", Offset = "0x1021A64", VA = "0x1021A64")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x1021AFC", Offset = "0x1021AFC", VA = "0x1021AFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x1021B74", Offset = "0x1021B74", VA = "0x1021B74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x1021BD4", Offset = "0x1021BD4", VA = "0x1021BD4")]
		private void OnVisibilityChanged(bool isVisible)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x1021C34", Offset = "0x1021C34", VA = "0x1021C34")]
		public DrawSceneObject()
		{
		}
	}
	[Token(Token = "0x200013C")]
	[ExecuteAlways]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4E90", Offset = "0xAB4E90")]
	public class DrawTargetObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000266")]
		public struct ReplaceShader
		{
			[Token(Token = "0x4000C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string renderType;

			[Token(Token = "0x4000C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Shader shader;
		}

		[Token(Token = "0x2000267")]
		public enum TextureAlignment
		{
			[Token(Token = "0x4000C40")]
			None,
			[Token(Token = "0x4000C41")]
			TargetAxisX,
			[Token(Token = "0x4000C42")]
			TargetAxisY,
			[Token(Token = "0x4000C43")]
			TargetAxisZ
		}

		[Token(Token = "0x2000268")]
		public enum UpdateFunction
		{
			[Token(Token = "0x4000C45")]
			OnPreCull,
			[Token(Token = "0x4000C46")]
			LateUpdate,
			[Token(Token = "0x4000C47")]
			UpdateTransform
		}

		[Token(Token = "0x2000269")]
		private struct CommandBufferHash
		{
			[Token(Token = "0x4000C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ulong hash;

			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x1002868", Offset = "0x1002868", VA = "0x1002868")]
			public void Init()
			{
			}

			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x1002870", Offset = "0x1002870", VA = "0x1002870")]
			public void AddRenderer(Renderer renderer)
			{
			}

			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x10028B0", Offset = "0x10028B0", VA = "0x10028B0")]
			public bool Equals(CommandBufferHash rhs)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_target;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_targetDirection;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask m_layerMask;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private TextureAlignment m_textureAlignment;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UpdateFunction m_updateFunction;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material m_shadowShader;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ReplaceShader[] m_replacementShaders;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool m_renderChildren;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool m_autoDetectHierarchyChanges;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		private bool m_followTarget;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CommandBufferHash m_commandBufferHash;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isCommandBufferDirty;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CommandBuffer m_commandBuffer;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ShadowTextureRenderer m_shadowRenderer;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_localTargetPosition;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<Material, Material> m_replacedMaterialCache;

		[Token(Token = "0x170001C3")]
		public Transform target
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x1021C3C", Offset = "0x1021C3C", VA = "0x1021C3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x1021C44", Offset = "0x1021C44", VA = "0x1021C44")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public Transform targetDirection
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0x1021CEC", Offset = "0x1021CEC", VA = "0x1021CEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x1021CF4", Offset = "0x1021CF4", VA = "0x1021CF4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public bool renderChildren
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0x1021CFC", Offset = "0x1021CFC", VA = "0x1021CFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x1021D04", Offset = "0x1021D04", VA = "0x1021D04")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public bool autoDetectHierarchyChanges
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x1021D2C", Offset = "0x1021D2C", VA = "0x1021D2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x1021D34", Offset = "0x1021D34", VA = "0x1021D34")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public LayerMask layerMask
		{
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x1021D40", Offset = "0x1021D40", VA = "0x1021D40")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x1021D48", Offset = "0x1021D48", VA = "0x1021D48")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public TextureAlignment textureAlignment
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x1021DA8", Offset = "0x1021DA8", VA = "0x1021DA8")]
			get
			{
				return default(TextureAlignment);
			}
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x1021DB0", Offset = "0x1021DB0", VA = "0x1021DB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public UpdateFunction updateFunction
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x1021DB8", Offset = "0x1021DB8", VA = "0x1021DB8")]
			get
			{
				return default(UpdateFunction);
			}
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x1021DC0", Offset = "0x1021DC0", VA = "0x1021DC0")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public bool followTarget
		{
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0x1021DC8", Offset = "0x1021DC8", VA = "0x1021DC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0x1021DD0", Offset = "0x1021DD0", VA = "0x1021DD0")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public Material shadowShader
		{
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0x1021DDC", Offset = "0x1021DDC", VA = "0x1021DDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x1021DE4", Offset = "0x1021DE4", VA = "0x1021DE4")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public ReplaceShader[] replacementShaders
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x1021E80", Offset = "0x1021E80", VA = "0x1021E80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x1021E88", Offset = "0x1021E88", VA = "0x1021E88")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		internal CommandBuffer commandBuffer
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x10224D0", Offset = "0x10224D0", VA = "0x10224D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x1021CE0", Offset = "0x1021CE0", VA = "0x1021CE0")]
		public void SetCommandBufferDirty()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x1021EB8", Offset = "0x1021EB8", VA = "0x1021EB8")]
		public void UpdateCommandBuffer()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x10221FC", Offset = "0x10221FC", VA = "0x10221FC")]
		public void UpdateMaterial(Material mat)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x1022284", Offset = "0x1022284", VA = "0x1022284")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x10224D8", Offset = "0x10224D8", VA = "0x10224D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x102265C", Offset = "0x102265C", VA = "0x102265C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x102266C", Offset = "0x102266C", VA = "0x102266C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x1022720", Offset = "0x1022720", VA = "0x1022720")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x10227B8", Offset = "0x10227B8", VA = "0x10227B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1022958", Offset = "0x1022958", VA = "0x1022958")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x1022A30", Offset = "0x1022A30", VA = "0x1022A30")]
		internal void OnPreCull()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1022A74", Offset = "0x1022A74", VA = "0x1022A74")]
		private void OnVisibilityChanged(bool isVisible)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x10225C0", Offset = "0x10225C0", VA = "0x10225C0")]
		private void CreateCommandBuffer()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x10229AC", Offset = "0x10229AC", VA = "0x10229AC")]
		private bool IsTargetObjectTreeStructureChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x1021F7C", Offset = "0x1021F7C", VA = "0x1021F7C")]
		private void AddDrawCommandForGameObject(GameObject obj, bool recursive, ref CommandBufferHash commandBufferHash, bool hashOnly)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1022AA4", Offset = "0x1022AA4", VA = "0x1022AA4")]
		private void AddDrawCommand(Renderer renderer, int renderTypeIndex)
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x1022EFC", Offset = "0x1022EFC", VA = "0x1022EFC")]
		public DrawTargetObject()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class FollowTargetObject : MonoBehaviour
	{
		[Token(Token = "0x200026A")]
		public enum TextureAlignment
		{
			[Token(Token = "0x4000C4A")]
			None,
			[Token(Token = "0x4000C4B")]
			TargetAxisX,
			[Token(Token = "0x4000C4C")]
			TargetAxisY,
			[Token(Token = "0x4000C4D")]
			TargetAxisZ
		}

		[Token(Token = "0x200026B")]
		public enum UpdateFunction
		{
			[Token(Token = "0x4000C4F")]
			OnPreCull,
			[Token(Token = "0x4000C50")]
			LateUpdate,
			[Token(Token = "0x4000C51")]
			UpdateTransform
		}

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_target;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_targetDirection;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextureAlignment m_textureAlignment;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private UpdateFunction m_updateFunction;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_localTargetPosition;

		[Token(Token = "0x170001CE")]
		public Transform target
		{
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0x1026F08", Offset = "0x1026F08", VA = "0x1026F08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0x1026F10", Offset = "0x1026F10", VA = "0x1026F10")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public Transform targetDirection
		{
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0x1026F18", Offset = "0x1026F18", VA = "0x1026F18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0x1026F20", Offset = "0x1026F20", VA = "0x1026F20")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public TextureAlignment textureAlignment
		{
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0x1026F28", Offset = "0x1026F28", VA = "0x1026F28")]
			get
			{
				return default(TextureAlignment);
			}
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x1026F30", Offset = "0x1026F30", VA = "0x1026F30")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public UpdateFunction updateFunction
		{
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x1026F38", Offset = "0x1026F38", VA = "0x1026F38")]
			get
			{
				return default(UpdateFunction);
			}
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x1026F40", Offset = "0x1026F40", VA = "0x1026F40")]
			set
			{
			}
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1026F48", Offset = "0x1026F48", VA = "0x1026F48")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x1027174", Offset = "0x1027174", VA = "0x1027174")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x1027228", Offset = "0x1027228", VA = "0x1027228")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x102723C", Offset = "0x102723C", VA = "0x102723C")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x102724C", Offset = "0x102724C", VA = "0x102724C")]
		public FollowTargetObject()
		{
		}
	}
	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4F00", Offset = "0xAB4F00")]
	public class MipmappedShadowFallback : MonoBehaviour
	{
		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Object m_fallbackShaderOrMaterial;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_blurLevel;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_blurSize;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_modifyTextureSize;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ShadowTextureRenderer.TextureMultiSample m_multiSampling;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShadowTextureRenderer.TextureSuperSample m_superSampling;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int m_textureWidth;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_textureHeight;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader m_tex2DlodCheckShader;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader m_glslCheckShader;

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x170C5F4", Offset = "0x170C5F4", VA = "0x170C5F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x170C848", Offset = "0x170C848", VA = "0x170C848")]
		public void ApplyFallback(Projector projector)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x170C9E8", Offset = "0x170C9E8", VA = "0x170C9E8")]
		public MipmappedShadowFallback()
		{
		}
	}
	[Token(Token = "0x200013F")]
	[ExecuteAlways]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xAB4F60", Offset = "0xAB4F60")]
	public class ShadowTextureRenderer : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x200026C")]
		public enum TextureMultiSample
		{
			[Token(Token = "0x4000C53")]
			x1 = 1,
			[Token(Token = "0x4000C54")]
			x2 = 2,
			[Token(Token = "0x4000C55")]
			x4 = 4,
			[Token(Token = "0x4000C56")]
			x8 = 8
		}

		[Token(Token = "0x200026D")]
		public enum TextureSuperSample
		{
			[Token(Token = "0x4000C58")]
			x1 = 1,
			[Token(Token = "0x4000C59")]
			x4 = 2,
			[Token(Token = "0x4000C5A")]
			x16 = 4
		}

		[Token(Token = "0x200026E")]
		public enum MipmapFalloff
		{
			[Token(Token = "0x4000C5C")]
			None,
			[Token(Token = "0x4000C5D")]
			Linear,
			[Token(Token = "0x4000C5E")]
			Custom
		}

		[Token(Token = "0x200026F")]
		public enum BlurFilter
		{
			[Token(Token = "0x4000C60")]
			Uniform,
			[Token(Token = "0x4000C61")]
			Gaussian
		}

		[Token(Token = "0x2000270")]
		private struct BlurParam
		{
			[Token(Token = "0x4000C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int tap;

			[Token(Token = "0x4000C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector4 offset;

			[Token(Token = "0x4000C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector4 weight;
		}

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextureMultiSample m_multiSampling;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private TextureSuperSample m_superSampling;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MipmapFalloff m_mipmapFalloff;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private BlurFilter m_blurFilter;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_testViewClip;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int m_textureWidth;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_textureHeight;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int m_mipLevel;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_blurLevel;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_blurSize;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_mipmapBlurSize;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool m_singlePassMipmapBlur;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color m_shadowColor;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material m_blurShader;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material m_downsampleShader;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Material m_copyMipmapShader;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Material m_eraseShadowShader;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float[] m_customMipmapFalloff;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RenderTextureFormat[] m_preferredTextureFormats;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Camera[] m_camerasForViewClipTest;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_falloffParamID;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int s_blurOffsetHParamID;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int s_blurOffsetVParamID;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int s_blurWeightHParamID;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int s_blurWeightVParamID;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int s_downSampleBlurOffset0ParamID;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int s_downSampleBlurOffset1ParamID;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int s_downSampleBlurOffset2ParamID;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int s_downSampleBlurOffset3ParamID;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int s_downSampleBlurWeightParamID;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int s_blitSrcTexParamID;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static int s_blitSrcTexelSizeParamID;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int s_shadowTexParamID;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static int s_mipLevelParamID;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Projector m_projector;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material m_projectorMaterial;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CommandBuffer m_commandBuffer;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture m_shadowTexture;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private Camera m_camera;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CommandBuffer m_postProcessCommands;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_isTexturePropertyChanged;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool m_isVisible;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		private bool m_shadowTextureValid;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static HashSet<Material> s_sharedMaterials;

		[Token(Token = "0x40007B1")]
		private const HideFlags CLONED_MATERIAL_HIDE_FLAGS = HideFlags.HideAndDontSave;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static int[] s_temporaryRenderTargetNameIds;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static RenderTargetIdentifier[] s_temporaryRenderTargetIdentifiers;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private RenderTexture m_temporaryRenderTarget;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<MaterialPropertyBlock> m_propertyBlockPool;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int m_propetyBlockCount;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Dictionary<int, Mesh> s_borderMeshCache;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly int[] s_borderMeshIndices;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Mesh s_fullScreenQuad;

		[Token(Token = "0x40007BA")]
		private const int MAX_BLUR_TAP_SIZE = 7;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static float[] s_blurWeights;

		[Token(Token = "0x170001D2")]
		public TextureMultiSample multiSampling
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x2A699CC", Offset = "0x2A699CC", VA = "0x2A699CC")]
			get
			{
				return default(TextureMultiSample);
			}
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x2A699D4", Offset = "0x2A699D4", VA = "0x2A699D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public TextureSuperSample superSampling
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x2A699FC", Offset = "0x2A699FC", VA = "0x2A699FC")]
			get
			{
				return default(TextureSuperSample);
			}
			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0x2A69A04", Offset = "0x2A69A04", VA = "0x2A69A04")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public int textureWidth
		{
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0x2A69AD4", Offset = "0x2A69AD4", VA = "0x2A69AD4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0x2A69ADC", Offset = "0x2A69ADC", VA = "0x2A69ADC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public int textureHeight
		{
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0x2A69AF8", Offset = "0x2A69AF8", VA = "0x2A69AF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0x2A69B00", Offset = "0x2A69B00", VA = "0x2A69B00")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public RenderTextureFormat[] preferredTextureFormats
		{
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x2A69B1C", Offset = "0x2A69B1C", VA = "0x2A69B1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0x2A69B24", Offset = "0x2A69B24", VA = "0x2A69B24")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public int mipLevel
		{
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x2A69B54", Offset = "0x2A69B54", VA = "0x2A69B54")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x2A69B5C", Offset = "0x2A69B5C", VA = "0x2A69B5C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public int blurLevel
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x2A69B80", Offset = "0x2A69B80", VA = "0x2A69B80")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x2A69B88", Offset = "0x2A69B88", VA = "0x2A69B88")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public float blurSize
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x2A69BEC", Offset = "0x2A69BEC", VA = "0x2A69BEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x2A69BF4", Offset = "0x2A69BF4", VA = "0x2A69BF4")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public BlurFilter blurFilter
		{
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0x2A69BFC", Offset = "0x2A69BFC", VA = "0x2A69BFC")]
			get
			{
				return default(BlurFilter);
			}
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x2A69C04", Offset = "0x2A69C04", VA = "0x2A69C04")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public float mipmapBlurSize
		{
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0x2A69C0C", Offset = "0x2A69C0C", VA = "0x2A69C0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x2A69C14", Offset = "0x2A69C14", VA = "0x2A69C14")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public bool singlePassMipmapBlur
		{
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0x2A69C1C", Offset = "0x2A69C1C", VA = "0x2A69C1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0x2A69C24", Offset = "0x2A69C24", VA = "0x2A69C24")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public MipmapFalloff mipmapFalloff
		{
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x2A69C30", Offset = "0x2A69C30", VA = "0x2A69C30")]
			get
			{
				return default(MipmapFalloff);
			}
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x2A69C38", Offset = "0x2A69C38", VA = "0x2A69C38")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public float[] customMipmapFalloff
		{
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0x2A69C40", Offset = "0x2A69C40", VA = "0x2A69C40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0x2A69C48", Offset = "0x2A69C48", VA = "0x2A69C48")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public Color shadowColor
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0x2A69C50", Offset = "0x2A69C50", VA = "0x2A69C50")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x2A69C5C", Offset = "0x2A69C5C", VA = "0x2A69C5C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public Material blurShader
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0x2A69CF8", Offset = "0x2A69CF8", VA = "0x2A69CF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0x2A69D00", Offset = "0x2A69D00", VA = "0x2A69D00")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public Material downsampleShader
		{
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0x2A69D08", Offset = "0x2A69D08", VA = "0x2A69D08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0x2A69D10", Offset = "0x2A69D10", VA = "0x2A69D10")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public Material copyMipmapShader
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0x2A69D18", Offset = "0x2A69D18", VA = "0x2A69D18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0x2A69D20", Offset = "0x2A69D20", VA = "0x2A69D20")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public Material eraseShadowShader
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x2A69D28", Offset = "0x2A69D28", VA = "0x2A69D28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x2A69D30", Offset = "0x2A69D30", VA = "0x2A69D30")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public RenderTexture shadowTexture
		{
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x2A69D38", Offset = "0x2A69D38", VA = "0x2A69D38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		public bool testViewClip
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x2A69D40", Offset = "0x2A69D40", VA = "0x2A69D40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0x2A69D48", Offset = "0x2A69D48", VA = "0x2A69D48")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public Camera[] camerasForViewClipTest
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x2A69D54", Offset = "0x2A69D54", VA = "0x2A69D54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x2A69D5C", Offset = "0x2A69D5C", VA = "0x2A69D5C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public float cameraNearClipPlane
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x2A69D64", Offset = "0x2A69D64", VA = "0x2A69D64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x2A6A0EC", Offset = "0x2A6A0EC", VA = "0x2A6A0EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public LayerMask cameraCullingMask
		{
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x2A6A188", Offset = "0x2A6A188", VA = "0x2A6A188")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x2A6A224", Offset = "0x2A6A224", VA = "0x2A6A224")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public bool isProjectorVisible
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x2A6A3C8", Offset = "0x2A6A3C8", VA = "0x2A6A3C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EA")]
		private bool useIntermediateTexture
		{
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x2A69A68", Offset = "0x2A69A68", VA = "0x2A69A68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EB")]
		public CommandBuffer postProcessCommandBuffer
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x2A6B810", Offset = "0x2A6B810", VA = "0x2A6B810")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x2A6A2D0", Offset = "0x2A6A2D0", VA = "0x2A6A2D0")]
		public void SetReplacementShader(Shader shader, string replacementTag)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x2A699F0", Offset = "0x2A699F0", VA = "0x2A699F0")]
		public void SetTexturePropertyDirty()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x2A6A3D0", Offset = "0x2A6A3D0", VA = "0x2A6A3D0")]
		public void CreateRenderTexture()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x2A6A7A4", Offset = "0x2A6A7A4", VA = "0x2A6A7A4")]
		internal void AddCommandBuffer(CommandBuffer commandBuffer)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x2A6A7F4", Offset = "0x2A6A7F4", VA = "0x2A6A7F4")]
		internal void RemoveCommandBuffer(CommandBuffer commandBuffer)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x2A69DF0", Offset = "0x2A69DF0", VA = "0x2A69DF0")]
		private bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x2A6A84C", Offset = "0x2A6A84C", VA = "0x2A6A84C")]
		private bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x2A6AC9C", Offset = "0x2A6AC9C", VA = "0x2A6AC9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x2A6ACA0", Offset = "0x2A6ACA0", VA = "0x2A6ACA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x2A6AD34", Offset = "0x2A6AD34", VA = "0x2A6AD34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x2A6ADC8", Offset = "0x2A6ADC8", VA = "0x2A6ADC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x2A6AF04", Offset = "0x2A6AF04", VA = "0x2A6AF04")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x2A6A904", Offset = "0x2A6A904", VA = "0x2A6A904")]
		private void CloneProjectorMaterialIfShared()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x2A6B514", Offset = "0x2A6B514", VA = "0x2A6B514")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x2A6B2EC", Offset = "0x2A6B2EC", VA = "0x2A6B2EC")]
		private bool IsReadyToExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x2A6B260", Offset = "0x2A6B260", VA = "0x2A6B260")]
		private void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x2A6B884", Offset = "0x2A6B884", VA = "0x2A6B884")]
		private static void StaticInitialize()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x2A6BD1C", Offset = "0x2A6BD1C", VA = "0x2A6BD1C")]
		static ShadowTextureRenderer()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x2A6BE50", Offset = "0x2A6BE50", VA = "0x2A6BE50")]
		private void CreateTemporaryRenderTarget()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x2A6BEF0", Offset = "0x2A6BEF0", VA = "0x2A6BEF0")]
		private void ReleaseTemporaryRenderTarget()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x2A6BF88", Offset = "0x2A6BF88", VA = "0x2A6BF88")]
		private void ClearPropertyBlockPool()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x2A6BF90", Offset = "0x2A6BF90", VA = "0x2A6BF90")]
		private MaterialPropertyBlock AllocatePropertyBlock()
		{
			return null;
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x2A6C084", Offset = "0x2A6C084", VA = "0x2A6C084")]
		private void AddPostRenderPassCommands(CommandBuffer cmd, RenderTargetIdentifier srcId)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x2A6DE8C", Offset = "0x2A6DE8C", VA = "0x2A6DE8C")]
		private void AddEraseShadowOnBorderCommand(CommandBuffer cmd, int w, int h)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x2A6D95C", Offset = "0x2A6D95C", VA = "0x2A6D95C")]
		private void AddBlitToCurrentTargetCommand(CommandBuffer cmd, RenderTargetIdentifier srcId, Material mat, int pass, MaterialPropertyBlock properties)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x2A6E824", Offset = "0x2A6E824", VA = "0x2A6E824")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x2A6E88C", Offset = "0x2A6E88C", VA = "0x2A6E88C")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x2A6A818", Offset = "0x2A6A818", VA = "0x2A6A818")]
		private bool HasShadowColor()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x2A6F404", Offset = "0x2A6F404", VA = "0x2A6F404")]
		private void PrepareRendering()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x2A6F4B4", Offset = "0x2A6F4B4", VA = "0x2A6F4B4")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x2A6F518", Offset = "0x2A6F518", VA = "0x2A6F518")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x2A6F5C0", Offset = "0x2A6F5C0", VA = "0x2A6F5C0")]
		private static BlurParam GetBlurParam(float blurSize, BlurFilter filter)
		{
			return default(BlurParam);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x2A6FF6C", Offset = "0x2A6FF6C", VA = "0x2A6FF6C")]
		private static BlurParam GetDownsampleBlurParam(float blurSize, BlurFilter filter)
		{
			return default(BlurParam);
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x2A6DCD4", Offset = "0x2A6DCD4", VA = "0x2A6DCD4")]
		private void SetBlurShaderProperties(MaterialPropertyBlock dst, out BlurParam blurH, out BlurParam blurV)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x2A6E1A8", Offset = "0x2A6E1A8", VA = "0x2A6E1A8")]
		private void GetMipmapBlurParams(ref BlurParam blurH, ref BlurParam blurV)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x2A6E734", Offset = "0x2A6E734", VA = "0x2A6E734")]
		private void SetMipmapBlurShaderProperties(MaterialPropertyBlock dst, BlurParam blurH, BlurParam blurV)
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x2A6E33C", Offset = "0x2A6E33C", VA = "0x2A6E33C")]
		private void SetMipmapDownsampleWithBlurProperties(MaterialPropertyBlock dst, BlurParam blurH, BlurParam blurV, int w, int h)
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x2A70298", Offset = "0x2A70298", VA = "0x2A70298", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x2A7032C", Offset = "0x2A7032C", VA = "0x2A7032C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x2A70330", Offset = "0x2A70330", VA = "0x2A70330")]
		public ShadowTextureRenderer()
		{
		}
	}
}
namespace DynamicShadowProjector.Sample
{
	[Token(Token = "0x2000140")]
	public class Rotate : MonoBehaviour
	{
		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_rotateSpeed;

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x2A661AC", Offset = "0x2A661AC", VA = "0x2A661AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x2A66280", Offset = "0x2A66280", VA = "0x2A66280")]
		public Rotate()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class Swing : MonoBehaviour
	{
		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_minAngle;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_maxAngle;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_swingSpeed;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion m_initialRotation;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_swing;

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x16FC538", Offset = "0x16FC538", VA = "0x16FC538")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x16FC578", Offset = "0x16FC578", VA = "0x16FC578")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x16FC650", Offset = "0x16FC650", VA = "0x16FC650")]
		public Swing()
		{
		}
	}
}
namespace AvatarTesting
{
	[Token(Token = "0x2000142")]
	public class TestOpenAvatarEditor : MonoBehaviour
	{
		[Token(Token = "0x2000271")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xAB559C", Offset = "0xAB559C")]
		private sealed class <RefreshAvatar>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestOpenAvatarEditor <>4__this;

			[Token(Token = "0x17000262")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F69")]
				[Address(RVA = "0x1016D94", Offset = "0x1016D94", VA = "0x1016D94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000263")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F6B")]
				[Address(RVA = "0x1016DDC", Offset = "0x1016DDC", VA = "0x1016DDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x1016BE4", Offset = "0x1016BE4", VA = "0x1016BE4")]
			[DebuggerHidden]
			public <RefreshAvatar>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x1016C10", Offset = "0x1016C10", VA = "0x1016C10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F68")]
			[Address(RVA = "0x1016C14", Offset = "0x1016C14", VA = "0x1016C14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x1016D9C", Offset = "0x1016D9C", VA = "0x1016D9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Router gameState;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Router mainRouter;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Router settingRouter;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AvatarSelector avatarSelector;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isGoingToEditor;

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x170388C", Offset = "0x170388C", VA = "0x170388C")]
		public void PopupOpenEditor()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1703934", Offset = "0x1703934", VA = "0x1703934")]
		public void OpenEditor()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x170393C", Offset = "0x170393C", VA = "0x170393C")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1703954", Offset = "0x1703954", VA = "0x1703954")]
		private void ReturnToAvatarRoute()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1703B08", Offset = "0x1703B08", VA = "0x1703B08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xABBE2C", Offset = "0xABBE2C")]
		private IEnumerator RefreshAvatar()
		{
			return null;
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1703B80", Offset = "0x1703B80", VA = "0x1703B80")]
		public TestOpenAvatarEditor()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x1703B88", Offset = "0x1703B88", VA = "0x1703B88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBE8C", Offset = "0xABBE8C")]
		private void <PopupOpenEditor>b__5_0()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1703DF8", Offset = "0x1703DF8", VA = "0x1703DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xABBE9C", Offset = "0xABBE9C")]
		private void <PopupOpenEditor>b__5_1()
		{
		}
	}
}
