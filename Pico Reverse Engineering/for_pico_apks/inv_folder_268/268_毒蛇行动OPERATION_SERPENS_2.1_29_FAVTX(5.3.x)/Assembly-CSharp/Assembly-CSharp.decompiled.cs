using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using Bhaptics.Tact;
using Bhaptics.Tact.Unity;
using BoneTool.Script.Runtime;
using CurvedUI;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using Microsoft.CodeAnalysis;
using Oculus.Platform;
using Oculus.Spatializer.Propagation;
using Photon.Compression.Internal;
using Photon.Pun;
using Photon.Realtime;
using Photon.Utilities;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using RootMotion.Dynamics;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.SpatialTracking;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using Valve.VR;
using emotitron.Compression;
using s3DBakers.Buttons;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62CFD4", Offset = "0x62CFD4")]
internal sealed class <>f__AnonymousType0<<pose>j__TPar, <index>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x630EA4", Offset = "0x630EA4")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x630EB8", Offset = "0x630EB8")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x17000001")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<pose>j__TPar pose, <index>j__TPar index)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62CFE4", Offset = "0x62CFE4")]
internal sealed class <>f__AnonymousType1<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar>
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x630ECC", Offset = "0x630ECC")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x630EE0", Offset = "0x630EE0")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x630EF4", Offset = "0x630EF4")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x17000003")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000007")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000004")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000008")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000005")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000009")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x600000A")]
	[DebuggerHidden]
	public <>f__AnonymousType1(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass)
	{
	}

	[Token(Token = "0x600000B")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600000D")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62CFF4", Offset = "0x62CFF4")]
internal sealed class <>f__AnonymousType2<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar, <deviceRole>j__TPar, <modelNumber>j__TPar, <renderModel>j__TPar>
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x630F08", Offset = "0x630F08")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x630F1C", Offset = "0x630F1C")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x630F30", Offset = "0x630F30")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x630F44", Offset = "0x630F44")]
	private readonly <deviceRole>j__TPar <deviceRole>i__Field;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x630F58", Offset = "0x630F58")]
	private readonly <modelNumber>j__TPar <modelNumber>i__Field;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x630F6C", Offset = "0x630F6C")]
	private readonly <renderModel>j__TPar <renderModel>i__Field;

	[Token(Token = "0x17000006")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x600000E")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000007")]
	public <index>j__TPar index
	{
		[Token(Token = "0x600000F")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000008")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000010")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x17000009")]
	public <deviceRole>j__TPar deviceRole
	{
		[Token(Token = "0x6000011")]
		get
		{
			return (<deviceRole>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000A")]
	public <modelNumber>j__TPar modelNumber
	{
		[Token(Token = "0x6000012")]
		get
		{
			return (<modelNumber>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000B")]
	public <renderModel>j__TPar renderModel
	{
		[Token(Token = "0x6000013")]
		get
		{
			return (<renderModel>j__TPar)null;
		}
	}

	[Token(Token = "0x6000014")]
	[DebuggerHidden]
	public <>f__AnonymousType2(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass, <deviceRole>j__TPar deviceRole, <modelNumber>j__TPar modelNumber, <renderModel>j__TPar renderModel)
	{
	}

	[Token(Token = "0x6000015")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000016")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000017")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000005")]
	[Microsoft.CodeAnalysis.Embedded]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D004", Offset = "0x62D004")]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000018")]
		[Address(RVA = "0x8E4C50", Offset = "0x8E4C50", VA = "0x8E4C50")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000006")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D03C", Offset = "0x62D03C")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class IsReadOnlyAttribute : Attribute
	{
		[Token(Token = "0x6000019")]
		[Address(RVA = "0x8F6CD4", Offset = "0x8F6CD4", VA = "0x8F6CD4")]
		public IsReadOnlyAttribute()
		{
		}
	}
}
[Token(Token = "0x2000007")]
public class BhapticsAndroidBasicExample : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000008")]
	public struct BhapticsAndroidExampleButtons
	{
		[Token(Token = "0x4000011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button ping;

		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Button toggle;
	}

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BhapticsAndroidExampleButtons talButtons;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BhapticsAndroidExampleButtons suitButtons;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BhapticsAndroidExampleButtons armsLeftButtons;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BhapticsAndroidExampleButtons armsRightButtons;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text pairedDevicesCount;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xCB2B20", Offset = "0xCB2B20", VA = "0xCB2B20")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xCB2C68", Offset = "0xCB2C68", VA = "0xCB2C68")]
	private void Refresh()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xCB33C4", Offset = "0xCB33C4", VA = "0xCB33C4")]
	public void PingTactal()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xCB3488", Offset = "0xCB3488", VA = "0xCB3488")]
	public void PingTactSuit()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xCB34E4", Offset = "0xCB34E4", VA = "0xCB34E4")]
	public void PingTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xCB3554", Offset = "0xCB3554", VA = "0xCB3554")]
	public void ToggleTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xCB3420", Offset = "0xCB3420", VA = "0xCB3420")]
	private void PingPairedDevice(PositionType deviceType)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xCB397C", Offset = "0xCB397C", VA = "0xCB397C")]
	public BhapticsAndroidBasicExample()
	{
	}
}
[Token(Token = "0x2000009")]
public class BhapticsAndroidScanExample : MonoBehaviour
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_ControlButton[] controlButtons;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool open;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button activeButton;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xCB4D68", Offset = "0xCB4D68", VA = "0xCB4D68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xCB4F78", Offset = "0xCB4F78", VA = "0xCB4F78")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xCB5230", Offset = "0xCB5230", VA = "0xCB5230")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xCB5248", Offset = "0xCB5248", VA = "0xCB5248")]
	private void Open()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xCB4E80", Offset = "0xCB4E80", VA = "0xCB4E80")]
	private void Close()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xCB5340", Offset = "0xCB5340", VA = "0xCB5340")]
	public BhapticsAndroidScanExample()
	{
	}
}
[Token(Token = "0x200000A")]
public class BhapticsCharacterController : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float jumpSpeed;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gravity;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationSpeedH;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationSpeedV;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isEnableControl;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 moveDirection;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HapticSender tactSender;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630FA0", Offset = "0x630FA0")]
	public bool IsRaycastingShooting;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform shootingPoint;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630FE8", Offset = "0x630FE8")]
	private GameObject bulletPrefab;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterController characterController;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xCB5348", Offset = "0xCB5348", VA = "0xCB5348")]
	private void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xCB54C4", Offset = "0xCB54C4", VA = "0xCB54C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xCB54F0", Offset = "0xCB54F0", VA = "0xCB54F0")]
	private void ShootPlayer()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xCB5B8C", Offset = "0xCB5B8C", VA = "0xCB5B8C")]
	private void RotatePlayer()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xCB5A28", Offset = "0xCB5A28", VA = "0xCB5A28")]
	private void MovePlayer()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xCB5DDC", Offset = "0xCB5DDC", VA = "0xCB5DDC")]
	public BhapticsCharacterController()
	{
	}
}
[Token(Token = "0x200000B")]
public class BhapticsCustomHapticReceiver : MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PositionTag PositionTag;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xCB5E40", Offset = "0xCB5E40", VA = "0xCB5E40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xCB60B0", Offset = "0xCB60B0", VA = "0xCB60B0")]
	private void OnTriggerEnter(Collider bullet)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xCB6270", Offset = "0xCB6270", VA = "0xCB6270")]
	private void OnCollisionEnter(Collision bullet)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xCB617C", Offset = "0xCB617C", VA = "0xCB617C")]
	private void Handle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xCB5CC0", Offset = "0xCB5CC0", VA = "0xCB5CC0")]
	public void ReflectHandle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xCB6360", Offset = "0xCB6360", VA = "0xCB6360")]
	public BhapticsCustomHapticReceiver()
	{
	}
}
[Token(Token = "0x200000C")]
public class BhapticsDotPointControllerExample : MonoBehaviour
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClipPositionType clipPositionType;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<DotPoint> dotPointList;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string key;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int duration;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xCB6370", Offset = "0xCB6370", VA = "0xCB6370")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xCB63F0", Offset = "0xCB63F0", VA = "0xCB63F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xCB6570", Offset = "0xCB6570", VA = "0xCB6570")]
	public void Toggle(DotPoint dot)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xCB669C", Offset = "0xCB669C", VA = "0xCB669C")]
	private bool AddToList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xCB65FC", Offset = "0xCB65FC", VA = "0xCB65FC")]
	private bool RemoveAtList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xCB673C", Offset = "0xCB673C", VA = "0xCB673C")]
	public BhapticsDotPointControllerExample()
	{
	}
}
[Token(Token = "0x200000D")]
public class BhapticsDotPointExample : MonoBehaviour
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int motorIndex;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int motorIntensity;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BhapticsDotPointControllerExample controller;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DotPoint dotPoint;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xCB67E8", Offset = "0xCB67E8", VA = "0xCB67E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xCB6898", Offset = "0xCB6898", VA = "0xCB6898")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xCB6934", Offset = "0xCB6934", VA = "0xCB6934")]
	public BhapticsDotPointExample()
	{
	}
}
[Token(Token = "0x200000E")]
public class BhapticsFpsView : MonoBehaviour
{
	[Token(Token = "0x200000F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D074", Offset = "0x62D074")]
	private sealed class <FPS>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsFpsView <>4__this;

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] <buffer>5__2;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <frequency>5__4;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <initial>5__5;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <lastFrameCount>5__6;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <lastTime>5__7;

		[Token(Token = "0x1700000C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000046")]
			[Address(RVA = "0x7D675C", Offset = "0x7D675C", VA = "0x7D675C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000048")]
			[Address(RVA = "0x7D67A4", Offset = "0x7D67A4", VA = "0x7D67A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000043")]
		[Address(RVA = "0x7D6234", Offset = "0x7D6234", VA = "0x7D6234")]
		[DebuggerHidden]
		public <FPS>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0x7D6260", Offset = "0x7D6260", VA = "0x7D6260", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000045")]
		[Address(RVA = "0x7D6264", Offset = "0x7D6264", VA = "0x7D6264", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0x7D6764", Offset = "0x7D6764", VA = "0x7D6764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text fpsText;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xCB6944", Offset = "0xCB6944", VA = "0xCB6944")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xCB69A8", Offset = "0xCB69A8", VA = "0xCB69A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xCB69D4", Offset = "0xCB69D4", VA = "0xCB69D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x639B1C", Offset = "0x639B1C")]
	private IEnumerator FPS()
	{
		return null;
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xCB6A54", Offset = "0xCB6A54", VA = "0xCB6A54")]
	private float Average(float[] floats)
	{
		return default(float);
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xCB6AC8", Offset = "0xCB6AC8", VA = "0xCB6AC8")]
	public float Percentile(float[] sequence, float excelPercentile)
	{
		return default(float);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xCB6C1C", Offset = "0xCB6C1C", VA = "0xCB6C1C")]
	public BhapticsFpsView()
	{
	}
}
[Token(Token = "0x2000010")]
public class BhapticsHapticBullet : MonoBehaviour
{
	[Token(Token = "0x6000049")]
	[Address(RVA = "0xCB711C", Offset = "0xCB711C", VA = "0xCB711C")]
	private void Start()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xCB71A0", Offset = "0xCB71A0", VA = "0xCB71A0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xCB7220", Offset = "0xCB7220", VA = "0xCB7220")]
	public BhapticsHapticBullet()
	{
	}
}
[Token(Token = "0x2000011")]
public class BhapticsHapticClipExample : MonoBehaviour
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClip hapticClip;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xCB7228", Offset = "0xCB7228", VA = "0xCB7228")]
	public void Play()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xCB72C8", Offset = "0xCB72C8", VA = "0xCB72C8")]
	public void Stop()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xCB736C", Offset = "0xCB736C", VA = "0xCB736C")]
	public BhapticsHapticClipExample()
	{
	}
}
[Token(Token = "0x2000012")]
public class BhapticsIdentifierPlayExample : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D084", Offset = "0x62D084")]
	private sealed class <PlayCor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsIdentifierPlayExample <>4__this;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <bufferSize>5__2;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <index>5__3;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <identifier>5__4;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000058")]
			[Address(RVA = "0x7D6A1C", Offset = "0x7D6A1C", VA = "0x7D6A1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600005A")]
			[Address(RVA = "0x7D6A64", Offset = "0x7D6A64", VA = "0x7D6A64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000055")]
		[Address(RVA = "0x7D67AC", Offset = "0x7D67AC", VA = "0x7D67AC")]
		[DebuggerHidden]
		public <PlayCor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000056")]
		[Address(RVA = "0x7D67D8", Offset = "0x7D67D8", VA = "0x7D67D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000057")]
		[Address(RVA = "0x7D67DC", Offset = "0x7D67DC", VA = "0x7D67DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0x7D6A24", Offset = "0x7D6A24", VA = "0x7D6A24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip clip;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text identifierText;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool applyIdentifier;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xCB7374", Offset = "0xCB7374", VA = "0xCB7374")]
	private void Start()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xCB73EC", Offset = "0xCB73EC", VA = "0xCB73EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xCB7434", Offset = "0xCB7434", VA = "0xCB7434")]
	private void Update()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xCB7378", Offset = "0xCB7378", VA = "0xCB7378")]
	private void Play()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xCB7534", Offset = "0xCB7534", VA = "0xCB7534")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x639BD4", Offset = "0x639BD4")]
	private IEnumerator PlayCor()
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xCB75B4", Offset = "0xCB75B4", VA = "0xCB75B4")]
	public BhapticsIdentifierPlayExample()
	{
	}
}
[Token(Token = "0x2000014")]
public class BhapticsIsConnectIsPlayingExample : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip[] clips;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text isConnectText;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text clipText;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text isPlayingText;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xCB75BC", Offset = "0xCB75BC", VA = "0xCB75BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xCB77A8", Offset = "0xCB77A8", VA = "0xCB77A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xCB81FC", Offset = "0xCB81FC", VA = "0xCB81FC")]
	private void PlayClips()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xCB826C", Offset = "0xCB826C", VA = "0xCB826C")]
	public BhapticsIsConnectIsPlayingExample()
	{
	}
}
[Token(Token = "0x2000015")]
public class BhapticsLongTest : MonoBehaviour
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xCB8374", Offset = "0xCB8374", VA = "0xCB8374")]
	private void Start()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xCB83FC", Offset = "0xCB83FC", VA = "0xCB83FC")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xCB846C", Offset = "0xCB846C", VA = "0xCB846C")]
	private void ReloadScene()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xCB85D4", Offset = "0xCB85D4", VA = "0xCB85D4")]
	public BhapticsLongTest()
	{
	}
}
[Token(Token = "0x2000016")]
public class BhapticsProfiler : MonoBehaviour
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int numOfTactClips;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticClip[] tactClips;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hapticEnable;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int targetFrameRate;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xCB8BA0", Offset = "0xCB8BA0", VA = "0xCB8BA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xCB8C0C", Offset = "0xCB8C0C", VA = "0xCB8C0C")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xCB8E30", Offset = "0xCB8E30", VA = "0xCB8E30")]
	public BhapticsProfiler()
	{
	}
}
[Token(Token = "0x2000017")]
public class BhapticsReflectExample : MonoBehaviour
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmsHapticClip armsHapticClip;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isReflect;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xCB9204", Offset = "0xCB9204", VA = "0xCB9204")]
	public void Play()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xCB92A4", Offset = "0xCB92A4", VA = "0xCB92A4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xCB9348", Offset = "0xCB9348", VA = "0xCB9348")]
	public void OnClickToggle(Toggle toggle)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xCB9414", Offset = "0xCB9414", VA = "0xCB9414")]
	public BhapticsReflectExample()
	{
	}
}
[Token(Token = "0x2000018")]
public class BhapticsRotate : MonoBehaviour
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isRandom;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 axis;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xCB941C", Offset = "0xCB941C", VA = "0xCB941C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xCB947C", Offset = "0xCB947C", VA = "0xCB947C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xCB94D4", Offset = "0xCB94D4", VA = "0xCB94D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xCB950C", Offset = "0xCB950C", VA = "0xCB950C")]
	private void RandomAxis()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xCB9584", Offset = "0xCB9584", VA = "0xCB9584")]
	public BhapticsRotate()
	{
	}
}
[Token(Token = "0x2000019")]
public class BhapticsRotateExample : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VestHapticClip vestHapticClip;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x631094", Offset = "0x631094")]
	public Text angleXText;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text offsetYText;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float angleX;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float offsetY;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xCB959C", Offset = "0xCB959C", VA = "0xCB959C")]
	public void PlayWithRotate()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xCB965C", Offset = "0xCB965C", VA = "0xCB965C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xCB9700", Offset = "0xCB9700", VA = "0xCB9700")]
	public void OnAngleXChanged(Slider slider)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xCB97EC", Offset = "0xCB97EC", VA = "0xCB97EC")]
	public void OnOffsetYChanged(Slider slider)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xCB98E8", Offset = "0xCB98E8", VA = "0xCB98E8")]
	public BhapticsRotateExample()
	{
	}
}
[Token(Token = "0x200001A")]
public class BhapticsShootingCharacter : MonoBehaviour
{
	[Token(Token = "0x200001B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D094", Offset = "0x62D094")]
	private sealed class <RepeatShoot>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsShootingCharacter <>4__this;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600007F")]
			[Address(RVA = "0x7D6B98", Offset = "0x7D6B98", VA = "0x7D6B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000081")]
			[Address(RVA = "0x7D6BE0", Offset = "0x7D6BE0", VA = "0x7D6BE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600007C")]
		[Address(RVA = "0x7D6A6C", Offset = "0x7D6A6C", VA = "0x7D6A6C")]
		[DebuggerHidden]
		public <RepeatShoot>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600007D")]
		[Address(RVA = "0x7D6A98", Offset = "0x7D6A98", VA = "0x7D6A98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0x7D6A9C", Offset = "0x7D6A9C", VA = "0x7D6A9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000080")]
		[Address(RVA = "0x7D6BA0", Offset = "0x7D6BA0", VA = "0x7D6BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform shootPointLeft;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform shootPointRight;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject bulletPrefab;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6310E4", Offset = "0x6310E4")]
	private Transform[] lookingTransforms;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int shootCount;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float shootDelay;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float bulletSpeed;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xCB98F0", Offset = "0xCB98F0", VA = "0xCB98F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xCB9954", Offset = "0xCB9954", VA = "0xCB9954")]
	private void Update()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xCB9AF4", Offset = "0xCB9AF4", VA = "0xCB9AF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xCB9BA0", Offset = "0xCB9BA0", VA = "0xCB9BA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xCB9B20", Offset = "0xCB9B20", VA = "0xCB9B20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x639C8C", Offset = "0x639C8C")]
	private IEnumerator RepeatShoot()
	{
		return null;
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xCB9BA8", Offset = "0xCB9BA8", VA = "0xCB9BA8")]
	private void ShootTarget(int hand)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xCB9958", Offset = "0xCB9958", VA = "0xCB9958")]
	private void Looking()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xCB9E3C", Offset = "0xCB9E3C", VA = "0xCB9E3C")]
	public BhapticsShootingCharacter()
	{
	}
}
[Token(Token = "0x200001C")]
public class BhapticsStreamingTest : MonoBehaviour
{
	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HapticClip clip;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xCB9E58", Offset = "0xCB9E58", VA = "0xCB9E58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xCB9EB8", Offset = "0xCB9EB8", VA = "0xCB9EB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xCB9EBC", Offset = "0xCB9EBC", VA = "0xCB9EBC")]
	private void Check()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xCBA4B8", Offset = "0xCBA4B8", VA = "0xCBA4B8")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xCBA510", Offset = "0xCBA510", VA = "0xCBA510")]
	public BhapticsStreamingTest()
	{
	}
}
[Token(Token = "0x200001D")]
public class BhapticsTeleportPoint : MonoBehaviour
{
	[Token(Token = "0x6000087")]
	[Address(RVA = "0xCBA518", Offset = "0xCBA518", VA = "0xCBA518")]
	public BhapticsTeleportPoint()
	{
	}
}
[Token(Token = "0x200001E")]
public class BhapticsTestScript : MonoBehaviour
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider intensitySlider;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider durationSlider;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider offsetXSlider;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider offsetYSlider;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle reflectToggle;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button openBluetoothSettingButton;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button playButton;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Button toggleEnableAllButton;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xCBA520", Offset = "0xCBA520", VA = "0xCBA520")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xCBA71C", Offset = "0xCBA71C", VA = "0xCBA71C")]
	private void ToggleEnable()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xCBA868", Offset = "0xCBA868", VA = "0xCBA868")]
	private void Open()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xCBA8C0", Offset = "0xCBA8C0", VA = "0xCBA8C0")]
	private void Play()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xCBAAA8", Offset = "0xCBAAA8", VA = "0xCBAAA8")]
	public BhapticsTestScript()
	{
	}
}
[Token(Token = "0x200001F")]
public class BhapticsVisualFeedbackOnMotors : MonoBehaviour
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PositionType tactPositionType;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject visualMotorsObject;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Gradient hapticColor;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] visualMotors;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xCBADBC", Offset = "0xCBADBC", VA = "0xCBADBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xCBB038", Offset = "0xCBB038", VA = "0xCBB038")]
	private void Update()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xCBB138", Offset = "0xCBB138", VA = "0xCBB138")]
	private void ShowFeedbackEffect(int[] feedback)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xCBB298", Offset = "0xCBB298", VA = "0xCBB298")]
	public BhapticsVisualFeedbackOnMotors()
	{
	}
}
[Token(Token = "0x2000020")]
public class BhapticsVRBody : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform camera;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xCBACAC", Offset = "0xCBACAC", VA = "0xCBACAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xCBACB0", Offset = "0xCBACB0", VA = "0xCBACB0")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xCBADB4", Offset = "0xCBADB4", VA = "0xCBADB4")]
	public BhapticsVRBody()
	{
	}
}
[Token(Token = "0x2000021")]
public class BhapticsWidgetInstiate : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_UI widgetPrefab;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xCBB4A8", Offset = "0xCBB4A8", VA = "0xCBB4A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xCBB504", Offset = "0xCBB504", VA = "0xCBB504")]
	private void CreateWidget()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xCBB588", Offset = "0xCBB588", VA = "0xCBB588")]
	public BhapticsWidgetInstiate()
	{
	}
}
[Token(Token = "0x2000022")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62D0A4", Offset = "0x62D0A4")]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6311DC", Offset = "0x6311DC")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631214", Offset = "0x631214")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63124C", Offset = "0x63124C")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xCB5E30", Offset = "0xCB5E30", VA = "0xCB5E30")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x2000023")]
public class BhapticsLogger
{
	[Token(Token = "0x2000024")]
	public enum LogLevel
	{
		[Token(Token = "0x4000079")]
		Debug,
		[Token(Token = "0x400007A")]
		Info,
		[Token(Token = "0x400007B")]
		Error
	}

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xCB5144", Offset = "0xCB5144", VA = "0xCB5144")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xCB5FC0", Offset = "0xCB5FC0", VA = "0xCB5FC0")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xCB8274", Offset = "0xCB8274", VA = "0xCB8274")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xCB831C", Offset = "0xCB831C", VA = "0xCB831C")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x2000025")]
public class BhapticsManager
{
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xCB40F4", Offset = "0xCB40F4", VA = "0xCB40F4")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xCB85DC", Offset = "0xCB85DC", VA = "0xCB85DC")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xCB8634", Offset = "0xCB8634", VA = "0xCB8634")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xCB88A8", Offset = "0xCB88A8", VA = "0xCB88A8")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x2000026")]
public class BhapticsVisualizer : MonoBehaviour
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xCBB2A0", Offset = "0xCBB2A0", VA = "0xCBB2A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xCBB304", Offset = "0xCBB304", VA = "0xCBB304")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xCBB4A0", Offset = "0xCBB4A0", VA = "0xCBB4A0")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x2000027")]
public class Bhaptics_Setup : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BhapticsConfig Config;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xCBB590", Offset = "0xCBB590", VA = "0xCBB590")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xCBBA40", Offset = "0xCBBA40", VA = "0xCBBA40")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xCBB6A8", Offset = "0xCBB6A8", VA = "0xCBB6A8")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xCBBA98", Offset = "0xCBBA98", VA = "0xCBBA98")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x2000028")]
public class CompileTexture : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000029")]
	public class Label
	{
		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D labelTexture;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float posX;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float posY;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6312F4", Offset = "0x6312F4")]
		public float scale;

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x7D8550", Offset = "0x7D8550", VA = "0x7D8550")]
		public Label()
		{
		}
	}

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D[] mainSkins;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int mainTexOffsetX;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int mainTexOffsetY;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Label[] labels;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Texture2D newSkin;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Texture2D newSkinSaved;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Renderer objRenderer;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem fire;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Slider scaleSlider;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float scaleSaved;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Slider mainTexOffsetXSlider;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Slider mainTexOffsetYSlider;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int x;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int y;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int countX;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int countY;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool alreadyPainted;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool alreadyPaintedSaved;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Shop shop;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TabController tabController;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool labelSpawn;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private RaycastHit hit;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector2 pixelUV;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector2 pixelUVsaved;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Label> labelsSaved;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Texture2D countChengeLabel;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Texture2D cursorPaintLabel;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Texture2D cursor;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ComputeShader shader;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int kiMainSkin;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ComputeBuffer computeBuffer;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool changeMainSkin;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Texture2D newSkinTurnBack;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int kernelHandleMain;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int kernelHandle;

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xAEA390", Offset = "0xAEA390", VA = "0xAEA390")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xAEA6E8", Offset = "0xAEA6E8", VA = "0xAEA6E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xAEB05C", Offset = "0xAEB05C", VA = "0xAEB05C")]
	public void MainSkinMake()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xAEB2B0", Offset = "0xAEB2B0", VA = "0xAEB2B0")]
	public void TurnBack()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xAEAB7C", Offset = "0xAEAB7C", VA = "0xAEAB7C")]
	public void CompileTextureShader()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xAEB018", Offset = "0xAEB018", VA = "0xAEB018")]
	public void PaintLabel()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xAEB304", Offset = "0xAEB304", VA = "0xAEB304")]
	public void LabelScaleSlider()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xAEB374", Offset = "0xAEB374", VA = "0xAEB374")]
	public void MainTexOffsetYSlider()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xAEB3B4", Offset = "0xAEB3B4", VA = "0xAEB3B4")]
	public void MainTexOffsetXSlider()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xAEA7A8", Offset = "0xAEA7A8", VA = "0xAEA7A8")]
	public void TextureCreate()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xAEB3F4", Offset = "0xAEB3F4", VA = "0xAEB3F4")]
	public CompileTexture()
	{
	}
}
[Token(Token = "0x200002A")]
public class LabelSpawner : MonoBehaviour
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x8F8C6C", Offset = "0x8F8C6C", VA = "0x8F8C6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x8F8CD0", Offset = "0x8F8CD0", VA = "0x8F8CD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x8F8FC0", Offset = "0x8F8FC0", VA = "0x8F8FC0")]
	public LabelSpawner()
	{
	}
}
[Token(Token = "0x200002B")]
public class MeshCombiner : MonoBehaviour
{
	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xBAD8C8", Offset = "0xBAD8C8", VA = "0xBAD8C8")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xBAE400", Offset = "0xBAE400", VA = "0xBAE400")]
	private int Contains(ArrayList searchList, string searchName)
	{
		return default(int);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xBAE504", Offset = "0xBAE504", VA = "0xBAE504")]
	public MeshCombiner()
	{
	}
}
[Token(Token = "0x200002C")]
public class RotateObject : MonoBehaviour
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float rotSpeed;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xC6C248", Offset = "0xC6C248", VA = "0xC6C248")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xC6C350", Offset = "0xC6C350", VA = "0xC6C350")]
	public RotateObject()
	{
	}
}
[Token(Token = "0x200002D")]
public class Shop : MonoBehaviour
{
	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Transform target;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shopCamera;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] guns;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] newGunsArray;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject background;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scrollingSpeed;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float z;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 newPosition;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int currentIndex;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool createOnce;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CompileTexture compileTexture;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject embers;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public RotateObject rotateTarget;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TabController tabController;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject start;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xC6D100", Offset = "0xC6D100", VA = "0xC6D100")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xC6D41C", Offset = "0xC6D41C", VA = "0xC6D41C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xC6D6A8", Offset = "0xC6D6A8", VA = "0xC6D6A8")]
	public void MoveRight()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xC6D760", Offset = "0xC6D760", VA = "0xC6D760")]
	public void MoveLeft()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xC6D810", Offset = "0xC6D810", VA = "0xC6D810")]
	public void Enter()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xC6DA70", Offset = "0xC6DA70", VA = "0xC6DA70")]
	public void ActivateBackground()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xC6DB04", Offset = "0xC6DB04", VA = "0xC6DB04")]
	public Shop()
	{
	}
}
[Token(Token = "0x200002E")]
public class TabController : MonoBehaviour
{
	[Token(Token = "0x200002F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D110", Offset = "0x62D110")]
	private sealed class <OpenCloseTabCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TabController <>4__this;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CD")]
			[Address(RVA = "0xA7B138", Offset = "0xA7B138", VA = "0xA7B138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CF")]
			[Address(RVA = "0xA7B180", Offset = "0xA7B180", VA = "0xA7B180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xA7AF54", Offset = "0xA7AF54", VA = "0xA7AF54")]
		[DebuggerHidden]
		public <OpenCloseTabCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xA7AF80", Offset = "0xA7AF80", VA = "0xA7AF80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xA7AF84", Offset = "0xA7AF84", VA = "0xA7AF84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xA7B140", Offset = "0xA7B140", VA = "0xA7B140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform tab;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool open;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool move;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform skinsParent;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Texture2D[] skins;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image skinPrefab;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] skinsArray;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image skin;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public int countChenge;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public int countChengeLabel;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CompileTexture compileTexture;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Dropdown dropdownLabels;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Dropdown dropdownLabelsSaved;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool dontCallFunction;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x10DF43C", Offset = "0x10DF43C", VA = "0x10DF43C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x10DF9B8", Offset = "0x10DF9B8", VA = "0x10DF9B8")]
	public void ChangeLabelIndex()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x10DF9DC", Offset = "0x10DF9DC", VA = "0x10DF9DC")]
	public void SkinsChenge()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x10DFA88", Offset = "0x10DFA88", VA = "0x10DFA88")]
	public void OpenCloseTab()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x10DFAC8", Offset = "0x10DFAC8", VA = "0x10DFAC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x639D44", Offset = "0x639D44")]
	public IEnumerator OpenCloseTabCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x10DFB48", Offset = "0x10DFB48", VA = "0x10DFB48")]
	public TabController()
	{
	}
}
[Token(Token = "0x2000030")]
public class MLPForceSaveProbes : MonoBehaviour
{
	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xBA8A14", Offset = "0xBA8A14", VA = "0xBA8A14")]
	public MLPForceSaveProbes()
	{
	}
}
[Token(Token = "0x2000031")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x62D120", Offset = "0x62D120")]
public class FastList<T>
{
	[Token(Token = "0x2000032")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000033")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D158", Offset = "0x62D158")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000016")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60000F2")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000EF")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60000F0")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F1")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F3")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000014")]
	public int Count
	{
		[Token(Token = "0x60000D3")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public T Item
	{
		[Token(Token = "0x60000D5")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60000D6")]
		set
		{
		}
	}

	[Token(Token = "0x60000D1")]
	public FastList()
	{
	}

	[Token(Token = "0x60000D2")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60000D7")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60000D8")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60000D9")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60000DA")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60000DB")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DC")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60000DD")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DE")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60000DF")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E0")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60000E1")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60000E2")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60000E3")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000E4")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000E5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x639DFC", Offset = "0x639DFC")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60000E6")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60000E7")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60000E8")]
	private void Trim()
	{
	}

	[Token(Token = "0x60000E9")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000EA")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000034")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x8F41E8", Offset = "0x8F41E8", VA = "0x8F41E8")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000035")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x8F41B4", Offset = "0x8F41B4", VA = "0x8F41B4")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000036")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000037")]
	public delegate void OnClick();

	[Token(Token = "0x2000038")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000039")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200003A")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200003B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D168", Offset = "0x62D168")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000115")]
		[Address(RVA = "0x7D8F9C", Offset = "0x7D8F9C", VA = "0x7D8F9C")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0x7D8FA4", Offset = "0x7D8FA4", VA = "0x7D8FA4")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200003C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D178", Offset = "0x62D178")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000117")]
		[Address(RVA = "0x7D9068", Offset = "0x7D9068", VA = "0x7D9068")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x7D9070", Offset = "0x7D9070", VA = "0x7D9070")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200003D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D188", Offset = "0x62D188")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000119")]
		[Address(RVA = "0x7D9150", Offset = "0x7D9150", VA = "0x7D9150")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x600011A")]
		[Address(RVA = "0x7D9158", Offset = "0x7D9158", VA = "0x7D9158")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200003E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D198", Offset = "0x62D198")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600011B")]
		[Address(RVA = "0x7D9378", Offset = "0x7D9378", VA = "0x7D9378")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0x7D9380", Offset = "0x7D9380", VA = "0x7D9380")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200003F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D1A8", Offset = "0x62D1A8")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x600011D")]
		[Address(RVA = "0x7D93A4", Offset = "0x7D93A4", VA = "0x7D93A4")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x7D93AC", Offset = "0x7D93AC", VA = "0x7D93AC")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40000D3")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40000D4")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40000D5")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40000E2")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40000E3")]
	private const float marginH = 16f;

	[Token(Token = "0x40000E4")]
	private const float marginV = 16f;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x9B53A8", Offset = "0x9B53A8", VA = "0x9B53A8")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x9B58D4", Offset = "0x9B58D4", VA = "0x9B58D4")]
	public void Show()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x9B5EA0", Offset = "0x9B5EA0", VA = "0x9B5EA0")]
	public void Hide()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x9B5C90", Offset = "0x9B5C90", VA = "0x9B5C90")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x9B605C", Offset = "0x9B605C", VA = "0x9B605C")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x9B639C", Offset = "0x9B639C", VA = "0x9B639C")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x9B6638", Offset = "0x9B6638", VA = "0x9B6638")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x9B6744", Offset = "0x9B6744", VA = "0x9B6744")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x9B6930", Offset = "0x9B6930", VA = "0x9B6930")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x9B69D4", Offset = "0x9B69D4", VA = "0x9B69D4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x9B6BCC", Offset = "0x9B6BCC", VA = "0x9B6BCC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x9B6DDC", Offset = "0x9B6DDC", VA = "0x9B6DDC")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x9B70E8", Offset = "0x9B70E8", VA = "0x9B70E8")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x9B7188", Offset = "0x9B7188", VA = "0x9B7188")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000040")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x8ED138", Offset = "0x8ED138", VA = "0x8ED138")]
	private void Start()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x8ED1F0", Offset = "0x8ED1F0", VA = "0x8ED1F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x8ED2A8", Offset = "0x8ED2A8", VA = "0x8ED2A8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x8ED2E4", Offset = "0x8ED2E4", VA = "0x8ED2E4")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000041")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000042")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000101")]
		On,
		[Token(Token = "0x4000102")]
		Off,
		[Token(Token = "0x4000103")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000018")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x8F9130", Offset = "0x8F9130", VA = "0x8F9130")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x8F90EC", Offset = "0x8F90EC", VA = "0x8F90EC")]
		set
		{
		}
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x8F9138", Offset = "0x8F9138", VA = "0x8F9138")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x8F919C", Offset = "0x8F919C", VA = "0x8F919C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x8F92E8", Offset = "0x8F92E8", VA = "0x8F92E8", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x8F9304", Offset = "0x8F9304", VA = "0x8F9304", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x8F9358", Offset = "0x8F9358", VA = "0x8F9358")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x8F950C", Offset = "0x8F950C", VA = "0x8F950C")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x8F9620", Offset = "0x8F9620", VA = "0x8F9620")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x8F96BC", Offset = "0x8F96BC", VA = "0x8F96BC")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x8F9794", Offset = "0x8F9794", VA = "0x8F9794")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x8F9848", Offset = "0x8F9848", VA = "0x8F9848")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x8F993C", Offset = "0x8F993C", VA = "0x8F993C")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000043")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000104")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000105")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000106")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6313FC", Offset = "0x6313FC")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631434", Offset = "0x631434")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63146C", Offset = "0x63146C")]
	public float HeightOffset;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6314A4", Offset = "0x6314A4")]
	public float MinimumHeight;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6314DC", Offset = "0x6314DC")]
	public float MaximumHeight;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xB274BC", Offset = "0xB274BC", VA = "0xB274BC")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xB274C4", Offset = "0xB274C4", VA = "0xB274C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xB27558", Offset = "0xB27558", VA = "0xB27558")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xB275EC", Offset = "0xB275EC", VA = "0xB275EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xB27680", Offset = "0xB27680", VA = "0xB27680")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xB279A8", Offset = "0xB279A8", VA = "0xB279A8")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xB27BD4", Offset = "0xB27BD4", VA = "0xB27BD4")]
	private bool CheckCameraNearClipping([Out] float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000044")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xBA6170", Offset = "0xBA6170", VA = "0xBA6170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xBA623C", Offset = "0xBA623C", VA = "0xBA623C")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000045")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000046")]
	public enum States
	{
		[Token(Token = "0x4000134")]
		Ready,
		[Token(Token = "0x4000135")]
		Aim,
		[Token(Token = "0x4000136")]
		CancelAim,
		[Token(Token = "0x4000137")]
		PreTeleport,
		[Token(Token = "0x4000138")]
		CancelTeleport,
		[Token(Token = "0x4000139")]
		Teleporting,
		[Token(Token = "0x400013A")]
		PostTeleport
	}

	[Token(Token = "0x2000047")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x400013C")]
		None,
		[Token(Token = "0x400013D")]
		Aim,
		[Token(Token = "0x400013E")]
		PreTeleport,
		[Token(Token = "0x400013F")]
		Teleport
	}

	[Token(Token = "0x2000048")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000141")]
		Point,
		[Token(Token = "0x4000142")]
		Sphere,
		[Token(Token = "0x4000143")]
		Capsule
	}

	[Token(Token = "0x2000049")]
	public class AimData
	{
		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6318F4", Offset = "0x6318F4")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700001C")]
		public List<Vector3> Points
		{
			[Token(Token = "0x600016E")]
			[Address(RVA = "0x800DB0", Offset = "0x800DB0", VA = "0x800DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A364", Offset = "0x63A364")]
			get
			{
				return null;
			}
			[Token(Token = "0x600016F")]
			[Address(RVA = "0x800DB8", Offset = "0x800DB8", VA = "0x800DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A374", Offset = "0x63A374")]
			private set
			{
			}
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0x800D24", Offset = "0x800D24", VA = "0x800D24")]
		public AimData()
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x800DC0", Offset = "0x800DC0", VA = "0x800DC0")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200004A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D1B8", Offset = "0x62D1B8")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000174")]
			[Address(RVA = "0x800B70", Offset = "0x800B70", VA = "0x800B70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000176")]
			[Address(RVA = "0x800BB8", Offset = "0x800BB8", VA = "0x800BB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0x800A30", Offset = "0x800A30", VA = "0x800A30")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x800A5C", Offset = "0x800A5C", VA = "0x800A5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x800A60", Offset = "0x800A60", VA = "0x800A60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x800B78", Offset = "0x800B78", VA = "0x800B78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D1C8", Offset = "0x62D1C8")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600017A")]
			[Address(RVA = "0x80049C", Offset = "0x80049C", VA = "0x80049C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600017C")]
			[Address(RVA = "0x8004E4", Offset = "0x8004E4", VA = "0x8004E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0x800314", Offset = "0x800314", VA = "0x800314")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0x800340", Offset = "0x800340", VA = "0x800340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0x800344", Offset = "0x800344", VA = "0x800344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0x8004A4", Offset = "0x8004A4", VA = "0x8004A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D1D8", Offset = "0x62D1D8")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000180")]
			[Address(RVA = "0x8005C8", Offset = "0x8005C8", VA = "0x8005C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000182")]
			[Address(RVA = "0x800610", Offset = "0x800610", VA = "0x800610", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0x8004EC", Offset = "0x8004EC", VA = "0x8004EC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0x800518", Offset = "0x800518", VA = "0x800518", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0x80051C", Offset = "0x80051C", VA = "0x80051C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0x8005D0", Offset = "0x8005D0", VA = "0x8005D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D1E8", Offset = "0x62D1E8")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000186")]
			[Address(RVA = "0x8009E0", Offset = "0x8009E0", VA = "0x8009E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000188")]
			[Address(RVA = "0x800A28", Offset = "0x800A28", VA = "0x800A28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x8008C4", Offset = "0x8008C4", VA = "0x8008C4")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x8008F0", Offset = "0x8008F0", VA = "0x8008F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x8008F4", Offset = "0x8008F4", VA = "0x8008F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x8009E8", Offset = "0x8009E8", VA = "0x8009E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D1F8", Offset = "0x62D1F8")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600018C")]
			[Address(RVA = "0x8006F4", Offset = "0x8006F4", VA = "0x8006F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600018E")]
			[Address(RVA = "0x80073C", Offset = "0x80073C", VA = "0x80073C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x800618", Offset = "0x800618", VA = "0x800618")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0x800644", Offset = "0x800644", VA = "0x800644", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x800648", Offset = "0x800648", VA = "0x800648", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x8006FC", Offset = "0x8006FC", VA = "0x8006FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D208", Offset = "0x62D208")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000192")]
			[Address(RVA = "0x800CD4", Offset = "0x800CD4", VA = "0x800CD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000194")]
			[Address(RVA = "0x800D1C", Offset = "0x800D1C", VA = "0x800D1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0x800BC0", Offset = "0x800BC0", VA = "0x800BC0")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0x800BEC", Offset = "0x800BEC", VA = "0x800BEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0x800BF0", Offset = "0x800BF0", VA = "0x800BF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0x800CDC", Offset = "0x800CDC", VA = "0x800CDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D218", Offset = "0x62D218")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000198")]
			[Address(RVA = "0x800874", Offset = "0x800874", VA = "0x800874", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600019A")]
			[Address(RVA = "0x8008BC", Offset = "0x8008BC", VA = "0x8008BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0x800744", Offset = "0x800744", VA = "0x800744")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0x800770", Offset = "0x800770", VA = "0x800770", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0x800774", Offset = "0x800774", VA = "0x800774", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0x80087C", Offset = "0x80087C", VA = "0x80087C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631514", Offset = "0x631514")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63154C", Offset = "0x63154C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631584", Offset = "0x631584")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6315BC", Offset = "0x6315BC")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6315F4", Offset = "0x6315F4")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63162C", Offset = "0x63162C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631664", Offset = "0x631664")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63169C", Offset = "0x63169C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6316D4", Offset = "0x6316D4")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6316E4", Offset = "0x6316E4")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63171C", Offset = "0x63171C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631764", Offset = "0x631764")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631774", Offset = "0x631774")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6317AC", Offset = "0x6317AC")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6317E4", Offset = "0x6317E4")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63181C", Offset = "0x63181C")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000019")]
	public States CurrentState
	{
		[Token(Token = "0x600013B")]
		[Address(RVA = "0xBA6D38", Offset = "0xBA6D38", VA = "0xBA6D38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639EB4", Offset = "0x639EB4")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600013C")]
		[Address(RVA = "0xBA6D40", Offset = "0xBA6D40", VA = "0xBA6D40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639EC4", Offset = "0x639EC4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000140")]
		[Address(RVA = "0xBA6F54", Offset = "0xBA6F54", VA = "0xBA6F54")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700001B")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000141")]
		[Address(RVA = "0xBA6F7C", Offset = "0xBA6F7C", VA = "0xBA6F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639EF4", Offset = "0x639EF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000142")]
		[Address(RVA = "0xBA6F84", Offset = "0xBA6F84", VA = "0xBA6F84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639F04", Offset = "0x639F04")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600013D")]
		[Address(RVA = "0xBA6D48", Offset = "0xBA6D48", VA = "0xBA6D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639ED4", Offset = "0x639ED4")]
		add
		{
		}
		[Token(Token = "0x600013E")]
		[Address(RVA = "0xBA6DE8", Offset = "0xBA6DE8", VA = "0xBA6DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639EE4", Offset = "0x639EE4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600014C")]
		[Address(RVA = "0xBA75E0", Offset = "0xBA75E0", VA = "0xBA75E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639F4C", Offset = "0x639F4C")]
		add
		{
		}
		[Token(Token = "0x600014D")]
		[Address(RVA = "0xBA7680", Offset = "0xBA7680", VA = "0xBA7680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639F5C", Offset = "0x639F5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600014F")]
		[Address(RVA = "0xBA7720", Offset = "0xBA7720", VA = "0xBA7720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639FD4", Offset = "0x639FD4")]
		add
		{
		}
		[Token(Token = "0x6000150")]
		[Address(RVA = "0xBA77C0", Offset = "0xBA77C0", VA = "0xBA77C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639FE4", Offset = "0x639FE4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0xBA7860", Offset = "0xBA7860", VA = "0xBA7860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639FF4", Offset = "0x639FF4")]
		add
		{
		}
		[Token(Token = "0x6000152")]
		[Address(RVA = "0xBA7900", Offset = "0xBA7900", VA = "0xBA7900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A004", Offset = "0x63A004")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000154")]
		[Address(RVA = "0xBA7A10", Offset = "0xBA7A10", VA = "0xBA7A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A014", Offset = "0x63A014")]
		add
		{
		}
		[Token(Token = "0x6000155")]
		[Address(RVA = "0xBA7AB0", Offset = "0xBA7AB0", VA = "0xBA7AB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A024", Offset = "0x63A024")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000157")]
		[Address(RVA = "0xBA7BD0", Offset = "0xBA7BD0", VA = "0xBA7BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A09C", Offset = "0x63A09C")]
		add
		{
		}
		[Token(Token = "0x6000158")]
		[Address(RVA = "0xBA7C70", Offset = "0xBA7C70", VA = "0xBA7C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A0AC", Offset = "0x63A0AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x600015A")]
		[Address(RVA = "0xBA7D90", Offset = "0xBA7D90", VA = "0xBA7D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A124", Offset = "0x63A124")]
		add
		{
		}
		[Token(Token = "0x600015B")]
		[Address(RVA = "0xBA7E30", Offset = "0xBA7E30", VA = "0xBA7E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A134", Offset = "0x63A134")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600015D")]
		[Address(RVA = "0xBA7F50", Offset = "0xBA7F50", VA = "0xBA7F50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A1AC", Offset = "0x63A1AC")]
		add
		{
		}
		[Token(Token = "0x600015E")]
		[Address(RVA = "0xBA7FF0", Offset = "0xBA7FF0", VA = "0xBA7FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A1BC", Offset = "0x63A1BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000160")]
		[Address(RVA = "0xBA8110", Offset = "0xBA8110", VA = "0xBA8110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A234", Offset = "0x63A234")]
		add
		{
		}
		[Token(Token = "0x6000161")]
		[Address(RVA = "0xBA81B0", Offset = "0xBA81B0", VA = "0xBA81B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A244", Offset = "0x63A244")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000163")]
		[Address(RVA = "0xBA82D0", Offset = "0xBA82D0", VA = "0xBA82D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A2BC", Offset = "0x63A2BC")]
		add
		{
		}
		[Token(Token = "0x6000164")]
		[Address(RVA = "0xBA8370", Offset = "0xBA8370", VA = "0xBA8370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A2CC", Offset = "0x63A2CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000166")]
		[Address(RVA = "0xBA8490", Offset = "0xBA8490", VA = "0xBA8490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A344", Offset = "0x63A344")]
		add
		{
		}
		[Token(Token = "0x6000167")]
		[Address(RVA = "0xBA8530", Offset = "0xBA8530", VA = "0xBA8530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A354", Offset = "0x63A354")]
		remove
		{
		}
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xBA69DC", Offset = "0xBA69DC", VA = "0xBA69DC")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xBA6A00", Offset = "0xBA6A00", VA = "0xBA6A00")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xBA6E88", Offset = "0xBA6E88", VA = "0xBA6E88")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xBA6F8C", Offset = "0xBA6F8C", VA = "0xBA6F8C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, [Out] RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xBA71D8", Offset = "0xBA71D8", VA = "0xBA71D8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x639F14", Offset = "0x639F14")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xBA7294", Offset = "0xBA7294", VA = "0xBA7294")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xBA7394", Offset = "0xBA7394", VA = "0xBA7394")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xBA73B4", Offset = "0xBA73B4", VA = "0xBA73B4")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xBA7478", Offset = "0xBA7478", VA = "0xBA7478")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xBA74BC", Offset = "0xBA74BC", VA = "0xBA74BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xBA7528", Offset = "0xBA7528", VA = "0xBA7528", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xBA75D8", Offset = "0xBA75D8", VA = "0xBA75D8", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xBA7558", Offset = "0xBA7558", VA = "0xBA7558")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x639F6C", Offset = "0x639F6C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xBA79A0", Offset = "0xBA79A0", VA = "0xBA79A0")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xBA7B50", Offset = "0xBA7B50", VA = "0xBA7B50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A034", Offset = "0x63A034")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xBA7D10", Offset = "0xBA7D10", VA = "0xBA7D10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A0BC", Offset = "0x63A0BC")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xBA7ED0", Offset = "0xBA7ED0", VA = "0xBA7ED0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A144", Offset = "0x63A144")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xBA8090", Offset = "0xBA8090", VA = "0xBA8090")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A1CC", Offset = "0x63A1CC")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xBA8250", Offset = "0xBA8250", VA = "0xBA8250")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A254", Offset = "0x63A254")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xBA8410", Offset = "0xBA8410", VA = "0xBA8410")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A2DC", Offset = "0x63A2DC")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xBA85D0", Offset = "0xBA85D0", VA = "0xBA85D0")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xBA8710", Offset = "0xBA8710", VA = "0xBA8710")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xBA8744", Offset = "0xBA8744", VA = "0xBA8744")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xBA880C", Offset = "0xBA880C", VA = "0xBA880C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xBA8904", Offset = "0xBA8904", VA = "0xBA8904")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000051")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0xC6DB14", Offset = "0xC6DB14", VA = "0xC6DB14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A5B4", Offset = "0x63A5B4")]
		add
		{
		}
		[Token(Token = "0x600019C")]
		[Address(RVA = "0xC6DBB4", Offset = "0xC6DBB4", VA = "0xC6DBB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A5C4", Offset = "0x63A5C4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0xC6DC54", Offset = "0xC6DC54", VA = "0xC6DC54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A5D4", Offset = "0x63A5D4")]
		add
		{
		}
		[Token(Token = "0x600019E")]
		[Address(RVA = "0xC6DCF4", Offset = "0xC6DCF4", VA = "0xC6DCF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A5E4", Offset = "0x63A5E4")]
		remove
		{
		}
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xC6DD94", Offset = "0xC6DD94", VA = "0xC6DD94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xC6DE80", Offset = "0xC6DE80", VA = "0xC6DE80")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xC6DE84", Offset = "0xC6DE84", VA = "0xC6DE84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xC6DEF8", Offset = "0xC6DEF8", VA = "0xC6DEF8")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xC6E01C", Offset = "0xC6E01C", VA = "0xC6E01C")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xC6E204", Offset = "0xC6E204", VA = "0xC6E204")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xC6E3CC", Offset = "0xC6E3CC", VA = "0xC6E3CC")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000052")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x10DFB58", Offset = "0x10DFB58", VA = "0x10DFB58", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x10DFC00", Offset = "0x10DFC00", VA = "0x10DFC00", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60001A8")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x10DFCF0", Offset = "0x10DFCF0", VA = "0x10DFCF0")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000053")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631924", Offset = "0x631924")]
	public float Range;

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x10DFD00", Offset = "0x10DFD00", VA = "0x10DFD00", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x10DFDFC", Offset = "0x10DFDFC", VA = "0x10DFDFC")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000054")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63195C", Offset = "0x63195C")]
	public float Range;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631994", Offset = "0x631994")]
	public float MinimumElevation;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6319CC", Offset = "0x6319CC")]
	public float Gravity;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x631A04", Offset = "0x631A04")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631A04", Offset = "0x631A04")]
	public float AimVelocity;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631A60", Offset = "0x631A60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x631A60", Offset = "0x631A60")]
	public float AimStep;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x10DFE0C", Offset = "0x10DFE0C", VA = "0x10DFE0C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x10DFF9C", Offset = "0x10DFF9C", VA = "0x10DFF9C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000055")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631AB8", Offset = "0x631AB8")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x10DFFB0", Offset = "0x10DFFB0", VA = "0x10DFFB0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x10E00FC", Offset = "0x10E00FC", VA = "0x10E00FC")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x10E012C", Offset = "0x10E012C", VA = "0x10E012C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x10E015C", Offset = "0x10E015C", VA = "0x10E015C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x10E0214", Offset = "0x10E0214", VA = "0x10E0214", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x10E0280", Offset = "0x10E0280", VA = "0x10E0280", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x10E02E8", Offset = "0x10E02E8", VA = "0x10E02E8")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000056")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631AF0", Offset = "0x631AF0")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631B00", Offset = "0x631B00")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631B38", Offset = "0x631B38")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631B70", Offset = "0x631B70")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700002B")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x10E040C", Offset = "0x10E040C", VA = "0x10E040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A5F4", Offset = "0x63A5F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x10E0414", Offset = "0x10E0414", VA = "0x10E0414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A604", Offset = "0x63A604")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x10E05D8", Offset = "0x10E05D8", VA = "0x10E05D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A614", Offset = "0x63A614")]
		add
		{
		}
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x10E0678", Offset = "0x10E0678", VA = "0x10E0678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A624", Offset = "0x63A624")]
		remove
		{
		}
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x10E0420", Offset = "0x10E0420", VA = "0x10E0420")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x10E04C0", Offset = "0x10E04C0", VA = "0x10E04C0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x10E0594", Offset = "0x10E0594", VA = "0x10E0594")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x10E05D4", Offset = "0x10E05D4", VA = "0x10E05D4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x10E0718", Offset = "0x10E0718", VA = "0x10E0718")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x10E077C", Offset = "0x10E077C", VA = "0x10E077C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x10E07A0", Offset = "0x10E07A0", VA = "0x10E07A0", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000057")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000058")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D228", Offset = "0x62D228")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001CC")]
			[Address(RVA = "0xA7B36C", Offset = "0xA7B36C", VA = "0xA7B36C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001CE")]
			[Address(RVA = "0xA7B3B4", Offset = "0xA7B3B4", VA = "0xA7B3B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xA7B2A4", Offset = "0xA7B2A4", VA = "0xA7B2A4")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xA7B2D0", Offset = "0xA7B2D0", VA = "0xA7B2D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xA7B2D4", Offset = "0xA7B2D4", VA = "0xA7B2D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xA7B374", Offset = "0xA7B374", VA = "0xA7B374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000059")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D238", Offset = "0x62D238")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D2")]
			[Address(RVA = "0xA7B254", Offset = "0xA7B254", VA = "0xA7B254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D4")]
			[Address(RVA = "0xA7B29C", Offset = "0xA7B29C", VA = "0xA7B29C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xA7B188", Offset = "0xA7B188", VA = "0xA7B188")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xA7B1B4", Offset = "0xA7B1B4", VA = "0xA7B1B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xA7B1B8", Offset = "0xA7B1B8", VA = "0xA7B1B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xA7B25C", Offset = "0xA7B25C", VA = "0xA7B25C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x10E09AC", Offset = "0x10E09AC", VA = "0x10E09AC")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x10E0A88", Offset = "0x10E0A88", VA = "0x10E0A88", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x10E0AE8", Offset = "0x10E0AE8", VA = "0x10E0AE8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x10E0BA8", Offset = "0x10E0BA8", VA = "0x10E0BA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A634", Offset = "0x63A634")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x10E0C28", Offset = "0x10E0C28", VA = "0x10E0C28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A69C", Offset = "0x63A69C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60001C6")]
	public abstract void GetAimData([Out] Ray aimRay);

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x10E0CA8", Offset = "0x10E0CA8", VA = "0x10E0CA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A704", Offset = "0x63A704")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x10E0CD4", Offset = "0x10E0CD4", VA = "0x10E0CD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A714", Offset = "0x63A714")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200005A")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631BB8", Offset = "0x631BB8")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631BC8", Offset = "0x631BC8")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631C00", Offset = "0x631C00")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631C38", Offset = "0x631C38")]
	public bool FastTeleport;

	[Token(Token = "0x17000030")]
	public Transform Pointer
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x10E0D00", Offset = "0x10E0D00", VA = "0x10E0D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A7C4", Offset = "0x63A7C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x10E0D08", Offset = "0x10E0D08", VA = "0x10E0D08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A7D4", Offset = "0x63A7D4")]
		private set
		{
		}
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x10E0D10", Offset = "0x10E0D10", VA = "0x10E0D10", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x10E0E60", Offset = "0x10E0E60", VA = "0x10E0E60", Slot = "9")]
	public override void GetAimData([Out] Ray aimRay)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x10E0F18", Offset = "0x10E0F18", VA = "0x10E0F18")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200005B")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200005C")]
	public enum InputModes
	{
		[Token(Token = "0x4000194")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000195")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000196")]
		ThumbstickTeleport,
		[Token(Token = "0x4000197")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200005D")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000199")]
		A,
		[Token(Token = "0x400019A")]
		B,
		[Token(Token = "0x400019B")]
		LeftTrigger,
		[Token(Token = "0x400019C")]
		LeftThumbstick,
		[Token(Token = "0x400019D")]
		RightTrigger,
		[Token(Token = "0x400019E")]
		RightThumbstick,
		[Token(Token = "0x400019F")]
		X,
		[Token(Token = "0x40001A0")]
		Y
	}

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631C70", Offset = "0x631C70")]
	public InputModes InputMode;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631CA8", Offset = "0x631CA8")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631CE0", Offset = "0x631CE0")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631D18", Offset = "0x631D18")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x10E0F1C", Offset = "0x10E0F1C", VA = "0x10E0F1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x10E0F20", Offset = "0x10E0F20", VA = "0x10E0F20", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x10E12F0", Offset = "0x10E12F0", VA = "0x10E12F0", Slot = "9")]
	public override void GetAimData([Out] Ray aimRay)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x10E13B0", Offset = "0x10E13B0", VA = "0x10E13B0")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200005E")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200005F")]
	public enum OrientationModes
	{
		[Token(Token = "0x40001A5")]
		HeadRelative,
		[Token(Token = "0x40001A6")]
		ForwardFacing
	}

	[Token(Token = "0x2000060")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D248", Offset = "0x62D248")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001EA")]
			[Address(RVA = "0xA7B49C", Offset = "0xA7B49C", VA = "0xA7B49C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EC")]
			[Address(RVA = "0xA7B4E4", Offset = "0xA7B4E4", VA = "0xA7B4E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xA7B3BC", Offset = "0xA7B3BC", VA = "0xA7B3BC")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xA7B3E8", Offset = "0xA7B3E8", VA = "0xA7B3E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xA7B3EC", Offset = "0xA7B3EC", VA = "0xA7B3EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xA7B4A4", Offset = "0xA7B4A4", VA = "0xA7B4A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x10E14A4", Offset = "0x10E14A4", VA = "0x10E14A4")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x10E15B0", Offset = "0x10E15B0", VA = "0x10E15B0")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x10E15B8", Offset = "0x10E15B8", VA = "0x10E15B8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x10E1604", Offset = "0x10E1604", VA = "0x10E1604", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x10E164C", Offset = "0x10E164C", VA = "0x10E164C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A7E4", Offset = "0x63A7E4")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001E3")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60001E4")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x10E16CC", Offset = "0x10E16CC", VA = "0x10E16CC")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x10E1788", Offset = "0x10E1788", VA = "0x10E1788")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A84C", Offset = "0x63A84C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000061")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x10E17B4", Offset = "0x10E17B4", VA = "0x10E17B4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x10E17B8", Offset = "0x10E17B8", VA = "0x10E17B8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x10E1834", Offset = "0x10E1834", VA = "0x10E1834")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000062")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631D50", Offset = "0x631D50")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631D88", Offset = "0x631D88")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631DC0", Offset = "0x631DC0")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631DF8", Offset = "0x631DF8")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x10E1838", Offset = "0x10E1838", VA = "0x10E1838", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x10E1864", Offset = "0x10E1864", VA = "0x10E1864", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x10E1C0C", Offset = "0x10E1C0C", VA = "0x10E1C0C")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000063")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631E30", Offset = "0x631E30")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631E68", Offset = "0x631E68")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631EA0", Offset = "0x631EA0")]
	public float RotateStickThreshold;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x10E1C10", Offset = "0x10E1C10", VA = "0x10E1C10", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x10E1C54", Offset = "0x10E1C54", VA = "0x10E1C54", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x10E1FF4", Offset = "0x10E1FF4", VA = "0x10E1FF4")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000064")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x10E2004", Offset = "0x10E2004", VA = "0x10E2004")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x10E2008", Offset = "0x10E2008", VA = "0x10E2008")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x10E2010", Offset = "0x10E2010", VA = "0x10E2010")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x10E20D4", Offset = "0x10E20D4", VA = "0x10E20D4")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x10E20FC", Offset = "0x10E20FC", VA = "0x10E20FC")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000065")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631ED8", Offset = "0x631ED8")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000033")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x10E2114", Offset = "0x10E2114", VA = "0x10E2114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A8AC", Offset = "0x63A8AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x10E211C", Offset = "0x10E211C", VA = "0x10E211C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A8BC", Offset = "0x63A8BC")]
		private set
		{
		}
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x10DFB8C", Offset = "0x10DFB8C", VA = "0x10DFB8C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x10DFCBC", Offset = "0x10DFCBC", VA = "0x10DFCBC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x10E2124", Offset = "0x10E2124", VA = "0x10E2124")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x63A8CC", Offset = "0x63A8CC")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x10E0274", Offset = "0x10E0274", VA = "0x10E0274", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x10E02E0", Offset = "0x10E02E0", VA = "0x10E02E0", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x10DFCF8", Offset = "0x10DFCF8", VA = "0x10DFCF8")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000066")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000067")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D258", Offset = "0x62D258")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600020E")]
			[Address(RVA = "0xA7B7BC", Offset = "0xA7B7BC", VA = "0xA7B7BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000210")]
			[Address(RVA = "0xA7B804", Offset = "0xA7B804", VA = "0xA7B804", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0xA7B4EC", Offset = "0xA7B4EC", VA = "0xA7B4EC")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0xA7B518", Offset = "0xA7B518", VA = "0xA7B518", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0xA7B51C", Offset = "0xA7B51C", VA = "0xA7B51C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0xA7B7C4", Offset = "0xA7B7C4", VA = "0xA7B7C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631EE8", Offset = "0x631EE8")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40001C0")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x10E2200", Offset = "0x10E2200", VA = "0x10E2200")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x10E2328", Offset = "0x10E2328", VA = "0x10E2328", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x10E2358", Offset = "0x10E2358", VA = "0x10E2358", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x10E2384", Offset = "0x10E2384", VA = "0x10E2384")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A904", Offset = "0x63A904")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x10E2404", Offset = "0x10E2404", VA = "0x10E2404", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000208")]
	protected abstract bool ConsiderTeleport(Vector3 start, Vector3 end);

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x10E2424", Offset = "0x10E2424", VA = "0x10E2424", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x10E2544", Offset = "0x10E2544", VA = "0x10E2544")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A96C", Offset = "0x63A96C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000068")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x10E2570", Offset = "0x10E2570", VA = "0x10E2570")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x10E25DC", Offset = "0x10E25DC", VA = "0x10E25DC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x10E26D4", Offset = "0x10E26D4", VA = "0x10E26D4", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x10E27CC", Offset = "0x10E27CC", VA = "0x10E27CC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x63A9CC", Offset = "0x63A9CC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x10E27D0", Offset = "0x10E27D0", VA = "0x10E27D0")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000069")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631F20", Offset = "0x631F20")]
	public float LOSOffset;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631F58", Offset = "0x631F58")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x10E27DC", Offset = "0x10E27DC", VA = "0x10E27DC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x10E29E8", Offset = "0x10E29E8", VA = "0x10E29E8")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200006A")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000218")]
	[Address(RVA = "0x10E29F4", Offset = "0x10E29F4", VA = "0x10E29F4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x10E2AEC", Offset = "0x10E2AEC", VA = "0x10E2AEC")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200006B")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600021A")]
	[Address(RVA = "0x10E2AF0", Offset = "0x10E2AF0", VA = "0x10E2AF0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x10E2B84", Offset = "0x10E2B84", VA = "0x10E2B84", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600021C")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x10E2C14", Offset = "0x10E2C14", VA = "0x10E2C14")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200006C")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200006D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D268", Offset = "0x62D268")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000224")]
			[Address(RVA = "0xA7B944", Offset = "0xA7B944", VA = "0xA7B944", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000226")]
			[Address(RVA = "0xA7B98C", Offset = "0xA7B98C", VA = "0xA7B98C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0xA7B80C", Offset = "0xA7B80C", VA = "0xA7B80C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0xA7B838", Offset = "0xA7B838", VA = "0xA7B838", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0xA7B83C", Offset = "0xA7B83C", VA = "0xA7B83C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0xA7B94C", Offset = "0xA7B94C", VA = "0xA7B94C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631F90", Offset = "0x631F90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x631F90", Offset = "0x631F90")]
	public float TransitionDuration;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x631FE8", Offset = "0x631FE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x631FE8", Offset = "0x631FE8")]
	public float TeleportDelay;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63203C", Offset = "0x63203C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x10E2C1C", Offset = "0x10E2C1C", VA = "0x10E2C1C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x10E2C48", Offset = "0x10E2C48", VA = "0x10E2C48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AA04", Offset = "0x63AA04")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x10E2CC8", Offset = "0x10E2CC8", VA = "0x10E2CC8")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200006E")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000227")]
	[Address(RVA = "0x10E2E74", Offset = "0x10E2E74", VA = "0x10E2E74", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x10E2E94", Offset = "0x10E2E94", VA = "0x10E2E94")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200006F")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000070")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D278", Offset = "0x62D278")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600022F")]
			[Address(RVA = "0xA7BAF0", Offset = "0xA7BAF0", VA = "0xA7BAF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000231")]
			[Address(RVA = "0xA7BB38", Offset = "0xA7BB38", VA = "0xA7BB38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0xA7B994", Offset = "0xA7B994", VA = "0xA7B994")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0xA7B9C0", Offset = "0xA7B9C0", VA = "0xA7B9C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0xA7B9C4", Offset = "0xA7B9C4", VA = "0xA7B9C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0xA7BAF8", Offset = "0xA7BAF8", VA = "0xA7BAF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632074", Offset = "0x632074")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x632074", Offset = "0x632074")]
	public float TransitionDuration;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x10E2E9C", Offset = "0x10E2E9C", VA = "0x10E2E9C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x10E2EC8", Offset = "0x10E2EC8", VA = "0x10E2EC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AABC", Offset = "0x63AABC")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x10E2F48", Offset = "0x10E2F48", VA = "0x10E2F48")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000071")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000072")]
	public enum PlabackState
	{
		[Token(Token = "0x40001ED")]
		Idle = 1,
		[Token(Token = "0x40001EE")]
		Preparing,
		[Token(Token = "0x40001EF")]
		Buffering,
		[Token(Token = "0x40001F0")]
		Ready,
		[Token(Token = "0x40001F1")]
		Ended
	}

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700003A")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x12E4EA0", Offset = "0x12E4EA0", VA = "0x12E4EA0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003B")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x12E51D0", Offset = "0x12E51D0", VA = "0x12E51D0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003C")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x12E54A0", Offset = "0x12E54A0", VA = "0x12E54A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003D")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x12E5510", Offset = "0x12E5510", VA = "0x12E5510")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003E")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x12E5628", Offset = "0x12E5628", VA = "0x12E5628")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700003F")]
	public static long Duration
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x12E5744", Offset = "0x12E5744", VA = "0x12E5744")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000040")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x12E5860", Offset = "0x12E5860", VA = "0x12E5860")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000239")]
		[Address(RVA = "0x12E597C", Offset = "0x12E597C", VA = "0x12E597C")]
		set
		{
		}
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x12E5B00", Offset = "0x12E5B00", VA = "0x12E5B00")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x12E5D34", Offset = "0x12E5D34", VA = "0x12E5D34")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x12E5E50", Offset = "0x12E5E50", VA = "0x12E5E50")]
	public static void Play()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x12E5F6C", Offset = "0x12E5F6C", VA = "0x12E5F6C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x12E6088", Offset = "0x12E6088", VA = "0x12E6088")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x12E620C", Offset = "0x12E620C", VA = "0x12E620C")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x12E6394", Offset = "0x12E6394", VA = "0x12E6394")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000073")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000242")]
		[Address(RVA = "0xCCBDA8", Offset = "0xCCBDA8", VA = "0xCCBDA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AB74", Offset = "0x63AB74")]
		add
		{
		}
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xCCBE48", Offset = "0xCCBE48", VA = "0xCCBE48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AB84", Offset = "0x63AB84")]
		remove
		{
		}
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xCCBEE8", Offset = "0xCCBEE8", VA = "0xCCBEE8", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xCCBEFC", Offset = "0xCCBEFC", VA = "0xCCBEFC")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000074")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000075")]
	public enum ButtonType
	{
		[Token(Token = "0x40001F5")]
		Play,
		[Token(Token = "0x40001F6")]
		Pause,
		[Token(Token = "0x40001F7")]
		FastForward,
		[Token(Token = "0x40001F8")]
		Rewind,
		[Token(Token = "0x40001F9")]
		SkipForward,
		[Token(Token = "0x40001FA")]
		SkipBack,
		[Token(Token = "0x40001FB")]
		Stop
	}

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000041")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0xBAC114", Offset = "0xBAC114", VA = "0xBAC114")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000247")]
		[Address(RVA = "0xBAC11C", Offset = "0xBAC11C", VA = "0xBAC11C")]
		set
		{
		}
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xBAC140", Offset = "0xBAC140", VA = "0xBAC140", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xBAD5DC", Offset = "0xBAD5DC", VA = "0xBAD5DC")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000076")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000077")]
	public enum VideoShape
	{
		[Token(Token = "0x400020F")]
		_360,
		[Token(Token = "0x4000210")]
		_180,
		[Token(Token = "0x4000211")]
		Quad
	}

	[Token(Token = "0x2000078")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000213")]
		Mono,
		[Token(Token = "0x4000214")]
		TopBottom,
		[Token(Token = "0x4000215")]
		LeftRight,
		[Token(Token = "0x4000216")]
		BottomTop
	}

	[Token(Token = "0x2000079")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D288", Offset = "0x62D288")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000260")]
			[Address(RVA = "0x801384", Offset = "0x801384", VA = "0x801384", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000262")]
			[Address(RVA = "0x8013CC", Offset = "0x8013CC", VA = "0x8013CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0x801190", Offset = "0x801190", VA = "0x801190")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0x8011BC", Offset = "0x8011BC", VA = "0x8011BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0x8011C0", Offset = "0x8011C0", VA = "0x8011C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0x80138C", Offset = "0x80138C", VA = "0x80138C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D298", Offset = "0x62D298")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x801098", Offset = "0x801098", VA = "0x801098")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x8010A0", Offset = "0x8010A0", VA = "0x8010A0")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6320FC", Offset = "0x6320FC")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63210C", Offset = "0x63210C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63211C", Offset = "0x63211C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000042")]
	public bool IsPlaying
	{
		[Token(Token = "0x600024A")]
		[Address(RVA = "0xBAFFDC", Offset = "0xBAFFDC", VA = "0xBAFFDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AB94", Offset = "0x63AB94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600024B")]
		[Address(RVA = "0xBAFFE4", Offset = "0xBAFFE4", VA = "0xBAFFE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63ABA4", Offset = "0x63ABA4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public long Duration
	{
		[Token(Token = "0x600024C")]
		[Address(RVA = "0xBAFFF0", Offset = "0xBAFFF0", VA = "0xBAFFF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63ABB4", Offset = "0x63ABB4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600024D")]
		[Address(RVA = "0xBAFFF8", Offset = "0xBAFFF8", VA = "0xBAFFF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63ABC4", Offset = "0x63ABC4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0xBB0000", Offset = "0xBB0000", VA = "0xBB0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63ABD4", Offset = "0x63ABD4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xBB0008", Offset = "0xBB0008", VA = "0xBB0008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63ABE4", Offset = "0x63ABE4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xBB0010", Offset = "0xBB0010", VA = "0xBB0010")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xBB02C4", Offset = "0xBB02C4", VA = "0xBB02C4")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xBB0328", Offset = "0xBB0328", VA = "0xBB0328")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xBB059C", Offset = "0xBB059C", VA = "0xBB059C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63ABF4", Offset = "0x63ABF4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xBB061C", Offset = "0xBB061C", VA = "0xBB061C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xBB0908", Offset = "0xBB0908", VA = "0xBB0908")]
	public void Play()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xBB099C", Offset = "0xBB099C", VA = "0xBB099C")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xBB0A2C", Offset = "0xBB0A2C", VA = "0xBB0A2C")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xBB0B30", Offset = "0xBB0B30", VA = "0xBB0B30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xBB1094", Offset = "0xBB1094", VA = "0xBB1094")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xBB114C", Offset = "0xBB114C", VA = "0xBB114C")]
	public void Stop()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xBB11DC", Offset = "0xBB11DC", VA = "0xBB11DC")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xBB12D0", Offset = "0xBB12D0", VA = "0xBB12D0")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200007B")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200007C")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000233")]
		Playing,
		[Token(Token = "0x4000234")]
		Paused,
		[Token(Token = "0x4000235")]
		Rewinding,
		[Token(Token = "0x4000236")]
		FastForwarding
	}

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xBB12E0", Offset = "0xBB12E0", VA = "0xBB12E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xBB163C", Offset = "0xBB163C", VA = "0xBB163C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xBB181C", Offset = "0xBB181C", VA = "0xBB181C")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xBB1958", Offset = "0xBB1958", VA = "0xBB1958")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xBB1A64", Offset = "0xBB1A64", VA = "0xBB1A64")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xBB1928", Offset = "0xBB1928", VA = "0xBB1928")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xBB1AB4", Offset = "0xBB1AB4", VA = "0xBB1AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xBB1528", Offset = "0xBB1528", VA = "0xBB1528")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xBB1E18", Offset = "0xBB1E18", VA = "0xBB1E18")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200007D")]
public static class VectorUtil
{
	[Token(Token = "0x600026E")]
	[Address(RVA = "0x9C5D30", Offset = "0x9C5D30", VA = "0x9C5D30")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200007E")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x9B7214", Offset = "0x9B7214", VA = "0x9B7214")]
	private void Start()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x9B7728", Offset = "0x9B7728", VA = "0x9B7728")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x9B77E8", Offset = "0x9B77E8", VA = "0x9B77E8")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x9B7A88", Offset = "0x9B7A88", VA = "0x9B7A88")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x9B7B70", Offset = "0x9B7B70", VA = "0x9B7B70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x9B7C5C", Offset = "0x9B7C5C", VA = "0x9B7C5C")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x9B7CD0", Offset = "0x9B7CD0", VA = "0x9B7CD0")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x9B7CD8", Offset = "0x9B7CD8", VA = "0x9B7CD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63ACBC", Offset = "0x63ACBC")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x9B7D44", Offset = "0x9B7D44", VA = "0x9B7D44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63ACCC", Offset = "0x63ACCC")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x9B7DB0", Offset = "0x9B7DB0", VA = "0x9B7DB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63ACDC", Offset = "0x63ACDC")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x9B7E1C", Offset = "0x9B7E1C", VA = "0x9B7E1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63ACEC", Offset = "0x63ACEC")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200007F")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000080")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D2B8", Offset = "0x62D2B8")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000281")]
			[Address(RVA = "0x7DBC80", Offset = "0x7DBC80", VA = "0x7DBC80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000283")]
			[Address(RVA = "0x7DBCC8", Offset = "0x7DBCC8", VA = "0x7DBCC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x7DBB04", Offset = "0x7DBB04", VA = "0x7DBB04")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0x7DBB30", Offset = "0x7DBB30", VA = "0x7DBB30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x7DBB34", Offset = "0x7DBB34", VA = "0x7DBB34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x7DBC88", Offset = "0x7DBC88", VA = "0x7DBC88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x8ED2EC", Offset = "0x8ED2EC", VA = "0x8ED2EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x8ED418", Offset = "0x8ED418", VA = "0x8ED418")]
	private void Update()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x8ED398", Offset = "0x8ED398", VA = "0x8ED398")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63ACFC", Offset = "0x63ACFC")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x8ED5D4", Offset = "0x8ED5D4", VA = "0x8ED5D4")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000081")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x63213C", Offset = "0x63213C")]
	public int SubdivisionsU;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x632158", Offset = "0x632158")]
	public int SubdivisionsV;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xB28094", Offset = "0xB28094", VA = "0xB28094")]
	private void Update()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xB28AE0", Offset = "0xB28AE0", VA = "0xB28AE0")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000082")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000049")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xBA6244", Offset = "0xBA6244", VA = "0xBA6244")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xBA6298", Offset = "0xBA6298", VA = "0xBA6298")]
	public void Start()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xBA66A0", Offset = "0xBA66A0", VA = "0xBA66A0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xBA6794", Offset = "0xBA6794", VA = "0xBA6794")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x63ADB4", Offset = "0x63ADB4")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600028A")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600028B")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600028C")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600028D")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600028E")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600028F")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000290")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000291")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xBA6800", Offset = "0xBA6800", VA = "0xBA6800")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xBA6844", Offset = "0xBA6844", VA = "0xBA6844")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xBA68B4", Offset = "0xBA68B4", VA = "0xBA68B4")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xBA6A24", Offset = "0xBA6A24", VA = "0xBA6A24")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xBA6B08", Offset = "0xBA6B08", VA = "0xBA6B08")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xBA6598", Offset = "0xBA6598", VA = "0xBA6598")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xBA6BD0", Offset = "0xBA6BD0", VA = "0xBA6BD0")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xBA6C38", Offset = "0xBA6C38", VA = "0xBA6C38")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xBA6D30", Offset = "0xBA6D30", VA = "0xBA6D30")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000083")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D2D8", Offset = "0x62D2D8")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000084")]
	public enum DrawMode
	{
		[Token(Token = "0x4000261")]
		Opaque,
		[Token(Token = "0x4000262")]
		OpaqueWithClip,
		[Token(Token = "0x4000263")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000264")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700004A")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x12F751C", Offset = "0x12F751C", VA = "0x12F751C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x12F75B8", Offset = "0x12F75B8", VA = "0x12F75B8")]
		set
		{
		}
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x12F5F88", Offset = "0x12F5F88", VA = "0x12F5F88")]
	private void Start()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x12F6B6C", Offset = "0x12F6B6C", VA = "0x12F6B6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x12F6BF4", Offset = "0x12F6BF4", VA = "0x12F6BF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x12F6CE4", Offset = "0x12F6CE4", VA = "0x12F6CE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x12F6DD4", Offset = "0x12F6DD4", VA = "0x12F6DD4", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x12F6FF4", Offset = "0x12F6FF4", VA = "0x12F6FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x12F7684", Offset = "0x12F7684", VA = "0x12F7684")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000085")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000086")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D340", Offset = "0x62D340")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xA7AF08", Offset = "0xA7AF08", VA = "0xA7AF08")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xA7AF10", Offset = "0xA7AF10", VA = "0xA7AF10")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xC73F78", Offset = "0xC73F78", VA = "0xC73F78")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xC7418C", Offset = "0xC7418C", VA = "0xC7418C")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xC742A4", Offset = "0xC742A4", VA = "0xC742A4")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000087")]
public class Skeleton : MonoBehaviour
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PuppetMaster puppetMaster;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ConfigurableJoint[] leftLeg;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConfigurableJoint[] rightLeg;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool leftLegRemoved;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool rightLegRemoved;

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xC6F354", Offset = "0xC6F354", VA = "0xC6F354")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xC6F484", Offset = "0xC6F484", VA = "0xC6F484")]
	public void OnRebuild()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xC6F518", Offset = "0xC6F518", VA = "0xC6F518")]
	private void OnMuscleDisconnected(Muscle m)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xC6F5DC", Offset = "0xC6F5DC", VA = "0xC6F5DC")]
	private bool IsLegMuscle(Muscle m, [Out] bool isLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xC6F758", Offset = "0xC6F758", VA = "0xC6F758")]
	public Skeleton()
	{
	}
}
[Token(Token = "0x2000088")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D350", Offset = "0x62D350")]
public class CameraCapture : MonoBehaviour
{
	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int id;

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xB241A4", Offset = "0xB241A4", VA = "0xB241A4")]
	public void TakeScreenshot()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xB24290", Offset = "0xB24290", VA = "0xB24290")]
	private Texture2D Screenshot()
	{
		return null;
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xB2444C", Offset = "0xB2444C", VA = "0xB2444C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xB2459C", Offset = "0xB2459C", VA = "0xB2459C")]
	public CameraCapture()
	{
	}
}
[Token(Token = "0x2000089")]
public static class ExtDebug
{
	[Token(Token = "0x200008A")]
	public struct Box
	{
		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6321F4", Offset = "0x6321F4")]
		private Vector3 <localFrontTopLeft>k__BackingField;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632204", Offset = "0x632204")]
		private Vector3 <localFrontTopRight>k__BackingField;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632214", Offset = "0x632214")]
		private Vector3 <localFrontBottomLeft>k__BackingField;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632224", Offset = "0x632224")]
		private Vector3 <localFrontBottomRight>k__BackingField;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632234", Offset = "0x632234")]
		private Vector3 <origin>k__BackingField;

		[Token(Token = "0x1700004B")]
		public Vector3 localFrontTopLeft
		{
			[Token(Token = "0x60002B9")]
			[Address(RVA = "0x7DAB20", Offset = "0x7DAB20", VA = "0x7DAB20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63ADEC", Offset = "0x63ADEC")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002BA")]
			[Address(RVA = "0x7DAB2C", Offset = "0x7DAB2C", VA = "0x7DAB2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AE24", Offset = "0x63AE24")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public Vector3 localFrontTopRight
		{
			[Token(Token = "0x60002BB")]
			[Address(RVA = "0x7DAB38", Offset = "0x7DAB38", VA = "0x7DAB38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AE34", Offset = "0x63AE34")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002BC")]
			[Address(RVA = "0x7DAB44", Offset = "0x7DAB44", VA = "0x7DAB44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AE6C", Offset = "0x63AE6C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public Vector3 localFrontBottomLeft
		{
			[Token(Token = "0x60002BD")]
			[Address(RVA = "0x7DAB50", Offset = "0x7DAB50", VA = "0x7DAB50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AE7C", Offset = "0x63AE7C")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002BE")]
			[Address(RVA = "0x7DAB5C", Offset = "0x7DAB5C", VA = "0x7DAB5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AEB4", Offset = "0x63AEB4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public Vector3 localFrontBottomRight
		{
			[Token(Token = "0x60002BF")]
			[Address(RVA = "0x7DAB68", Offset = "0x7DAB68", VA = "0x7DAB68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AEC4", Offset = "0x63AEC4")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002C0")]
			[Address(RVA = "0x7DAB74", Offset = "0x7DAB74", VA = "0x7DAB74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AEFC", Offset = "0x63AEFC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public Vector3 localBackTopLeft
		{
			[Token(Token = "0x60002C1")]
			[Address(RVA = "0x7DAB80", Offset = "0x7DAB80", VA = "0x7DAB80")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000050")]
		public Vector3 localBackTopRight
		{
			[Token(Token = "0x60002C2")]
			[Address(RVA = "0x7DAB98", Offset = "0x7DAB98", VA = "0x7DAB98")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000051")]
		public Vector3 localBackBottomLeft
		{
			[Token(Token = "0x60002C3")]
			[Address(RVA = "0x7DABB0", Offset = "0x7DABB0", VA = "0x7DABB0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000052")]
		public Vector3 localBackBottomRight
		{
			[Token(Token = "0x60002C4")]
			[Address(RVA = "0x7DABC8", Offset = "0x7DABC8", VA = "0x7DABC8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000053")]
		public Vector3 frontTopLeft
		{
			[Token(Token = "0x60002C5")]
			[Address(RVA = "0x7DABE0", Offset = "0x7DABE0", VA = "0x7DABE0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000054")]
		public Vector3 frontTopRight
		{
			[Token(Token = "0x60002C6")]
			[Address(RVA = "0x7DAC00", Offset = "0x7DAC00", VA = "0x7DAC00")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000055")]
		public Vector3 frontBottomLeft
		{
			[Token(Token = "0x60002C7")]
			[Address(RVA = "0x7DAC20", Offset = "0x7DAC20", VA = "0x7DAC20")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000056")]
		public Vector3 frontBottomRight
		{
			[Token(Token = "0x60002C8")]
			[Address(RVA = "0x7DAC40", Offset = "0x7DAC40", VA = "0x7DAC40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000057")]
		public Vector3 backTopLeft
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0x7DAC60", Offset = "0x7DAC60", VA = "0x7DAC60")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000058")]
		public Vector3 backTopRight
		{
			[Token(Token = "0x60002CA")]
			[Address(RVA = "0x7DAC80", Offset = "0x7DAC80", VA = "0x7DAC80")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000059")]
		public Vector3 backBottomLeft
		{
			[Token(Token = "0x60002CB")]
			[Address(RVA = "0x7DACA0", Offset = "0x7DACA0", VA = "0x7DACA0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700005A")]
		public Vector3 backBottomRight
		{
			[Token(Token = "0x60002CC")]
			[Address(RVA = "0x7DACC0", Offset = "0x7DACC0", VA = "0x7DACC0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700005B")]
		public Vector3 origin
		{
			[Token(Token = "0x60002CD")]
			[Address(RVA = "0x7DACE0", Offset = "0x7DACE0", VA = "0x7DACE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AF0C", Offset = "0x63AF0C")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60002CE")]
			[Address(RVA = "0x7DACEC", Offset = "0x7DACEC", VA = "0x7DACEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AF44", Offset = "0x63AF44")]
			private set
			{
			}
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x7DACF8", Offset = "0x7DACF8", VA = "0x7DACF8")]
		public Box(Vector3 origin, Vector3 halfExtents, Quaternion orientation)
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x7DAD40", Offset = "0x7DAD40", VA = "0x7DAD40")]
		public Box(Vector3 origin, Vector3 halfExtents)
		{
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x7DAD70", Offset = "0x7DAD70", VA = "0x7DAD70")]
		public void Rotate(Quaternion orientation)
		{
		}
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x8E576C", Offset = "0x8E576C", VA = "0x8E576C")]
	public static void DrawBoxCastOnHit(Vector3 origin, Vector3 halfExtents, Quaternion orientation, Vector3 direction, float hitInfoDistance, Color color)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x8E5918", Offset = "0x8E5918", VA = "0x8E5918")]
	public static void DrawBoxCastBox(Vector3 origin, Vector3 halfExtents, Quaternion orientation, Vector3 direction, float distance, Color color)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x8E5894", Offset = "0x8E5894", VA = "0x8E5894")]
	public static void DrawBox(Vector3 origin, Vector3 halfExtents, Quaternion orientation, Color color)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x8E5D6C", Offset = "0x8E5D6C", VA = "0x8E5D6C")]
	public static void DrawBox(Box box, Color color)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x8E5830", Offset = "0x8E5830", VA = "0x8E5830")]
	private static Vector3 CastCenterOnCollision(Vector3 origin, Vector3 direction, float hitInfoDistance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x8E61A4", Offset = "0x8E61A4", VA = "0x8E61A4")]
	private static Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Quaternion rotation)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200008B")]
public class MathParabola
{
	[Token(Token = "0x200008C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D3B8", Offset = "0x62D3B8")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float height;

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x800E94", Offset = "0x800E94", VA = "0x800E94")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x800E9C", Offset = "0x800E9C", VA = "0x800E9C")]
		internal float <Parabola>b__0(float x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x200008D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D3C8", Offset = "0x62D3C8")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float height;

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x800EC4", Offset = "0x800EC4", VA = "0x800EC4")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x800ECC", Offset = "0x800ECC", VA = "0x800ECC")]
		internal float <Parabola>b__0(float x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xBA9F70", Offset = "0xBA9F70", VA = "0xBA9F70")]
	public static Vector3 Parabola(Vector3 start, Vector3 end, float height, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xBAA0E0", Offset = "0xBAA0E0", VA = "0xBAA0E0")]
	public static Vector2 Parabola(Vector2 start, Vector2 end, float height, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xBAA230", Offset = "0xBAA230", VA = "0xBAA230")]
	public MathParabola()
	{
	}
}
[Token(Token = "0x200008E")]
public class ParabolaController : MonoBehaviour
{
	[Token(Token = "0x200008F")]
	public class ParabolaFly
	{
		[Serializable]
		[Token(Token = "0x2000090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D3D8", Offset = "0x62D3D8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Component, Transform> <>9__4_0;

			[Token(Token = "0x4000286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Transform> <>9__4_1;

			[Token(Token = "0x60002EE")]
			[Address(RVA = "0x17D3DB0", Offset = "0x17D3DB0", VA = "0x17D3DB0")]
			public <>c()
			{
			}

			[Token(Token = "0x60002EF")]
			[Address(RVA = "0x17D3DB8", Offset = "0x17D3DB8", VA = "0x17D3DB8")]
			internal Transform <.ctor>b__4_0(Component c)
			{
				return null;
			}

			[Token(Token = "0x60002F0")]
			[Address(RVA = "0x17D3E38", Offset = "0x17D3E38", VA = "0x17D3E38")]
			internal int <.ctor>b__4_1(Transform a, Transform b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] Points;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Parabola3D[] parabolas;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float[] partDuration;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float completeDuration;

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x808C9C", Offset = "0x808C9C", VA = "0x808C9C")]
		public ParabolaFly(Transform ParabolaRoot)
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x8090E8", Offset = "0x8090E8", VA = "0x8090E8")]
		public Vector3 GetPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x809200", Offset = "0x809200", VA = "0x809200")]
		public void GetParabolaIndexAtTime(float time, [Out] int parabolaIndex)
		{
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x809178", Offset = "0x809178", VA = "0x809178")]
		public void GetParabolaIndexAtTime(float time, [Out] int parabolaIndex, [Out] float timeInParabola)
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x809224", Offset = "0x809224", VA = "0x809224")]
		public float GetDuration()
		{
			return default(float);
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x80922C", Offset = "0x80922C", VA = "0x80922C")]
		public Vector3 getHighestPoint(int parabolaIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x80926C", Offset = "0x80926C", VA = "0x80926C")]
		public void RefreshTransforms(float speed)
		{
		}
	}

	[Token(Token = "0x2000091")]
	public class Parabola3D
	{
		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632244", Offset = "0x632244")]
		private float <Length>k__BackingField;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 A;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 B;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 C;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Parabola2D parabola2D;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 h;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool tooClose;

		[Token(Token = "0x1700005C")]
		public float Length
		{
			[Token(Token = "0x60002F1")]
			[Address(RVA = "0x8085F4", Offset = "0x8085F4", VA = "0x8085F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AF54", Offset = "0x63AF54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002F2")]
			[Address(RVA = "0x8085FC", Offset = "0x8085FC", VA = "0x8085FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AF64", Offset = "0x63AF64")]
			private set
			{
			}
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x808604", Offset = "0x808604", VA = "0x808604")]
		public Parabola3D()
		{
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x80860C", Offset = "0x80860C", VA = "0x80860C")]
		public Parabola3D(Vector3 A, Vector3 B, Vector3 C)
		{
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x808694", Offset = "0x808694", VA = "0x808694")]
		public void Set(Vector3 A, Vector3 B, Vector3 C)
		{
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x80877C", Offset = "0x80877C", VA = "0x80877C")]
		public Vector3 getHighestPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x80887C", Offset = "0x80887C", VA = "0x80887C")]
		public Vector3 GetPositionAtLength(float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x8086B4", Offset = "0x8086B4", VA = "0x8086B4")]
		private void refreshCurve()
		{
		}

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x8089B0", Offset = "0x8089B0", VA = "0x8089B0")]
		private void refreshCurveNormal()
		{
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x808B84", Offset = "0x808B84", VA = "0x808B84")]
		private void refreshCurveClose()
		{
		}
	}

	[Token(Token = "0x2000092")]
	public class Parabola2D
	{
		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632254", Offset = "0x632254")]
		private float <a>k__BackingField;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632264", Offset = "0x632264")]
		private float <b>k__BackingField;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632274", Offset = "0x632274")]
		private float <c>k__BackingField;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632284", Offset = "0x632284")]
		private Vector2 <E>k__BackingField;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632294", Offset = "0x632294")]
		private float <Length>k__BackingField;

		[Token(Token = "0x1700005D")]
		public float a
		{
			[Token(Token = "0x60002FB")]
			[Address(RVA = "0x808370", Offset = "0x808370", VA = "0x808370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AF74", Offset = "0x63AF74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002FC")]
			[Address(RVA = "0x808378", Offset = "0x808378", VA = "0x808378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AF84", Offset = "0x63AF84")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public float b
		{
			[Token(Token = "0x60002FD")]
			[Address(RVA = "0x808380", Offset = "0x808380", VA = "0x808380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AF94", Offset = "0x63AF94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002FE")]
			[Address(RVA = "0x808388", Offset = "0x808388", VA = "0x808388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AFA4", Offset = "0x63AFA4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public float c
		{
			[Token(Token = "0x60002FF")]
			[Address(RVA = "0x808390", Offset = "0x808390", VA = "0x808390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AFB4", Offset = "0x63AFB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000300")]
			[Address(RVA = "0x808398", Offset = "0x808398", VA = "0x808398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AFC4", Offset = "0x63AFC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public Vector2 E
		{
			[Token(Token = "0x6000301")]
			[Address(RVA = "0x8083A0", Offset = "0x8083A0", VA = "0x8083A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AFD4", Offset = "0x63AFD4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000302")]
			[Address(RVA = "0x8083A8", Offset = "0x8083A8", VA = "0x8083A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AFE4", Offset = "0x63AFE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public float Length
		{
			[Token(Token = "0x6000303")]
			[Address(RVA = "0x8083B0", Offset = "0x8083B0", VA = "0x8083B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AFF4", Offset = "0x63AFF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000304")]
			[Address(RVA = "0x8083B8", Offset = "0x8083B8", VA = "0x8083B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B004", Offset = "0x63B004")]
			private set
			{
			}
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x8083C0", Offset = "0x8083C0", VA = "0x8083C0")]
		public Parabola2D(float a, float b, float c, float length)
		{
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x808460", Offset = "0x808460", VA = "0x808460")]
		public Parabola2D(Vector2 A, Vector2 B, Vector2 C)
		{
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x8085D4", Offset = "0x8085D4", VA = "0x8085D4")]
		public float f(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x808430", Offset = "0x808430", VA = "0x808430")]
		private void setMetadata()
		{
		}
	}

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ParabolaRoot;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Autostart;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool Animation;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	internal bool nextParbola;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float animationTime;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ParabolaFly gizmo;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected ParabolaFly parabolaFly;

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x971910", Offset = "0x971910", VA = "0x971910")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x971B18", Offset = "0x971B18", VA = "0x971B18")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x971C90", Offset = "0x971C90", VA = "0x971C90")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x971BFC", Offset = "0x971BFC", VA = "0x971BFC")]
	public void FollowParabola()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x971D80", Offset = "0x971D80", VA = "0x971D80")]
	public Vector3 getHighestPoint(int parabolaIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x971DA0", Offset = "0x971DA0", VA = "0x971DA0")]
	public Transform[] getPoints()
	{
		return null;
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x971DC0", Offset = "0x971DC0", VA = "0x971DC0")]
	public Vector3 GetPositionAtTime(float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x971DE0", Offset = "0x971DE0", VA = "0x971DE0")]
	public float GetDuration()
	{
		return default(float);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x971E00", Offset = "0x971E00", VA = "0x971E00")]
	public void StopFollow()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x971BDC", Offset = "0x971BDC", VA = "0x971BDC")]
	public void RefreshTransforms(float speed)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x971E0C", Offset = "0x971E0C", VA = "0x971E0C")]
	public static float DistanceToLine(Ray ray, Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x971EA8", Offset = "0x971EA8", VA = "0x971EA8")]
	public static Vector3 ClosestPointInLine(Ray ray, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x971F8C", Offset = "0x971F8C", VA = "0x971F8C")]
	public ParabolaController()
	{
	}
}
[Token(Token = "0x2000093")]
public struct safe_int
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int value;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private int offset;

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xC26290", Offset = "0xC26290", VA = "0xC26290")]
	public safe_int(int value = 0)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xC2631C", Offset = "0xC2631C", VA = "0xC2631C")]
	public static implicit operator safe_int(int v)
	{
		return default(safe_int);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xC26348", Offset = "0xC26348", VA = "0xC26348")]
	public static explicit operator int(safe_int v)
	{
		return default(int);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xC26354", Offset = "0xC26354", VA = "0xC26354")]
	public int GetValue()
	{
		return default(int);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xC26360", Offset = "0xC26360", VA = "0xC26360")]
	public int GetValueInMemory()
	{
		return default(int);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xC26368", Offset = "0xC26368", VA = "0xC26368")]
	public int SetValue(int value)
	{
		return default(int);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xC263F8", Offset = "0xC263F8", VA = "0xC263F8")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xC26400", Offset = "0xC26400", VA = "0xC26400", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xC26470", Offset = "0xC26470", VA = "0xC26470", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xC264F4", Offset = "0xC264F4", VA = "0xC264F4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xC26524", Offset = "0xC26524", VA = "0xC26524")]
	public static safe_int operator +(safe_int v1, safe_int v2)
	{
		return default(safe_int);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xC26560", Offset = "0xC26560", VA = "0xC26560")]
	public static safe_int operator +(safe_int v1, int v2)
	{
		return default(safe_int);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xC26594", Offset = "0xC26594", VA = "0xC26594")]
	public static safe_int operator +(int v1, safe_int v2)
	{
		return default(safe_int);
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xC265C8", Offset = "0xC265C8", VA = "0xC265C8")]
	public static safe_int operator -(safe_int v1, safe_int v2)
	{
		return default(safe_int);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xC26604", Offset = "0xC26604", VA = "0xC26604")]
	public static safe_int operator -(safe_int v1, int v2)
	{
		return default(safe_int);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xC26638", Offset = "0xC26638", VA = "0xC26638")]
	public static safe_int operator -(int v1, safe_int v2)
	{
		return default(safe_int);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xC2666C", Offset = "0xC2666C", VA = "0xC2666C")]
	public static bool operator <(safe_int v1, int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xC26680", Offset = "0xC26680", VA = "0xC26680")]
	public static bool operator >(safe_int v1, int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xC26694", Offset = "0xC26694", VA = "0xC26694")]
	public static bool operator <=(safe_int v1, int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xC266A8", Offset = "0xC266A8", VA = "0xC266A8")]
	public static bool operator >=(safe_int v1, int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xC266BC", Offset = "0xC266BC", VA = "0xC266BC")]
	public static bool operator ==(safe_int v1, int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xC266D0", Offset = "0xC266D0", VA = "0xC266D0")]
	public static bool operator !=(safe_int v1, int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xC266E4", Offset = "0xC266E4", VA = "0xC266E4")]
	public static bool operator <(int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xC266F8", Offset = "0xC266F8", VA = "0xC266F8")]
	public static bool operator >(int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xC2670C", Offset = "0xC2670C", VA = "0xC2670C")]
	public static bool operator <=(int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xC26720", Offset = "0xC26720", VA = "0xC26720")]
	public static bool operator >=(int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xC26734", Offset = "0xC26734", VA = "0xC26734")]
	public static bool operator ==(int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xC26748", Offset = "0xC26748", VA = "0xC26748")]
	public static bool operator !=(int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xC2675C", Offset = "0xC2675C", VA = "0xC2675C")]
	public static bool operator <(safe_int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xC26778", Offset = "0xC26778", VA = "0xC26778")]
	public static bool operator >(safe_int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xC26794", Offset = "0xC26794", VA = "0xC26794")]
	public static bool operator <=(safe_int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xC267B0", Offset = "0xC267B0", VA = "0xC267B0")]
	public static bool operator >=(safe_int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xC267CC", Offset = "0xC267CC", VA = "0xC267CC")]
	public static bool operator ==(safe_int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xC267E8", Offset = "0xC267E8", VA = "0xC267E8")]
	public static bool operator !=(safe_int v1, safe_int v2)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000094")]
public struct safe_string
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string value;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private string offset;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xC26804", Offset = "0xC26804", VA = "0xC26804")]
	public safe_string(string value = "")
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xC268D4", Offset = "0xC268D4", VA = "0xC268D4")]
	public static string encode(string plainText, string offset)
	{
		return null;
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xC2699C", Offset = "0xC2699C", VA = "0xC2699C")]
	public static string decode(string base64EncodedData, string offset)
	{
		return null;
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xC26B3C", Offset = "0xC26B3C", VA = "0xC26B3C")]
	public static implicit operator safe_string(string v)
	{
		return default(safe_string);
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xC26B68", Offset = "0xC26B68", VA = "0xC26B68")]
	public static explicit operator string(safe_string v)
	{
		return null;
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xC26B6C", Offset = "0xC26B6C", VA = "0xC26B6C")]
	public string GetValue()
	{
		return null;
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xC26B78", Offset = "0xC26B78", VA = "0xC26B78")]
	public string GetValueInMemory()
	{
		return null;
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xC26B80", Offset = "0xC26B80", VA = "0xC26B80")]
	public string SetValue(string value)
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xC26C5C", Offset = "0xC26C5C", VA = "0xC26C5C")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xC26CC4", Offset = "0xC26CC4", VA = "0xC26CC4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xC26D3C", Offset = "0xC26D3C", VA = "0xC26D3C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xC26DC0", Offset = "0xC26DC0", VA = "0xC26DC0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xC26DEC", Offset = "0xC26DEC", VA = "0xC26DEC")]
	public static safe_string operator +(safe_string v1, safe_string v2)
	{
		return default(safe_string);
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xC26E54", Offset = "0xC26E54", VA = "0xC26E54")]
	public static safe_string operator +(safe_string v1, string v2)
	{
		return default(safe_string);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xC26E9C", Offset = "0xC26E9C", VA = "0xC26E9C")]
	public static safe_string operator +(string v1, safe_string v2)
	{
		return default(safe_string);
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xC26EF0", Offset = "0xC26EF0", VA = "0xC26EF0")]
	public static bool operator ==(safe_string v1, string v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xC26F18", Offset = "0xC26F18", VA = "0xC26F18")]
	public static bool operator !=(safe_string v1, string v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xC26F40", Offset = "0xC26F40", VA = "0xC26F40")]
	public static bool operator ==(string v1, safe_string v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xC26F74", Offset = "0xC26F74", VA = "0xC26F74")]
	public static bool operator !=(string v1, safe_string v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xC26FA8", Offset = "0xC26FA8", VA = "0xC26FA8")]
	public static bool operator ==(safe_string v1, safe_string v2)
	{
		return default(bool);
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xC26FF0", Offset = "0xC26FF0", VA = "0xC26FF0")]
	public static bool operator !=(safe_string v1, safe_string v2)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000095")]
public class PlayerPrefsSecure
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string PRIVATE_KEY_PREFIX;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string PRIVATE_KEY_RAND;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string PRIVATE_KEY_SUFFIX;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string privateKey;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool isInit;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly string RAND_KEY;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static bool logErrorsEnabled;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Dictionary<string, string> cache;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x9759A4", Offset = "0x9759A4", VA = "0x9759A4")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x975D9C", Offset = "0x975D9C", VA = "0x975D9C")]
	public static bool isInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x975E00", Offset = "0x975E00", VA = "0x975E00")]
	public static bool Sync(string key, string val, string type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x9764FC", Offset = "0x9764FC", VA = "0x9764FC")]
	public static Dictionary<string, string> GetMap()
	{
		return null;
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x97671C", Offset = "0x97671C", VA = "0x97671C")]
	private static void AddToMap(string key)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x976888", Offset = "0x976888", VA = "0x976888")]
	private static void securePlayerPrefs(string[,] keynames, bool deleteOldKeys)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x976C58", Offset = "0x976C58", VA = "0x976C58")]
	public static void setLogErrorsEnabled(bool state)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x9760AC", Offset = "0x9760AC", VA = "0x9760AC")]
	public static void SetString(string key, string val)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x97633C", Offset = "0x97633C", VA = "0x97633C")]
	public static void SetFloat(string key, float val)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x975CDC", Offset = "0x975CDC", VA = "0x975CDC")]
	public static void SetInt(string key, int val)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x97646C", Offset = "0x97646C", VA = "0x97646C")]
	public static void SetBool(string key, bool val)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x9770B0", Offset = "0x9770B0", VA = "0x9770B0")]
	public static string GetString(string key, string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x975C58", Offset = "0x975C58", VA = "0x975C58")]
	public static string GetString(string key)
	{
		return null;
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x9777D0", Offset = "0x9777D0", VA = "0x9777D0")]
	public static int GetInt(string key, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x97625C", Offset = "0x97625C", VA = "0x97625C")]
	public static int GetInt(string key)
	{
		return default(int);
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x977A50", Offset = "0x977A50", VA = "0x977A50")]
	public static float GetFloat(string key, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x9762CC", Offset = "0x9762CC", VA = "0x9762CC")]
	public static float GetFloat(string key)
	{
		return default(float);
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x977CD8", Offset = "0x977CD8", VA = "0x977CD8")]
	public static bool GetBool(string key, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x9763FC", Offset = "0x9763FC", VA = "0x9763FC")]
	public static bool GetBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x977D5C", Offset = "0x977D5C", VA = "0x977D5C")]
	public static void DeleteKey(string key)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x977E4C", Offset = "0x977E4C", VA = "0x977E4C")]
	public static void DeleteAll()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x975BE8", Offset = "0x975BE8", VA = "0x975BE8")]
	public static bool HasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x976BF8", Offset = "0x976BF8", VA = "0x976BF8")]
	public static void Save()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x977384", Offset = "0x977384", VA = "0x977384")]
	private static string Decrypt(string encryptedString)
	{
		return null;
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x976CCC", Offset = "0x976CCC", VA = "0x976CCC")]
	private static string Encrypt(string plainText)
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x977EDC", Offset = "0x977EDC", VA = "0x977EDC")]
	public PlayerPrefsSecure()
	{
	}
}
[Token(Token = "0x2000096")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62D3E8", Offset = "0x62D3E8")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000097")]
	public enum RotationAxes
	{
		[Token(Token = "0x40002A8")]
		MouseXAndY,
		[Token(Token = "0x40002A9")]
		MouseX,
		[Token(Token = "0x40002AA")]
		MouseY
	}

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xBAF7E4", Offset = "0xBAF7E4", VA = "0xBAF7E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xBAF9B8", Offset = "0xBAF9B8", VA = "0xBAF9B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xBAFA80", Offset = "0xBAFA80", VA = "0xBAFA80")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000098")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000099")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x12F5700", Offset = "0x12F5700", VA = "0x12F5700")]
	private void Start()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x12F5704", Offset = "0x12F5704", VA = "0x12F5704")]
	private void Update()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x12F5708", Offset = "0x12F5708", VA = "0x12F5708")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x12F5888", Offset = "0x12F5888", VA = "0x12F5888")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x12F5754", Offset = "0x12F5754", VA = "0x12F5754")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x12F57EC", Offset = "0x12F57EC", VA = "0x12F57EC")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x12F58D4", Offset = "0x12F58D4", VA = "0x12F58D4")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x12F5974", Offset = "0x12F5974", VA = "0x12F5974")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x12F5B14", Offset = "0x12F5B14", VA = "0x12F5B14")]
	private void SetReflectionValues(ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x12F5CB4", Offset = "0x12F5CB4", VA = "0x12F5CB4")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200009A")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200009B")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, [Out] Vector3 point, [Out] Vector3 normal, IntPtr data);

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x40002BF")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40002C5")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x96C384", Offset = "0x96C384", VA = "0x96C384")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x96C218", Offset = "0x96C218", VA = "0x96C218")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x63B014", Offset = "0x63B014")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, [Out] Vector3 point, [Out] Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x96C38C", Offset = "0x96C38C", VA = "0x96C38C")]
	private void Start()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x96C4D8", Offset = "0x96C4D8", VA = "0x96C4D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x96C5D4", Offset = "0x96C5D4", VA = "0x96C5D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x96CED4", Offset = "0x96CED4", VA = "0x96CED4")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600036F")]
	[Address(RVA = "0x96C444", Offset = "0x96C444", VA = "0x96C444")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000370")]
	[Address(RVA = "0x96C544", Offset = "0x96C544", VA = "0x96C544")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000371")]
	[Address(RVA = "0x96CC3C", Offset = "0x96CC3C", VA = "0x96CC3C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000372")]
	[Address(RVA = "0x96CCBC", Offset = "0x96CCBC", VA = "0x96CCBC")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000373")]
	[Address(RVA = "0x96CD44", Offset = "0x96CD44", VA = "0x96CD44")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000374")]
	[Address(RVA = "0x96CDCC", Offset = "0x96CDCC", VA = "0x96CDCC")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000375")]
	[Address(RVA = "0x96CE4C", Offset = "0x96CE4C", VA = "0x96CE4C")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000376")]
	[Address(RVA = "0x96DBC8", Offset = "0x96DBC8", VA = "0x96DBC8")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, [Out] Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000377")]
	[Address(RVA = "0x96DC70", Offset = "0x96DC70", VA = "0x96DC70")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x96DD18", Offset = "0x96DD18", VA = "0x96DD18")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x200009C")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200009D")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40002CD")]
		Uninitialized = -1,
		[Token(Token = "0x40002CE")]
		NotEnabled,
		[Token(Token = "0x40002CF")]
		Success,
		[Token(Token = "0x40002D0")]
		StreamError,
		[Token(Token = "0x40002D1")]
		ProcessError,
		[Token(Token = "0x40002D2")]
		MaxStatValue
	}

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000062")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x12E78FC", Offset = "0x12E78FC", VA = "0x12E78FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037F")]
		[Address(RVA = "0x12E7904", Offset = "0x12E7904", VA = "0x12E7904")]
		set
		{
		}
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x12E7910", Offset = "0x12E7910", VA = "0x12E7910")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x12E7B88", Offset = "0x12E7B88", VA = "0x12E7B88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x12E7DD8", Offset = "0x12E7DD8", VA = "0x12E7DD8")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x200009E")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200009F")]
	private enum Parameters
	{
		[Token(Token = "0x40002DE")]
		P_GAIN,
		[Token(Token = "0x40002DF")]
		P_USEINVSQR,
		[Token(Token = "0x40002E0")]
		P_NEAR,
		[Token(Token = "0x40002E1")]
		P_FAR,
		[Token(Token = "0x40002E2")]
		P_RADIUS,
		[Token(Token = "0x40002E3")]
		P_DISABLE_RFL,
		[Token(Token = "0x40002E4")]
		P_VSPEAKERMODE,
		[Token(Token = "0x40002E5")]
		P_AMBISTAT,
		[Token(Token = "0x40002E6")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40002E7")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40002E8")]
		P_SENDLEVEL,
		[Token(Token = "0x40002E9")]
		P_NUM
	}

	[Token(Token = "0x40002D3")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000063")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000386")]
		[Address(RVA = "0x12E8180", Offset = "0x12E8180", VA = "0x12E8180")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x12E8188", Offset = "0x12E8188", VA = "0x12E8188")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public float Gain
	{
		[Token(Token = "0x6000388")]
		[Address(RVA = "0x12E8194", Offset = "0x12E8194", VA = "0x12E8194")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x12E819C", Offset = "0x12E819C", VA = "0x12E819C")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x12E81CC", Offset = "0x12E81CC", VA = "0x12E81CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x12E81D4", Offset = "0x12E81D4", VA = "0x12E81D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public float Near
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x12E81E0", Offset = "0x12E81E0", VA = "0x12E81E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x12E81E8", Offset = "0x12E81E8", VA = "0x12E81E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public float Far
	{
		[Token(Token = "0x600038E")]
		[Address(RVA = "0x12E821C", Offset = "0x12E821C", VA = "0x12E821C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x12E8224", Offset = "0x12E8224", VA = "0x12E8224")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x12E8258", Offset = "0x12E8258", VA = "0x12E8258")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x12E8260", Offset = "0x12E8260", VA = "0x12E8260")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public float ReverbSend
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x12E8294", Offset = "0x12E8294", VA = "0x12E8294")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x12E829C", Offset = "0x12E829C", VA = "0x12E829C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x12E82D0", Offset = "0x12E82D0", VA = "0x12E82D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000395")]
		[Address(RVA = "0x12E82D8", Offset = "0x12E82D8", VA = "0x12E82D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x12E7E58", Offset = "0x12E7E58", VA = "0x12E7E58")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x63B07C", Offset = "0x63B07C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000385")]
	[Address(RVA = "0x12E80A0", Offset = "0x12E80A0", VA = "0x12E80A0")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(bool reflOn, bool reverbOn, float width, float height, float length);

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x12E82E4", Offset = "0x12E82E4", VA = "0x12E82E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x12E8450", Offset = "0x12E8450", VA = "0x12E8450")]
	private void Start()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x12E8454", Offset = "0x12E8454", VA = "0x12E8454")]
	private void Update()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x12E834C", Offset = "0x12E834C", VA = "0x12E834C")]
	public void SetParameters(AudioSource source)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x12E8518", Offset = "0x12E8518", VA = "0x12E8518")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x12E8910", Offset = "0x12E8910", VA = "0x12E8910")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600039C")]
	[Address(RVA = "0x12E8020", Offset = "0x12E8020", VA = "0x12E8020")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x12E89FC", Offset = "0x12E89FC", VA = "0x12E89FC")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000A0")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40002EB")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40002ED")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x12E8A1C", Offset = "0x12E8A1C", VA = "0x12E8A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x12E8A28", Offset = "0x12E8A28", VA = "0x12E8A28")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x12E8AE0", Offset = "0x12E8AE0", VA = "0x12E8AE0")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x12E8A60", Offset = "0x12E8A60", VA = "0x12E8A60")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x12E8B60", Offset = "0x12E8B60", VA = "0x12E8B60")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000A1")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20000A2")]
	private struct MeshMaterial
	{
		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20000A3")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40002F4")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700006B")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x12E8E68", Offset = "0x12E8E68", VA = "0x12E8E68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	public string filePath
	{
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x12E8F04", Offset = "0x12E8F04", VA = "0x12E8F04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x12E8F8C", Offset = "0x12E8F8C", VA = "0x12E8F8C")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x12E90E4", Offset = "0x12E90E4", VA = "0x12E90E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x12E90E8", Offset = "0x12E90E8", VA = "0x12E90E8")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x12E96BC", Offset = "0x12E96BC", VA = "0x12E96BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x12E9A68", Offset = "0x12E9A68", VA = "0x12E9A68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x12E9BDC", Offset = "0x12E9BDC", VA = "0x12E9BDC")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x12EA3D4", Offset = "0x12EA3D4", VA = "0x12EA3D4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x12EA410", Offset = "0x12EA410", VA = "0x12EA410")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x12EBC80", Offset = "0x12EBC80", VA = "0x12EBC80")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, int vertexOffset, int indexOffset, int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x12EBB58", Offset = "0x12EBB58", VA = "0x12EBB58")]
	private static void updateCountsForMesh(int totalVertexCount, uint totalIndexCount, int totalFaceCount, int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x12E94C8", Offset = "0x12E94C8", VA = "0x12E94C8")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x12E92D8", Offset = "0x12E92D8", VA = "0x12E92D8")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x12EC300", Offset = "0x12EC300", VA = "0x12EC300")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x12EC778", Offset = "0x12EC778", VA = "0x12EC778")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000A4")]
internal class ONSPPropagation
{
	[Token(Token = "0x20000A5")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x40002FD")]
		Int8,
		[Token(Token = "0x40002FE")]
		UInt8,
		[Token(Token = "0x40002FF")]
		Int16,
		[Token(Token = "0x4000300")]
		UInt16,
		[Token(Token = "0x4000301")]
		Int32,
		[Token(Token = "0x4000302")]
		UInt32,
		[Token(Token = "0x4000303")]
		Int64,
		[Token(Token = "0x4000304")]
		UInt64,
		[Token(Token = "0x4000305")]
		Float16,
		[Token(Token = "0x4000306")]
		Float32,
		[Token(Token = "0x4000307")]
		Float64
	}

	[Token(Token = "0x20000A6")]
	public class ClientType
	{
		[Token(Token = "0x4000308")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000309")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x400030A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x400030B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400030C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x400030D")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x400030E")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x400030F")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000310")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000311")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000312")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000313")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000314")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000315")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000316")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x80185C", Offset = "0x80185C", VA = "0x80185C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20000A7")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60003B9")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60003BA")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60003BB")]
		int CreateAudioGeometry([Out] IntPtr geometry);

		[Token(Token = "0x60003BC")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60003BD")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60003BE")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60003BF")]
		int AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4);

		[Token(Token = "0x60003C0")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60003C1")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60003C2")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60003C3")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value);

		[Token(Token = "0x60003C4")]
		int CreateAudioMaterial([Out] IntPtr material);

		[Token(Token = "0x60003C5")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60003C6")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60003C7")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20000A8")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000317")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700006E")]
		private IntPtr context
		{
			[Token(Token = "0x60003C8")]
			[Address(RVA = "0x8025A8", Offset = "0x8025A8", VA = "0x8025A8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x802608", Offset = "0x802608", VA = "0x802608")]
		public static extern int ovrAudio_GetPluginContext([Out] IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x802698", Offset = "0x802698", VA = "0x802698")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x802728", Offset = "0x802728", VA = "0x802728", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x80274C", Offset = "0x80274C", VA = "0x80274C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x8027DC", Offset = "0x8027DC", VA = "0x8027DC", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x802800", Offset = "0x802800", VA = "0x802800")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, [Out] IntPtr geometry);

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x80288C", Offset = "0x80288C", VA = "0x80288C", Slot = "6")]
		public int CreateAudioGeometry([Out] IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x8028B0", Offset = "0x8028B0", VA = "0x8028B0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x802930", Offset = "0x802930", VA = "0x802930", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x802938", Offset = "0x802938", VA = "0x802938")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x802A58", Offset = "0x802A58", VA = "0x802A58", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x802B54", Offset = "0x802B54", VA = "0x802B54")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x802BEC", Offset = "0x802BEC", VA = "0x802BEC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x802BF8", Offset = "0x802BF8", VA = "0x802BF8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4);

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x802D28", Offset = "0x802D28", VA = "0x802D28", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x802D34", Offset = "0x802D34", VA = "0x802D34")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x802DE0", Offset = "0x802DE0", VA = "0x802DE0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x802DEC", Offset = "0x802DEC", VA = "0x802DEC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x802E98", Offset = "0x802E98", VA = "0x802E98", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x802EA4", Offset = "0x802EA4", VA = "0x802EA4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x802F50", Offset = "0x802F50", VA = "0x802F50", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x802F5C", Offset = "0x802F5C", VA = "0x802F5C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, [Out] IntPtr material);

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x802FE8", Offset = "0x802FE8", VA = "0x802FE8", Slot = "15")]
		public int CreateAudioMaterial([Out] IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x80300C", Offset = "0x80300C", VA = "0x80300C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x80308C", Offset = "0x80308C", VA = "0x80308C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x803094", Offset = "0x803094", VA = "0x803094")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x80313C", Offset = "0x80313C", VA = "0x80313C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x803148", Offset = "0x803148", VA = "0x803148")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value);

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x8031F0", Offset = "0x8031F0", VA = "0x8031F0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x803200", Offset = "0x803200", VA = "0x803200")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x803290", Offset = "0x803290", VA = "0x803290", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x80329C", Offset = "0x80329C", VA = "0x80329C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20000A9")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000319")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700006F")]
		private IntPtr context
		{
			[Token(Token = "0x60003E9")]
			[Address(RVA = "0x8032E4", Offset = "0x8032E4", VA = "0x8032E4")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x803344", Offset = "0x803344", VA = "0x803344")]
		public static extern int ovrAudio_GetPluginContext([Out] IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x8033D4", Offset = "0x8033D4", VA = "0x8033D4")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x803464", Offset = "0x803464", VA = "0x803464", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x803488", Offset = "0x803488", VA = "0x803488")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x803518", Offset = "0x803518", VA = "0x803518", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x80353C", Offset = "0x80353C", VA = "0x80353C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, [Out] IntPtr geometry);

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x8035CC", Offset = "0x8035CC", VA = "0x8035CC", Slot = "6")]
		public int CreateAudioGeometry([Out] IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x8035F0", Offset = "0x8035F0", VA = "0x8035F0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x803670", Offset = "0x803670", VA = "0x803670", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x803678", Offset = "0x803678", VA = "0x803678")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x803798", Offset = "0x803798", VA = "0x803798", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x803894", Offset = "0x803894", VA = "0x803894")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x80392C", Offset = "0x80392C", VA = "0x80392C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x803938", Offset = "0x803938", VA = "0x803938")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4);

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x803A68", Offset = "0x803A68", VA = "0x803A68", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x803A74", Offset = "0x803A74", VA = "0x803A74")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x803B20", Offset = "0x803B20", VA = "0x803B20", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x803B2C", Offset = "0x803B2C", VA = "0x803B2C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x803BD8", Offset = "0x803BD8", VA = "0x803BD8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x803BE4", Offset = "0x803BE4", VA = "0x803BE4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x803C90", Offset = "0x803C90", VA = "0x803C90", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x803C9C", Offset = "0x803C9C", VA = "0x803C9C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, [Out] IntPtr material);

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x803D2C", Offset = "0x803D2C", VA = "0x803D2C", Slot = "15")]
		public int CreateAudioMaterial([Out] IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000401")]
		[Address(RVA = "0x803D50", Offset = "0x803D50", VA = "0x803D50")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x803DD0", Offset = "0x803DD0", VA = "0x803DD0", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x803DD8", Offset = "0x803DD8", VA = "0x803DD8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x803E80", Offset = "0x803E80", VA = "0x803E80", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000405")]
		[Address(RVA = "0x803E8C", Offset = "0x803E8C", VA = "0x803E8C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value);

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x803F34", Offset = "0x803F34", VA = "0x803F34", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x803F44", Offset = "0x803F44", VA = "0x803F44")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x803FD4", Offset = "0x803FD4", VA = "0x803FD4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x803FE0", Offset = "0x803FE0", VA = "0x803FE0")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20000AA")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x400031B")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000070")]
		private IntPtr context
		{
			[Token(Token = "0x600040A")]
			[Address(RVA = "0x801864", Offset = "0x801864", VA = "0x801864")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600040B")]
		[Address(RVA = "0x8018C4", Offset = "0x8018C4", VA = "0x8018C4")]
		public static extern int ovrAudio_GetPluginContext([Out] IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x801954", Offset = "0x801954", VA = "0x801954")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x8019E4", Offset = "0x8019E4", VA = "0x8019E4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600040E")]
		[Address(RVA = "0x801A08", Offset = "0x801A08", VA = "0x801A08")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x801A98", Offset = "0x801A98", VA = "0x801A98", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000410")]
		[Address(RVA = "0x801ABC", Offset = "0x801ABC", VA = "0x801ABC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, [Out] IntPtr geometry);

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x801B4C", Offset = "0x801B4C", VA = "0x801B4C", Slot = "6")]
		public int CreateAudioGeometry([Out] IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000412")]
		[Address(RVA = "0x801B70", Offset = "0x801B70", VA = "0x801B70")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x801BF0", Offset = "0x801BF0", VA = "0x801BF0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000414")]
		[Address(RVA = "0x801BF8", Offset = "0x801BF8", VA = "0x801BF8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x801D18", Offset = "0x801D18", VA = "0x801D18", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000416")]
		[Address(RVA = "0x801E14", Offset = "0x801E14", VA = "0x801E14")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x801EAC", Offset = "0x801EAC", VA = "0x801EAC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000418")]
		[Address(RVA = "0x801EB8", Offset = "0x801EB8", VA = "0x801EB8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4);

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x801FE8", Offset = "0x801FE8", VA = "0x801FE8", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600041A")]
		[Address(RVA = "0x801FF4", Offset = "0x801FF4", VA = "0x801FF4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x8020A0", Offset = "0x8020A0", VA = "0x8020A0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600041C")]
		[Address(RVA = "0x8020AC", Offset = "0x8020AC", VA = "0x8020AC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x802158", Offset = "0x802158", VA = "0x802158", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600041E")]
		[Address(RVA = "0x802164", Offset = "0x802164", VA = "0x802164")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x802210", Offset = "0x802210", VA = "0x802210", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000420")]
		[Address(RVA = "0x80221C", Offset = "0x80221C", VA = "0x80221C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, [Out] IntPtr material);

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x8022AC", Offset = "0x8022AC", VA = "0x8022AC", Slot = "15")]
		public int CreateAudioMaterial([Out] IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x8022D0", Offset = "0x8022D0", VA = "0x8022D0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x802350", Offset = "0x802350", VA = "0x802350", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x802358", Offset = "0x802358", VA = "0x802358")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x802400", Offset = "0x802400", VA = "0x802400", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x80240C", Offset = "0x80240C", VA = "0x80240C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value);

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x8024B4", Offset = "0x8024B4", VA = "0x8024B4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x8024C4", Offset = "0x8024C4", VA = "0x8024C4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x802554", Offset = "0x802554", VA = "0x802554", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x802560", Offset = "0x802560", VA = "0x802560")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700006D")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x12E8B70", Offset = "0x12E8B70", VA = "0x12E8B70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x12E8BE8", Offset = "0x12E8BE8", VA = "0x12E8BE8")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x12E8E60", Offset = "0x12E8E60", VA = "0x12E8E60")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000AB")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20000AC")]
	public enum Preset
	{
		[Token(Token = "0x4000323")]
		Custom,
		[Token(Token = "0x4000324")]
		AcousticTile,
		[Token(Token = "0x4000325")]
		Brick,
		[Token(Token = "0x4000326")]
		BrickPainted,
		[Token(Token = "0x4000327")]
		Carpet,
		[Token(Token = "0x4000328")]
		CarpetHeavy,
		[Token(Token = "0x4000329")]
		CarpetHeavyPadded,
		[Token(Token = "0x400032A")]
		CeramicTile,
		[Token(Token = "0x400032B")]
		Concrete,
		[Token(Token = "0x400032C")]
		ConcreteRough,
		[Token(Token = "0x400032D")]
		ConcreteBlock,
		[Token(Token = "0x400032E")]
		ConcreteBlockPainted,
		[Token(Token = "0x400032F")]
		Curtain,
		[Token(Token = "0x4000330")]
		Foliage,
		[Token(Token = "0x4000331")]
		Glass,
		[Token(Token = "0x4000332")]
		GlassHeavy,
		[Token(Token = "0x4000333")]
		Grass,
		[Token(Token = "0x4000334")]
		Gravel,
		[Token(Token = "0x4000335")]
		GypsumBoard,
		[Token(Token = "0x4000336")]
		PlasterOnBrick,
		[Token(Token = "0x4000337")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000338")]
		Soil,
		[Token(Token = "0x4000339")]
		SoundProof,
		[Token(Token = "0x400033A")]
		Snow,
		[Token(Token = "0x400033B")]
		Steel,
		[Token(Token = "0x400033C")]
		Water,
		[Token(Token = "0x400033D")]
		WoodThin,
		[Token(Token = "0x400033E")]
		WoodThick,
		[Token(Token = "0x400033F")]
		WoodFloor,
		[Token(Token = "0x4000340")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20000AD")]
	public sealed class Point
	{
		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x804028", Offset = "0x804028", VA = "0x804028")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x804060", Offset = "0x804060", VA = "0x804060")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x8040CC", Offset = "0x8040CC", VA = "0x8040CC")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20000AE")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x62D420", Offset = "0x62D420")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20000AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D458", Offset = "0x62D458")]
		private sealed class <>c
		{
			[Token(Token = "0x4000345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6000457")]
			[Address(RVA = "0x17D3D0C", Offset = "0x17D3D0C", VA = "0x17D3D0C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000458")]
			[Address(RVA = "0x17D3D14", Offset = "0x17D3D14", VA = "0x17D3D14")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6000459")]
			[Address(RVA = "0x17D3D30", Offset = "0x17D3D30", VA = "0x17D3D30")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000072")]
		public float Item
		{
			[Token(Token = "0x6000454")]
			[Address(RVA = "0x8040E8", Offset = "0x8040E8", VA = "0x8040E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x804554", Offset = "0x804554", VA = "0x804554")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632334", Offset = "0x632334")]
	public Spectrum absorption;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63236C", Offset = "0x63236C")]
	public Spectrum transmission;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6323A4", Offset = "0x6323A4")]
	public Spectrum scattering;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000071")]
	public Preset preset
	{
		[Token(Token = "0x600042B")]
		[Address(RVA = "0x12EC87C", Offset = "0x12EC87C", VA = "0x12EC87C")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600042C")]
		[Address(RVA = "0x12EC884", Offset = "0x12EC884", VA = "0x12EC884")]
		set
		{
		}
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x12EC8AC", Offset = "0x12EC8AC", VA = "0x12EC8AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x12EC17C", Offset = "0x12EC17C", VA = "0x12EC17C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x12ECEC0", Offset = "0x12ECEC0", VA = "0x12ECEC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x12ECEC4", Offset = "0x12ECEC4", VA = "0x12ECEC4")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x12EC8B0", Offset = "0x12EC8B0", VA = "0x12EC8B0")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x12EB9C0", Offset = "0x12EB9C0", VA = "0x12EB9C0")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x12ECFA8", Offset = "0x12ECFA8", VA = "0x12ECFA8")]
	private static void AcousticTile(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x12ED488", Offset = "0x12ED488", VA = "0x12ED488")]
	private static void Brick(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x12ED974", Offset = "0x12ED974", VA = "0x12ED974")]
	private static void BrickPainted(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x12EDE54", Offset = "0x12EDE54", VA = "0x12EDE54")]
	private static void Carpet(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x12EE348", Offset = "0x12EE348", VA = "0x12EE348")]
	private static void CarpetHeavy(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x12EE828", Offset = "0x12EE828", VA = "0x12EE828")]
	private static void CarpetHeavyPadded(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x12EED08", Offset = "0x12EED08", VA = "0x12EED08")]
	private static void CeramicTile(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x12EF1F0", Offset = "0x12EF1F0", VA = "0x12EF1F0")]
	private static void Concrete(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x12EF6D8", Offset = "0x12EF6D8", VA = "0x12EF6D8")]
	private static void ConcreteRough(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x12EFBC4", Offset = "0x12EFBC4", VA = "0x12EFBC4")]
	private static void ConcreteBlock(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x12F00AC", Offset = "0x12F00AC", VA = "0x12F00AC")]
	private static void ConcreteBlockPainted(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x12F059C", Offset = "0x12F059C", VA = "0x12F059C")]
	private static void Curtain(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x12F0A7C", Offset = "0x12F0A7C", VA = "0x12F0A7C")]
	private static void Foliage(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x12F0F68", Offset = "0x12F0F68", VA = "0x12F0F68")]
	private static void Glass(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x12F1438", Offset = "0x12F1438", VA = "0x12F1438")]
	private static void GlassHeavy(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x12F1914", Offset = "0x12F1914", VA = "0x12F1914")]
	private static void Grass(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x12F1CC4", Offset = "0x12F1CC4", VA = "0x12F1CC4")]
	private static void Gravel(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x12F206C", Offset = "0x12F206C", VA = "0x12F206C")]
	private static void GypsumBoard(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x12F255C", Offset = "0x12F255C", VA = "0x12F255C")]
	private static void PlasterOnBrick(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x12F2A48", Offset = "0x12F2A48", VA = "0x12F2A48")]
	private static void PlasterOnConcreteBlock(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x12F2F34", Offset = "0x12F2F34", VA = "0x12F2F34")]
	private static void Soil(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x12F32E8", Offset = "0x12F32E8", VA = "0x12F32E8")]
	private static void SoundProof(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x12F3484", Offset = "0x12F3484", VA = "0x12F3484")]
	private static void Snow(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x12F3828", Offset = "0x12F3828", VA = "0x12F3828")]
	private static void Steel(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x12F3CF8", Offset = "0x12F3CF8", VA = "0x12F3CF8")]
	private static void Water(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x12F41D8", Offset = "0x12F41D8", VA = "0x12F41D8")]
	private static void WoodThin(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x12F46B0", Offset = "0x12F46B0", VA = "0x12F46B0")]
	private static void WoodThick(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x12F4B90", Offset = "0x12F4B90", VA = "0x12F4B90")]
	private static void WoodFloor(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x12F5078", Offset = "0x12F5078", VA = "0x12F5078")]
	private static void WoodOnConcrete(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x12F555C", Offset = "0x12F555C", VA = "0x12F555C")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x12F562C", Offset = "0x12F562C", VA = "0x12F562C")]
	private void Update()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x12F56F0", Offset = "0x12F56F0", VA = "0x12F56F0")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000B1")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000073")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x600045C")]
		[Address(RVA = "0x12E7EC8", Offset = "0x12E7EC8", VA = "0x12E7EC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x12F5D60", Offset = "0x12F5D60", VA = "0x12F5D60")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000B2")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x400034B")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x600045E")]
	[Address(RVA = "0x12F5D70", Offset = "0x12F5D70", VA = "0x12F5D70")]
	private static extern void ONSP_GetVersion(int Major, int Minor, int Patch);

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x12F5E08", Offset = "0x12F5E08", VA = "0x12F5E08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x12F5F2C", Offset = "0x12F5F2C", VA = "0x12F5F2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x12F5F30", Offset = "0x12F5F30", VA = "0x12F5F30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x12F5F34", Offset = "0x12F5F34", VA = "0x12F5F34")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000B3")]
public class test_moving_points : MonoBehaviour
{
	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] points;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int next;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float arrive;

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xC2CF94", Offset = "0xC2CF94", VA = "0xC2CF94")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xC2D144", Offset = "0xC2D144", VA = "0xC2D144")]
	public test_moving_points()
	{
	}
}
[Token(Token = "0x20000B4")]
public class s3DBButton_password : MonoBehaviour
{
	[Token(Token = "0x20000B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D468", Offset = "0x62D468")]
	private sealed class <animInformer>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public s3DBButton_password <>4__this;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool b;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000470")]
			[Address(RVA = "0xB528D0", Offset = "0xB528D0", VA = "0xB528D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000472")]
			[Address(RVA = "0xB52918", Offset = "0xB52918", VA = "0xB52918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0xB52600", Offset = "0xB52600", VA = "0xB52600")]
		[DebuggerHidden]
		public <animInformer>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0xB5262C", Offset = "0xB5262C", VA = "0xB5262C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0xB52630", Offset = "0xB52630", VA = "0xB52630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0xB528D8", Offset = "0xB528D8", VA = "0xB528D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6323FC", Offset = "0x6323FC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6323FC", Offset = "0x6323FC")]
	public string secret;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63244C", Offset = "0x63244C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x63244C", Offset = "0x63244C")]
	public bool debug;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject button0;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject button1;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject button2;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject button3;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject button4;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject button5;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject button6;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject button7;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject button8;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject button9;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject generalButton;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x63249C", Offset = "0x63249C")]
	public str3DBbScreenInfo informer;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public str3DdBbReceiver2[] sendToOpen;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject[] buttons;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool iWait;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string nSecret;

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xC24544", Offset = "0xC24544", VA = "0xC24544")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xC249B8", Offset = "0xC249B8", VA = "0xC249B8")]
	private bool testSecret()
	{
		return default(bool);
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xC24A7C", Offset = "0xC24A7C", VA = "0xC24A7C")]
	public void button(str3DBbMessage msg)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xC24D48", Offset = "0xC24D48", VA = "0xC24D48")]
	private void Locker()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xC24F94", Offset = "0xC24F94", VA = "0xC24F94")]
	private void informerUpdate(int length, int sybol)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xC24CBC", Offset = "0xC24CBC", VA = "0xC24CBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B090", Offset = "0x63B090")]
	private IEnumerator animInformer(bool b)
	{
		return null;
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xC257F4", Offset = "0xC257F4", VA = "0xC257F4")]
	private void showElements(bool n, bool d, bool m)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xC25AA4", Offset = "0xC25AA4", VA = "0xC25AA4")]
	public s3DBButton_password()
	{
	}
}
[Token(Token = "0x20000B6")]
public class s3DBButton_receiver : MonoBehaviour
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debug;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6324B0", Offset = "0x6324B0")]
	public enum3dBbType position;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 position0;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 position1;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6324E8", Offset = "0x6324E8")]
	public enum3dBbType rotation;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 rotation0;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 rotation1;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632520", Offset = "0x632520")]
	public enum3dBbType objects;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] objects0;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] objects1;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632558", Offset = "0x632558")]
	public enum3dBbType materials;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ste3DBbMats[] materials0;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ste3DBbMats[] materials1;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool statePosition;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool stateRotation;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool stateObjects;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	private bool stateMaterials;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool stateMessage;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private enum3DBbState3 state;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private str3DBbMessage msg;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xC25B38", Offset = "0xC25B38", VA = "0xC25B38")]
	public void button(str3DBbMessage msg)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xC25BA4", Offset = "0xC25BA4", VA = "0xC25BA4")]
	private void switchPosition()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xC25C98", Offset = "0xC25C98", VA = "0xC25C98")]
	private void switchRotation()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xC25DAC", Offset = "0xC25DAC", VA = "0xC25DAC")]
	private void switchObjects()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xC25E7C", Offset = "0xC25E7C", VA = "0xC25E7C")]
	private void switchMaterials()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xC26010", Offset = "0xC26010", VA = "0xC26010")]
	private void setMaterials(ste3DBbMats[] m)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xC25F44", Offset = "0xC25F44", VA = "0xC25F44")]
	private void setObjects(bool a, bool b)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xC26168", Offset = "0xC26168", VA = "0xC26168")]
	public s3DBButton_receiver()
	{
	}
}
[Token(Token = "0x20000B7")]
public class s3DBButton_sender : MonoBehaviour
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public str3DdBbReceiver[] SendToGameObjects;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xC26170", Offset = "0xC26170", VA = "0xC26170")]
	public void SendToObjects()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xC26288", Offset = "0xC26288", VA = "0xC26288")]
	public s3DBButton_sender()
	{
	}
}
[Token(Token = "0x20000B8")]
public class TestG06 : MonoBehaviour
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currentAnimIndex;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int totalAnimations;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> animationNames;

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x10E4994", Offset = "0x10E4994", VA = "0x10E4994")]
	private void Start()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x10E4CB4", Offset = "0x10E4CB4", VA = "0x10E4CB4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x10E4F64", Offset = "0x10E4F64", VA = "0x10E4F64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x10E4F68", Offset = "0x10E4F68", VA = "0x10E4F68")]
	public TestG06()
	{
	}
}
[Token(Token = "0x20000B9")]
public class TestAnimations : MonoBehaviour
{
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int weaponIndex;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public WeaponState[] weapons;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int currentAnimIndex;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int totalAnimations;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> animationNames;

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x10E2F9C", Offset = "0x10E2F9C", VA = "0x10E2F9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x10E46C0", Offset = "0x10E46C0", VA = "0x10E46C0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x10E4988", Offset = "0x10E4988", VA = "0x10E4988")]
	private void Update()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x10E433C", Offset = "0x10E433C", VA = "0x10E433C")]
	private void ChangeWeaponState()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x10E498C", Offset = "0x10E498C", VA = "0x10E498C")]
	public TestAnimations()
	{
	}
}
[Token(Token = "0x20000BA")]
public class WeaponState
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> weaponModels;

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x9C6FA8", Offset = "0x9C6FA8", VA = "0x9C6FA8")]
	public WeaponState()
	{
	}
}
[Token(Token = "0x20000BB")]
public class AvatarEditor : MonoBehaviour
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool AvatarInit;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject renderPlate;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture avatarRTD;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material avatarMat;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera avatarCam;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextureSwapper[] swappers;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<SkinnedMeshRenderer> hairModels;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currentHairModel;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int oldHairModel;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SkinColors skincolors;

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xEE59A8", Offset = "0xEE59A8", VA = "0xEE59A8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xEE5EBC", Offset = "0xEE5EBC", VA = "0xEE5EBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xEE5EC0", Offset = "0xEE5EC0", VA = "0xEE5EC0")]
	public AvatarEditor()
	{
	}
}
[Token(Token = "0x20000BC")]
public class AvatarLODSystem : MonoBehaviour
{
	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SkinnedMeshRenderer> bodies;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> ratios;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float screenRatio;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int currentBodyIndex;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xEE5EC8", Offset = "0xEE5EC8", VA = "0xEE5EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xEE5ED0", Offset = "0xEE5ED0", VA = "0xEE5ED0")]
	private void Update()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xEE6160", Offset = "0xEE6160", VA = "0xEE6160")]
	public AvatarLODSystem()
	{
	}
}
[Token(Token = "0x20000BD")]
public class CamTarget : MonoBehaviour
{
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float camSpeed;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 lerpPos;

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xB240C0", Offset = "0xB240C0", VA = "0xB240C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xB24194", Offset = "0xB24194", VA = "0xB24194")]
	public CamTarget()
	{
	}
}
[Token(Token = "0x20000BE")]
public class CharacterDemoController : MonoBehaviour
{
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject floorPlane;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int WeaponState;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool wasAttacking;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotateSpeed;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 movementTargetPosition;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 attackPos;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 lookAtPos;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RaycastHit hit;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Ray ray;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool rightButtonDown;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xB28AE8", Offset = "0xB28AE8", VA = "0xB28AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xB28B74", Offset = "0xB28B74", VA = "0xB28B74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xB295F4", Offset = "0xB295F4", VA = "0xB295F4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xB296AC", Offset = "0xB296AC", VA = "0xB296AC")]
	public CharacterDemoController()
	{
	}
}
[Token(Token = "0x20000BF")]
public class LOD_Holder : MonoBehaviour
{
	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int level;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ratio;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SkinnedMeshRenderer> models;

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x8F8C64", Offset = "0x8F8C64", VA = "0x8F8C64")]
	public LOD_Holder()
	{
	}
}
[Token(Token = "0x20000C0")]
public class MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float xSpeed;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float ySpeed;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float x;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float y;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xBAFAA0", Offset = "0xBAFAA0", VA = "0xBAFAA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xBAFB84", Offset = "0xBAFB84", VA = "0xBAFB84")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xBAFED4", Offset = "0xBAFED4", VA = "0xBAFED4")]
	private float ClampAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xBAFF00", Offset = "0xBAFF00", VA = "0xBAFF00")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xBAFFB8", Offset = "0xBAFFB8", VA = "0xBAFFB8")]
	public MouseOrbit()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C1")]
public class Outfitter : MonoBehaviour
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterDemoController ac;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int oldWeaponIndex;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<WeaponSlot> weapons;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x96ECB8", Offset = "0x96ECB8", VA = "0x96ECB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x96EF20", Offset = "0x96EF20", VA = "0x96EF20")]
	private void Update()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x96F138", Offset = "0x96F138", VA = "0x96F138")]
	public Outfitter()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C2")]
public class WeaponSlot
{
	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public List<Renderer> models;

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x9C6F1C", Offset = "0x9C6F1C", VA = "0x9C6F1C")]
	public WeaponSlot()
	{
	}
}
[Token(Token = "0x20000C3")]
public class PhysicsCharacterController : MonoBehaviour
{
	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject floorPlane;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int WeaponState;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool wasAttacking;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool nonCombat;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotateSpeed;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 movementTargetPosition;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 attackPos;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 lookAtPos;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float gravity;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private RaycastHit hit;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Ray ray;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool rightButtonDown;

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x974174", Offset = "0x974174", VA = "0x974174")]
	private void Start()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x974200", Offset = "0x974200", VA = "0x974200")]
	private void Update()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x974D10", Offset = "0x974D10", VA = "0x974D10")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x974DC8", Offset = "0x974DC8", VA = "0x974DC8")]
	public PhysicsCharacterController()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C4")]
public class PhysicsCharacterOutfitter : MonoBehaviour
{
	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhysicsCharacterController cpc;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int oldWeaponIndex;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<WeaponSlot> weapons;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x974DE0", Offset = "0x974DE0", VA = "0x974DE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x975048", Offset = "0x975048", VA = "0x975048")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x975260", Offset = "0x975260", VA = "0x975260")]
	public PhysicsCharacterOutfitter()
	{
	}
}
[Token(Token = "0x20000C5")]
public class RootMotionOff : StateMachineBehaviour
{
	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ColliderTestTime;

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xC6C194", Offset = "0xC6C194", VA = "0xC6C194", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xC6C1B4", Offset = "0xC6C1B4", VA = "0xC6C1B4", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xC6C1D4", Offset = "0xC6C1D4", VA = "0xC6C1D4")]
	public RootMotionOff()
	{
	}
}
[Token(Token = "0x20000C6")]
public class SkinColors : MonoBehaviour
{
	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer skinPlate;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer facePlate;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material skinMat;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material faceMat;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] skinColors;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public int skinColorCurrentIndex;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int skinColorOldIndex;

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xC6FE90", Offset = "0xC6FE90", VA = "0xC6FE90")]
	public void Start()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xC6FF54", Offset = "0xC6FF54", VA = "0xC6FF54")]
	public void Update()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xC700CC", Offset = "0xC700CC", VA = "0xC700CC")]
	public SkinColors()
	{
	}
}
[Token(Token = "0x20000C7")]
public class SkinnedMeshCombiner : MonoBehaviour
{
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material baseMat;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SkinnedMeshRenderer newSkin;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SkinnedMeshRenderer> smRenderers;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LOD_Holder> holders;

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xC700D4", Offset = "0xC700D4", VA = "0xC700D4")]
	public void Start()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xC70BF4", Offset = "0xC70BF4", VA = "0xC70BF4")]
	public SkinnedMeshCombiner()
	{
	}
}
[Token(Token = "0x20000C8")]
public class TextureSwapper : MonoBehaviour
{
	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string dirPath;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer mesh;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material mat;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material oldMat;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D currentTexture;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int currentIndex;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int oldIndex;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string[] names;

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x10E564C", Offset = "0x10E564C", VA = "0x10E564C")]
	public void Start()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x10E58C4", Offset = "0x10E58C4", VA = "0x10E58C4")]
	public void Update()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x10E5904", Offset = "0x10E5904", VA = "0x10E5904")]
	private void UpdateTexture()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x10E5908", Offset = "0x10E5908", VA = "0x10E5908")]
	public TextureSwapper()
	{
	}
}
[Token(Token = "0x20000C9")]
public class CopsAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xAF1A94", Offset = "0xAF1A94", VA = "0xAF1A94")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xAF1B08", Offset = "0xAF1B08", VA = "0xAF1B08")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xAF1B40", Offset = "0xAF1B40", VA = "0xAF1B40")]
	public CopsAutoRotate()
	{
	}
}
[Token(Token = "0x20000CA")]
public class FatGangsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x8E8234", Offset = "0x8E8234", VA = "0x8E8234")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x8E82A8", Offset = "0x8E82A8", VA = "0x8E82A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x8E82E0", Offset = "0x8E82E0", VA = "0x8E82E0")]
	public FatGangsterAutoRotate()
	{
	}
}
[Token(Token = "0x20000CB")]
public class FatMobsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x8E82E8", Offset = "0x8E82E8", VA = "0x8E82E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x8E835C", Offset = "0x8E835C", VA = "0x8E835C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x8E8394", Offset = "0x8E8394", VA = "0x8E8394")]
	public FatMobsterAutoRotate()
	{
	}
}
[Token(Token = "0x20000CC")]
public class FemaleCopsAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x8E83A4", Offset = "0x8E83A4", VA = "0x8E83A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x8E8418", Offset = "0x8E8418", VA = "0x8E8418")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x8E8450", Offset = "0x8E8450", VA = "0x8E8450")]
	public FemaleCopsAutoRotate()
	{
	}
}
[Token(Token = "0x20000CD")]
public class GangsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x8EB070", Offset = "0x8EB070", VA = "0x8EB070")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x8EB0E4", Offset = "0x8EB0E4", VA = "0x8EB0E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x8EB11C", Offset = "0x8EB11C", VA = "0x8EB11C")]
	public GangsterAutoRotate()
	{
	}
}
[Token(Token = "0x20000CE")]
public class GothicGirlAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x8EB828", Offset = "0x8EB828", VA = "0x8EB828")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x8EB89C", Offset = "0x8EB89C", VA = "0x8EB89C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x8EB8D4", Offset = "0x8EB8D4", VA = "0x8EB8D4")]
	public GothicGirlAutoRotate()
	{
	}
}
[Token(Token = "0x20000CF")]
public class GothicGuysAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x8EB8DC", Offset = "0x8EB8DC", VA = "0x8EB8DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x8EB950", Offset = "0x8EB950", VA = "0x8EB950")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x8EB988", Offset = "0x8EB988", VA = "0x8EB988")]
	public GothicGuysAutoRotate()
	{
	}
}
[Token(Token = "0x20000D0")]
public class GothicHeaviesAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x8EB990", Offset = "0x8EB990", VA = "0x8EB990")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x8EBA04", Offset = "0x8EBA04", VA = "0x8EBA04")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x8EBA3C", Offset = "0x8EBA3C", VA = "0x8EBA3C")]
	public GothicHeaviesAutoRotate()
	{
	}
}
[Token(Token = "0x20000D1")]
public class HeavyCopAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x8F1DFC", Offset = "0x8F1DFC", VA = "0x8F1DFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x8F1E70", Offset = "0x8F1E70", VA = "0x8F1E70")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x8F1EA8", Offset = "0x8F1EA8", VA = "0x8F1EA8")]
	public HeavyCopAutoRotate()
	{
	}
}
[Token(Token = "0x20000D2")]
public class HeavyGangsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x8F1EB0", Offset = "0x8F1EB0", VA = "0x8F1EB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x8F1F24", Offset = "0x8F1F24", VA = "0x8F1F24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x8F1F5C", Offset = "0x8F1F5C", VA = "0x8F1F5C")]
	public HeavyGangsterAutoRotate()
	{
	}
}
[Token(Token = "0x20000D3")]
public class HeavyMobsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x8F1F64", Offset = "0x8F1F64", VA = "0x8F1F64")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x8F1FD8", Offset = "0x8F1FD8", VA = "0x8F1FD8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x8F2010", Offset = "0x8F2010", VA = "0x8F2010")]
	public HeavyMobsterAutoRotate()
	{
	}
}
[Token(Token = "0x20000D4")]
public class MobsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xBAF730", Offset = "0xBAF730", VA = "0xBAF730")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xBAF7A4", Offset = "0xBAF7A4", VA = "0xBAF7A4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xBAF7DC", Offset = "0xBAF7DC", VA = "0xBAF7DC")]
	public MobsterAutoRotate()
	{
	}
}
[Token(Token = "0x20000D5")]
public class ThinGangsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x10E596C", Offset = "0x10E596C", VA = "0x10E596C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x10E59E0", Offset = "0x10E59E0", VA = "0x10E59E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x10E5A18", Offset = "0x10E5A18", VA = "0x10E5A18")]
	public ThinGangsterAutoRotate()
	{
	}
}
[Token(Token = "0x20000D6")]
public class ThinMobsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x10E5A20", Offset = "0x10E5A20", VA = "0x10E5A20")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x10E5A94", Offset = "0x10E5A94", VA = "0x10E5A94")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x10E5ACC", Offset = "0x10E5ACC", VA = "0x10E5ACC")]
	public ThinMobsterAutoRotate()
	{
	}
}
[Token(Token = "0x20000D7")]
public class UrbanWeaponsAutoRotate : MonoBehaviour
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x10EFBAC", Offset = "0x10EFBAC", VA = "0x10EFBAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x10EFC20", Offset = "0x10EFC20", VA = "0x10EFC20")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x10EFC58", Offset = "0x10EFC58", VA = "0x10EFC58")]
	public UrbanWeaponsAutoRotate()
	{
	}
}
[Token(Token = "0x20000D8")]
public class CameraShake : MonoBehaviour
{
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform camTransform;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float shakeDuration;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float shakeAmount;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float decreaseFactor;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 originalPos;

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xB251C0", Offset = "0xB251C0", VA = "0xB251C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xB25304", Offset = "0xB25304", VA = "0xB25304")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xB2533C", Offset = "0xB2533C", VA = "0xB2533C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xB25538", Offset = "0xB25538", VA = "0xB25538")]
	public CameraShake()
	{
	}
}
[Token(Token = "0x20000D9")]
public class CameraShakeCaller : MonoBehaviour
{
	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ProjectileShakeDuration;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ProjectileShakeAmount;

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xB255A8", Offset = "0xB255A8", VA = "0xB255A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xB2562C", Offset = "0xB2562C", VA = "0xB2562C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xB25630", Offset = "0xB25630", VA = "0xB25630")]
	public CameraShakeCaller()
	{
	}
}
[Token(Token = "0x20000DA")]
public class CameraShakeProjectile : MonoBehaviour
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator CamerShakeAnimator;

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xB25644", Offset = "0xB25644", VA = "0xB25644")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xB25648", Offset = "0xB25648", VA = "0xB25648")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xB2564C", Offset = "0xB2564C", VA = "0xB2564C")]
	public void ShakeCamera()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xB256A4", Offset = "0xB256A4", VA = "0xB256A4")]
	public CameraShakeProjectile()
	{
	}
}
[Token(Token = "0x20000DB")]
public class EffectActor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000DC")]
	public class projectile
	{
		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject bombPrefab;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bombPrefabTransform;

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x7DA3D0", Offset = "0x7DA3D0", VA = "0x7DA3D0")]
		public projectile()
		{
		}
	}

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnLocator;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public projectile[] bombList;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string FauxName;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text UiText;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int bombType;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float min;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float max;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool MinorRotate;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool MajorRotate;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int seq;

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x9BAFAC", Offset = "0x9BAFAC", VA = "0x9BAFAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x9BB0B4", Offset = "0x9BB0B4", VA = "0x9BB0B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x9BB174", Offset = "0x9BB174", VA = "0x9BB174")]
	public void Switch(int value)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x9BB2C4", Offset = "0x9BB2C4", VA = "0x9BB2C4")]
	public void Fire()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x9BB458", Offset = "0x9BB458", VA = "0x9BB458")]
	private void RandomizeRotation()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x9BB55C", Offset = "0x9BB55C", VA = "0x9BB55C")]
	private void Major_RandomizeRotation()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x9BB640", Offset = "0x9BB640", VA = "0x9BB640")]
	public EffectActor()
	{
	}
}
[Token(Token = "0x20000DD")]
public class ExplodingProjectile : MonoBehaviour
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactPrefab;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosionPrefab;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float thrust;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody thisRigidbody;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject particleKillGroup;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider thisCollider;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool LookRotation;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool Missile;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform missileTarget;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float projectileSpeed;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float projectileSpeedMultiplier;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool ignorePrevRotation;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool explodeOnTimer;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float explosionTimer;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timer;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 previousPosition;

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x8E4E24", Offset = "0x8E4E24", VA = "0x8E4E24")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x8E4F28", Offset = "0x8E4F28", VA = "0x8E4F28")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x8E50B4", Offset = "0x8E50B4", VA = "0x8E50B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x8E51CC", Offset = "0x8E51CC", VA = "0x8E51CC")]
	private void CheckCollision(Vector3 prevPos)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x8E54B0", Offset = "0x8E54B0", VA = "0x8E54B0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x8E4F88", Offset = "0x8E4F88", VA = "0x8E4F88")]
	private void Explode()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x8E575C", Offset = "0x8E575C", VA = "0x8E575C")]
	public ExplodingProjectile()
	{
	}
}
[Token(Token = "0x20000DE")]
public class Projectile : MonoBehaviour
{
	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float disappearAfterTime;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float disappearTimer;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isActive;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 direction;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startPosition;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float movementSpeed;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 targetPosition;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float distanceToTarget;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float movementValue;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x9785B0", Offset = "0x9785B0", VA = "0x9785B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x9785B4", Offset = "0x9785B4", VA = "0x9785B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x978674", Offset = "0x978674", VA = "0x978674")]
	private void Move()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x9786F4", Offset = "0x9786F4", VA = "0x9786F4")]
	private void MoveWithoutTargetHit()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x978778", Offset = "0x978778", VA = "0x978778")]
	public void Fire(Vector3 target, Vector3 spawnPosition, Vector3 Direction, float speed)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x978668", Offset = "0x978668", VA = "0x978668")]
	private void Explode()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x978888", Offset = "0x978888", VA = "0x978888")]
	public bool GetIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x978890", Offset = "0x978890", VA = "0x978890")]
	public Projectile()
	{
	}
}
[Token(Token = "0x20000DF")]
public class projectileActor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000E0")]
	public class projectile
	{
		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bombPrefab;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject muzzleflare;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float min;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float max;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool rapidFire;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rapidFireCooldown;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool shotgunBehavior;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int shotgunPellets;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject shellPrefab;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool hasShells;

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xB513CC", Offset = "0xB513CC", VA = "0xB513CC")]
		public projectile()
		{
		}
	}

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnLocator;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spawnLocatorMuzzleFlare;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform shellLocator;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator recoilAnimator;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] shotgunLocator;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public projectile[] bombList;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string FauxName;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text UiText;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UImaster;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool CameraShake;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float rapidFireDelay;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CameraShakeProjectile CameraShakeCaller;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float firingTimer;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool firing;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int bombType;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool swarmMissileLauncher;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool Torque;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float Tor_min;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float Tor_max;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool MinorRotate;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool MajorRotate;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int seq;

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xC1CC50", Offset = "0xC1CC50", VA = "0xC1CC50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xC1CCE4", Offset = "0xC1CCE4", VA = "0xC1CCE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xC1CEF4", Offset = "0xC1CEF4", VA = "0xC1CEF4")]
	public void Switch(int value)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xC1CFB8", Offset = "0xC1CFB8", VA = "0xC1CFB8")]
	public void Fire()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xC1D550", Offset = "0xC1D550", VA = "0xC1D550")]
	private void RandomizeRotation()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xC1D654", Offset = "0xC1D654", VA = "0xC1D654")]
	private void Major_RandomizeRotation()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xC1D738", Offset = "0xC1D738", VA = "0xC1D738")]
	public projectileActor()
	{
	}
}
[Token(Token = "0x20000E1")]
public class destroyMe : MonoBehaviour
{
	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float deathtimer;

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x9CC6D8", Offset = "0x9CC6D8", VA = "0x9CC6D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x9CC6DC", Offset = "0x9CC6DC", VA = "0x9CC6DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x9CC78C", Offset = "0x9CC78C", VA = "0x9CC78C")]
	public destroyMe()
	{
	}
}
[Token(Token = "0x20000E2")]
[ExecuteInEditMode]
public class particleColorChangerMaster : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000E3")]
	public class colorChange
	{
		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem[] colored_ParticleSystem;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient Gradient_custom;

		[Token(Token = "0x600050E")]
		[Address(RVA = "0xB50A38", Offset = "0xB50A38", VA = "0xB50A38")]
		public colorChange()
		{
		}
	}

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed_custom;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public colorChange[] colorChangeList;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool applyChanges;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool Keep_applyChanges;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x1195650", Offset = "0x1195650", VA = "0x1195650")]
	private void Start()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1195654", Offset = "0x1195654", VA = "0x1195654")]
	private void Update()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x1195808", Offset = "0x1195808", VA = "0x1195808")]
	public particleColorChangerMaster()
	{
	}
}
[Token(Token = "0x20000E4")]
public class LightFlickerEffect : MonoBehaviour
{
	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6325E0", Offset = "0x6325E0")]
	public Light _light;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632618", Offset = "0x632618")]
	public float minIntensity;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632650", Offset = "0x632650")]
	public float maxIntensity;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x632688", Offset = "0x632688")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632688", Offset = "0x632688")]
	public int smoothing;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Queue<float> smoothQueue;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastSum;

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xBA5080", Offset = "0xBA5080", VA = "0xBA5080")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xBA50DC", Offset = "0xBA50DC", VA = "0xBA50DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xBA51F8", Offset = "0xBA51F8", VA = "0xBA51F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xBA5348", Offset = "0xBA5348", VA = "0xBA5348")]
	public LightFlickerEffect()
	{
	}
}
[Token(Token = "0x20000E5")]
public class NextPrefab : MonoBehaviour
{
	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_PrefabList;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_CurrentElementIndex;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_CurrentParticleIndex;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] m_CurrentElementList;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_CurrentParticle;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text m_ParticleName;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x12E7078", Offset = "0x12E7078", VA = "0x12E7078")]
	private void Start()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x12E7248", Offset = "0x12E7248", VA = "0x12E7248")]
	private void Update()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x12E70A8", Offset = "0x12E70A8", VA = "0x12E70A8")]
	private void ShowParticle()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x12E72D4", Offset = "0x12E72D4", VA = "0x12E72D4")]
	public NextPrefab()
	{
	}
}
[Token(Token = "0x20000E6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62D488", Offset = "0x62D488")]
public class UserCamera : MonoBehaviour
{
	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float yOffset;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distance;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xSpeed;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ySpeed;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMinLimit;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float yMaxLimit;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMin;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distanceMax;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float x;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float y;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x10EFC60", Offset = "0x10EFC60", VA = "0x10EFC60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x10EFC98", Offset = "0x10EFC98", VA = "0x10EFC98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x10EFF90", Offset = "0x10EFF90", VA = "0x10EFF90")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x10EFFC0", Offset = "0x10EFFC0", VA = "0x10EFFC0")]
	public UserCamera()
	{
	}
}
[Token(Token = "0x20000E7")]
public class MuzzleFlash : MonoBehaviour
{
	[Token(Token = "0x600051B")]
	[Address(RVA = "0x12E4B78", Offset = "0x12E4B78", VA = "0x12E4B78")]
	private void Update()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x12E4C6C", Offset = "0x12E4C6C", VA = "0x12E4C6C")]
	public MuzzleFlash()
	{
	}
}
[Token(Token = "0x20000E8")]
public class CUI_MoveAlong : MonoBehaviour
{
	[Token(Token = "0x600051D")]
	[Address(RVA = "0xB1CD14", Offset = "0xB1CD14", VA = "0xB1CD14")]
	private void Start()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xB1CD18", Offset = "0xB1CD18", VA = "0xB1CD18")]
	private void Update()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xB1CF40", Offset = "0xB1CF40", VA = "0xB1CF40")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x20000E9")]
public class CUI_MoveHeartbeat : MonoBehaviour
{
	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xB1CF48", Offset = "0xB1CF48", VA = "0xB1CF48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xB1D000", Offset = "0xB1D000", VA = "0xB1D000")]
	private void Update()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xB1D124", Offset = "0xB1D124", VA = "0xB1D124")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x20000EA")]
public class CUI_rotation_anim : MonoBehaviour
{
	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xB1E8BC", Offset = "0xB1E8BC", VA = "0xB1E8BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xB1E8C0", Offset = "0xB1E8C0", VA = "0xB1E8C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xB1EAA8", Offset = "0xB1EAA8", VA = "0xB1EAA8")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x20000EB")]
public class CUI_ShowParentCoordinates : MonoBehaviour
{
	[Token(Token = "0x6000526")]
	[Address(RVA = "0xB1DA90", Offset = "0xB1DA90", VA = "0xB1DA90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xB1DB64", Offset = "0xB1DB64", VA = "0xB1DB64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xB1DB68", Offset = "0xB1DB68", VA = "0xB1DB68")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x20000EC")]
public class CUI_touchpad : MonoBehaviour
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xB1EAB0", Offset = "0xB1EAB0", VA = "0xB1EAB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xB1EB24", Offset = "0xB1EB24", VA = "0xB1EB24")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xB1EBE4", Offset = "0xB1EBE4", VA = "0xB1EBE4")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x20000ED")]
[ExecuteInEditMode]
public class CurvedUIInputModule : StandaloneInputModule
{
	[Token(Token = "0x20000EE")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4000474")]
		MOUSE = 0,
		[Token(Token = "0x4000475")]
		GAZE = 1,
		[Token(Token = "0x4000476")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x4000477")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x4000478")]
		STEAMVR_LEGACY = 4,
		[Token(Token = "0x4000479")]
		OCULUSVR = 5,
		[Token(Token = "0x400047A")]
		STEAMVR_2 = 8,
		[Token(Token = "0x400047B")]
		UNITY_XR = 9
	}

	[Token(Token = "0x20000EF")]
	public enum Hand
	{
		[Token(Token = "0x400047D")]
		Both,
		[Token(Token = "0x400047E")]
		Right,
		[Token(Token = "0x400047F")]
		Left
	}

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Camera mainEventCamera;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private LayerMask raycastLayerMask;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Transform pointerTransformOverride;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject currentDragging;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject currentPointedAt;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject m_rightController;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject m_leftController;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float gazeTimerProgress;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Ray customControllerRay;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float dragThreshold;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool pressedDown;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool pressedLastFrame;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector2 lastEventDataPosition;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MouseButtonEventData storedData;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x17000076")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x6000538")]
		[Address(RVA = "0xAF2450", Offset = "0xAF2450", VA = "0xAF2450")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000539")]
		[Address(RVA = "0xAF3A30", Offset = "0xAF3A30", VA = "0xAF3A30")]
		private set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public static bool CanInstanceBeAccessed
	{
		[Token(Token = "0x600053A")]
		[Address(RVA = "0xAF3AA4", Offset = "0xAF3AA4", VA = "0xAF3AA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000078")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x600053B")]
		[Address(RVA = "0xAF3994", Offset = "0xAF3994", VA = "0xAF3994")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x600053C")]
		[Address(RVA = "0xAF3B40", Offset = "0xAF3B40", VA = "0xAF3B40")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public LayerMask RaycastLayerMask
	{
		[Token(Token = "0x600053D")]
		[Address(RVA = "0xAF3BE0", Offset = "0xAF3BE0", VA = "0xAF3BE0")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x600053E")]
		[Address(RVA = "0xAF3BE8", Offset = "0xAF3BE8", VA = "0xAF3BE8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public Hand UsedHand
	{
		[Token(Token = "0x600053F")]
		[Address(RVA = "0xAF3BF0", Offset = "0xAF3BF0", VA = "0xAF3BF0")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x6000540")]
		[Address(RVA = "0xAF3BF8", Offset = "0xAF3BF8", VA = "0xAF3BF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x6000541")]
		[Address(RVA = "0xAF2568", Offset = "0xAF2568", VA = "0xAF2568")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007C")]
	public Vector3 ControllerPointingDirection
	{
		[Token(Token = "0x6000542")]
		[Address(RVA = "0xAF26BC", Offset = "0xAF26BC", VA = "0xAF26BC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700007D")]
	public Vector3 ControllerPointingOrigin
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0xAF3C70", Offset = "0xAF3C70", VA = "0xAF3C70")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700007E")]
	public Transform PointerTransformOverride
	{
		[Token(Token = "0x6000544")]
		[Address(RVA = "0xAF3C00", Offset = "0xAF3C00", VA = "0xAF3C00")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000545")]
		[Address(RVA = "0xAF263C", Offset = "0xAF263C", VA = "0xAF263C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x6000546")]
		[Address(RVA = "0xAF3CEC", Offset = "0xAF3CEC", VA = "0xAF3CEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000080")]
	public Camera EventCamera
	{
		[Token(Token = "0x6000547")]
		[Address(RVA = "0xAF3CF4", Offset = "0xAF3CF4", VA = "0xAF3CF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000548")]
		[Address(RVA = "0xAF3350", Offset = "0xAF3350", VA = "0xAF3350")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public static Vector2 MousePosition
	{
		[Token(Token = "0x600054A")]
		[Address(RVA = "0xAF3F84", Offset = "0xAF3F84", VA = "0xAF3F84")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000082")]
	public static bool LeftMouseButton
	{
		[Token(Token = "0x600054B")]
		[Address(RVA = "0xAF4038", Offset = "0xAF4038", VA = "0xAF4038")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000083")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x600054C")]
		[Address(RVA = "0xAF3FB4", Offset = "0xAF3FB4", VA = "0xAF3FB4")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x600054D")]
		[Address(RVA = "0xAF4080", Offset = "0xAF4080", VA = "0xAF4080")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public static bool CustomControllerButtonState
	{
		[Token(Token = "0x600054E")]
		[Address(RVA = "0xAF411C", Offset = "0xAF411C", VA = "0xAF411C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600054F")]
		[Address(RVA = "0xAF4184", Offset = "0xAF4184", VA = "0xAF4184")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x642D04", Offset = "0x642D04")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x6000550")]
		[Address(RVA = "0xAF41FC", Offset = "0xAF41FC", VA = "0xAF41FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000551")]
		[Address(RVA = "0xAF4254", Offset = "0xAF4254", VA = "0xAF4254")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x6000552")]
		[Address(RVA = "0xAF42BC", Offset = "0xAF42BC", VA = "0xAF42BC")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000553")]
		[Address(RVA = "0xAF42C8", Offset = "0xAF42C8", VA = "0xAF42C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xAF42DC", Offset = "0xAF42DC", VA = "0xAF42DC")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000088")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xAF42F0", Offset = "0xAF42F0", VA = "0xAF42F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000556")]
		[Address(RVA = "0xAF42F8", Offset = "0xAF42F8", VA = "0xAF42F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x6000557")]
		[Address(RVA = "0xAF4300", Offset = "0xAF4300", VA = "0xAF4300")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xAF4308", Offset = "0xAF4308", VA = "0xAF4308")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public float GazeClickTimer
	{
		[Token(Token = "0x6000559")]
		[Address(RVA = "0xAF4314", Offset = "0xAF4314", VA = "0xAF4314")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055A")]
		[Address(RVA = "0xAF431C", Offset = "0xAF431C", VA = "0xAF431C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x600055B")]
		[Address(RVA = "0xAF4348", Offset = "0xAF4348", VA = "0xAF4348")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055C")]
		[Address(RVA = "0xAF4350", Offset = "0xAF4350", VA = "0xAF4350")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x600055D")]
		[Address(RVA = "0xAF437C", Offset = "0xAF437C", VA = "0xAF437C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700008D")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x600055E")]
		[Address(RVA = "0xAF4384", Offset = "0xAF4384", VA = "0xAF4384")]
		get
		{
			return null;
		}
		[Token(Token = "0x600055F")]
		[Address(RVA = "0xAF438C", Offset = "0xAF438C", VA = "0xAF438C")]
		set
		{
		}
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xAF31CC", Offset = "0xAF31CC", VA = "0xAF31CC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xAF340C", Offset = "0xAF340C", VA = "0xAF340C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xAF3448", Offset = "0xAF3448", VA = "0xAF3448", Slot = "32")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xAF3680", Offset = "0xAF3680", VA = "0xAF3680", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xAF3808", Offset = "0xAF3808", VA = "0xAF3808", Slot = "33")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xAF3870", Offset = "0xAF3870", VA = "0xAF3870", Slot = "34")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xAF3878", Offset = "0xAF3878", VA = "0xAF3878", Slot = "28")]
	protected override MouseState GetMousePointerEventData(int id)
	{
		return null;
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xAF39FC", Offset = "0xAF39FC", VA = "0xAF39FC")]
	private PointerEventData.FramePressState CustomRayFramePressedState()
	{
		return default(PointerEventData.FramePressState);
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xAF3A28", Offset = "0xAF3A28", VA = "0xAF3A28", Slot = "35")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xAF3A2C", Offset = "0xAF3A2C", VA = "0xAF3A2C", Slot = "36")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xAF3804", Offset = "0xAF3804", VA = "0xAF3804")]
	private void ProcessSteamVR2Controllers()
	{
	}

	[Token(Token = "0x6000537")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xAF3CFC", Offset = "0xAF3CFC", VA = "0xAF3CFC")]
	public Ray GetEventRay([Optional] Camera eventCam)
	{
		return default(Ray);
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xAF4394", Offset = "0xAF4394", VA = "0xAF4394")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x20000F0")]
[DisallowMultipleComponent]
public class Outline : MonoBehaviour
{
	[Token(Token = "0x20000F1")]
	public enum Mode
	{
		[Token(Token = "0x400048D")]
		OutlineAll,
		[Token(Token = "0x400048E")]
		OutlineVisible,
		[Token(Token = "0x400048F")]
		OutlineHidden,
		[Token(Token = "0x4000490")]
		OutlineAndSilhouette,
		[Token(Token = "0x4000491")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x20000F2")]
	private class ListVector3
	{
		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x805808", Offset = "0x805808", VA = "0x805808")]
		public ListVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D4E0", Offset = "0x62D4E0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__32_0;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__32_1;

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x805708", Offset = "0x805708", VA = "0x805708")]
		public <>c()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x805710", Offset = "0x805710", VA = "0x805710")]
		internal KeyValuePair<Vector3, int> <SmoothNormals>b__32_0(Vector3 vertex, int index)
		{
			return default(KeyValuePair<Vector3, int>);
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x8057A4", Offset = "0x8057A4", VA = "0x8057A4")]
		internal Vector3 <SmoothNormals>b__32_1(KeyValuePair<Vector3, int> pair)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onlyTeleports;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6327C0", Offset = "0x6327C0")]
	private float outlineWidth;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632800", Offset = "0x632800")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632800", Offset = "0x632800")]
	[SerializeField]
	private bool precomputeOutline;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Renderer> renderers;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x1700008E")]
	public Mode OutlineMode
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x96F140", Offset = "0x96F140", VA = "0x96F140")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x96F148", Offset = "0x96F148", VA = "0x96F148")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public Color OutlineColor
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x96F158", Offset = "0x96F158", VA = "0x96F158")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x96F164", Offset = "0x96F164", VA = "0x96F164")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public float OutlineWidth
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x96F178", Offset = "0x96F178", VA = "0x96F178")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x96F180", Offset = "0x96F180", VA = "0x96F180")]
		set
		{
		}
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x96F190", Offset = "0x96F190", VA = "0x96F190")]
	public void Test()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x96F2B0", Offset = "0x96F2B0", VA = "0x96F2B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x96F8EC", Offset = "0x96F8EC", VA = "0x96F8EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x96FAC8", Offset = "0x96FAC8", VA = "0x96FAC8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x96FDA8", Offset = "0x96FDA8", VA = "0x96FDA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x96FF78", Offset = "0x96FF78", VA = "0x96FF78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x970154", Offset = "0x970154", VA = "0x970154")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x96FBC0", Offset = "0x96FBC0", VA = "0x96FBC0")]
	private void Bake()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x96F5C8", Offset = "0x96F5C8", VA = "0x96F5C8")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x9701D0", Offset = "0x9701D0", VA = "0x9701D0")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x96FDBC", Offset = "0x96FDBC", VA = "0x96FDBC")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x970C5C", Offset = "0x970C5C", VA = "0x970C5C")]
	public Outline()
	{
	}
}
namespace ReachableGames.AutoProbe
{
	[Token(Token = "0x20000F4")]
	[ExecuteInEditMode]
	public class AutoProbe : MonoBehaviour
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0xEE59A0", Offset = "0xEE59A0", VA = "0xEE59A0")]
		public AutoProbe()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D500", Offset = "0x62D500")]
	[ExecuteInEditMode]
	public class ForceLightProbeHere : MonoBehaviour
	{
		[Token(Token = "0x600057B")]
		[Address(RVA = "0x8EAE18", Offset = "0x8EAE18", VA = "0x8EAE18")]
		public ForceLightProbeHere()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class FlyCamera : MonoBehaviour
	{
		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MouseSensitivity;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool InvertMouse;

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x8EAA8C", Offset = "0x8EAA8C", VA = "0x8EAA8C")]
		private void Start()
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x8EAAB0", Offset = "0x8EAAB0", VA = "0x8EAAB0")]
		private void Update()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x8EADD4", Offset = "0x8EADD4", VA = "0x8EADD4")]
		private float MakeRelative(float euler)
		{
			return default(float);
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x8EAE08", Offset = "0x8EAE08", VA = "0x8EAE08")]
		public FlyCamera()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class RotationPerFrame : MonoBehaviour
	{
		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rotPerFrame;

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xC6C400", Offset = "0xC6C400", VA = "0xC6C400")]
		private void Update()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xC6C438", Offset = "0xC6C438", VA = "0xC6C438")]
		public RotationPerFrame()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class ToggleOnAndOff : MonoBehaviour
	{
		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float frequency;

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x10E5AD4", Offset = "0x10E5AD4", VA = "0x10E5AD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x10E5B34", Offset = "0x10E5B34", VA = "0x10E5B34")]
		public void Toggling()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x10E5B88", Offset = "0x10E5B88", VA = "0x10E5B88")]
		public ToggleOnAndOff()
		{
		}
	}
}
namespace Sirenix.Serialization
{
	[Token(Token = "0x20000F9")]
	public class Vector2IntFormatter : MinimalBaseFormatter<Vector2Int>
	{
		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Serializer<int> Serializer;

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x9C577C", Offset = "0x9C577C", VA = "0x9C577C", Slot = "10")]
		protected override void Read(Vector2Int value, IDataReader reader)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x9C5830", Offset = "0x9C5830", VA = "0x9C5830", Slot = "11")]
		protected override void Write(Vector2Int value, IDataWriter writer)
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x9C58EC", Offset = "0x9C58EC", VA = "0x9C58EC")]
		public Vector2IntFormatter()
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class Vector3IntFormatter : MinimalBaseFormatter<Vector3Int>
	{
		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Serializer<int> Serializer;

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x9C5A08", Offset = "0x9C5A08", VA = "0x9C5A08", Slot = "10")]
		protected override void Read(Vector3Int value, IDataReader reader)
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x9C5B00", Offset = "0x9C5B00", VA = "0x9C5B00", Slot = "11")]
		protected override void Write(Vector3Int value, IDataWriter writer)
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x9C5C14", Offset = "0x9C5C14", VA = "0x9C5C14")]
		public Vector3IntFormatter()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x20000FB")]
	public class CUI_AnimateCurvedFillOnStart : MonoBehaviour
	{
		[Token(Token = "0x600058D")]
		[Address(RVA = "0xCCC020", Offset = "0xCCC020", VA = "0xCCC020")]
		private void Update()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xCCC1BC", Offset = "0xCCC1BC", VA = "0xCCC1BC")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class CUI_CameraController : MonoBehaviour
	{
		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool runInEditorOnly;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController Instance;

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xCCC1C4", Offset = "0xCCC1C4", VA = "0xCCC1C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xCCC220", Offset = "0xCCC220", VA = "0xCCC220")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class CUI_CameraRotationOnButtonHeld : MonoBehaviour
	{
		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float Sensitivity;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector2 _oldMousePos;

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xCCC238", Offset = "0xCCC238", VA = "0xCCC238")]
		private void Start()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xCCC2A8", Offset = "0xCCC2A8", VA = "0xCCC2A8")]
		public CUI_CameraRotationOnButtonHeld()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class CUI_ChangeColor : MonoBehaviour
	{
		[Token(Token = "0x6000593")]
		[Address(RVA = "0xCCC2B8", Offset = "0xCCC2B8", VA = "0xCCC2B8")]
		public void ChangeColorToBlue()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xCCC338", Offset = "0xCCC338", VA = "0xCCC338")]
		public void ChangeColorToCyan()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xCCC3B8", Offset = "0xCCC3B8", VA = "0xCCC3B8")]
		public void ChangeColorToWhite()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xCCC438", Offset = "0xCCC438", VA = "0xCCC438")]
		public CUI_ChangeColor()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class CUI_ChangeValueOnHold : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool selected;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image bg;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color SelectedColor;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color NormalColor;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xCCC440", Offset = "0xCCC440", VA = "0xCCC440")]
		private void Update()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xCCC4C0", Offset = "0xCCC4C0", VA = "0xCCC4C0")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xCCC61C", Offset = "0xCCC61C", VA = "0xCCC61C", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xCCC6AC", Offset = "0xCCC6AC", VA = "0xCCC6AC", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xCCC738", Offset = "0xCCC738", VA = "0xCCC738")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class CUI_DragBetweenCanvases : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 dragPoint;

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xB1BFC0", Offset = "0xB1BFC0", VA = "0xB1BFC0", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xB1C2AC", Offset = "0xB1C2AC", VA = "0xB1C2AC", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xB1C674", Offset = "0xB1C674", VA = "0xB1C674", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xB1C0E8", Offset = "0xB1C0E8", VA = "0xB1C0E8")]
		private void RaycastPosition([Out] Vector2 newPos)
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xB1C6E8", Offset = "0xB1C6E8", VA = "0xB1C6E8")]
		public CUI_DragBetweenCanvases()
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class CUI_draggable : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDragged;

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xB1E174", Offset = "0xB1E174", VA = "0xB1E174", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xB1E468", Offset = "0xB1E468", VA = "0xB1E468", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xB1E46C", Offset = "0xB1E46C", VA = "0xB1E46C", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xB1E4F4", Offset = "0xB1E4F4", VA = "0xB1E4F4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xB1E2A4", Offset = "0xB1E2A4", VA = "0xB1E2A4")]
		private void RaycastPosition([Out] Vector2 newPos)
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xB1E5F0", Offset = "0xB1E5F0", VA = "0xB1E5F0")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class CUI_GunController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000103")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D578", Offset = "0x62D578")]
		private sealed class <>c
		{
			[Token(Token = "0x40004AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40004B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x60005AA")]
			[Address(RVA = "0x7D6EB8", Offset = "0x7D6EB8", VA = "0x7D6EB8")]
			public <>c()
			{
			}

			[Token(Token = "0x60005AB")]
			[Address(RVA = "0x7D6EC0", Offset = "0x7D6EC0", VA = "0x7D6EC0")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xB1C6F0", Offset = "0xB1C6F0", VA = "0xB1C6F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xB1CB08", Offset = "0xB1CB08", VA = "0xB1CB08")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class CUI_GunMovement : MonoBehaviour
	{
		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector2 lastMouse;

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xB1CB10", Offset = "0xB1CB10", VA = "0xB1CB10")]
		private void Start()
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xB1CB80", Offset = "0xB1CB80", VA = "0xB1CB80")]
		private void Update()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xB1CD00", Offset = "0xB1CD00", VA = "0xB1CD00")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class CUI_inventory_paralax : MonoBehaviour
	{
		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xB1E5F8", Offset = "0xB1E5F8", VA = "0xB1E5F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xB1E648", Offset = "0xB1E648", VA = "0xB1E648")]
		private void Update()
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xB1E8AC", Offset = "0xB1E8AC", VA = "0xB1E8AC")]
		public CUI_inventory_paralax()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class CUI_OrientOnCurvedSpace : MonoBehaviour
	{
		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings mySettings;

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xB1D134", Offset = "0xB1D134", VA = "0xB1D134")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xB1D198", Offset = "0xB1D198", VA = "0xB1D198")]
		private void Update()
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xB1D340", Offset = "0xB1D340", VA = "0xB1D340")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x2000107")]
	public class CUI_PerlinNoisePosition : MonoBehaviour
	{
		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xB1D348", Offset = "0xB1D348", VA = "0xB1D348")]
		private void Start()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xB1D3BC", Offset = "0xB1D3BC", VA = "0xB1D3BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xB1D4B0", Offset = "0xB1D4B0", VA = "0xB1D4B0")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class CUI_PerlinNoiseRotation : MonoBehaviour
	{
		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xB1D4C0", Offset = "0xB1D4C0", VA = "0xB1D4C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xB1D534", Offset = "0xB1D534", VA = "0xB1D534")]
		private void Update()
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xB1D5C0", Offset = "0xB1D5C0", VA = "0xB1D5C0")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class CUI_PickImageFromSet : MonoBehaviour
	{
		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CUI_PickImageFromSet picked;

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xB1D5D4", Offset = "0xB1D5D4", VA = "0xB1D5D4")]
		public void PickThis()
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xB1D7CC", Offset = "0xB1D7CC", VA = "0xB1D7CC")]
		public CUI_PickImageFromSet()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class CUI_RaycastToCanvas : MonoBehaviour
	{
		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xB1D7D8", Offset = "0xB1D7D8", VA = "0xB1D7D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xB1D83C", Offset = "0xB1D83C", VA = "0xB1D83C")]
		private void Update()
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xB1D8FC", Offset = "0xB1D8FC", VA = "0xB1D8FC")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class CUI_RiseChildrenOverTime : MonoBehaviour
	{
		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xB1D904", Offset = "0xB1D904", VA = "0xB1D904")]
		private void Start()
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xB1D908", Offset = "0xB1D908", VA = "0xB1D908")]
		private void Update()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xB1DA7C", Offset = "0xB1DA7C", VA = "0xB1DA7C")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class CUI_TMPChecker : MonoBehaviour
	{
		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xB1DB70", Offset = "0xB1DB70", VA = "0xB1DB70")]
		private void Start()
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xB1DBEC", Offset = "0xB1DBEC", VA = "0xB1DBEC")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class CUI_ViveButtonState : MonoBehaviour
	{
		[Token(Token = "0x200010E")]
		private enum ViveButton
		{
			[Token(Token = "0x40004CD")]
			Trigger,
			[Token(Token = "0x40004CE")]
			TouchpadTouch,
			[Token(Token = "0x40004CF")]
			TouchpadPress,
			[Token(Token = "0x40004D0")]
			Grip,
			[Token(Token = "0x40004D1")]
			Menu
		}

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color ActiveColor;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color InActiveColor;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xB1DBF4", Offset = "0xB1DBF4", VA = "0xB1DBF4")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class CUI_ViveHapticPulse : MonoBehaviour
	{
		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xB1DC38", Offset = "0xB1DC38", VA = "0xB1DC38")]
		private void Start()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xB1DC44", Offset = "0xB1DC44", VA = "0xB1DC44")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xB1DC74", Offset = "0xB1DC74", VA = "0xB1DC74")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xB1DC78", Offset = "0xB1DC78", VA = "0xB1DC78")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class CUI_WorldSpaceCursorFollow : MonoBehaviour
	{
		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xB1DC80", Offset = "0xB1DC80", VA = "0xB1DC80")]
		private void Start()
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xB1DDB8", Offset = "0xB1DDB8", VA = "0xB1DDB8")]
		private void Update()
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xB1DE58", Offset = "0xB1DE58", VA = "0xB1DE58")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class CUI_WorldSpaceMouseMultipleCanvases : MonoBehaviour
	{
		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xB1DE60", Offset = "0xB1DE60", VA = "0xB1DE60")]
		private void Update()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xB1E16C", Offset = "0xB1E16C", VA = "0xB1E16C")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xAF1F2C", Offset = "0xAF1F2C", VA = "0xAF1F2C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xAF1F94", Offset = "0xAF1F94", VA = "0xAF1F94", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xAF1FA0", Offset = "0xAF1FA0", VA = "0xAF1FA0")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xAF200C", Offset = "0xAF200C", VA = "0xAF200C")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xAF203C", Offset = "0xAF203C", VA = "0xAF203C")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xAF2058", Offset = "0xAF2058", VA = "0xAF2058")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xAF2088", Offset = "0xAF2088", VA = "0xAF2088")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xAF20A8", Offset = "0xAF20A8", VA = "0xAF20A8")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xAF2080", Offset = "0xAF2080", VA = "0xAF2080")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xAF20C4", Offset = "0xAF20C4", VA = "0xAF20C4")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xAF20E0", Offset = "0xAF20E0", VA = "0xAF20E0")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xAF20E8", Offset = "0xAF20E8", VA = "0xAF20E8")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xAF20F0", Offset = "0xAF20F0", VA = "0xAF20F0")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xAF20F8", Offset = "0xAF20F8", VA = "0xAF20F8")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xAF2100", Offset = "0xAF2100", VA = "0xAF2100")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xAF2108", Offset = "0xAF2108", VA = "0xAF2108")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xAF2110", Offset = "0xAF2110", VA = "0xAF2110")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xAF2118", Offset = "0xAF2118", VA = "0xAF2118")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xAF2120", Offset = "0xAF2120", VA = "0xAF2120")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xAF2128", Offset = "0xAF2128", VA = "0xAF2128")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xAF2130", Offset = "0xAF2130", VA = "0xAF2130")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x60005E5")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60005E6")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x2000114")]
	public class CurvedUIHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632A80", Offset = "0x632A80")]
		private bool autoSwitchHands;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632ACC", Offset = "0x632ACC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632ACC", Offset = "0x632ACC")]
		[SerializeField]
		private Transform leftHandOverride;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632B3C", Offset = "0x632B3C")]
		private Transform rightHandOverride;

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xAF218C", Offset = "0xAF218C", VA = "0xAF218C")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xAF2738", Offset = "0xAF2738", VA = "0xAF2738")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000116")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D598", Offset = "0x62D598")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40004E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40004E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40004E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x17000094")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005FB")]
				[Address(RVA = "0x7D86B0", Offset = "0x7D86B0", VA = "0x7D86B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000095")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005FD")]
				[Address(RVA = "0x7D86F8", Offset = "0x7D86F8", VA = "0x7D86F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005F8")]
			[Address(RVA = "0x7D8560", Offset = "0x7D8560", VA = "0x7D8560")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60005F9")]
			[Address(RVA = "0x7D858C", Offset = "0x7D858C", VA = "0x7D858C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005FA")]
			[Address(RVA = "0x7D8590", Offset = "0x7D8590", VA = "0x7D8590", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005FC")]
			[Address(RVA = "0x7D86B8", Offset = "0x7D86B8", VA = "0x7D86B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x17000091")]
		public Color CaretColor
		{
			[Token(Token = "0x60005F1")]
			[Address(RVA = "0xAF314C", Offset = "0xAF314C", VA = "0xAF314C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60005F2")]
			[Address(RVA = "0xAF3158", Offset = "0xAF3158", VA = "0xAF3158")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public Color SelectionColor
		{
			[Token(Token = "0x60005F3")]
			[Address(RVA = "0xAF3164", Offset = "0xAF3164", VA = "0xAF3164")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60005F4")]
			[Address(RVA = "0xAF3170", Offset = "0xAF3170", VA = "0xAF3170")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x60005F5")]
			[Address(RVA = "0xAF317C", Offset = "0xAF317C", VA = "0xAF317C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005F6")]
			[Address(RVA = "0xAF319C", Offset = "0xAF319C", VA = "0xAF319C")]
			set
			{
			}
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xAF2748", Offset = "0xAF2748", VA = "0xAF2748")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xAF27AC", Offset = "0xAF27AC", VA = "0xAF27AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xAF2A7C", Offset = "0xAF2A7C", VA = "0xAF2A7C", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xAF2EE4", Offset = "0xAF2EE4", VA = "0xAF2EE4", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xAF2E64", Offset = "0xAF2E64", VA = "0xAF2E64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B288", Offset = "0x63B288")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xAF2B40", Offset = "0xAF2B40", VA = "0xAF2B40")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xAF27BC", Offset = "0xAF27BC", VA = "0xAF27BC")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xAF2F1C", Offset = "0xAF2F1C", VA = "0xAF2F1C")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xAF31BC", Offset = "0xAF31BC", VA = "0xAF31BC")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public class CurvedUILaserBeam : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D5A8", Offset = "0x62D5A8")]
		private sealed class <>c
		{
			[Token(Token = "0x40004E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40004EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__3_0;

			[Token(Token = "0x6000601")]
			[Address(RVA = "0x7D8764", Offset = "0x7D8764", VA = "0x7D8764")]
			public <>c()
			{
			}

			[Token(Token = "0x6000602")]
			[Address(RVA = "0x7D876C", Offset = "0x7D876C", VA = "0x7D876C")]
			internal bool <Update>b__3_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xAF44BC", Offset = "0xAF44BC", VA = "0xAF44BC")]
		protected void Update()
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xAF48FC", Offset = "0xAF48FC", VA = "0xAF48FC")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class CurvedUIPhysicsRaycaster : BaseRaycaster
	{
		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int sortOrder;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RaycastHit hitInfo;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastResult result;

		[Token(Token = "0x17000096")]
		public int CompoundEventMask
		{
			[Token(Token = "0x6000605")]
			[Address(RVA = "0xAF4C0C", Offset = "0xAF4C0C", VA = "0xAF4C0C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000097")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000606")]
			[Address(RVA = "0xAF4D18", Offset = "0xAF4D18", VA = "0xAF4D18", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		public virtual int Depth
		{
			[Token(Token = "0x6000607")]
			[Address(RVA = "0xAF4DE8", Offset = "0xAF4DE8", VA = "0xAF4DE8", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000099")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6000608")]
			[Address(RVA = "0xAF4EAC", Offset = "0xAF4EAC", VA = "0xAF4EAC", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xAF4904", Offset = "0xAF4904", VA = "0xAF4904")]
		protected CurvedUIPhysicsRaycaster()
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xAF4914", Offset = "0xAF4914", VA = "0xAF4914", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x200011B")]
		public enum ControllerType
		{
			[Token(Token = "0x40004F1")]
			NONE = -1,
			[Token(Token = "0x40004F2")]
			VIVE
		}

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public GameObject Controller;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xAF4EB4", Offset = "0xAF4EB4", VA = "0xAF4EB4")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x200011D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D5B8", Offset = "0x62D5B8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__21_0;

			[Token(Token = "0x400050A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__32_0;

			[Token(Token = "0x400050B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<Graphic> <>9__55_0;

			[Token(Token = "0x6000631")]
			[Address(RVA = "0x7D88CC", Offset = "0x7D88CC", VA = "0x7D88CC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000632")]
			[Address(RVA = "0x7D88D4", Offset = "0x7D88D4", VA = "0x7D88D4")]
			internal bool <Update>b__21_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6000633")]
			[Address(RVA = "0x7D89A0", Offset = "0x7D89A0", VA = "0x7D89A0")]
			internal int <FlatRaycastAndSort>b__32_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}

			[Token(Token = "0x6000634")]
			[Address(RVA = "0x7D89F8", Offset = "0x7D89F8", VA = "0x7D89F8")]
			internal int <GetObjectsHitByRay>b__55_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData curEventData;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerEventData eventDataToUse;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ray cachedRay;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Graphic gph;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool gazeClickExecuted;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool pointingAtCanvas;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool pointingAtCanvasLastFrame;

		[NonSerialized]
		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Graphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Graphic> s_SortedGraphics;

		[Token(Token = "0x1700009A")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x600061D")]
			[Address(RVA = "0xAF5DC0", Offset = "0xAF5DC0", VA = "0xAF5DC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6000626")]
			[Address(RVA = "0xAFC068", Offset = "0xAFC068", VA = "0xAFC068")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xAF4EF0", Offset = "0xAF4EF0", VA = "0xAF4EF0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xAF5008", Offset = "0xAF5008", VA = "0xAF5008", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xAF57EC", Offset = "0xAF57EC", VA = "0xAF57EC", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xAF5BFC", Offset = "0xAF5BFC", VA = "0xAF5BFC")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xAF5BD0", Offset = "0xAF5BD0", VA = "0xAF5BD0")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xAF63BC", Offset = "0xAF63BC", VA = "0xAF63BC", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0xAF7680", Offset = "0xAF7680", VA = "0xAF7680", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, [Out] Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0xAF7D8C", Offset = "0xAF7D8C", VA = "0xAF7D8C", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, [Out] Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0xAF8390", Offset = "0xAF8390", VA = "0xAF8390", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, [Out] Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xAF88A0", Offset = "0xAF88A0", VA = "0xAF88A0", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, [Out] Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xAF70EC", Offset = "0xAF70EC", VA = "0xAF70EC")]
		private void FlatRaycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xAF924C", Offset = "0xAF924C", VA = "0xAF924C")]
		private static void FlatRaycastAndSort(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results)
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xAF52A8", Offset = "0xAF52A8", VA = "0xAF52A8")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xAFACE4", Offset = "0xAFACE4", VA = "0xAFACE4")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xAF977C", Offset = "0xAF977C", VA = "0xAF977C")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xAFA360", Offset = "0xAFA360", VA = "0xAFA360")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xAFAD9C", Offset = "0xAFAD9C", VA = "0xAFAD9C")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xAFB6B8", Offset = "0xAFB6B8", VA = "0xAFB6B8")]
		private bool IsInLayerMask(int layer, LayerMask layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xAF7C80", Offset = "0xAF7C80", VA = "0xAF7C80")]
		private LayerMask GetRaycastLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xAF7CE8", Offset = "0xAF7CE8", VA = "0xAF7CE8")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xAFB710", Offset = "0xAFB710", VA = "0xAFB710")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xAFB760", Offset = "0xAFB760", VA = "0xAFB760", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xAF6B4C", Offset = "0xAF6B4C", VA = "0xAF6B4C")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xAFB77C", Offset = "0xAFB77C", VA = "0xAFB77C")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xAFBDB0", Offset = "0xAFBDB0", VA = "0xAFBDB0")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xAFBF50", Offset = "0xAFBF50", VA = "0xAFBF50")]
		private bool GetScreenSpacePointByRay(Ray ray, [Out] Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xAF50A0", Offset = "0xAF50A0", VA = "0xAF50A0")]
		private bool CheckEventCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xAFC070", Offset = "0xAFC070", VA = "0xAFC070")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xAFC0B0", Offset = "0xAFC0B0", VA = "0xAFC0B0")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xAFC138", Offset = "0xAFC138", VA = "0xAFC138")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xAFC220", Offset = "0xAFC220", VA = "0xAFC220")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xAF5E28", Offset = "0xAF5E28", VA = "0xAF5E28")]
		public void Click()
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xAFB39C", Offset = "0xAFB39C", VA = "0xAFB39C")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xAFC71C", Offset = "0xAFC71C", VA = "0xAFC71C")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xAFC8D0", Offset = "0xAFC8D0", VA = "0xAFC8D0")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62D5C8", Offset = "0x62D5C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D5C8", Offset = "0x62D5C8")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x200011F")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x400051E")]
			CYLINDER,
			[Token(Token = "0x400051F")]
			RING,
			[Token(Token = "0x4000520")]
			SPHERE,
			[Token(Token = "0x4000521")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x400050C")]
		public const string Version = "3.3";

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x1700009C")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x600063F")]
			[Address(RVA = "0x9AD2B8", Offset = "0x9AD2B8", VA = "0x9AD2B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x6000648")]
			[Address(RVA = "0x9AEC18", Offset = "0x9AEC18", VA = "0x9AEC18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700009E")]
		public int Angle
		{
			[Token(Token = "0x6000649")]
			[Address(RVA = "0x9AEC20", Offset = "0x9AEC20", VA = "0x9AEC20")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600064A")]
			[Address(RVA = "0x9AEC28", Offset = "0x9AEC28", VA = "0x9AEC28")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public float Quality
		{
			[Token(Token = "0x600064B")]
			[Address(RVA = "0x9AEC3C", Offset = "0x9AEC3C", VA = "0x9AEC3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600064C")]
			[Address(RVA = "0x9AEC44", Offset = "0x9AEC44", VA = "0x9AEC44")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x600064D")]
			[Address(RVA = "0x9AEC60", Offset = "0x9AEC60", VA = "0x9AEC60")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x600064E")]
			[Address(RVA = "0x9AEC68", Offset = "0x9AEC68", VA = "0x9AEC68")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public int VerticalAngle
		{
			[Token(Token = "0x600064F")]
			[Address(RVA = "0x9AEC88", Offset = "0x9AEC88", VA = "0x9AEC88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000650")]
			[Address(RVA = "0x9AEC90", Offset = "0x9AEC90", VA = "0x9AEC90")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public float RingFill
		{
			[Token(Token = "0x6000651")]
			[Address(RVA = "0x9AECB0", Offset = "0x9AECB0", VA = "0x9AECB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000652")]
			[Address(RVA = "0x9AECB8", Offset = "0x9AECB8", VA = "0x9AECB8")]
			set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public float SavedRadius
		{
			[Token(Token = "0x6000653")]
			[Address(RVA = "0x9ADE2C", Offset = "0x9ADE2C", VA = "0x9ADE2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A4")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x6000654")]
			[Address(RVA = "0x9AECD4", Offset = "0x9AECD4", VA = "0x9AECD4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000655")]
			[Address(RVA = "0x9AECDC", Offset = "0x9AECDC", VA = "0x9AECDC")]
			set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x6000656")]
			[Address(RVA = "0x9AECFC", Offset = "0x9AECFC", VA = "0x9AECFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000657")]
			[Address(RVA = "0x9AED04", Offset = "0x9AED04", VA = "0x9AED04")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public bool PreserveAspect
		{
			[Token(Token = "0x6000658")]
			[Address(RVA = "0x9AED30", Offset = "0x9AED30", VA = "0x9AED30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000659")]
			[Address(RVA = "0x9AED38", Offset = "0x9AED38", VA = "0x9AED38")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public bool Interactable
		{
			[Token(Token = "0x600065A")]
			[Address(RVA = "0x9AED64", Offset = "0x9AED64", VA = "0x9AED64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600065B")]
			[Address(RVA = "0x9AED6C", Offset = "0x9AED6C", VA = "0x9AED6C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x600065C")]
			[Address(RVA = "0x9AED78", Offset = "0x9AED78", VA = "0x9AED78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600065D")]
			[Address(RVA = "0x9AED80", Offset = "0x9AED80", VA = "0x9AED80")]
			set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x600065E")]
			[Address(RVA = "0x9AED8C", Offset = "0x9AED8C", VA = "0x9AED8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600065F")]
			[Address(RVA = "0x9AED94", Offset = "0x9AED94", VA = "0x9AED94")]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x642D3C", Offset = "0x642D3C")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x6000660")]
			[Address(RVA = "0x9AEE88", Offset = "0x9AEE88", VA = "0x9AEE88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000661")]
			[Address(RVA = "0x9AEE90", Offset = "0x9AEE90", VA = "0x9AEE90")]
			set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6000663")]
			[Address(RVA = "0x9AEF4C", Offset = "0x9AEF4C", VA = "0x9AEF4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AC")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x6000665")]
			[Address(RVA = "0x9AF128", Offset = "0x9AF128", VA = "0x9AF128")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x6000666")]
			[Address(RVA = "0x9AF184", Offset = "0x9AF184", VA = "0x9AF184")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x600066A")]
			[Address(RVA = "0x9AF5A0", Offset = "0x9AF5A0", VA = "0x9AF5A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600066B")]
			[Address(RVA = "0x9AF60C", Offset = "0x9AF60C", VA = "0x9AF60C")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public float GazeClickTimer
		{
			[Token(Token = "0x600066C")]
			[Address(RVA = "0x9AF688", Offset = "0x9AF688", VA = "0x9AF688")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600066D")]
			[Address(RVA = "0x9AF6F4", Offset = "0x9AF6F4", VA = "0x9AF6F4")]
			set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x600066E")]
			[Address(RVA = "0x9AF770", Offset = "0x9AF770", VA = "0x9AF770")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600066F")]
			[Address(RVA = "0x9AF7DC", Offset = "0x9AF7DC", VA = "0x9AF7DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x6000670")]
			[Address(RVA = "0x9AF858", Offset = "0x9AF858", VA = "0x9AF858")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x9AD22C", Offset = "0x9AD22C", VA = "0x9AD22C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x9AD384", Offset = "0x9AD384", VA = "0x9AD384")]
		private void Start()
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x9AD870", Offset = "0x9AD870", VA = "0x9AD870")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x9AD924", Offset = "0x9AD924", VA = "0x9AD924")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x9AD9D8", Offset = "0x9AD9D8", VA = "0x9AD9D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x9ADB04", Offset = "0x9ADB04", VA = "0x9ADB04")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x9ADD48", Offset = "0x9ADD48", VA = "0x9ADD48")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x9ADE5C", Offset = "0x9ADE5C", VA = "0x9ADE5C")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x9ADF40", Offset = "0x9ADF40", VA = "0x9ADF40")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x9AE034", Offset = "0x9AE034", VA = "0x9AE034")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x9AE1C0", Offset = "0x9AE1C0", VA = "0x9AE1C0")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x9AE570", Offset = "0x9AE570", VA = "0x9AE570")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x9AE5AC", Offset = "0x9AE5AC", VA = "0x9AE5AC")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x9AE674", Offset = "0x9AE674", VA = "0x9AE674")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x9AE870", Offset = "0x9AE870", VA = "0x9AE870")]
		public bool RaycastToCanvasSpace(Ray ray, [Out] Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x9AD738", Offset = "0x9AD738", VA = "0x9AD738")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x9AEA04", Offset = "0x9AEA04", VA = "0x9AEA04")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x9AEB70", Offset = "0x9AEB70", VA = "0x9AEB70")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x9AEE94", Offset = "0x9AEE94", VA = "0x9AEE94")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x9AF060", Offset = "0x9AF060", VA = "0x9AF060")]
		public void Click()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x9AF1F0", Offset = "0x9AF1F0", VA = "0x9AF1F0")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x9AF2F8", Offset = "0x9AF2F8", VA = "0x9AF2F8")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x9AF464", Offset = "0x9AF464", VA = "0x9AF464")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x9AF8C4", Offset = "0x9AF8C4", VA = "0x9AF8C4")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632C88", Offset = "0x632C88")]
		public bool DoNotTesselate;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI myTMP;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUITMPSubmesh myTMPSubMesh;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_tesselationRequired;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool curvingRequired;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool TransformMisaligned;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UIVertex m_ret;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float[] m_weights;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[HideInInspector]
		[SerializeField]
		private Vector3 savedPos;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[HideInInspector]
		[SerializeField]
		private Vector2 savedRectSize;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[HideInInspector]
		[SerializeField]
		private Color savedColor;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[HideInInspector]
		[SerializeField]
		private Vector4 savedTextUV0;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Vector4 _uv0;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Vector4 _uv1;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Vector3 _pos;

		[Token(Token = "0x170000B1")]
		private bool tesselationRequired
		{
			[Token(Token = "0x6000672")]
			[Address(RVA = "0x9B20F4", Offset = "0x9B20F4", VA = "0x9B20F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000673")]
			[Address(RVA = "0x9B20FC", Offset = "0x9B20FC", VA = "0x9B20FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public bool TesselationRequired
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0x9B4DA4", Offset = "0x9B4DA4", VA = "0x9B4DA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000687")]
			[Address(RVA = "0x9B4D98", Offset = "0x9B4D98", VA = "0x9B4D98")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public bool CurvingRequired
		{
			[Token(Token = "0x6000688")]
			[Address(RVA = "0x9B4DAC", Offset = "0x9B4DAC", VA = "0x9B4DAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000689")]
			[Address(RVA = "0x9B4DB4", Offset = "0x9B4DB4", VA = "0x9B4DB4")]
			set
			{
			}
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x9B2108", Offset = "0x9B2108", VA = "0x9B2108", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x9B2210", Offset = "0x9B2210", VA = "0x9B2210", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x9B251C", Offset = "0x9B251C", VA = "0x9B251C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x9B2BF4", Offset = "0x9B2BF4", VA = "0x9B2BF4", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x9B2DA8", Offset = "0x9B2DA8", VA = "0x9B2DA8")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x9B2DB4", Offset = "0x9B2DB4", VA = "0x9B2DB4")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x9B2E54", Offset = "0x9B2E54", VA = "0x9B2E54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x9B33C4", Offset = "0x9B33C4", VA = "0x9B33C4", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x9B0938", Offset = "0x9B0938", VA = "0x9B0938")]
		public void ModifyTMPMesh(List<UIVertex> vertexList)
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x9B3A68", Offset = "0x9B3A68", VA = "0x9B3A68")]
		private bool ShouldModify()
		{
			return default(bool);
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x9B3B68", Offset = "0x9B3B68", VA = "0x9B3B68")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x9B23E8", Offset = "0x9B23E8", VA = "0x9B23E8")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x9B3FCC", Offset = "0x9B3FCC", VA = "0x9B3FCC")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x9B3DF4", Offset = "0x9B3DF4", VA = "0x9B3DF4")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x9B4578", Offset = "0x9B4578", VA = "0x9B4578")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x9B42E0", Offset = "0x9B42E0", VA = "0x9B42E0")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x9B4A44", Offset = "0x9B4A44", VA = "0x9B4A44")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x9ADD3C", Offset = "0x9ADD3C", VA = "0x9ADD3C")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x9B4DC0", Offset = "0x9B4DC0", VA = "0x9B4DC0")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x600068B")]
		[Address(RVA = "0x9B4F04", Offset = "0x9B4F04", VA = "0x9B4F04")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x2000123")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x2000124")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x2000125")]
	[ExecuteInEditMode]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpText;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UIVertex> m_UIVerts;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIVertex m_tempVertex;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CurvedUITMPSubmesh m_tempSubMsh;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector2 savedSize;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 savedUp;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 savedPos;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 savedLocalScale;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 savedGlobalScale;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<CurvedUITMPSubmesh> subMeshes;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool Dirty;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool curvingRequired;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool tesselationRequired;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		private bool quitting;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3[] vertices;

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x9AF908", Offset = "0x9AF908", VA = "0x9AF908")]
		private void Start()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x9AF9C4", Offset = "0x9AF9C4", VA = "0x9AF9C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x9AFD2C", Offset = "0x9AFD2C", VA = "0x9AFD2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x9AFEE0", Offset = "0x9AFEE0", VA = "0x9AFEE0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x9AFEEC", Offset = "0x9AFEEC", VA = "0x9AFEEC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x9B06DC", Offset = "0x9B06DC", VA = "0x9B06DC")]
		private void CreateUIVertexList(Mesh mesh)
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x9B12E8", Offset = "0x9B12E8", VA = "0x9B12E8")]
		private void GetUIVertexFromMesh(UIVertex vert, int i)
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x9B0C18", Offset = "0x9B0C18", VA = "0x9B0C18")]
		private void FillMeshWithUIVertexList(Mesh mesh, List<UIVertex> list)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x9AFBB0", Offset = "0x9AFBB0", VA = "0x9AFBB0")]
		private void FindTMP()
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x9B0D8C", Offset = "0x9B0D8C", VA = "0x9B0D8C")]
		private void FindSubmeshes()
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x9B03F8", Offset = "0x9B03F8", VA = "0x9B03F8")]
		private bool ShouldTesselate()
		{
			return default(bool);
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x9B1338", Offset = "0x9B1338", VA = "0x9B1338")]
		private void TMPTextChangedCallback(object obj)
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x9B1354", Offset = "0x9B1354", VA = "0x9B1354")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x9B1360", Offset = "0x9B1360", VA = "0x9B1360")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x2000126")]
	[ExecuteInEditMode]
	public class CurvedUITMPInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000127")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D674", Offset = "0x62D674")]
		private sealed class <CaretBlinker>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400055A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400055B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUITMPInputFieldCaret <>4__this;

			[Token(Token = "0x170000B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60006B5")]
				[Address(RVA = "0x7D8BA0", Offset = "0x7D8BA0", VA = "0x7D8BA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006B7")]
				[Address(RVA = "0x7D8BE8", Offset = "0x7D8BE8", VA = "0x7D8BE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x7D8A50", Offset = "0x7D8A50", VA = "0x7D8A50")]
			[DebuggerHidden]
			public <CaretBlinker>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60006B3")]
			[Address(RVA = "0x7D8A7C", Offset = "0x7D8A7C", VA = "0x7D8A7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006B4")]
			[Address(RVA = "0x7D8A80", Offset = "0x7D8A80", VA = "0x7D8A80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006B6")]
			[Address(RVA = "0x7D8BA8", Offset = "0x7D8BA8", VA = "0x7D8BA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField myField;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x170000B4")]
		public Color CaretColor
		{
			[Token(Token = "0x60006AB")]
			[Address(RVA = "0x9B2074", Offset = "0x9B2074", VA = "0x9B2074")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60006AC")]
			[Address(RVA = "0x9B2080", Offset = "0x9B2080", VA = "0x9B2080")]
			set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public Color SelectionColor
		{
			[Token(Token = "0x60006AD")]
			[Address(RVA = "0x9B208C", Offset = "0x9B208C", VA = "0x9B208C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60006AE")]
			[Address(RVA = "0x9B2098", Offset = "0x9B2098", VA = "0x9B2098")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x60006AF")]
			[Address(RVA = "0x9B20A4", Offset = "0x9B20A4", VA = "0x9B20A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006B0")]
			[Address(RVA = "0x9B20C4", Offset = "0x9B20C4", VA = "0x9B20C4")]
			set
			{
			}
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x9B1440", Offset = "0x9B1440", VA = "0x9B1440")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x9B187C", Offset = "0x9B187C", VA = "0x9B187C")]
		private void Update()
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x9B1B34", Offset = "0x9B1B34", VA = "0x9B1B34", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x9B1FBC", Offset = "0x9B1FBC", VA = "0x9B1FBC", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x9B1F3C", Offset = "0x9B1F3C", VA = "0x9B1F3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B340", Offset = "0x63B340")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x9B1BF8", Offset = "0x9B1BF8", VA = "0x9B1BF8")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x9B188C", Offset = "0x9B188C", VA = "0x9B188C")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x9B1FF4", Offset = "0x9B1FF4", VA = "0x9B1FF4")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x9B1500", Offset = "0x9B1500", VA = "0x9B1500")]
		private void CheckAndConvertMask()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x9B20E4", Offset = "0x9B20E4", VA = "0x9B20E4")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000128")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : MonoBehaviour
	{
		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VertexHelper vh;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh straightMesh;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh curvedMesh;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_SubMeshUI TMPsub;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI TMPtext;

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x9B0ECC", Offset = "0x9B0ECC", VA = "0x9B0ECC")]
		public void UpdateSubmesh(bool tesselate, bool curve)
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x9B20EC", Offset = "0x9B20EC", VA = "0x9B20EC")]
		public CurvedUITMPSubmesh()
		{
		}
	}
	[Token(Token = "0x2000129")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x62D694", Offset = "0x62D694")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x62D694", Offset = "0x62D694")]
	public class OptionalDependencyAttribute : Attribute
	{
		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dependentClass;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string define;

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x96EC68", Offset = "0x96EC68", VA = "0x96EC68")]
		public OptionalDependencyAttribute(string dependentClass, string define)
		{
		}
	}
}
namespace BoneTool.Script.Runtime
{
	[Token(Token = "0x200012A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D6F8", Offset = "0x62D6F8")]
	public class BonePoseLib : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200012B")]
		public class ArmaturePose
		{
			[Token(Token = "0x400056C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x400056D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<BonePose> BonePoses;

			[Token(Token = "0x60006C5")]
			[Address(RVA = "0x7D6CB4", Offset = "0x7D6CB4", VA = "0x7D6CB4")]
			public ArmaturePose()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200012C")]
		public struct BonePose
		{
			[Token(Token = "0x400056E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 SavedPos;

			[Token(Token = "0x400056F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 SavedRot;

			[Token(Token = "0x4000570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 SavedSca;

			[Token(Token = "0x4000571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform TargetTransform;

			[Token(Token = "0x60006C6")]
			[Address(RVA = "0x7D6D18", Offset = "0x7D6D18", VA = "0x7D6D18")]
			public BonePose(Transform targetTransform)
			{
			}

			[Token(Token = "0x60006C7")]
			[Address(RVA = "0x7D6D9C", Offset = "0x7D6D9C", VA = "0x7D6D9C")]
			public void Apply()
			{
			}
		}

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ArmaturePose> Poses;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string last_pose;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<BonePose> AnimateToPose;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float AnimateSpeed;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, ArmaturePose> cache;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, int> cacheindex;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string lastpose;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int lastpose_index;

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xCC8ABC", Offset = "0xCC8ABC", VA = "0xCC8ABC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xCC8C10", Offset = "0xCC8C10", VA = "0xCC8C10")]
		public void AddPose(ArmaturePose pose)
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xCC8C74", Offset = "0xCC8C74", VA = "0xCC8C74")]
		public void RemovePose(string poseName)
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xCC8D68", Offset = "0xCC8D68", VA = "0xCC8D68")]
		public void SetPose(int index)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xCC8F6C", Offset = "0xCC8F6C", VA = "0xCC8F6C")]
		public void ApplyPose(int index)
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xCC9114", Offset = "0xCC9114", VA = "0xCC9114")]
		public void AnimatePose(int index)
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xCC91CC", Offset = "0xCC91CC", VA = "0xCC91CC")]
		public void AnimatePose(string name)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xCC92C8", Offset = "0xCC92C8", VA = "0xCC92C8")]
		public void SetPoseImmediate(string name)
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xCC9518", Offset = "0xCC9518", VA = "0xCC9518")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xCC9810", Offset = "0xCC9810", VA = "0xCC9810")]
		public BonePoseLib()
		{
		}
	}
	[Token(Token = "0x200012D")]
	[ExecuteInEditMode]
	public class BoneVisualiser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200012E")]
		private struct BoneTransform
		{
			[Token(Token = "0x400057A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform Target;

			[Token(Token = "0x400057B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 LocalPosition;

			[Token(Token = "0x60006CC")]
			[Address(RVA = "0x7D6E00", Offset = "0x7D6E00", VA = "0x7D6E00")]
			public BoneTransform(Transform target, Vector3 localPosition)
			{
			}

			[Token(Token = "0x60006CD")]
			[Address(RVA = "0x7D6E48", Offset = "0x7D6E48", VA = "0x7D6E48")]
			public void SetLocalPosition(Vector3 position)
			{
			}
		}

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform RootNode;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float BoneGizmosSize;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color BoneColor;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool HideRoot;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool EnableConstraint;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _preRootNode;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform[] _childNodes;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneTransform[] _previousTransforms;

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xCC992C", Offset = "0xCC992C", VA = "0xCC992C")]
		public Transform[] GetChildNodes()
		{
			return null;
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xCC9934", Offset = "0xCC9934", VA = "0xCC9934")]
		private void Update()
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xCC9A7C", Offset = "0xCC9A7C", VA = "0xCC9A7C")]
		public void PopulateChildren()
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xCC9D10", Offset = "0xCC9D10", VA = "0xCC9D10")]
		public BoneVisualiser()
		{
		}
	}
}
namespace s3DBakers.Buttons
{
	[Serializable]
	[Token(Token = "0x200012F")]
	public struct str3DdBbReceiver
	{
		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject receiver;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public enum3DBbState3 Switch;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public str3DBbActions actions;
	}
	[Serializable]
	[Token(Token = "0x2000130")]
	public struct str3DdBbReceiver2
	{
		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject receiver;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x632E20", Offset = "0x632E20")]
		public bool position;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool rotation;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool objects;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool materials;
	}
	[Serializable]
	[Token(Token = "0x2000131")]
	public struct str3DBbActions
	{
		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool position;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool rotation;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool objects;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool materials;
	}
	[Serializable]
	[Token(Token = "0x2000132")]
	public struct str3DBbScreenInfo
	{
		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x632E34", Offset = "0x632E34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632E34", Offset = "0x632E34")]
		public bool hidePassword;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x632E84", Offset = "0x632E84")]
		public GameObject[] number1;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] number2;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] number3;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] number4;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x632E98", Offset = "0x632E98")]
		public GameObject[] dot1;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] dot2;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] dot3;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject[] dot4;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x632EAC", Offset = "0x632EAC")]
		public GameObject messageClosed;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject messageOpened;
	}
	[Serializable]
	[Token(Token = "0x2000133")]
	public struct ste3DBbMats
	{
		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int materialID;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;
	}
	[Token(Token = "0x2000134")]
	public enum enum3dBbType
	{
		[Token(Token = "0x4000596")]
		button,
		[Token(Token = "0x4000597")]
		toggle
	}
	[Token(Token = "0x2000135")]
	public enum enum3DBbState2
	{
		[Token(Token = "0x4000599")]
		turn0,
		[Token(Token = "0x400059A")]
		turn1
	}
	[Token(Token = "0x2000136")]
	public enum enum3DBbState3
	{
		[Token(Token = "0x400059C")]
		auto,
		[Token(Token = "0x400059D")]
		turn0,
		[Token(Token = "0x400059E")]
		turn1
	}
	[Token(Token = "0x2000137")]
	public enum enum3DBbActions
	{
		[Token(Token = "0x40005A0")]
		auto,
		[Token(Token = "0x40005A1")]
		position,
		[Token(Token = "0x40005A2")]
		rotation,
		[Token(Token = "0x40005A3")]
		objects,
		[Token(Token = "0x40005A4")]
		materials
	}
	[Token(Token = "0x2000138")]
	public struct str3DBbMessage
	{
		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject GO;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public enum3DBbState3 state;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public str3DBbActions actions;
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000139")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40005A9")]
		TRIANGLES,
		[Token(Token = "0x40005AA")]
		QUADS
	}
	[Token(Token = "0x200013A")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40005AC")]
		ABSORPTION,
		[Token(Token = "0x40005AD")]
		TRANSMISSION,
		[Token(Token = "0x40005AE")]
		SCATTERING
	}
	[Token(Token = "0x200013B")]
	public struct MeshGroup
	{
		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace RootMotion
{
	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62D770", Offset = "0x62D770")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62D770", Offset = "0x62D770")]
	public abstract class Baker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200013D")]
		public enum Mode
		{
			[Token(Token = "0x40005C2")]
			AnimationClips,
			[Token(Token = "0x40005C3")]
			AnimationStates,
			[Token(Token = "0x40005C4")]
			PlayableDirector,
			[Token(Token = "0x40005C5")]
			Realtime
		}

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632EC0", Offset = "0x632EC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x632EC0", Offset = "0x632EC0")]
		public int frameRate;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x632F18", Offset = "0x632F18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632F18", Offset = "0x632F18")]
		public float keyReductionError;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632F70", Offset = "0x632F70")]
		public Mode mode;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632FA8", Offset = "0x632FA8")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x632FE0", Offset = "0x632FE0")]
		public string[] animationStates;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633018", Offset = "0x633018")]
		public bool loop;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633050", Offset = "0x633050")]
		public string saveToFolder;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633088", Offset = "0x633088")]
		public string appendName;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6330C0", Offset = "0x6330C0")]
		public string saveName;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6330F8", Offset = "0x6330F8")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x633108", Offset = "0x633108")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		public Animator animator;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		[SerializeField]
		public PlayableDirector director;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x633188", Offset = "0x633188")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x170000B9")]
		public bool isBaking
		{
			[Token(Token = "0x60006D2")]
			[Address(RVA = "0xEE6EAC", Offset = "0xEE6EAC", VA = "0xEE6EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B4D8", Offset = "0x63B4D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006D3")]
			[Address(RVA = "0xEE6EB4", Offset = "0xEE6EB4", VA = "0xEE6EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B4E8", Offset = "0x63B4E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public float bakingProgress
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0xEE6EC0", Offset = "0xEE6EC0", VA = "0xEE6EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B4F8", Offset = "0x63B4F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006D5")]
			[Address(RVA = "0xEE6EC8", Offset = "0xEE6EC8", VA = "0xEE6EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B508", Offset = "0x63B508")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		protected float clipLength
		{
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0xEE6ED0", Offset = "0xEE6ED0", VA = "0xEE6ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B518", Offset = "0x63B518")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0xEE6ED8", Offset = "0xEE6ED8", VA = "0xEE6ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B528", Offset = "0x63B528")]
			private set
			{
			}
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xEE6D8C", Offset = "0xEE6D8C", VA = "0xEE6D8C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63B3F8", Offset = "0x63B3F8")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xEE6DD4", Offset = "0xEE6DD4", VA = "0xEE6DD4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63B430", Offset = "0x63B430")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xEE6E1C", Offset = "0xEE6E1C", VA = "0xEE6E1C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63B468", Offset = "0x63B468")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xEE6E64", Offset = "0xEE6E64", VA = "0xEE6E64")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63B4A0", Offset = "0x63B4A0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60006D6")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x60006D7")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x60006D8")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x60006D9")]
		protected abstract void OnSetCurves(AnimationClip clip);

		[Token(Token = "0x60006DA")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xEE6EE0", Offset = "0xEE6EE0", VA = "0xEE6EE0")]
		public void BakeClip()
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xEE6EE4", Offset = "0xEE6EE4", VA = "0xEE6EE4")]
		public void StartBaking()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xEE6EE8", Offset = "0xEE6EE8", VA = "0xEE6EE8")]
		public void StopBaking()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xEE6EEC", Offset = "0xEE6EEC", VA = "0xEE6EEC")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633198", Offset = "0x633198")]
		public bool markAsLegacy;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6331D0", Offset = "0x6331D0")]
		public Transform root;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633208", Offset = "0x633208")]
		public Transform rootNode;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633240", Offset = "0x633240")]
		public Transform[] ignoreList;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633278", Offset = "0x633278")]
		public Transform[] bakePositionList;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerTransform[] children;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerTransform rootChild;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int rootChildIndex;

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x8EB124", Offset = "0x8EB124", VA = "0x8EB124")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x8EB524", Offset = "0x8EB524", VA = "0x8EB524", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x8EB52C", Offset = "0x8EB52C", VA = "0x8EB52C", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x8EB63C", Offset = "0x8EB63C", VA = "0x8EB63C", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x8EB6B8", Offset = "0x8EB6B8", VA = "0x8EB6B8", Slot = "7")]
		protected override void OnSetCurves(AnimationClip clip)
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x8EB734", Offset = "0x8EB734", VA = "0x8EB734", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x8EB37C", Offset = "0x8EB37C", VA = "0x8EB37C")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x8EB450", Offset = "0x8EB450", VA = "0x8EB450")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x8EB7B0", Offset = "0x8EB7B0", VA = "0x8EB7B0")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class TQ
	{
		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 t;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion q;

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x10DF3CC", Offset = "0x10DF3CC", VA = "0x10DF3CC")]
		public TQ(Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class AvatarUtility
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xEE6168", Offset = "0xEE6168", VA = "0xEE6168")]
		public static Quaternion GetPostRotation(UnityEngine.Avatar avatar, AvatarIKGoal avatarIKGoal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xEE63CC", Offset = "0xEE63CC", VA = "0xEE63CC")]
		public static TQ GetIKGoalTQ(UnityEngine.Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xEE63AC", Offset = "0xEE63AC", VA = "0xEE63AC")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xEE698C", Offset = "0xEE698C", VA = "0xEE698C")]
		public AvatarUtility()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public static class BakerUtilities
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xEE8208", Offset = "0xEE8208", VA = "0xEE8208")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xEE9B24", Offset = "0xEE9B24", VA = "0xEE9B24")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xEE7C5C", Offset = "0xEE7C5C", VA = "0xEE7C5C")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xEE8250", Offset = "0xEE8250", VA = "0xEE8250")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xEE7780", Offset = "0xEE7780", VA = "0xEE7780")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x2000142")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qx;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Qy;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Qz;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Qw;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string Tx;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string Ty;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string Tz;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve rotX;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve rotY;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve rotZ;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve rotW;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve posX;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve posY;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve posZ;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AvatarIKGoal goal;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion lastQ;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool lastQSet;

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xEE7020", Offset = "0xEE7020", VA = "0xEE7020")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xEE734C", Offset = "0xEE734C", VA = "0xEE734C")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xEE71F0", Offset = "0xEE71F0", VA = "0xEE71F0")]
		public void Reset()
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xEE7538", Offset = "0xEE7538", VA = "0xEE7538")]
		public void SetIKKeyframes(float time, UnityEngine.Avatar avatar, float humanScale, Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xEE79F0", Offset = "0xEE79F0", VA = "0xEE79F0")]
		public void SetKeyframes(float time, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xEE7AEC", Offset = "0xEE7AEC", VA = "0xEE7AEC")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xEE7BE8", Offset = "0xEE7BE8", VA = "0xEE7BE8")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xEE7B60", Offset = "0xEE7B60", VA = "0xEE7B60")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xEE7E54", Offset = "0xEE7E54", VA = "0xEE7E54")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xEE7F08", Offset = "0xEE7F08", VA = "0xEE7F08")]
		public void SetCurves(AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000143")]
	public class BakerMuscle
	{
		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int muscleIndex;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertyName;

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xEE8254", Offset = "0xEE8254", VA = "0xEE8254")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xEE82D0", Offset = "0xEE82D0", VA = "0xEE82D0")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xEE8D7C", Offset = "0xEE8D7C", VA = "0xEE8D7C")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xEE8E30", Offset = "0xEE8E30", VA = "0xEE8E30")]
		public void SetCurves(AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xEE8D10", Offset = "0xEE8D10", VA = "0xEE8D10")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xEE8F30", Offset = "0xEE8F30", VA = "0xEE8F30")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xEE8F78", Offset = "0xEE8F78", VA = "0xEE8F78")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000144")]
	public class BakerTransform
	{
		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve posX;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve posY;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve posZ;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotX;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve rotY;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve rotZ;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotW;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string relativePath;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool recordPosition;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 relativePosition;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isRootNode;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion relativeRotation;

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xEE8F80", Offset = "0xEE8F80", VA = "0xEE8F80")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xEE9170", Offset = "0xEE9170", VA = "0xEE9170")]
		public void SetRelativeSpace(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xEE9184", Offset = "0xEE9184", VA = "0xEE9184")]
		public void SetCurves(AnimationClip clip)
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xEE9454", Offset = "0xEE9454", VA = "0xEE9454")]
		private void AddRootMotionCurves(AnimationClip clip)
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xEE902C", Offset = "0xEE902C", VA = "0xEE902C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xEE96F8", Offset = "0xEE96F8", VA = "0xEE96F8")]
		public void ReduceKeyframes(float maxError)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xEE976C", Offset = "0xEE976C", VA = "0xEE976C")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xEE9920", Offset = "0xEE9920", VA = "0xEE9920")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6332B0", Offset = "0x6332B0")]
		public bool bakeHandIK;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6332E8", Offset = "0x6332E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6332E8", Offset = "0x6332E8")]
		public float IKKeyReductionError;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633340", Offset = "0x633340")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633340", Offset = "0x633340")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] muscles;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HumanPose pose;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HumanPoseHandler handler;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 bodyPosition;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion bodyRotation;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int mN;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x8F2EDC", Offset = "0x8F2EDC", VA = "0x8F2EDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x8F3464", Offset = "0x8F3464", VA = "0x8F3464", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x8F3484", Offset = "0x8F3484", VA = "0x8F3484", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x8F3560", Offset = "0x8F3560", VA = "0x8F3560", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x8F363C", Offset = "0x8F363C", VA = "0x8F363C", Slot = "7")]
		protected override void OnSetCurves(AnimationClip clip)
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x8F380C", Offset = "0x8F380C", VA = "0x8F380C", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x8F3AD4", Offset = "0x8F3AD4", VA = "0x8F3AD4")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x8F3BB0", Offset = "0x8F3BB0", VA = "0x8F3BB0")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000147")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000628")]
			Update,
			[Token(Token = "0x4000629")]
			FixedUpdate,
			[Token(Token = "0x400062A")]
			LateUpdate,
			[Token(Token = "0x400062B")]
			FixedLateUpdate
		}

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633394", Offset = "0x633394")]
		public bool smoothFollow;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6333CC", Offset = "0x6333CC")]
		public float rotationSensitivity;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633404", Offset = "0x633404")]
		public float distance;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63343C", Offset = "0x63343C")]
		public LayerMask blockingLayers;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633474", Offset = "0x633474")]
		public float blockedOffset;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63348C", Offset = "0x63348C")]
		private float <x>k__BackingField;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63349C", Offset = "0x63349C")]
		private float <y>k__BackingField;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6334AC", Offset = "0x6334AC")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 targetDistance;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 position;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rotation;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 smoothPosition;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x170000BC")]
		public float x
		{
			[Token(Token = "0x6000715")]
			[Address(RVA = "0xB245A4", Offset = "0xB245A4", VA = "0xB245A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B538", Offset = "0x63B538")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000716")]
			[Address(RVA = "0xB245AC", Offset = "0xB245AC", VA = "0xB245AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B548", Offset = "0x63B548")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public float y
		{
			[Token(Token = "0x6000717")]
			[Address(RVA = "0xB245B4", Offset = "0xB245B4", VA = "0xB245B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B558", Offset = "0x63B558")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000718")]
			[Address(RVA = "0xB245BC", Offset = "0xB245BC", VA = "0xB245BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B568", Offset = "0x63B568")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public float distanceTarget
		{
			[Token(Token = "0x6000719")]
			[Address(RVA = "0xB245C4", Offset = "0xB245C4", VA = "0xB245C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B578", Offset = "0x63B578")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600071A")]
			[Address(RVA = "0xB245CC", Offset = "0xB245CC", VA = "0xB245CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B588", Offset = "0x63B588")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		private float zoomAdd
		{
			[Token(Token = "0x6000724")]
			[Address(RVA = "0xB24E70", Offset = "0xB24E70", VA = "0xB24E70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xB245D4", Offset = "0xB245D4", VA = "0xB245D4")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xB24610", Offset = "0xB24610", VA = "0xB24610")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xB24618", Offset = "0xB24618", VA = "0xB24618", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xB24734", Offset = "0xB24734", VA = "0xB24734", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xB24798", Offset = "0xB24798", VA = "0xB24798", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xB24800", Offset = "0xB24800", VA = "0xB24800", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xB24864", Offset = "0xB24864", VA = "0xB24864")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xB24770", Offset = "0xB24770", VA = "0xB24770")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xB249E4", Offset = "0xB249E4", VA = "0xB249E4")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xB24E40", Offset = "0xB24E40", VA = "0xB24E40")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xB24EE8", Offset = "0xB24EE8", VA = "0xB24EE8")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xB24F8C", Offset = "0xB24F8C", VA = "0xB24F8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xB24FC4", Offset = "0xB24FC4", VA = "0xB24FC4")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xB25174", Offset = "0xB25174", VA = "0xB25174")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xB251A4", Offset = "0xB251A4", VA = "0xB251A4")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000149")]
	public enum Axis
	{
		[Token(Token = "0x4000632")]
		X,
		[Token(Token = "0x4000633")]
		Y,
		[Token(Token = "0x4000634")]
		Z
	}
	[Token(Token = "0x200014A")]
	public class AxisTools
	{
		[Token(Token = "0x600072B")]
		[Address(RVA = "0xEE6994", Offset = "0xEE6994", VA = "0xEE6994")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xEE69B8", Offset = "0xEE69B8", VA = "0xEE69B8")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xEE69F0", Offset = "0xEE69F0", VA = "0xEE69F0")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xEE6AE0", Offset = "0xEE6AE0", VA = "0xEE6AE0")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xEE6A88", Offset = "0xEE6A88", VA = "0xEE6A88")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xEE6B78", Offset = "0xEE6B78", VA = "0xEE6B78")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xEE6BC0", Offset = "0xEE6BC0", VA = "0xEE6BC0")]
		public static Vector3 GetAxisVectorToDirection(Quaternion r, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xEE6D84", Offset = "0xEE6D84", VA = "0xEE6D84")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014B")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x200014C")]
		public class LimbOrientation
		{
			[Token(Token = "0x4000639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x400063A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x400063B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x6000736")]
			[Address(RVA = "0x7D6BE8", Offset = "0x7D6BE8", VA = "0x7D6BE8")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x170000C0")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0xCBBC90", Offset = "0xCBBC90", VA = "0xCBBC90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x6000735")]
			[Address(RVA = "0xCBBF00", Offset = "0xCBBF00", VA = "0xCBBF00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xCBBC10", Offset = "0xCBBC10", VA = "0xCBBC10")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x200014D")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x200014E")]
		public enum BoneType
		{
			[Token(Token = "0x400064F")]
			Unassigned,
			[Token(Token = "0x4000650")]
			Spine,
			[Token(Token = "0x4000651")]
			Head,
			[Token(Token = "0x4000652")]
			Arm,
			[Token(Token = "0x4000653")]
			Leg,
			[Token(Token = "0x4000654")]
			Tail,
			[Token(Token = "0x4000655")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x200014F")]
		public enum BoneSide
		{
			[Token(Token = "0x4000657")]
			Center,
			[Token(Token = "0x4000658")]
			Left,
			[Token(Token = "0x4000659")]
			Right
		}

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xCBC170", Offset = "0xCBC170", VA = "0xCBC170")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xCBC498", Offset = "0xCBC498", VA = "0xCBC498")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xCBC710", Offset = "0xCBC710", VA = "0xCBC710")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xCBC798", Offset = "0xCBC798", VA = "0xCBC798")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xCBC848", Offset = "0xCBC848", VA = "0xCBC848")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xCBC344", Offset = "0xCBC344", VA = "0xCBC344")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xCBC66C", Offset = "0xCBC66C", VA = "0xCBC66C")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xCBD0A8", Offset = "0xCBD0A8", VA = "0xCBD0A8")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xCBCEB0", Offset = "0xCBCEB0", VA = "0xCBCEB0")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xCBCFAC", Offset = "0xCBCFAC", VA = "0xCBCFAC")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xCBCA60", Offset = "0xCBCA60", VA = "0xCBCA60")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xCBCB18", Offset = "0xCBCB18", VA = "0xCBCB18")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xCBCBD0", Offset = "0xCBCBD0", VA = "0xCBCBD0")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xCBCC88", Offset = "0xCBCC88", VA = "0xCBCC88")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xCBCD40", Offset = "0xCBCD40", VA = "0xCBCD40")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xCBCDF8", Offset = "0xCBCDF8", VA = "0xCBCDF8")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xCBD2B0", Offset = "0xCBD2B0", VA = "0xCBD2B0")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xCBC978", Offset = "0xCBC978", VA = "0xCBC978")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xCBD220", Offset = "0xCBD220", VA = "0xCBD220")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xCBD324", Offset = "0xCBD324", VA = "0xCBD324")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xCBD3F8", Offset = "0xCBD3F8", VA = "0xCBD3F8")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xCBD1A8", Offset = "0xCBD1A8", VA = "0xCBD1A8")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xCBD134", Offset = "0xCBD134", VA = "0xCBD134")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000150")]
	public class BipedReferences
	{
		[Token(Token = "0x2000151")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x400066B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x400066C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x170000C4")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x6000768")]
				[Address(RVA = "0x7D6CAC", Offset = "0x7D6CAC", VA = "0x7D6CAC")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x6000767")]
			[Address(RVA = "0x7D6C98", Offset = "0x7D6C98", VA = "0x7D6C98")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x170000C2")]
		public virtual bool isFilled
		{
			[Token(Token = "0x600074F")]
			[Address(RVA = "0xCC4618", Offset = "0xCC4618", VA = "0xCC4618", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C3")]
		public bool isEmpty
		{
			[Token(Token = "0x6000750")]
			[Address(RVA = "0xCC4A00", Offset = "0xCC4A00", VA = "0xCC4A00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xCC4A10", Offset = "0xCC4A10", VA = "0xCC4A10", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xCC4E30", Offset = "0xCC4E30", VA = "0xCC4E30", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xCC525C", Offset = "0xCC525C", VA = "0xCC525C")]
		public static bool AutoDetectReferences(BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xCC59BC", Offset = "0xCC59BC", VA = "0xCC59BC")]
		public static void DetectReferencesByNaming(BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xCC5514", Offset = "0xCC5514", VA = "0xCC5514")]
		public static void AssignHumanoidReferences(BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xCC6230", Offset = "0xCC6230", VA = "0xCC6230")]
		public static bool SetupError(BipedReferences references, string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xCC632C", Offset = "0xCC632C", VA = "0xCC632C")]
		public static bool SetupWarning(BipedReferences references, string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xCC68E4", Offset = "0xCC68E4", VA = "0xCC68E4")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xCC66C8", Offset = "0xCC66C8", VA = "0xCC66C8")]
		private static bool AddBoneToEyes(Transform bone, BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xCC6544", Offset = "0xCC6544", VA = "0xCC6544")]
		private static bool AddBoneToSpine(Transform bone, BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xCC63CC", Offset = "0xCC63CC", VA = "0xCC63CC")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, Transform firstBone, Transform secondBone, Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xCC67D4", Offset = "0xCC67D4", VA = "0xCC67D4")]
		private static void AddBoneToHierarchy(Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xCC69DC", Offset = "0xCC69DC", VA = "0xCC69DC")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xCC75EC", Offset = "0xCC75EC", VA = "0xCC75EC")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xCC7054", Offset = "0xCC7054", VA = "0xCC7054")]
		private static bool SpineError(BipedReferences references, string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xCC7908", Offset = "0xCC7908", VA = "0xCC7908")]
		private static bool SpineWarning(BipedReferences references, string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xCC73D4", Offset = "0xCC73D4", VA = "0xCC73D4")]
		private static bool EyesError(BipedReferences references, string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xCC7910", Offset = "0xCC7910", VA = "0xCC7910")]
		private static bool EyesWarning(BipedReferences references, string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xCC7918", Offset = "0xCC7918", VA = "0xCC7918")]
		private static bool RootHeightWarning(BipedReferences references, string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xCC7AEC", Offset = "0xCC7AEC", VA = "0xCC7AEC")]
		private static bool FacingAxisWarning(BipedReferences references, string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xCC7CB4", Offset = "0xCC7CB4", VA = "0xCC7CB4")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xCC5488", Offset = "0xCC5488", VA = "0xCC5488")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xAEA388", Offset = "0xAEA388", VA = "0xAEA388")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x9B7E88", Offset = "0x9B7E88", VA = "0x9B7E88")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x9B7FBC", Offset = "0x9B7FBC", VA = "0x9B7FBC")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class Hierarchy
	{
		[Token(Token = "0x600076C")]
		[Address(RVA = "0x8F204C", Offset = "0x8F204C", VA = "0x8F204C")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x8F2238", Offset = "0x8F2238", VA = "0x8F2238")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x8F20E4", Offset = "0x8F20E4", VA = "0x8F20E4")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x8F2358", Offset = "0x8F2358", VA = "0x8F2358")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x8F2484", Offset = "0x8F2484", VA = "0x8F2484")]
		public static void AddAncestors(Transform transform, Transform blocker, Transform[] array)
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x8F26D4", Offset = "0x8F26D4", VA = "0x8F26D4")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x8F27DC", Offset = "0x8F27DC", VA = "0x8F27DC")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x8F2950", Offset = "0x8F2950", VA = "0x8F2950")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x8F2D18", Offset = "0x8F2D18", VA = "0x8F2D18")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x8F2ADC", Offset = "0x8F2ADC", VA = "0x8F2ADC")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x8F2ECC", Offset = "0x8F2ECC", VA = "0x8F2ECC")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x8F4090", Offset = "0x8F4090", VA = "0x8F4090")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x8F411C", Offset = "0x8F411C", VA = "0x8F411C")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000156")]
	public enum InterpolationMode
	{
		[Token(Token = "0x4000673")]
		None,
		[Token(Token = "0x4000674")]
		InOutCubic,
		[Token(Token = "0x4000675")]
		InOutQuintic,
		[Token(Token = "0x4000676")]
		InOutSine,
		[Token(Token = "0x4000677")]
		InQuintic,
		[Token(Token = "0x4000678")]
		InQuartic,
		[Token(Token = "0x4000679")]
		InCubic,
		[Token(Token = "0x400067A")]
		InQuadratic,
		[Token(Token = "0x400067B")]
		InElastic,
		[Token(Token = "0x400067C")]
		InElasticSmall,
		[Token(Token = "0x400067D")]
		InElasticBig,
		[Token(Token = "0x400067E")]
		InSine,
		[Token(Token = "0x400067F")]
		InBack,
		[Token(Token = "0x4000680")]
		OutQuintic,
		[Token(Token = "0x4000681")]
		OutQuartic,
		[Token(Token = "0x4000682")]
		OutCubic,
		[Token(Token = "0x4000683")]
		OutInCubic,
		[Token(Token = "0x4000684")]
		OutInQuartic,
		[Token(Token = "0x4000685")]
		OutElastic,
		[Token(Token = "0x4000686")]
		OutElasticSmall,
		[Token(Token = "0x4000687")]
		OutElasticBig,
		[Token(Token = "0x4000688")]
		OutSine,
		[Token(Token = "0x4000689")]
		OutBack,
		[Token(Token = "0x400068A")]
		OutBackCubic,
		[Token(Token = "0x400068B")]
		OutBackQuartic,
		[Token(Token = "0x400068C")]
		BackInCubic,
		[Token(Token = "0x400068D")]
		BackInQuartic
	}
	[Token(Token = "0x2000157")]
	public class Interp
	{
		[Token(Token = "0x6000779")]
		[Address(RVA = "0x8F6168", Offset = "0x8F6168", VA = "0x8F6168")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x8F6B04", Offset = "0x8F6B04", VA = "0x8F6B04")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x8F6B78", Offset = "0x8F6B78", VA = "0x8F6B78")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x8F656C", Offset = "0x8F656C", VA = "0x8F656C")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x8F6578", Offset = "0x8F6578", VA = "0x8F6578")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x8F659C", Offset = "0x8F659C", VA = "0x8F659C")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x8F65D8", Offset = "0x8F65D8", VA = "0x8F65D8")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x8F65F0", Offset = "0x8F65F0", VA = "0x8F65F0")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x8F6604", Offset = "0x8F6604", VA = "0x8F6604")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x8F6618", Offset = "0x8F6618", VA = "0x8F6618")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x8F6628", Offset = "0x8F6628", VA = "0x8F6628")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x8F6670", Offset = "0x8F6670", VA = "0x8F6670")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x8F66A8", Offset = "0x8F66A8", VA = "0x8F66A8")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x8F66D0", Offset = "0x8F66D0", VA = "0x8F66D0")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x8F6C04", Offset = "0x8F6C04", VA = "0x8F6C04")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x8F6704", Offset = "0x8F6704", VA = "0x8F6704")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x8F672C", Offset = "0x8F672C", VA = "0x8F672C")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x8F675C", Offset = "0x8F675C", VA = "0x8F675C")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x8F6790", Offset = "0x8F6790", VA = "0x8F6790")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x8F67D4", Offset = "0x8F67D4", VA = "0x8F67D4")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x8F6838", Offset = "0x8F6838", VA = "0x8F6838")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x8F689C", Offset = "0x8F689C", VA = "0x8F689C")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x8F68F0", Offset = "0x8F68F0", VA = "0x8F68F0")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x8F6944", Offset = "0x8F6944", VA = "0x8F6944")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x8F6980", Offset = "0x8F6980", VA = "0x8F6980")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x8F69B8", Offset = "0x8F69B8", VA = "0x8F69B8")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x8F6C38", Offset = "0x8F6C38", VA = "0x8F6C38")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x8F6A00", Offset = "0x8F6A00", VA = "0x8F6A00")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x8F6A94", Offset = "0x8F6A94", VA = "0x8F6A94")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x8F6AC4", Offset = "0x8F6AC4", VA = "0x8F6AC4")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x8F6CCC", Offset = "0x8F6CCC", VA = "0x8F6CCC")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x8F8FC8", Offset = "0x8F8FC8", VA = "0x8F8FC8")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x8F9054", Offset = "0x8F9054", VA = "0x8F9054")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x2000159")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x600079A")]
		[Address(RVA = "0xBA3F64", Offset = "0xBA3F64", VA = "0xBA3F64")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xBA3FBC", Offset = "0xBA3FBC", VA = "0xBA3FBC")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0xBA4088", Offset = "0xBA4088", VA = "0xBA4088")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xBA3FD4", Offset = "0xBA3FD4", VA = "0xBA3FD4")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xBA40A0", Offset = "0xBA40A0", VA = "0xBA40A0")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xBA4144", Offset = "0xBA4144", VA = "0xBA4144")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xBA4170", Offset = "0xBA4170", VA = "0xBA4170")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xBA41C0", Offset = "0xBA41C0", VA = "0xBA41C0")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xBA422C", Offset = "0xBA422C", VA = "0xBA422C")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xBA4348", Offset = "0xBA4348", VA = "0xBA4348")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xBA4448", Offset = "0xBA4448", VA = "0xBA4448")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xBA44AC", Offset = "0xBA44AC", VA = "0xBA44AC")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x200015A")]
	public static class QuaTools
	{
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xC66CD4", Offset = "0xC66CD4", VA = "0xC66CD4")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xC66D24", Offset = "0xC66D24", VA = "0xC66D24")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xC66D74", Offset = "0xC66D74", VA = "0xC66D74")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xC66E1C", Offset = "0xC66E1C", VA = "0xC66E1C")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xC66EC4", Offset = "0xC66EC4", VA = "0xC66EC4")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xC66FA4", Offset = "0xC66FA4", VA = "0xC66FA4")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xC66FF8", Offset = "0xC66FF8", VA = "0xC66FF8")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xC670CC", Offset = "0xC670CC", VA = "0xC670CC")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xC671DC", Offset = "0xC671DC", VA = "0xC671DC")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xC67374", Offset = "0xC67374", VA = "0xC67374")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xC67468", Offset = "0xC67468", VA = "0xC67468")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xC67574", Offset = "0xC67574", VA = "0xC67574")]
		public static Vector3 ToBiPolar(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xC67684", Offset = "0xC67684", VA = "0xC67684")]
		public static float ToBiPolar(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200015B")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x170000C5")]
		public static T instance
		{
			[Token(Token = "0x60007B3")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60007B5")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6334CC", Offset = "0x6334CC")]
		public bool fixTransforms;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x170000C6")]
		private bool animatePhysics
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0xC716B4", Offset = "0xC716B4", VA = "0xC716B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C7")]
		private bool isAnimated
		{
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0xC71A00", Offset = "0xC71A00", VA = "0xC71A00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xC71570", Offset = "0xC71570", VA = "0xC71570")]
		public void Disable()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xC71618", Offset = "0xC71618", VA = "0xC71618", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xC7161C", Offset = "0xC7161C", VA = "0xC7161C", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xC71620", Offset = "0xC71620", VA = "0xC71620", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xC71624", Offset = "0xC71624", VA = "0xC71624")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xC716B0", Offset = "0xC716B0", VA = "0xC716B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xC7165C", Offset = "0xC7165C", VA = "0xC7165C")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xC719B4", Offset = "0xC719B4", VA = "0xC719B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xC717A0", Offset = "0xC717A0", VA = "0xC717A0")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xC71AB8", Offset = "0xC71AB8", VA = "0xC71AB8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xC71B14", Offset = "0xC71B14", VA = "0xC71B14")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xC71B70", Offset = "0xC71B70", VA = "0xC71B70")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xC71BB8", Offset = "0xC71BB8", VA = "0xC71BB8")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x10EF674", Offset = "0x10EF674", VA = "0x10EF674")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x10EF734", Offset = "0x10EF734", VA = "0x10EF734")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x10EF7F4", Offset = "0x10EF7F4", VA = "0x10EF7F4")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x10EF8B4", Offset = "0x10EF8B4", VA = "0x10EF8B4")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public static class V3Tools
	{
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x9C4D98", Offset = "0x9C4D98", VA = "0x9C4D98")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x9C4E38", Offset = "0x9C4E38", VA = "0x9C4E38")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x9C4E74", Offset = "0x9C4E74", VA = "0x9C4E74")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x9C4EB8", Offset = "0x9C4EB8", VA = "0x9C4EB8")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x9C4F54", Offset = "0x9C4F54", VA = "0x9C4F54")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x9C50B0", Offset = "0x9C50B0", VA = "0x9C50B0")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, [Out] bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x9C522C", Offset = "0x9C522C", VA = "0x9C522C")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, [Out] float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x9C53B0", Offset = "0x9C53B0", VA = "0x9C53B0")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x9C546C", Offset = "0x9C546C", VA = "0x9C546C")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x9C556C", Offset = "0x9C556C", VA = "0x9C556C")]
		public static Vector3 TransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x9C55F4", Offset = "0x9C55F4", VA = "0x9C55F4")]
		public static Vector3 InverseTransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200015F")]
	public static class Warning
	{
		[Token(Token = "0x2000160")]
		public delegate void Logger(string message);

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x9C6DC4", Offset = "0x9C6DC4", VA = "0x9C6DC4")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x9C6E5C", Offset = "0x9C6E5C", VA = "0x9C6E5C")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.Dynamics
{
	[Token(Token = "0x2000161")]
	public class AnimationBlocker : MonoBehaviour
	{
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xEDF0E0", Offset = "0xEDF0E0", VA = "0xEDF0E0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xEDF148", Offset = "0xEDF148", VA = "0xEDF148")]
		public AnimationBlocker()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public abstract class BehaviourBase : MonoBehaviour
	{
		[Token(Token = "0x2000163")]
		public delegate void BehaviourDelegate();

		[Token(Token = "0x2000164")]
		public delegate void HitDelegate(MuscleHit hit);

		[Token(Token = "0x2000165")]
		public delegate void CollisionDelegate(MuscleCollision collision);

		[Serializable]
		[Token(Token = "0x2000166")]
		public struct PuppetEvent
		{
			[Token(Token = "0x40006B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633534", Offset = "0x633534")]
			public string switchToBehaviour;

			[Token(Token = "0x40006B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63356C", Offset = "0x63356C")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x40006B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6335A4", Offset = "0x6335A4")]
			public UnityEvent unityEvent;

			[Token(Token = "0x40006BA")]
			private const string empty = "";

			[Token(Token = "0x170000C9")]
			public bool switchBehaviour
			{
				[Token(Token = "0x6000817")]
				[Address(RVA = "0x7D5AB8", Offset = "0x7D5AB8", VA = "0x7D5AB8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000818")]
			[Address(RVA = "0x7D5B54", Offset = "0x7D5B54", VA = "0x7D5B54")]
			public void Trigger(PuppetMaster puppetMaster, bool switchBehaviourEnabled = true)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000167")]
		public class AnimatorEvent
		{
			[Token(Token = "0x40006BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string animationState;

			[Token(Token = "0x40006BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float crossfadeTime;

			[Token(Token = "0x40006BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int layer;

			[Token(Token = "0x40006BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool resetNormalizedTime;

			[Token(Token = "0x40006BF")]
			private const string empty = "";

			[Token(Token = "0x6000819")]
			[Address(RVA = "0x7D5398", Offset = "0x7D5398", VA = "0x7D5398")]
			public void Activate(Animator animator, Animation animation)
			{
			}

			[Token(Token = "0x600081A")]
			[Address(RVA = "0x7D5474", Offset = "0x7D5474", VA = "0x7D5474")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x600081B")]
			[Address(RVA = "0x7D5574", Offset = "0x7D5574", VA = "0x7D5574")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x600081C")]
			[Address(RVA = "0x7D5650", Offset = "0x7D5650", VA = "0x7D5650")]
			public AnimatorEvent()
			{
			}
		}

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BehaviourDelegate OnPreActivate;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BehaviourDelegate OnPreInitiate;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BehaviourDelegate OnPreFixedUpdate;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BehaviourDelegate OnPreUpdate;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BehaviourDelegate OnPreLateUpdate;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BehaviourDelegate OnPreDeactivate;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BehaviourDelegate OnPreFixTransforms;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BehaviourDelegate OnPreRead;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BehaviourDelegate OnPreWrite;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HitDelegate OnPreMuscleHit;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CollisionDelegate OnPreMuscleCollision;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CollisionDelegate OnPreMuscleCollisionExit;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BehaviourDelegate OnHierarchyChanged;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BehaviourDelegate OnPostActivate;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BehaviourDelegate OnPostInitiate;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BehaviourDelegate OnPostFixedUpdate;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BehaviourDelegate OnPostUpdate;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BehaviourDelegate OnPostLateUpdate;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BehaviourDelegate OnPostDeactivate;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public BehaviourDelegate OnPostDrawGizmos;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public BehaviourDelegate OnPostFixTransforms;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public BehaviourDelegate OnPostRead;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public BehaviourDelegate OnPostWrite;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public HitDelegate OnPostMuscleHit;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public CollisionDelegate OnPostMuscleCollision;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public CollisionDelegate OnPostMuscleCollisionExit;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public bool deactivated;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x633524", Offset = "0x633524")]
		private bool <forceActive>k__BackingField;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool initiated;

		[Token(Token = "0x170000C8")]
		public bool forceActive
		{
			[Token(Token = "0x60007F5")]
			[Address(RVA = "0xEEA1C4", Offset = "0xEEA1C4", VA = "0xEEA1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B608", Offset = "0x63B608")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0xEEA1CC", Offset = "0xEEA1CC", VA = "0xEEA1CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B618", Offset = "0x63B618")]
			protected set
			{
			}
		}

		[Token(Token = "0x60007DD")]
		public abstract void OnReactivate();

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xEEA148", Offset = "0xEEA148", VA = "0xEEA148", Slot = "5")]
		public virtual void Resurrect()
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xEEA14C", Offset = "0xEEA14C", VA = "0xEEA14C", Slot = "6")]
		public virtual void Freeze()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xEEA150", Offset = "0xEEA150", VA = "0xEEA150", Slot = "7")]
		public virtual void Unfreeze()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xEEA154", Offset = "0xEEA154", VA = "0xEEA154", Slot = "8")]
		public virtual void KillStart()
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xEEA158", Offset = "0xEEA158", VA = "0xEEA158", Slot = "9")]
		public virtual void KillEnd()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xEEA15C", Offset = "0xEEA15C", VA = "0xEEA15C", Slot = "10")]
		public virtual void OnTeleport(Quaternion deltaRotation, Vector3 deltaPosition, Vector3 pivot, bool moveToTarget)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xEEA160", Offset = "0xEEA160", VA = "0xEEA160", Slot = "11")]
		public virtual void OnMuscleDisconnected(Muscle m)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xEEA164", Offset = "0xEEA164", VA = "0xEEA164", Slot = "12")]
		public virtual void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xEEA168", Offset = "0xEEA168", VA = "0xEEA168", Slot = "13")]
		public virtual void OnMuscleAdded(Muscle m)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xEEA17C", Offset = "0xEEA17C", VA = "0xEEA17C", Slot = "14")]
		public virtual void OnMuscleRemoved(Muscle m)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xEEA190", Offset = "0xEEA190", VA = "0xEEA190", Slot = "15")]
		protected virtual void OnActivate()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xEEA194", Offset = "0xEEA194", VA = "0xEEA194", Slot = "16")]
		protected virtual void OnDeactivate()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xEEA198", Offset = "0xEEA198", VA = "0xEEA198", Slot = "17")]
		protected virtual void OnInitiate()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xEEA19C", Offset = "0xEEA19C", VA = "0xEEA19C", Slot = "18")]
		protected virtual void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xEEA1A0", Offset = "0xEEA1A0", VA = "0xEEA1A0", Slot = "19")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xEEA1A4", Offset = "0xEEA1A4", VA = "0xEEA1A4", Slot = "20")]
		protected virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xEEA1A8", Offset = "0xEEA1A8", VA = "0xEEA1A8", Slot = "21")]
		protected virtual void OnDrawGizmosBehaviour()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xEEA1AC", Offset = "0xEEA1AC", VA = "0xEEA1AC", Slot = "22")]
		protected virtual void OnFixTransformsBehaviour()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xEEA1B0", Offset = "0xEEA1B0", VA = "0xEEA1B0", Slot = "23")]
		protected virtual void OnReadBehaviour()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xEEA1B4", Offset = "0xEEA1B4", VA = "0xEEA1B4", Slot = "24")]
		protected virtual void OnWriteBehaviour()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xEEA1B8", Offset = "0xEEA1B8", VA = "0xEEA1B8", Slot = "25")]
		protected virtual void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xEEA1BC", Offset = "0xEEA1BC", VA = "0xEEA1BC", Slot = "26")]
		protected virtual void OnMuscleCollisionBehaviour(MuscleCollision collision)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xEEA1C0", Offset = "0xEEA1C0", VA = "0xEEA1C0", Slot = "27")]
		protected virtual void OnMuscleCollisionExitBehaviour(MuscleCollision collision)
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xEEA1D8", Offset = "0xEEA1D8", VA = "0xEEA1D8")]
		public void Initiate()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xEEA238", Offset = "0xEEA238", VA = "0xEEA238")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xEEA2A4", Offset = "0xEEA2A4", VA = "0xEEA2A4")]
		public void OnRead()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xEEA310", Offset = "0xEEA310", VA = "0xEEA310")]
		public void OnWrite()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xEEA37C", Offset = "0xEEA37C", VA = "0xEEA37C")]
		public void OnMuscleHit(MuscleHit hit)
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xEEA408", Offset = "0xEEA408", VA = "0xEEA408")]
		public void OnMuscleCollision(MuscleCollision collision)
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xEEA4B0", Offset = "0xEEA4B0", VA = "0xEEA4B0")]
		public void OnMuscleCollisionExit(MuscleCollision collision)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xEEA558", Offset = "0xEEA558", VA = "0xEEA558")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xEEA568", Offset = "0xEEA568", VA = "0xEEA568")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xEEA68C", Offset = "0xEEA68C", VA = "0xEEA68C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xEEA6EC", Offset = "0xEEA6EC", VA = "0xEEA6EC")]
		public void FixedUpdateB()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xEEA7A4", Offset = "0xEEA7A4", VA = "0xEEA7A4")]
		public void UpdateB()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xEEA85C", Offset = "0xEEA85C", VA = "0xEEA85C")]
		public void LateUpdateB()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xEEA914", Offset = "0xEEA914", VA = "0xEEA914", Slot = "28")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xEEA960", Offset = "0xEEA960", VA = "0xEEA960")]
		protected void RotateTargetToRootMuscle()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xEEAA94", Offset = "0xEEAA94", VA = "0xEEAA94")]
		protected void TranslateTargetToRootMuscle(float maintainY)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xEEABC8", Offset = "0xEEABC8", VA = "0xEEABC8")]
		protected void RemovePropMuscles()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xEEACE8", Offset = "0xEEACE8", VA = "0xEEACE8", Slot = "29")]
		protected virtual void GroundTarget(LayerMask layers)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xEEAC74", Offset = "0xEEAC74", VA = "0xEEAC74")]
		protected bool ContainsRemovablePropMuscle()
		{
			return default(bool);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xEEAEF0", Offset = "0xEEAEF0", VA = "0xEEAEF0")]
		protected BehaviourBase()
		{
		}
	}
	[Token(Token = "0x2000168")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62D7E0", Offset = "0x62D7E0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62D7E0", Offset = "0x62D7E0")]
	public class BehaviourFall : BehaviourBase
	{
		[Token(Token = "0x2000169")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D840", Offset = "0x62D840")]
		private sealed class <SmoothActivate>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BehaviourFall <>4__this;

			[Token(Token = "0x40006D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fader>5__2;

			[Token(Token = "0x170000CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600082D")]
				[Address(RVA = "0x7D5FD0", Offset = "0x7D5FD0", VA = "0x7D5FD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600082F")]
				[Address(RVA = "0x7D6018", Offset = "0x7D6018", VA = "0x7D6018", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600082A")]
			[Address(RVA = "0x7D5DBC", Offset = "0x7D5DBC", VA = "0x7D5DBC")]
			[DebuggerHidden]
			public <SmoothActivate>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600082B")]
			[Address(RVA = "0x7D5DE8", Offset = "0x7D5DE8", VA = "0x7D5DE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600082C")]
			[Address(RVA = "0x7D5DEC", Offset = "0x7D5DEC", VA = "0x7D5DEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600082E")]
			[Address(RVA = "0x7D5FD8", Offset = "0x7D5FD8", VA = "0x7D5FD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6335DC", Offset = "0x6335DC")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x6335DC", Offset = "0x6335DC")]
		public string stateName;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63363C", Offset = "0x63363C")]
		public float transitionDuration;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633674", Offset = "0x633674")]
		public int layer;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6336AC", Offset = "0x6336AC")]
		public float fixedTime;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x6336E4", Offset = "0x6336E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6336E4", Offset = "0x6336E4")]
		public LayerMask raycastLayers;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633744", Offset = "0x633744")]
		public string blendParameter;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63377C", Offset = "0x63377C")]
		public float writheHeight;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6337B4", Offset = "0x6337B4")]
		public float writheYVelocity;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6337EC", Offset = "0x6337EC")]
		public float blendSpeed;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633824", Offset = "0x633824")]
		public float blendMappingSpeed;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x63385C", Offset = "0x63385C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63385C", Offset = "0x63385C")]
		public bool canEnd;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6338BC", Offset = "0x6338BC")]
		public float minTime;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6338F4", Offset = "0x6338F4")]
		public float maxEndVelocity;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63392C", Offset = "0x63392C")]
		public PuppetEvent onEnd;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float timer;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool endTriggered;

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xEEAEF8", Offset = "0xEEAEF8", VA = "0xEEAEF8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63B628", Offset = "0x63B628")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xEEAF40", Offset = "0xEEAF40", VA = "0xEEAF40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63B660", Offset = "0x63B660")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xEEAF88", Offset = "0xEEAF88", VA = "0xEEAF88", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xEEB048", Offset = "0xEEB048", VA = "0xEEB048", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xEEB050", Offset = "0xEEB050", VA = "0xEEB050", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xEEAFC8", Offset = "0xEEAFC8", VA = "0xEEAFC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B698", Offset = "0x63B698")]
		private IEnumerator SmoothActivate()
		{
			return null;
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xEEB05C", Offset = "0xEEB05C", VA = "0xEEB05C", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xEEB4C4", Offset = "0xEEB4C4", VA = "0xEEB4C4", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xEEB5D4", Offset = "0xEEB5D4", VA = "0xEEB5D4", Slot = "5")]
		public override void Resurrect()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xEEB378", Offset = "0xEEB378", VA = "0xEEB378")]
		private float GetBlendTarget(float groundHeight)
		{
			return default(float);
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xEEB268", Offset = "0xEEB268", VA = "0xEEB268")]
		private float GetGroundHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xEEB63C", Offset = "0xEEB63C", VA = "0xEEB63C", Slot = "12")]
		public override void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xEEB668", Offset = "0xEEB668", VA = "0xEEB668")]
		public BehaviourFall()
		{
		}
	}
	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62D850", Offset = "0x62D850")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62D850", Offset = "0x62D850")]
	public class BehaviourPuppet : BehaviourBase
	{
		[Serializable]
		[Token(Token = "0x200016B")]
		public enum State
		{
			[Token(Token = "0x400070C")]
			Puppet,
			[Token(Token = "0x400070D")]
			Unpinned,
			[Token(Token = "0x400070E")]
			GetUp
		}

		[Serializable]
		[Token(Token = "0x200016C")]
		public enum NormalMode
		{
			[Token(Token = "0x4000710")]
			Active,
			[Token(Token = "0x4000711")]
			Unmapped,
			[Token(Token = "0x4000712")]
			Kinematic
		}

		[Serializable]
		[Token(Token = "0x200016D")]
		public class MasterProps
		{
			[Token(Token = "0x4000713")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NormalMode normalMode;

			[Token(Token = "0x4000714")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float mappingBlendSpeed;

			[Token(Token = "0x4000715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool activateOnStaticCollisions;

			[Token(Token = "0x4000716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float activateOnImpulse;

			[Token(Token = "0x6000863")]
			[Address(RVA = "0x7D6224", Offset = "0x7D6224", VA = "0x7D6224")]
			public MasterProps()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200016E")]
		public struct MuscleProps
		{
			[Token(Token = "0x4000717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6341B4", Offset = "0x6341B4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6341B4", Offset = "0x6341B4")]
			public float unpinParents;

			[Token(Token = "0x4000718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x634208", Offset = "0x634208")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634208", Offset = "0x634208")]
			public float unpinChildren;

			[Token(Token = "0x4000719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x63425C", Offset = "0x63425C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63425C", Offset = "0x63425C")]
			public float unpinGroup;

			[Token(Token = "0x400071A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6342B0", Offset = "0x6342B0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6342B0", Offset = "0x6342B0")]
			public float minMappingWeight;

			[Token(Token = "0x400071B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634304", Offset = "0x634304")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x634304", Offset = "0x634304")]
			public float maxMappingWeight;

			[Token(Token = "0x400071C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x634358", Offset = "0x634358")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634358", Offset = "0x634358")]
			public float minPinWeight;

			[Token(Token = "0x400071D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6343AC", Offset = "0x6343AC")]
			public bool disableColliders;

			[Token(Token = "0x400071E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6343E4", Offset = "0x6343E4")]
			public float regainPinSpeed;

			[Token(Token = "0x400071F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63441C", Offset = "0x63441C")]
			public float collisionResistance;

			[Token(Token = "0x4000720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634454", Offset = "0x634454")]
			public float knockOutDistance;

			[Token(Token = "0x4000721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63448C", Offset = "0x63448C")]
			public PhysicMaterial puppetMaterial;

			[Token(Token = "0x4000722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6344C4", Offset = "0x6344C4")]
			public PhysicMaterial unpinnedMaterial;
		}

		[Serializable]
		[Token(Token = "0x200016F")]
		public struct MusclePropsGroup
		{
			[Token(Token = "0x4000723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4000724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63450C", Offset = "0x63450C")]
			public Muscle.Group[] groups;

			[Token(Token = "0x4000725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634544", Offset = "0x634544")]
			public MuscleProps props;
		}

		[Serializable]
		[Token(Token = "0x2000170")]
		public struct CollisionResistanceMultiplier
		{
			[Token(Token = "0x4000726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LayerMask layers;

			[Token(Token = "0x4000727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63457C", Offset = "0x63457C")]
			public float multiplier;

			[Token(Token = "0x4000728")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6345B4", Offset = "0x6345B4")]
			public float collisionThreshold;
		}

		[Token(Token = "0x2000171")]
		public delegate void CollisionImpulseDelegate(MuscleCollision m, float impulse);

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x633964", Offset = "0x633964")]
		public MasterProps masterProps;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63399C", Offset = "0x63399C")]
		public LayerMask groundLayers;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6339D4", Offset = "0x6339D4")]
		public LayerMask collisionLayers;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633A0C", Offset = "0x633A0C")]
		public float collisionThreshold;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Weight collisionResistance;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633A44", Offset = "0x633A44")]
		public CollisionResistanceMultiplier[] collisionResistanceMultipliers;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633A7C", Offset = "0x633A7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633A7C", Offset = "0x633A7C")]
		public int maxCollisions;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633AD0", Offset = "0x633AD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633AD0", Offset = "0x633AD0")]
		public float regainPinSpeed;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633B28", Offset = "0x633B28")]
		public float boostFalloff;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x633B60", Offset = "0x633B60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633B60", Offset = "0x633B60")]
		public MuscleProps defaults;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633BC0", Offset = "0x633BC0")]
		public MusclePropsGroup[] groupOverrides;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633BF8", Offset = "0x633BF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633BF8", Offset = "0x633BF8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x633BF8", Offset = "0x633BF8")]
		public float knockOutDistance;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633C74", Offset = "0x633C74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633C74", Offset = "0x633C74")]
		public float unpinnedMuscleWeightMlp;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633CC8", Offset = "0x633CC8")]
		public float maxRigidbodyVelocity;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633D00", Offset = "0x633D00")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633D00", Offset = "0x633D00")]
		public float pinWeightThreshold;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633D54", Offset = "0x633D54")]
		public bool unpinnedMuscleKnockout;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633D8C", Offset = "0x633D8C")]
		public bool dropProps;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633DC4", Offset = "0x633DC4")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x633DC4", Offset = "0x633DC4")]
		public bool canGetUp;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633E24", Offset = "0x633E24")]
		public float getUpDelay;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633E5C", Offset = "0x633E5C")]
		public float blendToAnimationTime;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633E94", Offset = "0x633E94")]
		public float maxGetUpVelocity;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633ECC", Offset = "0x633ECC")]
		public float minGetUpDuration;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633F04", Offset = "0x633F04")]
		public float getUpCollisionResistanceMlp;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633F3C", Offset = "0x633F3C")]
		public float getUpRegainPinSpeedMlp;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633F74", Offset = "0x633F74")]
		public float getUpKnockOutDistanceMlp;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633FAC", Offset = "0x633FAC")]
		public Vector3 getUpOffsetProne;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x633FE4", Offset = "0x633FE4")]
		public Vector3 getUpOffsetSupine;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63401C", Offset = "0x63401C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x63401C", Offset = "0x63401C")]
		public PuppetEvent onGetUpProne;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63407C", Offset = "0x63407C")]
		public PuppetEvent onGetUpSupine;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6340B4", Offset = "0x6340B4")]
		public PuppetEvent onLoseBalance;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6340EC", Offset = "0x6340EC")]
		public PuppetEvent onLoseBalanceFromPuppet;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634124", Offset = "0x634124")]
		public PuppetEvent onLoseBalanceFromGetUp;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63415C", Offset = "0x63415C")]
		public PuppetEvent onRegainBalance;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public CollisionDelegate OnCollision;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public CollisionImpulseDelegate OnCollisionImpulse;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634194", Offset = "0x634194")]
		private State <state>k__BackingField;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[HideInInspector]
		public bool canMoveTarget;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private float unpinnedTimer;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private float getUpTimer;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Vector3 hipsForward;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private Vector3 hipsUp;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private float getupAnimationBlendWeight;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private float getupAnimationBlendWeightV;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private bool getUpTargetFixed;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private NormalMode lastNormalMode;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private int collisions;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private bool eventsEnabled;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private float lastKnockOutDistance;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private float knockOutDistanceSqr;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private bool getupDisabled;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
		private bool hasCollidedSinceGetUp;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A2")]
		private bool hasBoosted;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private MuscleCollisionBroadcaster broadcaster;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Vector3 getUpPosition;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private bool dropPropFlag;

		[Token(Token = "0x170000CC")]
		public State state
		{
			[Token(Token = "0x6000832")]
			[Address(RVA = "0xEEB7B0", Offset = "0xEEB7B0", VA = "0xEEB7B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B7C0", Offset = "0x63B7C0")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000833")]
			[Address(RVA = "0xEEB7B8", Offset = "0xEEB7B8", VA = "0xEEB7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B7D0", Offset = "0x63B7D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xEEB720", Offset = "0xEEB720", VA = "0xEEB720")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63B750", Offset = "0x63B750")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xEEB768", Offset = "0xEEB768", VA = "0xEEB768")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63B788", Offset = "0x63B788")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xEEB7C0", Offset = "0xEEB7C0", VA = "0xEEB7C0", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xEEBA68", Offset = "0xEEBA68", VA = "0xEEBA68")]
		public void Reset(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xEEBADC", Offset = "0xEEBADC", VA = "0xEEBADC", Slot = "10")]
		public override void OnTeleport(Quaternion deltaRotation, Vector3 deltaPosition, Vector3 pivot, bool moveToTarget)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xEEBB78", Offset = "0xEEBB78", VA = "0xEEBB78", Slot = "17")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xEEC138", Offset = "0xEEC138", VA = "0xEEC138", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xEEC81C", Offset = "0xEEC81C", VA = "0xEEC81C", Slot = "8")]
		public override void KillStart()
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xEEC8C0", Offset = "0xEEC8C0", VA = "0xEEC8C0", Slot = "9")]
		public override void KillEnd()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xEEC8C8", Offset = "0xEEC8C8", VA = "0xEEC8C8", Slot = "5")]
		public override void Resurrect()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xEEC954", Offset = "0xEEC954", VA = "0xEEC954", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xEEC960", Offset = "0xEEC960", VA = "0xEEC960", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xEED0A4", Offset = "0xEED0A4", VA = "0xEED0A4", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xEED37C", Offset = "0xEED37C", VA = "0xEED37C")]
		private bool SetKinematic()
		{
			return default(bool);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xEED450", Offset = "0xEED450", VA = "0xEED450", Slot = "23")]
		protected override void OnReadBehaviour()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xEED234", Offset = "0xEED234", VA = "0xEED234")]
		private void BlendMuscleMapping(int muscleIndex, bool to)
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xEED738", Offset = "0xEED738", VA = "0xEED738", Slot = "13")]
		public override void OnMuscleAdded(Muscle m)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xEED77C", Offset = "0xEED77C", VA = "0xEED77C", Slot = "14")]
		public override void OnMuscleRemoved(Muscle m)
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xEED700", Offset = "0xEED700", VA = "0xEED700")]
		protected void MoveTarget(Vector3 position)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xEED7B8", Offset = "0xEED7B8", VA = "0xEED7B8")]
		protected void RotateTarget(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xEED7F0", Offset = "0xEED7F0", VA = "0xEED7F0", Slot = "29")]
		protected override void GroundTarget(LayerMask layers)
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xEED804", Offset = "0xEED804", VA = "0xEED804")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xEEDA1C", Offset = "0xEEDA1C", VA = "0xEEDA1C")]
		public void Boost(float immunity, float impulseMlp)
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xEEDAAC", Offset = "0xEEDAAC", VA = "0xEEDAAC")]
		public void Boost(int muscleIndex, float immunity, float impulseMlp)
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xEEDBC4", Offset = "0xEEDBC4", VA = "0xEEDBC4")]
		public void Boost(int muscleIndex, float immunity, float impulseMlp, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xEEDD88", Offset = "0xEEDD88", VA = "0xEEDD88")]
		public void BoostImmunity(float immunity)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xEEDAF0", Offset = "0xEEDAF0", VA = "0xEEDAF0")]
		public void BoostImmunity(int muscleIndex, float immunity)
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xEEDE00", Offset = "0xEEDE00", VA = "0xEEDE00")]
		public void BoostImmunity(int muscleIndex, float immunity, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xEEDEA4", Offset = "0xEEDEA4", VA = "0xEEDEA4")]
		public void BoostImpulseMlp(float impulseMlp)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xEEDB5C", Offset = "0xEEDB5C", VA = "0xEEDB5C")]
		public void BoostImpulseMlp(int muscleIndex, float impulseMlp)
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xEEDF14", Offset = "0xEEDF14", VA = "0xEEDF14")]
		public void BoostImpulseMlp(int muscleIndex, float impulseMlp, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xEEDFB8", Offset = "0xEEDFB8", VA = "0xEEDFB8")]
		public void Unpin()
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xEEE044", Offset = "0xEEE044", VA = "0xEEE044", Slot = "25")]
		protected override void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xEEE21C", Offset = "0xEEE21C", VA = "0xEEE21C", Slot = "26")]
		protected override void OnMuscleCollisionBehaviour(MuscleCollision m)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xEEE674", Offset = "0xEEE674", VA = "0xEEE674")]
		private float GetImpulse(MuscleCollision m, float layerThreshold)
		{
			return default(float);
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xEEE120", Offset = "0xEEE120", VA = "0xEEE120")]
		private void UnPin(int muscleIndex, float unpin)
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xEEE978", Offset = "0xEEE978", VA = "0xEEE978")]
		private void UnPinMuscle(int muscleIndex, float unpin)
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xEEE7FC", Offset = "0xEEE7FC", VA = "0xEEE7FC")]
		private bool Activate(Collision collision, float impulse)
		{
			return default(bool);
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xEEEB50", Offset = "0xEEEB50", VA = "0xEEEB50")]
		public bool IsProne()
		{
			return default(bool);
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xEEDCE4", Offset = "0xEEDCE4", VA = "0xEEDCE4")]
		private float GetFalloff(int i, int muscleIndex, float falloffParents, float falloffChildren)
		{
			return default(float);
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xEEE894", Offset = "0xEEE894", VA = "0xEEE894")]
		private float GetFalloff(int i, int muscleIndex, float falloffParents, float falloffChildren, float falloffGroup)
		{
			return default(float);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xEEEC10", Offset = "0xEEEC10", VA = "0xEEEC10")]
		private bool InGroup(Muscle.Group group1, Muscle.Group group2)
		{
			return default(bool);
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xEECFD8", Offset = "0xEECFD8", VA = "0xEECFD8")]
		private MuscleProps GetProps(Muscle.Group group)
		{
			return default(MuscleProps);
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xEEC1D0", Offset = "0xEEC1D0", VA = "0xEEC1D0")]
		public void SetState(State newState)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xEEECE8", Offset = "0xEEECE8", VA = "0xEEECE8")]
		public void SetColliders(bool unpinned)
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xEEB8A0", Offset = "0xEEB8A0", VA = "0xEEB8A0")]
		public void SetColliders(Muscle m, bool unpinned)
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xEEED78", Offset = "0xEEED78", VA = "0xEEED78", Slot = "11")]
		public override void OnMuscleDisconnected(Muscle m)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xEEED80", Offset = "0xEEED80", VA = "0xEEED80", Slot = "12")]
		public override void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xEEEE20", Offset = "0xEEEE20", VA = "0xEEEE20")]
		public BehaviourPuppet()
		{
		}
	}
	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62D8B0", Offset = "0x62D8B0")]
	public class BehaviourTemplate : BehaviourBase
	{
		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SubBehaviourCOM centerOfMass;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public LayerMask groundLayers;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public PuppetEvent onLoseBalance;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float loseBalanceAngle;

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xCB2A84", Offset = "0xCB2A84", VA = "0xCB2A84", Slot = "17")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xCB2AAC", Offset = "0xCB2AAC", VA = "0xCB2AAC", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xCB2AB0", Offset = "0xCB2AB0", VA = "0xCB2AB0", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xCB2AB4", Offset = "0xCB2AB4", VA = "0xCB2AB4", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xCB2AB8", Offset = "0xCB2AB8", VA = "0xCB2AB8", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xCB2AFC", Offset = "0xCB2AFC", VA = "0xCB2AFC", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xCB2B00", Offset = "0xCB2B00", VA = "0xCB2B00", Slot = "25")]
		protected override void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xCB2B08", Offset = "0xCB2B08", VA = "0xCB2B08", Slot = "26")]
		protected override void OnMuscleCollisionBehaviour(MuscleCollision m)
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xCB2B10", Offset = "0xCB2B10", VA = "0xCB2B10")]
		public BehaviourTemplate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000173")]
	public class SubBehaviourBalancer : SubBehaviourBase
	{
		[Serializable]
		[Token(Token = "0x2000174")]
		public class Settings
		{
			[Token(Token = "0x400073A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63464C", Offset = "0x63464C")]
			public float damperForSpring;

			[Token(Token = "0x400073B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634684", Offset = "0x634684")]
			public float maxForceMlp;

			[Token(Token = "0x400073C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6346BC", Offset = "0x6346BC")]
			public float IMlp;

			[Token(Token = "0x400073D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6346F4", Offset = "0x6346F4")]
			public float velocityF;

			[Token(Token = "0x400073E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63472C", Offset = "0x63472C")]
			public Vector3 copOffset;

			[Token(Token = "0x400073F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634764", Offset = "0x634764")]
			public float torqueMlp;

			[Token(Token = "0x4000740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63479C", Offset = "0x63479C")]
			public float maxTorqueMag;

			[Token(Token = "0x6000880")]
			[Address(RVA = "0xA7AF38", Offset = "0xA7AF38", VA = "0xA7AF38")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6345EC", Offset = "0x6345EC")]
		private ConfigurableJoint <joint>k__BackingField;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6345FC", Offset = "0x6345FC")]
		private Vector3 <dir>k__BackingField;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63460C", Offset = "0x63460C")]
		private Vector3 <dirVel>k__BackingField;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63461C", Offset = "0x63461C")]
		private Vector3 <cop>k__BackingField;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63462C", Offset = "0x63462C")]
		private Vector3 <com>k__BackingField;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63463C", Offset = "0x63463C")]
		private Vector3 <comV>k__BackingField;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Settings settings;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody[] rigidbodies;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform[] copPoints;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PressureSensor pressureSensor;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody Ibody;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 I;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion toJointSpace;

		[Token(Token = "0x170000CD")]
		public ConfigurableJoint joint
		{
			[Token(Token = "0x6000871")]
			[Address(RVA = "0xC74948", Offset = "0xC74948", VA = "0xC74948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B7E0", Offset = "0x63B7E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000872")]
			[Address(RVA = "0xC74950", Offset = "0xC74950", VA = "0xC74950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B7F0", Offset = "0x63B7F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public Vector3 dir
		{
			[Token(Token = "0x6000873")]
			[Address(RVA = "0xC74958", Offset = "0xC74958", VA = "0xC74958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B800", Offset = "0x63B800")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000874")]
			[Address(RVA = "0xC74964", Offset = "0xC74964", VA = "0xC74964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B810", Offset = "0x63B810")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public Vector3 dirVel
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0xC74970", Offset = "0xC74970", VA = "0xC74970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B820", Offset = "0x63B820")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000876")]
			[Address(RVA = "0xC7497C", Offset = "0xC7497C", VA = "0xC7497C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B830", Offset = "0x63B830")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public Vector3 cop
		{
			[Token(Token = "0x6000877")]
			[Address(RVA = "0xC74988", Offset = "0xC74988", VA = "0xC74988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B840", Offset = "0x63B840")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000878")]
			[Address(RVA = "0xC74994", Offset = "0xC74994", VA = "0xC74994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B850", Offset = "0x63B850")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public Vector3 com
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0xC749A0", Offset = "0xC749A0", VA = "0xC749A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B860", Offset = "0x63B860")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600087A")]
			[Address(RVA = "0xC749AC", Offset = "0xC749AC", VA = "0xC749AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B870", Offset = "0x63B870")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public Vector3 comV
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0xC749B8", Offset = "0xC749B8", VA = "0xC749B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B880", Offset = "0x63B880")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600087C")]
			[Address(RVA = "0xC749C4", Offset = "0xC749C4", VA = "0xC749C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B890", Offset = "0x63B890")]
			private set
			{
			}
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xC749D0", Offset = "0xC749D0", VA = "0xC749D0")]
		public void Initiate(BehaviourBase behaviour, Settings settings, Rigidbody Ibody, Rigidbody[] rigidbodies, ConfigurableJoint joint, Transform[] copPoints, PressureSensor pressureSensor)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xC74B50", Offset = "0xC74B50", VA = "0xC74B50")]
		private void Solve()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xC74F70", Offset = "0xC74F70", VA = "0xC74F70")]
		public SubBehaviourBalancer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000175")]
	public abstract class SubBehaviourBase
	{
		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected BehaviourBase behaviour;

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xC75028", Offset = "0xC75028", VA = "0xC75028")]
		protected static Vector2 XZ(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xC75030", Offset = "0xC75030", VA = "0xC75030")]
		protected static Vector3 XYZ(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xC7503C", Offset = "0xC7503C", VA = "0xC7503C")]
		protected static Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xC75044", Offset = "0xC75044", VA = "0xC75044")]
		protected static Vector3 SetY(Vector3 v, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xC75020", Offset = "0xC75020", VA = "0xC75020")]
		protected SubBehaviourBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000176")]
	public class SubBehaviourCOM : SubBehaviourBase
	{
		[Serializable]
		[Token(Token = "0x2000177")]
		public enum Mode
		{
			[Token(Token = "0x4000755")]
			FeetCentroid,
			[Token(Token = "0x4000756")]
			CenterOfPressure
		}

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode mode;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float velocityDamper;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float velocityLerpSpeed;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float velocityMax;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float centerOfPressureSpeed;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6347D4", Offset = "0x6347D4")]
		private Vector3 <position>k__BackingField;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6347E4", Offset = "0x6347E4")]
		private Vector3 <direction>k__BackingField;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6347F4", Offset = "0x6347F4")]
		private float <angle>k__BackingField;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634804", Offset = "0x634804")]
		private Vector3 <velocity>k__BackingField;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634814", Offset = "0x634814")]
		private Vector3 <centerOfPressure>k__BackingField;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634824", Offset = "0x634824")]
		private Quaternion <rotation>k__BackingField;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634834", Offset = "0x634834")]
		private Quaternion <inverseRotation>k__BackingField;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634844", Offset = "0x634844")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634854", Offset = "0x634854")]
		private float <lastGroundedTime>k__BackingField;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool[] groundContacts;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3[] groundContactPoints;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private LayerMask groundLayers;

		[Token(Token = "0x170000D3")]
		public Vector3 position
		{
			[Token(Token = "0x6000886")]
			[Address(RVA = "0xC7504C", Offset = "0xC7504C", VA = "0xC7504C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B8A0", Offset = "0x63B8A0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000887")]
			[Address(RVA = "0xC75058", Offset = "0xC75058", VA = "0xC75058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B8B0", Offset = "0x63B8B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public Vector3 direction
		{
			[Token(Token = "0x6000888")]
			[Address(RVA = "0xC75064", Offset = "0xC75064", VA = "0xC75064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B8C0", Offset = "0x63B8C0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000889")]
			[Address(RVA = "0xC75070", Offset = "0xC75070", VA = "0xC75070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B8D0", Offset = "0x63B8D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public float angle
		{
			[Token(Token = "0x600088A")]
			[Address(RVA = "0xC7507C", Offset = "0xC7507C", VA = "0xC7507C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B8E0", Offset = "0x63B8E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600088B")]
			[Address(RVA = "0xC75084", Offset = "0xC75084", VA = "0xC75084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B8F0", Offset = "0x63B8F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public Vector3 velocity
		{
			[Token(Token = "0x600088C")]
			[Address(RVA = "0xC7508C", Offset = "0xC7508C", VA = "0xC7508C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B900", Offset = "0x63B900")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600088D")]
			[Address(RVA = "0xC75098", Offset = "0xC75098", VA = "0xC75098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B910", Offset = "0x63B910")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public Vector3 centerOfPressure
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0xC750A4", Offset = "0xC750A4", VA = "0xC750A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B920", Offset = "0x63B920")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600088F")]
			[Address(RVA = "0xC750B0", Offset = "0xC750B0", VA = "0xC750B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B930", Offset = "0x63B930")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0xC750BC", Offset = "0xC750BC", VA = "0xC750BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B940", Offset = "0x63B940")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000891")]
			[Address(RVA = "0xC750C8", Offset = "0xC750C8", VA = "0xC750C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B950", Offset = "0x63B950")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public Quaternion inverseRotation
		{
			[Token(Token = "0x6000892")]
			[Address(RVA = "0xC750D4", Offset = "0xC750D4", VA = "0xC750D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B960", Offset = "0x63B960")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000893")]
			[Address(RVA = "0xC750E0", Offset = "0xC750E0", VA = "0xC750E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B970", Offset = "0x63B970")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public bool isGrounded
		{
			[Token(Token = "0x6000894")]
			[Address(RVA = "0xC750EC", Offset = "0xC750EC", VA = "0xC750EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B980", Offset = "0x63B980")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000895")]
			[Address(RVA = "0xC750F4", Offset = "0xC750F4", VA = "0xC750F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B990", Offset = "0x63B990")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public float lastGroundedTime
		{
			[Token(Token = "0x6000896")]
			[Address(RVA = "0xC75100", Offset = "0xC75100", VA = "0xC75100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B9A0", Offset = "0x63B9A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000897")]
			[Address(RVA = "0xC75108", Offset = "0xC75108", VA = "0xC75108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B9B0", Offset = "0x63B9B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xC75110", Offset = "0xC75110", VA = "0xC75110")]
		public void Initiate(BehaviourBase behaviour, LayerMask groundLayers)
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xC754D4", Offset = "0xC754D4", VA = "0xC754D4")]
		private void OnHierarchyChanged()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xC7557C", Offset = "0xC7557C", VA = "0xC7557C")]
		private void OnPreMuscleCollision(MuscleCollision c)
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xC75758", Offset = "0xC75758", VA = "0xC75758")]
		private void OnPreMuscleCollisionExit(MuscleCollision c)
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xC75818", Offset = "0xC75818", VA = "0xC75818")]
		private void OnPreActivate()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xC75AC4", Offset = "0xC75AC4", VA = "0xC75AC4")]
		private void OnPreLateUpdate()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xC75FE4", Offset = "0xC75FE4", VA = "0xC75FE4")]
		private void OnPreDeactivate()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xC75674", Offset = "0xC75674", VA = "0xC75674")]
		private Vector3 GetCollisionCOP(Collision collision)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xC75D2C", Offset = "0xC75D2C", VA = "0xC75D2C")]
		private bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xC758B8", Offset = "0xC758B8", VA = "0xC758B8")]
		private Vector3 GetCenterOfMass()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xC75E58", Offset = "0xC75E58", VA = "0xC75E58")]
		private Vector3 GetCenterOfMassVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xC76010", Offset = "0xC76010", VA = "0xC76010")]
		private Vector3 GetMomentum()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xC75D90", Offset = "0xC75D90", VA = "0xC75D90")]
		private Vector3 GetCenterOfPressure()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xC759DC", Offset = "0xC759DC", VA = "0xC759DC")]
		private Vector3 GetFeetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xC76134", Offset = "0xC76134", VA = "0xC76134")]
		public SubBehaviourCOM()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000178")]
	public class Booster
	{
		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634884", Offset = "0x634884")]
		public bool fullBody;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6348BC", Offset = "0x6348BC")]
		public ConfigurableJoint[] muscles;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6348F4", Offset = "0x6348F4")]
		public Muscle.Group[] groups;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63492C", Offset = "0x63492C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x63492C", Offset = "0x63492C")]
		public float immunity;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634980", Offset = "0x634980")]
		public float impulseMlp;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6349B8", Offset = "0x6349B8")]
		public float boostParents;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6349F0", Offset = "0x6349F0")]
		public float boostChildren;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634A28", Offset = "0x634A28")]
		public float delay;

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xCC9D58", Offset = "0xCC9D58", VA = "0xCC9D58")]
		public void Boost(BehaviourPuppet puppet)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xCC9F6C", Offset = "0xCC9F6C", VA = "0xCC9F6C")]
		public Booster()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class JointBreakBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public int muscleIndex;

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x8F6CDC", Offset = "0x8F6CDC", VA = "0x8F6CDC")]
		private void OnJointBreak()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x8F6D60", Offset = "0x8F6D60", VA = "0x8F6D60")]
		public JointBreakBroadcaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017A")]
	public class Muscle
	{
		[Serializable]
		[Token(Token = "0x200017B")]
		public enum Group
		{
			[Token(Token = "0x40007AE")]
			Hips,
			[Token(Token = "0x40007AF")]
			Spine,
			[Token(Token = "0x40007B0")]
			Head,
			[Token(Token = "0x40007B1")]
			Arm,
			[Token(Token = "0x40007B2")]
			Hand,
			[Token(Token = "0x40007B3")]
			Leg,
			[Token(Token = "0x40007B4")]
			Foot,
			[Token(Token = "0x40007B5")]
			Tail,
			[Token(Token = "0x40007B6")]
			Prop
		}

		[Serializable]
		[Token(Token = "0x200017C")]
		public class InternalCollisionIgnoreSettings
		{
			[Token(Token = "0x40007B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634D70", Offset = "0x634D70")]
			public bool ignoreAll;

			[Token(Token = "0x40007B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634DA8", Offset = "0x634DA8")]
			public ConfigurableJoint[] muscles;

			[Token(Token = "0x40007B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634DE0", Offset = "0x634DE0")]
			public Group[] groups;

			[Token(Token = "0x60008ED")]
			[Address(RVA = "0x8013D4", Offset = "0x8013D4", VA = "0x8013D4")]
			public InternalCollisionIgnoreSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200017D")]
		public class Props
		{
			[Token(Token = "0x40007BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634E18", Offset = "0x634E18")]
			public Group group;

			[Token(Token = "0x40007BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634E50", Offset = "0x634E50")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x634E50", Offset = "0x634E50")]
			public float mappingWeight;

			[Token(Token = "0x40007BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634EA4", Offset = "0x634EA4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x634EA4", Offset = "0x634EA4")]
			public float pinWeight;

			[Token(Token = "0x40007BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634EF8", Offset = "0x634EF8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x634EF8", Offset = "0x634EF8")]
			public float muscleWeight;

			[Token(Token = "0x40007BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634F4C", Offset = "0x634F4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x634F4C", Offset = "0x634F4C")]
			public float muscleDamper;

			[Token(Token = "0x40007BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634FA0", Offset = "0x634FA0")]
			public bool mapPosition;

			[Token(Token = "0x40007C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634FD8", Offset = "0x634FD8")]
			public InternalCollisionIgnoreSettings internalCollisionIgnores;

			[Token(Token = "0x40007C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635010", Offset = "0x635010")]
			public Transform[] animatedTargetChildren;

			[Token(Token = "0x60008EE")]
			[Address(RVA = "0x801474", Offset = "0x801474", VA = "0x801474")]
			public Props()
			{
			}

			[Token(Token = "0x60008EF")]
			[Address(RVA = "0x801538", Offset = "0x801538", VA = "0x801538")]
			public Props(float pinWeight, float muscleWeight, float mappingWeight, float muscleDamper, bool mapPosition, Group group = Group.Hips)
			{
			}

			[Token(Token = "0x60008F0")]
			[Address(RVA = "0x80162C", Offset = "0x80162C", VA = "0x80162C")]
			public void Clamp()
			{
			}
		}

		[Token(Token = "0x200017E")]
		public struct State
		{
			[Token(Token = "0x40007C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float mappingWeightMlp;

			[Token(Token = "0x40007C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float pinWeightMlp;

			[Token(Token = "0x40007C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float muscleWeightMlp;

			[Token(Token = "0x40007C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float maxForceMlp;

			[Token(Token = "0x40007C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float muscleDamperMlp;

			[Token(Token = "0x40007C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float muscleDamperAdd;

			[Token(Token = "0x40007C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float immunity;

			[Token(Token = "0x40007C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float impulseMlp;

			[Token(Token = "0x40007CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 velocity;

			[Token(Token = "0x40007CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 angularVelocity;

			[Token(Token = "0x40007CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isDisconnected;

			[Token(Token = "0x40007CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool resetFlag;

			[Token(Token = "0x170000EE")]
			public static State Default
			{
				[Token(Token = "0x60008F1")]
				[Address(RVA = "0x8016C0", Offset = "0x8016C0", VA = "0x8016C0")]
				get
				{
					return default(State);
				}
			}

			[Token(Token = "0x60008F2")]
			[Address(RVA = "0x8016E0", Offset = "0x8016E0", VA = "0x8016E0")]
			public void Clamp()
			{
			}
		}

		[Token(Token = "0x200017F")]
		public class TargetChild
		{
			[Token(Token = "0x40007CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x40007CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x40007D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x60008F3")]
			[Address(RVA = "0x801788", Offset = "0x801788", VA = "0x801788")]
			public TargetChild(Transform t)
			{
			}

			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x801804", Offset = "0x801804", VA = "0x801804")]
			public void Map()
			{
			}
		}

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConfigurableJoint joint;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Props props;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public State state;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public int[] parentIndexes;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public int[] childIndexes;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool[] childFlags;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public int[] kinshipDegrees;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public MuscleCollisionBroadcaster broadcaster;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public JointBreakBroadcaster jointBreakBroadcaster;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3 positionOffset;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634B50", Offset = "0x634B50")]
		private Transform <transform>k__BackingField;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634B60", Offset = "0x634B60")]
		private Rigidbody <rigidbody>k__BackingField;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634B70", Offset = "0x634B70")]
		private Transform <connectedBodyTarget>k__BackingField;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634B80", Offset = "0x634B80")]
		private Vector3 <targetAnimatedPosition>k__BackingField;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634B90", Offset = "0x634B90")]
		private Quaternion <targetAnimatedWorldRotation>k__BackingField;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634BA0", Offset = "0x634BA0")]
		private Vector3 <targetVelocity>k__BackingField;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634BB0", Offset = "0x634BB0")]
		private Rigidbody <additionalRigidbody>k__BackingField;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		[SerializeField]
		public ConfigurableJoint additionalPin;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		[SerializeField]
		public Transform additionalPinTarget;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		[SerializeField]
		public float additionalPinWeight;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[HideInInspector]
		public Vector3 mappedVelocity;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Vector3 mappedAngularVelocity;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[HideInInspector]
		public bool isPropMuscle;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		[SerializeField]
		public int index;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634CD0", Offset = "0x634CD0")]
		private Quaternion <targetRotationRelative>k__BackingField;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634CE0", Offset = "0x634CE0")]
		private Rigidbody <rebuildConnectedBody>k__BackingField;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634CF0", Offset = "0x634CF0")]
		private Transform <rebuildTargetParent>k__BackingField;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634D00", Offset = "0x634D00")]
		private Vector3 <defaultTargetPosRelToMuscle>k__BackingField;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634D10", Offset = "0x634D10")]
		private Quaternion <defaultTargetRotRelToMuscle>k__BackingField;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634D20", Offset = "0x634D20")]
		private Quaternion <defaultMuscleRotRelToTarget>k__BackingField;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Transform rebuildParent;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Vector3 rebuildPosition;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Quaternion rebuildRotation;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 rebuildTargetPosition;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion rebuildTargetRotation;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private ConfigurableJointMotion rebuildAngularXMotion;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private ConfigurableJointMotion rebuildAngularYMotion;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private ConfigurableJointMotion rebuildAngularZMotion;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[HideInInspector]
		public Vector3 targetMappedPosition;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public Quaternion targetMappedRotation;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public Vector3 targetSampledPosition;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[HideInInspector]
		public Quaternion targetSampledRotation;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private JointDrive slerpDrive;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float lastJointDriveRotationWeight;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float lastRotationDamper;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 defaultTargetLocalPosition;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 lastMappedPosition;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Quaternion localRotationConvert;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Quaternion toParentSpace;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private Quaternion toJointSpaceInverse;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private Quaternion toJointSpaceDefault;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private Quaternion targetAnimatedRotation;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private Quaternion rotationRelativeToTarget;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private Quaternion lastMappedRotation;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Transform targetParent;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Transform connectedBodyTransform;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private ConfigurableJointMotion angularXMotionDefault;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private ConfigurableJointMotion angularYMotionDefault;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private ConfigurableJointMotion angularZMotionDefault;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private bool directTargetParent;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
		private bool initiated;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Collider[] _colliders;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private float lastReadTime;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private float lastWriteTime;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private bool[] disabledColliders;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private TargetChild[] targetChildren;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Vector3 additionalTargetVelocity;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private Vector3 targetAnimatedCenterOfMass;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Vector3 additionalPinTargetAnimatedCenterOfMass;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private Quaternion defaultTargetRotRelToMuscleInverse;

		[Token(Token = "0x170000DC")]
		public Transform transform
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0xBB1EB4", Offset = "0xBB1EB4", VA = "0xBB1EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B9C0", Offset = "0x63B9C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0xBB1EBC", Offset = "0xBB1EBC", VA = "0xBB1EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B9D0", Offset = "0x63B9D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public Rigidbody rigidbody
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0xBB1EC4", Offset = "0xBB1EC4", VA = "0xBB1EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B9E0", Offset = "0x63B9E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0xBB1ECC", Offset = "0xBB1ECC", VA = "0xBB1ECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B9F0", Offset = "0x63B9F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public Transform connectedBodyTarget
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0xBB1ED4", Offset = "0xBB1ED4", VA = "0xBB1ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BA00", Offset = "0x63BA00")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0xBB1EDC", Offset = "0xBB1EDC", VA = "0xBB1EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BA10", Offset = "0x63BA10")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public Vector3 targetAnimatedPosition
		{
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0xBB1EE4", Offset = "0xBB1EE4", VA = "0xBB1EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BA20", Offset = "0x63BA20")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0xBB1EF0", Offset = "0xBB1EF0", VA = "0xBB1EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BA30", Offset = "0x63BA30")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public Quaternion targetAnimatedWorldRotation
		{
			[Token(Token = "0x60008B3")]
			[Address(RVA = "0xBB1EFC", Offset = "0xBB1EFC", VA = "0xBB1EFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BA40", Offset = "0x63BA40")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60008B4")]
			[Address(RVA = "0xBB1F08", Offset = "0xBB1F08", VA = "0xBB1F08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BA50", Offset = "0x63BA50")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public Collider[] colliders
		{
			[Token(Token = "0x60008B5")]
			[Address(RVA = "0xBB1F14", Offset = "0xBB1F14", VA = "0xBB1F14")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B6")]
			[Address(RVA = "0xBB1F1C", Offset = "0xBB1F1C", VA = "0xBB1F1C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public Vector3 targetVelocity
		{
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0xBB1F2C", Offset = "0xBB1F2C", VA = "0xBB1F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BA60", Offset = "0x63BA60")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60008B8")]
			[Address(RVA = "0xBB1F38", Offset = "0xBB1F38", VA = "0xBB1F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BA70", Offset = "0x63BA70")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public Rigidbody additionalRigidbody
		{
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0xBB1F44", Offset = "0xBB1F44", VA = "0xBB1F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BA80", Offset = "0x63BA80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0xBB1F4C", Offset = "0xBB1F4C", VA = "0xBB1F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BA90", Offset = "0x63BA90")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public Quaternion targetRotationRelative
		{
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0xBB1F54", Offset = "0xBB1F54", VA = "0xBB1F54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BAA0", Offset = "0x63BAA0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60008BC")]
			[Address(RVA = "0xBB1F68", Offset = "0xBB1F68", VA = "0xBB1F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BAB0", Offset = "0x63BAB0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public Rigidbody rebuildConnectedBody
		{
			[Token(Token = "0x60008BE")]
			[Address(RVA = "0xBB2188", Offset = "0xBB2188", VA = "0xBB2188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BAC0", Offset = "0x63BAC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0xBB2190", Offset = "0xBB2190", VA = "0xBB2190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BAD0", Offset = "0x63BAD0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public Transform rebuildTargetParent
		{
			[Token(Token = "0x60008C0")]
			[Address(RVA = "0xBB21A0", Offset = "0xBB21A0", VA = "0xBB21A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BAE0", Offset = "0x63BAE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0xBB21A8", Offset = "0xBB21A8", VA = "0xBB21A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BAF0", Offset = "0x63BAF0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public Vector3 defaultTargetPosRelToMuscle
		{
			[Token(Token = "0x60008C2")]
			[Address(RVA = "0xBB21B8", Offset = "0xBB21B8", VA = "0xBB21B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB00", Offset = "0x63BB00")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0xBB21C8", Offset = "0xBB21C8", VA = "0xBB21C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB10", Offset = "0x63BB10")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public Quaternion defaultTargetRotRelToMuscle
		{
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0xBB21D8", Offset = "0xBB21D8", VA = "0xBB21D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB20", Offset = "0x63BB20")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0xBB21EC", Offset = "0xBB21EC", VA = "0xBB21EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB30", Offset = "0x63BB30")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public Quaternion defaultMuscleRotRelToTarget
		{
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0xBB2200", Offset = "0xBB2200", VA = "0xBB2200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB40", Offset = "0x63BB40")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0xBB2214", Offset = "0xBB2214", VA = "0xBB2214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB50", Offset = "0x63BB50")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		private Quaternion localRotation
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0xBB3760", Offset = "0xBB3760", VA = "0xBB3760")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170000EB")]
		private Quaternion parentRotation
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0xBB3880", Offset = "0xBB3880", VA = "0xBB3880")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170000EC")]
		private Quaternion targetParentRotation
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0xBB37E0", Offset = "0xBB37E0", VA = "0xBB37E0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170000ED")]
		private Quaternion targetLocalRotation
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0xBB39AC", Offset = "0xBB39AC", VA = "0xBB39AC")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xBB1F7C", Offset = "0xBB1F7C", VA = "0xBB1F7C")]
		public bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xBB2228", Offset = "0xBB2228", VA = "0xBB2228")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xBB2388", Offset = "0xBB2388", VA = "0xBB2388", Slot = "4")]
		public virtual void Initiate(Muscle[] colleagues)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xBB3414", Offset = "0xBB3414", VA = "0xBB3414")]
		public void InitiateAdditionalPin()
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xBB3634", Offset = "0xBB3634", VA = "0xBB3634")]
		public void UpdateColliders()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xBB4024", Offset = "0xBB4024", VA = "0xBB4024")]
		public void DisableColliders()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xBB412C", Offset = "0xBB412C", VA = "0xBB412C")]
		public void EnableColliders()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xBB3CB4", Offset = "0xBB3CB4", VA = "0xBB3CB4")]
		private void AddColliders(Transform t, Collider[] C, bool includeMeshColliders)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xBB3F14", Offset = "0xBB3F14", VA = "0xBB3F14")]
		private void AddCompoundColliders(Transform t, Collider[] colliders)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xBB41D8", Offset = "0xBB41D8", VA = "0xBB41D8")]
		public void IgnoreInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xBB43AC", Offset = "0xBB43AC", VA = "0xBB43AC")]
		public void ResetInternalCollisions(Muscle m, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xBB45A8", Offset = "0xBB45A8", VA = "0xBB45A8")]
		private bool ForceIgnore(Muscle otherMuscle)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xBB4808", Offset = "0xBB4808", VA = "0xBB4808")]
		public void IgnoreAngularLimits(bool ignore)
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xBB48A8", Offset = "0xBB48A8", VA = "0xBB48A8")]
		public void FixTargetTransforms()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xBB4914", Offset = "0xBB4914", VA = "0xBB4914")]
		public void Reset()
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xBB4ACC", Offset = "0xBB4ACC", VA = "0xBB4ACC")]
		public void MoveToTarget()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xBB3564", Offset = "0xBB3564", VA = "0xBB3564")]
		public void SetKinematic(bool to)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xBB3A44", Offset = "0xBB3A44", VA = "0xBB3A44")]
		public void Read()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xBB4C58", Offset = "0xBB4C58", VA = "0xBB4C58")]
		public void ClearVelocities()
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xBB4DE0", Offset = "0xBB4DE0", VA = "0xBB4DE0")]
		public void UpdateAnchor(bool supportTranslationAnimation)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xBB5048", Offset = "0xBB5048", VA = "0xBB5048", Slot = "5")]
		public virtual void Update(float pinWeightMaster, float muscleWeightMaster, float muscleSpring, float muscleDamper, float pinPow, float pinDistanceFalloff, bool rotationTargetChanged, bool angularPinning, float deltaTime)
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xBB55C4", Offset = "0xBB55C4", VA = "0xBB55C4")]
		public void StoreTargetMappedPosition()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xBB5600", Offset = "0xBB5600", VA = "0xBB5600")]
		public void StoreTargetMappedRotation()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xBB5640", Offset = "0xBB5640", VA = "0xBB5640")]
		public void Map(float mappingWeightMaster)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xBB59EC", Offset = "0xBB59EC", VA = "0xBB59EC")]
		public void ResetTargetLocalPosition()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xBB5A1C", Offset = "0xBB5A1C", VA = "0xBB5A1C")]
		public void CalculateMappedVelocity()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xBB5B88", Offset = "0xBB5B88", VA = "0xBB5B88")]
		public void MapDisconnected()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xBB5170", Offset = "0xBB5170", VA = "0xBB5170")]
		private void Pin(float pinWeightMaster, float pinPow, float pinDistanceFalloff, bool angularPinning, float deltaTime)
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xBB5C74", Offset = "0xBB5C74", VA = "0xBB5C74")]
		private void Pin(Rigidbody r, Vector3 posOffset, Vector3 targetVel, float w, float pinDistanceFalloff, float deltaTime)
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xBB5404", Offset = "0xBB5404", VA = "0xBB5404")]
		private void MuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xBB5E08", Offset = "0xBB5E08", VA = "0xBB5E08")]
		public void SetMuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xBB5D88", Offset = "0xBB5D88", VA = "0xBB5D88")]
		private Quaternion LocalToJointSpace(Quaternion localRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xBB4FE4", Offset = "0xBB4FE4", VA = "0xBB4FE4")]
		private static Vector3 InverseTransformPointUnscaled(Vector3 position, Quaternion rotation, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xBB5F74", Offset = "0xBB5F74", VA = "0xBB5F74")]
		public Muscle()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public struct MuscleCollision
	{
		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int muscleIndex;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collision collision;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isStay;

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x12E4338", Offset = "0x12E4338", VA = "0x12E4338")]
		public MuscleCollision(int muscleIndex, Collision collision, bool isStay = false)
		{
		}
	}
	[Token(Token = "0x2000181")]
	public struct MuscleHit
	{
		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int muscleIndex;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float unPin;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 force;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x12E445C", Offset = "0x12E445C", VA = "0x12E445C")]
		public MuscleHit(int muscleIndex, float unPin, Vector3 force, Vector3 position)
		{
		}
	}
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62D8E8", Offset = "0x62D8E8")]
	public class MuscleCollisionBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public int muscleIndex;

		[Token(Token = "0x40007DA")]
		private const string onMuscleHit = "OnMuscleHit";

		[Token(Token = "0x40007DB")]
		private const string onMuscleCollision = "OnMuscleCollision";

		[Token(Token = "0x40007DC")]
		private const string onMuscleCollisionExit = "OnMuscleCollisionExit";

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MuscleCollisionBroadcaster otherBroadcaster;

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x12E4370", Offset = "0x12E4370", VA = "0x12E4370")]
		public void Hit(float unPin, Vector3 force, Vector3 position)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x12E4474", Offset = "0x12E4474", VA = "0x12E4474")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x12E4654", Offset = "0x12E4654", VA = "0x12E4654")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x12E48E8", Offset = "0x12E48E8", VA = "0x12E48E8")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x12E4B70", Offset = "0x12E4B70", VA = "0x12E4B70")]
		public MuscleCollisionBroadcaster()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public static class PhysXTools
	{
		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x972FA4", Offset = "0x972FA4", VA = "0x972FA4")]
		public static void Predict(Rigidbody r, int steps, [Out] Vector3 position, [Out] Quaternion rotation)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x973040", Offset = "0x973040", VA = "0x973040")]
		public static void Predict(Rigidbody r, int steps, [Out] Vector3 position, [Out] Quaternion rotation, Vector3 gravity, float drag, float angularDrag)
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x973140", Offset = "0x973140", VA = "0x973140")]
		public static void Predict(Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity, Vector3 gravity, float drag, float angularDrag)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x9732D4", Offset = "0x9732D4", VA = "0x9732D4")]
		public static Vector3 GetCenterOfMass(PuppetMaster puppet)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x973464", Offset = "0x973464", VA = "0x973464")]
		public static Vector3 GetCenterOfMass(Rigidbody[] rigidbodies)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x9735B0", Offset = "0x9735B0", VA = "0x9735B0")]
		public static Vector3 GetCenterOfMassVelocity(Rigidbody[] rigidbodies)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x9736FC", Offset = "0x9736FC", VA = "0x9736FC")]
		public static void DivByInertia(Vector3 v, Quaternion rotation, Vector3 inertiaTensor)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x9737A8", Offset = "0x9737A8", VA = "0x9737A8")]
		public static void ScaleByInertia(Vector3 v, Quaternion rotation, Vector3 inertiaTensor)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x973844", Offset = "0x973844", VA = "0x973844")]
		public static Vector3 GetFromToAcceleration(Vector3 fromV, Vector3 toV)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x973910", Offset = "0x973910", VA = "0x973910")]
		public static Vector3 GetAngularAcceleration(Quaternion fromR, Quaternion toR)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x973B54", Offset = "0x973B54", VA = "0x973B54")]
		public static void AddFromToTorque(Rigidbody r, Quaternion toR, ForceMode forceMode)
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x973D28", Offset = "0x973D28", VA = "0x973D28")]
		public static void AddFromToTorque(Rigidbody r, Vector3 fromV, Vector3 toV, ForceMode forceMode)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x973ED4", Offset = "0x973ED4", VA = "0x973ED4")]
		public static void AddFromToForce(Rigidbody r, Vector3 fromV, Vector3 toV, ForceMode forceMode)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x974034", Offset = "0x974034", VA = "0x974034")]
		public static Vector3 GetLinearAcceleration(Vector3 fromPoint, Vector3 toPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x974078", Offset = "0x974078", VA = "0x974078")]
		public static Quaternion ToJointSpace(ConfigurableJoint joint)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x974140", Offset = "0x974140", VA = "0x974140")]
		public static Vector3 CalculateInertiaTensorCuboid(Vector3 size, float mass)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x973798", Offset = "0x973798", VA = "0x973798")]
		public static Vector3 Div(Vector3 v, Vector3 v2)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000184")]
	public class PressureSensor : MonoBehaviour
	{
		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool visualize;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask layers;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6350B8", Offset = "0x6350B8")]
		private Vector3 <center>k__BackingField;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6350C8", Offset = "0x6350C8")]
		private bool <inContact>k__BackingField;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6350D8", Offset = "0x6350D8")]
		private Vector3 <bottom>k__BackingField;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6350E8", Offset = "0x6350E8")]
		private Rigidbody <r>k__BackingField;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool fixedFrame;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 P;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int count;

		[Token(Token = "0x170000EF")]
		public Vector3 center
		{
			[Token(Token = "0x600090D")]
			[Address(RVA = "0x9780E4", Offset = "0x9780E4", VA = "0x9780E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB60", Offset = "0x63BB60")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x9780F0", Offset = "0x9780F0", VA = "0x9780F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB70", Offset = "0x63BB70")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public bool inContact
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0x9780FC", Offset = "0x9780FC", VA = "0x9780FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB80", Offset = "0x63BB80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x978104", Offset = "0x978104", VA = "0x978104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB90", Offset = "0x63BB90")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public Vector3 bottom
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0x978110", Offset = "0x978110", VA = "0x978110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BBA0", Offset = "0x63BBA0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x97811C", Offset = "0x97811C", VA = "0x97811C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BBB0", Offset = "0x63BBB0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public Rigidbody r
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x978128", Offset = "0x978128", VA = "0x978128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BBC0", Offset = "0x63BBC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000914")]
			[Address(RVA = "0x978130", Offset = "0x978130", VA = "0x978130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BBD0", Offset = "0x63BBD0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x978138", Offset = "0x978138", VA = "0x978138")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x9781C4", Offset = "0x9781C4", VA = "0x9781C4")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x978328", Offset = "0x978328", VA = "0x978328")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x97832C", Offset = "0x97832C", VA = "0x97832C")]
		private void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x978334", Offset = "0x978334", VA = "0x978334")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x978384", Offset = "0x978384", VA = "0x978384")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x9781C8", Offset = "0x9781C8", VA = "0x9781C8")]
		private void ProcessCollision(Collision c)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x9783C0", Offset = "0x9783C0", VA = "0x9783C0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x9783E4", Offset = "0x9783E4", VA = "0x9783E4")]
		public PressureSensor()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public abstract class Prop : MonoBehaviour
	{
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6350F8", Offset = "0x6350F8")]
		public int propType;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x635130", Offset = "0x635130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635130", Offset = "0x635130")]
		public ConfigurableJoint muscle;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635190", Offset = "0x635190")]
		public Muscle.Props muscleProps;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6351C8", Offset = "0x6351C8")]
		public bool forceLayers;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x635200", Offset = "0x635200")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635200", Offset = "0x635200")]
		public ConfigurableJoint additionalPin;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635260", Offset = "0x635260")]
		public Transform additionalPinTarget;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635298", Offset = "0x635298")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635298", Offset = "0x635298")]
		public float additionalPinWeight;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x6352EC", Offset = "0x6352EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6352EC", Offset = "0x6352EC")]
		public PhysicMaterial pickedUpMaterial;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63534C", Offset = "0x63534C")]
		public PhysicMaterial droppedMaterial;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x635384", Offset = "0x635384")]
		private PropRoot <propRoot>k__BackingField;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x635394", Offset = "0x635394")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private ConfigurableJointMotion xMotion;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ConfigurableJointMotion yMotion;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private ConfigurableJointMotion zMotion;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ConfigurableJointMotion angularXMotion;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private ConfigurableJointMotion angularYMotion;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ConfigurableJointMotion angularZMotion;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] colliders;

		[Token(Token = "0x170000F3")]
		public bool isPickedUp
		{
			[Token(Token = "0x600091E")]
			[Address(RVA = "0x9788A8", Offset = "0x9788A8", VA = "0x9788A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F4")]
		public PropRoot propRoot
		{
			[Token(Token = "0x600091F")]
			[Address(RVA = "0x97891C", Offset = "0x97891C", VA = "0x97891C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BBE0", Offset = "0x63BBE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000920")]
			[Address(RVA = "0x978924", Offset = "0x978924", VA = "0x978924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BBF0", Offset = "0x63BBF0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public bool initiated
		{
			[Token(Token = "0x6000924")]
			[Address(RVA = "0x978C08", Offset = "0x978C08", VA = "0x978C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC00", Offset = "0x63BC00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000925")]
			[Address(RVA = "0x978C10", Offset = "0x978C10", VA = "0x978C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC10", Offset = "0x63BC10")]
			private set
			{
			}
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x97892C", Offset = "0x97892C", VA = "0x97892C")]
		public void PickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x978BC0", Offset = "0x978BC0", VA = "0x978BC0")]
		public void Drop()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x978C00", Offset = "0x978C00", VA = "0x978C00")]
		public void StartPickedUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x978C1C", Offset = "0x978C1C", VA = "0x978C1C", Slot = "4")]
		protected virtual void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x978C20", Offset = "0x978C20", VA = "0x978C20", Slot = "5")]
		protected virtual void OnDrop()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x978C24", Offset = "0x978C24", VA = "0x978C24", Slot = "6")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x978C28", Offset = "0x978C28", VA = "0x978C28")]
		private void Start()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x978E7C", Offset = "0x978E7C", VA = "0x978E7C")]
		private void ReleaseJoint()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x978AEC", Offset = "0x978AEC", VA = "0x978AEC")]
		private void SetMaterial(PhysicMaterial material)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x978F84", Offset = "0x978F84", VA = "0x978F84")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x979130", Offset = "0x979130", VA = "0x979130")]
		protected Prop()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class PropMuscle : MonoBehaviour
	{
		[Token(Token = "0x2000187")]
		public delegate void PropDelegate(PuppetMasterProp prop);

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6353DC", Offset = "0x6353DC")]
		public PuppetMasterProp currentProp;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x635414", Offset = "0x635414")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635414", Offset = "0x635414")]
		public Vector3 additionalPinOffset;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x635474", Offset = "0x635474")]
		private PuppetMasterProp <activeProp>k__BackingField;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PropDelegate OnPickUpProp;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PropDelegate OnDropProp;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Muscle _muscle;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PuppetMasterProp lastProp;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 targetDefaultLocalPos;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 lastAdditionalPinOffset;

		[Token(Token = "0x170000F6")]
		public Muscle muscle
		{
			[Token(Token = "0x600092E")]
			[Address(RVA = "0x9795DC", Offset = "0x9795DC", VA = "0x9795DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public PuppetMasterProp activeProp
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0x9796C8", Offset = "0x9796C8", VA = "0x9796C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC20", Offset = "0x63BC20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x9796D0", Offset = "0x9796D0", VA = "0x9796D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC30", Offset = "0x63BC30")]
			private set
			{
			}
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x9796D8", Offset = "0x9796D8", VA = "0x9796D8")]
		public bool AddAdditionalPin()
		{
			return default(bool);
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x979B64", Offset = "0x979B64", VA = "0x979B64")]
		public bool RemoveAdditionalPin()
		{
			return default(bool);
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x979D18", Offset = "0x979D18", VA = "0x979D18")]
		public void OnInitiate()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x979F78", Offset = "0x979F78", VA = "0x979F78")]
		public void TakeOver()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x979FE8", Offset = "0x979FE8", VA = "0x979FE8")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x97A820", Offset = "0x97A820", VA = "0x97A820")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x97AAB0", Offset = "0x97AAB0", VA = "0x97AAB0")]
		public PropMuscle()
		{
		}
	}
	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62D920", Offset = "0x62D920")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62D920", Offset = "0x62D920")]
	public class PropRoot : MonoBehaviour
	{
		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635484", Offset = "0x635484")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6354BC", Offset = "0x6354BC")]
		public Rigidbody connectTo;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6354F4", Offset = "0x6354F4")]
		public Prop currentProp;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Prop lastProp;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool fixedUpdateCalled;

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x97AC98", Offset = "0x97AC98", VA = "0x97AC98")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63BC40", Offset = "0x63BC40")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x97ACE0", Offset = "0x97ACE0", VA = "0x97ACE0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63BC78", Offset = "0x63BC78")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x97AD28", Offset = "0x97AD28", VA = "0x97AD28")]
		public void DropImmediate()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x97BB20", Offset = "0x97BB20", VA = "0x97BB20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x97BC24", Offset = "0x97BC24", VA = "0x97BC24")]
		private void Update()
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x97BD74", Offset = "0x97BD74", VA = "0x97BD74")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x97BF94", Offset = "0x97BF94", VA = "0x97BF94")]
		private void AttachProp(Prop prop)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x97CB90", Offset = "0x97CB90", VA = "0x97CB90")]
		public PropRoot()
		{
		}
	}
	[Token(Token = "0x2000189")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62D980", Offset = "0x62D980")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62D980", Offset = "0x62D980")]
	public class PropTemplate : Prop
	{
		[Token(Token = "0x6000944")]
		[Address(RVA = "0x97CB98", Offset = "0x97CB98", VA = "0x97CB98", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x97CB9C", Offset = "0x97CB9C", VA = "0x97CB9C", Slot = "4")]
		protected override void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x97CBA0", Offset = "0x97CBA0", VA = "0x97CBA0", Slot = "5")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x97CBA4", Offset = "0x97CBA4", VA = "0x97CBA4")]
		public PropTemplate()
		{
		}
	}
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62D9E0", Offset = "0x62D9E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62D9E0", Offset = "0x62D9E0")]
	public class PuppetMaster : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200018B")]
		public enum Mode
		{
			[Token(Token = "0x400085D")]
			Active,
			[Token(Token = "0x400085E")]
			Kinematic,
			[Token(Token = "0x400085F")]
			Disabled
		}

		[Token(Token = "0x200018C")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x200018D")]
		public delegate void MuscleDelegate(Muscle muscle);

		[Serializable]
		[Token(Token = "0x200018E")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000861")]
			Normal,
			[Token(Token = "0x4000862")]
			AnimatePhysics,
			[Token(Token = "0x4000863")]
			FixedUpdate
		}

		[Serializable]
		[Token(Token = "0x200018F")]
		public enum State
		{
			[Token(Token = "0x4000865")]
			Alive,
			[Token(Token = "0x4000866")]
			Dead,
			[Token(Token = "0x4000867")]
			Frozen
		}

		[Serializable]
		[Token(Token = "0x2000190")]
		public struct StateSettings
		{
			[Token(Token = "0x4000868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635C34", Offset = "0x635C34")]
			public float killDuration;

			[Token(Token = "0x4000869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635C6C", Offset = "0x635C6C")]
			public float deadMuscleWeight;

			[Token(Token = "0x400086A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635CA4", Offset = "0x635CA4")]
			public float deadMuscleDamper;

			[Token(Token = "0x400086B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635CDC", Offset = "0x635CDC")]
			public float maxFreezeSqrVelocity;

			[Token(Token = "0x400086C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635D14", Offset = "0x635D14")]
			public bool freezePermanently;

			[Token(Token = "0x400086D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635D4C", Offset = "0x635D4C")]
			public bool enableAngularLimitsOnKill;

			[Token(Token = "0x400086E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635D84", Offset = "0x635D84")]
			public bool enableInternalCollisionsOnKill;

			[Token(Token = "0x17000107")]
			public static StateSettings Default
			{
				[Token(Token = "0x60009EB")]
				[Address(RVA = "0xA797B0", Offset = "0xA797B0", VA = "0xA797B0")]
				get
				{
					return default(StateSettings);
				}
			}

			[Token(Token = "0x60009EA")]
			[Address(RVA = "0xA7978C", Offset = "0xA7978C", VA = "0xA7978C")]
			public StateSettings(float killDuration, float deadMuscleWeight = 0.01f, float deadMuscleDamper = 2f, float maxFreezeSqrVelocity = 0.02f, bool freezePermanently = false, bool enableAngularLimitsOnKill = true, bool enableInternalCollisionsOnKill = true)
			{
			}
		}

		[Token(Token = "0x2000191")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DA40", Offset = "0x62DA40")]
		private sealed class <DisabledToActive>d__173 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400086F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x17000108")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009EF")]
				[Address(RVA = "0xA79298", Offset = "0xA79298", VA = "0xA79298", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000109")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009F1")]
				[Address(RVA = "0xA792E0", Offset = "0xA792E0", VA = "0xA792E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009EC")]
			[Address(RVA = "0xA7900C", Offset = "0xA7900C", VA = "0xA7900C")]
			[DebuggerHidden]
			public <DisabledToActive>d__173(int <>1__state)
			{
			}

			[Token(Token = "0x60009ED")]
			[Address(RVA = "0xA79038", Offset = "0xA79038", VA = "0xA79038", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009EE")]
			[Address(RVA = "0xA7903C", Offset = "0xA7903C", VA = "0xA7903C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009F0")]
			[Address(RVA = "0xA792A0", Offset = "0xA792A0", VA = "0xA792A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000192")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DA50", Offset = "0x62DA50")]
		private sealed class <KinematicToActive>d__175 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x1700010A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009F5")]
				[Address(RVA = "0xA794FC", Offset = "0xA794FC", VA = "0xA794FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009F7")]
				[Address(RVA = "0xA79544", Offset = "0xA79544", VA = "0xA79544", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009F2")]
			[Address(RVA = "0xA792E8", Offset = "0xA792E8", VA = "0xA792E8")]
			[DebuggerHidden]
			public <KinematicToActive>d__175(int <>1__state)
			{
			}

			[Token(Token = "0x60009F3")]
			[Address(RVA = "0xA79314", Offset = "0xA79314", VA = "0xA79314", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009F4")]
			[Address(RVA = "0xA79318", Offset = "0xA79318", VA = "0xA79318", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009F6")]
			[Address(RVA = "0xA79504", Offset = "0xA79504", VA = "0xA79504", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000193")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DA60", Offset = "0x62DA60")]
		private sealed class <ActiveToDisabled>d__176 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x1700010C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009FB")]
				[Address(RVA = "0x80A8D0", Offset = "0x80A8D0", VA = "0x80A8D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009FD")]
				[Address(RVA = "0x80A918", Offset = "0x80A918", VA = "0x80A918", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x80A75C", Offset = "0x80A75C", VA = "0x80A75C")]
			[DebuggerHidden]
			public <ActiveToDisabled>d__176(int <>1__state)
			{
			}

			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x80A788", Offset = "0x80A788", VA = "0x80A788", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x80A78C", Offset = "0x80A78C", VA = "0x80A78C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x80A8D8", Offset = "0x80A8D8", VA = "0x80A8D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DA70", Offset = "0x62DA70")]
		private sealed class <ActiveToKinematic>d__177 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400087A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x1700010E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A01")]
				[Address(RVA = "0x80AACC", Offset = "0x80AACC", VA = "0x80AACC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A03")]
				[Address(RVA = "0x80AB14", Offset = "0x80AB14", VA = "0x80AB14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x80A920", Offset = "0x80A920", VA = "0x80A920")]
			[DebuggerHidden]
			public <ActiveToKinematic>d__177(int <>1__state)
			{
			}

			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x80A94C", Offset = "0x80A94C", VA = "0x80A94C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A00")]
			[Address(RVA = "0x80A950", Offset = "0x80A950", VA = "0x80A950", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x80AAD4", Offset = "0x80AAD4", VA = "0x80AAD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000195")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DA80", Offset = "0x62DA80")]
		private sealed class <AliveToDead>d__228 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400087B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400087C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400087D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x400087E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool freeze;

			[Token(Token = "0x400087F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <range>5__2;

			[Token(Token = "0x4000880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <mW>5__3;

			[Token(Token = "0x17000110")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A07")]
				[Address(RVA = "0xA78FBC", Offset = "0xA78FBC", VA = "0xA78FBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000111")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A09")]
				[Address(RVA = "0xA79004", Offset = "0xA79004", VA = "0xA79004", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A04")]
			[Address(RVA = "0xA78B9C", Offset = "0xA78B9C", VA = "0xA78B9C")]
			[DebuggerHidden]
			public <AliveToDead>d__228(int <>1__state)
			{
			}

			[Token(Token = "0x6000A05")]
			[Address(RVA = "0xA78BC8", Offset = "0xA78BC8", VA = "0xA78BC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A06")]
			[Address(RVA = "0xA78BCC", Offset = "0xA78BCC", VA = "0xA78BCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A08")]
			[Address(RVA = "0xA78FC4", Offset = "0xA78FC4", VA = "0xA78FC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63552C", Offset = "0x63552C")]
		public PuppetMasterHumanoidConfig humanoidConfig;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform targetRoot;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635564", Offset = "0x635564")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x635564", Offset = "0x635564")]
		public State state;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0x6355C4", Offset = "0x6355C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6355C4", Offset = "0x6355C4")]
		public StateSettings stateSettings;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635640", Offset = "0x635640")]
		public Mode mode;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635678", Offset = "0x635678")]
		public float blendTime;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6356B0", Offset = "0x6356B0")]
		public bool fixTargetTransforms;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6356E8", Offset = "0x6356E8")]
		public int solverIterationCount;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635720", Offset = "0x635720")]
		public bool visualizeTargetPose;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635758", Offset = "0x635758")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635758", Offset = "0x635758")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x635758", Offset = "0x635758")]
		public float mappingWeight;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6357D0", Offset = "0x6357D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6357D0", Offset = "0x6357D0")]
		public float pinWeight;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635824", Offset = "0x635824")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635824", Offset = "0x635824")]
		public float muscleWeight;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x635878", Offset = "0x635878")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635878", Offset = "0x635878")]
		public float muscleSpring;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6358D8", Offset = "0x6358D8")]
		public float muscleDamper;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635910", Offset = "0x635910")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635910", Offset = "0x635910")]
		public float pinPow;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635964", Offset = "0x635964")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635964", Offset = "0x635964")]
		public float pinDistanceFalloff;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6359BC", Offset = "0x6359BC")]
		public bool angularPinning;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6359F4", Offset = "0x6359F4")]
		public bool updateJointAnchors;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635A2C", Offset = "0x635A2C")]
		public bool supportTranslationAnimation;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635A64", Offset = "0x635A64")]
		public bool angularLimits;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635A9C", Offset = "0x635A9C")]
		public bool internalCollisions;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x635AD4", Offset = "0x635AD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635AD4", Offset = "0x635AD4")]
		public Muscle[] muscles;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		public PropMuscle[] propMuscles;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnRead;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnWrite;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UpdateDelegate OnPostLateUpdate;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnHierarchyChanged;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public MuscleDelegate OnMuscleRemoved;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public MuscleDelegate OnMuscleDisconnected;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public MuscleDelegate OnMuscleReconnected;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Animator _targetAnimator;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x635B6C", Offset = "0x635B6C")]
		private Animation <targetAnimation>k__BackingField;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x635B7C", Offset = "0x635B7C")]
		private BehaviourBase[] <behaviours>k__BackingField;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x635B8C", Offset = "0x635B8C")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public List<SolverManager> solvers;

		[NonSerialized]
		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public bool manualInternalCollisionControl;

		[NonSerialized]
		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		[HideInInspector]
		public bool manualAngularLimitControl;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		[SerializeField]
		[HideInInspector]
		public bool mapDisconnectedMuscles;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
		private bool internalCollisionsEnabled;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool angularLimitsEnabled;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		private bool fixedFrame;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int lastSolverIterationCount;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool isLegacy;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool animatorDisabled;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		private bool awakeFailed;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
		private bool interpolated;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool freezeFlag;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool hasBeenDisabled;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		private bool hierarchyIsFlat;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		private bool teleport;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 teleportPosition;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion teleportRotation;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool teleportMoveToTarget;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool rebuildFlag;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		private bool onPostRebuildFlag;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool[] disconnectMuscleFlags;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private MuscleDisconnectMode[] muscleDisconnectModes;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool[] disconnectDeactivateFlags;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool[] reconnectMuscleFlags;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Muscle[] defaultMuscles;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 rebuildPelvisPos;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Quaternion rebuildPelvisRot;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool readInFixedUpdate;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x635C04", Offset = "0x635C04")]
		private bool <isSwitchingMode>k__BackingField;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Mode activeMode;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Mode lastMode;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float mappingBlend;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x635C14", Offset = "0x635C14")]
		private bool <isKilling>k__BackingField;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public UpdateDelegate OnFreeze;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public UpdateDelegate OnUnfreeze;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public UpdateDelegate OnDeath;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public UpdateDelegate OnResurrection;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private State activeState;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private State lastState;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool angularLimitsEnabledOnKill;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
		private bool internalCollisionsEnabledOnKill;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B2")]
		private bool animationDisabledbyStates;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B3")]
		[HideInInspector]
		public bool storeTargetMappedState;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private bool targetMappedStateStored;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B5")]
		private bool targetMappedStateSampled;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B6")]
		private bool sampleTargetMappedState;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B7")]
		private bool hasProp;

		[Token(Token = "0x170000F8")]
		public Animator targetAnimator
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0x97CFE0", Offset = "0x97CFE0", VA = "0x97CFE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x97D144", Offset = "0x97D144", VA = "0x97D144")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public Animation targetAnimation
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x97D14C", Offset = "0x97D14C", VA = "0x97D14C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE00", Offset = "0x63BE00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x97D154", Offset = "0x97D154", VA = "0x97D154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE10", Offset = "0x63BE10")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public BehaviourBase[] behaviours
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x97D15C", Offset = "0x97D15C", VA = "0x97D15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE20", Offset = "0x63BE20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000954")]
			[Address(RVA = "0x97D164", Offset = "0x97D164", VA = "0x97D164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE30", Offset = "0x63BE30")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public bool isActive
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x97D16C", Offset = "0x97D16C", VA = "0x97D16C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FC")]
		public bool initiated
		{
			[Token(Token = "0x6000956")]
			[Address(RVA = "0x97D200", Offset = "0x97D200", VA = "0x97D200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE40", Offset = "0x63BE40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x97D208", Offset = "0x97D208", VA = "0x97D208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE50", Offset = "0x63BE50")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public UpdateMode updateMode
		{
			[Token(Token = "0x6000958")]
			[Address(RVA = "0x97D214", Offset = "0x97D214", VA = "0x97D214")]
			get
			{
				return default(UpdateMode);
			}
		}

		[Token(Token = "0x170000FE")]
		public bool controlsAnimator
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x97D34C", Offset = "0x97D34C", VA = "0x97D34C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FF")]
		public bool isBlending
		{
			[Token(Token = "0x600095A")]
			[Address(RVA = "0x97D1DC", Offset = "0x97D1DC", VA = "0x97D1DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000100")]
		private bool autoSimulate
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x97DCF4", Offset = "0x97DCF4", VA = "0x97DCF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000101")]
		private AnimatorUpdateMode targetUpdateMode
		{
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x97D254", Offset = "0x97D254", VA = "0x97D254")]
			get
			{
				return default(AnimatorUpdateMode);
			}
		}

		[Token(Token = "0x17000102")]
		public bool isSwitchingMode
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0x98510C", Offset = "0x98510C", VA = "0x98510C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BF40", Offset = "0x63BF40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x985114", Offset = "0x985114", VA = "0x985114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BF50", Offset = "0x63BF50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public bool isSwitchingState
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x97D3AC", Offset = "0x97D3AC", VA = "0x97D3AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000104")]
		public bool isKilling
		{
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x988A84", Offset = "0x988A84", VA = "0x988A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C100", Offset = "0x63C100")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x988A8C", Offset = "0x988A8C", VA = "0x988A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C110", Offset = "0x63C110")]
			private set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public bool isAlive
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x98238C", Offset = "0x98238C", VA = "0x98238C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000106")]
		public bool isFrozen
		{
			[Token(Token = "0x60009C1")]
			[Address(RVA = "0x981044", Offset = "0x981044", VA = "0x981044")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x97CDE8", Offset = "0x97CDE8", VA = "0x97CDE8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63BCB0", Offset = "0x63BCB0")]
		private void OpenUserManualSetup()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x97CE30", Offset = "0x97CE30", VA = "0x97CE30")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63BCE8", Offset = "0x63BCE8")]
		private void OpenUserManualComponent()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x97CE78", Offset = "0x97CE78", VA = "0x97CE78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63BD20", Offset = "0x63BD20")]
		private void OpenUserManualPerformance()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x97CEC0", Offset = "0x97CEC0", VA = "0x97CEC0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63BD58", Offset = "0x63BD58")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x97CF08", Offset = "0x97CF08", VA = "0x97CF08")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63BD90", Offset = "0x63BD90")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x97CF50", Offset = "0x97CF50", VA = "0x97CF50")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63BDC8", Offset = "0x63BDC8")]
		private void OpenComponentTutorial()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x97CF98", Offset = "0x97CF98", VA = "0x97CF98")]
		private void ResetStateSettings()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x97D3C0", Offset = "0x97D3C0", VA = "0x97D3C0")]
		public void Teleport(Vector3 position, Quaternion rotation, bool moveToTarget)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x97DB80", Offset = "0x97DB80", VA = "0x97DB80")]
		public void SetInternalCollisionsManual(bool collide, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x97DC6C", Offset = "0x97DC6C", VA = "0x97DC6C")]
		public void SetAngularLimitsManual(bool limited)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x97DCFC", Offset = "0x97DCFC", VA = "0x97DCFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x97DDA8", Offset = "0x97DDA8", VA = "0x97DDA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x97E4C0", Offset = "0x97E4C0", VA = "0x97E4C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x97F008", Offset = "0x97F008", VA = "0x97F008")]
		public void Start()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x97F0B8", Offset = "0x97F0B8", VA = "0x97F0B8")]
		public Transform FindTargetRootRecursive(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x97E504", Offset = "0x97E504", VA = "0x97E504")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x9802C4", Offset = "0x9802C4", VA = "0x9802C4")]
		private void ActivateBehaviour(BehaviourBase behaviour)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x9803BC", Offset = "0x9803BC", VA = "0x9803BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x9804C4", Offset = "0x9804C4", VA = "0x9804C4")]
		private bool IsInterpolated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x980550", Offset = "0x980550", VA = "0x980550")]
		private void OnRebuild()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x980888", Offset = "0x980888", VA = "0x980888")]
		public void OnPreSimulate(float deltaTime)
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x98113C", Offset = "0x98113C", VA = "0x98113C")]
		public void OnPostSimulate()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x9818A0", Offset = "0x9818A0", VA = "0x9818A0", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x981E24", Offset = "0x981E24", VA = "0x981E24", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x981F08", Offset = "0x981F08", VA = "0x981F08", Slot = "6")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x982094", Offset = "0x982094", VA = "0x982094", Slot = "7")]
		protected virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x981478", Offset = "0x981478", VA = "0x981478")]
		private void MoveToTarget()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x97D400", Offset = "0x97D400", VA = "0x97D400")]
		private void Read()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x980F00", Offset = "0x980F00", VA = "0x980F00")]
		private void FixTargetTransforms()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x98239C", Offset = "0x98239C", VA = "0x98239C")]
		private void VisualizeTargetPose()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x98264C", Offset = "0x98264C", VA = "0x98264C")]
		private void VisualizeHierarchy(Transform t, Color color)
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x9801D0", Offset = "0x9801D0", VA = "0x9801D0")]
		public void FlagInternalCollisionsForUpdate()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x981054", Offset = "0x981054", VA = "0x981054")]
		private void UpdateInternalCollisions()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x982980", Offset = "0x982980", VA = "0x982980")]
		public void UpdateInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x9828A8", Offset = "0x9828A8", VA = "0x9828A8")]
		private void IgnoreInternalCollisions()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x982A38", Offset = "0x982A38", VA = "0x982A38")]
		public void IgnoreInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x9827C8", Offset = "0x9827C8", VA = "0x9827C8")]
		private void ResetInternalCollisions()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x982AC8", Offset = "0x982AC8", VA = "0x982AC8")]
		public void ResetInternalCollisions(Muscle m, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x9801EC", Offset = "0x9801EC", VA = "0x9801EC")]
		public void FlagAngularLimitsForUpdate()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x98108C", Offset = "0x98108C", VA = "0x98108C")]
		private void UpdateAngularLimits()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x982B68", Offset = "0x982B68", VA = "0x982B68")]
		public bool AddPropMuscle(ConfigurableJoint addPropMuscleTo, Vector3 position, Quaternion rotation, Vector3 additionalPinOffset, [Optional] Transform targetParent, [Optional] PuppetMasterProp initiateWithProp)
		{
			return default(bool);
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x97A598", Offset = "0x97A598", VA = "0x97A598")]
		public bool IsDisconnecting(int muscleIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x97A5D4", Offset = "0x97A5D4", VA = "0x97A5D4")]
		public bool IsReconnecting(int muscleIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x979E10", Offset = "0x979E10", VA = "0x979E10")]
		public void DisconnectMuscleRecursive(int index, MuscleDisconnectMode disconnectMode = MuscleDisconnectMode.Sever, bool deactivate = false)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x97A610", Offset = "0x97A610", VA = "0x97A610")]
		public void ReconnectMuscleRecursive(int index)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x97C1E8", Offset = "0x97C1E8", VA = "0x97C1E8")]
		public void AddMuscle(ConfigurableJoint joint, Transform target, Rigidbody connectTo, Transform targetParent, [Optional] Muscle.Props muscleProps, bool forceTreeHierarchy = false, bool forceLayers = true)
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x983768", Offset = "0x983768", VA = "0x983768")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x97AE08", Offset = "0x97AE08", VA = "0x97AE08")]
		public void RemoveMuscleRecursive(ConfigurableJoint joint, bool attachTarget, bool blockTargetAnimation = false, MuscleRemoveMode removeMode = MuscleRemoveMode.Sever)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x983AB8", Offset = "0x983AB8", VA = "0x983AB8")]
		public void ReplaceMuscle(ConfigurableJoint oldJoint, ConfigurableJoint newJoint)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x983B6C", Offset = "0x983B6C", VA = "0x983B6C")]
		public void SetMuscles(Muscle[] newMuscles)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x983C20", Offset = "0x983C20", VA = "0x983C20")]
		public void DisableMuscleRecursive(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x983CD4", Offset = "0x983CD4", VA = "0x983CD4")]
		public void EnableMuscleRecursive(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x983D88", Offset = "0x983D88", VA = "0x983D88")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63BE60", Offset = "0x63BE60")]
		public void FlattenHierarchy()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x983E94", Offset = "0x983E94", VA = "0x983E94")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63BE98", Offset = "0x63BE98")]
		public void TreeHierarchy()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x984004", Offset = "0x984004", VA = "0x984004")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63BED0", Offset = "0x63BED0")]
		public void FixMusclePositions()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x98413C", Offset = "0x98413C", VA = "0x98413C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63BF08", Offset = "0x63BF08")]
		public void FixMusclePositionsAndRotations()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x9800C4", Offset = "0x9800C4", VA = "0x9800C4")]
		public bool HierarchyIsFlat()
		{
			return default(bool);
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x983240", Offset = "0x983240", VA = "0x983240")]
		private int GetHighestDisconnectedParentIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x980D5C", Offset = "0x980D5C", VA = "0x980D5C")]
		private void ProcessDisconnects()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x980E58", Offset = "0x980E58", VA = "0x980E58")]
		private void ProcessReconnects()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x9842AC", Offset = "0x9842AC", VA = "0x9842AC")]
		private void OnDisconnectMuscleRecursive(int index, MuscleDisconnectMode disconnectMode = MuscleDisconnectMode.Sever, bool deactivate = false)
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x9846F4", Offset = "0x9846F4", VA = "0x9846F4")]
		private void DisconnectMuscle(Muscle m, bool sever, bool deactivate)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x984570", Offset = "0x984570", VA = "0x984570")]
		private void OnReconnectMuscleRecursive(int index)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x984B98", Offset = "0x984B98", VA = "0x984B98")]
		private void ReconnectMuscle(Muscle m)
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x984F80", Offset = "0x984F80", VA = "0x984F80")]
		private void AddIndexesRecursive(int index, int[] indexes)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x98396C", Offset = "0x98396C", VA = "0x98396C")]
		private void DisconnectJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x983A34", Offset = "0x983A34", VA = "0x983A34")]
		private void KillJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x9850EC", Offset = "0x9850EC", VA = "0x9850EC")]
		public void SwitchToActiveMode()
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x9850F4", Offset = "0x9850F4", VA = "0x9850F4")]
		public void SwitchToKinematicMode()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x985100", Offset = "0x985100", VA = "0x985100")]
		public void SwitchToDisabledMode()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x985120", Offset = "0x985120", VA = "0x985120")]
		public void DisableImmediately()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x9851BC", Offset = "0x9851BC", VA = "0x9851BC", Slot = "8")]
		protected virtual void SwitchModes()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x98530C", Offset = "0x98530C", VA = "0x98530C")]
		private void DisabledToKinematic()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x98546C", Offset = "0x98546C", VA = "0x98546C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63BF60", Offset = "0x63BF60")]
		private IEnumerator DisabledToActive()
		{
			return null;
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x9854EC", Offset = "0x9854EC", VA = "0x9854EC")]
		private void KinematicToDisabled()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x985590", Offset = "0x985590", VA = "0x985590")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63BFC8", Offset = "0x63BFC8")]
		private IEnumerator KinematicToActive()
		{
			return null;
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x985610", Offset = "0x985610", VA = "0x985610")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C030", Offset = "0x63C030")]
		private IEnumerator ActiveToDisabled()
		{
			return null;
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x985690", Offset = "0x985690", VA = "0x985690")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C098", Offset = "0x63C098")]
		private IEnumerator ActiveToKinematic()
		{
			return null;
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x985710", Offset = "0x985710", VA = "0x985710")]
		public void SetMuscleWeights(Muscle.Group group, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x9857E0", Offset = "0x9857E0", VA = "0x9857E0")]
		public void SetMuscleWeights(Transform target, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x985C54", Offset = "0x985C54", VA = "0x985C54")]
		public void SetMuscleWeights(HumanBodyBones humanBodyBone, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x985F28", Offset = "0x985F28", VA = "0x985F28")]
		public void SetMuscleWeightsRecursive(Transform target, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x986058", Offset = "0x986058", VA = "0x986058")]
		public void SetMuscleWeightsRecursive(int muscleIndex, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x986144", Offset = "0x986144", VA = "0x986144")]
		public void SetMuscleWeightsRecursive(HumanBodyBones humanBodyBone, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x985A6C", Offset = "0x985A6C", VA = "0x985A6C")]
		public void SetMuscleWeights(int muscleIndex, float muscleWeight, float pinWeight, float mappingWeight, float muscleDamper)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x9861CC", Offset = "0x9861CC", VA = "0x9861CC")]
		public Muscle GetMuscle(Transform target)
		{
			return null;
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x983368", Offset = "0x983368", VA = "0x983368")]
		public Muscle GetMuscle(Rigidbody rigidbody)
		{
			return null;
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x97966C", Offset = "0x97966C", VA = "0x97966C")]
		public Muscle GetMuscle(ConfigurableJoint joint)
		{
			return null;
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x98079C", Offset = "0x98079C", VA = "0x98079C")]
		public bool ContainsJoint(ConfigurableJoint joint)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x985CDC", Offset = "0x985CDC", VA = "0x985CDC")]
		public int GetMuscleIndex(HumanBodyBones humanBodyBone)
		{
			return default(int);
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x985868", Offset = "0x985868", VA = "0x985868")]
		public int GetMuscleIndex(Transform target)
		{
			return default(int);
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x986228", Offset = "0x986228", VA = "0x986228")]
		public int GetMuscleIndex(Rigidbody rigidbody)
		{
			return default(int);
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x983774", Offset = "0x983774", VA = "0x983774")]
		public int GetMuscleIndex(ConfigurableJoint joint)
		{
			return default(int);
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x98642C", Offset = "0x98642C", VA = "0x98642C")]
		public static PuppetMaster SetUp(Transform target, Transform ragdoll, int characterControllerLayer, int ragdollLayer)
		{
			return null;
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x98711C", Offset = "0x98711C", VA = "0x98711C")]
		public static PuppetMaster SetUp(Transform target, int characterControllerLayer, int ragdollLayer)
		{
			return null;
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x986528", Offset = "0x986528", VA = "0x986528")]
		public void SetUpTo(Transform setUpTo, int characterControllerLayer, int ragdollLayer)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x987298", Offset = "0x987298", VA = "0x987298")]
		public static void RemoveRagdollComponents(Transform target, int characterControllerLayer)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x987B40", Offset = "0x987B40", VA = "0x987B40")]
		private void SetUpMuscles(Transform setUpTo)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x9885E0", Offset = "0x9885E0", VA = "0x9885E0")]
		private static Muscle.Group FindGroup(Animator animator, Transform t)
		{
			return default(Muscle.Group);
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x987704", Offset = "0x987704", VA = "0x987704")]
		private void RemoveUnnecessaryBones()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x9882D0", Offset = "0x9882D0", VA = "0x9882D0")]
		private static bool IsClothCollider(Collider collider, Cloth[] cloths)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x988A98", Offset = "0x988A98", VA = "0x988A98")]
		public void Kill()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x988AA4", Offset = "0x988AA4", VA = "0x988AA4")]
		public void Kill(StateSettings stateSettings)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x988AC0", Offset = "0x988AC0", VA = "0x988AC0")]
		public void Freeze()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x988ACC", Offset = "0x988ACC", VA = "0x988ACC")]
		public void Freeze(StateSettings stateSettings)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x988AE8", Offset = "0x988AE8", VA = "0x988AE8")]
		public void Resurrect()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x988AF0", Offset = "0x988AF0", VA = "0x988AF0", Slot = "9")]
		protected virtual void SwitchStates()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x988BF0", Offset = "0x988BF0", VA = "0x988BF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C120", Offset = "0x63C120")]
		private IEnumerator AliveToDead(bool freeze)
		{
			return null;
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x981628", Offset = "0x981628", VA = "0x981628")]
		private void OnFreezeFlag()
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x988C7C", Offset = "0x988C7C", VA = "0x988C7C")]
		private void DeadToAlive()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x97E224", Offset = "0x97E224", VA = "0x97E224")]
		private void SetAnimationEnabled(bool to)
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x988D8C", Offset = "0x988D8C", VA = "0x988D8C")]
		private void DeadToFrozen()
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x988D98", Offset = "0x988D98", VA = "0x988D98")]
		private void FrozenToAlive()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x988FB4", Offset = "0x988FB4", VA = "0x988FB4")]
		private void FrozenToDead()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x97E320", Offset = "0x97E320", VA = "0x97E320")]
		private void ActivateRagdoll(bool kinematic = false)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x989088", Offset = "0x989088", VA = "0x989088")]
		private bool CanFreeze()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x989144", Offset = "0x989144", VA = "0x989144")]
		public void SampleTargetMappedState()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x98920C", Offset = "0x98920C", VA = "0x98920C")]
		public void FixTargetToSampledState(float weight)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x980208", Offset = "0x980208", VA = "0x980208")]
		public void StoreTargetMappedState()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x97FE10", Offset = "0x97FE10", VA = "0x97FE10")]
		private void UpdateHierarchies()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x9899E0", Offset = "0x9899E0", VA = "0x9899E0")]
		private bool HasProp()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x989878", Offset = "0x989878", VA = "0x989878")]
		private void UpdateBroadcasterMuscleIndexes()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x989428", Offset = "0x989428", VA = "0x989428")]
		private void AssignParentAndChildIndexes()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x989A44", Offset = "0x989A44", VA = "0x989A44")]
		private void AddToParentsRecursive(ConfigurableJoint joint, int[] indexes)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x989BC0", Offset = "0x989BC0", VA = "0x989BC0")]
		private void AddToChildrenRecursive(ConfigurableJoint joint, int[] indexes, bool[] childFlags)
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x989764", Offset = "0x989764", VA = "0x989764")]
		private void AssignKinshipDegrees()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x989EB0", Offset = "0x989EB0", VA = "0x989EB0")]
		private void AssignKinshipsDownRecursive(int[] kinshipDegrees, int degree, int index)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x98A010", Offset = "0x98A010", VA = "0x98A010")]
		private void AssignKinshipsUpRecursive(int[] kinshipDegrees, int degree, int index)
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x989DD8", Offset = "0x989DD8", VA = "0x989DD8")]
		private int GetMuscleIndexLowLevel(ConfigurableJoint joint)
		{
			return default(int);
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x97F434", Offset = "0x97F434", VA = "0x97F434")]
		public bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x9833C4", Offset = "0x9833C4", VA = "0x9833C4")]
		private bool CheckMassVariation(float threshold, bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x9832D0", Offset = "0x9832D0", VA = "0x9832D0")]
		private bool CheckIfInitiated()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x98A270", Offset = "0x98A270", VA = "0x98A270")]
		public PuppetMaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000196")]
	public enum MuscleRemoveMode
	{
		[Token(Token = "0x4000882")]
		Sever,
		[Token(Token = "0x4000883")]
		Explode,
		[Token(Token = "0x4000884")]
		Numb
	}
	[Serializable]
	[Token(Token = "0x2000197")]
	public enum MuscleDisconnectMode
	{
		[Token(Token = "0x4000886")]
		Sever,
		[Token(Token = "0x4000887")]
		Explode
	}
	[Token(Token = "0x2000198")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62DA90", Offset = "0x62DA90")]
	public class PuppetMasterHumanoidConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000199")]
		public class HumanoidMuscle
		{
			[Token(Token = "0x400089C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x400089D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x400089E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Muscle.Props props;

			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0xA79820", Offset = "0xA79820", VA = "0xA79820")]
			public HumanoidMuscle()
			{
			}
		}

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x635DBC", Offset = "0x635DBC")]
		public PuppetMaster.State state;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PuppetMaster.StateSettings stateSettings;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PuppetMaster.Mode mode;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float blendTime;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool fixTargetTransforms;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int solverIterationCount;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool visualizeTargetPose;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635DF4", Offset = "0x635DF4")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x635DF4", Offset = "0x635DF4")]
		public float mappingWeight;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635E48", Offset = "0x635E48")]
		public float pinWeight;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635E60", Offset = "0x635E60")]
		public float muscleWeight;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x635E78", Offset = "0x635E78")]
		public float muscleSpring;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float muscleDamper;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635EB0", Offset = "0x635EB0")]
		public float pinPow;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635EC8", Offset = "0x635EC8")]
		public float pinDistanceFalloff;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool angularPinning;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool updateJointAnchors;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool supportTranslationAnimation;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool angularLimits;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool internalCollisions;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x635EE4", Offset = "0x635EE4")]
		public HumanoidMuscle[] muscles;

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xC63AE8", Offset = "0xC63AE8", VA = "0xC63AE8")]
		public void ApplyTo(PuppetMaster p)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xC63E5C", Offset = "0xC63E5C", VA = "0xC63E5C")]
		private Muscle GetMuscle(HumanBodyBones boneId, Animator animator, PuppetMaster puppetMaster)
		{
			return null;
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xC63F8C", Offset = "0xC63F8C", VA = "0xC63F8C")]
		public PuppetMasterHumanoidConfig()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class PuppetMasterProp : MonoBehaviour
	{
		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635F54", Offset = "0x635F54")]
		public Transform meshRoot;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635F8C", Offset = "0x635F8C")]
		public Muscle.Props muscleProps;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635FC4", Offset = "0x635FC4")]
		public bool forceLayers;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635FFC", Offset = "0x635FFC")]
		public float mass;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636034", Offset = "0x636034")]
		public int propType;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63606C", Offset = "0x63606C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x63606C", Offset = "0x63606C")]
		public PhysicMaterial pickedUpMaterial;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x6360CC", Offset = "0x6360CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6360CC", Offset = "0x6360CC")]
		public Vector3 additionalPinOffsetAdd;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x63612C", Offset = "0x63612C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63612C", Offset = "0x63612C")]
		public float additionalPinWeight;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636180", Offset = "0x636180")]
		public float additionalPinMass;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6361B8", Offset = "0x6361B8")]
		private bool <isPickedUp>k__BackingField;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6361C8", Offset = "0x6361C8")]
		private Muscle <propMuscle>k__BackingField;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int defaultLayer;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform defaultParent;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] colliders;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PhysicMaterial[] droppedMaterials;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody r;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _mass;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _drag;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _angularDrag;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _useGravity;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool _isKinematic;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RigidbodyInterpolation _interpolation;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private CollisionDetectionMode _collisionDetectionMode;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RigidbodyConstraints _constraints;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] emptyColliders;

		[Token(Token = "0x17000112")]
		public bool isPickedUp
		{
			[Token(Token = "0x6000A0E")]
			[Address(RVA = "0xC64068", Offset = "0xC64068", VA = "0xC64068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C318", Offset = "0x63C318")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A0F")]
			[Address(RVA = "0xC64070", Offset = "0xC64070", VA = "0xC64070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C328", Offset = "0x63C328")]
			private set
			{
			}
		}

		[Token(Token = "0x17000113")]
		protected Muscle propMuscle
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0xC64128", Offset = "0xC64128", VA = "0xC64128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C338", Offset = "0x63C338")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0xC64130", Offset = "0xC64130", VA = "0xC64130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C348", Offset = "0x63C348")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xC6407C", Offset = "0xC6407C", VA = "0xC6407C")]
		public Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xC64120", Offset = "0xC64120", VA = "0xC64120", Slot = "4")]
		protected virtual void OnPickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xC64124", Offset = "0xC64124", VA = "0xC64124", Slot = "5")]
		protected virtual void OnDrop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xC64138", Offset = "0xC64138", VA = "0xC64138")]
		public void PickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xC64664", Offset = "0xC64664", VA = "0xC64664")]
		public void Drop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xC64BB8", Offset = "0xC64BB8", VA = "0xC64BB8", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xC64D54", Offset = "0xC64D54", VA = "0xC64D54", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xC64F54", Offset = "0xC64F54", VA = "0xC64F54", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xC644F8", Offset = "0xC644F8", VA = "0xC644F8")]
		private void RemoveRigidbody()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xC64A4C", Offset = "0xC64A4C", VA = "0xC64A4C")]
		private void ReattachRigidbody()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xC64FD0", Offset = "0xC64FD0", VA = "0xC64FD0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xC65138", Offset = "0xC65138", VA = "0xC65138")]
		public PuppetMasterProp()
		{
		}
	}
	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62DAFC", Offset = "0x62DAFC")]
	public class PuppetMasterSettings : Singleton<PuppetMasterSettings>
	{
		[Serializable]
		[Token(Token = "0x200019C")]
		public class PuppetUpdateLimit
		{
			[Token(Token = "0x40008C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636240", Offset = "0x636240")]
			public int puppetsPerFrame;

			[Token(Token = "0x40008C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int index;

			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0xA799C4", Offset = "0xA799C4", VA = "0xA799C4")]
			public PuppetUpdateLimit()
			{
			}

			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0xA799F0", Offset = "0xA799F0", VA = "0xA799F0")]
			public void Step(int puppetCount)
			{
			}

			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0xA79A0C", Offset = "0xA79A0C", VA = "0xA79A0C")]
			public bool Update(List<PuppetMaster> puppets, PuppetMaster puppetMaster)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6361D8", Offset = "0x6361D8")]
		public PuppetUpdateLimit kinematicCollidersUpdateLimit;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuppetUpdateLimit freeUpdateLimit;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PuppetUpdateLimit fixedUpdateLimit;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool collisionStayMessages;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool collisionExitMessages;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float activePuppetCollisionThresholdMlp;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x636210", Offset = "0x636210")]
		private int <currentlyActivePuppets>k__BackingField;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x636220", Offset = "0x636220")]
		private int <currentlyKinematicPuppets>k__BackingField;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x636230", Offset = "0x636230")]
		private int <currentlyDisabledPuppets>k__BackingField;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<PuppetMaster> _puppets;

		[Token(Token = "0x17000114")]
		public int currentlyActivePuppets
		{
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0xC6546C", Offset = "0xC6546C", VA = "0xC6546C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C358", Offset = "0x63C358")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0xC65474", Offset = "0xC65474", VA = "0xC65474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C368", Offset = "0x63C368")]
			private set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public int currentlyKinematicPuppets
		{
			[Token(Token = "0x6000A20")]
			[Address(RVA = "0xC6547C", Offset = "0xC6547C", VA = "0xC6547C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C378", Offset = "0x63C378")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0xC65484", Offset = "0xC65484", VA = "0xC65484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C388", Offset = "0x63C388")]
			private set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public int currentlyDisabledPuppets
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0xC6548C", Offset = "0xC6548C", VA = "0xC6548C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C398", Offset = "0x63C398")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0xC65494", Offset = "0xC65494", VA = "0xC65494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C3A8", Offset = "0x63C3A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public List<PuppetMaster> puppets
		{
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0xC6549C", Offset = "0xC6549C", VA = "0xC6549C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xC654A4", Offset = "0xC654A4", VA = "0xC654A4")]
		public void Register(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xC65544", Offset = "0xC65544", VA = "0xC65544")]
		public void Unregister(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xC655A8", Offset = "0xC655A8", VA = "0xC655A8")]
		public bool UpdateMoveToTarget(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xC655D4", Offset = "0xC655D4", VA = "0xC655D4")]
		public bool UpdateFree(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xC65600", Offset = "0xC65600", VA = "0xC65600")]
		public bool UpdateFixed(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xC6562C", Offset = "0xC6562C", VA = "0xC6562C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xC65820", Offset = "0xC65820", VA = "0xC65820")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xC65878", Offset = "0xC65878", VA = "0xC65878")]
		public PuppetMasterSettings()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public static class PuppetMasterTools
	{
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xC659DC", Offset = "0xC659DC", VA = "0xC659DC")]
		public static void PositionRagdoll(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xC65FAC", Offset = "0xC65FAC", VA = "0xC65FAC")]
		public static void RealignRagdoll(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xC6688C", Offset = "0xC6688C", VA = "0xC6688C")]
		private static Vector3 DirectionIntToVector3(int dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xC668B0", Offset = "0xC668B0", VA = "0xC668B0")]
		private static int DirectionVector3ToInt(Vector3 dir)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x200019E")]
	public class Weight
	{
		[Serializable]
		[Token(Token = "0x200019F")]
		public enum Mode
		{
			[Token(Token = "0x40008C9")]
			Float,
			[Token(Token = "0x40008CA")]
			Curve
		}

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mode mode;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float floatValue;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tooltip;

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x9C6FB0", Offset = "0x9C6FB0", VA = "0x9C6FB0")]
		public Weight(float floatValue)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x9C7028", Offset = "0x9C7028", VA = "0x9C7028")]
		public Weight(float floatValue, string tooltip)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x9C70B4", Offset = "0x9C70B4", VA = "0x9C70B4")]
		public float GetValue(float param)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001A0")]
	public class InitialVelocity : MonoBehaviour
	{
		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 initialVelocity;

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x8F401C", Offset = "0x8F401C", VA = "0x8F401C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x8F4088", Offset = "0x8F4088", VA = "0x8F4088")]
		public InitialVelocity()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62DB34", Offset = "0x62DB34")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62DB34", Offset = "0x62DB34")]
	public class BipedRagdollCreator : RagdollCreator
	{
		[Serializable]
		[Token(Token = "0x20001A2")]
		public struct Options
		{
			[Token(Token = "0x40008CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float weight;

			[Token(Token = "0x40008D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63625C", Offset = "0x63625C")]
			public bool spine;

			[Token(Token = "0x40008D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool chest;

			[Token(Token = "0x40008D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public bool hands;

			[Token(Token = "0x40008D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public bool feet;

			[Token(Token = "0x40008D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x636294", Offset = "0x636294")]
			public JointType joints;

			[Token(Token = "0x40008D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float jointRange;

			[Token(Token = "0x40008D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6362CC", Offset = "0x6362CC")]
			public float colliderLengthOverlap;

			[Token(Token = "0x40008D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ColliderType torsoColliders;

			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColliderType headCollider;

			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ColliderType armColliders;

			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColliderType handColliders;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public ColliderType legColliders;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColliderType footColliders;

			[Token(Token = "0x17000118")]
			public static Options Default
			{
				[Token(Token = "0x6000A4A")]
				[Address(RVA = "0x7D6C60", Offset = "0x7D6C60", VA = "0x7D6C60")]
				get
				{
					return default(Options);
				}
			}
		}

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool canBuild;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedRagdollReferences references;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Options options;

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xCC01F8", Offset = "0xCC01F8", VA = "0xCC01F8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63C3B8", Offset = "0x63C3B8")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xCC0240", Offset = "0xCC0240", VA = "0xCC0240")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63C3F0", Offset = "0x63C3F0")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xCC0288", Offset = "0xCC0288", VA = "0xCC0288")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63C428", Offset = "0x63C428")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xCC02D0", Offset = "0xCC02D0", VA = "0xCC02D0")]
		public static Options AutodetectOptions(BipedRagdollReferences r)
		{
			return default(Options);
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xCC0578", Offset = "0xCC0578", VA = "0xCC0578")]
		public static void Create(BipedRagdollReferences r, Options options)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xCC0F58", Offset = "0xCC0F58", VA = "0xCC0F58")]
		private static void CreateColliders(BipedRagdollReferences r, Options options)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xCC2734", Offset = "0xCC2734", VA = "0xCC2734")]
		private static void CreateHandCollider(Transform hand, Transform lowerArm, Transform root, Options options)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xCC2964", Offset = "0xCC2964", VA = "0xCC2964")]
		private static void CreateFootCollider(Transform foot, Transform lowerLeg, Transform upperLeg, Transform root, Options options)
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xCC2D5C", Offset = "0xCC2D5C", VA = "0xCC2D5C")]
		private static Vector3 GetChildCentroid(Transform t, Vector3 fallback)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xCC1A1C", Offset = "0xCC1A1C", VA = "0xCC1A1C")]
		private static void MassDistribution(BipedRagdollReferences r, Options o)
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xCC1E88", Offset = "0xCC1E88", VA = "0xCC1E88")]
		private static void CreateJoints(BipedRagdollReferences r, Options o)
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xCC2E3C", Offset = "0xCC2E3C", VA = "0xCC2E3C")]
		private static void CreateLimbJoints(Transform connectedBone, Transform bone1, Transform bone2, Transform bone3, Transform root, Vector3 defaultWorldDirection, JointType jointType, CreateJointParams.Limits limits1, CreateJointParams.Limits limits2, CreateJointParams.Limits limits3)
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xCC33E4", Offset = "0xCC33E4", VA = "0xCC33E4")]
		public static void ClearBipedRagdoll(BipedRagdollReferences r)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xCC3854", Offset = "0xCC3854", VA = "0xCC3854")]
		public static bool IsClear(BipedRagdollReferences r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xCC2684", Offset = "0xCC2684", VA = "0xCC2684")]
		private static Vector3 GetUpperArmToHeadCentroid(BipedRagdollReferences r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xCC04D8", Offset = "0xCC04D8", VA = "0xCC04D8")]
		private static Vector3 GetUpperArmCentroid(BipedRagdollReferences r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xCC3958", Offset = "0xCC3958", VA = "0xCC3958")]
		public BipedRagdollCreator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A3")]
	public struct BipedRagdollReferences
	{
		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform root;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform hips;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform spine;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform chest;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform head;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftUpperLeg;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftLowerLeg;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform leftFoot;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightUpperLeg;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightLowerLeg;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightFoot;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftUpperArm;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftLowerArm;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform leftHand;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightUpperArm;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightLowerArm;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform rightHand;

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xCC06D0", Offset = "0xCC06D0", VA = "0xCC06D0")]
		public bool IsValid(string msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xCC39B8", Offset = "0xCC39B8", VA = "0xCC39B8")]
		private bool IsChildRecursive(Transform t, Transform parent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xCC3AB4", Offset = "0xCC3AB4", VA = "0xCC3AB4")]
		public bool IsEmpty(bool considerRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xCC3E44", Offset = "0xCC3E44", VA = "0xCC3E44")]
		public bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xCC345C", Offset = "0xCC345C", VA = "0xCC345C")]
		public Transform[] GetRagdollTransforms()
		{
			return null;
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xCC41D8", Offset = "0xCC41D8", VA = "0xCC41D8")]
		public static BipedRagdollReferences FromAvatar(Animator animator)
		{
			return default(BipedRagdollReferences);
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xCC4460", Offset = "0xCC4460", VA = "0xCC4460")]
		public static BipedRagdollReferences FromBipedReferences(BipedReferences biped)
		{
			return default(BipedRagdollReferences);
		}
	}
	[Token(Token = "0x20001A4")]
	public static class JointConverter
	{
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x8F6D68", Offset = "0x8F6D68", VA = "0x8F6D68")]
		public static void ToConfigurable(GameObject root)
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x8F7298", Offset = "0x8F7298", VA = "0x8F7298")]
		public static void HingeToConfigurable(HingeJoint src)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x8F756C", Offset = "0x8F756C", VA = "0x8F756C")]
		public static void FixedToConfigurable(FixedJoint src)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x8F769C", Offset = "0x8F769C", VA = "0x8F769C")]
		public static void SpringToConfigurable(SpringJoint src)
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x8F7054", Offset = "0x8F7054", VA = "0x8F7054")]
		public static void CharacterToConfigurable(CharacterJoint src)
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x8F7854", Offset = "0x8F7854", VA = "0x8F7854")]
		private static void ConvertJoint(ConfigurableJoint conf, Joint src)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x8F798C", Offset = "0x8F798C", VA = "0x8F798C")]
		private static SoftJointLimit ConvertToHighSoftJointLimit(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x8F7A40", Offset = "0x8F7A40", VA = "0x8F7A40")]
		private static SoftJointLimit ConvertToLowSoftJointLimit(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x8F79F0", Offset = "0x8F79F0", VA = "0x8F79F0")]
		private static SoftJointLimitSpring ConvertToSoftJointLimitSpring(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimitSpring);
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x8F7AA4", Offset = "0x8F7AA4", VA = "0x8F7AA4")]
		private static SoftJointLimit CopyLimit(SoftJointLimit src)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x8F7B04", Offset = "0x8F7B04", VA = "0x8F7B04")]
		private static SoftJointLimitSpring CopyLimitSpring(SoftJointLimitSpring src)
		{
			return default(SoftJointLimitSpring);
		}
	}
	[Token(Token = "0x20001A5")]
	public abstract class RagdollCreator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001A6")]
		public enum ColliderType
		{
			[Token(Token = "0x40008EF")]
			Box,
			[Token(Token = "0x40008F0")]
			Capsule
		}

		[Serializable]
		[Token(Token = "0x20001A7")]
		public enum JointType
		{
			[Token(Token = "0x40008F2")]
			Configurable,
			[Token(Token = "0x40008F3")]
			Character
		}

		[Serializable]
		[Token(Token = "0x20001A8")]
		public enum Direction
		{
			[Token(Token = "0x40008F5")]
			X,
			[Token(Token = "0x40008F6")]
			Y,
			[Token(Token = "0x40008F7")]
			Z
		}

		[Token(Token = "0x20001A9")]
		public struct CreateJointParams
		{
			[Token(Token = "0x20001AA")]
			public struct Limits
			{
				[Token(Token = "0x40008FE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public float minSwing;

				[Token(Token = "0x40008FF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public float maxSwing;

				[Token(Token = "0x4000900")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public float swing2;

				[Token(Token = "0x4000901")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public float twist;

				[Token(Token = "0x6000A6D")]
				[Address(RVA = "0x17D3E8C", Offset = "0x17D3E8C", VA = "0x17D3E8C")]
				public Limits(float minSwing, float maxSwing, float swing2, float twist)
				{
				}
			}

			[Token(Token = "0x40008F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody rigidbody;

			[Token(Token = "0x40008F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody connectedBody;

			[Token(Token = "0x40008FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform child;

			[Token(Token = "0x40008FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 worldSwingAxis;

			[Token(Token = "0x40008FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Limits limits;

			[Token(Token = "0x40008FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public JointType type;

			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0xA79B38", Offset = "0xA79B38", VA = "0xA79B38")]
			public CreateJointParams(Rigidbody rigidbody, Rigidbody connectedBody, Transform child, Vector3 worldSwingAxis, Limits limits, JointType type)
			{
			}
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xC6874C", Offset = "0xC6874C", VA = "0xC6874C")]
		public static void ClearAll(Transform root)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xC68960", Offset = "0xC68960", VA = "0xC68960")]
		protected static void ClearTransform(Transform transform)
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xC68BB4", Offset = "0xC68BB4", VA = "0xC68BB4")]
		protected static void CreateCollider(Transform t, Vector3 startPoint, Vector3 endPoint, ColliderType colliderType, float lengthOverlap, float width)
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xC68F9C", Offset = "0xC68F9C", VA = "0xC68F9C")]
		protected static void CreateCollider(Transform t, Vector3 startPoint, Vector3 endPoint, ColliderType colliderType, float lengthOverlap, float width, float proportionAspect, Vector3 widthDirection)
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xC68EB0", Offset = "0xC68EB0", VA = "0xC68EB0")]
		protected static float GetScaleF(Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xC692C0", Offset = "0xC692C0", VA = "0xC692C0")]
		protected static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xC692D0", Offset = "0xC692D0", VA = "0xC692D0")]
		protected static void Vector3Abs(Vector3 v)
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xC692EC", Offset = "0xC692EC", VA = "0xC692EC")]
		protected static Vector3 DirectionIntToVector3(int dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xC69310", Offset = "0xC69310", VA = "0xC69310")]
		protected static Vector3 DirectionToVector3(Direction dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xC68EE0", Offset = "0xC68EE0", VA = "0xC68EE0")]
		protected static int DirectionVector3ToInt(Vector3 dir)
		{
			return default(int);
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xC69334", Offset = "0xC69334", VA = "0xC69334")]
		protected static Vector3 GetLocalOrthoDirection(Transform transform, Vector3 worldDir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xC694D4", Offset = "0xC694D4", VA = "0xC694D4")]
		protected static Rigidbody GetConnectedBody(Transform bone, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xC69698", Offset = "0xC69698", VA = "0xC69698")]
		protected static void CreateJoint(CreateJointParams p)
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xC69C24", Offset = "0xC69C24", VA = "0xC69C24")]
		private static SoftJointLimit ToSoftJointLimit(float limit)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xC69C58", Offset = "0xC69C58", VA = "0xC69C58")]
		protected RagdollCreator()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62DB94", Offset = "0x62DB94")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62DB94", Offset = "0x62DB94")]
	public class RagdollEditor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001AC")]
		public enum Mode
		{
			[Token(Token = "0x4000907")]
			Colliders,
			[Token(Token = "0x4000908")]
			Joints
		}

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody selectedRigidbody;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Collider selectedCollider;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool symmetry;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Mode mode;

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xC69C60", Offset = "0xC69C60", VA = "0xC69C60")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63C460", Offset = "0x63C460")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xC69CA8", Offset = "0xC69CA8", VA = "0xC69CA8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63C498", Offset = "0x63C498")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xC69CF0", Offset = "0xC69CF0", VA = "0xC69CF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x63C4D0", Offset = "0x63C4D0")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xC69D38", Offset = "0xC69D38", VA = "0xC69D38")]
		public RagdollEditor()
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x20001AD")]
	public class FKOffset : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001AE")]
		public class Offset
		{
			[Token(Token = "0x400090B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x400090C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x400090D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotationOffset;

			[Token(Token = "0x400090E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform t;

			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x7DB46C", Offset = "0x7DB46C", VA = "0x7DB46C")]
			public void Apply(Animator animator)
			{
			}

			[Token(Token = "0x6000A77")]
			[Address(RVA = "0x7DB5E0", Offset = "0x7DB5E0", VA = "0x7DB5E0")]
			public Offset()
			{
			}
		}

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Offset[] offsets;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x8E7130", Offset = "0x8E7130", VA = "0x8E7130")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x8E7194", Offset = "0x8E7194", VA = "0x8E7194")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x8E7210", Offset = "0x8E7210", VA = "0x8E7210")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x8E72F4", Offset = "0x8E72F4", VA = "0x8E72F4")]
		public FKOffset()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DBF4", Offset = "0x62DBF4")]
	public class AnimatorIKDemo : MonoBehaviour
	{
		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftHandIKTarget;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xEDF150", Offset = "0xEDF150", VA = "0xEDF150")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xEDF1B4", Offset = "0xEDF1B4", VA = "0xEDF1B4")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xEDF210", Offset = "0xEDF210", VA = "0xEDF210")]
		public AnimatorIKDemo()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class BallShooter : MonoBehaviour
	{
		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode keyCode;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ball;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 spawnOffset;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 force;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float mass;

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xEE9EF4", Offset = "0xEE9EF4", VA = "0xEE9EF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xEEA11C", Offset = "0xEEA11C", VA = "0xEEA11C")]
		public BallShooter()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class BoardController : MonoBehaviour
	{
		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int groundLayer;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationTarget;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float torque;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float skidDrag;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float turnSensitivity;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody r;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isGrounded;

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xCC7DE4", Offset = "0xCC7DE4", VA = "0xCC7DE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xCC7E48", Offset = "0xCC7E48", VA = "0xCC7E48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xCC7FA8", Offset = "0xCC7FA8", VA = "0xCC7FA8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xCC81E8", Offset = "0xCC81E8", VA = "0xCC81E8")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xCC8244", Offset = "0xCC8244", VA = "0xCC8244")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xCC82A0", Offset = "0xCC82A0", VA = "0xCC82A0")]
		private void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xCC82F8", Offset = "0xCC82F8", VA = "0xCC82F8")]
		public BoardController()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class CharacterAnimationMeleeDemo : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x17000119")]
		private CharacterMeleeDemo melee
		{
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0xB261C0", Offset = "0xB261C0", VA = "0xB261C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xB26240", Offset = "0xB26240", VA = "0xB26240", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xB2674C", Offset = "0xB2674C", VA = "0xB2674C")]
		public CharacterAnimationMeleeDemo()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class CharacterMeleeDemo : CharacterPuppet
	{
		[Serializable]
		[Token(Token = "0x20001B4")]
		public class Action
		{
			[Serializable]
			[Token(Token = "0x20001B5")]
			public class Anim
			{
				[Token(Token = "0x4000928")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string stateName;

				[Token(Token = "0x4000929")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int layer;

				[Token(Token = "0x400092A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public float transitionDuration;

				[Token(Token = "0x400092B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public float fixedTime;

				[Token(Token = "0x6000A8D")]
				[Address(RVA = "0x17D3CA0", Offset = "0x17D3CA0", VA = "0x17D3CA0")]
				public Anim()
				{
				}
			}

			[Token(Token = "0x4000921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int inputActionIndex;

			[Token(Token = "0x4000923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float duration;

			[Token(Token = "0x4000924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float minFrequency;

			[Token(Token = "0x4000925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Anim anim;

			[Token(Token = "0x4000926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] requiredPropTypes;

			[Token(Token = "0x4000927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Booster[] boosters;

			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x7D7CDC", Offset = "0x7D7CDC", VA = "0x7D7CDC")]
			public Action()
			{
			}
		}

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63637C", Offset = "0x63637C")]
		public Action[] actions;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[HideInInspector]
		public int currentActionIndex;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[HideInInspector]
		public float lastActionTime;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float lastActionMoveMag;

		[Token(Token = "0x1700011A")]
		public Action currentAction
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0xB26700", Offset = "0xB26700", VA = "0xB26700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xB296BC", Offset = "0xB296BC", VA = "0xB296BC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xB29748", Offset = "0xB29748", VA = "0xB29748", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xB2996C", Offset = "0xB2996C", VA = "0xB2996C")]
		private bool StartAction(Action action)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xB29B8C", Offset = "0xB29B8C", VA = "0xB29B8C")]
		public CharacterMeleeDemo()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class CharacterPuppet : CharacterThirdPerson
	{
		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6363D4", Offset = "0x6363D4")]
		public PropMuscle propMuscle;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63640C", Offset = "0x63640C")]
		private BehaviourPuppet <puppet>k__BackingField;

		[Token(Token = "0x1700011B")]
		public BehaviourPuppet puppet
		{
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0xB29B9C", Offset = "0xB29B9C", VA = "0xB29B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C508", Offset = "0x63C508")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0xB29BA4", Offset = "0xB29BA4", VA = "0xB29BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C518", Offset = "0x63C518")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xB296C8", Offset = "0xB296C8", VA = "0xB296C8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xB29D1C", Offset = "0xB29D1C", VA = "0xB29D1C", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xB29DE8", Offset = "0xB29DE8", VA = "0xB29DE8", Slot = "9")]
		protected override void Rotate()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xB2A2E4", Offset = "0xB2A2E4", VA = "0xB2A2E4", Slot = "10")]
		protected override bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xB29B98", Offset = "0xB29B98", VA = "0xB29B98")]
		public CharacterPuppet()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class CreatePuppetInRuntime : MonoBehaviour
	{
		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63641C", Offset = "0x63641C")]
		public Transform ragdollPrefab;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636454", Offset = "0x636454")]
		public string instanceName;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63648C", Offset = "0x63648C")]
		public int characterControllerLayer;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6364C4", Offset = "0x6364C4")]
		public int ragdollLayer;

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xAF1B94", Offset = "0xAF1B94", VA = "0xAF1B94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xAF1D14", Offset = "0xAF1D14", VA = "0xAF1D14")]
		public CreatePuppetInRuntime()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class CreateRagdollInRuntime : MonoBehaviour
	{
		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6364FC", Offset = "0x6364FC")]
		public GameObject prefab;

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xAF1D78", Offset = "0xAF1D78", VA = "0xAF1D78")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xAF1F20", Offset = "0xAF1F20", VA = "0xAF1F20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xAF1F24", Offset = "0xAF1F24", VA = "0xAF1F24")]
		public CreateRagdollInRuntime()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class DeathBaker : MonoBehaviour
	{
		[Token(Token = "0x20001BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DC5C", Offset = "0x62DC5C")]
		private sealed class <Bake>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400093D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400093E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400093F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x1700011C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AA3")]
				[Address(RVA = "0x7D8D00", Offset = "0x7D8D00", VA = "0x7D8D00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AA5")]
				[Address(RVA = "0x7D8D48", Offset = "0x7D8D48", VA = "0x7D8D48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x7D8BF0", Offset = "0x7D8BF0", VA = "0x7D8BF0")]
			[DebuggerHidden]
			public <Bake>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x7D8C1C", Offset = "0x7D8C1C", VA = "0x7D8C1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x7D8C20", Offset = "0x7D8C20", VA = "0x7D8C20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x7D8D08", Offset = "0x7D8D08", VA = "0x7D8D08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DC6C", Offset = "0x62DC6C")]
		private sealed class <FadeOutPinWeight>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x1700011E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AA9")]
				[Address(RVA = "0x7D8F4C", Offset = "0x7D8F4C", VA = "0x7D8F4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AAB")]
				[Address(RVA = "0x7D8F94", Offset = "0x7D8F94", VA = "0x7D8F94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x7D8E78", Offset = "0x7D8E78", VA = "0x7D8E78")]
			[DebuggerHidden]
			public <FadeOutPinWeight>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x7D8EA4", Offset = "0x7D8EA4", VA = "0x7D8EA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x7D8EA8", Offset = "0x7D8EA8", VA = "0x7D8EA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x7D8F54", Offset = "0x7D8F54", VA = "0x7D8F54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DC7C", Offset = "0x62DC7C")]
		private sealed class <FadeOutMuscleWeight>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x17000120")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AAF")]
				[Address(RVA = "0x7D8E28", Offset = "0x7D8E28", VA = "0x7D8E28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000121")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AB1")]
				[Address(RVA = "0x7D8E70", Offset = "0x7D8E70", VA = "0x7D8E70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x7D8D50", Offset = "0x7D8D50", VA = "0x7D8D50")]
			[DebuggerHidden]
			public <FadeOutMuscleWeight>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x7D8D7C", Offset = "0x7D8D7C", VA = "0x7D8D7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x7D8D80", Offset = "0x7D8D80", VA = "0x7D8D80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x7D8E30", Offset = "0x7D8E30", VA = "0x7D8E30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636534", Offset = "0x636534")]
		public HumanoidBaker baker;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63656C", Offset = "0x63656C")]
		public float bakeTime;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6365A4", Offset = "0x6365A4")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6365DC", Offset = "0x6365DC")]
		public float fadeOutPinWeightSpeed;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636614", Offset = "0x636614")]
		public float fadeOutMuscleWeightSpeed;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63664C", Offset = "0x63664C")]
		public float deadMuscleWeight;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 defaultPosition;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isDead;

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x9B4F0C", Offset = "0x9B4F0C", VA = "0x9B4F0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x9B4FB8", Offset = "0x9B4FB8", VA = "0x9B4FB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x9B52D8", Offset = "0x9B52D8", VA = "0x9B52D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C528", Offset = "0x63C528")]
		private IEnumerator Bake()
		{
			return null;
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x9B51D8", Offset = "0x9B51D8", VA = "0x9B51D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C590", Offset = "0x63C590")]
		private IEnumerator FadeOutPinWeight()
		{
			return null;
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x9B5258", Offset = "0x9B5258", VA = "0x9B5258")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C5F8", Offset = "0x63C5F8")]
		private IEnumerator FadeOutMuscleWeight()
		{
			return null;
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x9B5358", Offset = "0x9B5358", VA = "0x9B5358")]
		public DeathBaker()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class Destructor : MonoBehaviour
	{
		[Token(Token = "0x20001BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DC8C", Offset = "0x62DC8C")]
		private sealed class <Destruct>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Destructor <>4__this;

			[Token(Token = "0x17000122")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AB8")]
				[Address(RVA = "0x7D9760", Offset = "0x7D9760", VA = "0x7D9760", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000123")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ABA")]
				[Address(RVA = "0x7D97A8", Offset = "0x7D97A8", VA = "0x7D97A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x7D9630", Offset = "0x7D9630", VA = "0x7D9630")]
			[DebuggerHidden]
			public <Destruct>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x7D965C", Offset = "0x7D965C", VA = "0x7D965C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0x7D9660", Offset = "0x7D9660", VA = "0x7D9660", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0x7D9768", Offset = "0x7D9768", VA = "0x7D9768", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x9B7FF0", Offset = "0x9B7FF0", VA = "0x9B7FF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x9B801C", Offset = "0x9B801C", VA = "0x9B801C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C750", Offset = "0x63C750")]
		private IEnumerator Destruct()
		{
			return null;
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x9B809C", Offset = "0x9B809C", VA = "0x9B809C")]
		public Destructor()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class Dying : MonoBehaviour
	{
		[Token(Token = "0x20001C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DC9C", Offset = "0x62DC9C")]
		private sealed class <FadeOutPinWeight>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dying <>4__this;

			[Token(Token = "0x17000124")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AC3")]
				[Address(RVA = "0x7DA380", Offset = "0x7DA380", VA = "0x7DA380", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000125")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AC5")]
				[Address(RVA = "0x7DA3C8", Offset = "0x7DA3C8", VA = "0x7DA3C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0x7DA2AC", Offset = "0x7DA2AC", VA = "0x7DA2AC")]
			[DebuggerHidden]
			public <FadeOutPinWeight>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x7DA2D8", Offset = "0x7DA2D8", VA = "0x7DA2D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x7DA2DC", Offset = "0x7DA2DC", VA = "0x7DA2DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0x7DA388", Offset = "0x7DA388", VA = "0x7DA388", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DCAC", Offset = "0x62DCAC")]
		private sealed class <FadeOutMuscleWeight>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dying <>4__this;

			[Token(Token = "0x17000126")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AC9")]
				[Address(RVA = "0x7DA25C", Offset = "0x7DA25C", VA = "0x7DA25C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000127")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ACB")]
				[Address(RVA = "0x7DA2A4", Offset = "0x7DA2A4", VA = "0x7DA2A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x7DA184", Offset = "0x7DA184", VA = "0x7DA184")]
			[DebuggerHidden]
			public <FadeOutMuscleWeight>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0x7DA1B0", Offset = "0x7DA1B0", VA = "0x7DA1B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0x7DA1B4", Offset = "0x7DA1B4", VA = "0x7DA1B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0x7DA264", Offset = "0x7DA264", VA = "0x7DA264", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636684", Offset = "0x636684")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6366BC", Offset = "0x6366BC")]
		public float fadeOutPinWeightSpeed;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6366F4", Offset = "0x6366F4")]
		public float fadeOutMuscleWeightSpeed;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63672C", Offset = "0x63672C")]
		public float deadMuscleWeight;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isDead;

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x9BABC8", Offset = "0x9BABC8", VA = "0x9BABC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x9BAC74", Offset = "0x9BAC74", VA = "0x9BAC74")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x9BAE64", Offset = "0x9BAE64", VA = "0x9BAE64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C808", Offset = "0x63C808")]
		private IEnumerator FadeOutPinWeight()
		{
			return null;
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x9BAEE4", Offset = "0x9BAEE4", VA = "0x9BAEE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C870", Offset = "0x63C870")]
		private IEnumerator FadeOutMuscleWeight()
		{
			return null;
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x9BAF64", Offset = "0x9BAF64", VA = "0x9BAF64")]
		public Dying()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DCBC", Offset = "0x62DCBC")]
	public class FXCollisionBlood : MonoBehaviour
	{
		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minCollisionImpulse;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int emission;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float emissionImpulseAdd;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxEmission;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem particles;

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x8E72FC", Offset = "0x8E72FC", VA = "0x8E72FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x8E7400", Offset = "0x8E7400", VA = "0x8E7400")]
		private void OnCollisionImpulse(MuscleCollision m, float impulse)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x8E7654", Offset = "0x8E7654", VA = "0x8E7654")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x8E777C", Offset = "0x8E777C", VA = "0x8E777C")]
		public FXCollisionBlood()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class Grab : MonoBehaviour
	{
		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636764", Offset = "0x636764")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63679C", Offset = "0x63679C")]
		public UserControlMelee userControl;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6367D4", Offset = "0x6367D4")]
		public int grabLayer;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool grabbed;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody r;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider c;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BehaviourPuppet otherPuppet;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider otherCollider;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ConfigurableJoint joint;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float nextGrabTime;

		[Token(Token = "0x4000968")]
		private const float massMlp = 5f;

		[Token(Token = "0x4000969")]
		private const int solverIterationMlp = 10;

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x8EBA44", Offset = "0x8EBA44", VA = "0x8EBA44")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x8EBAD8", Offset = "0x8EBAD8", VA = "0x8EBAD8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x8EBED0", Offset = "0x8EBED0", VA = "0x8EBED0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x8EC014", Offset = "0x8EC014", VA = "0x8EC014")]
		public Grab()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class Killing : MonoBehaviour
	{
		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63680C", Offset = "0x63680C")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636844", Offset = "0x636844")]
		public PuppetMaster.StateSettings stateSettings;

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x8F7C48", Offset = "0x8F7C48", VA = "0x8F7C48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x8F7D18", Offset = "0x8F7D18", VA = "0x8F7D18")]
		public Killing()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DD24", Offset = "0x62DD24")]
	public class LayerSetup : MonoBehaviour
	{
		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63687C", Offset = "0x63687C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63687C", Offset = "0x63687C")]
		public Transform characterController;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6368DC", Offset = "0x6368DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6368DC", Offset = "0x6368DC")]
		public int characterControllerLayer;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63693C", Offset = "0x63693C")]
		public int ragdollLayer;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636974", Offset = "0x636974")]
		public LayerMask ignoreCollisionWithCharacterController;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6369AC", Offset = "0x6369AC")]
		public LayerMask ignoreCollisionWithRagdoll;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PuppetMaster puppetMaster;

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xBA44DC", Offset = "0xBA44DC", VA = "0xBA44DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xBA46EC", Offset = "0xBA46EC", VA = "0xBA46EC")]
		public LayerSetup()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class NavMeshPuppet : MonoBehaviour
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator animator;

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x12E6608", Offset = "0x12E6608", VA = "0x12E6608")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x12E6700", Offset = "0x12E6700", VA = "0x12E6700")]
		public NavMeshPuppet()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class Planet : MonoBehaviour
	{
		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mass;

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x9755CC", Offset = "0x9755CC", VA = "0x9755CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x9756D0", Offset = "0x9756D0", VA = "0x9756D0")]
		public Planet()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class PlanetaryGravity : MonoBehaviour
	{
		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Planet planet;

		[Token(Token = "0x4000978")]
		private const float G = 6.672E-11f;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _r;

		[Token(Token = "0x17000128")]
		private Rigidbody r
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x9756E0", Offset = "0x9756E0", VA = "0x9756E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x975794", Offset = "0x975794", VA = "0x975794")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x97587C", Offset = "0x97587C", VA = "0x97587C")]
		private void ApplyGravity(Rigidbody r)
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x97599C", Offset = "0x97599C", VA = "0x97599C")]
		public PlanetaryGravity()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class PropDemo : MonoBehaviour
	{
		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6369E4", Offset = "0x6369E4")]
		public PuppetMasterProp prop;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636A1C", Offset = "0x636A1C")]
		public PropMuscle propMuscleLeft;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636A54", Offset = "0x636A54")]
		public PropMuscle propMuscleRight;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636A8C", Offset = "0x636A8C")]
		public bool pickUpOnAwake;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool right;

		[Token(Token = "0x17000129")]
		private PropMuscle connectTo
		{
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x979234", Offset = "0x979234", VA = "0x979234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x9791E8", Offset = "0x9791E8", VA = "0x9791E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x979250", Offset = "0x979250", VA = "0x979250")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x979328", Offset = "0x979328", VA = "0x979328")]
		public PropDemo()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class PropMelee : Prop
	{
		[Token(Token = "0x20001CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DD8C", Offset = "0x62DD8C")]
		private sealed class <Action>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400098A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400098B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PropMelee <>4__this;

			[Token(Token = "0x400098C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x400098D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <additionalPinMuscleIndex>5__2;

			[Token(Token = "0x1700012A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AED")]
				[Address(RVA = "0x80A4CC", Offset = "0x80A4CC", VA = "0x80A4CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AEF")]
				[Address(RVA = "0x80A514", Offset = "0x80A514", VA = "0x80A514", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x80A264", Offset = "0x80A264", VA = "0x80A264")]
			[DebuggerHidden]
			public <Action>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x80A290", Offset = "0x80A290", VA = "0x80A290", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x80A294", Offset = "0x80A294", VA = "0x80A294", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x80A4D4", Offset = "0x80A4D4", VA = "0x80A4D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x636AC4", Offset = "0x636AC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636AC4", Offset = "0x636AC4")]
		public CapsuleCollider capsuleCollider;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636B24", Offset = "0x636B24")]
		public BoxCollider boxCollider;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636B5C", Offset = "0x636B5C")]
		public float actionColliderRadiusMlp;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636B94", Offset = "0x636B94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636B94", Offset = "0x636B94")]
		public float actionAdditionalPinWeight;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636BE8", Offset = "0x636BE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636BE8", Offset = "0x636BE8")]
		public float actionMassMlp;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636C40", Offset = "0x636C40")]
		public Vector3 COMOffset;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float defaultColliderRadius;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float defaultMass;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float defaultAddMass;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rigidbody r;

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x979338", Offset = "0x979338", VA = "0x979338")]
		public void StartAction(float duration)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x979380", Offset = "0x979380", VA = "0x979380")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C978", Offset = "0x63C978")]
		public IEnumerator Action(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x979410", Offset = "0x979410", VA = "0x979410", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x9794D8", Offset = "0x9794D8", VA = "0x9794D8", Slot = "4")]
		protected override void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x979550", Offset = "0x979550", VA = "0x979550", Slot = "5")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x9795C8", Offset = "0x9795C8", VA = "0x9795C8")]
		public PropMelee()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class PropPickUpTrigger : MonoBehaviour
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMasterProp prop;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask characterLayers;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterPuppet characterPuppet;

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x97AAE4", Offset = "0x97AAE4", VA = "0x97AAE4")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x97AC90", Offset = "0x97AC90", VA = "0x97AC90")]
		public PropPickUpTrigger()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class PuppetBoard : MonoBehaviour
	{
		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636C78", Offset = "0x636C78")]
		public Rigidbody target;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636CB0", Offset = "0x636CB0")]
		public Transform bodyTargetPivot;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636CE8", Offset = "0x636CE8")]
		public Transform bodyTarget;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody r;

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x97CBA8", Offset = "0x97CBA8", VA = "0x97CBA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x97CC60", Offset = "0x97CC60", VA = "0x97CC60")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x97CDE0", Offset = "0x97CDE0", VA = "0x97CDE0")]
		public PuppetBoard()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class PuppetMasterPropMelee : PuppetMasterProp
	{
		[Token(Token = "0x20001CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DD9C", Offset = "0x62DD9C")]
		private sealed class <Action>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400099E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400099F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMasterPropMelee <>4__this;

			[Token(Token = "0x40009A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x1700012C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AFE")]
				[Address(RVA = "0xA79974", Offset = "0xA79974", VA = "0xA79974", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B00")]
				[Address(RVA = "0xA799BC", Offset = "0xA799BC", VA = "0xA799BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0xA79828", Offset = "0xA79828", VA = "0xA79828")]
			[DebuggerHidden]
			public <Action>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0xA79854", Offset = "0xA79854", VA = "0xA79854", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0xA79858", Offset = "0xA79858", VA = "0xA79858", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0xA7997C", Offset = "0xA7997C", VA = "0xA7997C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636D20", Offset = "0x636D20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x636D20", Offset = "0x636D20")]
		public CapsuleCollider capsuleCollider;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636D80", Offset = "0x636D80")]
		public BoxCollider boxCollider;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636DB8", Offset = "0x636DB8")]
		public float actionColliderRadiusMlp;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636DF0", Offset = "0x636DF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636DF0", Offset = "0x636DF0")]
		public float actionAdditionalPinWeight;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636E44", Offset = "0x636E44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636E44", Offset = "0x636E44")]
		public float actionMassMlp;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636E98", Offset = "0x636E98")]
		public Vector3 COMOffset;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float defaultColliderRadius;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float defaultMass;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float defaultAdditionalPinWeight;

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xC6520C", Offset = "0xC6520C", VA = "0xC6520C")]
		public void StartAction(float duration)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xC65254", Offset = "0xC65254", VA = "0xC65254")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63CA30", Offset = "0x63CA30")]
		public IEnumerator Action(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xC652E4", Offset = "0xC652E4", VA = "0xC652E4", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xC6534C", Offset = "0xC6534C", VA = "0xC6534C", Slot = "4")]
		protected override void OnPickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xC653F4", Offset = "0xC653F4", VA = "0xC653F4", Slot = "5")]
		protected override void OnDrop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xC65458", Offset = "0xC65458", VA = "0xC65458")]
		public PuppetMasterPropMelee()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class PuppetScaling : MonoBehaviour
	{
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636ED0", Offset = "0x636ED0")]
		public float masterScale;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int muscleIndex;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636EEC", Offset = "0x636EEC")]
		public float muscleScale;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float defaultMuscleSpring;

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xC6696C", Offset = "0xC6696C", VA = "0xC6696C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xC669AC", Offset = "0xC669AC", VA = "0xC669AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xC66CC0", Offset = "0xC66CC0", VA = "0xC66CC0")]
		public PuppetScaling()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class RaycastShooter : MonoBehaviour
	{
		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layers;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float unpin;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float force;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem blood;

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xC6BA64", Offset = "0xC6BA64", VA = "0xC6BA64")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xC6BCBC", Offset = "0xC6BCBC", VA = "0xC6BCBC")]
		public RaycastShooter()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class Respawning : MonoBehaviour
	{
		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636F08", Offset = "0x636F08")]
		public Transform pool;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636F40", Offset = "0x636F40")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636F78", Offset = "0x636F78")]
		public string idleAnimation;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform puppetRoot;

		[Token(Token = "0x1700012E")]
		private bool isPooled
		{
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0xC6BDF4", Offset = "0xC6BDF4", VA = "0xC6BDF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xC6BE88", Offset = "0xC6BE88", VA = "0xC6BE88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xC6BEF0", Offset = "0xC6BEF0", VA = "0xC6BEF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xC6C024", Offset = "0xC6C024", VA = "0xC6C024")]
		private void Pool()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xC6C04C", Offset = "0xC6C04C", VA = "0xC6C04C")]
		private void Respawn(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xC6C17C", Offset = "0xC6C17C", VA = "0xC6C17C")]
		public Respawning()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class RotateShoulderToTarget : MonoBehaviour
	{
		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform shoulder;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 euler;

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xC6C360", Offset = "0xC6C360", VA = "0xC6C360")]
		private void OnPuppetMasterRead()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xC6C3F8", Offset = "0xC6C3F8", VA = "0xC6C3F8")]
		public RotateShoulderToTarget()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class SkeletonDisconnector : MonoBehaviour
	{
		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Skeleton skeleton;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MuscleDisconnectMode disconnectMuscleMode;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask layers;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float unpin;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float force;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem particles;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PropMuscle propMuscle;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PuppetMasterProp prop;

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xC6F760", Offset = "0xC6F760", VA = "0xC6F760")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xC6FB2C", Offset = "0xC6FB2C", VA = "0xC6FB2C")]
		public SkeletonDisconnector()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class SkeletonShooter : MonoBehaviour
	{
		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Skeleton skeleton;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MuscleRemoveMode removeMuscleMode;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask layers;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float unpin;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float force;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem particles;

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xC6FB3C", Offset = "0xC6FB3C", VA = "0xC6FB3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xC6FE80", Offset = "0xC6FE80", VA = "0xC6FE80")]
		public SkeletonShooter()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class UserControlAIMelee : UserControlThirdPerson
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BehaviourPuppet targetPuppet;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isAttacking;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float attackTimer;

		[Token(Token = "0x1700012F")]
		private Transform moveTarget
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x9C4728", Offset = "0x9C4728", VA = "0x9C4728")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x9C477C", Offset = "0x9C477C", VA = "0x9C477C", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x9C492C", Offset = "0x9C492C", VA = "0x9C492C")]
		private bool CanAttack()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x9C4A48", Offset = "0x9C4A48", VA = "0x9C4A48")]
		public UserControlAIMelee()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class UserControlMelee : UserControlThirdPerson
	{
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KeyCode hitKey;

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x9C4A74", Offset = "0x9C4A74", VA = "0x9C4A74", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x9C4D48", Offset = "0x9C4D48", VA = "0x9C4D48")]
		public UserControlMelee()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x17000130")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0xB25D68", Offset = "0xB25D68", VA = "0xB25D68", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xB25D44", Offset = "0xB25D44", VA = "0xB25D44", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xB25D70", Offset = "0xB25D70", VA = "0xB25D70")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xB25DD4", Offset = "0xB25DD4", VA = "0xB25DD4", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xB25F74", Offset = "0xB25F74", VA = "0xB25F74", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xB26198", Offset = "0xB26198", VA = "0xB26198", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xB25F84", Offset = "0xB25F84", VA = "0xB25F84")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xB261A8", Offset = "0xB261A8", VA = "0xB261A8")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DDAC", Offset = "0x62DDAC")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pivotOffset;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xB26794", Offset = "0xB26794", VA = "0xB26794", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xB26800", Offset = "0xB26800", VA = "0xB26800", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xB2689C", Offset = "0xB2689C", VA = "0xB2689C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xB269B4", Offset = "0xB269B4", VA = "0xB269B4")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DE14", Offset = "0x62DE14")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636FE0", Offset = "0x636FE0")]
		[SerializeField]
		private float animSpeedMultiplier;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x40009D9")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x40009DA")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x17000131")]
		public override bool animationGrounded
		{
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0xB26A80", Offset = "0xB26A80", VA = "0xB26A80", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xB269CC", Offset = "0xB269CC", VA = "0xB269CC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xB26A60", Offset = "0xB26A60", VA = "0xB26A60", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xB26338", Offset = "0xB26338", VA = "0xB26338", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xB26B78", Offset = "0xB26B78", VA = "0xB26B78")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xB26770", Offset = "0xB26770", VA = "0xB26770")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DE7C", Offset = "0x62DE7C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DE7C", Offset = "0x62DE7C")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x637024", Offset = "0x637024")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x637024", Offset = "0x637024")]
		public Transform gravityTarget;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x637084", Offset = "0x637084")]
		public float gravityMultiplier;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float airborneThreshold;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slopeStartAngle;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeEndAngle;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spherecastRadius;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask groundLayers;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x40009E6")]
		protected const float half = 0.5f;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x6000B2A")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xB26C80", Offset = "0xB26C80", VA = "0xB26C80")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xB26DB8", Offset = "0xB26DB8", VA = "0xB26DB8", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xB26FA0", Offset = "0xB26FA0", VA = "0xB26FA0", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xB27144", Offset = "0xB27144", VA = "0xB27144")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xB271A8", Offset = "0xB271A8", VA = "0xB271A8")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xB272C8", Offset = "0xB272C8", VA = "0xB272C8")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xB273EC", Offset = "0xB273EC", VA = "0xB273EC")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xB27414", Offset = "0xB27414", VA = "0xB27414")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xB2743C", Offset = "0xB2743C", VA = "0xB2743C")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xB2749C", Offset = "0xB2749C", VA = "0xB2749C")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x20001DD")]
		public enum MoveMode
		{
			[Token(Token = "0x4000A23")]
			Directional,
			[Token(Token = "0x4000A24")]
			Strafe
		}

		[Token(Token = "0x20001DE")]
		public struct AnimState
		{
			[Token(Token = "0x4000A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x4000A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x4000A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x4000A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x20001DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DF18", Offset = "0x62DF18")]
		private sealed class <JumpSmooth>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x4000A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 jumpVelocity;

			[Token(Token = "0x4000A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__2;

			[Token(Token = "0x4000A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x17000133")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B4A")]
				[Address(RVA = "0x7D7E1C", Offset = "0x7D7E1C", VA = "0x7D7E1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000134")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B4C")]
				[Address(RVA = "0x7D7E64", Offset = "0x7D7E64", VA = "0x7D7E64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B47")]
			[Address(RVA = "0x7D7CEC", Offset = "0x7D7CEC", VA = "0x7D7CEC")]
			[DebuggerHidden]
			public <JumpSmooth>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6000B48")]
			[Address(RVA = "0x7D7D18", Offset = "0x7D7D18", VA = "0x7D7D18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B49")]
			[Address(RVA = "0x7D7D1C", Offset = "0x7D7D1C", VA = "0x7D7D1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0x7D7E24", Offset = "0x7D7E24", VA = "0x7D7E24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6370BC", Offset = "0x6370BC")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6370F4", Offset = "0x6370F4")]
		public MoveMode moveMode;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63712C", Offset = "0x63712C")]
		public bool lookInCameraDirection;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x637164", Offset = "0x637164")]
		public bool smoothJump;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airSpeed;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float airControl;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpPower;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63719C", Offset = "0x63719C")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMaxLength;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6371D4", Offset = "0x6371D4")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63720C", Offset = "0x63720C")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public AnimState animState;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Vector3 moveDirection;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool fixedFrame;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float wallRunEndTime;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Vector3 gravity;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float velocityY;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool doubleJumped;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		private bool jumpReleased;

		[Token(Token = "0x17000132")]
		public bool onGround
		{
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0xB2A544", Offset = "0xB2A544", VA = "0xB2A544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63CAE8", Offset = "0x63CAE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0xB2A54C", Offset = "0xB2A54C", VA = "0xB2A54C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63CAF8", Offset = "0x63CAF8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xB29BB4", Offset = "0xB29BB4", VA = "0xB29BB4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xB2A558", Offset = "0xB2A558", VA = "0xB2A558")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xB29D6C", Offset = "0xB29D6C", VA = "0xB29D6C", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xB2A5E8", Offset = "0xB2A5E8", VA = "0xB2A5E8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xB29B04", Offset = "0xB29B04", VA = "0xB29B04", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xB2B39C", Offset = "0xB2B39C", VA = "0xB2B39C", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xB2AAE0", Offset = "0xB2AAE0", VA = "0xB2AAE0")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xB2B480", Offset = "0xB2B480", VA = "0xB2B480")]
		private void WallRun()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xB2B924", Offset = "0xB2B924", VA = "0xB2B924")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xB2B1CC", Offset = "0xB2B1CC", VA = "0xB2B1CC")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xB29FA0", Offset = "0xB29FA0", VA = "0xB29FA0", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xB2B9C4", Offset = "0xB2B9C4", VA = "0xB2B9C4")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xB2A314", Offset = "0xB2A314", VA = "0xB2A314", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xB2BAB4", Offset = "0xB2BAB4", VA = "0xB2BAB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63CB08", Offset = "0x63CB08")]
		private IEnumerator JumpSmooth(Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xB2AE30", Offset = "0xB2AE30", VA = "0xB2AE30")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xB2A474", Offset = "0xB2A474", VA = "0xB2A474")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DF28", Offset = "0x62DF28")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001E1")]
		public enum RotationMode
		{
			[Token(Token = "0x4000A40")]
			Smooth,
			[Token(Token = "0x4000A41")]
			Linear
		}

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63721C", Offset = "0x63721C")]
		public CameraController cameraController;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x637254", Offset = "0x637254")]
		public float accelerationTime;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63728C", Offset = "0x63728C")]
		public float turnTime;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6372C4", Offset = "0x6372C4")]
		public bool walkByDefault;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6372FC", Offset = "0x6372FC")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x637334", Offset = "0x637334")]
		public float moveSpeed;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63736C", Offset = "0x63736C")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x17000135")]
		public bool isGrounded
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0xC6EBF0", Offset = "0xC6EBF0", VA = "0xC6EBF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63CBC0", Offset = "0x63CBC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0xC6EBF8", Offset = "0xC6EBF8", VA = "0xC6EBF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63CBD0", Offset = "0x63CBD0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xC6EC04", Offset = "0xC6EC04", VA = "0xC6EC04")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xC6ECB0", Offset = "0xC6ECB0", VA = "0xC6ECB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xC6F170", Offset = "0xC6F170", VA = "0xC6F170")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xC6ED04", Offset = "0xC6ED04", VA = "0xC6ED04")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xC6EF84", Offset = "0xC6EF84", VA = "0xC6EF84")]
		private void Move()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xC6F1AC", Offset = "0xC6F1AC", VA = "0xC6F1AC")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xC6F250", Offset = "0xC6F250", VA = "0xC6F250")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xC6F2DC", Offset = "0xC6F2DC", VA = "0xC6F2DC")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x10EFFDC", Offset = "0x10EFFDC", VA = "0x10EFFDC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x10F0024", Offset = "0x10F0024", VA = "0x10F0024", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x10F01E8", Offset = "0x10F01E8", VA = "0x10F01E8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x10F0218", Offset = "0x10F0218", VA = "0x10F0218")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x20001E4")]
		public struct State
		{
			[Token(Token = "0x4000A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x4000A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x4000A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x4000A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x9C4D58", Offset = "0x9C4D58", VA = "0x9C4D58", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x9C4AA8", Offset = "0x9C4AA8", VA = "0x9C4AA8", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x9C4A64", Offset = "0x9C4A64", VA = "0x9C4A64")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xEDF314", Offset = "0xEDF314", VA = "0xEDF314")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xEDF350", Offset = "0xEDF350", VA = "0xEDF350")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouse0;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool mouse1;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoTimeScale;

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xC70BFC", Offset = "0xC70BFC", VA = "0xC70BFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xC70C30", Offset = "0xC70C30", VA = "0xC70C30")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xC70CE0", Offset = "0xC70CE0", VA = "0xC70CE0")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E7")]
	public class Navigator
	{
		[Token(Token = "0x20001E8")]
		public enum State
		{
			[Token(Token = "0x4000A63")]
			Idle,
			[Token(Token = "0x4000A64")]
			Seeking,
			[Token(Token = "0x4000A65")]
			OnPath
		}

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63737C", Offset = "0x63737C")]
		public bool activeTargetSeeking;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6373B4", Offset = "0x6373B4")]
		public float cornerRadius;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6373EC", Offset = "0x6373EC")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x637424", Offset = "0x637424")]
		public float maxSampleDistance;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63745C", Offset = "0x63745C")]
		public float nextPathInterval;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x637494", Offset = "0x637494")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6374A4", Offset = "0x6374A4")]
		private State <state>k__BackingField;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x17000136")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0x12E6708", Offset = "0x12E6708", VA = "0x12E6708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63CBE0", Offset = "0x63CBE0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0x12E6714", Offset = "0x12E6714", VA = "0x12E6714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63CBF0", Offset = "0x63CBF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public State state
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x12E6720", Offset = "0x12E6720", VA = "0x12E6720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63CC00", Offset = "0x63CC00")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x12E6728", Offset = "0x12E6728", VA = "0x12E6728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63CC10", Offset = "0x63CC10")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x12E6730", Offset = "0x12E6730", VA = "0x12E6730")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x12E680C", Offset = "0x12E680C", VA = "0x12E680C")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x12E6BFC", Offset = "0x12E6BFC", VA = "0x12E6BFC")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x12E6C78", Offset = "0x12E6C78", VA = "0x12E6C78")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x12E6BB8", Offset = "0x12E6BB8", VA = "0x12E6BB8")]
		private void Stop()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x12E6BE8", Offset = "0x12E6BE8", VA = "0x12E6BE8")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x12E6DBC", Offset = "0x12E6DBC", VA = "0x12E6DBC")]
		public void Visualize()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x12E6F6C", Offset = "0x12E6F6C", VA = "0x12E6F6C")]
		public Navigator()
		{
		}
	}
}
namespace ginra
{
	[Token(Token = "0x20001E9")]
	public class mug : MonoBehaviour
	{
		[Token(Token = "0x20001EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DF90", Offset = "0x62DF90")]
		private sealed class <set_image>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4000A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public mug <>4__this;

			[Token(Token = "0x4000A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <cached>5__2;

			[Token(Token = "0x4000A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <localName>5__3;

			[Token(Token = "0x4000A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <uwr>5__4;

			[Token(Token = "0x17000138")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B76")]
				[Address(RVA = "0xB4FF24", Offset = "0xB4FF24", VA = "0xB4FF24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000139")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B78")]
				[Address(RVA = "0xB4FF6C", Offset = "0xB4FF6C", VA = "0xB4FF6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B72")]
			[Address(RVA = "0xB4FAA0", Offset = "0xB4FAA0", VA = "0xB4FAA0")]
			[DebuggerHidden]
			public <set_image>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xB4FACC", Offset = "0xB4FACC", VA = "0xB4FACC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B74")]
			[Address(RVA = "0xB4FB9C", Offset = "0xB4FB9C", VA = "0xB4FB9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B75")]
			[Address(RVA = "0xB4FAE8", Offset = "0xB4FAE8", VA = "0xB4FAE8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xB4FF2C", Offset = "0xB4FF2C", VA = "0xB4FF2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI[] ui_texts;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RawImage[] ui_images;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer rend;

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x118E8CC", Offset = "0x118E8CC", VA = "0x118E8CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x118EBAC", Offset = "0x118EBAC", VA = "0x118EBAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63CC20", Offset = "0x63CC20")]
		private IEnumerator set_image(string url)
		{
			return null;
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x118EC40", Offset = "0x118EC40", VA = "0x118EC40")]
		public mug()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class bullet : MonoBehaviour
	{
		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject shell;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public sound source;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 origin;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 target;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 next;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float speed;

		[Token(Token = "0x4000A76")]
		private const float speed_factor = 25f;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastHit[] hits;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RaycastHit hit;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool hashit;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int damage;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private npc npc;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float maxlife;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool pass_target;

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x9CA268", Offset = "0x9CA268", VA = "0x9CA268")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x9CA308", Offset = "0x9CA308", VA = "0x9CA308")]
		public void fire(Vector3 _origin, Vector3 _target, float _speed, int _damage, npc _npc)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x9CA3A0", Offset = "0x9CA3A0", VA = "0x9CA3A0")]
		public void explode(Collider col)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x9CA7AC", Offset = "0x9CA7AC", VA = "0x9CA7AC")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x9CACB4", Offset = "0x9CACB4", VA = "0x9CACB4")]
		public bullet()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class lips : MonoBehaviour
	{
		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] gos;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float delta;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float pass;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float seconds;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool speaking;

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xC0A538", Offset = "0xC0A538", VA = "0xC0A538")]
		public void speak(float duration)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xC0A584", Offset = "0xC0A584", VA = "0xC0A584")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xC0A70C", Offset = "0xC0A70C", VA = "0xC0A70C")]
		public lips()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class ragdoll : MonoBehaviour
	{
		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool ragdolled;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator ani;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public npc npc;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool HaveRagdoll;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Rigidbody hips;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<ragdoll_bone> bones;

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xC1D8DC", Offset = "0xC1D8DC", VA = "0xC1D8DC")]
		public ragdoll_bone get_head()
		{
			return null;
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xC1DA18", Offset = "0xC1DA18", VA = "0xC1DA18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xC1DB68", Offset = "0xC1DB68", VA = "0xC1DB68")]
		private void enable_ragdoll()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xC1DDE8", Offset = "0xC1DDE8", VA = "0xC1DDE8")]
		private void disable_ragdoll()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xC1E064", Offset = "0xC1E064", VA = "0xC1E064")]
		public void mode(bool _state)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xC1E070", Offset = "0xC1E070", VA = "0xC1E070")]
		public bool is_moving()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xC1E258", Offset = "0xC1E258", VA = "0xC1E258")]
		public void force(Vector3 point, Vector3 normal, Vector3 direction, float force, float air_force = 2f)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xC1E2BC", Offset = "0xC1E2BC", VA = "0xC1E2BC")]
		public ragdoll()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class ragdoll_bone : hitable
	{
		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ragdoll ragdoll;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HumanBodyBones type;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rigidbody rb;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider col;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Joint joint;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Rigidbody joint_rb;

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xC1E348", Offset = "0xC1E348", VA = "0xC1E348", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xC1E4B4", Offset = "0xC1E4B4", VA = "0xC1E4B4")]
		public ragdoll_bone()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class build : MonoBehaviour
	{
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x9CA260", Offset = "0x9CA260", VA = "0x9CA260")]
		public build()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class activevar : MonoBehaviour
	{
		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string varname;

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x9C8CE0", Offset = "0x9C8CE0", VA = "0x9C8CE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x9C8D88", Offset = "0x9C8D88", VA = "0x9C8D88")]
		public activevar()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class animator_state : StateMachineBehaviour
	{
		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool ended;

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x9C8DEC", Offset = "0x9C8DEC", VA = "0x9C8DEC", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x9C8DF4", Offset = "0x9C8DF4", VA = "0x9C8DF4", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x9C8EE4", Offset = "0x9C8EE4", VA = "0x9C8EE4", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x9C8EEC", Offset = "0x9C8EEC", VA = "0x9C8EEC")]
		public animator_state()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class banner : MonoBehaviour
	{
		[Token(Token = "0x20001F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DFA0", Offset = "0x62DFA0")]
		private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public banner <>4__this;

			[Token(Token = "0x1700013A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B9C")]
				[Address(RVA = "0xA7CA4C", Offset = "0xA7CA4C", VA = "0xA7CA4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B9E")]
				[Address(RVA = "0xA7CA94", Offset = "0xA7CA94", VA = "0xA7CA94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xA7C88C", Offset = "0xA7C88C", VA = "0xA7C88C")]
			[DebuggerHidden]
			public <Start>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0xA7C8B8", Offset = "0xA7C8B8", VA = "0xA7C8B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0xA7C8BC", Offset = "0xA7C8BC", VA = "0xA7C8BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xA7CA54", Offset = "0xA7CA54", VA = "0xA7CA54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DFB0", Offset = "0x62DFB0")]
		private sealed class <set_image>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4000AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public banner <>4__this;

			[Token(Token = "0x4000AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <cached>5__2;

			[Token(Token = "0x4000AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <localName>5__3;

			[Token(Token = "0x4000AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <uwr>5__4;

			[Token(Token = "0x1700013C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BA3")]
				[Address(RVA = "0xA7CE8C", Offset = "0xA7CE8C", VA = "0xA7CE8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BA5")]
				[Address(RVA = "0xA7CED4", Offset = "0xA7CED4", VA = "0xA7CED4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0xA7CA9C", Offset = "0xA7CA9C", VA = "0xA7CA9C")]
			[DebuggerHidden]
			public <set_image>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0xA7CAC8", Offset = "0xA7CAC8", VA = "0xA7CAC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0xA7CB98", Offset = "0xA7CB98", VA = "0xA7CB98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0xA7CAE4", Offset = "0xA7CAE4", VA = "0xA7CAE4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0xA7CE94", Offset = "0xA7CE94", VA = "0xA7CE94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string banner_name;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public custombutton button;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RawImage ui_image;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float scale;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool action_url;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string url;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string param_name;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string param_value;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool dynamic;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool changeScale;

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x9C9340", Offset = "0x9C9340", VA = "0x9C9340")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x9C93B0", Offset = "0x9C93B0", VA = "0x9C93B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63CCD8", Offset = "0x63CCD8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x9C9430", Offset = "0x9C9430", VA = "0x9C9430")]
		private bool draw_contest()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x9C9494", Offset = "0x9C9494", VA = "0x9C9494")]
		private bool draw()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x9C96E8", Offset = "0x9C96E8", VA = "0x9C96E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63CD40", Offset = "0x63CD40")]
		private IEnumerator set_image(string url)
		{
			return null;
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x9C977C", Offset = "0x9C977C", VA = "0x9C977C")]
		public void click()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x9C9928", Offset = "0x9C9928", VA = "0x9C9928")]
		public banner()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class bomb : hitable
	{
		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool armed;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool exploded;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject model;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject effect;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float impact_radius;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float impact_force;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int damage;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int player_damage;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bomb_event on_explode;

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x9C99AC", Offset = "0x9C99AC", VA = "0x9C99AC", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x9C99B0", Offset = "0x9C99B0", VA = "0x9C99B0")]
		private void explode()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x9C9E14", Offset = "0x9C9E14", VA = "0x9C9E14")]
		public void Test()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x9C9E18", Offset = "0x9C9E18", VA = "0x9C9E18")]
		public bomb()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class bootcamp_target : hitable
	{
		[Token(Token = "0x20001F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DFC0", Offset = "0x62DFC0")]
		private sealed class <wake>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bootcamp_target <>4__this;

			[Token(Token = "0x4000ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4000ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <left>5__3;

			[Token(Token = "0x1700013E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BB4")]
				[Address(RVA = "0xA7D3B4", Offset = "0xA7D3B4", VA = "0xA7D3B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BB6")]
				[Address(RVA = "0xA7D3FC", Offset = "0xA7D3FC", VA = "0xA7D3FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xA7D15C", Offset = "0xA7D15C", VA = "0xA7D15C")]
			[DebuggerHidden]
			public <wake>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0xA7D188", Offset = "0xA7D188", VA = "0xA7D188", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xA7D18C", Offset = "0xA7D18C", VA = "0xA7D18C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0xA7D3BC", Offset = "0xA7D3BC", VA = "0xA7D3BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DFD0", Offset = "0x62DFD0")]
		private sealed class <kill>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bootcamp_target <>4__this;

			[Token(Token = "0x4000AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4000AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <left>5__3;

			[Token(Token = "0x17000140")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BBA")]
				[Address(RVA = "0xA7D10C", Offset = "0xA7D10C", VA = "0xA7D10C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000141")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BBC")]
				[Address(RVA = "0xA7D154", Offset = "0xA7D154", VA = "0xA7D154", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0xA7CEDC", Offset = "0xA7CEDC", VA = "0xA7CEDC")]
			[DebuggerHidden]
			public <kill>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0xA7CF08", Offset = "0xA7CF08", VA = "0xA7CF08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xA7CF0C", Offset = "0xA7CF0C", VA = "0xA7CF0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xA7D114", Offset = "0xA7D114", VA = "0xA7D114", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool moving;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool alive;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform model;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 model_up;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 model_down;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 model_from;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 model_to;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private sound sound;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float direction;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool waked;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float speed;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float delay;

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x9C9E90", Offset = "0x9C9E90", VA = "0x9C9E90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x9C9FF0", Offset = "0x9C9FF0", VA = "0x9C9FF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x9CA09C", Offset = "0x9CA09C", VA = "0x9CA09C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x9CA17C", Offset = "0x9CA17C", VA = "0x9CA17C", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x9CA01C", Offset = "0x9CA01C", VA = "0x9CA01C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63CE48", Offset = "0x63CE48")]
		private IEnumerator wake()
		{
			return null;
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x9CA1C0", Offset = "0x9CA1C0", VA = "0x9CA1C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63CEB0", Offset = "0x63CEB0")]
		private IEnumerator kill()
		{
			return null;
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x9CA240", Offset = "0x9CA240", VA = "0x9CA240")]
		public bootcamp_target()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class car : MonoBehaviour
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public path path;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private point path_from;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private point path_to;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float drive_speed;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float turn_speed;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 orgpos;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Collider> cols;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float last_move;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float ignore_hits;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] wheels;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public car_event on_path_complete;

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x9CB384", Offset = "0x9CB384", VA = "0x9CB384")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x9CB3C0", Offset = "0x9CB3C0", VA = "0x9CB3C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x9CB3C8", Offset = "0x9CB3C8", VA = "0x9CB3C8")]
		public void set_path(path _path)
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x9CB588", Offset = "0x9CB588", VA = "0x9CB588")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x9CB58C", Offset = "0x9CB58C", VA = "0x9CB58C")]
		private void UpdateDrive()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x9CBA48", Offset = "0x9CBA48", VA = "0x9CBA48")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x9CBAE8", Offset = "0x9CBAE8", VA = "0x9CBAE8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x9CBB88", Offset = "0x9CBB88", VA = "0x9CBB88")]
		public car()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class difficulty_menu : hitable
	{
		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject hover;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject visible;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lasthit;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float scale;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float toscale;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private sound source;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject back1;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject back4;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject back8;

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x9CC79C", Offset = "0x9CC79C", VA = "0x9CC79C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x9CC820", Offset = "0x9CC820", VA = "0x9CC820")]
		private void UpdateDifficulty()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x9CCA6C", Offset = "0x9CCA6C", VA = "0x9CCA6C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x9CCB48", Offset = "0x9CCB48", VA = "0x9CCB48", Slot = "7")]
		public override bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x9CCB50", Offset = "0x9CCB50", VA = "0x9CCB50", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x9CCC88", Offset = "0x9CCC88", VA = "0x9CCC88", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x9CCCDC", Offset = "0x9CCCDC", VA = "0x9CCCDC", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x9CCD0C", Offset = "0x9CCD0C", VA = "0x9CCD0C")]
		public difficulty_menu()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class door : MonoBehaviour
	{
		[Token(Token = "0x20001FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DFE0", Offset = "0x62DFE0")]
		private sealed class <open_co>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public door <>4__this;

			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <left>5__3;

			[Token(Token = "0x17000142")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BD7")]
				[Address(RVA = "0xA7E0C0", Offset = "0xA7E0C0", VA = "0xA7E0C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000143")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BD9")]
				[Address(RVA = "0xA7E108", Offset = "0xA7E108", VA = "0xA7E108", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0xA7DE74", Offset = "0xA7DE74", VA = "0xA7DE74")]
			[DebuggerHidden]
			public <open_co>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xA7DEA0", Offset = "0xA7DEA0", VA = "0xA7DEA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0xA7DEA4", Offset = "0xA7DEA4", VA = "0xA7DEA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0xA7E0C8", Offset = "0xA7E0C8", VA = "0xA7E0C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DFF0", Offset = "0x62DFF0")]
		private sealed class <close_co>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public door <>4__this;

			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <left>5__3;

			[Token(Token = "0x17000144")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BDD")]
				[Address(RVA = "0xA7DE24", Offset = "0xA7DE24", VA = "0xA7DE24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000145")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BDF")]
				[Address(RVA = "0xA7DE6C", Offset = "0xA7DE6C", VA = "0xA7DE6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0xA7DC00", Offset = "0xA7DC00", VA = "0xA7DC00")]
			[DebuggerHidden]
			public <close_co>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0xA7DC2C", Offset = "0xA7DC2C", VA = "0xA7DC2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0xA7DC30", Offset = "0xA7DC30", VA = "0xA7DC30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0xA7DE2C", Offset = "0xA7DE2C", VA = "0xA7DE2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool opened;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 close_angle;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 close_position;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float open_duration;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float close_duration;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 open_angle;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 open_position;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public sound sound_source;

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x9CCD1C", Offset = "0x9CCD1C", VA = "0x9CCD1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x9CCD78", Offset = "0x9CCD78", VA = "0x9CCD78")]
		public void toggle()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x9CCDCC", Offset = "0x9CCDCC", VA = "0x9CCDCC")]
		public void open()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x9CCE14", Offset = "0x9CCE14", VA = "0x9CCE14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63CFB8", Offset = "0x63CFB8")]
		private IEnumerator open_co()
		{
			return null;
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x9CCD88", Offset = "0x9CCD88", VA = "0x9CCD88")]
		public void close()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x9CCE94", Offset = "0x9CCE94", VA = "0x9CCE94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D020", Offset = "0x63D020")]
		private IEnumerator close_co()
		{
			return null;
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x9CCF14", Offset = "0x9CCF14", VA = "0x9CCF14")]
		public door()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FE")]
	public class base_event : UnityEvent
	{
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x9C99A4", Offset = "0x9C99A4", VA = "0x9C99A4")]
		public base_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FF")]
	public class npc_event : UnityEvent<npc>
	{
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x11955FC", Offset = "0x11955FC", VA = "0x11955FC")]
		public npc_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000200")]
	public class car_event : UnityEvent<car>
	{
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x9CBC28", Offset = "0x9CBC28", VA = "0x9CBC28")]
		public car_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000201")]
	public class heli_event : UnityEvent<heli>
	{
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x9D235C", Offset = "0x9D235C", VA = "0x9D235C")]
		public heli_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000202")]
	public class tool_event : UnityEvent<toolbase>
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x113AC84", Offset = "0x113AC84", VA = "0x113AC84")]
		public tool_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000203")]
	public class teleport_event : UnityEvent<teleport>
	{
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xC2CEC4", Offset = "0xC2CEC4", VA = "0xC2CEC4")]
		public teleport_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000204")]
	public class tool_firearm_event : UnityEvent<tool_firearm>
	{
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x113F980", Offset = "0x113F980", VA = "0x113F980")]
		public tool_firearm_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000205")]
	public class tool_grenade_event : UnityEvent<tool_grenade>
	{
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1140DD0", Offset = "0x1140DD0", VA = "0x1140DD0")]
		public tool_grenade_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000206")]
	public class tool_flashbang_event : UnityEvent<tool_flashbang>
	{
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1140064", Offset = "0x1140064", VA = "0x1140064")]
		public tool_flashbang_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000207")]
	public class tool_medikit_event : UnityEvent<tool_mdeikit>
	{
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x1141CCC", Offset = "0x1141CCC", VA = "0x1141CCC")]
		public tool_medikit_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000208")]
	public class bomb_event : UnityEvent<bomb>
	{
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x9C9E3C", Offset = "0x9C9E3C", VA = "0x9C9E3C")]
		public bomb_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000209")]
	public class look_event : UnityEvent<look>
	{
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xC0B16C", Offset = "0xC0B16C", VA = "0xC0B16C")]
		public look_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020A")]
	public class player_trigger_event : UnityEvent<player_trigger>
	{
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xC1C258", Offset = "0xC1C258", VA = "0xC1C258")]
		public player_trigger_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020B")]
	public class mpbutton_event : UnityEvent<mpButton>
	{
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x118E878", Offset = "0x118E878", VA = "0x118E878")]
		public mpbutton_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020C")]
	public class tool_firearm_shoot_event : UnityEvent<Vector3, Vector3>
	{
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x113FA28", Offset = "0x113FA28", VA = "0x113FA28")]
		public tool_firearm_shoot_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020D")]
	public class tool_firearm_explode_event : UnityEvent<Vector3, Vector3>
	{
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x113F9D4", Offset = "0x113F9D4", VA = "0x113F9D4")]
		public tool_firearm_explode_event()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class heli : MonoBehaviour
	{
		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public path path;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private point path_from;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private point path_to;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float drive_speed;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float turn_speed;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public heli_event on_path_complete;

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x9D1DFC", Offset = "0x9D1DFC", VA = "0x9D1DFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x9D1E00", Offset = "0x9D1E00", VA = "0x9D1E00")]
		public void set_path(path _path)
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x9D1FC4", Offset = "0x9D1FC4", VA = "0x9D1FC4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x9D1FC8", Offset = "0x9D1FC8", VA = "0x9D1FC8")]
		private void UpdateDrive()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x9D234C", Offset = "0x9D234C", VA = "0x9D234C")]
		public heli()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class hitable : MonoBehaviour
	{
		[Token(Token = "0x2000210")]
		public enum contexts
		{
			[Token(Token = "0x4000AF3")]
			genric,
			[Token(Token = "0x4000AF4")]
			bomb,
			[Token(Token = "0x4000AF5")]
			npc,
			[Token(Token = "0x4000AF6")]
			ui
		}

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public contexts context;

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x9D2588", Offset = "0x9D2588", VA = "0x9D2588", Slot = "4")]
		public virtual void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x9D258C", Offset = "0x9D258C", VA = "0x9D258C", Slot = "5")]
		public virtual void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x9D2590", Offset = "0x9D2590", VA = "0x9D2590", Slot = "6")]
		public virtual void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x9D2594", Offset = "0x9D2594", VA = "0x9D2594", Slot = "7")]
		public virtual bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x9C9E34", Offset = "0x9C9E34", VA = "0x9C9E34")]
		public hitable()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class horde_board : MonoBehaviour
	{
		[Token(Token = "0x2000212")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E000", Offset = "0x62E000")]
		private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public horde_board <>4__this;

			[Token(Token = "0x17000146")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C02")]
				[Address(RVA = "0xA7E50C", Offset = "0xA7E50C", VA = "0xA7E50C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000147")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C04")]
				[Address(RVA = "0xA7E554", Offset = "0xA7E554", VA = "0xA7E554", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0xA7E34C", Offset = "0xA7E34C", VA = "0xA7E34C")]
			[DebuggerHidden]
			public <Start>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000C00")]
			[Address(RVA = "0xA7E378", Offset = "0xA7E378", VA = "0xA7E378", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C01")]
			[Address(RVA = "0xA7E37C", Offset = "0xA7E37C", VA = "0xA7E37C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C03")]
			[Address(RVA = "0xA7E514", Offset = "0xA7E514", VA = "0xA7E514", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string board_name;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI ui_title;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI ui_subtitle;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI ui_column;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI list_no;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI list_text;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI list_val;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public custombutton button;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI button_label;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float scale;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool dynamic;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool changeScale;

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x9D259C", Offset = "0x9D259C", VA = "0x9D259C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x9D2680", Offset = "0x9D2680", VA = "0x9D2680")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D128", Offset = "0x63D128")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x9D2700", Offset = "0x9D2700", VA = "0x9D2700")]
		public void redraw()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x9D2704", Offset = "0x9D2704", VA = "0x9D2704")]
		private bool draw()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x9D2CBC", Offset = "0x9D2CBC", VA = "0x9D2CBC")]
		public horde_board()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class horde_lobby : hitable
	{
		[Token(Token = "0x2000214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E010", Offset = "0x62E010")]
		private sealed class <hide_error>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public horde_lobby <>4__this;

			[Token(Token = "0x17000148")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C12")]
				[Address(RVA = "0xA7E648", Offset = "0xA7E648", VA = "0xA7E648", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000149")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C14")]
				[Address(RVA = "0xA7E690", Offset = "0xA7E690", VA = "0xA7E690", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0xA7E55C", Offset = "0xA7E55C", VA = "0xA7E55C")]
			[DebuggerHidden]
			public <hide_error>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000C10")]
			[Address(RVA = "0xA7E588", Offset = "0xA7E588", VA = "0xA7E588", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C11")]
			[Address(RVA = "0xA7E58C", Offset = "0xA7E58C", VA = "0xA7E58C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C13")]
			[Address(RVA = "0xA7E650", Offset = "0xA7E650", VA = "0xA7E650", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI horde_best_score;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI horde_last_score;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject comingsoon;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public tool_laptop laptop;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform buttonenter;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject hover;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float scale;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float toscale;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public sound source;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject error_window;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI error_message;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine hide_error_co;

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x9D2D30", Offset = "0x9D2D30", VA = "0x9D2D30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x9D2EEC", Offset = "0x9D2EEC", VA = "0x9D2EEC")]
		private void set_error(string message, float delay = 5f)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x9D3024", Offset = "0x9D3024", VA = "0x9D3024")]
		private void hide_error()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x9D2F94", Offset = "0x9D2F94", VA = "0x9D2F94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D1E0", Offset = "0x63D1E0")]
		private IEnumerator hide_error(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x9D3068", Offset = "0x9D3068", VA = "0x9D3068")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x9D311C", Offset = "0x9D311C", VA = "0x9D311C", Slot = "7")]
		public override bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x9D3124", Offset = "0x9D3124", VA = "0x9D3124", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x9D33EC", Offset = "0x9D33EC", VA = "0x9D33EC", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x9D348C", Offset = "0x9D348C", VA = "0x9D348C", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x9D34B0", Offset = "0x9D34B0", VA = "0x9D34B0")]
		public horde_lobby()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class hud : MonoBehaviour
	{
		[Token(Token = "0x2000216")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E020", Offset = "0x62E020")]
		private sealed class <typing>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string str;

			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public hud <>4__this;

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool show_skip;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float ttl;

			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__2;

			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private char[] <chars>5__3;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <strlen>5__4;

			[Token(Token = "0x1700014A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C21")]
				[Address(RVA = "0xA7EC90", Offset = "0xA7EC90", VA = "0xA7EC90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C23")]
				[Address(RVA = "0xA7ECD8", Offset = "0xA7ECD8", VA = "0xA7ECD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0xA7E698", Offset = "0xA7E698", VA = "0xA7E698")]
			[DebuggerHidden]
			public <typing>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0xA7E6C4", Offset = "0xA7E6C4", VA = "0xA7E6C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C20")]
			[Address(RVA = "0xA7E6C8", Offset = "0xA7E6C8", VA = "0xA7E6C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C22")]
			[Address(RVA = "0xA7EC98", Offset = "0xA7EC98", VA = "0xA7EC98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings curved_ui_settings;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject skip;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI subtitles;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CurvedUITMP subtitles_tmp;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine typing_co;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private base_event on_subtitles_end;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject GameOver;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform LookAtTarget;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform LookAtArrow;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool lookat_back;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float lookat_close_range;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float lookat_back_range;

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x9D34C0", Offset = "0x9D34C0", VA = "0x9D34C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x9D3588", Offset = "0x9D3588", VA = "0x9D3588")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x9D38A4", Offset = "0x9D38A4", VA = "0x9D38A4")]
		public void set_lookat(Transform target)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x9D3674", Offset = "0x9D3674", VA = "0x9D3674")]
		private void update_lookat()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x9D34F4", Offset = "0x9D34F4", VA = "0x9D34F4")]
		public void hide_subtitles()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x9D3934", Offset = "0x9D3934", VA = "0x9D3934")]
		public void set_subtitles([Optional] string str, float duration = -1f, [Optional] UnityAction callback, bool show_skip = true, float ttl = -1f)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x9D3A5C", Offset = "0x9D3A5C", VA = "0x9D3A5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D298", Offset = "0x63D298")]
		private IEnumerator typing(string str, float duration, bool show_skip, float ttl = -1f)
		{
			return null;
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x9D38B0", Offset = "0x9D38B0", VA = "0x9D38B0")]
		private void update_subtitles_text(string str)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x9D3B1C", Offset = "0x9D3B1C", VA = "0x9D3B1C")]
		public hud()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class impact : MonoBehaviour
	{
		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public impacts impacts;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem particles;

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x9D3B30", Offset = "0x9D3B30", VA = "0x9D3B30")]
		public void play(Vector3 position, Vector3 normal, Collider col)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x9D3D60", Offset = "0x9D3D60", VA = "0x9D3D60")]
		public impact()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class impacts : MonoBehaviour
	{
		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static impacts instance;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public impact effect;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int max_pool;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<impact> pool;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int index;

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x9D3D68", Offset = "0x9D3D68", VA = "0x9D3D68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x9D3E00", Offset = "0x9D3E00", VA = "0x9D3E00")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x9D3E44", Offset = "0x9D3E44", VA = "0x9D3E44")]
		private impact get()
		{
			return null;
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x9D40F4", Offset = "0x9D40F4", VA = "0x9D40F4")]
		public void spawn(Vector3 position, Vector3 normal, Collider col)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x9D4168", Offset = "0x9D4168", VA = "0x9D4168")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x9D41D0", Offset = "0x9D41D0", VA = "0x9D41D0")]
		public impacts()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class level_menu : hitable
	{
		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject circle_easy;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject circle_hard;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject circle_insane;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject hover;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject completed;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject hidden;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject visible;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject comingsoon;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string levelname;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string[] required_levels;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool locked;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lasthit;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float scale;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float toscale;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private sound source;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool checkdemo;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool can_play;

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xC09B98", Offset = "0xC09B98", VA = "0xC09B98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xC0A0F8", Offset = "0xC0A0F8", VA = "0xC0A0F8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xC0A1D4", Offset = "0xC0A1D4", VA = "0xC0A1D4", Slot = "7")]
		public override bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xC0A1DC", Offset = "0xC0A1DC", VA = "0xC0A1DC", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xC0A434", Offset = "0xC0A434", VA = "0xC0A434", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xC0A490", Offset = "0xC0A490", VA = "0xC0A490", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xC0A4C0", Offset = "0xC0A4C0", VA = "0xC0A4C0")]
		public level_menu()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class lobby_contests : hitable
	{
		[Token(Token = "0x200021B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E030", Offset = "0x62E030")]
		private sealed class <hide_error>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public lobby_contests <>4__this;

			[Token(Token = "0x1700014C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C43")]
				[Address(RVA = "0xB4E454", Offset = "0xB4E454", VA = "0xB4E454", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C45")]
				[Address(RVA = "0xB4E49C", Offset = "0xB4E49C", VA = "0xB4E49C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C40")]
			[Address(RVA = "0xB4E368", Offset = "0xB4E368", VA = "0xB4E368")]
			[DebuggerHidden]
			public <hide_error>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000C41")]
			[Address(RVA = "0xB4E394", Offset = "0xB4E394", VA = "0xB4E394", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C42")]
			[Address(RVA = "0xB4E398", Offset = "0xB4E398", VA = "0xB4E398", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C44")]
			[Address(RVA = "0xB4E45C", Offset = "0xB4E45C", VA = "0xB4E45C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<npc> enemies;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject comingsoon;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public tool_laptop laptop;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform buttonenter;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject hover;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float scale;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float toscale;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound source;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI ui_your_score;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI ui_tickets_left;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject error_window;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI error_message;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine hide_error_co;

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xC0A71C", Offset = "0xC0A71C", VA = "0xC0A71C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xC0A8D8", Offset = "0xC0A8D8", VA = "0xC0A8D8")]
		private void set_error(string message, float delay = 5f)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xC0AA10", Offset = "0xC0AA10", VA = "0xC0AA10")]
		private void hide_error()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xC0A980", Offset = "0xC0A980", VA = "0xC0A980")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D350", Offset = "0x63D350")]
		private IEnumerator hide_error(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xC0AA54", Offset = "0xC0AA54", VA = "0xC0AA54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xC0AB74", Offset = "0xC0AB74", VA = "0xC0AB74")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xC0AC28", Offset = "0xC0AC28", VA = "0xC0AC28", Slot = "7")]
		public override bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xC0AC30", Offset = "0xC0AC30", VA = "0xC0AC30", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xC0AF04", Offset = "0xC0AF04", VA = "0xC0AF04", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xC0AFA4", Offset = "0xC0AFA4", VA = "0xC0AFA4", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xC0AFC8", Offset = "0xC0AFC8", VA = "0xC0AFC8")]
		public lobby_contests()
		{
		}
	}
	[Token(Token = "0x200021C")]
	[SelectionBase]
	public class npc : MonoBehaviour
	{
		[Token(Token = "0x200021D")]
		public enum sides
		{
			[Token(Token = "0x4000BE4")]
			enemy,
			[Token(Token = "0x4000BE5")]
			civilian,
			[Token(Token = "0x4000BE6")]
			friend
		}

		[Token(Token = "0x200021E")]
		public enum hitmodes
		{
			[Token(Token = "0x4000BE8")]
			None,
			[Token(Token = "0x4000BE9")]
			HitAnimation,
			[Token(Token = "0x4000BEA")]
			KillAnimation,
			[Token(Token = "0x4000BEB")]
			Ragdoll
		}

		[Token(Token = "0x200021F")]
		public enum states
		{
			[Token(Token = "0x4000BED")]
			idle,
			[Token(Token = "0x4000BEE")]
			attack,
			[Token(Token = "0x4000BEF")]
			reload,
			[Token(Token = "0x4000BF0")]
			walk,
			[Token(Token = "0x4000BF1")]
			run,
			[Token(Token = "0x4000BF2")]
			guard,
			[Token(Token = "0x4000BF3")]
			crouch,
			[Token(Token = "0x4000BF4")]
			jump,
			[Token(Token = "0x4000BF5")]
			air,
			[Token(Token = "0x4000BF6")]
			land,
			[Token(Token = "0x4000BF7")]
			climb,
			[Token(Token = "0x4000BF8")]
			hits,
			[Token(Token = "0x4000BF9")]
			kills,
			[Token(Token = "0x4000BFA")]
			getup,
			[Token(Token = "0x4000BFB")]
			idles,
			[Token(Token = "0x4000BFC")]
			talk,
			[Token(Token = "0x4000BFD")]
			salute,
			[Token(Token = "0x4000BFE")]
			yes,
			[Token(Token = "0x4000BFF")]
			no,
			[Token(Token = "0x4000C00")]
			cry,
			[Token(Token = "0x4000C01")]
			laugh,
			[Token(Token = "0x4000C02")]
			happy,
			[Token(Token = "0x4000C03")]
			angry,
			[Token(Token = "0x4000C04")]
			dance,
			[Token(Token = "0x4000C05")]
			greet,
			[Token(Token = "0x4000C06")]
			knock,
			[Token(Token = "0x4000C07")]
			frustration,
			[Token(Token = "0x4000C08")]
			lying,
			[Token(Token = "0x4000C09")]
			pickup,
			[Token(Token = "0x4000C0A")]
			meditate,
			[Token(Token = "0x4000C0B")]
			chair,
			[Token(Token = "0x4000C0C")]
			chair_talk,
			[Token(Token = "0x4000C0D")]
			chair_cry,
			[Token(Token = "0x4000C0E")]
			chair_laugh,
			[Token(Token = "0x4000C0F")]
			chair_typing,
			[Token(Token = "0x4000C10")]
			melee,
			[Token(Token = "0x4000C11")]
			dance2
		}

		[Token(Token = "0x2000220")]
		public enum directions
		{
			[Token(Token = "0x4000C13")]
			none,
			[Token(Token = "0x4000C14")]
			front,
			[Token(Token = "0x4000C15")]
			back,
			[Token(Token = "0x4000C16")]
			right,
			[Token(Token = "0x4000C17")]
			left
		}

		[Token(Token = "0x2000221")]
		public enum looktype
		{
			[Token(Token = "0x4000C19")]
			look,
			[Token(Token = "0x4000C1A")]
			aim
		}

		[Token(Token = "0x2000222")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E050", Offset = "0x62E050")]
		private sealed class <unload_coroutine>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public npc <>4__this;

			[Token(Token = "0x1700014E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C8A")]
				[Address(RVA = "0xB509E8", Offset = "0xB509E8", VA = "0xB509E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C8C")]
				[Address(RVA = "0xB50A30", Offset = "0xB50A30", VA = "0xB50A30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C87")]
			[Address(RVA = "0xB508FC", Offset = "0xB508FC", VA = "0xB508FC")]
			[DebuggerHidden]
			public <unload_coroutine>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x6000C88")]
			[Address(RVA = "0xB50928", Offset = "0xB50928", VA = "0xB50928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C89")]
			[Address(RVA = "0xB5092C", Offset = "0xB5092C", VA = "0xB5092C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0xB509F0", Offset = "0xB509F0", VA = "0xB509F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000223")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E060", Offset = "0x62E060")]
		private sealed class <RestoreRun>d__157 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public npc <>4__this;

			[Token(Token = "0x4000C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 target;

			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool restore_rotaion;

			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__2;

			[Token(Token = "0x4000C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__3;

			[Token(Token = "0x4000C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Quaternion <rot>5__4;

			[Token(Token = "0x17000150")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C90")]
				[Address(RVA = "0xB508AC", Offset = "0xB508AC", VA = "0xB508AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000151")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C92")]
				[Address(RVA = "0xB508F4", Offset = "0xB508F4", VA = "0xB508F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0xB50490", Offset = "0xB50490", VA = "0xB50490")]
			[DebuggerHidden]
			public <RestoreRun>d__157(int <>1__state)
			{
			}

			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0xB504BC", Offset = "0xB504BC", VA = "0xB504BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0xB504C0", Offset = "0xB504C0", VA = "0xB504C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C91")]
			[Address(RVA = "0xB508B4", Offset = "0xB508B4", VA = "0xB508B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E070", Offset = "0x62E070")]
		private sealed class <RestoreJump>d__158 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public npc <>4__this;

			[Token(Token = "0x4000C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 target;

			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool restore_rotaion;

			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <origin>5__2;

			[Token(Token = "0x4000C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <height>5__3;

			[Token(Token = "0x4000C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <duration>5__4;

			[Token(Token = "0x4000C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <pass>5__5;

			[Token(Token = "0x4000C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Quaternion <rot>5__6;

			[Token(Token = "0x17000152")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C96")]
				[Address(RVA = "0xB50440", Offset = "0xB50440", VA = "0xB50440", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000153")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C98")]
				[Address(RVA = "0xB50488", Offset = "0xB50488", VA = "0xB50488", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C93")]
			[Address(RVA = "0xB4FF74", Offset = "0xB4FF74", VA = "0xB4FF74")]
			[DebuggerHidden]
			public <RestoreJump>d__158(int <>1__state)
			{
			}

			[Token(Token = "0x6000C94")]
			[Address(RVA = "0xB4FFA0", Offset = "0xB4FFA0", VA = "0xB4FFA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C95")]
			[Address(RVA = "0xB4FFA4", Offset = "0xB4FFA4", VA = "0xB4FFA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C97")]
			[Address(RVA = "0xB50448", Offset = "0xB50448", VA = "0xB50448", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool buttons;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public path path;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public path alt_path;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public sides side;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private weapon WeaponSetter;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool RandomWeaponOnAwake;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private weapon weapon;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NavMeshAgent agent;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform right_hand;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform left_hand;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Animator ani;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RuntimeAnimatorController baseAnimatorController;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public syncbones syncbones;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ragdoll ragdoll;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int health;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool onair;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		[HideInInspector]
		public bool alive;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
		private bool recovery;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private hitmodes recovery_mode;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float recovery_delay;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool recovery_manually_locked;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float recovery_time;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float recovery_duration_max;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float recovery_duration;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool can_be_hit_on_recovery;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool can_be_hit;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		public bool can_be_killed;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public hitmodes hitmode;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public hitmodes killmode;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public states state;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public directions dir;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool ani_need_update;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int ani_frame_update;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private states last_frame_state;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private states last_state;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int last_state_val;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int state_index;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool kill_state_ended;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float last_hit;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool look;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool look_transform;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public looktype lookmode;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool attack_player_eyes;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Transform look_target;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float look_transform_offset;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float lookheadweight;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float lookbodyweight;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float lookspeed;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool combat;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public bool attack_projectile;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float attack_accuracy_distance;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float attack_first_delay;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float attack_speed;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float attack_reload_margin;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float attack_hit_margin;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float attack_shoot_margin;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[HideInInspector]
		public float attack_margin_end;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public int attack_damage;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Transform attack_origin;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private RaycastHit ray_hit;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public sound sound;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public float weapon_scale;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public weapon[] weapons;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public npc_event on_hit;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public npc_event on_path_complete;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public float unload_delay;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float ikspeed;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool ik_hand_right;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private float ik_hand_right_weight;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Transform ik_hand_right_target;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool ik_hand_left;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private float ik_hand_left_weight;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Transform ik_hand_left_target;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Vector3 restore_last_position;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private Quaternion restore_last_rotation;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public bool restore_last_position_enabled;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CD")]
		public bool restore_last_rotation_enabled;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Coroutine RestoreMovement;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public bool count_as_progress;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		public bool headshoot_enabled;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private GameObject headshoot_head;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public bool has_crouch_cover;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
		[HideInInspector]
		public bool hit_by_headshoot;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
		[HideInInspector]
		public bool hit_on_air;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EB")]
		private bool first_stuck_test;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[HideInInspector]
		public bool is_stuck;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1ED")]
		private bool last_stuck_result;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float next_stuck_test;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float stuck_test_interval;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private point path_from;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private point path_to;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private bool path_completed;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		private bool path_stopped;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private float point_stay;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float speed_guard;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public float speed_walk;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float speed_run;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private float speed_climb;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private float speed_turn_factor;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float arrived_distance;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private point_props props;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public float jump_speed;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private float jump_pass;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float jump_duration;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private float jump_duration_min;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private float jump_duration_max;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private bool jump_land;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x245")]
		private bool ai_paused;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x246")]
		private bool ai_resuming;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float next_crouch;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public float RestoreJumpHeight;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public bool is_zombie;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x251")]
		private bool _zombie_init;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public RuntimeAnimatorController zombie_crawl;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public RuntimeAnimatorController zombie_broken;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public RuntimeAnimatorController zombie_aggresive;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private float zombie_next_idle_sound;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float zombie_next_idle_global;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		public float zombie_speed;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public bool agent_enabled;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x279")]
		public bool agent_run;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27A")]
		public bool agent_follow_player;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public Transform agent_destination_target;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private Vector3 agent_destination_position;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private bool agent_destination_position_active;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x295")]
		public bool agent_patrol_loop;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x296")]
		public bool agent_attack_on_move;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x297")]
		private bool _agent_init;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private bool agent_on_link;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private float agent_next_destination;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private float agent_stop_distance;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private float agent_stop_distance_from_player;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private bool first_jump;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A9")]
		public bool blocking_enabled;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private float blocking_cooldown;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public float improve_every_seconds;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private float improve_next;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private float org_attack_accuracy_distance;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private float org_attack_speed;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private float org_attack_hit_margin;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		private float org_attack_shoot_margin;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private int org_attack_damage;

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x118EC50", Offset = "0x118EC50", VA = "0x118EC50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x118F27C", Offset = "0x118F27C", VA = "0x118F27C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x118F280", Offset = "0x118F280", VA = "0x118F280")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x11906D4", Offset = "0x11906D4", VA = "0x11906D4")]
		public void free_stuck()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x11903C8", Offset = "0x11903C8", VA = "0x11903C8")]
		private void update_stuck()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1190708", Offset = "0x1190708", VA = "0x1190708")]
		public void WinLevelMode()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x118F08C", Offset = "0x118F08C", VA = "0x118F08C")]
		public void SetWeapon(weapon newWeapon)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x118EF44", Offset = "0x118EF44", VA = "0x118EF44")]
		public void SetAnimator(bool toWeapon)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1190BB4", Offset = "0x1190BB4", VA = "0x1190BB4")]
		public void unload()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1190CC8", Offset = "0x1190CC8", VA = "0x1190CC8")]
		public void unload(float delay)
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x1190CF4", Offset = "0x1190CF4", VA = "0x1190CF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D408", Offset = "0x63D408")]
		private IEnumerator unload_coroutine(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1190D84", Offset = "0x1190D84", VA = "0x1190D84")]
		private bool is_grounded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x1190D94", Offset = "0x1190D94", VA = "0x1190D94")]
		private bool have_ragdoll()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1190E24", Offset = "0x1190E24", VA = "0x1190E24")]
		private void update_recovery()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1191028", Offset = "0x1191028", VA = "0x1191028")]
		public void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage, bool headshoot = false)
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x11914F4", Offset = "0x11914F4", VA = "0x11914F4")]
		private bool headshoot_execute()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x11901D8", Offset = "0x11901D8", VA = "0x11901D8")]
		private void update_animator()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x119229C", Offset = "0x119229C", VA = "0x119229C")]
		private void update_state()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x1190B8C", Offset = "0x1190B8C", VA = "0x1190B8C")]
		public void update_state(states _state, directions _dir)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x11922A8", Offset = "0x11922A8", VA = "0x11922A8")]
		private int set_last_animator_state(states _state, int val, int val_max = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1191C3C", Offset = "0x1191C3C", VA = "0x1191C3C")]
		private int get_animator_state()
		{
			return default(int);
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x119231C", Offset = "0x119231C", VA = "0x119231C")]
		public void animator_state_ended()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x1192590", Offset = "0x1192590", VA = "0x1192590")]
		private int look_level()
		{
			return default(int);
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1192630", Offset = "0x1192630", VA = "0x1192630")]
		private void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1190F08", Offset = "0x1190F08", VA = "0x1190F08")]
		public void GetUp()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1192450", Offset = "0x1192450", VA = "0x1192450")]
		private bool GetUpCompleted()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1192CB0", Offset = "0x1192CB0", VA = "0x1192CB0")]
		public void SnapToPath()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1192E58", Offset = "0x1192E58", VA = "0x1192E58")]
		public void ReplacePath()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1192E64", Offset = "0x1192E64", VA = "0x1192E64")]
		public void Editor_Headshoot()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1192EF0", Offset = "0x1192EF0", VA = "0x1192EF0")]
		public void Editor_Hit()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x1192F7C", Offset = "0x1192F7C", VA = "0x1192F7C")]
		public void Editor_SetWeapon()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x1192F84", Offset = "0x1192F84", VA = "0x1192F84")]
		public void Editor_ClearWeapon()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x1192FBC", Offset = "0x1192FBC", VA = "0x1192FBC")]
		public void update_path_point(point point)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x1193094", Offset = "0x1193094", VA = "0x1193094")]
		private void add_attack_margin(float seconds)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x11930E8", Offset = "0x11930E8", VA = "0x11930E8")]
		public void player_hit()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x11930F0", Offset = "0x11930F0", VA = "0x11930F0")]
		public bool ai_busy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x119320C", Offset = "0x119320C", VA = "0x119320C")]
		public void fake_attack()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x11932A4", Offset = "0x11932A4", VA = "0x11932A4")]
		public void path_resume()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1190810", Offset = "0x1190810", VA = "0x1190810")]
		public void set_path(path _path, bool snap = true)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x11932AC", Offset = "0x11932AC", VA = "0x11932AC")]
		public Quaternion GetMovementRotation(Vector3 target, directions dir)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1193450", Offset = "0x1193450", VA = "0x1193450")]
		private Vector3 NearestPointOnFiniteLine(Vector3 start, Vector3 end, Vector3 pnt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1193524", Offset = "0x1193524", VA = "0x1193524")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D470", Offset = "0x63D470")]
		private IEnumerator RestoreRun(Vector3 target, bool restore_rotaion)
		{
			return null;
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x11935D4", Offset = "0x11935D4", VA = "0x11935D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D4D8", Offset = "0x63D4D8")]
		private IEnumerator RestoreJump(Vector3 target, bool restore_rotaion)
		{
			return null;
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1192BCC", Offset = "0x1192BCC", VA = "0x1192BCC")]
		public void StartRestoreMovement(Vector3 target, bool force_jump, bool restore_rotaion)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x1193684", Offset = "0x1193684", VA = "0x1193684")]
		public bool JumpTo(Vector3 target)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x119375C", Offset = "0x119375C", VA = "0x119375C")]
		private void StationaryToMovementAI()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x11938B0", Offset = "0x11938B0", VA = "0x11938B0")]
		private void StationaryAI(float delta)
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1193BB4", Offset = "0x1193BB4", VA = "0x1193BB4")]
		private bool AttackAI(float delta, bool update_attack_state = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1194148", Offset = "0x1194148", VA = "0x1194148")]
		public void zombie_init()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x11944E4", Offset = "0x11944E4", VA = "0x11944E4")]
		private void zombie_idle()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1193F48", Offset = "0x1193F48", VA = "0x1193F48")]
		private bool zombie_update()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x119462C", Offset = "0x119462C", VA = "0x119462C")]
		private void zombie_attack()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x11936D0", Offset = "0x11936D0", VA = "0x11936D0")]
		private void break_agent_link()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x11949A8", Offset = "0x11949A8", VA = "0x11949A8")]
		private directions get_agent_direction()
		{
			return default(directions);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1194B60", Offset = "0x1194B60", VA = "0x1194B60")]
		public void set_agent_destination_position(Vector3 pos)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1194B78", Offset = "0x1194B78", VA = "0x1194B78")]
		private Vector3 get_agent_destination()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x11943B8", Offset = "0x11943B8", VA = "0x11943B8")]
		public bool agent_place()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1194D20", Offset = "0x1194D20", VA = "0x1194D20")]
		public void agent_init()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x118F2D4", Offset = "0x118F2D4", VA = "0x118F2D4")]
		private void AgentAI(float delta)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x118F694", Offset = "0x118F694", VA = "0x118F694")]
		private void MovementAI(float delta, bool second_pass = false)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1194E20", Offset = "0x1194E20", VA = "0x1194E20")]
		private void update_path_to(float delta)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1195178", Offset = "0x1195178", VA = "0x1195178")]
		private bool check_blocking(Vector3 dest)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x119025C", Offset = "0x119025C", VA = "0x119025C")]
		private void update_improve()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x11954E8", Offset = "0x11954E8", VA = "0x11954E8")]
		public npc()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class path : MonoBehaviour
	{
		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool loop;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<point> points;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float radius;

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1195818", Offset = "0x1195818", VA = "0x1195818")]
		public point next(point current)
		{
			return null;
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1195994", Offset = "0x1195994", VA = "0x1195994")]
		public point prev(point current)
		{
			return null;
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1192DE8", Offset = "0x1192DE8", VA = "0x1192DE8")]
		public point first()
		{
			return null;
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1195B0C", Offset = "0x1195B0C", VA = "0x1195B0C")]
		public point last()
		{
			return null;
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1195B80", Offset = "0x1195B80", VA = "0x1195B80")]
		public path()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class playerid : MonoBehaviour
	{
		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float clicked;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject green;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject red;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI val;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI playername;

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xC1C2AC", Offset = "0xC1C2AC", VA = "0xC1C2AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xC1C2B0", Offset = "0xC1C2B0", VA = "0xC1C2B0")]
		private void draw()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xC1C580", Offset = "0xC1C580", VA = "0xC1C580")]
		public void click()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xC1C718", Offset = "0xC1C718", VA = "0xC1C718")]
		public playerid()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class player_trigger : MonoBehaviour
	{
		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool triggered;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public player_trigger_event on_enter;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public path[] paths;

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xC1C04C", Offset = "0xC1C04C", VA = "0xC1C04C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xC1C10C", Offset = "0xC1C10C", VA = "0xC1C10C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xC1C250", Offset = "0xC1C250", VA = "0xC1C250")]
		public player_trigger()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class point_props
	{
		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 from;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 to;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion rot;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool has_crouch_cover;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool can_attack;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool can_attack_on_move;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public point.movements movement;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public npc.directions direction;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool can_return_to_prev;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float stay_time;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float height;

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xC1CA60", Offset = "0xC1CA60", VA = "0xC1CA60")]
		public point_props()
		{
		}
	}
	[Token(Token = "0x2000229")]
	[ExecuteInEditMode]
	public class point : MonoBehaviour
	{
		[Token(Token = "0x200022A")]
		public enum movements
		{
			[Token(Token = "0x4000C60")]
			none,
			[Token(Token = "0x4000C61")]
			guard,
			[Token(Token = "0x4000C62")]
			walk,
			[Token(Token = "0x4000C63")]
			run,
			[Token(Token = "0x4000C64")]
			jump,
			[Token(Token = "0x4000C65")]
			climb
		}

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public path path;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool stop_at_arrived;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public base_event stop_at_arrived_callback;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool stationary_rotation;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float stay_time;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public npc.states idle_state;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public npc.directions idle_direction;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool has_crouch_cover;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool can_attack;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool can_attack_on_move_next;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool can_attack_on_move_prev;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public movements movement_next;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public movements movement_prev;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public npc.directions direction_next;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public npc.directions direction_prev;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool can_return_to_prev;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool look;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool look_transform;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public npc.looktype lookmode;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform look_target;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform ik_hand_right_target;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform ik_hand_left_target;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float speed;

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xC1C720", Offset = "0xC1C720", VA = "0xC1C720")]
		public bool arrived(Vector3 position, float arrive_distance = 0.1f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xC1C784", Offset = "0xC1C784", VA = "0xC1C784")]
		public point_props get_props(point to, [Optional] GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xC1CA68", Offset = "0xC1CA68", VA = "0xC1CA68")]
		public point decide_ang_get_next()
		{
			return null;
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xC1CC20", Offset = "0xC1CC20", VA = "0xC1CC20")]
		public point()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class prop : hitable
	{
		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody rb;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int health;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool alive;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool can_be_killed;

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xC1D748", Offset = "0xC1D748", VA = "0xC1D748")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xC1D800", Offset = "0xC1D800", VA = "0xC1D800", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xC1D8C4", Offset = "0xC1D8C4", VA = "0xC1D8C4")]
		public prop()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class range_target : hitable
	{
		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider center;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float max_z;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float min_z;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float z;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound source;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float last_sound;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int stats_player_shoots;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int stats_player_hits;

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xC1E4C4", Offset = "0xC1E4C4", VA = "0xC1E4C4")]
		public int get_accuracy()
		{
			return default(int);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xC1E50C", Offset = "0xC1E50C", VA = "0xC1E50C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xC1E544", Offset = "0xC1E544", VA = "0xC1E544", Slot = "7")]
		public override bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xC1E54C", Offset = "0xC1E54C", VA = "0xC1E54C", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xC1E918", Offset = "0xC1E918", VA = "0xC1E918")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xC1E9B0", Offset = "0xC1E9B0", VA = "0xC1E9B0")]
		public range_target()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class rateus : MonoBehaviour
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool first;

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xC1E9C4", Offset = "0xC1E9C4", VA = "0xC1E9C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xC1EBB4", Offset = "0xC1EBB4", VA = "0xC1EBB4")]
		private int now()
		{
			return default(int);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xC1EA08", Offset = "0xC1EA08", VA = "0xC1EA08")]
		private bool show()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xC1EC48", Offset = "0xC1EC48", VA = "0xC1EC48")]
		public void button_rate()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xC1EE10", Offset = "0xC1EE10", VA = "0xC1EE10")]
		public void button_later()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xC1EF0C", Offset = "0xC1EF0C", VA = "0xC1EF0C")]
		public rateus()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class redpill : MonoBehaviour
	{
		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int total;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI ui_total;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public handmenu handmenu;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public sound sound;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool used;

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xC1EF64", Offset = "0xC1EF64", VA = "0xC1EF64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xC1F04C", Offset = "0xC1F04C", VA = "0xC1F04C")]
		public void use()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xC1F210", Offset = "0xC1F210", VA = "0xC1F210")]
		public redpill()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class rewardbox1 : MonoBehaviour
	{
		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int secret_key;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI ui_barcode;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI ui_password;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public rewardgun1 weapon;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound audio;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject wrap;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string password;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float next_digit;

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xC20148", Offset = "0xC20148", VA = "0xC20148")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xC20320", Offset = "0xC20320", VA = "0xC20320")]
		public void digit_press(string n)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xC20870", Offset = "0xC20870", VA = "0xC20870")]
		private void clear_password()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xC20754", Offset = "0xC20754", VA = "0xC20754")]
		public void open_box()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xC20984", Offset = "0xC20984", VA = "0xC20984")]
		public void open_website()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xC2064C", Offset = "0xC2064C", VA = "0xC2064C")]
		private string encode(string val)
		{
			return null;
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xC20AE0", Offset = "0xC20AE0", VA = "0xC20AE0")]
		private string decode(string val)
		{
			return null;
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xC20C60", Offset = "0xC20C60", VA = "0xC20C60")]
		public void test()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xC20E30", Offset = "0xC20E30", VA = "0xC20E30")]
		public rewardbox1()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class rewardgun1 : MonoBehaviour
	{
		[Token(Token = "0x2000231")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E090", Offset = "0x62E090")]
		private sealed class <unbox_co>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public rewardgun1 <>4__this;

			[Token(Token = "0x17000154")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CCE")]
				[Address(RVA = "0xB521FC", Offset = "0xB521FC", VA = "0xB521FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000155")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CD0")]
				[Address(RVA = "0xB52244", Offset = "0xB52244", VA = "0xB52244", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0xB520C4", Offset = "0xB520C4", VA = "0xB520C4")]
			[DebuggerHidden]
			public <unbox_co>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0xB520F0", Offset = "0xB520F0", VA = "0xB520F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0xB520F4", Offset = "0xB520F4", VA = "0xB520F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0xB52204", Offset = "0xB52204", VA = "0xB52204", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool CheckToHide;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> bullets;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody rb;

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xC20E9C", Offset = "0xC20E9C", VA = "0xC20E9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xC20F4C", Offset = "0xC20F4C", VA = "0xC20F4C")]
		public void remove_bullet(tool_firearm gun)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xC20910", Offset = "0xC20910", VA = "0xC20910")]
		public void unbox()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xC20FF4", Offset = "0xC20FF4", VA = "0xC20FF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D630", Offset = "0x63D630")]
		private IEnumerator unbox_co()
		{
			return null;
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xC21074", Offset = "0xC21074", VA = "0xC21074")]
		public rewardgun1()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class roadcar : hitable
	{
		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private roadpoint[] roadpoints;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private roadpoint from;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private roadpoint to;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float next_move;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float speed;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float tilt;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float prev_tilt;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float last_tilt;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float next_tilt;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject effect;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<npc> npcs;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public npc driver;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public npc jumper;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool jumped;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform[] wheels;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Collider[] car_colliders;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Rigidbody rb;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int health;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public bool removed;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool first_drive;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int first_drive_index;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool first_drive_started;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private roadpoint first_drive_point;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<roadpoint> first_drive_visits;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool count_as_progress;

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xC214D4", Offset = "0xC214D4", VA = "0xC214D4")]
		public void init(roadpoint enter, roadpoint[] points)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xC21A64", Offset = "0xC21A64", VA = "0xC21A64")]
		private void clear_npcs(Vector3 point)
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xC21DC0", Offset = "0xC21DC0", VA = "0xC21DC0")]
		private void explode(Vector3 point)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xC2210C", Offset = "0xC2210C", VA = "0xC2210C")]
		public void npc_hit(npc npc)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xC22150", Offset = "0xC22150", VA = "0xC22150")]
		public npc get_jumper()
		{
			return null;
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xC22288", Offset = "0xC22288", VA = "0xC22288")]
		private bool can_attack()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xC224A0", Offset = "0xC224A0", VA = "0xC224A0")]
		private void auto_remove()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xC22768", Offset = "0xC22768", VA = "0xC22768")]
		public void test()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xC22814", Offset = "0xC22814", VA = "0xC22814", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xC22838", Offset = "0xC22838", VA = "0xC22838")]
		private void first_drive_start()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xC22A54", Offset = "0xC22A54", VA = "0xC22A54")]
		private bool first_drive_update()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xC22B50", Offset = "0xC22B50", VA = "0xC22B50")]
		private float get_speed()
		{
			return default(float);
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xC22C84", Offset = "0xC22C84", VA = "0xC22C84")]
		private void drive()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xC23600", Offset = "0xC23600", VA = "0xC23600")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xC23624", Offset = "0xC23624", VA = "0xC23624")]
		public roadcar()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class roadheli : hitable
	{
		[Token(Token = "0x2000234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E0A0", Offset = "0x62E0A0")]
		private sealed class <ai>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public roadheli <>4__this;

			[Token(Token = "0x4000CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <clip>5__2;

			[Token(Token = "0x4000CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <left>5__3;

			[Token(Token = "0x4000CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <target>5__4;

			[Token(Token = "0x4000CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <speed>5__5;

			[Token(Token = "0x17000156")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CE9")]
				[Address(RVA = "0xB525B0", Offset = "0xB525B0", VA = "0xB525B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000157")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CEB")]
				[Address(RVA = "0xB525F8", Offset = "0xB525F8", VA = "0xB525F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0xB5224C", Offset = "0xB5224C", VA = "0xB5224C")]
			[DebuggerHidden]
			public <ai>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0xB52278", Offset = "0xB52278", VA = "0xB52278", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0xB5227C", Offset = "0xB5227C", VA = "0xB5227C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0xB525B8", Offset = "0xB525B8", VA = "0xB525B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform blades1;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform blades2;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform wrap;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float float_speed;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float float_from;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float float_to;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float tilt_speed;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tilt_from;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float tilt_to;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int health;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Rigidbody rb;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool arrived;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 start_position;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 target_position;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject model;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public npc driver;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject effect;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public sound sound_blades;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bullet bullet_effect_prefab;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject muzzle_effect;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject muzzle_effect_visual;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public sound muzzle_sound;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int damage;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool count_as_progress;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public npc npc;

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xC23914", Offset = "0xC23914", VA = "0xC23914")]
		public void init(roadpoint point)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xC23A70", Offset = "0xC23A70", VA = "0xC23A70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D6E8", Offset = "0x63D6E8")]
		private IEnumerator ai()
		{
			return null;
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xC23AF0", Offset = "0xC23AF0", VA = "0xC23AF0", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xC23B14", Offset = "0xC23B14", VA = "0xC23B14")]
		private void explode(Vector3 point)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xC23C54", Offset = "0xC23C54", VA = "0xC23C54")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xC23E6C", Offset = "0xC23E6C", VA = "0xC23E6C")]
		public roadheli()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class roadplane : MonoBehaviour
	{
		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform wrap;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] blades;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float float_speed;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float float_from;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float float_to;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float tilt_speed;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float tilt_from;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float tilt_to;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Rigidbody rb;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool arrived;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool removed;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 start_position;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 target_position;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 remove_position;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public npc[] npcs;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public sound engine;

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xC23EBC", Offset = "0xC23EBC", VA = "0xC23EBC")]
		public void init()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xC24070", Offset = "0xC24070", VA = "0xC24070")]
		public void npc_hit(npc npc)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xC240B4", Offset = "0xC240B4", VA = "0xC240B4")]
		public void remove()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xC240C0", Offset = "0xC240C0", VA = "0xC240C0")]
		public bool alive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xC241A0", Offset = "0xC241A0", VA = "0xC241A0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xC244E4", Offset = "0xC244E4", VA = "0xC244E4")]
		public roadplane()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class roadpoint : MonoBehaviour
	{
		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public roadpoint[] connections;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool enter;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public roadcar car;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public roadheli heli;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public roadplane plane;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float speed_factor;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool can_jump;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool can_attack;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public roadpoint[] first_drive_points;

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xC2452C", Offset = "0xC2452C", VA = "0xC2452C")]
		public roadpoint()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class shootings : MonoBehaviour
	{
		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static shootings instance;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int stats_player_shoots;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int stats_player_hits;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int stats_npc_shoots;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int stats_ceasefire;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int stats_ceasefire_cancel;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float next_shoot;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float shoot_margin;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float ceasefire_duration_min;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float ceasefire_duration_max;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool player_have_hit;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float player_last_hit;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int shoots_count;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public base_event on_shot_miss;

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xC27038", Offset = "0xC27038", VA = "0xC27038")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xC270BC", Offset = "0xC270BC", VA = "0xC270BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xC27124", Offset = "0xC27124", VA = "0xC27124")]
		public void player_hit()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xC27180", Offset = "0xC27180", VA = "0xC27180")]
		public int get_accuracy()
		{
			return default(int);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xC271C8", Offset = "0xC271C8", VA = "0xC271C8")]
		public void player_shoot(bool missed)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xC272C0", Offset = "0xC272C0", VA = "0xC272C0")]
		private void ceasefire()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xC2731C", Offset = "0xC2731C", VA = "0xC2731C")]
		public bool request(npc npc)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xC27420", Offset = "0xC27420", VA = "0xC27420")]
		public shootings()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class skin : MonoBehaviour
	{
		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool RandomModelOnAwake;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Renderer head_rend;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Material head_mat;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Renderer hair_rend;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Material hair_mat;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public Renderer scarf_rend;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public Material scarf_mat;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public Renderer body_rend;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public Material body_mat;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Renderer backpack_rend;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public Material backpack_mat;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public Renderer belt_rend;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public Material belt_mat;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public Renderer legs_rend;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public Material legs_mat;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool random;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63768C", Offset = "0x63768C")]
		public Renderer[] head_rends;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Material[] head_mats;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Renderer[] hair_rends;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Material[] hair_mats;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Renderer[] body_rends;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Material[] body_mats;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Renderer[] backpack_rends;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Material[] backpack_mats;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Renderer[] belt_rends;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Material[] belt_mats;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Renderer[] scarf_rends;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Material[] scarf_mats;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Renderer[] legs_rends;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Material[] legs_mats;

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xC27440", Offset = "0xC27440", VA = "0xC27440")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xC276B8", Offset = "0xC276B8", VA = "0xC276B8")]
		public void TestTest()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xC27728", Offset = "0xC27728", VA = "0xC27728")]
		public Renderer get_head()
		{
			return null;
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xC277B8", Offset = "0xC277B8", VA = "0xC277B8")]
		private void UpdateSkin()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xC27450", Offset = "0xC27450", VA = "0xC27450")]
		public void RandomModel()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xC28050", Offset = "0xC28050", VA = "0xC28050")]
		public void RandomMaterial()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xC28554", Offset = "0xC28554", VA = "0xC28554")]
		public skin()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class spawn : MonoBehaviour
	{
		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float move_distance;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int spawns_count;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int spawns_limit;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float trigger_range;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string zone;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool agent;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool melee;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool fire;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public npc npc;

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xC28C00", Offset = "0xC28C00", VA = "0xC28C00")]
		public spawn()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class uibutton : hitable
	{
		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float last_button;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider col;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject hover;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public sound ClickSound;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public base_event on_press;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hovered;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private hand current_hand;

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x7CFC3C", Offset = "0x7CFC3C", VA = "0x7CFC3C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x7CFF08", Offset = "0x7CFF08", VA = "0x7CFF08")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x7CFFA4", Offset = "0x7CFFA4", VA = "0x7CFFA4")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x7D0094", Offset = "0x7D0094", VA = "0x7D0094", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x7D00C4", Offset = "0x7D00C4", VA = "0x7D00C4", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x7D0180", Offset = "0x7D0180", VA = "0x7D0180", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x7D0220", Offset = "0x7D0220", VA = "0x7D0220")]
		public uibutton()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class UpdateRequired : MonoBehaviour
	{
		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool first;

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x10EF8BC", Offset = "0x10EF8BC", VA = "0x10EF8BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x10EF8F8", Offset = "0x10EF8F8", VA = "0x10EF8F8")]
		private bool show()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x10EFA34", Offset = "0x10EFA34", VA = "0x10EFA34")]
		public void button_update()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x10EFB54", Offset = "0x10EFB54", VA = "0x10EFB54")]
		public UpdateRequired()
		{
		}
	}
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x62E0B0", Offset = "0x62E0B0")]
	public class weapon : MonoBehaviour
	{
		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public npc npc;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeAnimatorController animatorController;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool silence;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int clip;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int bullets;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float reload_time;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float margin;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float reloading_end;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float last_shoot;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool reloading;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool attached;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float muzzle_effect_seconds;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float muzzle_effect_end;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bullet bullet_effect_prefab;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6376E4", Offset = "0x6376E4")]
		public Transform model_right_hand;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject muzzle_effect_right;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public sound shoot_sound_right;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Rigidbody rb_right;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63772C", Offset = "0x63772C")]
		public Transform model_left_hand;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject muzzle_effect_left;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public sound shoot_sound_left;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Rigidbody rb_left;

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x7D4098", Offset = "0x7D4098", VA = "0x7D4098")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x7D41F4", Offset = "0x7D41F4", VA = "0x7D41F4")]
		private void SetGlobalScale(Transform trans, Vector3 globalScale)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x7D4290", Offset = "0x7D4290", VA = "0x7D4290")]
		public void unload()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x7D4310", Offset = "0x7D4310", VA = "0x7D4310")]
		public void remove()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x7D43D4", Offset = "0x7D43D4", VA = "0x7D43D4")]
		public void add(npc _npc)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x7D4634", Offset = "0x7D4634", VA = "0x7D4634")]
		public void detach()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x7D4758", Offset = "0x7D4758", VA = "0x7D4758")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x7D487C", Offset = "0x7D487C", VA = "0x7D487C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x7D4AE4", Offset = "0x7D4AE4", VA = "0x7D4AE4")]
		public bool reload()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x7D4B44", Offset = "0x7D4B44", VA = "0x7D4B44")]
		public void use_fake()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x7D4C68", Offset = "0x7D4C68", VA = "0x7D4C68")]
		private void shoot_sound()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x7D4DD8", Offset = "0x7D4DD8", VA = "0x7D4DD8")]
		public bool use()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x7D4E64", Offset = "0x7D4E64", VA = "0x7D4E64")]
		public void projectile(Vector3 target, float speed, int damage, npc npc)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x7D51B4", Offset = "0x7D51B4", VA = "0x7D51B4")]
		public weapon()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class helper
	{
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x9D23B0", Offset = "0x9D23B0", VA = "0x9D23B0")]
		public static float DistanceXZ(Vector3 v1, Vector3 v2)
		{
			return default(float);
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x9D23C0", Offset = "0x9D23C0", VA = "0x9D23C0")]
		public static Vector3 DirectionXZ(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x9D23D0", Offset = "0x9D23D0", VA = "0x9D23D0")]
		public static Quaternion LookAtY(Vector3 origin, Vector3 target)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x9D23E4", Offset = "0x9D23E4", VA = "0x9D23E4")]
		public static Vector3 NearestPointOnFiniteLine(Vector3 start, Vector3 end, Vector3 pnt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x9D24B8", Offset = "0x9D24B8", VA = "0x9D24B8")]
		public helper()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class BhapticsManagerGinra : MonoBehaviour
	{
		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BhapticsManagerGinra instance;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VestHapticClip bhaptic_paired;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool started;

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xCB88B4", Offset = "0xCB88B4", VA = "0xCB88B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xCB8910", Offset = "0xCB8910", VA = "0xCB8910")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xCB8A40", Offset = "0xCB8A40", VA = "0xCB8A40")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xCB8A98", Offset = "0xCB8A98", VA = "0xCB8A98")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xCB8ABC", Offset = "0xCB8ABC", VA = "0xCB8ABC")]
		public bool is_paired()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xCB8B90", Offset = "0xCB8B90", VA = "0xCB8B90")]
		public bool show_in_menu()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xCB8B98", Offset = "0xCB8B98", VA = "0xCB8B98")]
		public BhapticsManagerGinra()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class Floating : MonoBehaviour
	{
		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float from;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float to;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 org_pos;

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x8EA978", Offset = "0x8EA978", VA = "0x8EA978")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x8EA9B4", Offset = "0x8EA9B4", VA = "0x8EA9B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x8EAA70", Offset = "0x8EAA70", VA = "0x8EAA70")]
		public Floating()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class fps : MonoBehaviour
	{
		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup canvas_group;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float updateInterval;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float accum;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int frames;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timeLeft;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI fps_text;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image fps_back;

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x9CCF84", Offset = "0x9CCF84", VA = "0x9CCF84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x9CD044", Offset = "0x9CD044", VA = "0x9CD044")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x9CD288", Offset = "0x9CD288", VA = "0x9CD288")]
		public fps()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class hidemesh : MonoBehaviour
	{
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x9D24C0", Offset = "0x9D24C0", VA = "0x9D24C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x9D2580", Offset = "0x9D2580", VA = "0x9D2580")]
		public hidemesh()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class HierarchySort : MonoBehaviour
	{
		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer compare1;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer compare2;

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x8F2ED4", Offset = "0x8F2ED4", VA = "0x8F2ED4")]
		public HierarchySort()
		{
		}
	}
	[Token(Token = "0x2000243")]
	internal static class ListHelper
	{
		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random rnd;

		[Token(Token = "0x6000D33")]
		public static void Shuffle<T>(this IList<T> list)
		{
		}

		[Token(Token = "0x6000D34")]
		public static void Swap<T>(this IList<T> list, int i, int j)
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class LookAtCamera : MonoBehaviour
	{
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xBA8914", Offset = "0xBA8914", VA = "0xBA8914")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xBA89FC", Offset = "0xBA89FC", VA = "0xBA89FC")]
		public LookAtCamera()
		{
		}
	}
	[Token(Token = "0x2000245")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62E0D4", Offset = "0x62E0D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62E0D4", Offset = "0x62E0D4")]
	public class MeshCombine : MonoBehaviour
	{
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xBAD648", Offset = "0xBAD648", VA = "0xBAD648")]
		public void combine()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xBAD8C0", Offset = "0xBAD8C0", VA = "0xBAD8C0")]
		public MeshCombine()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class RotateInPlace : MonoBehaviour
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 speed;

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xC6C1DC", Offset = "0xC6C1DC", VA = "0xC6C1DC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xC6C214", Offset = "0xC6C214", VA = "0xC6C214")]
		public RotateInPlace()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class SnapSurface : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E170", Offset = "0x62E170")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__6_0;

			[Token(Token = "0x6000D44")]
			[Address(RVA = "0xA7A8AC", Offset = "0xA7A8AC", VA = "0xA7A8AC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D45")]
			[Address(RVA = "0xA7A8B4", Offset = "0xA7A8B4", VA = "0xA7A8B4")]
			internal int <getBottomPosition>b__6_0(RaycastHit a, RaycastHit b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int size;

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xC70CF4", Offset = "0xC70CF4", VA = "0xC70CF4")]
		private void DrawMesh(int grid, bool raycast)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xC71270", Offset = "0xC71270", VA = "0xC71270")]
		public void Snap()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xC7127C", Offset = "0xC7127C", VA = "0xC7127C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xC71260", Offset = "0xC71260", VA = "0xC71260")]
		private int index(int x, int z, int grid)
		{
			return default(int);
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xC7126C", Offset = "0xC7126C", VA = "0xC7126C")]
		private Vector3 getBottomPosition(float x, float y, float z)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xC71288", Offset = "0xC71288", VA = "0xC71288")]
		private Vector3 getBottomPosition(Vector3 top)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xC71558", Offset = "0xC71558", VA = "0xC71558")]
		public SnapSurface()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class SnapToGround : MonoBehaviour
	{
		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xC71568", Offset = "0xC71568", VA = "0xC71568")]
		public SnapToGround()
		{
		}
	}
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x62E180", Offset = "0x62E180")]
	public class syncbones : MonoBehaviour
	{
		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator ani;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float EndTime;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float MecanimBlendTime;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float GetUpTransitionTime;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float BlendAmount;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 FeetPosition;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 HeadPosition;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 HipPosition;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Transform, Vector3> storedPosition;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Transform, Quaternion> storedRotation;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool progress;

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xC2ADC0", Offset = "0xC2ADC0", VA = "0xC2ADC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xC2AE78", Offset = "0xC2AE78", VA = "0xC2AE78")]
		public void run()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xC2B2A4", Offset = "0xC2B2A4", VA = "0xC2B2A4")]
		public void stop()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xC2B2AC", Offset = "0xC2B2AC", VA = "0xC2B2AC")]
		private float GetFloorPosition(Vector3 newRootPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xC2B5D8", Offset = "0xC2B5D8", VA = "0xC2B5D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xC2BCE8", Offset = "0xC2BCE8", VA = "0xC2BCE8")]
		public syncbones()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class unactivate : MonoBehaviour
	{
		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timer;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float delay;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool destroy;

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x7D0228", Offset = "0x7D0228", VA = "0x7D0228")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x7D02CC", Offset = "0x7D02CC", VA = "0x7D02CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x7D0344", Offset = "0x7D0344", VA = "0x7D0344")]
		public unactivate()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class level : MonoBehaviour
	{
		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x9D4270", Offset = "0x9D4270", VA = "0x9D4270")]
		public void KillAllEnemies()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x9D4428", Offset = "0x9D4428", VA = "0x9D4428")]
		public void improve_npc(npc npc, float pre, bool extra = false)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x9D45C8", Offset = "0x9D45C8", VA = "0x9D45C8")]
		public level()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class level_0 : level
	{
		[Token(Token = "0x200024E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E194", Offset = "0x62E194")]
		private sealed class <blinking>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_0 <>4__this;

			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <go>5__2;

			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <show>5__3;

			[Token(Token = "0x17000158")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D5E")]
				[Address(RVA = "0xA7EE5C", Offset = "0xA7EE5C", VA = "0xA7EE5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000159")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D60")]
				[Address(RVA = "0xA7EEA4", Offset = "0xA7EEA4", VA = "0xA7EEA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xA7ECE0", Offset = "0xA7ECE0", VA = "0xA7ECE0")]
			[DebuggerHidden]
			public <blinking>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0xA7ED0C", Offset = "0xA7ED0C", VA = "0xA7ED0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xA7ED10", Offset = "0xA7ED10", VA = "0xA7ED10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xA7EE64", Offset = "0xA7EE64", VA = "0xA7EE64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public hud hud;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool level_started;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform look_gun;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform look_board;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool show_tutorial;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject level1blink;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject level2blink;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject[] pico_hidden_objects;

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x9D45D0", Offset = "0x9D45D0", VA = "0x9D45D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x9D4900", Offset = "0x9D4900", VA = "0x9D4900")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x9D4904", Offset = "0x9D4904", VA = "0x9D4904")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x9D4A98", Offset = "0x9D4A98", VA = "0x9D4A98")]
		private void Tutorial()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x9D4B8C", Offset = "0x9D4B8C", VA = "0x9D4B8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D7C0", Offset = "0x63D7C0")]
		private IEnumerator blinking()
		{
			return null;
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x9D4C0C", Offset = "0x9D4C0C", VA = "0x9D4C0C")]
		public void on_gun_select(toolbase tool)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x9D4CE8", Offset = "0x9D4CE8", VA = "0x9D4CE8")]
		public void on_gun_unselect(toolbase tool)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x9D4DC4", Offset = "0x9D4DC4", VA = "0x9D4DC4")]
		public level_0()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class level_1 : level
	{
		[Token(Token = "0x2000250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E1A4", Offset = "0x62E1A4")]
		private sealed class <PlayMusicCoroutine>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_1 <>4__this;

			[Token(Token = "0x4000D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4000D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4000D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4000D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x1700015A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D8E")]
				[Address(RVA = "0xA7F5DC", Offset = "0xA7F5DC", VA = "0xA7F5DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D90")]
				[Address(RVA = "0xA7F624", Offset = "0xA7F624", VA = "0xA7F624", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0xA7F338", Offset = "0xA7F338", VA = "0xA7F338")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0xA7F364", Offset = "0xA7F364", VA = "0xA7F364", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0xA7F368", Offset = "0xA7F368", VA = "0xA7F368", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0xA7F5E4", Offset = "0xA7F5E4", VA = "0xA7F5E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000251")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E1B4", Offset = "0x62E1B4")]
		private sealed class <LevelFailedCoroutine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_1 <>4__this;

			[Token(Token = "0x4000D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private npc[] <>7__wrap1;

			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x1700015C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D94")]
				[Address(RVA = "0xA7F2E8", Offset = "0xA7F2E8", VA = "0xA7F2E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D96")]
				[Address(RVA = "0xA7F330", Offset = "0xA7F330", VA = "0xA7F330", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D91")]
			[Address(RVA = "0xA7EEAC", Offset = "0xA7EEAC", VA = "0xA7EEAC")]
			[DebuggerHidden]
			public <LevelFailedCoroutine>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xA7EED8", Offset = "0xA7EED8", VA = "0xA7EED8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D93")]
			[Address(RVA = "0xA7EEDC", Offset = "0xA7EEDC", VA = "0xA7EEDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D95")]
			[Address(RVA = "0xA7F2F0", Offset = "0xA7F2F0", VA = "0xA7F2F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000252")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E1C4", Offset = "0x62E1C4")]
		private sealed class <middle_waves>d__85 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_1 <>4__this;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private npc <lastnpc>5__2;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private path[] <>7__wrap2;

			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private path <path>5__5;

			[Token(Token = "0x1700015E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D9A")]
				[Address(RVA = "0xA80998", Offset = "0xA80998", VA = "0xA80998", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D9C")]
				[Address(RVA = "0xA809E0", Offset = "0xA809E0", VA = "0xA809E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D97")]
			[Address(RVA = "0xA7FBFC", Offset = "0xA7FBFC", VA = "0xA7FBFC")]
			[DebuggerHidden]
			public <middle_waves>d__85(int <>1__state)
			{
			}

			[Token(Token = "0x6000D98")]
			[Address(RVA = "0xA7FC28", Offset = "0xA7FC28", VA = "0xA7FC28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D99")]
			[Address(RVA = "0xA7FC2C", Offset = "0xA7FC2C", VA = "0xA7FC2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0xA809A0", Offset = "0xA809A0", VA = "0xA809A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000253")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E1D4", Offset = "0x62E1D4")]
		private sealed class <final_random>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_1 <>4__this;

			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x17000160")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DA0")]
				[Address(RVA = "0xA7FBAC", Offset = "0xA7FBAC", VA = "0xA7FBAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000161")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DA2")]
				[Address(RVA = "0xA7FBF4", Offset = "0xA7FBF4", VA = "0xA7FBF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0xA7F62C", Offset = "0xA7F62C", VA = "0xA7F62C")]
			[DebuggerHidden]
			public <final_random>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xA7F658", Offset = "0xA7F658", VA = "0xA7F658", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xA7F65C", Offset = "0xA7F65C", VA = "0xA7F65C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0xA7FBB4", Offset = "0xA7FBB4", VA = "0xA7FBB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool skip_intro;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public point skip_captain_point;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public hud hud;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool level_started;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool level_ended;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool _snipper_shoot;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _snipper_reloads;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _snipper_select;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _pistol_select;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool _rifle_select;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound level_end_shoots;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public lips captain_lips;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public npc captain;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public npc[] squad;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public npc[] squad_combat;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public npc[] civilians;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public npc[] guards;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public car[] cars;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public path[] cars_paths;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject[] extra_items;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform look_guards;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform look_alcobra;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform look_wanted;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform captain_head;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public sound captain_audio;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public tool_firearm weapon_sniper;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public tool_firearm weapon_pistol_1;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public tool_firearm weapon_pistol_2;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public tool_firearm weapon_rifle;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject capture;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public path[] wave_1_paths;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public path[] wave_2_paths;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public path[] wave_3_paths;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public path[] wave_4_paths;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public path[] wave_5_paths;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public path[] wave_6_paths;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public path[] all_paths;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public npc[] npc_bank;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float sound_last;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float sound_cooldown;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public sound sound_source;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int sound_kills_count;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int sound_hits_count;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float sound_last_idle;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int player_last_health;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private sound music_current;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public sound music_idle;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public sound music_action;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public sound music_win;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public sound music_lose;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<npc> enemies;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private int update_part;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private int random_npc_total;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int random_npc_limit;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private int total_to_kill;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int total_killed;

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x9D4DD4", Offset = "0x9D4DD4", VA = "0x9D4DD4")]
		public void Tests()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x9D500C", Offset = "0x9D500C", VA = "0x9D500C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x9D5640", Offset = "0x9D5640", VA = "0x9D5640")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x9D62F0", Offset = "0x9D62F0", VA = "0x9D62F0")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x9D63C0", Offset = "0x9D63C0", VA = "0x9D63C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D878", Offset = "0x63D878")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x9D6220", Offset = "0x9D6220", VA = "0x9D6220")]
		private void PlaySound(string name)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x9D5488", Offset = "0x9D5488", VA = "0x9D5488")]
		private void PrepareLevel()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x9D5AD0", Offset = "0x9D5AD0", VA = "0x9D5AD0")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x9D6100", Offset = "0x9D6100", VA = "0x9D6100")]
		private void LevelFailed()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x9D6454", Offset = "0x9D6454", VA = "0x9D6454")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D8E0", Offset = "0x63D8E0")]
		private IEnumerator LevelFailedCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x9D64D4", Offset = "0x9D64D4", VA = "0x9D64D4")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x9D659C", Offset = "0x9D659C", VA = "0x9D659C")]
		public void begin_0()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x9D65A0", Offset = "0x9D65A0", VA = "0x9D65A0")]
		public void begin_1()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x9D69B8", Offset = "0x9D69B8", VA = "0x9D69B8")]
		public void begin_2()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x9D69FC", Offset = "0x9D69FC", VA = "0x9D69FC")]
		public void begin_3()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x9D6D60", Offset = "0x9D6D60", VA = "0x9D6D60")]
		public void begin_4()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x9D6E0C", Offset = "0x9D6E0C", VA = "0x9D6E0C")]
		public void begin_5()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x9D6FE8", Offset = "0x9D6FE8", VA = "0x9D6FE8")]
		public void begin_6()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x9D71B4", Offset = "0x9D71B4", VA = "0x9D71B4")]
		public void begin_skip()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x9D738C", Offset = "0x9D738C", VA = "0x9D738C")]
		public void snipper_unselect(toolbase tool)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x9D7390", Offset = "0x9D7390", VA = "0x9D7390")]
		public void snipper_select(toolbase tool)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x9D74B4", Offset = "0x9D74B4", VA = "0x9D74B4")]
		public void snipper_second_select(toolbase tool)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x9D74B8", Offset = "0x9D74B8", VA = "0x9D74B8")]
		public void snipper_reload(tool_firearm firearm)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x9D4DD8", Offset = "0x9D4DD8", VA = "0x9D4DD8")]
		public void snipper_shoot(tool_firearm firearm)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x9D6004", Offset = "0x9D6004", VA = "0x9D6004")]
		private void begin_update()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x9D74C8", Offset = "0x9D74C8", VA = "0x9D74C8")]
		public void middle_1()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x9D74E8", Offset = "0x9D74E8", VA = "0x9D74E8")]
		public void middle_2()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x9D784C", Offset = "0x9D784C", VA = "0x9D784C")]
		public void pistol_select(toolbase tool)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x9D79DC", Offset = "0x9D79DC", VA = "0x9D79DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D948", Offset = "0x63D948")]
		private IEnumerator middle_waves()
		{
			return null;
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x9D7A5C", Offset = "0x9D7A5C", VA = "0x9D7A5C")]
		public void final_1()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x9D7E00", Offset = "0x9D7E00", VA = "0x9D7E00")]
		public void rifle_select(toolbase tool)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x9D7FB0", Offset = "0x9D7FB0", VA = "0x9D7FB0")]
		private path final_get_free_path()
		{
			return null;
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x9D7F30", Offset = "0x9D7F30", VA = "0x9D7F30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63D9B0", Offset = "0x63D9B0")]
		private IEnumerator final_random()
		{
			return null;
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x9D8228", Offset = "0x9D8228", VA = "0x9D8228")]
		public void final_2()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x9D8330", Offset = "0x9D8330", VA = "0x9D8330")]
		public void final_3()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x9D857C", Offset = "0x9D857C", VA = "0x9D857C")]
		public void final_4()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x9D8608", Offset = "0x9D8608", VA = "0x9D8608")]
		public void civilian_hit(npc npc)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x9D870C", Offset = "0x9D870C", VA = "0x9D870C")]
		public void civilian_path_complete(npc npc)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x9D873C", Offset = "0x9D873C", VA = "0x9D873C")]
		public void car_path_complete(car car)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x9D5C74", Offset = "0x9D5C74", VA = "0x9D5C74")]
		private void UpdateCars()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x9D87E0", Offset = "0x9D87E0", VA = "0x9D87E0")]
		public level_1()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class level_2 : level
	{
		[Token(Token = "0x2000255")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E1E4", Offset = "0x62E1E4")]
		private sealed class <PlayMusicCoroutine>d__85 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_2 <>4__this;

			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x17000162")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DCC")]
				[Address(RVA = "0xA8176C", Offset = "0xA8176C", VA = "0xA8176C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000163")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DCE")]
				[Address(RVA = "0xA817B4", Offset = "0xA817B4", VA = "0xA817B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0xA814D4", Offset = "0xA814D4", VA = "0xA814D4")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__85(int <>1__state)
			{
			}

			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xA81500", Offset = "0xA81500", VA = "0xA81500", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0xA81504", Offset = "0xA81504", VA = "0xA81504", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0xA81774", Offset = "0xA81774", VA = "0xA81774", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000256")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E1F4", Offset = "0x62E1F4")]
		private sealed class <LevelFailedCoroutine>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_2 <>4__this;

			[Token(Token = "0x17000164")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DD2")]
				[Address(RVA = "0xA80CC0", Offset = "0xA80CC0", VA = "0xA80CC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000165")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DD4")]
				[Address(RVA = "0xA80D08", Offset = "0xA80D08", VA = "0xA80D08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0xA809E8", Offset = "0xA809E8", VA = "0xA809E8")]
			[DebuggerHidden]
			public <LevelFailedCoroutine>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0xA80A14", Offset = "0xA80A14", VA = "0xA80A14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0xA80A18", Offset = "0xA80A18", VA = "0xA80A18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0xA80CC8", Offset = "0xA80CC8", VA = "0xA80CC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000257")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E204", Offset = "0x62E204")]
		private sealed class <NextFloor>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_2 <>4__this;

			[Token(Token = "0x4000E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <from>5__2;

			[Token(Token = "0x4000E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <to>5__3;

			[Token(Token = "0x4000E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <duration>5__4;

			[Token(Token = "0x4000E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <pass>5__5;

			[Token(Token = "0x17000166")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DD8")]
				[Address(RVA = "0xA81484", Offset = "0xA81484", VA = "0xA81484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000167")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DDA")]
				[Address(RVA = "0xA814CC", Offset = "0xA814CC", VA = "0xA814CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0xA80D10", Offset = "0xA80D10", VA = "0xA80D10")]
			[DebuggerHidden]
			public <NextFloor>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0xA80D3C", Offset = "0xA80D3C", VA = "0xA80D3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0xA80D40", Offset = "0xA80D40", VA = "0xA80D40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0xA8148C", Offset = "0xA8148C", VA = "0xA8148C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E214", Offset = "0x62E214")]
		private sealed class <floor_1_5>d__99 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_2 <>4__this;

			[Token(Token = "0x4000E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x17000168")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DDE")]
				[Address(RVA = "0xA81C84", Offset = "0xA81C84", VA = "0xA81C84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000169")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DE0")]
				[Address(RVA = "0xA81CCC", Offset = "0xA81CCC", VA = "0xA81CCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0xA817BC", Offset = "0xA817BC", VA = "0xA817BC")]
			[DebuggerHidden]
			public <floor_1_5>d__99(int <>1__state)
			{
			}

			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0xA817E8", Offset = "0xA817E8", VA = "0xA817E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0xA817EC", Offset = "0xA817EC", VA = "0xA817EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0xA81C8C", Offset = "0xA81C8C", VA = "0xA81C8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000259")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E224", Offset = "0x62E224")]
		private sealed class <floor_2_4>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_2 <>4__this;

			[Token(Token = "0x4000E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x4000E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <last_civilian>5__3;

			[Token(Token = "0x4000E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int[] <health>5__4;

			[Token(Token = "0x1700016A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DE4")]
				[Address(RVA = "0xA82358", Offset = "0xA82358", VA = "0xA82358", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DE6")]
				[Address(RVA = "0xA823A0", Offset = "0xA823A0", VA = "0xA823A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0xA81CD4", Offset = "0xA81CD4", VA = "0xA81CD4")]
			[DebuggerHidden]
			public <floor_2_4>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0xA81D00", Offset = "0xA81D00", VA = "0xA81D00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0xA81D04", Offset = "0xA81D04", VA = "0xA81D04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0xA82360", Offset = "0xA82360", VA = "0xA82360", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200025A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E234", Offset = "0x62E234")]
		private sealed class <floor_3_3>d__108 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_2 <>4__this;

			[Token(Token = "0x4000E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] <health>5__2;

			[Token(Token = "0x4000E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <next>5__3;

			[Token(Token = "0x1700016C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DEA")]
				[Address(RVA = "0xA83070", Offset = "0xA83070", VA = "0xA83070", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DEC")]
				[Address(RVA = "0xA830B8", Offset = "0xA830B8", VA = "0xA830B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0xA823A8", Offset = "0xA823A8", VA = "0xA823A8")]
			[DebuggerHidden]
			public <floor_3_3>d__108(int <>1__state)
			{
			}

			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0xA823D4", Offset = "0xA823D4", VA = "0xA823D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0xA823D8", Offset = "0xA823D8", VA = "0xA823D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0xA83078", Offset = "0xA83078", VA = "0xA83078", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool skip_intro;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_floor;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int start_floor;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public hud hud;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool level_started;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool level_ended;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool elevator_busy;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Elevator;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform elevator_door_right;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform elevator_door_left;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform elevator_door_left_open;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform elevator_door_left_close;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform elevator_door_right_open;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform elevator_door_right_close;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 floor_0_pos;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 floor_1_pos;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 floor_2_pos;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 floor_3_pos;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject floor_0;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject floor_1;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject floor_2;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject floor_3;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public sound elevator_door_open;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public sound elevator_door_close;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public sound elevator_ring;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private sound music_current;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public sound music_idle;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public sound music_action;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public sound music_win;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public sound music_lose;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public sound music_elevator;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Text display_floor_number;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject display_floor_arrow;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<npc> enemies;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<npc> civilians;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public tool_firearm rifle_1;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public tool_firearm rifle_2;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GameObject rifle_1_broken;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public GameObject rifle_2_broken;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Rigidbody[] rifle_1_broken_bodies;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Rigidbody[] rifle_2_broken_bodies;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public npc floor_0_captain;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public lips floor_0_captain_lips;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public sound floor_0_captain_audio;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Transform floor_1_captain_head;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool floor_1_arrived;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		private bool floor_1_started;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public path[] floor_1_paths;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public npc[] floor_1_npcs;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public npc floor_1_guard;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public npc[] floor_1_civilians;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private int floor_1_npc_total;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private int floor_1_npc_limit;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public npc floor_2_guard;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool floor_2_started;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private int floor_2_npc_total;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private int floor_2_npc_limit;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public path[] floor_2_paths;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public npc[] floor_2_npcs;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public path[] floor_2_paths_civilians;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public npc[] floor_2_npcs_civilians;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public npc floor_3_civilian;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public npc floor_3_boss;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool floor_3_boss_outline_show;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float outline_width_dir;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private float outline_width;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public Outline floor_3_boss_outline;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public npc floor_3_captain;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public npc floor_3_gunny;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private int floor_3_npc_limit;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public path[] floor_3_paths;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public npc[] floor_3_npcs;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public Dictionary<npc, float> floor_3_npcs_unload;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public sound floor_3_captain_audio;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public lips floor_3_captain_lips;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private int total_to_kill;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private int total_killed;

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x9D8898", Offset = "0x9D8898", VA = "0x9D8898")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x9D8968", Offset = "0x9D8968", VA = "0x9D8968")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x9D916C", Offset = "0x9D916C", VA = "0x9D916C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x9D8F68", Offset = "0x9D8F68", VA = "0x9D8F68")]
		private void update_outline()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x9D8D4C", Offset = "0x9D8D4C", VA = "0x9D8D4C")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x9D975C", Offset = "0x9D975C", VA = "0x9D975C")]
		public void begin_skip()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x9D968C", Offset = "0x9D968C", VA = "0x9D968C")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x9D9868", Offset = "0x9D9868", VA = "0x9D9868")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63DB58", Offset = "0x63DB58")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x9D904C", Offset = "0x9D904C", VA = "0x9D904C")]
		private void LevelFailed()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x9D98FC", Offset = "0x9D98FC", VA = "0x9D98FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63DBC0", Offset = "0x63DBC0")]
		private IEnumerator LevelFailedCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x9D997C", Offset = "0x9D997C", VA = "0x9D997C")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x9D97E8", Offset = "0x9D97E8", VA = "0x9D97E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63DC28", Offset = "0x63DC28")]
		private IEnumerator NextFloor()
		{
			return null;
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x9D9A44", Offset = "0x9D9A44", VA = "0x9D9A44")]
		public void floor_0_1()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x9D9E5C", Offset = "0x9D9E5C", VA = "0x9D9E5C")]
		public void floor_0_2()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x9D9F84", Offset = "0x9D9F84", VA = "0x9D9F84")]
		public void floor_1_1()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x9D9FD0", Offset = "0x9D9FD0", VA = "0x9D9FD0")]
		public void floor_1_2()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x9DA048", Offset = "0x9DA048", VA = "0x9DA048")]
		public void floor_1_3(tool_flashbang flashbang)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x9DA11C", Offset = "0x9DA11C", VA = "0x9DA11C")]
		public void floor_1_3(tool_grenade grenade)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x9DA120", Offset = "0x9DA120", VA = "0x9DA120")]
		public void floor_1_3(tool_firearm weapon)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x9DA04C", Offset = "0x9DA04C", VA = "0x9DA04C")]
		public void floor_1_3()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x9DA1A4", Offset = "0x9DA1A4", VA = "0x9DA1A4")]
		private path get_free_path(path[] _paths, List<npc> _npcs)
		{
			return null;
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x9DA124", Offset = "0x9DA124", VA = "0x9DA124")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63DC90", Offset = "0x63DC90")]
		private IEnumerator floor_1_5()
		{
			return null;
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x9DA41C", Offset = "0x9DA41C", VA = "0x9DA41C")]
		public void civilian_path_complete(npc npc)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x9DA458", Offset = "0x9DA458", VA = "0x9DA458")]
		public void civilian_hit(npc npc)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x9DA55C", Offset = "0x9DA55C", VA = "0x9DA55C")]
		public void floor_2_1()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x9DA744", Offset = "0x9DA744", VA = "0x9DA744")]
		public void floor_2_2()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x9DA7BC", Offset = "0x9DA7BC", VA = "0x9DA7BC")]
		public void floor_2_3(npc npc)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x9DA81C", Offset = "0x9DA81C", VA = "0x9DA81C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63DCF8", Offset = "0x63DCF8")]
		private IEnumerator floor_2_4()
		{
			return null;
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x9DA89C", Offset = "0x9DA89C", VA = "0x9DA89C")]
		public void floor_3_1()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x9DAAE4", Offset = "0x9DAAE4", VA = "0x9DAAE4")]
		public void floor_3_2()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x9DAB38", Offset = "0x9DAB38", VA = "0x9DAB38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63DD60", Offset = "0x63DD60")]
		private IEnumerator floor_3_3()
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x9DABB8", Offset = "0x9DABB8", VA = "0x9DABB8")]
		public void boss_path_stop()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x9DABE0", Offset = "0x9DABE0", VA = "0x9DABE0")]
		public void boss_hit(npc npc)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x9DAC14", Offset = "0x9DAC14", VA = "0x9DAC14")]
		public void floor_3_npc_hit(npc npc)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x9DACD4", Offset = "0x9DACD4", VA = "0x9DACD4")]
		public void floor_3_captain_arrived(npc npc)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x9DAE98", Offset = "0x9DAE98", VA = "0x9DAE98")]
		public void floor_3_completed()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x9DAF24", Offset = "0x9DAF24", VA = "0x9DAF24")]
		public level_2()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class level_3 : level
	{
		[Token(Token = "0x200025C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E244", Offset = "0x62E244")]
		private sealed class <PlayMusicCoroutine>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x1700016E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E0C")]
				[Address(RVA = "0xA83678", Offset = "0xA83678", VA = "0xA83678", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E0E")]
				[Address(RVA = "0xA836C0", Offset = "0xA836C0", VA = "0xA836C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E09")]
			[Address(RVA = "0xA833E0", Offset = "0xA833E0", VA = "0xA833E0")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xA8340C", Offset = "0xA8340C", VA = "0xA8340C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xA83410", Offset = "0xA83410", VA = "0xA83410", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xA83680", Offset = "0xA83680", VA = "0xA83680", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200025D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E254", Offset = "0x62E254")]
		private sealed class <LevelFailedCoroutine>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x17000170")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E12")]
				[Address(RVA = "0xA83390", Offset = "0xA83390", VA = "0xA83390", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000171")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E14")]
				[Address(RVA = "0xA833D8", Offset = "0xA833D8", VA = "0xA833D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xA830C0", Offset = "0xA830C0", VA = "0xA830C0")]
			[DebuggerHidden]
			public <LevelFailedCoroutine>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xA830EC", Offset = "0xA830EC", VA = "0xA830EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xA830F0", Offset = "0xA830F0", VA = "0xA830F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xA83398", Offset = "0xA83398", VA = "0xA83398", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200025E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E264", Offset = "0x62E264")]
		private sealed class <wave_1>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x4000E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<path>.Enumerator <>7__wrap1;

			[Token(Token = "0x4000E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private GameObject[] <>7__wrap2;

			[Token(Token = "0x4000E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap3;

			[Token(Token = "0x17000172")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E19")]
				[Address(RVA = "0xA841FC", Offset = "0xA841FC", VA = "0xA841FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000173")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E1B")]
				[Address(RVA = "0xA84244", Offset = "0xA84244", VA = "0xA84244", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E15")]
			[Address(RVA = "0xA836C8", Offset = "0xA836C8", VA = "0xA836C8")]
			[DebuggerHidden]
			public <wave_1>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6000E16")]
			[Address(RVA = "0xA836F4", Offset = "0xA836F4", VA = "0xA836F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xA8376C", Offset = "0xA8376C", VA = "0xA8376C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E18")]
			[Address(RVA = "0xA83710", Offset = "0xA83710", VA = "0xA83710")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0xA84204", Offset = "0xA84204", VA = "0xA84204", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200025F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E274", Offset = "0x62E274")]
		private sealed class <wave_2>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x4000E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject[] <>7__wrap1;

			[Token(Token = "0x4000E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x4000E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<path>.Enumerator <>7__wrap3;

			[Token(Token = "0x17000174")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E20")]
				[Address(RVA = "0xA84A44", Offset = "0xA84A44", VA = "0xA84A44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000175")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E22")]
				[Address(RVA = "0xA84A8C", Offset = "0xA84A8C", VA = "0xA84A8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0xA8424C", Offset = "0xA8424C", VA = "0xA8424C")]
			[DebuggerHidden]
			public <wave_2>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0xA84278", Offset = "0xA84278", VA = "0xA84278", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0xA842F0", Offset = "0xA842F0", VA = "0xA842F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0xA84294", Offset = "0xA84294", VA = "0xA84294")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000E21")]
			[Address(RVA = "0xA84A4C", Offset = "0xA84A4C", VA = "0xA84A4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E284", Offset = "0x62E284")]
		private sealed class <wave_3>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x17000176")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E26")]
				[Address(RVA = "0xA84F74", Offset = "0xA84F74", VA = "0xA84F74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000177")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E28")]
				[Address(RVA = "0xA84FBC", Offset = "0xA84FBC", VA = "0xA84FBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E23")]
			[Address(RVA = "0xA84A94", Offset = "0xA84A94", VA = "0xA84A94")]
			[DebuggerHidden]
			public <wave_3>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x6000E24")]
			[Address(RVA = "0xA84AC0", Offset = "0xA84AC0", VA = "0xA84AC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xA84AC4", Offset = "0xA84AC4", VA = "0xA84AC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E27")]
			[Address(RVA = "0xA84F7C", Offset = "0xA84F7C", VA = "0xA84F7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000261")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E294", Offset = "0x62E294")]
		private sealed class <wave_4>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x17000178")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E2C")]
				[Address(RVA = "0xA854A4", Offset = "0xA854A4", VA = "0xA854A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000179")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E2E")]
				[Address(RVA = "0xA854EC", Offset = "0xA854EC", VA = "0xA854EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xA84FC4", Offset = "0xA84FC4", VA = "0xA84FC4")]
			[DebuggerHidden]
			public <wave_4>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0xA84FF0", Offset = "0xA84FF0", VA = "0xA84FF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0xA84FF4", Offset = "0xA84FF4", VA = "0xA84FF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0xA854AC", Offset = "0xA854AC", VA = "0xA854AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000262")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E2A4", Offset = "0x62E2A4")]
		private sealed class <wave_5>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x1700017A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E32")]
				[Address(RVA = "0xA85B34", Offset = "0xA85B34", VA = "0xA85B34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E34")]
				[Address(RVA = "0xA85B7C", Offset = "0xA85B7C", VA = "0xA85B7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0xA854F4", Offset = "0xA854F4", VA = "0xA854F4")]
			[DebuggerHidden]
			public <wave_5>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6000E30")]
			[Address(RVA = "0xA85520", Offset = "0xA85520", VA = "0xA85520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E31")]
			[Address(RVA = "0xA85524", Offset = "0xA85524", VA = "0xA85524", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E33")]
			[Address(RVA = "0xA85B3C", Offset = "0xA85B3C", VA = "0xA85B3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool skip_intro;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public hud hud;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool level_started;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool level_ended;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private sound music_current;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound music_idle;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound music_action;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public sound music_win;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound music_lose;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject[] flashbangs;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject[] grenades;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<npc> enemies;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<npc> civilians;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public tool_firearm pistol;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public tool_firearm pistol2;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public tool_firearm shootgun1;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public tool_firearm shootgun2;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public tool_firearm rifle;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public heli heli;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public path heli_path_2;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public npc robert;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public sound robert_audio;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public npc captain;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public sound captain_audio;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public lips captain_lips;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public npc[] npcs;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public path[] wave_1_paths;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public path[] wave_2_paths;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public path[] wave_345_paths;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool first_weapon_grab;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool sound_busy;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float sound_last;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float sound_cooldown;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int sound_kills_count;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int sound_hits_count;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float sound_last_idle;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int player_last_health;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int wave_3_npc_total;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int wave_3_npc_limit;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int wave_4_npc_total;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int wave_4_npc_limit;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int wave_5_npc_total;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int wave_5_npc_limit;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int total_to_kill;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int total_killed;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public npc Gorgon;

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xC30B9C", Offset = "0xC30B9C", VA = "0xC30B9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xC30CA0", Offset = "0xC30CA0", VA = "0xC30CA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xC315F0", Offset = "0xC315F0", VA = "0xC315F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xC311EC", Offset = "0xC311EC", VA = "0xC311EC")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xC319F0", Offset = "0xC319F0", VA = "0xC319F0")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xC31514", Offset = "0xC31514", VA = "0xC31514")]
		private void PlaySound(string name)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xC31AC0", Offset = "0xC31AC0", VA = "0xC31AC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63DFA8", Offset = "0x63DFA8")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xC31B54", Offset = "0xC31B54", VA = "0xC31B54")]
		public void GorgonKilled(npc _npc)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xC31390", Offset = "0xC31390", VA = "0xC31390")]
		private void LevelFailed()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xC31E2C", Offset = "0xC31E2C", VA = "0xC31E2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E010", Offset = "0x63E010")]
		private IEnumerator LevelFailedCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xC31EAC", Offset = "0xC31EAC", VA = "0xC31EAC")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xC31F74", Offset = "0xC31F74", VA = "0xC31F74")]
		public void LevelWinEnded()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xC32000", Offset = "0xC32000", VA = "0xC32000")]
		public void gorgon_jump_above_player()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xC320B4", Offset = "0xC320B4", VA = "0xC320B4")]
		private path get_free_path(path[] _paths, List<npc> _npcs)
		{
			return null;
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xC3232C", Offset = "0xC3232C", VA = "0xC3232C")]
		public void civilian_path_complete(npc npc)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xC32348", Offset = "0xC32348", VA = "0xC32348")]
		public void civilian_hit(npc npc)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xC3244C", Offset = "0xC3244C", VA = "0xC3244C")]
		public void on_weapon_grab(toolbase tool)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xC32458", Offset = "0xC32458", VA = "0xC32458")]
		public void begin_skip()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xC3255C", Offset = "0xC3255C", VA = "0xC3255C")]
		private void begin_1()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xC328C4", Offset = "0xC328C4", VA = "0xC328C4")]
		private void begin_2()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xC328F0", Offset = "0xC328F0", VA = "0xC328F0")]
		public void begin_heli_path_complete(heli heli)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xC324DC", Offset = "0xC324DC", VA = "0xC324DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E078", Offset = "0x63E078")]
		private IEnumerator wave_1()
		{
			return null;
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xC32BDC", Offset = "0xC32BDC", VA = "0xC32BDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E0E0", Offset = "0x63E0E0")]
		private IEnumerator wave_2()
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xC32C5C", Offset = "0xC32C5C", VA = "0xC32C5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E148", Offset = "0x63E148")]
		private IEnumerator wave_3()
		{
			return null;
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xC32CDC", Offset = "0xC32CDC", VA = "0xC32CDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E1B0", Offset = "0x63E1B0")]
		private IEnumerator wave_4()
		{
			return null;
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xC32D5C", Offset = "0xC32D5C", VA = "0xC32D5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E218", Offset = "0x63E218")]
		private IEnumerator wave_5()
		{
			return null;
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xC32DDC", Offset = "0xC32DDC", VA = "0xC32DDC")]
		public level_3()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class level_4 : level
	{
		[Token(Token = "0x2000264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E2B4", Offset = "0x62E2B4")]
		private sealed class <PlayMusicCoroutine>d__109 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x1700017C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E6F")]
				[Address(RVA = "0xA86144", Offset = "0xA86144", VA = "0xA86144", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E71")]
				[Address(RVA = "0xA8618C", Offset = "0xA8618C", VA = "0xA8618C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0xA85EAC", Offset = "0xA85EAC", VA = "0xA85EAC")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__109(int <>1__state)
			{
			}

			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0xA85ED8", Offset = "0xA85ED8", VA = "0xA85ED8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xA85EDC", Offset = "0xA85EDC", VA = "0xA85EDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E70")]
			[Address(RVA = "0xA8614C", Offset = "0xA8614C", VA = "0xA8614C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000265")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E2C4", Offset = "0x62E2C4")]
		private sealed class <LevelFailedCoroutine>d__111 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x1700017E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E75")]
				[Address(RVA = "0xA85E5C", Offset = "0xA85E5C", VA = "0xA85E5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E77")]
				[Address(RVA = "0xA85EA4", Offset = "0xA85EA4", VA = "0xA85EA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E72")]
			[Address(RVA = "0xA85B84", Offset = "0xA85B84", VA = "0xA85B84")]
			[DebuggerHidden]
			public <LevelFailedCoroutine>d__111(int <>1__state)
			{
			}

			[Token(Token = "0x6000E73")]
			[Address(RVA = "0xA85BB0", Offset = "0xA85BB0", VA = "0xA85BB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E74")]
			[Address(RVA = "0xA85BB4", Offset = "0xA85BB4", VA = "0xA85BB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E76")]
			[Address(RVA = "0xA85E64", Offset = "0xA85E64", VA = "0xA85E64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000266")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E2D4", Offset = "0x62E2D4")]
		private sealed class <room_1_battle>d__123 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x4000EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x4000EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private npc[] <>7__wrap2;

			[Token(Token = "0x4000EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x4000EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private npc <npc>5__5;

			[Token(Token = "0x4000EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bomb[] <>7__wrap5;

			[Token(Token = "0x4000EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private toolbase[] <>7__wrap6;

			[Token(Token = "0x17000180")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E7B")]
				[Address(RVA = "0xA87690", Offset = "0xA87690", VA = "0xA87690", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000181")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E7D")]
				[Address(RVA = "0xA876D8", Offset = "0xA876D8", VA = "0xA876D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E78")]
			[Address(RVA = "0xA86CAC", Offset = "0xA86CAC", VA = "0xA86CAC")]
			[DebuggerHidden]
			public <room_1_battle>d__123(int <>1__state)
			{
			}

			[Token(Token = "0x6000E79")]
			[Address(RVA = "0xA86CD8", Offset = "0xA86CD8", VA = "0xA86CD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0xA86CDC", Offset = "0xA86CDC", VA = "0xA86CDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0xA87698", Offset = "0xA87698", VA = "0xA87698", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000267")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E2E4", Offset = "0x62E2E4")]
		private sealed class <room_2_battle>d__128 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <door_from>5__2;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <door_to>5__3;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <duration>5__4;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <pass>5__5;

			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <left>5__6;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private npc[] <>7__wrap6;

			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <>7__wrap7;

			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private npc <npc>5__9;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private bomb[] <>7__wrap9;

			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private toolbase[] <>7__wrap10;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private prop[] <>7__wrap11;

			[Token(Token = "0x17000182")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E81")]
				[Address(RVA = "0xB460F8", Offset = "0xB460F8", VA = "0xB460F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000183")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E83")]
				[Address(RVA = "0xB46140", Offset = "0xB46140", VA = "0xB46140", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0xB452F4", Offset = "0xB452F4", VA = "0xB452F4")]
			[DebuggerHidden]
			public <room_2_battle>d__128(int <>1__state)
			{
			}

			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0xB45320", Offset = "0xB45320", VA = "0xB45320", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E80")]
			[Address(RVA = "0xB45324", Offset = "0xB45324", VA = "0xB45324", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E82")]
			[Address(RVA = "0xB46100", Offset = "0xB46100", VA = "0xB46100", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E2F4", Offset = "0x62E2F4")]
		private sealed class <hall_1_battle>d__132 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private path[] <>7__wrap1;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x17000184")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E87")]
				[Address(RVA = "0xA86554", Offset = "0xA86554", VA = "0xA86554", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000185")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E89")]
				[Address(RVA = "0xA8659C", Offset = "0xA8659C", VA = "0xA8659C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E84")]
			[Address(RVA = "0xA86194", Offset = "0xA86194", VA = "0xA86194")]
			[DebuggerHidden]
			public <hall_1_battle>d__132(int <>1__state)
			{
			}

			[Token(Token = "0x6000E85")]
			[Address(RVA = "0xA861C0", Offset = "0xA861C0", VA = "0xA861C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E86")]
			[Address(RVA = "0xA861C4", Offset = "0xA861C4", VA = "0xA861C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E88")]
			[Address(RVA = "0xA8655C", Offset = "0xA8655C", VA = "0xA8655C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000269")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E304", Offset = "0x62E304")]
		private sealed class <room_3_battle>d__135 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private npc[] <>7__wrap1;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private npc <npc>5__4;

			[Token(Token = "0x17000186")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E8D")]
				[Address(RVA = "0xB466E0", Offset = "0xB466E0", VA = "0xB466E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000187")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E8F")]
				[Address(RVA = "0xB46728", Offset = "0xB46728", VA = "0xB46728", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0xB46148", Offset = "0xB46148", VA = "0xB46148")]
			[DebuggerHidden]
			public <room_3_battle>d__135(int <>1__state)
			{
			}

			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0xB46174", Offset = "0xB46174", VA = "0xB46174", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0xB46178", Offset = "0xB46178", VA = "0xB46178", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xB466E8", Offset = "0xB466E8", VA = "0xB466E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E314", Offset = "0x62E314")]
		private sealed class <room_4_battle>d__139 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x4000F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x4000F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private npc[] <>7__wrap2;

			[Token(Token = "0x4000F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x4000F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private npc <npc>5__5;

			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private toolbase[] <>7__wrap5;

			[Token(Token = "0x17000188")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E93")]
				[Address(RVA = "0xB46EE4", Offset = "0xB46EE4", VA = "0xB46EE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000189")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E95")]
				[Address(RVA = "0xB46F2C", Offset = "0xB46F2C", VA = "0xB46F2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E90")]
			[Address(RVA = "0xB46730", Offset = "0xB46730", VA = "0xB46730")]
			[DebuggerHidden]
			public <room_4_battle>d__139(int <>1__state)
			{
			}

			[Token(Token = "0x6000E91")]
			[Address(RVA = "0xB4675C", Offset = "0xB4675C", VA = "0xB4675C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E92")]
			[Address(RVA = "0xB46760", Offset = "0xB46760", VA = "0xB46760", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E94")]
			[Address(RVA = "0xB46EEC", Offset = "0xB46EEC", VA = "0xB46EEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E324", Offset = "0x62E324")]
		private sealed class <hall_2_battle>d__142 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private toolbase[] <>7__wrap2;

			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private npc[] <>7__wrap4;

			[Token(Token = "0x1700018A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E99")]
				[Address(RVA = "0xA86C5C", Offset = "0xA86C5C", VA = "0xA86C5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E9B")]
				[Address(RVA = "0xA86CA4", Offset = "0xA86CA4", VA = "0xA86CA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E96")]
			[Address(RVA = "0xA865A4", Offset = "0xA865A4", VA = "0xA865A4")]
			[DebuggerHidden]
			public <hall_2_battle>d__142(int <>1__state)
			{
			}

			[Token(Token = "0x6000E97")]
			[Address(RVA = "0xA865D0", Offset = "0xA865D0", VA = "0xA865D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E98")]
			[Address(RVA = "0xA865D4", Offset = "0xA865D4", VA = "0xA865D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xA86C64", Offset = "0xA86C64", VA = "0xA86C64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E334", Offset = "0x62E334")]
		private sealed class <room_5_battle>d__149 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x4000F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private npc[] <>7__wrap1;

			[Token(Token = "0x4000F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private npc <npc>5__4;

			[Token(Token = "0x1700018C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E9F")]
				[Address(RVA = "0xB47764", Offset = "0xB47764", VA = "0xB47764", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EA1")]
				[Address(RVA = "0xB477AC", Offset = "0xB477AC", VA = "0xB477AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0xB46F34", Offset = "0xB46F34", VA = "0xB46F34")]
			[DebuggerHidden]
			public <room_5_battle>d__149(int <>1__state)
			{
			}

			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0xB46F60", Offset = "0xB46F60", VA = "0xB46F60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0xB46F64", Offset = "0xB46F64", VA = "0xB46F64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0xB4776C", Offset = "0xB4776C", VA = "0xB4776C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool skip_intro;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public point skip_captain_point;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public point skip_george_point;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public point skip_robert_point;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject teleport_dialog;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject teleport_room1;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject teleport_room1inside;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject teleport_room2;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject teleport_room2inside;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject teleport_jumper1;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject teleport_jumper2;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject teleport_room3;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject teleport_room3inside;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject teleport_room4;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject teleport_room4inside;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject teleport_hall;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject teleport_room5pre;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject teleport_room5;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject teleport_room5inside;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool level_started;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool level_ended;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<npc> enemies;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public npc[] npc_bank;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int total_to_kill;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int total_killed;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int room_5_npc_hit_count;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int room_1_npc_rand;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int room_2_npc_rand;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int room_4_npc_rand;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int hall_2_npc_rand;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int boss_hits_left;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public hud hud;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private sound music_current;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public sound music_idle;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public sound music_action;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public sound music_win;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public sound music_lose;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public sound sound_joe;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public sound sound_george;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public sound sound_robert;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public sound sound_joe_end;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public npc joe;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public npc charles;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public npc allen;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public npc george;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public npc robert;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public npc joe_end;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public lips joe_lips;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public lips joe_end_lips;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public npc boss;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool room_2_start;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool hall_1_npc_killed;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bomb[] room_1_explosives;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public door room_1_door;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Transform room_1_look;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public toolbase[] room_1_weapons;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public npc[] room_1_npc;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public prop[] room_1_props;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public path[] room_1_paths;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public npc room_2_fart;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public sound room_2_fart_sound;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public bomb[] room_2_explosives;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public door room_2_door;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public Transform room_2_look;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public toolbase[] room_2_weapons;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public npc[] room_2_npc;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public path[] room_2_paths;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public toolbase[] hall_1_weapons;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public path[] hall_1_paths;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public Transform hall_1_look;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public bomb[] room_3_explosives;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public door room_3_door;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public toolbase[] room_3_weapons;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public npc[] room_3_npc;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public prop[] room_3_props;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public Transform room_3_look;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public bomb[] room_4_explosives;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public door room_4_door;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public toolbase[] room_4_weapons;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public npc[] room_4_npc;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public path[] room_4_paths;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public Transform room_4_look;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public toolbase[] hall_2_weapons;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public path[] hall_2_paths;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public Transform hall_2_look;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public tool_firearm rifle_1;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public int rifle_1_shoots;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public GameObject rifle_1_break;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public Rigidbody[] rifle_1_break_bodies;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public tool_firearm rifle_2;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public int rifle_2_shoots;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public GameObject rifle_2_break;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public Rigidbody[] rifle_2_break_bodies;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public tool_firearm rifle_3;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public int rifle_3_shoots;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public GameObject rifle_3_break;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public Rigidbody[] rifle_3_break_bodies;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public door room_5_door;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public toolbase[] room_5_weapons;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public npc[] room_5_npc;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public path[] room_5_paths;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public Transform room_5_look;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private bool player_path_first;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private point player_path_next;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private bool player_path_moving;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public path player_path;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private int move_to_callback;

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xC32EC4", Offset = "0xC32EC4", VA = "0xC32EC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xC335CC", Offset = "0xC335CC", VA = "0xC335CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xC33AC4", Offset = "0xC33AC4", VA = "0xC33AC4")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xC33D4C", Offset = "0xC33D4C", VA = "0xC33D4C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xC33D50", Offset = "0xC33D50", VA = "0xC33D50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xC33C7C", Offset = "0xC33C7C", VA = "0xC33C7C")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xC34168", Offset = "0xC34168", VA = "0xC34168")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E4B0", Offset = "0x63E4B0")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xC34048", Offset = "0xC34048", VA = "0xC34048")]
		private void LevelFailed()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xC341FC", Offset = "0xC341FC", VA = "0xC341FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E518", Offset = "0x63E518")]
		private IEnumerator LevelFailedCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xC3427C", Offset = "0xC3427C", VA = "0xC3427C")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xC34344", Offset = "0xC34344", VA = "0xC34344")]
		private path get_free_path(path[] _paths, List<npc> _npcs)
		{
			return null;
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xC345BC", Offset = "0xC345BC", VA = "0xC345BC")]
		public void on_bomb_explode(bomb bomb)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xC348D0", Offset = "0xC348D0", VA = "0xC348D0")]
		public void begin_skip()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xC34AB4", Offset = "0xC34AB4", VA = "0xC34AB4")]
		private void begin_1()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xC34EB8", Offset = "0xC34EB8", VA = "0xC34EB8")]
		private void begin_2()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xC34F4C", Offset = "0xC34F4C", VA = "0xC34F4C")]
		private void begin_3()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xC35040", Offset = "0xC35040", VA = "0xC35040")]
		private void begin_4()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xC35050", Offset = "0xC35050", VA = "0xC35050")]
		public void on_path_complete(npc npc)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xC350D0", Offset = "0xC350D0", VA = "0xC350D0")]
		public void room_1_arrived()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xC351D4", Offset = "0xC351D4", VA = "0xC351D4")]
		private void room_1_start()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xC35200", Offset = "0xC35200", VA = "0xC35200")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E580", Offset = "0x63E580")]
		private IEnumerator room_1_battle()
		{
			return null;
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xC35280", Offset = "0xC35280", VA = "0xC35280")]
		private void room_1_end()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xC353CC", Offset = "0xC353CC", VA = "0xC353CC")]
		public void room_2_arrived()
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xC355DC", Offset = "0xC355DC", VA = "0xC355DC")]
		public void room_2_fart_end(npc npc)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xC355E8", Offset = "0xC355E8", VA = "0xC355E8")]
		public void george_room_3_arrive()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xC3555C", Offset = "0xC3555C", VA = "0xC3555C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E5E8", Offset = "0x63E5E8")]
		private IEnumerator room_2_battle()
		{
			return null;
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xC35640", Offset = "0xC35640", VA = "0xC35640")]
		private void room_2_end()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xC357B0", Offset = "0xC357B0", VA = "0xC357B0")]
		public void hall_1_arrived()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xC358E0", Offset = "0xC358E0", VA = "0xC358E0")]
		public void hall_1_hit(npc npc)
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xC35730", Offset = "0xC35730", VA = "0xC35730")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E650", Offset = "0x63E650")]
		private IEnumerator hall_1_battle()
		{
			return null;
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xC359A4", Offset = "0xC359A4", VA = "0xC359A4")]
		public void room_3_arrived()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xC35AE4", Offset = "0xC35AE4", VA = "0xC35AE4")]
		private void room_3_start()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xC35B10", Offset = "0xC35B10", VA = "0xC35B10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E6B8", Offset = "0x63E6B8")]
		private IEnumerator room_3_battle()
		{
			return null;
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xC35B90", Offset = "0xC35B90", VA = "0xC35B90")]
		private void room_3_end()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xC35B9C", Offset = "0xC35B9C", VA = "0xC35B9C")]
		public void room_4_arrived()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xC35CD8", Offset = "0xC35CD8", VA = "0xC35CD8")]
		private void room_4_start()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xC35D04", Offset = "0xC35D04", VA = "0xC35D04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E720", Offset = "0x63E720")]
		private IEnumerator room_4_battle()
		{
			return null;
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xC35D84", Offset = "0xC35D84", VA = "0xC35D84")]
		private void room_4_end()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xC35F40", Offset = "0xC35F40", VA = "0xC35F40")]
		public void hall_2_arrived()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xC36168", Offset = "0xC36168", VA = "0xC36168")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E788", Offset = "0x63E788")]
		private IEnumerator hall_2_battle()
		{
			return null;
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xC361E8", Offset = "0xC361E8", VA = "0xC361E8")]
		private void hall_2_end()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xC361F4", Offset = "0xC361F4", VA = "0xC361F4")]
		public void rifle_break_1(tool_firearm weapon)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xC363C0", Offset = "0xC363C0", VA = "0xC363C0")]
		public void rifle_break_2(tool_firearm weapon)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xC3658C", Offset = "0xC3658C", VA = "0xC3658C")]
		public void rifle_break_3(tool_firearm weapon)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xC3675C", Offset = "0xC3675C", VA = "0xC3675C")]
		public void room_5_arrived()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xC36888", Offset = "0xC36888", VA = "0xC36888")]
		private void room_5_start()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xC368B4", Offset = "0xC368B4", VA = "0xC368B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63E7F0", Offset = "0x63E7F0")]
		private IEnumerator room_5_battle()
		{
			return null;
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xC36934", Offset = "0xC36934", VA = "0xC36934")]
		public void boss_hit(npc npc)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xC36A3C", Offset = "0xC36A3C", VA = "0xC36A3C")]
		public void room_5_npc_hit(npc npc)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xC36A4C", Offset = "0xC36A4C", VA = "0xC36A4C")]
		public void room_5_captain_arrived(npc npc)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xC36C14", Offset = "0xC36C14", VA = "0xC36C14")]
		public void room_5_completed()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xC36CA0", Offset = "0xC36CA0", VA = "0xC36CA0")]
		private void player_path_move()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xC3504C", Offset = "0xC3504C", VA = "0xC3504C")]
		private void player_path_resume()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xC36FF0", Offset = "0xC36FF0", VA = "0xC36FF0")]
		public level_4()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class level_5 : level
	{
		[Token(Token = "0x200026E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E344", Offset = "0x62E344")]
		private sealed class <PlayMusicCoroutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_5 <>4__this;

			[Token(Token = "0x4000F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4000F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4000F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4000F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x1700018E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EC4")]
				[Address(RVA = "0xB47A4C", Offset = "0xB47A4C", VA = "0xB47A4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EC6")]
				[Address(RVA = "0xB47A94", Offset = "0xB47A94", VA = "0xB47A94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0xB477B4", Offset = "0xB477B4", VA = "0xB477B4")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0xB477E0", Offset = "0xB477E0", VA = "0xB477E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0xB477E4", Offset = "0xB477E4", VA = "0xB477E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0xB47A54", Offset = "0xB47A54", VA = "0xB47A54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E354", Offset = "0x62E354")]
		private sealed class <part_1_battle>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_5 <>4__this;

			[Token(Token = "0x4000F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4000F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <pass>5__3;

			[Token(Token = "0x4000F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private npc[] <>7__wrap3;

			[Token(Token = "0x4000F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap4;

			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private npc <npc>5__6;

			[Token(Token = "0x17000190")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ECA")]
				[Address(RVA = "0xB47EA4", Offset = "0xB47EA4", VA = "0xB47EA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000191")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ECC")]
				[Address(RVA = "0xB47EEC", Offset = "0xB47EEC", VA = "0xB47EEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0xB47A9C", Offset = "0xB47A9C", VA = "0xB47A9C")]
			[DebuggerHidden]
			public <part_1_battle>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0xB47AC8", Offset = "0xB47AC8", VA = "0xB47AC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0xB47ACC", Offset = "0xB47ACC", VA = "0xB47ACC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0xB47EAC", Offset = "0xB47EAC", VA = "0xB47EAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E364", Offset = "0x62E364")]
		private sealed class <part_2_battle>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_5 <>4__this;

			[Token(Token = "0x17000192")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ED0")]
				[Address(RVA = "0xB4816C", Offset = "0xB4816C", VA = "0xB4816C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000193")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ED2")]
				[Address(RVA = "0xB481B4", Offset = "0xB481B4", VA = "0xB481B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0xB47EF4", Offset = "0xB47EF4", VA = "0xB47EF4")]
			[DebuggerHidden]
			public <part_2_battle>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0xB47F20", Offset = "0xB47F20", VA = "0xB47F20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0xB47F24", Offset = "0xB47F24", VA = "0xB47F24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0xB48174", Offset = "0xB48174", VA = "0xB48174", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000271")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E374", Offset = "0x62E374")]
		private sealed class <part_3_battle>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_5 <>4__this;

			[Token(Token = "0x17000194")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ED6")]
				[Address(RVA = "0xB484B8", Offset = "0xB484B8", VA = "0xB484B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000195")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ED8")]
				[Address(RVA = "0xB48500", Offset = "0xB48500", VA = "0xB48500", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0xB481BC", Offset = "0xB481BC", VA = "0xB481BC")]
			[DebuggerHidden]
			public <part_3_battle>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0xB481E8", Offset = "0xB481E8", VA = "0xB481E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0xB481EC", Offset = "0xB481EC", VA = "0xB481EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0xB484C0", Offset = "0xB484C0", VA = "0xB484C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000272")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E384", Offset = "0x62E384")]
		private sealed class <part_4_battle>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_5 <>4__this;

			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <heli_limit>5__2;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <car_limit>5__3;

			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <next_heli_added>5__4;

			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <next_car_added>5__5;

			[Token(Token = "0x17000196")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EDC")]
				[Address(RVA = "0xB488A4", Offset = "0xB488A4", VA = "0xB488A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000197")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EDE")]
				[Address(RVA = "0xB488EC", Offset = "0xB488EC", VA = "0xB488EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0xB48508", Offset = "0xB48508", VA = "0xB48508")]
			[DebuggerHidden]
			public <part_4_battle>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xB48534", Offset = "0xB48534", VA = "0xB48534", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xB48538", Offset = "0xB48538", VA = "0xB48538", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0xB488AC", Offset = "0xB488AC", VA = "0xB488AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000273")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E394", Offset = "0x62E394")]
		private sealed class <part_5_battle>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_5 <>4__this;

			[Token(Token = "0x4000F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <viperpos>5__2;

			[Token(Token = "0x4000F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <car_limit>5__3;

			[Token(Token = "0x4000F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <next_car_added>5__4;

			[Token(Token = "0x17000198")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EE2")]
				[Address(RVA = "0xB48E00", Offset = "0xB48E00", VA = "0xB48E00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000199")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EE4")]
				[Address(RVA = "0xB48E48", Offset = "0xB48E48", VA = "0xB48E48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0xB488F4", Offset = "0xB488F4", VA = "0xB488F4")]
			[DebuggerHidden]
			public <part_5_battle>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0xB48920", Offset = "0xB48920", VA = "0xB48920", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0xB48924", Offset = "0xB48924", VA = "0xB48924", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0xB48E08", Offset = "0xB48E08", VA = "0xB48E08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool level_started;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool level_ended;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool first_fire;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<roadheli> helis;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<roadcar> cars;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<npc> enemies;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int total_to_kill;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int total_killed;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform sections_start_container;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public roadpoint[] planepoints;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public roadpoint[] helipoints;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public roadpoint[] roadpoints;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public roadpoint[] part_2_car_points;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public roadpoint[] part_3_car_points;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public roadpoint[] part_5_car_points;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public roadcar[] tmpcars;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float next_vehicle_add;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float next_jump;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool have_jumper;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private npc current_jumper;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform truck_jump_point;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public roadheli heli_prefab;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public roadplane airplane;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int max_helis;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int max_cars;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public sound engine_start;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public npc[] npcs_start;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public npc viper;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public npc ally;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public hud hud;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private sound music_current;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public sound music_idle;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public sound music_action;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public sound music_win;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public sound music_lose;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int part_2_total_car;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int part_3_total_car;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int part_3_total_heli;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int part_4_total_car;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int part_4_total_heli;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public sound sound_joe;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public lips joe_lips;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool ally_started;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		private bool ally_arrived;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float last_heli_killed;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int viper_hits;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<GameObject> sections;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public List<GameObject> sections_start;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<GameObject> sections_drive_org;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<GameObject> sections_empty_org;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public List<GameObject> sections_empty;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<GameObject> sections_busy;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float section_length;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float section_start;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float section_end;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private int section_count;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float section_speed;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private bool sections_started;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
		private bool show_empty_sections;

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xC3709C", Offset = "0xC3709C", VA = "0xC3709C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xC37244", Offset = "0xC37244", VA = "0xC37244")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xC379CC", Offset = "0xC379CC", VA = "0xC379CC")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xC37B18", Offset = "0xC37B18", VA = "0xC37B18")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xC37BE8", Offset = "0xC37BE8", VA = "0xC37BE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63EB28", Offset = "0x63EB28")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xC37C7C", Offset = "0xC37C7C", VA = "0xC37C7C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xC38458", Offset = "0xC38458", VA = "0xC38458")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xC38E10", Offset = "0xC38E10", VA = "0xC38E10")]
		private void AllyKilled()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xC3922C", Offset = "0xC3922C", VA = "0xC3922C")]
		private void AllyKilledComplete()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xC38B00", Offset = "0xC38B00", VA = "0xC38B00")]
		private void LevelFailed()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xC39304", Offset = "0xC39304", VA = "0xC39304")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xC39390", Offset = "0xC39390", VA = "0xC39390")]
		public void LevelWin()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xC39780", Offset = "0xC39780", VA = "0xC39780")]
		public void LevelWinCompleted()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xC3980C", Offset = "0xC3980C", VA = "0xC3980C")]
		private void part_1_start()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xC39B5C", Offset = "0xC39B5C", VA = "0xC39B5C")]
		private void part_1_ally()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xC39C54", Offset = "0xC39C54", VA = "0xC39C54")]
		public void ally_path()
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xC39DD4", Offset = "0xC39DD4", VA = "0xC39DD4")]
		public void player_fired()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xC39D54", Offset = "0xC39D54", VA = "0xC39D54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63EB90", Offset = "0x63EB90")]
		private IEnumerator part_1_battle()
		{
			return null;
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xC39ED0", Offset = "0xC39ED0", VA = "0xC39ED0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63EBF8", Offset = "0x63EBF8")]
		private IEnumerator part_2_battle()
		{
			return null;
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xC39F50", Offset = "0xC39F50", VA = "0xC39F50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63EC60", Offset = "0x63EC60")]
		private IEnumerator part_3_battle()
		{
			return null;
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xC39FD0", Offset = "0xC39FD0", VA = "0xC39FD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63ECC8", Offset = "0x63ECC8")]
		private IEnumerator part_4_battle()
		{
			return null;
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xC3A050", Offset = "0xC3A050", VA = "0xC3A050")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63ED30", Offset = "0x63ED30")]
		private IEnumerator part_5_battle()
		{
			return null;
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xC3A0D0", Offset = "0xC3A0D0", VA = "0xC3A0D0")]
		public void viper_hit()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xC3A19C", Offset = "0xC3A19C", VA = "0xC3A19C")]
		public void add_vehicle()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xC3A2AC", Offset = "0xC3A2AC", VA = "0xC3A2AC")]
		public bool add_heli()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xC3A55C", Offset = "0xC3A55C", VA = "0xC3A55C")]
		public bool add_car(roadpoint[] spawnpoints, bool count_as_progress = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xC38174", Offset = "0xC38174", VA = "0xC38174")]
		public void add_jumper()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xC3A90C", Offset = "0xC3A90C", VA = "0xC3A90C")]
		private void restore_lightmap(GameObject go, GameObject org)
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xC3AACC", Offset = "0xC3AACC", VA = "0xC3AACC")]
		private void SectionsStart()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xC37CA0", Offset = "0xC37CA0", VA = "0xC37CA0")]
		private void SectionsUpdate()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xC3AE04", Offset = "0xC3AE04", VA = "0xC3AE04")]
		public level_5()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class level_6 : level
	{
		[Token(Token = "0x2000275")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E3A4", Offset = "0x62E3A4")]
		private sealed class <PlayMusicCoroutine>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_6 <>4__this;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x1700019A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F13")]
				[Address(RVA = "0xB490E8", Offset = "0xB490E8", VA = "0xB490E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F15")]
				[Address(RVA = "0xB49130", Offset = "0xB49130", VA = "0xB49130", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F10")]
			[Address(RVA = "0xB48E50", Offset = "0xB48E50", VA = "0xB48E50")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x6000F11")]
			[Address(RVA = "0xB48E7C", Offset = "0xB48E7C", VA = "0xB48E7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F12")]
			[Address(RVA = "0xB48E80", Offset = "0xB48E80", VA = "0xB48E80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F14")]
			[Address(RVA = "0xB490F0", Offset = "0xB490F0", VA = "0xB490F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000276")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E3B4", Offset = "0x62E3B4")]
		private sealed class <on_tool_unselect_co>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool tool;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public level_6 <>4__this;

			[Token(Token = "0x1700019C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F19")]
				[Address(RVA = "0xB49A8C", Offset = "0xB49A8C", VA = "0xB49A8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F1B")]
				[Address(RVA = "0xB49AD4", Offset = "0xB49AD4", VA = "0xB49AD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F16")]
			[Address(RVA = "0xB498BC", Offset = "0xB498BC", VA = "0xB498BC")]
			[DebuggerHidden]
			public <on_tool_unselect_co>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6000F17")]
			[Address(RVA = "0xB498E8", Offset = "0xB498E8", VA = "0xB498E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F18")]
			[Address(RVA = "0xB498EC", Offset = "0xB498EC", VA = "0xB498EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0xB49A94", Offset = "0xB49A94", VA = "0xB49A94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000277")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E3C4", Offset = "0x62E3C4")]
		private sealed class <kingsnake_hit_jump_slowmotion>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_6 <>4__this;

			[Token(Token = "0x1700019E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F1F")]
				[Address(RVA = "0xB4986C", Offset = "0xB4986C", VA = "0xB4986C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F21")]
				[Address(RVA = "0xB498B4", Offset = "0xB498B4", VA = "0xB498B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0xB496C0", Offset = "0xB496C0", VA = "0xB496C0")]
			[DebuggerHidden]
			public <kingsnake_hit_jump_slowmotion>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0xB496EC", Offset = "0xB496EC", VA = "0xB496EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0xB496F0", Offset = "0xB496F0", VA = "0xB496F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F20")]
			[Address(RVA = "0xB49874", Offset = "0xB49874", VA = "0xB49874", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E3D4", Offset = "0x62E3D4")]
		private sealed class <kingsnake_co>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_6 <>4__this;

			[Token(Token = "0x4000FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <limit>5__2;

			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <next_added>5__3;

			[Token(Token = "0x170001A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F25")]
				[Address(RVA = "0xB49670", Offset = "0xB49670", VA = "0xB49670", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F27")]
				[Address(RVA = "0xB496B8", Offset = "0xB496B8", VA = "0xB496B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F22")]
			[Address(RVA = "0xB49138", Offset = "0xB49138", VA = "0xB49138")]
			[DebuggerHidden]
			public <kingsnake_co>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6000F23")]
			[Address(RVA = "0xB49164", Offset = "0xB49164", VA = "0xB49164", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F24")]
			[Address(RVA = "0xB49168", Offset = "0xB49168", VA = "0xB49168", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F26")]
			[Address(RVA = "0xB49678", Offset = "0xB49678", VA = "0xB49678", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RawImage[] ads;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture ad_default;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool level_started;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool level_ended;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool first_fire;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string zone;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string zone_pending;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public toolbase[] tools;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public teleport[] final_teleport;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool is_final_teleport_arrived;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<npc> enemies;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<npc> guards;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int total_to_kill;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int total_killed;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public hud hud;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private sound music_current;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public sound music_idle;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public sound music_action;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public sound music_win;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public sound music_lose;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform player_container;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Transform looktarget;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public toolbase[] guard_stuff;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public npc[] npcs;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<spawn> spawns;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float next_spawn;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int npc_limit;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int spwan_limit;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool first_kill;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		private bool sniper_complete;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public lips joe_lips;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public sound joe_sound;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public npc joe;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool joe_speak_cleared;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform guide_head;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public sound guide_voice;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float sound_last;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float sound_cooldown;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public npc robert;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public npc george;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public npc kingsnake;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public path kingsnake_points;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int kingsnake_health;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float guide_follow_distance;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private string sound_path_zone;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float sound_path_next;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float sound_path_inc;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool music_in_action;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float music_next_update;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public path player_path;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private point player_path_next;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool path_ended;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float speed_current;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float speed_max;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float speed_acceleration;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float speed_deceleration;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public npc guide;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public path guide_path;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private point guide_path_next;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool guide_ended;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private bool canmove;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private bool guidelooking;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private bool is_player_ahead_of_guide;

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xC3B068", Offset = "0xC3B068", VA = "0xC3B068")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xC3B240", Offset = "0xC3B240", VA = "0xC3B240")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xC3BA94", Offset = "0xC3BA94", VA = "0xC3BA94")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xC3BD70", Offset = "0xC3BD70", VA = "0xC3BD70")]
		private void play_sound_path(string name)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xC3BE08", Offset = "0xC3BE08", VA = "0xC3BE08")]
		private void PlaySound(string name)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xC3BCA0", Offset = "0xC3BCA0", VA = "0xC3BCA0")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xC3BED8", Offset = "0xC3BED8", VA = "0xC3BED8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63EF78", Offset = "0x63EF78")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xC3BF6C", Offset = "0xC3BF6C", VA = "0xC3BF6C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xC3BFBC", Offset = "0xC3BFBC", VA = "0xC3BFBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xC3CC18", Offset = "0xC3CC18", VA = "0xC3CC18")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xC3C3D0", Offset = "0xC3C3D0", VA = "0xC3C3D0")]
		public void LevelFailed()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xC3CD38", Offset = "0xC3CD38", VA = "0xC3CD38")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xC3CB44", Offset = "0xC3CB44", VA = "0xC3CB44")]
		private void update_music()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xC3CDC4", Offset = "0xC3CDC4", VA = "0xC3CDC4")]
		public void LevelWin()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xC3D058", Offset = "0xC3D058", VA = "0xC3D058")]
		public void joe_final_speak()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xC3D230", Offset = "0xC3D230", VA = "0xC3D230")]
		public void LevelWinCompleted()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xC3D2BC", Offset = "0xC3D2BC", VA = "0xC3D2BC")]
		public void on_tool_unselect(tool tool)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xC3D31C", Offset = "0xC3D31C", VA = "0xC3D31C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63EFE0", Offset = "0x63EFE0")]
		private IEnumerator on_tool_unselect_co(tool tool)
		{
			return null;
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xC3D3B0", Offset = "0xC3D3B0", VA = "0xC3D3B0")]
		public void on_first_kill()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xC3D648", Offset = "0xC3D648", VA = "0xC3D648")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F048", Offset = "0x63F048")]
		private IEnumerator kingsnake_hit_jump_slowmotion()
		{
			return null;
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xC3D6C8", Offset = "0xC3D6C8", VA = "0xC3D6C8")]
		public void kingsnake_hit()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xC3D7D4", Offset = "0xC3D7D4", VA = "0xC3D7D4")]
		public void kingsnake_arrive()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xC3D7F8", Offset = "0xC3D7F8", VA = "0xC3D7F8")]
		public void joe_speak()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xC3DBEC", Offset = "0xC3DBEC", VA = "0xC3DBEC")]
		public void joe_speak_end()
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xC3DCD0", Offset = "0xC3DCD0", VA = "0xC3DCD0")]
		public void on_path_complete(npc npc)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xC3DD00", Offset = "0xC3DD00", VA = "0xC3DD00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F0B0", Offset = "0x63F0B0")]
		private IEnumerator kingsnake_co()
		{
			return null;
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xC3B9B0", Offset = "0xC3B9B0", VA = "0xC3B9B0")]
		public void enter_zone(string val)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xC3DD80", Offset = "0xC3DD80", VA = "0xC3DD80")]
		private void apply_zone()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xC3CB00", Offset = "0xC3CB00", VA = "0xC3CB00")]
		private void update_zone()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xC3C834", Offset = "0xC3C834", VA = "0xC3C834")]
		private void respwan(npc npc)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xC3E94C", Offset = "0xC3E94C", VA = "0xC3E94C")]
		private spawn get_spawn()
		{
			return null;
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xC3E588", Offset = "0xC3E588", VA = "0xC3E588")]
		private void update_spawns()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xC3CC1C", Offset = "0xC3CC1C", VA = "0xC3CC1C")]
		private void update_looktarget()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xC3EB64", Offset = "0xC3EB64", VA = "0xC3EB64")]
		public void guide_look_enter()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xC3EB70", Offset = "0xC3EB70", VA = "0xC3EB70")]
		public void guide_look_exit()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xC3EB78", Offset = "0xC3EB78", VA = "0xC3EB78")]
		private bool moving()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xC3EC50", Offset = "0xC3EC50", VA = "0xC3EC50")]
		private void update_guide(bool ismoving)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xC3F154", Offset = "0xC3F154", VA = "0xC3F154")]
		public void final_teleport_arrived(teleport teleport)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xC3F1E4", Offset = "0xC3F1E4", VA = "0xC3F1E4")]
		private bool is_guide_moving()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xC3BF94", Offset = "0xC3BF94", VA = "0xC3BF94")]
		private void update_player_locomotion()
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xC3F5A0", Offset = "0xC3F5A0", VA = "0xC3F5A0")]
		private void update_player_path()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xC3F9CC", Offset = "0xC3F9CC", VA = "0xC3F9CC")]
		public void test()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xC3F9D0", Offset = "0xC3F9D0", VA = "0xC3F9D0")]
		public level_6()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class level_7 : level
	{
		[Token(Token = "0x200027A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E3E4", Offset = "0x62E3E4")]
		private sealed class <PlayMusicCoroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_7 <>4__this;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4000FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x170001A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F4F")]
				[Address(RVA = "0xB4A00C", Offset = "0xB4A00C", VA = "0xB4A00C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F51")]
				[Address(RVA = "0xB4A054", Offset = "0xB4A054", VA = "0xB4A054", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0xB49D74", Offset = "0xB49D74", VA = "0xB49D74")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0xB49DA0", Offset = "0xB49DA0", VA = "0xB49DA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0xB49DA4", Offset = "0xB49DA4", VA = "0xB49DA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F50")]
			[Address(RVA = "0xB4A014", Offset = "0xB4A014", VA = "0xB4A014", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200027B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E3F4", Offset = "0x62E3F4")]
		private sealed class <LevelFailedCoroutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_7 <>4__this;

			[Token(Token = "0x170001A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F55")]
				[Address(RVA = "0xB49D24", Offset = "0xB49D24", VA = "0xB49D24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F57")]
				[Address(RVA = "0xB49D6C", Offset = "0xB49D6C", VA = "0xB49D6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F52")]
			[Address(RVA = "0xB49ADC", Offset = "0xB49ADC", VA = "0xB49ADC")]
			[DebuggerHidden]
			public <LevelFailedCoroutine>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x6000F53")]
			[Address(RVA = "0xB49B08", Offset = "0xB49B08", VA = "0xB49B08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F54")]
			[Address(RVA = "0xB49B0C", Offset = "0xB49B0C", VA = "0xB49B0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F56")]
			[Address(RVA = "0xB49D2C", Offset = "0xB49D2C", VA = "0xB49D2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200027C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E404", Offset = "0x62E404")]
		private sealed class <level_win_co>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_7 <>4__this;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <pass>5__3;

			[Token(Token = "0x170001A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F5B")]
				[Address(RVA = "0xB4A660", Offset = "0xB4A660", VA = "0xB4A660", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F5D")]
				[Address(RVA = "0xB4A6A8", Offset = "0xB4A6A8", VA = "0xB4A6A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F58")]
			[Address(RVA = "0xB4A05C", Offset = "0xB4A05C", VA = "0xB4A05C")]
			[DebuggerHidden]
			public <level_win_co>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6000F59")]
			[Address(RVA = "0xB4A088", Offset = "0xB4A088", VA = "0xB4A088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0xB4A08C", Offset = "0xB4A08C", VA = "0xB4A08C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0xB4A668", Offset = "0xB4A668", VA = "0xB4A668", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200027D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E414", Offset = "0x62E414")]
		private sealed class <move_elevator_co>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_7 <>4__this;

			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <pass>5__3;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <from>5__4;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <to>5__5;

			[Token(Token = "0x170001A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F61")]
				[Address(RVA = "0xB4ACD0", Offset = "0xB4ACD0", VA = "0xB4ACD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F63")]
				[Address(RVA = "0xB4AD18", Offset = "0xB4AD18", VA = "0xB4AD18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0xB4A6B0", Offset = "0xB4A6B0", VA = "0xB4A6B0")]
			[DebuggerHidden]
			public <move_elevator_co>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0xB4A6DC", Offset = "0xB4A6DC", VA = "0xB4A6DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F60")]
			[Address(RVA = "0xB4A6E0", Offset = "0xB4A6E0", VA = "0xB4A6E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F62")]
			[Address(RVA = "0xB4ACD8", Offset = "0xB4ACD8", VA = "0xB4ACD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup cover_end;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public hud hud;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool level_started;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool level_ended;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private sound music_current;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound music_idle;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public sound music_action;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound music_win;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public sound music_lose;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<npc> enemies;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public npc[] npcs;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<path> paths;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public npc captain;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public sound captain_audio;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public lips captain_lips;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform climb_look;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int total_to_kill;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int total_killed;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform elevator;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform elevator_door;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public sound elevator_sound;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform player_container;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public path roompath;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private point roompoint;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private string zone;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public toolbase[] tools;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public npc captain_joe_end;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public sound captain_joe_end_sound;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public lips captain_joe_end_lips;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public player_trigger[] triggers;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject[] objects_indoor;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject[] objects_outdoor;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int max_npcs;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float next_npc_add;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool music_in_action;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float music_next_update;

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xC3FB5C", Offset = "0xC3FB5C", VA = "0xC3FB5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xC3FC48", Offset = "0xC3FC48", VA = "0xC3FC48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xC40720", Offset = "0xC40720", VA = "0xC40720")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xC400F4", Offset = "0xC400F4", VA = "0xC400F4")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xC40B68", Offset = "0xC40B68", VA = "0xC40B68")]
		private void level_begin_1()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xC40D30", Offset = "0xC40D30", VA = "0xC40D30")]
		private void level_begin_2()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xC40E04", Offset = "0xC40E04", VA = "0xC40E04")]
		public void level_begin_3()
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xC40A98", Offset = "0xC40A98", VA = "0xC40A98")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xC40E78", Offset = "0xC40E78", VA = "0xC40E78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F258", Offset = "0x63F258")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xC40240", Offset = "0xC40240", VA = "0xC40240")]
		private void LevelFailed()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xC40F0C", Offset = "0xC40F0C", VA = "0xC40F0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F2C0", Offset = "0x63F2C0")]
		private IEnumerator LevelFailedCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xC40F8C", Offset = "0xC40F8C", VA = "0xC40F8C")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xC41018", Offset = "0xC41018", VA = "0xC41018")]
		public void LevelWin()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xC412CC", Offset = "0xC412CC", VA = "0xC412CC")]
		public void captain_joe_end_path_complete()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xC412F8", Offset = "0xC412F8", VA = "0xC412F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F328", Offset = "0x63F328")]
		private IEnumerator level_win_co()
		{
			return null;
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xC41378", Offset = "0xC41378", VA = "0xC41378")]
		public void LevelWinEnded()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xC403E8", Offset = "0xC403E8", VA = "0xC403E8")]
		private void UpdateNPC()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xC40658", Offset = "0xC40658", VA = "0xC40658")]
		private void update_music()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xC41404", Offset = "0xC41404", VA = "0xC41404")]
		public void trigger_crane_1(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xC414B4", Offset = "0xC414B4", VA = "0xC414B4")]
		public void trigger_crane_2(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xC41564", Offset = "0xC41564", VA = "0xC41564")]
		public void trigger_crane_3(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xC41614", Offset = "0xC41614", VA = "0xC41614")]
		public void trigger_crane_4(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xC416C4", Offset = "0xC416C4", VA = "0xC416C4")]
		public void trigger_crane_5(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xC41774", Offset = "0xC41774", VA = "0xC41774")]
		public void trigger_crane_6(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xC41824", Offset = "0xC41824", VA = "0xC41824")]
		public void trigger_crane_7(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xC418D4", Offset = "0xC418D4", VA = "0xC418D4")]
		public void trigger_crane_8(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xC41984", Offset = "0xC41984", VA = "0xC41984")]
		public void trigger_roof_1(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xC41C2C", Offset = "0xC41C2C", VA = "0xC41C2C")]
		public void trigger_roof_2(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xC41CDC", Offset = "0xC41CDC", VA = "0xC41CDC")]
		public void trigger_roof_3(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xC41D8C", Offset = "0xC41D8C", VA = "0xC41D8C")]
		public void trigger_elevator_1(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xC41F2C", Offset = "0xC41F2C", VA = "0xC41F2C")]
		public void trigger_elevator_2(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xC42030", Offset = "0xC42030", VA = "0xC42030")]
		public void trigger_room_1(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xC420E0", Offset = "0xC420E0", VA = "0xC420E0")]
		public void trigger_room_2(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xC42190", Offset = "0xC42190", VA = "0xC42190")]
		public void trigger_room_3(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xC41EAC", Offset = "0xC41EAC", VA = "0xC41EAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F390", Offset = "0x63F390")]
		private IEnumerator move_elevator_co()
		{
			return null;
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xC422A0", Offset = "0xC422A0", VA = "0xC422A0")]
		public level_7()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class level_bootcamp : level
	{
		[Token(Token = "0x200027F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E424", Offset = "0x62E424")]
		private sealed class <PlayMusicCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_bootcamp <>4__this;

			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x170001AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F73")]
				[Address(RVA = "0xB4AFB8", Offset = "0xB4AFB8", VA = "0xB4AFB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F75")]
				[Address(RVA = "0xB4B000", Offset = "0xB4B000", VA = "0xB4B000", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F70")]
			[Address(RVA = "0xB4AD20", Offset = "0xB4AD20", VA = "0xB4AD20")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6000F71")]
			[Address(RVA = "0xB4AD4C", Offset = "0xB4AD4C", VA = "0xB4AD4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F72")]
			[Address(RVA = "0xB4AD50", Offset = "0xB4AD50", VA = "0xB4AD50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F74")]
			[Address(RVA = "0xB4AFC0", Offset = "0xB4AFC0", VA = "0xB4AFC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E434", Offset = "0x62E434")]
		private sealed class <run>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_bootcamp <>4__this;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <ammo>5__2;

			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool <top>5__3;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <last>5__4;

			[Token(Token = "0x170001AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F79")]
				[Address(RVA = "0xB4DD48", Offset = "0xB4DD48", VA = "0xB4DD48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F7B")]
				[Address(RVA = "0xB4DD90", Offset = "0xB4DD90", VA = "0xB4DD90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xB4B008", Offset = "0xB4B008", VA = "0xB4B008")]
			[DebuggerHidden]
			public <run>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6000F77")]
			[Address(RVA = "0xB4B034", Offset = "0xB4B034", VA = "0xB4B034", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F78")]
			[Address(RVA = "0xB4B038", Offset = "0xB4B038", VA = "0xB4B038", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0xB4DD50", Offset = "0xB4DD50", VA = "0xB4DD50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public hud hud;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool level_started;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool level_ended;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private sound music_current;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound music_idle;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound music_action;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public sound music_win;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound music_lose;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject redpill;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject ladder;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<bootcamp_target> targets_pistol;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<bootcamp_target> targets_rifle;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<bootcamp_target> targets_flashbang;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public tool_firearm pistol;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public tool_firearm rifle;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public tool_flashbang flashbang;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public tool_grenade grenade;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public tool_mdeikit medikit;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public sound sound;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Dictionary<string, string> script;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool flashbang_exploded;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool grenade_exploded;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		private bool medikit_exploded;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		private bool begined;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public toolbase ladder_top_1;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public toolbase ladder_top_2;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public handmenu menu;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject button_return_to_base;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject button_start_game;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool start_first_level;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Transform landing;

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xC423B4", Offset = "0xC423B4", VA = "0xC423B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xC42C20", Offset = "0xC42C20", VA = "0xC42C20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xC42E58", Offset = "0xC42E58", VA = "0xC42E58")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xC42FB4", Offset = "0xC42FB4", VA = "0xC42FB4")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xC43218", Offset = "0xC43218", VA = "0xC43218")]
		public void flashbang_explode()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xC43224", Offset = "0xC43224", VA = "0xC43224")]
		public void grenade_explode()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xC43230", Offset = "0xC43230", VA = "0xC43230")]
		public void medikit_explode()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xC43184", Offset = "0xC43184", VA = "0xC43184")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F538", Offset = "0x63F538")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xC4323C", Offset = "0xC4323C", VA = "0xC4323C")]
		public void begin()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xC43104", Offset = "0xC43104", VA = "0xC43104")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F5A0", Offset = "0x63F5A0")]
		private IEnumerator run()
		{
			return null;
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xC43084", Offset = "0xC43084", VA = "0xC43084")]
		private bool StartFirstLevel()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xC43248", Offset = "0xC43248", VA = "0xC43248")]
		public level_bootcamp()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class level_contests : level
	{
		[Token(Token = "0x2000282")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E444", Offset = "0x62E444")]
		private sealed class <PlayMusicCoroutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_contests <>4__this;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4001061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4001062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x170001AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F90")]
				[Address(RVA = "0xB4E030", Offset = "0xB4E030", VA = "0xB4E030", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F92")]
				[Address(RVA = "0xB4E078", Offset = "0xB4E078", VA = "0xB4E078", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0xB4DD98", Offset = "0xB4DD98", VA = "0xB4DD98")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0xB4DDC4", Offset = "0xB4DDC4", VA = "0xB4DDC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0xB4DDC8", Offset = "0xB4DDC8", VA = "0xB4DDC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xB4E038", Offset = "0xB4E038", VA = "0xB4E038", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public hud hud;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool level_started;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool level_ended;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private sound music_current;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound music_idle;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound music_action;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public sound music_win;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound music_lose;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject redpill;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public sound voice;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject paths_container;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<path> all_paths;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public npc npc_prefab;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int max_npcs_org;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float npc_add_min_org;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float npc_add_max_org;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float jump_speed_min_org;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float jump_speed_max_org;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float jump_speed_min;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float jump_speed_max;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int max_npcs;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float npc_add_min;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float npc_add_max;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int round_time;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<npc> enemies;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float next_npc_add;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform Jumpto1;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform Jumpto2;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject ticket_card;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject no_tickets_message;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public TextMeshProUGUI ui_tickets;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float started;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int total_created;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int total_kills;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private safe_int score;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float timeleft;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool ingame;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<toolbase> used_tickets;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public TextMeshProUGUI ui_time;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public TextMeshProUGUI ui_score;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public TextMeshProUGUI ui_player_score;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public horde_board board;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int minivar;

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xC43370", Offset = "0xC43370", VA = "0xC43370")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xC43A3C", Offset = "0xC43A3C", VA = "0xC43A3C")]
		private path get_free_path()
		{
			return null;
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xC43CB4", Offset = "0xC43CB4", VA = "0xC43CB4")]
		private void add_npc()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xC43E6C", Offset = "0xC43E6C", VA = "0xC43E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xC44148", Offset = "0xC44148", VA = "0xC44148")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xC445F0", Offset = "0xC445F0", VA = "0xC445F0")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xC44540", Offset = "0xC44540", VA = "0xC44540")]
		private void update_minivar()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xC446C0", Offset = "0xC446C0", VA = "0xC446C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F6A8", Offset = "0x63F6A8")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xC44254", Offset = "0xC44254", VA = "0xC44254")]
		private void end_ticket()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xC44CC8", Offset = "0xC44CC8", VA = "0xC44CC8")]
		private string Md5Sum(string strToEncrypt)
		{
			return null;
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xC4355C", Offset = "0xC4355C", VA = "0xC4355C")]
		private void update_player_score()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xC44E6C", Offset = "0xC44E6C", VA = "0xC44E6C")]
		public void submit_end()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xC44754", Offset = "0xC44754", VA = "0xC44754")]
		private void submit_score()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xC43790", Offset = "0xC43790", VA = "0xC43790")]
		private void add_ticket()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xC44F10", Offset = "0xC44F10", VA = "0xC44F10")]
		private void ticket_grab_start()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xC44F80", Offset = "0xC44F80", VA = "0xC44F80")]
		public void ticket_grab(toolbase ticket)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xC451E8", Offset = "0xC451E8", VA = "0xC451E8")]
		public level_contests()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class level_horde : level
	{
		[Token(Token = "0x2000284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E454", Offset = "0x62E454")]
		private sealed class <PlayMusicCoroutine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_horde <>4__this;

			[Token(Token = "0x4001096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4001097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4001098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4001099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x170001B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FAE")]
				[Address(RVA = "0xB4E318", Offset = "0xB4E318", VA = "0xB4E318", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FB0")]
				[Address(RVA = "0xB4E360", Offset = "0xB4E360", VA = "0xB4E360", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0xB4E080", Offset = "0xB4E080", VA = "0xB4E080")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0xB4E0AC", Offset = "0xB4E0AC", VA = "0xB4E0AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0xB4E0B0", Offset = "0xB4E0B0", VA = "0xB4E0B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0xB4E320", Offset = "0xB4E320", VA = "0xB4E320", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public hud hud;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool level_started;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool level_ended;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private sound music_current;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound music_idle;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound music_action;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public sound music_win;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound music_lose;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject redpill;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public weapon[] weapons;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<npc> enemies;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject spawnscontainer;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<spawn> spawns;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<npc> npcs;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float next_spawn;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int npc_limit;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int npc_killed;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int npc_left;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int npc_total;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int wave;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private safe_int score;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int hit_continuity;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TextMeshProUGUI ui_score1;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TextMeshProUGUI ui_score2;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TextMeshProUGUI ui_wave1;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public TextMeshProUGUI ui_wave2;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool wave_completed;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool wave_pending;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool wave_before_ready;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float wave_pending_start;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool wave_ready;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject powerups_container;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<GameObject> powerups_active;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<GameObject> powerups_left;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int max_powerups;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject guns_org;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private GameObject guns_active;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private tool_firearm guns_active_right;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private tool_firearm guns_active_left;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int best_continuity;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int total_kills;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float started;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int hordediff;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int score_difficulty_start;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int spawned;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool music_in_action;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float music_next_update;

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xC067B8", Offset = "0xC067B8", VA = "0xC067B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xC06C78", Offset = "0xC06C78", VA = "0xC06C78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xC07690", Offset = "0xC07690", VA = "0xC07690")]
		private void shot_hit(bool headshot)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xC07E94", Offset = "0xC07E94", VA = "0xC07E94")]
		private void update_stats()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xC08114", Offset = "0xC08114", VA = "0xC08114")]
		public void shot_miss()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xC0811C", Offset = "0xC0811C", VA = "0xC0811C")]
		private void spawn_powerups()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xC082F4", Offset = "0xC082F4", VA = "0xC082F4")]
		private void next_wave()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xC083FC", Offset = "0xC083FC", VA = "0xC083FC")]
		private void set_weapons()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xC07924", Offset = "0xC07924", VA = "0xC07924")]
		private void wave_wait()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xC07DEC", Offset = "0xC07DEC", VA = "0xC07DEC")]
		private void wave_done()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xC07558", Offset = "0xC07558", VA = "0xC07558")]
		private void respwan(npc npc)
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xC089BC", Offset = "0xC089BC", VA = "0xC089BC")]
		private string Md5Sum(string strToEncrypt)
		{
			return null;
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xC08B60", Offset = "0xC08B60", VA = "0xC08B60")]
		private void submit_score()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xC071B8", Offset = "0xC071B8", VA = "0xC071B8")]
		public void LevelFailed()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xC09098", Offset = "0xC09098", VA = "0xC09098")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xC07794", Offset = "0xC07794", VA = "0xC07794")]
		private void update_music()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xC070B4", Offset = "0xC070B4", VA = "0xC070B4")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xC08FC8", Offset = "0xC08FC8", VA = "0xC08FC8")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xC09194", Offset = "0xC09194", VA = "0xC09194")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F760", Offset = "0x63F760")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xC09228", Offset = "0xC09228", VA = "0xC09228")]
		private spawn get_spawn()
		{
			return null;
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xC09508", Offset = "0xC09508", VA = "0xC09508")]
		public void add_npc_tests()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xC09538", Offset = "0xC09538", VA = "0xC09538")]
		public void add_npc_now()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xC0785C", Offset = "0xC0785C", VA = "0xC0785C")]
		private void add_npc()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xC099FC", Offset = "0xC099FC", VA = "0xC099FC")]
		public level_horde()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class test : MonoBehaviour
	{
		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VestHapticClip clip;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x637784", Offset = "0x637784")]
		public float intensity;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6377A0", Offset = "0x6377A0")]
		public float duration;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6377BC", Offset = "0x6377BC")]
		public float angleX;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6377D8", Offset = "0x6377D8")]
		public float offsetY;

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xC2CF18", Offset = "0xC2CF18", VA = "0xC2CF18")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xC2CF1C", Offset = "0xC2CF1C", VA = "0xC2CF1C")]
		public void testHit()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xC2CF80", Offset = "0xC2CF80", VA = "0xC2CF80")]
		public test()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class translations : MonoBehaviour
	{
		[Token(Token = "0x2000287")]
		public enum languages
		{
			[Token(Token = "0x40010A8")]
			none,
			[Token(Token = "0x40010A9")]
			en,
			[Token(Token = "0x40010AA")]
			he,
			[Token(Token = "0x40010AB")]
			zh,
			[Token(Token = "0x40010AC")]
			ko,
			[Token(Token = "0x40010AD")]
			ja
		}

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _init;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool voice;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static bool typing;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static languages selected;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<string, string> cache;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI Text1;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Key1;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6377F0", Offset = "0x6377F0")]
		public TextMeshProUGUI Controls1;

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x114205C", Offset = "0x114205C", VA = "0x114205C")]
		public static string getByText(string str)
		{
			return null;
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x11422D0", Offset = "0x11422D0", VA = "0x11422D0")]
		public static string get(string k, [Optional] string value)
		{
			return null;
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1142404", Offset = "0x1142404", VA = "0x1142404")]
		public static void init()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1142CD0", Offset = "0x1142CD0", VA = "0x1142CD0")]
		public static void change_language(languages language)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x114287C", Offset = "0x114287C", VA = "0x114287C")]
		public static void set_language(languages language)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x11516DC", Offset = "0x11516DC", VA = "0x11516DC")]
		public static string rtl(string str)
		{
			return null;
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x1143004", Offset = "0x1143004", VA = "0x1143004")]
		public static Dictionary<string, string> keys_default()
		{
			return null;
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x11465C8", Offset = "0x11465C8", VA = "0x11465C8")]
		public static Dictionary<string, string> keys_en()
		{
			return null;
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x114663C", Offset = "0x114663C", VA = "0x114663C")]
		public static Dictionary<string, string> keys_he()
		{
			return null;
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x11499AC", Offset = "0x11499AC", VA = "0x11499AC")]
		public static Dictionary<string, string> keys_zh()
		{
			return null;
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x114C35C", Offset = "0x114C35C", VA = "0x114C35C")]
		public static Dictionary<string, string> keys_ko()
		{
			return null;
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x114ED38", Offset = "0x114ED38", VA = "0x114ED38")]
		public static Dictionary<string, string> keys_ja()
		{
			return null;
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x115171C", Offset = "0x115171C", VA = "0x115171C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1151BE4", Offset = "0x1151BE4", VA = "0x1151BE4")]
		private string csvkey(string str)
		{
			return null;
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1151C88", Offset = "0x1151C88", VA = "0x1151C88")]
		private void create_csv_all()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x11523A0", Offset = "0x11523A0", VA = "0x11523A0")]
		private void create_csv_missing()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1151C90", Offset = "0x1151C90", VA = "0x1151C90")]
		private void create_csv(bool missing = false)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x11523A8", Offset = "0x11523A8", VA = "0x11523A8")]
		private void get_all_chars()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1152F4C", Offset = "0x1152F4C", VA = "0x1152F4C")]
		public translations()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class area : MonoBehaviour
	{
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider body;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool stay;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int count;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool first;

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x9C8EF4", Offset = "0x9C8EF4", VA = "0x9C8EF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x9C8FA4", Offset = "0x9C8FA4", VA = "0x9C8FA4")]
		public void set_body(Collider other)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x9C8FAC", Offset = "0x9C8FAC", VA = "0x9C8FAC")]
		public bool in_bounds()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x9C8FCC", Offset = "0x9C8FCC", VA = "0x9C8FCC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x9C9068", Offset = "0x9C9068", VA = "0x9C9068")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x9C9104", Offset = "0x9C9104", VA = "0x9C9104")]
		public void ToggleRenderers()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x9C91D8", Offset = "0x9C91D8", VA = "0x9C91D8")]
		public area()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class area_collider : MonoBehaviour
	{
		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 org;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _init;

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x9C91EC", Offset = "0x9C91EC", VA = "0x9C91EC")]
		private void init()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x9C9238", Offset = "0x9C9238", VA = "0x9C9238")]
		public void show()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x9C9294", Offset = "0x9C9294", VA = "0x9C9294")]
		public void hide()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x9C930C", Offset = "0x9C930C", VA = "0x9C930C")]
		public area_collider()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class button : MonoBehaviour
	{
		[Token(Token = "0x200028B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E464", Offset = "0x62E464")]
		private sealed class <push_animation>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public button <>4__this;

			[Token(Token = "0x40010CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x40010CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <start>5__3;

			[Token(Token = "0x40010CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <end>5__4;

			[Token(Token = "0x170001B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FDD")]
				[Address(RVA = "0xA7D738", Offset = "0xA7D738", VA = "0xA7D738", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FDF")]
				[Address(RVA = "0xA7D780", Offset = "0xA7D780", VA = "0xA7D780", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0xA7D404", Offset = "0xA7D404", VA = "0xA7D404")]
			[DebuggerHidden]
			public <push_animation>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0xA7D430", Offset = "0xA7D430", VA = "0xA7D430", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0xA7D434", Offset = "0xA7D434", VA = "0xA7D434", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0xA7D740", Offset = "0xA7D740", VA = "0xA7D740", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool active;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool accept_hand_finger;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool accept_hand_palm;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float accept_after_seconds;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider col_trigger;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float col_start;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool on_interaction;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool on;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool locked;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject model;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject model_on;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject model_off;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 push_org;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 push_offset;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float push_seconds;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private hand hand;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent OnPress;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent OnTurnOn;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent OnTurnOff;

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x9CACD0", Offset = "0x9CACD0", VA = "0x9CACD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x9CAD78", Offset = "0x9CAD78", VA = "0x9CAD78")]
		private void set_active_model()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x9CAE5C", Offset = "0x9CAE5C", VA = "0x9CAE5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F818", Offset = "0x63F818")]
		private IEnumerator push_animation()
		{
			return null;
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x9CAEDC", Offset = "0x9CAEDC", VA = "0x9CAEDC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x9CB0D4", Offset = "0x9CB0D4", VA = "0x9CB0D4")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x9CB240", Offset = "0x9CB240", VA = "0x9CB240")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x9CB31C", Offset = "0x9CB31C", VA = "0x9CB31C")]
		public button()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class custombutton : MonoBehaviour
	{
		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public base_event on_press;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public sound ClickSound;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject show_on;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject show_off;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider col;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string url;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private hand current_hand;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float last;

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x9CBC7C", Offset = "0x9CBC7C", VA = "0x9CBC7C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x9CC1AC", Offset = "0x9CC1AC", VA = "0x9CC1AC")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x9CC244", Offset = "0x9CC244", VA = "0x9CC244")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x9CC3A8", Offset = "0x9CC3A8", VA = "0x9CC3A8")]
		public custombutton()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class customcard : MonoBehaviour
	{
		[Token(Token = "0x200028E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E474", Offset = "0x62E474")]
		private sealed class <set_image>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x40010DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public customcard <>4__this;

			[Token(Token = "0x40010E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <cached>5__2;

			[Token(Token = "0x40010E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <localName>5__3;

			[Token(Token = "0x40010E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <uwr>5__4;

			[Token(Token = "0x170001B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FEB")]
				[Address(RVA = "0xA7DBB0", Offset = "0xA7DBB0", VA = "0xA7DBB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FED")]
				[Address(RVA = "0xA7DBF8", Offset = "0xA7DBF8", VA = "0xA7DBF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0xA7D788", Offset = "0xA7D788", VA = "0xA7D788")]
			[DebuggerHidden]
			public <set_image>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0xA7D7B4", Offset = "0xA7D7B4", VA = "0xA7D7B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0xA7D884", Offset = "0xA7D884", VA = "0xA7D884", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0xA7D7D0", Offset = "0xA7D7D0", VA = "0xA7D7D0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xA7DBB8", Offset = "0xA7DBB8", VA = "0xA7DBB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string varname;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI ui_title;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI ui_name;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI ui_key;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI ui_value;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RawImage ui_image;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public custombutton button;

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x9CC3B0", Offset = "0x9CC3B0", VA = "0x9CC3B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x9CC5E0", Offset = "0x9CC5E0", VA = "0x9CC5E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F8D0", Offset = "0x63F8D0")]
		private IEnumerator set_image(string url)
		{
			return null;
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x9CC674", Offset = "0x9CC674", VA = "0x9CC674")]
		public customcard()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class hand : MonoBehaviour
	{
		[Token(Token = "0x2000290")]
		public enum sides
		{
			[Token(Token = "0x4001114")]
			left,
			[Token(Token = "0x4001115")]
			right
		}

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public sides side;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public hand other;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform hands;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool in_reload_zone;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Animator ani;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BonePoseLib poses;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string handpose_idle;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string handpose_fist;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string handpose_point;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string handpose_ok;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string handpose_like;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string handpose_victory;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string override_pose;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int override_pose_frame;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform model;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform model1;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform model2;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform model3;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public toolbase finger1;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public toolbase finger2;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public toolbase finger3;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform container;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Rigidbody rb;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Collider col_palm;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Collider col_finger;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Renderer rend;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material defaultMat;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool enable_state;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool enable_menu;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		public bool enable_use;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		private bool exploded;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public toolbase tool;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool locked;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public vr_hand controller;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float distance_grab;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float range;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<toolbase> collide_with_tools;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject stats;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject stats_focus;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public TextMeshProUGUI health;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public TextMeshProUGUI progress;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public TextMeshProUGUI accuracy;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float detectCollisionsRestore;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Material mat_default;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Material mat_red;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Renderer[] mat_rends;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Collider index_locked_collider;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float index_locked_time;

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x9CD298", Offset = "0x9CD298", VA = "0x9CD298")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x9CD408", Offset = "0x9CD408", VA = "0x9CD408")]
		public void focus(bool state)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x9CD610", Offset = "0x9CD610", VA = "0x9CD610")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x9CDBCC", Offset = "0x9CDBCC", VA = "0x9CDBCC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x9CD680", Offset = "0x9CD680", VA = "0x9CD680")]
		private void update_hand_logic(bool late_update)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x9CDDB4", Offset = "0x9CDDB4", VA = "0x9CDDB4")]
		public void explode(float delay = 0.5f)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x9CDE3C", Offset = "0x9CDE3C", VA = "0x9CDE3C")]
		private void explode_logic()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x9CD760", Offset = "0x9CD760", VA = "0x9CD760")]
		private void scan()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x9CE0C0", Offset = "0x9CE0C0", VA = "0x9CE0C0")]
		public void set_override_pose(string str)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x9CDBD4", Offset = "0x9CDBD4", VA = "0x9CDBD4")]
		public void update_hand(hand hand)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x9CE29C", Offset = "0x9CE29C", VA = "0x9CE29C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x9CE364", Offset = "0x9CE364", VA = "0x9CE364")]
		public bool is_menu_enabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x9CE384", Offset = "0x9CE384", VA = "0x9CE384")]
		public bool is_enabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x9CE38C", Offset = "0x9CE38C", VA = "0x9CE38C")]
		public void EnableState(bool _state, bool allow_menu = false)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x9CE478", Offset = "0x9CE478", VA = "0x9CE478")]
		public void EnableToolUse(bool _state)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x9CE484", Offset = "0x9CE484", VA = "0x9CE484")]
		public void SwitchToRed()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x9CE560", Offset = "0x9CE560", VA = "0x9CE560")]
		public Vector3 get_velocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x9CE5FC", Offset = "0x9CE5FC", VA = "0x9CE5FC")]
		public Vector3 get_angular()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x9CE66C", Offset = "0x9CE66C", VA = "0x9CE66C")]
		public float get_controller_distance_from_handmodel()
		{
			return default(float);
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x9CE704", Offset = "0x9CE704", VA = "0x9CE704")]
		public Quaternion get_controller_world_rotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x9CE814", Offset = "0x9CE814", VA = "0x9CE814")]
		public Vector3 get_controller_world_position()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x9CA780", Offset = "0x9CA780", VA = "0x9CA780")]
		public void vibrate(float duration, float volume)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x9CD368", Offset = "0x9CD368", VA = "0x9CD368")]
		public void set_pose(string name)
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x9CE1FC", Offset = "0x9CE1FC", VA = "0x9CE1FC")]
		public void set_position(Vector3 position)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x9CE248", Offset = "0x9CE248", VA = "0x9CE248")]
		public void set_rotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x9CE0F4", Offset = "0x9CE0F4", VA = "0x9CE0F4")]
		public void set_visible(bool visible)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x9CC064", Offset = "0x9CC064", VA = "0x9CC064")]
		public bool get_visible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x9CE914", Offset = "0x9CE914", VA = "0x9CE914")]
		public void disable_collisions()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x9CE950", Offset = "0x9CE950", VA = "0x9CE950")]
		public void set_world_position(Vector3 position)
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x9CE99C", Offset = "0x9CE99C", VA = "0x9CE99C")]
		public void set_world_rotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x9CE9F0", Offset = "0x9CE9F0", VA = "0x9CE9F0", Slot = "4")]
		public virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x9CEB40", Offset = "0x9CEB40", VA = "0x9CEB40", Slot = "5")]
		public virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x9CEC90", Offset = "0x9CEC90", VA = "0x9CEC90")]
		public bool index_is_free(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x9CC160", Offset = "0x9CC160", VA = "0x9CC160")]
		public void index_locked_update(Collider collider)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x9CC370", Offset = "0x9CC370", VA = "0x9CC370")]
		public void index_locked_free(Collider collider)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x9CC090", Offset = "0x9CC090", VA = "0x9CC090")]
		public bool is_pointing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x9CED58", Offset = "0x9CED58", VA = "0x9CED58")]
		public hand()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class handbone : MonoBehaviour
	{
		[Token(Token = "0x6001013")]
		[Address(RVA = "0x9CEEF8", Offset = "0x9CEEF8", VA = "0x9CEEF8")]
		public handbone()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class handbutton : MonoBehaviour
	{
		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public handmenu handmenu;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public base_event on_press;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RawImage back;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider col;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private hand current_hand;

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x9CEF00", Offset = "0x9CEF00", VA = "0x9CEF00")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x9CF218", Offset = "0x9CF218", VA = "0x9CF218")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x9CF2B0", Offset = "0x9CF2B0", VA = "0x9CF2B0")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x9CF3EC", Offset = "0x9CF3EC", VA = "0x9CF3EC")]
		public handbutton()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class handmenu : MonoBehaviour
	{
		[Token(Token = "0x2000294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E484", Offset = "0x62E484")]
		private sealed class <show>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400113E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400113F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public handmenu <>4__this;

			[Token(Token = "0x4001142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool state;

			[Token(Token = "0x170001B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600103E")]
				[Address(RVA = "0xA7E200", Offset = "0xA7E200", VA = "0xA7E200", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001040")]
				[Address(RVA = "0xA7E248", Offset = "0xA7E248", VA = "0xA7E248", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600103B")]
			[Address(RVA = "0xA7E110", Offset = "0xA7E110", VA = "0xA7E110")]
			[DebuggerHidden]
			public <show>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x600103C")]
			[Address(RVA = "0xA7E13C", Offset = "0xA7E13C", VA = "0xA7E13C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600103D")]
			[Address(RVA = "0xA7E140", Offset = "0xA7E140", VA = "0xA7E140", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600103F")]
			[Address(RVA = "0xA7E208", Offset = "0xA7E208", VA = "0xA7E208", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000295")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E494", Offset = "0x62E494")]
		private sealed class <show>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int frames;

			[Token(Token = "0x4001146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public handmenu <>4__this;

			[Token(Token = "0x4001147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool state;

			[Token(Token = "0x170001B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001044")]
				[Address(RVA = "0xA7E2FC", Offset = "0xA7E2FC", VA = "0xA7E2FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001046")]
				[Address(RVA = "0xA7E344", Offset = "0xA7E344", VA = "0xA7E344", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001041")]
			[Address(RVA = "0xA7E250", Offset = "0xA7E250", VA = "0xA7E250")]
			[DebuggerHidden]
			public <show>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x6001042")]
			[Address(RVA = "0xA7E27C", Offset = "0xA7E27C", VA = "0xA7E27C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001043")]
			[Address(RVA = "0xA7E280", Offset = "0xA7E280", VA = "0xA7E280", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001045")]
			[Address(RVA = "0xA7E304", Offset = "0xA7E304", VA = "0xA7E304", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool locked;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool inbase;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool visible;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float state_changed;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject bhaptics_menu;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject bhaptics_on;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject bhaptics_off;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float bhaptics_next;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool multiplayer_mode;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject language_menu;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject multiplayer_menu;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject wrap;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject go_button_restart_level;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject go_button_return_to_base;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject go_button_exit;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject admin_all;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject admin_level;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextMeshProUGUI admin_difficulty;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public sound ToggleSound;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public sound ClickSound;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool admin_check_started;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string admin_check_seq;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TextMeshProUGUI consoleText;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject tunnel_true;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject tunnel_false;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject rotate_true;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject rotate_false;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject recorder_true;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject recorder_false;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public CanvasGroup canvas_wrapper;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TextMeshProUGUI angle_value;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject language_he;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GameObject language_zh;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject language_ko;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject language_ja;

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x9CF3F4", Offset = "0x9CF3F4", VA = "0x9CF3F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x9CF858", Offset = "0x9CF858", VA = "0x9CF858")]
		public void button_set_langauge(string code)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x9CFB44", Offset = "0x9CFB44", VA = "0x9CFB44")]
		private void Update()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x9CF42C", Offset = "0x9CF42C", VA = "0x9CF42C")]
		public void init()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x9D03B0", Offset = "0x9D03B0", VA = "0x9D03B0")]
		public void console(object str, bool clear = false)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x9CFF4C", Offset = "0x9CFF4C", VA = "0x9CFF4C")]
		private void check_admin()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x9D04D8", Offset = "0x9D04D8", VA = "0x9D04D8")]
		private void toggle_admin()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x9D05B4", Offset = "0x9D05B4", VA = "0x9D05B4")]
		public void close()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x9CFDD0", Offset = "0x9CFDD0", VA = "0x9CFDD0")]
		public void show(bool state)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x9D0658", Offset = "0x9D0658", VA = "0x9D0658")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F988", Offset = "0x63F988")]
		private IEnumerator show(bool state, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x9D06F4", Offset = "0x9D06F4", VA = "0x9D06F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63F9F0", Offset = "0x63F9F0")]
		private IEnumerator show(bool state, int frames)
		{
			return null;
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x9CF1C8", Offset = "0x9CF1C8", VA = "0x9CF1C8")]
		public bool allow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x9CFA18", Offset = "0x9CFA18", VA = "0x9CFA18")]
		private void button()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x9D0790", Offset = "0x9D0790", VA = "0x9D0790")]
		public void button_restart_level()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x9D08AC", Offset = "0x9D08AC", VA = "0x9D08AC")]
		public void button_return_to_base()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x9D0A18", Offset = "0x9D0A18", VA = "0x9D0A18")]
		public void button_first_level()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x9D0B84", Offset = "0x9D0B84", VA = "0x9D0B84")]
		public void button_exit()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x9D0C84", Offset = "0x9D0C84", VA = "0x9D0C84")]
		public void button_angle_plus()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x9D0E10", Offset = "0x9D0E10", VA = "0x9D0E10")]
		public void button_angle_minus()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x9D0F9C", Offset = "0x9D0F9C", VA = "0x9D0F9C")]
		public void button_recenter()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x9D0308", Offset = "0x9D0308", VA = "0x9D0308")]
		private void update_recorder_ui()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x9D1074", Offset = "0x9D1074", VA = "0x9D1074")]
		public void button_recorder()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x9D11A8", Offset = "0x9D11A8", VA = "0x9D11A8")]
		public void button_tunnel()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x9D12DC", Offset = "0x9D12DC", VA = "0x9D12DC")]
		public void button_rotate()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x9D0260", Offset = "0x9D0260", VA = "0x9D0260")]
		private void update_rotate_ui()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x9D1410", Offset = "0x9D1410", VA = "0x9D1410")]
		public void button_bhaptics()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x9D01B8", Offset = "0x9D01B8", VA = "0x9D01B8")]
		private void update_tunnel_ui()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x9D1598", Offset = "0x9D1598", VA = "0x9D1598")]
		public void button_admin_difficulty(int val)
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x9D169C", Offset = "0x9D169C", VA = "0x9D169C")]
		public void button_admin_reset()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x9D1800", Offset = "0x9D1800", VA = "0x9D1800")]
		public void button_admin_open()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x9D1A28", Offset = "0x9D1A28", VA = "0x9D1A28")]
		public void button_admin_fps()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x9D1AF8", Offset = "0x9D1AF8", VA = "0x9D1AF8")]
		public void button_admin_tunnel()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x9D1BC8", Offset = "0x9D1BC8", VA = "0x9D1BC8")]
		public void button_admin_subtitles()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x9D1CB0", Offset = "0x9D1CB0", VA = "0x9D1CB0")]
		public void button_admin_health()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x9D1D84", Offset = "0x9D1D84", VA = "0x9D1D84")]
		public handmenu()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class head : TrackedPoseDriver
	{
		[Token(Token = "0x6001047")]
		[Address(RVA = "0x9D1DE8", Offset = "0x9D1DE8", VA = "0x9D1DE8")]
		public void UpdateNow()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x9D1DF4", Offset = "0x9D1DF4", VA = "0x9D1DF4")]
		public head()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class look : MonoBehaviour
	{
		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public look_event on_enter;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public look_event on_stay;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public look_event on_exit;

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xC0B05C", Offset = "0xC0B05C", VA = "0xC0B05C")]
		public void look_enter()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xC0B0B4", Offset = "0xC0B0B4", VA = "0xC0B0B4")]
		public void look_stay()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xC0B10C", Offset = "0xC0B10C", VA = "0xC0B10C")]
		public void look_exit()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xC0B164", Offset = "0xC0B164", VA = "0xC0B164")]
		public look()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class menu : hitable
	{
		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool locked;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float lasthit;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public base_event on_hit;

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xC159CC", Offset = "0xC159CC", VA = "0xC159CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xC15A30", Offset = "0xC15A30", VA = "0xC15A30")]
		public void Test()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xC15AD8", Offset = "0xC15AD8", VA = "0xC15AD8", Slot = "7")]
		public override bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xC15AE0", Offset = "0xC15AE0", VA = "0xC15AE0", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xC15B98", Offset = "0xC15B98", VA = "0xC15B98", Slot = "8")]
		public virtual void action()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xC15BB8", Offset = "0xC15BB8", VA = "0xC15BB8")]
		public menu()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class mount : MonoBehaviour
	{
		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pivot;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public toolbase mounted;

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xC15BC4", Offset = "0xC15BC4", VA = "0xC15BC4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xC15C20", Offset = "0xC15C20", VA = "0xC15C20")]
		public bool try_mount(toolbase tool)
		{
			return default(bool);
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xC15CB8", Offset = "0xC15CB8", VA = "0xC15CB8")]
		public bool free_mount(toolbase tool)
		{
			return default(bool);
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xC15D80", Offset = "0xC15D80", VA = "0xC15D80")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xC15EBC", Offset = "0xC15EBC", VA = "0xC15EBC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xC15FFC", Offset = "0xC15FFC", VA = "0xC15FFC")]
		public mount()
		{
		}
	}
	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x62E4A4", Offset = "0x62E4A4")]
	public class player : MonoBehaviour
	{
		[Token(Token = "0x200029B")]
		public enum hittypes
		{
			[Token(Token = "0x40011BA")]
			shoot,
			[Token(Token = "0x40011BB")]
			melee,
			[Token(Token = "0x40011BC")]
			landing,
			[Token(Token = "0x40011BD")]
			kill,
			[Token(Token = "0x40011BE")]
			heal,
			[Token(Token = "0x40011BF")]
			explode,
			[Token(Token = "0x40011C0")]
			civilian,
			[Token(Token = "0x40011C1")]
			crash
		}

		[Token(Token = "0x200029C")]
		public enum movetypes
		{
			[Token(Token = "0x40011C3")]
			none,
			[Token(Token = "0x40011C4")]
			free,
			[Token(Token = "0x40011C5")]
			teleport
		}

		[Token(Token = "0x200029D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E4B8", Offset = "0x62E4B8")]
		private sealed class <Start>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public player <>4__this;

			[Token(Token = "0x170001BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010A2")]
				[Address(RVA = "0xB50F74", Offset = "0xB50F74", VA = "0xB50F74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010A4")]
				[Address(RVA = "0xB50FBC", Offset = "0xB50FBC", VA = "0xB50FBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600109F")]
			[Address(RVA = "0xB50E50", Offset = "0xB50E50", VA = "0xB50E50")]
			[DebuggerHidden]
			public <Start>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x60010A0")]
			[Address(RVA = "0xB50E7C", Offset = "0xB50E7C", VA = "0xB50E7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010A1")]
			[Address(RVA = "0xB50E80", Offset = "0xB50E80", VA = "0xB50E80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010A3")]
			[Address(RVA = "0xB50F7C", Offset = "0xB50F7C", VA = "0xB50F7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200029E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E4C8", Offset = "0x62E4C8")]
		private sealed class <swap_standing_crouching_crouching>d__97 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public player <>4__this;

			[Token(Token = "0x40011CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <height_from>5__2;

			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <height_to>5__3;

			[Token(Token = "0x40011CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <duration>5__4;

			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <pass>5__5;

			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <pos>5__6;

			[Token(Token = "0x170001BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010A8")]
				[Address(RVA = "0xB5137C", Offset = "0xB5137C", VA = "0xB5137C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010AA")]
				[Address(RVA = "0xB513C4", Offset = "0xB513C4", VA = "0xB513C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xB511BC", Offset = "0xB511BC", VA = "0xB511BC")]
			[DebuggerHidden]
			public <swap_standing_crouching_crouching>d__97(int <>1__state)
			{
			}

			[Token(Token = "0x60010A6")]
			[Address(RVA = "0xB511E8", Offset = "0xB511E8", VA = "0xB511E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010A7")]
			[Address(RVA = "0xB511EC", Offset = "0xB511EC", VA = "0xB511EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010A9")]
			[Address(RVA = "0xB51384", Offset = "0xB51384", VA = "0xB51384", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200029F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E4D8", Offset = "0x62E4D8")]
		private sealed class <>c
		{
			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40011D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__107_0;

			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xB50AA4", Offset = "0xB50AA4", VA = "0xB50AA4")]
			public <>c()
			{
			}

			[Token(Token = "0x60010AD")]
			[Address(RVA = "0xB50AAC", Offset = "0xB50AAC", VA = "0xB50AAC")]
			internal int <UpdateMoveTeleport>b__107_0(RaycastHit a, RaycastHit b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E4E8", Offset = "0x62E4E8")]
		private sealed class <UpdateRotate>d__112 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public player <>4__this;

			[Token(Token = "0x40011D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float angle;

			[Token(Token = "0x40011D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <duration>5__2;

			[Token(Token = "0x40011D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <pass>5__3;

			[Token(Token = "0x40011D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <last_pass>5__4;

			[Token(Token = "0x40011DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <done>5__5;

			[Token(Token = "0x170001BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010B1")]
				[Address(RVA = "0xB5116C", Offset = "0xB5116C", VA = "0xB5116C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B3")]
				[Address(RVA = "0xB511B4", Offset = "0xB511B4", VA = "0xB511B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010AE")]
			[Address(RVA = "0xB50FC4", Offset = "0xB50FC4", VA = "0xB50FC4")]
			[DebuggerHidden]
			public <UpdateRotate>d__112(int <>1__state)
			{
			}

			[Token(Token = "0x60010AF")]
			[Address(RVA = "0xB50FF0", Offset = "0xB50FF0", VA = "0xB50FF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010B0")]
			[Address(RVA = "0xB50FF4", Offset = "0xB50FF4", VA = "0xB50FF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xB51174", Offset = "0xB51174", VA = "0xB51174", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E4F8", Offset = "0x62E4F8")]
		private sealed class <SlowdownUpdate>d__124 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float to;

			[Token(Token = "0x40011DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float duration_in;

			[Token(Token = "0x40011DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x40011E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration_out;

			[Token(Token = "0x40011E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <pass>5__2;

			[Token(Token = "0x40011E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <from>5__3;

			[Token(Token = "0x170001C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010B7")]
				[Address(RVA = "0xB50E00", Offset = "0xB50E00", VA = "0xB50E00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B9")]
				[Address(RVA = "0xB50E48", Offset = "0xB50E48", VA = "0xB50E48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xB50AF0", Offset = "0xB50AF0", VA = "0xB50AF0")]
			[DebuggerHidden]
			public <SlowdownUpdate>d__124(int <>1__state)
			{
			}

			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xB50B1C", Offset = "0xB50B1C", VA = "0xB50B1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xB50B20", Offset = "0xB50B20", VA = "0xB50B20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xB50E08", Offset = "0xB50E08", VA = "0xB50E08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static player instance;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool admin;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool admin_fps;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float admin_difficulty;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool admin_tunnel;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public static bool show_tunnel;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public static bool smooth_turning;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public static bool simulate_weight;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static bool pasued;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public static bool enable_pause;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public static bool voice_mute;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool can_move;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform teleport_container;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<teleport> teleports;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform left_laser;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform right_laser;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LineRenderer teleport_line_right;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LineRenderer teleport_line_left;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public teleport teleport_area;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool right_stick_moved;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string teleport_area_layer_name;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int teleport_area_layer;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool admin_movement;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 last_teleport_position;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public VestHapticClip bhaptic_shoot;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public VestHapticClip bhaptic_melee;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VestHapticClip bhaptic_landing;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public VestHapticClip bhaptic_kill;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public VestHapticClip bhaptic_heal;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public VestHapticClip bhaptic_explode;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public VestHapticClip bhaptic_civilian;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public VestHapticClip bhaptic_crash;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 move;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform eyes;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform offset;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public hand left;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public hand right;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Rigidbody body;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Collider body_collider;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public head head;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public handmenu menu;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject EventSystem;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public sound audio;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Vector3 org_pos;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 org_angles;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public float current_height;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float standing_height;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float crouching_height;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool is_crouching;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Coroutine standing_crouching;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool standing_crouching_lock;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		private bool on_standing_crouching;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		public bool can_be_hit;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public RawImage black_cover;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public RawImage red_cover;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public RawImage green_cover;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public RawImage white_cover;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Image tunnel;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool tunnel_enabled;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		private bool inbounds;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[HideInInspector]
		public float white_amount;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public float red_amount;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[HideInInspector]
		public float green_amount;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public float black_amount;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public bool auto_update_red_amount;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		private bool rotated;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x186")]
		private bool rotate_progress;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x187")]
		private bool moving;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public area area;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public GameObject bounds;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool enable_bounds;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Transform container;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Outline outline;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private int selected_difficulty;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private RaycastHit[] lookhits;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private look last_look_target;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float screenshot_logic_last_x;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float screenshot_logic_enable;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Coroutine SlowdownCoroutine;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public string str_health;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[HideInInspector]
		public string str_accuracy;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public string str_progress;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public int health;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Material restore_outline_mat;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private bool climb_left;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
		private bool climb_right;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private hand climb_last;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Vector3 climb_pos;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private float climb_speed_one;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private float climb_speed_two;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private bool can_fall;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
		private bool falling;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x226")]
		private bool falling_sound;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private float falling_speed;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private float falling_start_speed;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private float falling_acceleration;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private float falling_start;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float falling_max_time;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Vector3 falling_pos;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private LayerMask landing_mask;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private RaycastHit landing_info;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public bool first_climb;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x279")]
		public bool first_landing;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private Vector3 landing_fall_position;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private bool landing_fall_crash;

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x1195C14", Offset = "0x1195C14", VA = "0x1195C14")]
		private void Awake()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x11961D8", Offset = "0x11961D8", VA = "0x11961D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63FAF8", Offset = "0x63FAF8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1196258", Offset = "0x1196258", VA = "0x1196258")]
		private void Update()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x1196DC4", Offset = "0x1196DC4", VA = "0x1196DC4")]
		public void set_difficulty()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x1196E64", Offset = "0x1196E64", VA = "0x1196E64")]
		public void focus(bool state)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x1196EAC", Offset = "0x1196EAC", VA = "0x1196EAC")]
		public void update_pause_multiplayer(bool state)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x11970D8", Offset = "0x11970D8", VA = "0x11970D8")]
		public void update_pause(bool state)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x11967CC", Offset = "0x11967CC", VA = "0x11967CC")]
		private void update_area()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1196BD4", Offset = "0x1196BD4", VA = "0x1196BD4")]
		private void update_tunnel()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x1197424", Offset = "0x1197424", VA = "0x1197424")]
		public void loaded()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x1196B4C", Offset = "0x1196B4C", VA = "0x1196B4C")]
		private void update_black_ball()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x1196928", Offset = "0x1196928", VA = "0x1196928")]
		private void update_red_ball()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x11969F0", Offset = "0x11969F0", VA = "0x11969F0")]
		private void update_green_ball()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x1196AB0", Offset = "0x1196AB0", VA = "0x1196AB0")]
		private void update_white_ball()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x119749C", Offset = "0x119749C", VA = "0x119749C")]
		public void update_recenter_rotate(float y)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x1197564", Offset = "0x1197564", VA = "0x1197564")]
		public void update_recenter_angles(Vector3 angles)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x1197574", Offset = "0x1197574", VA = "0x1197574")]
		public void update_recenter_rotation(Vector3 rot)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x1197668", Offset = "0x1197668", VA = "0x1197668")]
		public void update_recenter_position(Vector3 pos)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x1197748", Offset = "0x1197748", VA = "0x1197748")]
		public void update_recenter(Transform point)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x119790C", Offset = "0x119790C", VA = "0x119790C")]
		public void update_recenter()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x11966C4", Offset = "0x11966C4", VA = "0x11966C4")]
		public void swap_standing_crouching()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x1197948", Offset = "0x1197948", VA = "0x1197948")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63FB60", Offset = "0x63FB60")]
		private IEnumerator swap_standing_crouching_crouching()
		{
			return null;
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x11979C8", Offset = "0x11979C8", VA = "0x11979C8")]
		public void teleport(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x1197AA4", Offset = "0x1197AA4", VA = "0x1197AA4")]
		public Vector3 get_player_position()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x1197B5C", Offset = "0x1197B5C", VA = "0x1197B5C")]
		public void teleport_delta(Vector3 delta)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x1197C34", Offset = "0x1197C34", VA = "0x1197C34")]
		public void teleport_desenation(Vector3 desenation)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x1196390", Offset = "0x1196390", VA = "0x1196390")]
		public void recenter()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x1197C80", Offset = "0x1197C80", VA = "0x1197C80")]
		private void set_teleport_area(teleport value)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x1197E78", Offset = "0x1197E78", VA = "0x1197E78")]
		private void UpdateLook()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x11982AC", Offset = "0x11982AC", VA = "0x11982AC")]
		private bool UpdateMoveTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x1198B84", Offset = "0x1198B84", VA = "0x1198B84")]
		private bool UpdateMoveFreeLocomotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x1198FE0", Offset = "0x1198FE0", VA = "0x1198FE0")]
		private bool UpdateRoomscale()
		{
			return default(bool);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x1199198", Offset = "0x1199198", VA = "0x1199198")]
		private void UpdateAdminMovement()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x1199414", Offset = "0x1199414", VA = "0x1199414")]
		private void UpdateMove()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x11994DC", Offset = "0x11994DC", VA = "0x11994DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63FBC8", Offset = "0x63FBC8")]
		private IEnumerator UpdateRotate(float angle)
		{
			return null;
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x119956C", Offset = "0x119956C", VA = "0x119956C")]
		private void UpdateSmoothRotate()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x1199784", Offset = "0x1199784", VA = "0x1199784")]
		private void UpdateSnapRotate()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x119989C", Offset = "0x119989C", VA = "0x119989C")]
		private void UpdateRotate()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1199928", Offset = "0x1199928", VA = "0x1199928")]
		public void moved(bool state)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x11973F0", Offset = "0x11973F0", VA = "0x11973F0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x1199F64", Offset = "0x1199F64", VA = "0x1199F64")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x1196DC0", Offset = "0x1196DC0", VA = "0x1196DC0")]
		public void screenshot_logic()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x1199FB4", Offset = "0x1199FB4", VA = "0x1199FB4")]
		public void Slowdown(float duration = 5f, float to = 0.05f, float duration_in = 0.25f, float duration_out = 0.25f)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x119A038", Offset = "0x119A038", VA = "0x119A038")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63FC30", Offset = "0x63FC30")]
		private IEnumerator SlowdownUpdate(float duration, float to, float duration_in, float duration_out)
		{
			return null;
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x119A0C4", Offset = "0x119A0C4", VA = "0x119A0C4")]
		public void draw_health(int val)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x119A200", Offset = "0x119A200", VA = "0x119A200")]
		public void draw_accuracy(int val)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x119A33C", Offset = "0x119A33C", VA = "0x119A33C")]
		public void draw_progress(int val)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x119A478", Offset = "0x119A478", VA = "0x119A478")]
		public void disable_collision_with_hands(Collider collider)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x119A574", Offset = "0x119A574", VA = "0x119A574")]
		public void enable_collision_with_hands(Collider collider)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x1194128", Offset = "0x1194128", VA = "0x1194128")]
		public Vector3 get_player_target()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x119A670", Offset = "0x119A670", VA = "0x119A670")]
		public bool is_target_of_player(Rigidbody _rb)
		{
			return default(bool);
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x119A728", Offset = "0x119A728", VA = "0x119A728")]
		public bool is_part_of_player(Rigidbody _rb)
		{
			return default(bool);
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x1191C0C", Offset = "0x1191C0C", VA = "0x1191C0C")]
		public void headshot()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x119A940", Offset = "0x119A940", VA = "0x119A940")]
		public void heal(int points)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x119A9B0", Offset = "0x119A9B0", VA = "0x119A9B0")]
		public void bhapticplay(Vector3 normal, hittypes hittype)
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x119AD14", Offset = "0x119AD14", VA = "0x119AD14")]
		public void hit_test()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x1194750", Offset = "0x1194750", VA = "0x1194750")]
		public void hit(Vector3 point, Vector3 normal, Vector3 direction, float force, int damage, hittypes hittype)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x119AD88", Offset = "0x119AD88", VA = "0x119AD88")]
		public void set_outline(bool state)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x119B064", Offset = "0x119B064", VA = "0x119B064")]
		public void test_tunnel()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x119B074", Offset = "0x119B074", VA = "0x119B074")]
		public void test_red()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x119B0A8", Offset = "0x119B0A8", VA = "0x119B0A8")]
		public void test_black()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x1197D50", Offset = "0x1197D50", VA = "0x1197D50")]
		private void climb_stop()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x119B0DC", Offset = "0x119B0DC", VA = "0x119B0DC")]
		public void climb_start(hand hand)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x119B224", Offset = "0x119B224", VA = "0x119B224")]
		public void climb_update(hand hand)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x119B400", Offset = "0x119B400", VA = "0x119B400")]
		public void climb_end(hand hand)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x119B534", Offset = "0x119B534", VA = "0x119B534")]
		public bool is_falling()
		{
			return default(bool);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x1199934", Offset = "0x1199934", VA = "0x1199934")]
		private void update_fall()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x119B53C", Offset = "0x119B53C", VA = "0x119B53C")]
		public player()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class reload : MonoBehaviour
	{
		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 angles;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 offset;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform container;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float y;

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xC1FB64", Offset = "0xC1FB64", VA = "0xC1FB64")]
		private void Start()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xC1FC14", Offset = "0xC1FC14", VA = "0xC1FC14")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xC1FD6C", Offset = "0xC1FD6C", VA = "0xC1FD6C")]
		private hand get_hand(Rigidbody rb)
		{
			return null;
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xC1FF24", Offset = "0xC1FF24", VA = "0xC1FF24")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xC2006C", Offset = "0xC2006C", VA = "0xC2006C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xC20104", Offset = "0xC20104", VA = "0xC20104")]
		public reload()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class roadbody : MonoBehaviour
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 move;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody rb;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool inside;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float factor;

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xC21108", Offset = "0xC21108", VA = "0xC21108")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xC2132C", Offset = "0xC2132C", VA = "0xC2132C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xC2146C", Offset = "0xC2146C", VA = "0xC2146C")]
		public roadbody()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class roadcontainer : MonoBehaviour
	{
		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xC23720", Offset = "0xC23720", VA = "0xC23720")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xC23818", Offset = "0xC23818", VA = "0xC23818")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xC2390C", Offset = "0xC2390C", VA = "0xC2390C")]
		public roadcontainer()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62E508", Offset = "0x62E508")]
	public class sound : MonoBehaviour
	{
		[Token(Token = "0x20002A6")]
		public enum types
		{
			[Token(Token = "0x40011F5")]
			genric,
			[Token(Token = "0x40011F6")]
			player_weapon,
			[Token(Token = "0x40011F7")]
			npc_weapon,
			[Token(Token = "0x40011F8")]
			npc_bullet,
			[Token(Token = "0x40011F9")]
			npc_voice,
			[Token(Token = "0x40011FA")]
			explode,
			[Token(Token = "0x40011FB")]
			interaction,
			[Token(Token = "0x40011FC")]
			music,
			[Token(Token = "0x40011FD")]
			elevator,
			[Token(Token = "0x40011FE")]
			elevator_music
		}

		[Serializable]
		[Token(Token = "0x20002A7")]
		public struct clip
		{
			[Token(Token = "0x40011FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioClip src;
		}

		[Serializable]
		[Token(Token = "0x20002A8")]
		public struct slot
		{
			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioClip[] src;
		}

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource source;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public types type;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool auto;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool loop;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float volume;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clip_main;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<clip> clips;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<slot> slots;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float org_volume;

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xC2855C", Offset = "0xC2855C", VA = "0xC2855C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xC287DC", Offset = "0xC287DC", VA = "0xC287DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xC2880C", Offset = "0xC2880C", VA = "0xC2880C")]
		public AudioClip get(string name)
		{
			return null;
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xC28948", Offset = "0xC28948", VA = "0xC28948")]
		public float len(string name)
		{
			return default(float);
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xC1E74C", Offset = "0xC1E74C", VA = "0xC1E74C")]
		public void random(string name)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xC207C8", Offset = "0xC207C8", VA = "0xC207C8")]
		public void play(string name)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xC289F8", Offset = "0xC289F8", VA = "0xC289F8")]
		public void play(AudioClip clip, float pitch = 1f)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xC28804", Offset = "0xC28804", VA = "0xC28804")]
		public void play(float pitch = 1f)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xC28A3C", Offset = "0xC28A3C", VA = "0xC28A3C")]
		public void playnormal()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xC28A90", Offset = "0xC28A90", VA = "0xC28A90")]
		public void stopnormal()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xC23A1C", Offset = "0xC23A1C", VA = "0xC23A1C")]
		public void loop_start()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xC23C00", Offset = "0xC23C00", VA = "0xC23C00")]
		public void loop_stop()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xC28AE4", Offset = "0xC28AE4", VA = "0xC28AE4")]
		public void vol(float val)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xC28B14", Offset = "0xC28B14", VA = "0xC28B14")]
		public sound()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class splash : MonoBehaviour
	{
		[Token(Token = "0x20002AA")]
		public enum stores
		{
			[Token(Token = "0x4001225")]
			applab,
			[Token(Token = "0x4001226")]
			oculus_rift,
			[Token(Token = "0x4001227")]
			steam,
			[Token(Token = "0x4001228")]
			viveport,
			[Token(Token = "0x4001229")]
			pico_neo
		}

		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E570", Offset = "0x62E570")]
		private sealed class <send_co>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400122A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400122B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400122C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool immediate;

			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public splash <>4__this;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SubmitScore score;

			[Token(Token = "0x400122F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string custom_param_name;

			[Token(Token = "0x4001230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string custom_param_value;

			[Token(Token = "0x4001231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool reload;

			[Token(Token = "0x4001232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private int <timestamp>5__2;

			[Token(Token = "0x4001233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityWebRequest <www>5__3;

			[Token(Token = "0x170001C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010F6")]
				[Address(RVA = "0x17D2950", Offset = "0x17D2950", VA = "0x17D2950", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010F8")]
				[Address(RVA = "0x17D2998", Offset = "0x17D2998", VA = "0x17D2998", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x17D184C", Offset = "0x17D184C", VA = "0x17D184C")]
			[DebuggerHidden]
			public <send_co>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x17D1878", Offset = "0x17D1878", VA = "0x17D1878", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x17D1948", Offset = "0x17D1948", VA = "0x17D1948", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x17D1894", Offset = "0x17D1894", VA = "0x17D1894")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x17D2958", Offset = "0x17D2958", VA = "0x17D2958", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E580", Offset = "0x62E580")]
		private sealed class <exit_co>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public splash <>4__this;

			[Token(Token = "0x4001237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4001238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <pass>5__3;

			[Token(Token = "0x170001C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010FC")]
				[Address(RVA = "0xB52C48", Offset = "0xB52C48", VA = "0xB52C48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010FE")]
				[Address(RVA = "0xB52C90", Offset = "0xB52C90", VA = "0xB52C90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xB52920", Offset = "0xB52920", VA = "0xB52920")]
			[DebuggerHidden]
			public <exit_co>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x60010FA")]
			[Address(RVA = "0xB5294C", Offset = "0xB5294C", VA = "0xB5294C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010FB")]
			[Address(RVA = "0xB52950", Offset = "0xB52950", VA = "0xB52950", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010FD")]
			[Address(RVA = "0xB52C50", Offset = "0xB52C50", VA = "0xB52C50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E590", Offset = "0x62E590")]
		private sealed class <load_level_co>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400123A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400123B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string levelname;

			[Token(Token = "0x400123C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public splash <>4__this;

			[Token(Token = "0x400123D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string loadtext;

			[Token(Token = "0x400123E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <start>5__2;

			[Token(Token = "0x400123F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <fake>5__3;

			[Token(Token = "0x4001240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <duration_factor>5__4;

			[Token(Token = "0x4001241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <duration>5__5;

			[Token(Token = "0x4001242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <pass>5__6;

			[Token(Token = "0x4001243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <vr_time>5__7;

			[Token(Token = "0x4001244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <vr_timeout>5__8;

			[Token(Token = "0x4001245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private AsyncOperation <scene>5__9;

			[Token(Token = "0x170001C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001102")]
				[Address(RVA = "0xB53B58", Offset = "0xB53B58", VA = "0xB53B58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001104")]
				[Address(RVA = "0xB53BA0", Offset = "0xB53BA0", VA = "0xB53BA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010FF")]
			[Address(RVA = "0xB52C98", Offset = "0xB52C98", VA = "0xB52C98")]
			[DebuggerHidden]
			public <load_level_co>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6001100")]
			[Address(RVA = "0xB52CC4", Offset = "0xB52CC4", VA = "0xB52CC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001101")]
			[Address(RVA = "0xB52CC8", Offset = "0xB52CC8", VA = "0xB52CC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001103")]
			[Address(RVA = "0xB53B60", Offset = "0xB53B60", VA = "0xB53B60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool debugging;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static stores store;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string multiplayer_version;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string oculus_rift_app_id;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string oculus_quest_app_id;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string piconeo_app_id;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string webservice;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string mpservice;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int timestampsync;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static bool level_ready;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static splash instance;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform cam;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private player last_player;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string last_level;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool on_load;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform target;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool first_load;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static bool multiplayer_level;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string multiplayer_password;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string multiplayer_region;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static bool multiplayer_takeover;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static mpAvatar multiplayer_avatar;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent send_callback;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CanvasGroup canvas;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CanvasGroup canvas2;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshProUGUI text_loading;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextMeshProUGUI text_error;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextMeshProUGUI text_anykey;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool waitforkey;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine load_level_routine;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool onsend;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool store_loaded;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool _focus;

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xC28C88", Offset = "0xC28C88", VA = "0xC28C88")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xC29020", Offset = "0xC29020", VA = "0xC29020")]
		public void set_error(string str)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xC291EC", Offset = "0xC291EC", VA = "0xC291EC")]
		private void update_error()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xC29520", Offset = "0xC29520", VA = "0xC29520")]
		public static string cachepath()
		{
			return null;
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xC295F8", Offset = "0xC295F8", VA = "0xC295F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xC1C6E4", Offset = "0xC1C6E4", VA = "0xC1C6E4")]
		public void send(bool immediate, bool reload = false, [Optional] SubmitScore score, [Optional] string custom_param_name, [Optional] string custom_param_value)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xC296C0", Offset = "0xC296C0", VA = "0xC296C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63FDD8", Offset = "0x63FDD8")]
		private IEnumerator send_co(bool immediate, bool reload, [Optional] SubmitScore score, [Optional] string custom_param_name, [Optional] string custom_param_value)
		{
			return null;
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xC297A4", Offset = "0xC297A4", VA = "0xC297A4")]
		private void load_store()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xC29898", Offset = "0xC29898", VA = "0xC29898")]
		private void load_store_oculus_rift()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xC29E90", Offset = "0xC29E90", VA = "0xC29E90")]
		private void load_store_oculus_rift_callback(Message msg)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xC29A60", Offset = "0xC29A60", VA = "0xC29A60")]
		private void load_store_applab()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xC29F68", Offset = "0xC29F68", VA = "0xC29F68")]
		private void load_store_applab_callback(Message msg)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xC29C28", Offset = "0xC29C28", VA = "0xC29C28")]
		private void load_store_piconeo()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xC2A040", Offset = "0xC2A040", VA = "0xC2A040")]
		private void load_store_piconeo_recenter(bool success)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xC2A170", Offset = "0xC2A170", VA = "0xC2A170")]
		private void update_store()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xC2A26C", Offset = "0xC2A26C", VA = "0xC2A26C")]
		private void update_store_oculus_rift()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xC2A3EC", Offset = "0xC2A3EC", VA = "0xC2A3EC")]
		private void update_store_applab()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xC2A56C", Offset = "0xC2A56C", VA = "0xC2A56C")]
		private void focus(bool state)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xC28E04", Offset = "0xC28E04", VA = "0xC28E04")]
		private void update_canvas(bool lerp)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xC2A79C", Offset = "0xC2A79C", VA = "0xC2A79C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xC2A7CC", Offset = "0xC2A7CC", VA = "0xC2A7CC")]
		public void exit()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xC2A7F8", Offset = "0xC2A7F8", VA = "0xC2A7F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63FE40", Offset = "0x63FE40")]
		private IEnumerator exit_co()
		{
			return null;
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xC2A878", Offset = "0xC2A878", VA = "0xC2A878")]
		private void disable_pause()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xC292CC", Offset = "0xC292CC", VA = "0xC292CC")]
		public void load_level(string levelname, [Optional] string loadtext)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xC2A8F8", Offset = "0xC2A8F8", VA = "0xC2A8F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63FEA8", Offset = "0x63FEA8")]
		private IEnumerator load_level_co(string levelname, string loadtext)
		{
			return null;
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xC2A9A8", Offset = "0xC2A9A8", VA = "0xC2A9A8")]
		public void set_player(player player)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xC2AB14", Offset = "0xC2AB14", VA = "0xC2AB14")]
		public void player_recenter(player player)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xC2ABAC", Offset = "0xC2ABAC", VA = "0xC2ABAC")]
		public splash()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AE")]
	public class RequestData
	{
		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyValue[] props;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyValue[] prefs;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubmitScore score;

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xC6BDEC", Offset = "0xC6BDEC", VA = "0xC6BDEC")]
		public RequestData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AF")]
	public class ResponseData
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyValue[] prefs;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ResponseCacheData data;

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xC6C18C", Offset = "0xC6C18C", VA = "0xC6C18C")]
		public ResponseData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B0")]
	public class KeyValue
	{
		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string value;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string type;

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x8F7B58", Offset = "0x8F7B58", VA = "0x8F7B58")]
		public KeyValue(string key, string value, string type = "string")
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B1")]
	public class ResponseCacheData
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoardData board1;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoardData board2;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoardData board9;

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xC6C184", Offset = "0xC6C184", VA = "0xC6C184")]
		public ResponseCacheData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B2")]
	public class BoardData
	{
		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string title;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string subtitle;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string column;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string link;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string url;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoardRow[] rows;

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xCC831C", Offset = "0xCC831C", VA = "0xCC831C")]
		public BoardData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B3")]
	public class BoardRow
	{
		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int no;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int val;

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xCC83C0", Offset = "0xCC83C0", VA = "0xCC83C0")]
		public BoardRow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B4")]
	public class SubmitScore
	{
		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string level;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string team;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int points;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int kills;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int waves;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int seconds;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string token;

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xC76148", Offset = "0xC76148", VA = "0xC76148")]
		public SubmitScore()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B5")]
	public class NetworkServer
	{
		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string code;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ping;

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x12E6FE8", Offset = "0x12E6FE8", VA = "0x12E6FE8")]
		public NetworkServer(string code, int ping)
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class teleport : MonoBehaviour
	{
		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string zone;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool walkable;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool moveable;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool attached;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 last_pos;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lastframe;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer rend;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Collider col;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool moving;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float moveSpeed;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform MoveToOnAttachedContainer;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform MoveToOnAttached;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool RestoreOnDetach;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 RestorePosition;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Quaternion RestoreRotation;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public teleport_event on_arrived;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool on_arrived_once;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool is_arrived;

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xC2BD04", Offset = "0xC2BD04", VA = "0xC2BD04")]
		private void Awake()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xC2BE14", Offset = "0xC2BE14", VA = "0xC2BE14")]
		private void Update()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xC2BEBC", Offset = "0xC2BEBC", VA = "0xC2BEBC")]
		public void arrived()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xC2BF38", Offset = "0xC2BF38", VA = "0xC2BF38")]
		public Vector3 ClosestPoint(Vector3 PlayerPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xC2C014", Offset = "0xC2C014", VA = "0xC2C014")]
		public float Distance(Vector3 PlayerPoint)
		{
			return default(float);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xC2C104", Offset = "0xC2C104", VA = "0xC2C104")]
		public void show(bool state = true)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xC2C150", Offset = "0xC2C150", VA = "0xC2C150")]
		public bool can_locomotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xC2C1DC", Offset = "0xC2C1DC", VA = "0xC2C1DC")]
		public bool can_teleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xC2C280", Offset = "0xC2C280", VA = "0xC2C280")]
		public void UpdatePlayerPosition()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xC2C484", Offset = "0xC2C484", VA = "0xC2C484")]
		public void UpdateMove()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xC2C704", Offset = "0xC2C704", VA = "0xC2C704")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xC2C728", Offset = "0xC2C728", VA = "0xC2C728")]
		private void ToggleVisible()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xC2C9DC", Offset = "0xC2C9DC", VA = "0xC2C9DC")]
		private void SnapToFloor()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xC2CBB8", Offset = "0xC2CBB8", VA = "0xC2CBB8")]
		private void TestDistance()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xC2CE08", Offset = "0xC2CE08", VA = "0xC2CE08")]
		public teleport()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class teleport_blocker : MonoBehaviour
	{
		[Token(Token = "0x600111C")]
		[Address(RVA = "0xC2CEBC", Offset = "0xC2CEBC", VA = "0xC2CEBC")]
		public teleport_blocker()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	[SelectionBase]
	public class tool : toolbase
	{
		[Token(Token = "0x20002B9")]
		public enum dropmodes
		{
			[Token(Token = "0x40012A7")]
			none,
			[Token(Token = "0x40012A8")]
			restore,
			[Token(Token = "0x40012A9")]
			destroy
		}

		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E5B0", Offset = "0x62E5B0")]
		private sealed class <release_sticked_hand>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool <>4__this;

			[Token(Token = "0x40012AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public hand hand;

			[Token(Token = "0x40012AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x40012AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <from_pos>5__2;

			[Token(Token = "0x40012B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Quaternion <from_rot>5__3;

			[Token(Token = "0x40012B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <start>5__4;

			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <end>5__5;

			[Token(Token = "0x170001C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600113B")]
				[Address(RVA = "0x17D2F58", Offset = "0x17D2F58", VA = "0x17D2F58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600113D")]
				[Address(RVA = "0x17D2FA0", Offset = "0x17D2FA0", VA = "0x17D2FA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001138")]
			[Address(RVA = "0x17D2CF4", Offset = "0x17D2CF4", VA = "0x17D2CF4")]
			[DebuggerHidden]
			public <release_sticked_hand>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6001139")]
			[Address(RVA = "0x17D2D20", Offset = "0x17D2D20", VA = "0x17D2D20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600113A")]
			[Address(RVA = "0x17D2D24", Offset = "0x17D2D24", VA = "0x17D2D24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600113C")]
			[Address(RVA = "0x17D2F60", Offset = "0x17D2F60", VA = "0x17D2F60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E5C0", Offset = "0x62E5C0")]
		private sealed class <move_tool_to_hand>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool <>4__this;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <from_pos>5__2;

			[Token(Token = "0x40012B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Quaternion <from_rot>5__3;

			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <start>5__4;

			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <end>5__5;

			[Token(Token = "0x170001CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001141")]
				[Address(RVA = "0x17D2CA4", Offset = "0x17D2CA4", VA = "0x17D2CA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001143")]
				[Address(RVA = "0x17D2CEC", Offset = "0x17D2CEC", VA = "0x17D2CEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600113E")]
			[Address(RVA = "0x17D29A0", Offset = "0x17D29A0", VA = "0x17D29A0")]
			[DebuggerHidden]
			public <move_tool_to_hand>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x600113F")]
			[Address(RVA = "0x17D29CC", Offset = "0x17D29CC", VA = "0x17D29CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001140")]
			[Address(RVA = "0x17D29D0", Offset = "0x17D29D0", VA = "0x17D29D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001142")]
			[Address(RVA = "0x17D2CAC", Offset = "0x17D2CAC", VA = "0x17D2CAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _init;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string zone;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float last_unselect;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string handpose;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool active;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool update_hand_late;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		public bool auto_select;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float auto_select_last;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public dropmodes dropmode;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Collider droparea;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool hide_hand_with_tool;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float dropped_seconds;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float touch_range_short;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float touch_range_long;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool touch_only_on_collide;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool enable_distance_collide;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float break_range;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float stick_speed;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool disable_rotation;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float stick_start_time;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool fix_stick_left_hand;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform pivot;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Outline outline;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool first_grab;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool outline_until_first_grab;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float outline_width_dir;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float outline_width;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Transform parent_before_grab;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool restore_parent;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		public bool unparent_on_grab;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float climb_angle_x;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool climb_angle_flip;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int last_outline_frame;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine move_tool_to_hand_routine;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Vector3 org_pos;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Quaternion org_rot;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private bool org_isKinematic;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Transform parent_to;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool taken;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		private bool dropped;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float dropped_time;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private hand release_sticked_hand_progress;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected bool moving_to_hand;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float weight_range;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float weight_factor;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float lastTimeScale;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<Collider> all_colliders;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float restore_collision_with_player_time;

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xC2D160", Offset = "0xC2D160", VA = "0xC2D160", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xC2D208", Offset = "0xC2D208", VA = "0xC2D208", Slot = "5")]
		public override void init()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xC2D340", Offset = "0xC2D340", VA = "0xC2D340", Slot = "6")]
		public override void Start()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xC2D344", Offset = "0xC2D344", VA = "0xC2D344")]
		private void update_outline()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xC2D4E4", Offset = "0xC2D4E4", VA = "0xC2D4E4")]
		private void update_mount_outline()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xC2D698", Offset = "0xC2D698", VA = "0xC2D698", Slot = "19")]
		public override void update_owner()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xC2D794", Offset = "0xC2D794", VA = "0xC2D794", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xC2D81C", Offset = "0xC2D81C", VA = "0xC2D81C")]
		private void UpdateUnscaledTime()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xC2DB80", Offset = "0xC2DB80", VA = "0xC2DB80")]
		private void FixedUpdateUnscaledTime()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xC2DE30", Offset = "0xC2DE30", VA = "0xC2DE30", Slot = "8")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xC2DE34", Offset = "0xC2DE34", VA = "0xC2DE34", Slot = "9")]
		public override void LateUpdate()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xC2E038", Offset = "0xC2E038", VA = "0xC2E038")]
		public float get_weight()
		{
			return default(float);
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xC2E054", Offset = "0xC2E054", VA = "0xC2E054", Slot = "10")]
		public override bool scan(hand hand, float distance, bool hand_collide, bool distance_collide)
		{
			return default(bool);
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xC2E1C0", Offset = "0xC2E1C0", VA = "0xC2E1C0", Slot = "11")]
		public override void select(hand hand)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xC2E6A0", Offset = "0xC2E6A0", VA = "0xC2E6A0", Slot = "12")]
		public override void unselect(bool breaked = false, bool break_immediate = false)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xC2EE50", Offset = "0xC2EE50", VA = "0xC2EE50", Slot = "13")]
		public override void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xC2F74C", Offset = "0xC2F74C", VA = "0xC2F74C", Slot = "14")]
		public override void reset_values()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xC2F874", Offset = "0xC2F874", VA = "0xC2F874", Slot = "15")]
		public override void onselect(hand hand)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xC2F878", Offset = "0xC2F878", VA = "0xC2F878", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xC2D928", Offset = "0xC2D928", VA = "0xC2D928")]
		private void dropped_logic()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xC2F87C", Offset = "0xC2F87C", VA = "0xC2F87C", Slot = "17")]
		public override void remove()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xC2F918", Offset = "0xC2F918", VA = "0xC2F918", Slot = "18")]
		public override void restore()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xC2EDAC", Offset = "0xC2EDAC", VA = "0xC2EDAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x640000", Offset = "0x640000")]
		protected IEnumerator release_sticked_hand(hand hand, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xC2E610", Offset = "0xC2E610", VA = "0xC2E610")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x640068", Offset = "0x640068")]
		protected IEnumerator move_tool_to_hand(float duration)
		{
			return null;
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xC2EBD0", Offset = "0xC2EBD0", VA = "0xC2EBD0")]
		private void disable_collisions_with_player()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xC2DCAC", Offset = "0xC2DCAC", VA = "0xC2DCAC")]
		private void restore_collision_with_player()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xC2FA7C", Offset = "0xC2FA7C", VA = "0xC2FA7C")]
		public tool()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class toolbase : MonoBehaviour
	{
		[Token(Token = "0x20002BD")]
		public enum behaviors
		{
			[Token(Token = "0x40012CC")]
			free,
			[Token(Token = "0x40012CD")]
			stick,
			[Token(Token = "0x40012CE")]
			climb
		}

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody rb;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool takeover;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool ismine;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[HideInInspector]
		public bool inother;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[HideInInspector]
		public bool canselect;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float canselect_delta;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public behaviors behavior;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool late_update;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public hand holder;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool can_mount_to_mouth;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public mount mount;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public mount mount_trigger;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool pass_hit_to_player;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public tool_event on_preselect;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public tool_event on_select;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public tool_event on_unselect;

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x1141E94", Offset = "0x1141E94", VA = "0x1141E94", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x1141EA4", Offset = "0x1141EA4", VA = "0x1141EA4", Slot = "5")]
		public virtual void init()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x1141EA8", Offset = "0x1141EA8", VA = "0x1141EA8", Slot = "6")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1141EAC", Offset = "0x1141EAC", VA = "0x1141EAC", Slot = "7")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x1141EB0", Offset = "0x1141EB0", VA = "0x1141EB0", Slot = "8")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x1141EB4", Offset = "0x1141EB4", VA = "0x1141EB4", Slot = "9")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x1141EB8", Offset = "0x1141EB8", VA = "0x1141EB8", Slot = "10")]
		public virtual bool scan(hand hand, float distance, bool hand_collide, bool distance_collide)
		{
			return default(bool);
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x1141EC0", Offset = "0x1141EC0", VA = "0x1141EC0", Slot = "11")]
		public virtual void select(hand hand)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x1141EC4", Offset = "0x1141EC4", VA = "0x1141EC4", Slot = "12")]
		public virtual void unselect(bool breaked = false, bool break_immediate = false)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x1141EC8", Offset = "0x1141EC8", VA = "0x1141EC8", Slot = "13")]
		public virtual void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x1141ECC", Offset = "0x1141ECC", VA = "0x1141ECC", Slot = "14")]
		public virtual void reset_values()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x1141ED0", Offset = "0x1141ED0", VA = "0x1141ED0", Slot = "15")]
		public virtual void onselect(hand hand)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x1141ED4", Offset = "0x1141ED4", VA = "0x1141ED4", Slot = "16")]
		public virtual void onunselect(hand hand)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x1141ED8", Offset = "0x1141ED8", VA = "0x1141ED8", Slot = "17")]
		public virtual void remove()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x1141EDC", Offset = "0x1141EDC", VA = "0x1141EDC", Slot = "18")]
		public virtual void restore()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x1141EE0", Offset = "0x1141EE0", VA = "0x1141EE0", Slot = "19")]
		public virtual void update_owner()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x1141EE4", Offset = "0x1141EE4", VA = "0x1141EE4")]
		public toolbase()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class tool_firearm : tool
	{
		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E5D0", Offset = "0x62E5D0")]
		private sealed class <spin>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool_firearm <>4__this;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <from>5__2;

			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <to>5__3;

			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__4;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <duration>5__5;

			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool <spin_again>5__6;

			[Token(Token = "0x170001CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001178")]
				[Address(RVA = "0x17D328C", Offset = "0x17D328C", VA = "0x17D328C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600117A")]
				[Address(RVA = "0x17D32D4", Offset = "0x17D32D4", VA = "0x17D32D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001175")]
			[Address(RVA = "0x17D2FA8", Offset = "0x17D2FA8", VA = "0x17D2FA8")]
			[DebuggerHidden]
			public <spin>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001176")]
			[Address(RVA = "0x17D2FD4", Offset = "0x17D2FD4", VA = "0x17D2FD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001177")]
			[Address(RVA = "0x17D2FD8", Offset = "0x17D2FD8", VA = "0x17D2FD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001179")]
			[Address(RVA = "0x17D3294", Offset = "0x17D3294", VA = "0x17D3294", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public string handpose_shoot;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool can_hit_player;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Transform wrap;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public int damage;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public float impact_radius;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public float impact_force;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public int clip;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public int ammo;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public bool first_reload;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		public bool first_shoot;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public int bullets;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public float reload;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool automate;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float shoots_margin;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Text ui_clip;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public GameObject muzzle_effect;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public float muzzle_effect_seconds;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public float muzzle_effect_end;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Transform muzzle;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public bool show_ray;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		public bool show_ray_indication;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public LineRenderer ray_effect;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private bool hit;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private RaycastHit ray_hit;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Rigidbody last_rb_hit;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float ray_distance;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public sound shoot_sound;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public sound reload_sound;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public sound empty_sound;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public Transform trigger_model;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Vector3 trigger_model_from_pos;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private Quaternion trigger_model_from_rot;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public Transform trigger_model_to;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public Transform reload_model;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Vector3 reload_model_from_pos;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private Quaternion reload_model_from_rot;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public Transform reload_model_to;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public GameObject explode_effect;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public tool_firearm_event on_reload_button;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public tool_firearm_event on_shoot_button;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public tool_firearm_event on_reload;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public tool_firearm_event on_shoot;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public tool_firearm_event on_empty;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public tool_firearm_event on_spin;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public tool_firearm_shoot_event on_shoot_visual;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public tool_firearm_explode_event on_explode_visual;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private bool reloading;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private float reload_time;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private float shoot_time;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Rigidbody hover_rb;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public toolbase second_hand;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public bool second_hand_rotate;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private float second_hand_last;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private float last_shoot_sound;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private bool need_trig_clear;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private int recoil_direction;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		public float recoil_angle;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public float recoil_speed;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public float recoil_hand;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public bool shoot_spread;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private List<Vector3> shoot_spread_directions;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private float shoot_spread_angle;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private float shoot_spread_radius;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private bool spinning;

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x113ACD8", Offset = "0x113ACD8", VA = "0x113ACD8", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x113B204", Offset = "0x113B204", VA = "0x113B204", Slot = "6")]
		public override void Start()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x113B2E0", Offset = "0x113B2E0", VA = "0x113B2E0", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x113BDB8", Offset = "0x113BDB8", VA = "0x113BDB8", Slot = "8")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x113BFEC", Offset = "0x113BFEC", VA = "0x113BFEC", Slot = "5")]
		public override void init()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x113C0B4", Offset = "0x113C0B4", VA = "0x113C0B4")]
		public void recoil()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x113BDE0", Offset = "0x113BDE0", VA = "0x113BDE0")]
		private void update_recoil()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x113C0C0", Offset = "0x113C0C0", VA = "0x113C0C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x640170", Offset = "0x640170")]
		private IEnumerator spin()
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x113C140", Offset = "0x113C140", VA = "0x113C140", Slot = "15")]
		public override void onselect(hand hand)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x113C228", Offset = "0x113C228", VA = "0x113C228", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x113C310", Offset = "0x113C310", VA = "0x113C310", Slot = "9")]
		public override void LateUpdate()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x113BC34", Offset = "0x113BC34", VA = "0x113BC34")]
		private void update_muzzle()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x113C7B4", Offset = "0x113C7B4", VA = "0x113C7B4", Slot = "13")]
		public override void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x113D244", Offset = "0x113D244", VA = "0x113D244")]
		private bool hover()
		{
			return default(bool);
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x113B318", Offset = "0x113B318", VA = "0x113B318")]
		private void update_ray()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x113D59C", Offset = "0x113D59C", VA = "0x113D59C")]
		private void shoot_shotgun()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x113E1B4", Offset = "0x113E1B4", VA = "0x113E1B4")]
		private void shoot_normal()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x113E900", Offset = "0x113E900", VA = "0x113E900")]
		private void shoot_explode()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x113F28C", Offset = "0x113F28C", VA = "0x113F28C")]
		public void reloadzone()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x113B800", Offset = "0x113B800", VA = "0x113B800")]
		private void reload_progress()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x113D10C", Offset = "0x113D10C", VA = "0x113D10C")]
		private void reload_button()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x113F420", Offset = "0x113F420", VA = "0x113F420")]
		public void spin_start()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x113F290", Offset = "0x113F290", VA = "0x113F290")]
		private void reload_start()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x113F454", Offset = "0x113F454", VA = "0x113F454")]
		public void reload_now()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x113F500", Offset = "0x113F500", VA = "0x113F500")]
		public void empty()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x113F5B4", Offset = "0x113F5B4", VA = "0x113F5B4")]
		private void play_shoot_sound()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x113CCD4", Offset = "0x113CCD4", VA = "0x113CCD4")]
		private void shoot()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x113F688", Offset = "0x113F688", VA = "0x113F688")]
		public void shoot_visual(Vector3 point, Vector3 normal, [Optional] Collider collider)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x113F0F4", Offset = "0x113F0F4", VA = "0x113F0F4")]
		public void explode_visual(Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x113F820", Offset = "0x113F820", VA = "0x113F820")]
		public void sync_shoot_button()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x113F828", Offset = "0x113F828", VA = "0x113F828")]
		public void sync_reload_button()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x113F84C", Offset = "0x113F84C", VA = "0x113F84C")]
		public tool_firearm()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class tool_flashbang : tool
	{
		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E5E0", Offset = "0x62E5E0")]
		private sealed class <explode>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool_flashbang <>4__this;

			[Token(Token = "0x4001327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4001328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <pass>5__3;

			[Token(Token = "0x4001329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <white>5__4;

			[Token(Token = "0x400132A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <vel>5__5;

			[Token(Token = "0x400132B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__6;

			[Token(Token = "0x170001CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001185")]
				[Address(RVA = "0x17D381C", Offset = "0x17D381C", VA = "0x17D381C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001187")]
				[Address(RVA = "0x17D3864", Offset = "0x17D3864", VA = "0x17D3864", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001182")]
			[Address(RVA = "0x17D32DC", Offset = "0x17D32DC", VA = "0x17D32DC")]
			[DebuggerHidden]
			public <explode>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001183")]
			[Address(RVA = "0x17D3308", Offset = "0x17D3308", VA = "0x17D3308", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001184")]
			[Address(RVA = "0x17D330C", Offset = "0x17D330C", VA = "0x17D330C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0x17D3824", Offset = "0x17D3824", VA = "0x17D3824", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool armed;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
		private bool explolded;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public sound sound_arm;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public sound sound_explode;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Transform splint;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public tool_flashbang_event on_explode;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public GameObject model;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Collider main_col;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public float slowmotion_duration;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public float slowmotion_to;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float slowmotion_duration_in;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float slowmotion_duration_out;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public toolbase second_hand;

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x113FA7C", Offset = "0x113FA7C", VA = "0x113FA7C", Slot = "5")]
		public override void init()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x113FB48", Offset = "0x113FB48", VA = "0x113FB48")]
		public void arm()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x113FD24", Offset = "0x113FD24", VA = "0x113FD24", Slot = "13")]
		public override void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x113FD80", Offset = "0x113FD80", VA = "0x113FD80", Slot = "15")]
		public override void onselect(hand hand)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x113FE54", Offset = "0x113FE54", VA = "0x113FE54", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x113FFCC", Offset = "0x113FFCC", VA = "0x113FFCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x640228", Offset = "0x640228")]
		private IEnumerator explode()
		{
			return null;
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x114004C", Offset = "0x114004C", VA = "0x114004C")]
		public tool_flashbang()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class tool_grenade : tool
	{
		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool armed;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
		private bool explolded;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float last_collide;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float explode_time;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public sound sound_arm;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Transform splint;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public tool_grenade_event on_explode;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public GameObject[] explosion_effects;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Collider main_col;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public int damage;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public int player_damage;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float impact_radius;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float impact_force;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public toolbase second_hand;

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x11400B8", Offset = "0x11400B8", VA = "0x11400B8", Slot = "5")]
		public override void init()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x1140184", Offset = "0x1140184", VA = "0x1140184")]
		public void arm()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x1140374", Offset = "0x1140374", VA = "0x1140374", Slot = "13")]
		public override void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x11403D0", Offset = "0x11403D0", VA = "0x11403D0", Slot = "15")]
		public override void onselect(hand hand)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x11404A4", Offset = "0x11404A4", VA = "0x11404A4", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x1140590", Offset = "0x1140590", VA = "0x1140590")]
		private void explolde(Collision collision)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x1140C0C", Offset = "0x1140C0C", VA = "0x1140C0C", Slot = "8")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x1140C60", Offset = "0x1140C60", VA = "0x1140C60")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x1140DAC", Offset = "0x1140DAC", VA = "0x1140DAC")]
		public tool_grenade()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class tool_laptop : tool
	{
		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public TextMeshProUGUI ui_name;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private string strvalue;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int max_length;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public CanvasGroup[] keys_numbers;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public CanvasGroup[] keys_letters;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public CanvasGroup keys_space;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public CanvasGroup keys_backspace;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public CanvasGroup keys_submit;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public CanvasGroup keys_cancel;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float next_press;

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x1140E24", Offset = "0x1140E24", VA = "0x1140E24", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x1140F08", Offset = "0x1140F08", VA = "0x1140F08")]
		private void update_text()
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x1141244", Offset = "0x1141244", VA = "0x1141244")]
		private bool can_add_space()
		{
			return default(bool);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x1141378", Offset = "0x1141378", VA = "0x1141378")]
		private bool can_add_letter()
		{
			return default(bool);
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x11412D8", Offset = "0x11412D8", VA = "0x11412D8")]
		private bool can_add_number()
		{
			return default(bool);
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x1141220", Offset = "0x1141220", VA = "0x1141220")]
		private bool can_backspace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x11411D4", Offset = "0x11411D4", VA = "0x11411D4")]
		private bool can_submit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x11413C8", Offset = "0x11413C8", VA = "0x11413C8")]
		public void add_number(string str)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x1141458", Offset = "0x1141458", VA = "0x1141458")]
		public void add_letter(string str)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x11414E8", Offset = "0x11414E8", VA = "0x11414E8")]
		public void add_space()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x1141594", Offset = "0x1141594", VA = "0x1141594")]
		public void backspace()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x114162C", Offset = "0x114162C", VA = "0x114162C")]
		public void submit()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x1141720", Offset = "0x1141720", VA = "0x1141720")]
		private void hide()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x1141748", Offset = "0x1141748", VA = "0x1141748")]
		public void cancel()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x114174C", Offset = "0x114174C", VA = "0x114174C")]
		public tool_laptop()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class tool_mdeikit : tool
	{
		[Token(Token = "0x20002C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E5F0", Offset = "0x62E5F0")]
		private sealed class <use_co>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool_mdeikit <>4__this;

			[Token(Token = "0x170001D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011AA")]
				[Address(RVA = "0x17D3A3C", Offset = "0x17D3A3C", VA = "0x17D3A3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011AC")]
				[Address(RVA = "0x17D3A84", Offset = "0x17D3A84", VA = "0x17D3A84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x17D386C", Offset = "0x17D386C", VA = "0x17D386C")]
			[DebuggerHidden]
			public <use_co>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x17D3898", Offset = "0x17D3898", VA = "0x17D3898", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x17D389C", Offset = "0x17D389C", VA = "0x17D389C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x17D3A44", Offset = "0x17D3A44", VA = "0x17D3A44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool used;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public sound sound_used;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public GameObject effect;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public MeshRenderer rend;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public int health;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public tool_medikit_event on_explode;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public toolbase second_hand;

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x11417B8", Offset = "0x11417B8", VA = "0x11417B8", Slot = "5")]
		public override void init()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x1141884", Offset = "0x1141884", VA = "0x1141884")]
		public void use()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x1141A38", Offset = "0x1141A38", VA = "0x1141A38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6402E0", Offset = "0x6402E0")]
		private IEnumerator use_co()
		{
			return null;
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x1141AB8", Offset = "0x1141AB8", VA = "0x1141AB8", Slot = "13")]
		public override void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x1141B14", Offset = "0x1141B14", VA = "0x1141B14", Slot = "15")]
		public override void onselect(hand hand)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x1141BE8", Offset = "0x1141BE8", VA = "0x1141BE8", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x1141CBC", Offset = "0x1141CBC", VA = "0x1141CBC")]
		public tool_mdeikit()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class tool_shield : tool
	{
		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public TextMeshProUGUI health;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public TextMeshProUGUI progress;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public TextMeshProUGUI accuracy;

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x1141D20", Offset = "0x1141D20", VA = "0x1141D20", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x1141E8C", Offset = "0x1141E8C", VA = "0x1141E8C")]
		public tool_shield()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class vr
	{
		[Token(Token = "0x20002C8")]
		public enum sdks
		{
			[Token(Token = "0x400139E")]
			none,
			[Token(Token = "0x400139F")]
			piconeo,
			[Token(Token = "0x40013A0")]
			oculus,
			[Token(Token = "0x40013A1")]
			openxr
		}

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static sdks sdk;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool present;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int present_frame;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static bool msaa_fixed;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int msaa_fix_frame;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static bool focus;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public static bool ready;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static InputDevice head;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static InputDevice hand_right;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static InputDevice hand_left;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static float position_diff;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static Vector3 position_prev;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Vector3 position;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public static Quaternion rotation;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static vr_hand right;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static vr_hand left;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static Vector3 right_prev_pos;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public static Vector3 left_prev_pos;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static float right_last_pos;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public static float left_last_pos;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static Vector3 right_pos;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public static Quaternion right_rot;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public static Vector3 left_pos;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static Quaternion left_rot;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static Vector3 right_velocity;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public static Vector3 right_angular;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public static Vector3 left_velocity;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public static Vector3 left_angular;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public static Vector2 right_stick_axis;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public static Vector2 left_stick_axis;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public static bool menu;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		public static bool menu_press;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		public static bool menu_release;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
		public static bool right_trig;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public static bool right_trig_press;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
		public static bool right_trig_release;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
		public static bool left_trig;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x127")]
		public static bool left_trig_press;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public static bool left_trig_release;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public static bool right_grip;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		public static bool right_grip_press;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
		public static bool right_grip_release;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public static bool left_grip;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		public static bool left_grip_press;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
		public static bool left_grip_release;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12F")]
		public static bool left_stick;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public static bool left_stick_press;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		public static bool left_stick_release;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
		public static bool right_stick;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
		public static bool right_stick_press;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public static bool right_stick_release;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		public static bool a;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
		public static bool a_press;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x137")]
		public static bool a_release;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public static bool b;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public static bool b_press;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		public static bool b_release;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		public static bool x;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public static bool x_press;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		public static bool x_release;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
		public static bool y;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13F")]
		public static bool y_press;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public static bool y_release;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		public static bool wear;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		public static bool wear_put_on;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
		public static bool wear_take_off;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public static bool recentered;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public static float last_recentered;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public static float org_fixedDeltaTime;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public static float fixedDeltaTime;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public static string model;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public static int controller_rotation_base;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public static int controller_rotation_offset;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static bool steam_input_activated;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private static TextMeshProUGUI ui_debug;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private static List<string> ui_debug_lines;

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x7D0354", Offset = "0x7D0354", VA = "0x7D0354")]
		public static void console([Optional] string str)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x7D05CC", Offset = "0x7D05CC", VA = "0x7D05CC")]
		public static bool init()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x7D1A10", Offset = "0x7D1A10", VA = "0x7D1A10")]
		public static float get_device_target_fps()
		{
			return default(float);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x7D1A18", Offset = "0x7D1A18", VA = "0x7D1A18")]
		public static TrackingOriginModeFlags GetTrackingOriginMode()
		{
			return default(TrackingOriginModeFlags);
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x7D14F4", Offset = "0x7D14F4", VA = "0x7D14F4")]
		private static void update_devices()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x7D1AC4", Offset = "0x7D1AC4", VA = "0x7D1AC4")]
		public static bool start()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x7D1C0C", Offset = "0x7D1C0C", VA = "0x7D1C0C")]
		public static bool update()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x7D2320", Offset = "0x7D2320", VA = "0x7D2320")]
		public static void update_xr()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x7D2E48", Offset = "0x7D2E48", VA = "0x7D2E48")]
		public static void update_openxr()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x7D2190", Offset = "0x7D2190", VA = "0x7D2190")]
		private static bool recenter_detected()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x7D2E4C", Offset = "0x7D2E4C", VA = "0x7D2E4C")]
		public static bool recenter()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x7D2F24", Offset = "0x7D2F24", VA = "0x7D2F24")]
		public static bool anykeypress()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x7D30D4", Offset = "0x7D30D4", VA = "0x7D30D4")]
		public static string info()
		{
			return null;
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x7D3118", Offset = "0x7D3118", VA = "0x7D3118")]
		public static void alpha(float t)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x7D3120", Offset = "0x7D3120", VA = "0x7D3120")]
		public static void vibrate(bool left, float duration = 1f, float amplitude = 0.5f, uint channel = 0u)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x7D3214", Offset = "0x7D3214", VA = "0x7D3214")]
		public vr()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class vr_hand
	{
		[Token(Token = "0x170001D2")]
		public virtual Vector3 pos
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x7D3668", Offset = "0x7D3668", VA = "0x7D3668", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001D3")]
		public virtual Quaternion rot
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x7D3670", Offset = "0x7D3670", VA = "0x7D3670", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170001D4")]
		public virtual Vector3 velocity
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x7D3678", Offset = "0x7D3678", VA = "0x7D3678", Slot = "6")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001D5")]
		public virtual Vector3 angular
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x7D3680", Offset = "0x7D3680", VA = "0x7D3680", Slot = "7")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001D6")]
		public virtual bool trig
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x7D3688", Offset = "0x7D3688", VA = "0x7D3688", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D7")]
		public virtual bool trig_press
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x7D3690", Offset = "0x7D3690", VA = "0x7D3690", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D8")]
		public virtual bool trig_release
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x7D3698", Offset = "0x7D3698", VA = "0x7D3698", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D9")]
		public virtual bool grip
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x7D36A0", Offset = "0x7D36A0", VA = "0x7D36A0", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DA")]
		public virtual bool grip_press
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x7D36A8", Offset = "0x7D36A8", VA = "0x7D36A8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DB")]
		public virtual bool grip_release
		{
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x7D36B0", Offset = "0x7D36B0", VA = "0x7D36B0", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DC")]
		public virtual Vector2 stick_axis
		{
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0x7D36B8", Offset = "0x7D36B8", VA = "0x7D36B8", Slot = "14")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x7D36C0", Offset = "0x7D36C0", VA = "0x7D36C0", Slot = "15")]
		public virtual void vibrate(float duration = 1f, float amplitude = 0.5f, uint channel = 0u)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x7D36C4", Offset = "0x7D36C4", VA = "0x7D36C4")]
		public vr_hand()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class vr_hand_right : vr_hand
	{
		[Token(Token = "0x170001DD")]
		public override Vector3 pos
		{
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0x7D3BB4", Offset = "0x7D3BB4", VA = "0x7D3BB4", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001DE")]
		public override Quaternion rot
		{
			[Token(Token = "0x60011CE")]
			[Address(RVA = "0x7D3C1C", Offset = "0x7D3C1C", VA = "0x7D3C1C", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170001DF")]
		public override Vector3 velocity
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x7D3C84", Offset = "0x7D3C84", VA = "0x7D3C84", Slot = "6")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001E0")]
		public override Vector3 angular
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x7D3CEC", Offset = "0x7D3CEC", VA = "0x7D3CEC", Slot = "7")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001E1")]
		public override bool trig
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x7D3D54", Offset = "0x7D3D54", VA = "0x7D3D54", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E2")]
		public override bool trig_press
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x7D3DB8", Offset = "0x7D3DB8", VA = "0x7D3DB8", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E3")]
		public override bool trig_release
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x7D3E1C", Offset = "0x7D3E1C", VA = "0x7D3E1C", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E4")]
		public override bool grip
		{
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x7D3E80", Offset = "0x7D3E80", VA = "0x7D3E80", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E5")]
		public override bool grip_press
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x7D3EE4", Offset = "0x7D3EE4", VA = "0x7D3EE4", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E6")]
		public override bool grip_release
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x7D3F48", Offset = "0x7D3F48", VA = "0x7D3F48", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E7")]
		public override Vector2 stick_axis
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x7D3FAC", Offset = "0x7D3FAC", VA = "0x7D3FAC", Slot = "14")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x7D4014", Offset = "0x7D4014", VA = "0x7D4014", Slot = "15")]
		public override void vibrate(float duration = 1f, float amplitude = 0.5f, uint channel = 0u)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x7D3658", Offset = "0x7D3658", VA = "0x7D3658")]
		public vr_hand_right()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class vr_hand_left : vr_hand
	{
		[Token(Token = "0x170001E8")]
		public override Vector3 pos
		{
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x7D36CC", Offset = "0x7D36CC", VA = "0x7D36CC", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001E9")]
		public override Quaternion rot
		{
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x7D3734", Offset = "0x7D3734", VA = "0x7D3734", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170001EA")]
		public override Vector3 velocity
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x7D379C", Offset = "0x7D379C", VA = "0x7D379C", Slot = "6")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001EB")]
		public override Vector3 angular
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x7D3804", Offset = "0x7D3804", VA = "0x7D3804", Slot = "7")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001EC")]
		public override bool trig
		{
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x7D3870", Offset = "0x7D3870", VA = "0x7D3870", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001ED")]
		public override bool trig_press
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x7D38D4", Offset = "0x7D38D4", VA = "0x7D38D4", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EE")]
		public override bool trig_release
		{
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x7D3938", Offset = "0x7D3938", VA = "0x7D3938", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EF")]
		public override bool grip
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x7D399C", Offset = "0x7D399C", VA = "0x7D399C", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F0")]
		public override bool grip_press
		{
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x7D3A00", Offset = "0x7D3A00", VA = "0x7D3A00", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F1")]
		public override bool grip_release
		{
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x7D3A64", Offset = "0x7D3A64", VA = "0x7D3A64", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F2")]
		public override Vector2 stick_axis
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x7D3AC8", Offset = "0x7D3AC8", VA = "0x7D3AC8", Slot = "14")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x7D3B30", Offset = "0x7D3B30", VA = "0x7D3B30", Slot = "15")]
		public override void vibrate(float duration = 1f, float amplitude = 0.5f, uint channel = 0u)
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x7D3660", Offset = "0x7D3660", VA = "0x7D3660")]
		public vr_hand_left()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class release_test : MonoBehaviour
	{
		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E600", Offset = "0x62E600")]
		private sealed class <quotes_co>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public release_test <>4__this;

			[Token(Token = "0x40013AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <pass>5__2;

			[Token(Token = "0x40013B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <duration>5__3;

			[Token(Token = "0x40013B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <sidequest>5__4;

			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CanvasGroup[] <>7__wrap4;

			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap5;

			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CanvasGroup <go>5__7;

			[Token(Token = "0x170001F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011F3")]
				[Address(RVA = "0xB52074", Offset = "0xB52074", VA = "0xB52074", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011F5")]
				[Address(RVA = "0xB520BC", Offset = "0xB520BC", VA = "0xB520BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011F0")]
			[Address(RVA = "0xB51BFC", Offset = "0xB51BFC", VA = "0xB51BFC")]
			[DebuggerHidden]
			public <quotes_co>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60011F1")]
			[Address(RVA = "0xB51C28", Offset = "0xB51C28", VA = "0xB51C28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xB51C2C", Offset = "0xB51C2C", VA = "0xB51C2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011F4")]
			[Address(RVA = "0xB5207C", Offset = "0xB5207C", VA = "0xB5207C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E610", Offset = "0x62E610")]
		private sealed class <npc_joe>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public npc npc;

			[Token(Token = "0x170001F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011F9")]
				[Address(RVA = "0xB5167C", Offset = "0xB5167C", VA = "0xB5167C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011FB")]
				[Address(RVA = "0xB516C4", Offset = "0xB516C4", VA = "0xB516C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xB51588", Offset = "0xB51588", VA = "0xB51588")]
			[DebuggerHidden]
			public <npc_joe>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60011F7")]
			[Address(RVA = "0xB515B4", Offset = "0xB515B4", VA = "0xB515B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011F8")]
			[Address(RVA = "0xB515B8", Offset = "0xB515B8", VA = "0xB515B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011FA")]
			[Address(RVA = "0xB51684", Offset = "0xB51684", VA = "0xB51684", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E620", Offset = "0x62E620")]
		private sealed class <npc_run>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public npc npc;

			[Token(Token = "0x170001F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011FF")]
				[Address(RVA = "0xB51BAC", Offset = "0xB51BAC", VA = "0xB51BAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001201")]
				[Address(RVA = "0xB51BF4", Offset = "0xB51BF4", VA = "0xB51BF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011FC")]
			[Address(RVA = "0xB51990", Offset = "0xB51990", VA = "0xB51990")]
			[DebuggerHidden]
			public <npc_run>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60011FD")]
			[Address(RVA = "0xB519BC", Offset = "0xB519BC", VA = "0xB519BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011FE")]
			[Address(RVA = "0xB519C0", Offset = "0xB519C0", VA = "0xB519C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001200")]
			[Address(RVA = "0xB51BB4", Offset = "0xB51BB4", VA = "0xB51BB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E630", Offset = "0x62E630")]
		private sealed class <npc_land>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public npc npc;

			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <duration>5__2;

			[Token(Token = "0x40013C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <pass>5__3;

			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <from>5__4;

			[Token(Token = "0x40013C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <to>5__5;

			[Token(Token = "0x170001F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001205")]
				[Address(RVA = "0xB51940", Offset = "0xB51940", VA = "0xB51940", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001207")]
				[Address(RVA = "0xB51988", Offset = "0xB51988", VA = "0xB51988", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001202")]
			[Address(RVA = "0xB516CC", Offset = "0xB516CC", VA = "0xB516CC")]
			[DebuggerHidden]
			public <npc_land>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001203")]
			[Address(RVA = "0xB516F8", Offset = "0xB516F8", VA = "0xB516F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001204")]
			[Address(RVA = "0xB516FC", Offset = "0xB516FC", VA = "0xB516FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001206")]
			[Address(RVA = "0xB51948", Offset = "0xB51948", VA = "0xB51948", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E640", Offset = "0x62E640")]
		private sealed class <move_camera>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public release_test <>4__this;

			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <pass>5__3;

			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <from>5__4;

			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <to>5__5;

			[Token(Token = "0x170001FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600120B")]
				[Address(RVA = "0xB51538", Offset = "0xB51538", VA = "0xB51538", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600120D")]
				[Address(RVA = "0xB51580", Offset = "0xB51580", VA = "0xB51580", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001208")]
			[Address(RVA = "0xB513D4", Offset = "0xB513D4", VA = "0xB513D4")]
			[DebuggerHidden]
			public <move_camera>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001209")]
			[Address(RVA = "0xB51400", Offset = "0xB51400", VA = "0xB51400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600120A")]
			[Address(RVA = "0xB51404", Offset = "0xB51404", VA = "0xB51404", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600120C")]
			[Address(RVA = "0xB51540", Offset = "0xB51540", VA = "0xB51540", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform cam;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<npc> all;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public npc joe;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public npc[] npc1;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public npc[] npc2;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public npc[] npc3;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CanvasGroup[] quotes;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CanvasGroup logo;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CanvasGroup sale;

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xC1F218", Offset = "0xC1F218", VA = "0xC1F218")]
		private void Start()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xC1F54C", Offset = "0xC1F54C", VA = "0xC1F54C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xC1F588", Offset = "0xC1F588", VA = "0xC1F588")]
		private void run()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xC1F898", Offset = "0xC1F898", VA = "0xC1F898")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x640398", Offset = "0x640398")]
		private IEnumerator quotes_co(float delay)
		{
			return null;
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xC1F9B8", Offset = "0xC1F9B8", VA = "0xC1F9B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x640400", Offset = "0x640400")]
		private IEnumerator npc_joe(npc npc, float delay)
		{
			return null;
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xC1FA48", Offset = "0xC1FA48", VA = "0xC1FA48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x640468", Offset = "0x640468")]
		private IEnumerator npc_run(npc npc, float delay)
		{
			return null;
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xC1F928", Offset = "0xC1F928", VA = "0xC1F928")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6404D0", Offset = "0x6404D0")]
		private IEnumerator npc_land(npc npc, float delay)
		{
			return null;
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xC1F818", Offset = "0xC1F818", VA = "0xC1F818")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x640538", Offset = "0x640538")]
		private IEnumerator move_camera()
		{
			return null;
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xC1FAD8", Offset = "0xC1FAD8", VA = "0xC1FAD8")]
		public release_test()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class trailer_test : MonoBehaviour
	{
		[Token(Token = "0x20002D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E650", Offset = "0x62E650")]
		private sealed class <move>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public trailer_test <>4__this;

			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <from>5__2;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <dur>5__3;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <pass>5__4;

			[Token(Token = "0x170001FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001215")]
				[Address(RVA = "0x17D3C50", Offset = "0x17D3C50", VA = "0x17D3C50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001217")]
				[Address(RVA = "0x17D3C98", Offset = "0x17D3C98", VA = "0x17D3C98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001212")]
			[Address(RVA = "0x17D3A8C", Offset = "0x17D3A8C", VA = "0x17D3A8C")]
			[DebuggerHidden]
			public <move>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001213")]
			[Address(RVA = "0x17D3AB8", Offset = "0x17D3AB8", VA = "0x17D3AB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001214")]
			[Address(RVA = "0x17D3ABC", Offset = "0x17D3ABC", VA = "0x17D3ABC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001216")]
			[Address(RVA = "0x17D3C58", Offset = "0x17D3C58", VA = "0x17D3C58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject team1;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject team2;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform cam;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform to;

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x1141F08", Offset = "0x1141F08", VA = "0x1141F08")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x1141F4C", Offset = "0x1141F4C", VA = "0x1141F4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x1141FD4", Offset = "0x1141FD4", VA = "0x1141FD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x640730", Offset = "0x640730")]
		private IEnumerator move()
		{
			return null;
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x1142054", Offset = "0x1142054", VA = "0x1142054")]
		public trailer_test()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class map1 : mpLevel
	{
		[Token(Token = "0x20002D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E660", Offset = "0x62E660")]
		private sealed class <Reconnect>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public map1 <>4__this;

			[Token(Token = "0x170001FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001255")]
				[Address(RVA = "0xB4E84C", Offset = "0xB4E84C", VA = "0xB4E84C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000200")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001257")]
				[Address(RVA = "0xB4E894", Offset = "0xB4E894", VA = "0xB4E894", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001252")]
			[Address(RVA = "0xB4E584", Offset = "0xB4E584", VA = "0xB4E584")]
			[DebuggerHidden]
			public <Reconnect>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6001253")]
			[Address(RVA = "0xB4E5B0", Offset = "0xB4E5B0", VA = "0xB4E5B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001254")]
			[Address(RVA = "0xB4E5B4", Offset = "0xB4E5B4", VA = "0xB4E5B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001256")]
			[Address(RVA = "0xB4E854", Offset = "0xB4E854", VA = "0xB4E854", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E670", Offset = "0x62E670")]
		private sealed class <local_player_killed>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public map1 <>4__this;

			[Token(Token = "0x17000201")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600125B")]
				[Address(RVA = "0xB4EAD0", Offset = "0xB4EAD0", VA = "0xB4EAD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000202")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600125D")]
				[Address(RVA = "0xB4EB18", Offset = "0xB4EB18", VA = "0xB4EB18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001258")]
			[Address(RVA = "0xB4E89C", Offset = "0xB4E89C", VA = "0xB4E89C")]
			[DebuggerHidden]
			public <local_player_killed>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6001259")]
			[Address(RVA = "0xB4E8C8", Offset = "0xB4E8C8", VA = "0xB4E8C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600125A")]
			[Address(RVA = "0xB4E8CC", Offset = "0xB4E8CC", VA = "0xB4E8CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600125C")]
			[Address(RVA = "0xB4EAD8", Offset = "0xB4EAD8", VA = "0xB4EAD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E680", Offset = "0x62E680")]
		private sealed class <>c
		{
			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<mpAvatar> <>9__103_0;

			[Token(Token = "0x600125F")]
			[Address(RVA = "0xB4E508", Offset = "0xB4E508", VA = "0xB4E508")]
			public <>c()
			{
			}

			[Token(Token = "0x6001260")]
			[Address(RVA = "0xB4E510", Offset = "0xB4E510", VA = "0xB4E510")]
			internal int <update_players>b__103_0(mpAvatar t1, mpAvatar t2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public hud hud;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte MaxPlayers;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject ui_players;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] ui_players_row;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI[] ui_players_name;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI[] ui_players_score;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject ui_private_password;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI ui_private_password_value;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject ui_private_share;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject ui_private_wait;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject ui_wave_number;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshProUGUI ui_wave_number_value;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject ui_wave_next;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextMeshProUGUI ui_wave_next_value;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject ui_wave_progress;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TextMeshProUGUI ui_wave_progress_value;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject ui_button_collider;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject ui_button;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject ui_button_start_game;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject ui_button_start_wave;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject ui_button_start_over;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject ui_button_switch_public;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject ui_gameover;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Transform spawn1;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform spawn2;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Transform spawn3;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Transform spawn4;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public map1room[] rooms;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform[] steps_up;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform[] steps_dn;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Vector3[] steps_org;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject container_avatars;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Recorder recorder;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject prefab_avatar;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private string map_name;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private string player_id;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private string player_name;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Dictionary<string, mpAvatar> players;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool is_private;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private string private_password;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private string server_region;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool ready;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		private bool master_migration;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private mpAvatar localAvatar;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool start_network;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		private bool start_level;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
		private bool stopped;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
		private bool awaked;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private string button_action;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float next_wave;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float wave_waiting;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float alldead_done;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private float alldead_duration;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float last_alert;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private bool manual_disconnect;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private int reconnect_tries;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private float ping_webhook_last;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool join_webhook_sent;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected Dictionary<byte, mpVar> varsmap;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public mpInt game;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public mpInt wave;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public mpInt time_start;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public mpByte board_status;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public mpByte progress;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public mpBool gameover;

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xC0B1C0", Offset = "0xC0B1C0", VA = "0xC0B1C0", Slot = "54")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xC0BCB0", Offset = "0xC0BCB0", VA = "0xC0BCB0")]
		private void Start()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xC0BCB4", Offset = "0xC0BCB4", VA = "0xC0BCB4")]
		private void Update()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xC0BEA4", Offset = "0xC0BEA4", VA = "0xC0BEA4")]
		private void StartNetwork()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xC0C148", Offset = "0xC0C148", VA = "0xC0C148")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xC0E098", Offset = "0xC0E098", VA = "0xC0E098")]
		private void StopLevel()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xC0E13C", Offset = "0xC0E13C", VA = "0xC0E13C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xC0E3DC", Offset = "0xC0E3DC", VA = "0xC0E3DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xC0E3E0", Offset = "0xC0E3E0", VA = "0xC0E3E0", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xC0E53C", Offset = "0xC0E53C", VA = "0xC0E53C", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xC0E6F8", Offset = "0xC0E6F8", VA = "0xC0E6F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6407E8", Offset = "0x6407E8")]
		private IEnumerator Reconnect()
		{
			return null;
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xC0E778", Offset = "0xC0E778", VA = "0xC0E778", Slot = "34")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xC0EA38", Offset = "0xC0EA38", VA = "0xC0EA38", Slot = "44")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xC0EA5C", Offset = "0xC0EA5C", VA = "0xC0EA5C", Slot = "33")]
		public override void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xC0DE3C", Offset = "0xC0DE3C", VA = "0xC0DE3C")]
		private void join_room()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xC0E850", Offset = "0xC0E850", VA = "0xC0E850")]
		private void create_room()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xC0DBC8", Offset = "0xC0DBC8", VA = "0xC0DBC8")]
		private void handle_error(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xC0EB10", Offset = "0xC0EB10", VA = "0xC0EB10", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xC0F5A4", Offset = "0xC0F5A4", VA = "0xC0F5A4", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player other)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xC0F9A8", Offset = "0xC0F9A8", VA = "0xC0F9A8", Slot = "43")]
		public override void OnPlayerLeftRoom(Player other)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xC0E454", Offset = "0xC0E454", VA = "0xC0E454")]
		private string get_clean_server_code()
		{
			return null;
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xC0C4E8", Offset = "0xC0C4E8", VA = "0xC0C4E8")]
		private void ping_webhook(float interval)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xC0FA30", Offset = "0xC0FA30", VA = "0xC0FA30")]
		private void left_webhook(Player other)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xC0EBF8", Offset = "0xC0EBF8", VA = "0xC0EBF8")]
		private void join_webhook()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xC0F1A0", Offset = "0xC0F1A0", VA = "0xC0F1A0")]
		private void add_player(Player new_player)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xC10388", Offset = "0xC10388", VA = "0xC10388")]
		[PunRPC]
		protected void add_player(byte no, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xC10894", Offset = "0xC10894", VA = "0xC10894")]
		protected void add_player(mpAvatar avatar)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xC100C4", Offset = "0xC100C4", VA = "0xC100C4")]
		[PunRPC]
		protected void remove_player(Player other)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xC10E5C", Offset = "0xC10E5C", VA = "0xC10E5C")]
		private void alert(string str)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xC0DF80", Offset = "0xC0DF80", VA = "0xC0DF80")]
		private void debug(object message, [Optional] GameObject go)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xC10EE0", Offset = "0xC10EE0", VA = "0xC10EE0")]
		public float get_time_pass()
		{
			return default(float);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xC10F80", Offset = "0xC10F80", VA = "0xC10F80")]
		private void action_logic(string command)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xC0D3F0", Offset = "0xC0D3F0", VA = "0xC0D3F0")]
		private void client_logic()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xC0CAD8", Offset = "0xC0CAD8", VA = "0xC0CAD8")]
		private void server_logic()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xC11A34", Offset = "0xC11A34", VA = "0xC11A34")]
		[PunRPC]
		public void local_player_revive(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xC0D698", Offset = "0xC0D698", VA = "0xC0D698")]
		public bool local_player_hit(Vector3 normal, int damage, byte other_player_no = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xC11B20", Offset = "0xC11B20", VA = "0xC11B20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x640880", Offset = "0x640880")]
		private IEnumerator local_player_killed(float delay)
		{
			return null;
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xC11BB0", Offset = "0xC11BB0", VA = "0xC11BB0")]
		[PunRPC]
		public void button_clicked(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xC0B674", Offset = "0xC0B674", VA = "0xC0B674")]
		private void clear_board()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xC11BB8", Offset = "0xC11BB8", VA = "0xC11BB8")]
		private void update_board()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xC120BC", Offset = "0xC120BC", VA = "0xC120BC")]
		private void update_progress()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xC121A8", Offset = "0xC121A8", VA = "0xC121A8")]
		private void update_wave()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xC0E14C", Offset = "0xC0E14C", VA = "0xC0E14C")]
		private void update_escalator()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xC0C42C", Offset = "0xC0C42C", VA = "0xC0C42C")]
		private void update_host_migration()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xC12294", Offset = "0xC12294", VA = "0xC12294")]
		private void update_master()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xC10A98", Offset = "0xC10A98", VA = "0xC10A98")]
		private void update_players()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xC122F0", Offset = "0xC122F0", VA = "0xC122F0")]
		public void on_button_clicked()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xC11C2C", Offset = "0xC11C2C", VA = "0xC11C2C")]
		private void ui_start_public()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xC11CEC", Offset = "0xC11CEC", VA = "0xC11CEC")]
		private void ui_start_private()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xC11DAC", Offset = "0xC11DAC", VA = "0xC11DAC")]
		private void ui_private_ready()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xC11E6C", Offset = "0xC11E6C", VA = "0xC11E6C")]
		private void ui_wave_start()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xC11FAC", Offset = "0xC11FAC", VA = "0xC11FAC")]
		private void ui_wave_end()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xC11ED8", Offset = "0xC11ED8", VA = "0xC11ED8")]
		private void ui_game_over()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xC0B80C", Offset = "0xC0B80C", VA = "0xC0B80C")]
		protected void vars_init()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xC0F680", Offset = "0xC0F680", VA = "0xC0F680")]
		protected void vars_push(Player other)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xC124B8", Offset = "0xC124B8", VA = "0xC124B8")]
		protected void vars_set(byte id, object value)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xC126E4", Offset = "0xC126E4", VA = "0xC126E4")]
		[PunRPC]
		protected void vars_rpc(byte id, object value, [Optional] PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xC1279C", Offset = "0xC1279C", VA = "0xC1279C")]
		public map1()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class map1elevator : MonoBehaviour
	{
		[Token(Token = "0x20002D9")]
		private struct key
		{
			[Token(Token = "0x4001434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float duration;

			[Token(Token = "0x6001267")]
			[Address(RVA = "0xB4EB20", Offset = "0xB4EB20", VA = "0xB4EB20")]
			public key(string name, float duration)
			{
			}
		}

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform inner;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform inner_dummy;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public teleport teleport;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public teleport teleport_outer_top;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public teleport teleport_outer_bottom;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform itemsbox;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform inner_door_right;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform inner_door_left;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform bottom_door_right;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform bottom_door_left;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform top_door_right;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform top_door_left;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public sound elevator_door_open;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public sound elevator_door_close;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public sound elevator_ring;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public sound elevator_music;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public map1 map1;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<key> keys;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int current;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float duration;

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xC12A14", Offset = "0xC12A14", VA = "0xC12A14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xC12D94", Offset = "0xC12D94", VA = "0xC12D94")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xC132C8", Offset = "0xC132C8", VA = "0xC132C8")]
		private void update_key(string key, string state, float t, bool skip = false)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xC144C0", Offset = "0xC144C0", VA = "0xC144C0")]
		private void UpdateTeleports(int state)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xC14630", Offset = "0xC14630", VA = "0xC14630")]
		private void UpdateItems(float y)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xC149B4", Offset = "0xC149B4", VA = "0xC149B4")]
		public map1elevator()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class map1room : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OcclusionPortal portal;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI ui_wave;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject container_close;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject container_open;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public area_collider[] bounds;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<byte, mpVar> varsmap;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public mpBool open;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public mpInt wave;

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xC14A48", Offset = "0xC14A48", VA = "0xC14A48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xC14EA0", Offset = "0xC14EA0", VA = "0xC14EA0")]
		private void update_room()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xC150B4", Offset = "0xC150B4", VA = "0xC150B4")]
		private void ToggleVisiblePortals()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xC152E0", Offset = "0xC152E0", VA = "0xC152E0", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player other)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xC14BCC", Offset = "0xC14BCC", VA = "0xC14BCC")]
		private void vars_init()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xC15310", Offset = "0xC15310", VA = "0xC15310")]
		private void vars_push(Player other)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xC15638", Offset = "0xC15638", VA = "0xC15638")]
		private void vars_set(byte id, object value)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xC15864", Offset = "0xC15864", VA = "0xC15864")]
		[PunRPC]
		private void vars_rpc(byte id, object value, [Optional] PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xC1591C", Offset = "0xC1591C", VA = "0xC1591C")]
		public map1room()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class mpBool : mpVar
	{
		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _value;

		[Token(Token = "0x17000203")]
		public bool value
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0xC1813C", Offset = "0xC1813C", VA = "0xC1813C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001272")]
			[Address(RVA = "0xC11830", Offset = "0xC11830", VA = "0xC11830")]
			set
			{
			}
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xC12474", Offset = "0xC12474", VA = "0xC12474")]
		public mpBool set(byte id, Action onreceive, Action<byte, object> onset)
		{
			return null;
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xC18144", Offset = "0xC18144", VA = "0xC18144", Slot = "4")]
		public override void receive(object new_value)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xC181E4", Offset = "0xC181E4", VA = "0xC181E4", Slot = "5")]
		public override object send()
		{
			return null;
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xC12A04", Offset = "0xC12A04", VA = "0xC12A04")]
		public mpBool()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class mpByte : mpVar
	{
		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte _value;

		[Token(Token = "0x17000204")]
		public byte value
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0xC18BE0", Offset = "0xC18BE0", VA = "0xC18BE0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001278")]
			[Address(RVA = "0xC0D5CC", Offset = "0xC0D5CC", VA = "0xC0D5CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xC12430", Offset = "0xC12430", VA = "0xC12430")]
		public mpByte set(byte id, Action onreceive, Action<byte, object> onset)
		{
			return null;
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xC18BE8", Offset = "0xC18BE8", VA = "0xC18BE8", Slot = "4")]
		public override void receive(object new_value)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xC18C88", Offset = "0xC18C88", VA = "0xC18C88", Slot = "5")]
		public override object send()
		{
			return null;
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xC129FC", Offset = "0xC129FC", VA = "0xC129FC")]
		public mpByte()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class mpFloat : mpVar
	{
		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _value;

		[Token(Token = "0x17000205")]
		public float value
		{
			[Token(Token = "0x600127D")]
			[Address(RVA = "0xC18CE8", Offset = "0xC18CE8", VA = "0xC18CE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600127E")]
			[Address(RVA = "0xC18CF0", Offset = "0xC18CF0", VA = "0xC18CF0")]
			set
			{
			}
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xC18DC4", Offset = "0xC18DC4", VA = "0xC18DC4")]
		public mpFloat set(byte id, Action onreceive, Action<byte, object> onset)
		{
			return null;
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xC18E08", Offset = "0xC18E08", VA = "0xC18E08", Slot = "4")]
		public override void receive(object new_value)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xC18EA8", Offset = "0xC18EA8", VA = "0xC18EA8", Slot = "5")]
		public override object send()
		{
			return null;
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xC18F08", Offset = "0xC18F08", VA = "0xC18F08")]
		public mpFloat()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class mpInt : mpVar
	{
		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _value;

		[Token(Token = "0x17000206")]
		public int value
		{
			[Token(Token = "0x6001283")]
			[Address(RVA = "0xC18F10", Offset = "0xC18F10", VA = "0xC18F10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001284")]
			[Address(RVA = "0xC0D500", Offset = "0xC0D500", VA = "0xC0D500")]
			set
			{
			}
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xC123EC", Offset = "0xC123EC", VA = "0xC123EC")]
		public mpInt set(byte id, Action onreceive, Action<byte, object> onset)
		{
			return null;
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xC18F18", Offset = "0xC18F18", VA = "0xC18F18", Slot = "4")]
		public override void receive(object new_value)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xC18FB8", Offset = "0xC18FB8", VA = "0xC18FB8", Slot = "5")]
		public override object send()
		{
			return null;
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xC129F4", Offset = "0xC129F4", VA = "0xC129F4")]
		public mpInt()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class mpString : mpVar
	{
		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _value;

		[Token(Token = "0x17000207")]
		public string value
		{
			[Token(Token = "0x6001289")]
			[Address(RVA = "0x118B8E8", Offset = "0x118B8E8", VA = "0x118B8E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x118B8F0", Offset = "0x118B8F0", VA = "0x118B8F0")]
			set
			{
			}
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x118B98C", Offset = "0x118B98C", VA = "0x118B98C")]
		public mpString set(byte id, Action onreceive, Action<byte, object> onset)
		{
			return null;
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x118B9D0", Offset = "0x118B9D0", VA = "0x118B9D0", Slot = "4")]
		public override void receive(object new_value)
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x118BA68", Offset = "0x118BA68", VA = "0x118BA68", Slot = "5")]
		public override object send()
		{
			return null;
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x118BA70", Offset = "0x118BA70", VA = "0x118BA70")]
		public mpString()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class mpTransform : MonoBehaviour
	{
		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 toPosOld;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 toPos;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion toRot;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x118BADC", Offset = "0x118BADC", VA = "0x118BADC")]
		public void SendNext(PhotonStream stream)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x118BC8C", Offset = "0x118BC8C", VA = "0x118BC8C")]
		public void ReceiveNext(PhotonStream stream)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x118BF5C", Offset = "0x118BF5C", VA = "0x118BF5C")]
		public void RemoteFixedUpdate()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x118C0B0", Offset = "0x118C0B0", VA = "0x118C0B0")]
		public mpTransform()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class mpVar
	{
		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte id;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onreceive;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<byte, object> onset;

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x118C10C", Offset = "0x118C10C", VA = "0x118C10C", Slot = "4")]
		public virtual void receive(object new_value)
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x118C110", Offset = "0x118C110", VA = "0x118C110", Slot = "5")]
		public virtual object send()
		{
			return null;
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x118BAD4", Offset = "0x118BAD4", VA = "0x118BAD4")]
		public mpVar()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x62E690", Offset = "0x62E690")]
	public class mpAvatar : MonoBehaviourPunCallbacks, IPunObservable, IPunInstantiateMagicCallback
	{
		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject default_parent;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<mpAvatar> callback_add;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action callback_score;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string player_id;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string player_name;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte no;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform spawn;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isLocalPlayer;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float speaking_delta;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x637920", Offset = "0x637920")]
		public Transform ui;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI ui_player_name;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public mpTransform head;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public mpTransform right;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public mpTransform left;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BonePoseLib right_pose;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BonePoseLib left_pose;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public PhotonVoiceView voice;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform mouth;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Outline outline;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x637958", Offset = "0x637958")]
		public Rigidbody rb;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Collider[] cols;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject lips_container;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Material head_0;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Material head_1;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Material head_2;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Material head_3;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Material head_4;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Material head_dead;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Material hand_0;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Material hand_1;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Material hand_2;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Material hand_3;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Material hand_4;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Material hand_dead;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Renderer head_rend;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Renderer[] hand_rends;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject[] lips;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Dictionary<byte, mpVar> varsmap;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public mpBool alive;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public mpBool speaking;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public mpByte pr;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public mpByte pl;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public mpBool focus;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public mpInt score;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public mpInt kills;

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xC16004", Offset = "0xC16004", VA = "0xC16004")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xC166CC", Offset = "0xC166CC", VA = "0xC166CC", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player other)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xC16A24", Offset = "0xC16A24", VA = "0xC16A24", Slot = "55")]
		public void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xC10714", Offset = "0xC10714", VA = "0xC10714")]
		public void InitLocalPlayer(Transform spawn, Recorder recorder)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xC1727C", Offset = "0xC1727C", VA = "0xC1727C", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xC16BD4", Offset = "0xC16BD4", VA = "0xC16BD4")]
		private void update_ui()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xC17320", Offset = "0xC17320", VA = "0xC17320")]
		private void update_alive()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xC16C04", Offset = "0xC16C04", VA = "0xC16C04")]
		private void update_style()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xC174C4", Offset = "0xC174C4", VA = "0xC174C4")]
		private void update_hands()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xC17518", Offset = "0xC17518", VA = "0xC17518")]
		private void update_focus()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xC17110", Offset = "0xC17110", VA = "0xC17110")]
		private void update_respawn()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xC17584", Offset = "0xC17584", VA = "0xC17584")]
		private void update_score()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xC11908", Offset = "0xC11908", VA = "0xC11908")]
		public void request_respawn()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xC175FC", Offset = "0xC175FC", VA = "0xC175FC")]
		[PunRPC]
		protected void rpc_respawn(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xC17600", Offset = "0xC17600", VA = "0xC17600")]
		private void UpdateLips()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xC17790", Offset = "0xC17790", VA = "0xC17790")]
		private void UpdateLocalPlayer()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xC17AFC", Offset = "0xC17AFC", VA = "0xC17AFC")]
		private void UpdateRemotePlayer()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xC17BC0", Offset = "0xC17BC0", VA = "0xC17BC0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xC16154", Offset = "0xC16154", VA = "0xC16154")]
		protected void vars_init()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xC166FC", Offset = "0xC166FC", VA = "0xC166FC")]
		protected void vars_push(Player other)
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xC17CA0", Offset = "0xC17CA0", VA = "0xC17CA0")]
		protected void vars_set(byte id, object value)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xC17ECC", Offset = "0xC17ECC", VA = "0xC17ECC")]
		[PunRPC]
		protected void vars_rpc(byte id, object value, [Optional] PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xC17F84", Offset = "0xC17F84", VA = "0xC17F84")]
		public mpAvatar()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class mpButton : hitable
	{
		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public mpLobby lobby;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject hover;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject selected;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider col;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound ClickSound;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public base_event on_press;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public mpbutton_event on_button;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool hovered;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private hand current_hand;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string custom1;

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xC18244", Offset = "0xC18244", VA = "0xC18244")]
		public bool is_selected()
		{
			return default(bool);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xC182E0", Offset = "0xC182E0", VA = "0xC182E0")]
		public void set_selected(bool state)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xC18380", Offset = "0xC18380", VA = "0xC18380")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xC18684", Offset = "0xC18684", VA = "0xC18684")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xC18720", Offset = "0xC18720", VA = "0xC18720")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xC18810", Offset = "0xC18810", VA = "0xC18810", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xC1888C", Offset = "0xC1888C", VA = "0xC1888C", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xC18948", Offset = "0xC18948", VA = "0xC18948", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xC189E8", Offset = "0xC189E8", VA = "0xC189E8")]
		public mpButton()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class mpButtonShot : hitable
	{
		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject hover;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collider col;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public sound ClickSound;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public base_event on_press;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hovered;

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xC18A4C", Offset = "0xC18A4C", VA = "0xC18A4C", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xC18A7C", Offset = "0xC18A7C", VA = "0xC18A7C", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xC18B38", Offset = "0xC18B38", VA = "0xC18B38", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xC18BD8", Offset = "0xC18BD8", VA = "0xC18BD8")]
		public mpButtonShot()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x62E6A4", Offset = "0x62E6A4")]
	public class mpLevel : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xC0B60C", Offset = "0xC0B60C", VA = "0xC0B60C", Slot = "54")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xC12A0C", Offset = "0xC12A0C", VA = "0xC12A0C")]
		public mpLevel()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class mpLobby : MonoBehaviour
	{
		[Token(Token = "0x20002E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E6B8", Offset = "0x62E6B8")]
		private sealed class <hide_error>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public mpLobby <>4__this;

			[Token(Token = "0x17000208")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012D4")]
				[Address(RVA = "0xB4FA50", Offset = "0xB4FA50", VA = "0xB4FA50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000209")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012D6")]
				[Address(RVA = "0xB4FA98", Offset = "0xB4FA98", VA = "0xB4FA98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012D1")]
			[Address(RVA = "0xB4F964", Offset = "0xB4F964", VA = "0xB4F964")]
			[DebuggerHidden]
			public <hide_error>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xB4F990", Offset = "0xB4F990", VA = "0xB4F990", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012D3")]
			[Address(RVA = "0xB4F994", Offset = "0xB4F994", VA = "0xB4F994", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012D5")]
			[Address(RVA = "0xB4FA58", Offset = "0xB4FA58", VA = "0xB4FA58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E6C8", Offset = "0x62E6C8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<MultiplayerRow> <>9__29_0;

			[Token(Token = "0x60012D8")]
			[Address(RVA = "0xB4EBB8", Offset = "0xB4EBB8", VA = "0xB4EBB8")]
			public <>c()
			{
			}

			[Token(Token = "0x60012D9")]
			[Address(RVA = "0xB4EBC0", Offset = "0xB4EBC0", VA = "0xB4EBC0")]
			internal int <get_best_server>b__29_0(MultiplayerRow t1, MultiplayerRow t2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E6D8", Offset = "0x62E6D8")]
		private sealed class <get_server_data>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public mpMap mpmap;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string password;

			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public mpLobby <>4__this;

			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700020A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012DE")]
				[Address(RVA = "0xB4F914", Offset = "0xB4F914", VA = "0xB4F914", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012E0")]
				[Address(RVA = "0xB4F95C", Offset = "0xB4F95C", VA = "0xB4F95C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012DA")]
			[Address(RVA = "0xB4EBEC", Offset = "0xB4EBEC", VA = "0xB4EBEC")]
			[DebuggerHidden]
			public <get_server_data>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60012DB")]
			[Address(RVA = "0xB4EC18", Offset = "0xB4EC18", VA = "0xB4EC18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012DC")]
			[Address(RVA = "0xB4ECE8", Offset = "0xB4ECE8", VA = "0xB4ECE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012DD")]
			[Address(RVA = "0xB4EC34", Offset = "0xB4EC34", VA = "0xB4EC34")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xB4F91C", Offset = "0xB4F91C", VA = "0xB4F91C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject wrap;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public tool_laptop laptop;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float last_button;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI password_value;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject password_box;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public mpButton button_public;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public mpButton button_private;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject error_window;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI error_message;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject admin_panel;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public mpButton[] admin_regions;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public mpMap[] maps;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int mapIndex;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Coroutine hide_error_co;

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xC19018", Offset = "0xC19018", VA = "0xC19018")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xC194A0", Offset = "0xC194A0", VA = "0xC194A0")]
		public void password_backspace()
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xC19700", Offset = "0xC19700", VA = "0xC19700")]
		public void password_digit(string digit)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xC19790", Offset = "0xC19790", VA = "0xC19790")]
		public void map_next()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xC19830", Offset = "0xC19830", VA = "0xC19830")]
		public void map_prev()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xC19400", Offset = "0xC19400", VA = "0xC19400")]
		public void type_private()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xC19450", Offset = "0xC19450", VA = "0xC19450")]
		public void type_public()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xC198D8", Offset = "0xC198D8", VA = "0xC198D8")]
		private void set_error(string message, float delay = 5f)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xC19A10", Offset = "0xC19A10", VA = "0xC19A10")]
		private void hide_error()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xC19980", Offset = "0xC19980", VA = "0xC19980")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6409D8", Offset = "0x6409D8")]
		private IEnumerator hide_error(float delay)
		{
			return null;
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xC19A54", Offset = "0xC19A54", VA = "0xC19A54")]
		public void play()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xC1A090", Offset = "0xC1A090", VA = "0xC1A090")]
		private bool is_valid_map(string code)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xC1A140", Offset = "0xC1A140", VA = "0xC1A140")]
		private string get_map_scene(string code)
		{
			return null;
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xC1A230", Offset = "0xC1A230", VA = "0xC1A230")]
		private bool start_multiplayer(string scene_name, string password, string server)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xC1A5D0", Offset = "0xC1A5D0", VA = "0xC1A5D0")]
		private string get_best_ping()
		{
			return null;
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xC1A6F4", Offset = "0xC1A6F4", VA = "0xC1A6F4")]
		private bool get_best_server(mpMap mpmap, string password, MultiplayerList data)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xC19FE0", Offset = "0xC19FE0", VA = "0xC19FE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x640A40", Offset = "0x640A40")]
		private IEnumerator get_server_data(mpMap mpmap, string password)
		{
			return null;
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xC192A0", Offset = "0xC192A0", VA = "0xC192A0")]
		private void UpdateSelectedRegion()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xC1AF88", Offset = "0xC1AF88", VA = "0xC1AF88")]
		public void admin_region(mpButton button)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xC1B044", Offset = "0xC1B044", VA = "0xC1B044")]
		public mpLobby()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EA")]
	public class MultiplayerRow
	{
		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string server;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string level;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int players;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string password;

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xBB1E30", Offset = "0xBB1E30", VA = "0xBB1E30")]
		public MultiplayerRow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EB")]
	public class MultiplayerList
	{
		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerRow[] rows;

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xBB1E28", Offset = "0xBB1E28", VA = "0xBB1E28")]
		public MultiplayerList()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class mpMap : MonoBehaviour
	{
		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string code;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string scene_name;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string title;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string subtitle;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int max_players;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool friendly_fire;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI input_title;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI input_subtitle;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI input_max_players;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI input_friendly_fire;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject map_info;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool soon;

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x118B540", Offset = "0x118B540", VA = "0x118B540")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x118B6CC", Offset = "0x118B6CC", VA = "0x118B6CC")]
		public mpMap()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class mpPointer : MonoBehaviour
	{
		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool only_if_other_hand_holding;

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x118B750", Offset = "0x118B750", VA = "0x118B750")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x118B8E0", Offset = "0x118B8E0", VA = "0x118B8E0")]
		public mpPointer()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x62E6E8", Offset = "0x62E6E8")]
	public class mp_tool : mp_tool_base
	{
		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x118C118", Offset = "0x118C118", VA = "0x118C118")]
		public mp_tool()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x62E6FC", Offset = "0x62E6FC")]
	public class mp_tool_base : MonoBehaviourPunCallbacks, IPunObservable, IPunInstantiateMagicCallback, IPunOwnershipCallbacks
	{
		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public toolbase tool;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastpos;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 toPosOld;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 toPos;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion toRot;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float speed;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool waitting_for_control;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		protected byte next;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Dictionary<byte, mpVar> varsmap;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public mpBool onplayer;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public mpBool ontransfer;

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x118C200", Offset = "0x118C200", VA = "0x118C200", Slot = "59")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x118C3BC", Offset = "0x118C3BC", VA = "0x118C3BC", Slot = "60")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x118C474", Offset = "0x118C474", VA = "0x118C474", Slot = "61")]
		public virtual void on_preselect(toolbase selected)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x118C620", Offset = "0x118C620", VA = "0x118C620")]
		[PunRPC]
		protected void on_select([Optional] PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x118C680", Offset = "0x118C680", VA = "0x118C680", Slot = "56")]
		public void OnOwnershipRequest(PhotonView targetView, Player requestingPlayer)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x118C79C", Offset = "0x118C79C", VA = "0x118C79C", Slot = "57")]
		public void OnOwnershipTransfered(PhotonView targetView, Player previousOwner)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x118C7C8", Offset = "0x118C7C8", VA = "0x118C7C8", Slot = "58")]
		public void OnOwnershipTransferFailed(PhotonView targetView, Player senderOfFailedRequest)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x118C7F4", Offset = "0x118C7F4", VA = "0x118C7F4", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player other)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x118CB4C", Offset = "0x118CB4C", VA = "0x118CB4C", Slot = "62")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x118CBAC", Offset = "0x118CBAC", VA = "0x118CBAC", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x118D128", Offset = "0x118D128", VA = "0x118D128", Slot = "63")]
		public virtual void LocalFixedUpdate()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x118D278", Offset = "0x118D278", VA = "0x118D278", Slot = "64")]
		public virtual void RemoteFixedUpdate()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x118D4D0", Offset = "0x118D4D0", VA = "0x118D4D0", Slot = "65")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x118D590", Offset = "0x118D590", VA = "0x118D590", Slot = "66")]
		protected virtual void vars_init()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x118C824", Offset = "0x118C824", VA = "0x118C824")]
		protected void vars_push(Player other)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x118D7E8", Offset = "0x118D7E8", VA = "0x118D7E8")]
		protected void vars_set(byte id, object value)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x118DA14", Offset = "0x118DA14", VA = "0x118DA14")]
		[PunRPC]
		protected void vars_rpc(byte id, object value, [Optional] PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x118C11C", Offset = "0x118C11C", VA = "0x118C11C")]
		public mp_tool_base()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x62E710", Offset = "0x62E710")]
	public class mp_tool_firearm : mp_tool
	{
		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private tool_firearm firearm;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public mpInt bullets;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public mpInt ammo;

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x118DACC", Offset = "0x118DACC", VA = "0x118DACC", Slot = "59")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x118DDE0", Offset = "0x118DDE0", VA = "0x118DDE0")]
		[PunRPC]
		public void explode_visual(Vector3 point, Vector3 normal, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x118DE00", Offset = "0x118DE00", VA = "0x118DE00")]
		public void explode_visual(Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x118DF9C", Offset = "0x118DF9C", VA = "0x118DF9C")]
		[PunRPC]
		public void shoot_visual(Vector3 point, Vector3 normal, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x118E180", Offset = "0x118E180", VA = "0x118E180")]
		public void shoot_visual(Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x118E31C", Offset = "0x118E31C", VA = "0x118E31C")]
		[PunRPC]
		public void spin(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x118E33C", Offset = "0x118E33C", VA = "0x118E33C")]
		public void spin(tool_firearm item)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x118E438", Offset = "0x118E438", VA = "0x118E438")]
		[PunRPC]
		public void reload(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x118E458", Offset = "0x118E458", VA = "0x118E458")]
		public void reload(tool_firearm item)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x118E554", Offset = "0x118E554", VA = "0x118E554")]
		[PunRPC]
		public void empty(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x118E574", Offset = "0x118E574", VA = "0x118E574")]
		public void empty(tool_firearm item)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x118E670", Offset = "0x118E670", VA = "0x118E670", Slot = "66")]
		protected override void vars_init()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x118E7E0", Offset = "0x118E7E0", VA = "0x118E7E0")]
		public mp_tool_firearm()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class nocollider : MonoBehaviour
	{
		[Token(Token = "0x6001307")]
		[Address(RVA = "0x118EC48", Offset = "0x118EC48", VA = "0x118EC48")]
		public nocollider()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class RecordPlayer : MonoBehaviour
	{
		[Token(Token = "0x6001308")]
		[Address(RVA = "0xC6BCD4", Offset = "0xC6BCD4", VA = "0xC6BCD4")]
		public RecordPlayer()
		{
		}
	}
}
namespace emotitron.Utilities
{
	[Token(Token = "0x20002F3")]
	public static class PrintMaskUtil
	{
		[Token(Token = "0x6001309")]
		[Address(RVA = "0x9783EC", Offset = "0x9783EC", VA = "0x9783EC")]
		public static StringBuilder PrintMask(this BitArray ba, int hiliteBit = -1)
		{
			return null;
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x9783F4", Offset = "0x9783F4", VA = "0x9783F4")]
		public static int CountTrue(this BitArray ba)
		{
			return default(int);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x978464", Offset = "0x978464", VA = "0x978464")]
		public static int CountFalse(this BitArray ba)
		{
			return default(int);
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x9784D8", Offset = "0x9784D8", VA = "0x9784D8")]
		public static int CountValidRange(this BitArray ba, int start, int lookahead)
		{
			return default(int);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x97854C", Offset = "0x97854C", VA = "0x97854C")]
		public static void ClearBitsBefore(this BitArray ba, int start, int count)
		{
		}
	}
}
namespace Photon.Compression
{
	[Token(Token = "0x20002F4")]
	public enum SerializationFlags
	{
		[Token(Token = "0x40014C1")]
		None = 0,
		[Token(Token = "0x40014C2")]
		HasContent = 1,
		[Token(Token = "0x40014C3")]
		Force = 2,
		[Token(Token = "0x40014C4")]
		ForceReliable = 4,
		[Token(Token = "0x40014C5")]
		SendToSelf = 8,
		[Token(Token = "0x40014C6")]
		NewConnection = 0x10,
		[Token(Token = "0x40014C7")]
		IsComplete = 0x20
	}
	[Serializable]
	[Token(Token = "0x20002F5")]
	public abstract class LiteCrusher
	{
		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected int bits;

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xBA5360", Offset = "0xBA5360", VA = "0xBA5360")]
		public static int GetBitsForMaxValue(uint maxvalue)
		{
			return default(int);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xBA5380", Offset = "0xBA5380", VA = "0xBA5380")]
		protected LiteCrusher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F6")]
	public abstract class LiteCrusher<TComp, T> : LiteCrusher where TComp : struct where T : struct
	{
		[Token(Token = "0x6001310")]
		public abstract TComp Encode(T val);

		[Token(Token = "0x6001311")]
		public abstract T Decode(uint val);

		[Token(Token = "0x6001312")]
		public abstract TComp WriteValue(T val, byte[] buffer, int bitposition);

		[Token(Token = "0x6001313")]
		public abstract void WriteCValue(uint val, byte[] buffer, int bitposition);

		[Token(Token = "0x6001314")]
		public abstract T ReadValue(byte[] buffer, int bitposition);

		[Token(Token = "0x6001315")]
		public abstract TComp ReadCValue(byte[] buffer, int bitposition);

		[Token(Token = "0x6001316")]
		protected LiteCrusher()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public enum LiteOutOfBoundsHandling
	{
		[Token(Token = "0x40014CA")]
		Clamp,
		[Token(Token = "0x40014CB")]
		Loop
	}
	[Token(Token = "0x20002F8")]
	public enum LiteFloatCompressType
	{
		[Token(Token = "0x40014CD")]
		Bits2 = 2,
		[Token(Token = "0x40014CE")]
		Bits3 = 3,
		[Token(Token = "0x40014CF")]
		Bits4 = 4,
		[Token(Token = "0x40014D0")]
		Bits5 = 5,
		[Token(Token = "0x40014D1")]
		Bits6 = 6,
		[Token(Token = "0x40014D2")]
		Bits7 = 7,
		[Token(Token = "0x40014D3")]
		Bits8 = 8,
		[Token(Token = "0x40014D4")]
		Bits9 = 9,
		[Token(Token = "0x40014D5")]
		Bits10 = 10,
		[Token(Token = "0x40014D6")]
		Bits12 = 12,
		[Token(Token = "0x40014D7")]
		Bits14 = 14,
		[Token(Token = "0x40014D8")]
		Half16 = 16,
		[Token(Token = "0x40014D9")]
		Full32 = 32
	}
	[Serializable]
	[Token(Token = "0x20002F9")]
	public class LiteFloatCrusher : LiteCrusher<ulong, float>
	{
		[Token(Token = "0x20002FA")]
		public enum Normalization
		{
			[Token(Token = "0x40014E4")]
			None,
			[Token(Token = "0x40014E5")]
			Positive,
			[Token(Token = "0x40014E6")]
			Negative
		}

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public Normalization normalization;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected float min;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected float max;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public LiteFloatCompressType compressType;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public LiteOutOfBoundsHandling outOfBoundsHandling;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool accurateCenter;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float encoder;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float decoder;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ulong maxCVal;

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xBA5388", Offset = "0xBA5388", VA = "0xBA5388")]
		public LiteFloatCrusher()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xBA5494", Offset = "0xBA5494", VA = "0xBA5494")]
		public LiteFloatCrusher(LiteFloatCompressType compressType, float min, float max, bool accurateCenter, LiteOutOfBoundsHandling outOfBoundsHandling = LiteOutOfBoundsHandling.Clamp)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xBA57A0", Offset = "0xBA57A0", VA = "0xBA57A0")]
		public LiteFloatCrusher(LiteFloatCompressType compressType, Normalization normalization = Normalization.None, LiteOutOfBoundsHandling outOfBoundsHandling = LiteOutOfBoundsHandling.Clamp)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xBA541C", Offset = "0xBA541C", VA = "0xBA541C")]
		public static void Recalculate(LiteFloatCompressType compressType, float min, float max, bool accurateCenter, LiteFloatCrusher crusher)
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xBA588C", Offset = "0xBA588C", VA = "0xBA588C")]
		public static void Recalculate(LiteFloatCompressType compressType, float min, float max, bool accurateCenter, int bits, float encoder, float decoder, ulong maxCVal)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xBA58F0", Offset = "0xBA58F0", VA = "0xBA58F0", Slot = "4")]
		public override ulong Encode(float val)
		{
			return default(ulong);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xBA5A30", Offset = "0xBA5A30", VA = "0xBA5A30", Slot = "5")]
		public override float Decode(uint cval)
		{
			return default(float);
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xBA5B10", Offset = "0xBA5B10", VA = "0xBA5B10", Slot = "6")]
		public override ulong WriteValue(float val, byte[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xBA5C00", Offset = "0xBA5C00", VA = "0xBA5C00", Slot = "7")]
		public override void WriteCValue(uint cval, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xBA5C28", Offset = "0xBA5C28", VA = "0xBA5C28", Slot = "8")]
		public override float ReadValue(byte[] buffer, int bitposition)
		{
			return default(float);
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xBA5D24", Offset = "0xBA5D24", VA = "0xBA5D24", Slot = "9")]
		public override ulong ReadCValue(byte[] buffer, int bitposition)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x20002FB")]
	public enum LiteIntCompressType
	{
		[Token(Token = "0x40014E8")]
		PackSigned,
		[Token(Token = "0x40014E9")]
		PackUnsigned,
		[Token(Token = "0x40014EA")]
		Range
	}
	[Serializable]
	[Token(Token = "0x20002FC")]
	public class LiteIntCrusher : LiteCrusher<uint, int>
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public LiteIntCompressType compressType;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected int min;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected int max;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int smallest;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int biggest;

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xBA5D68", Offset = "0xBA5D68", VA = "0xBA5D68")]
		public LiteIntCrusher()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xBA5E10", Offset = "0xBA5E10", VA = "0xBA5E10")]
		public LiteIntCrusher(LiteIntCompressType compType = LiteIntCompressType.PackSigned, int min = -128, int max = 127)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xBA5EBC", Offset = "0xBA5EBC", VA = "0xBA5EBC", Slot = "6")]
		public override uint WriteValue(int val, byte[] buffer, int bitposition)
		{
			return default(uint);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xBA5F70", Offset = "0xBA5F70", VA = "0xBA5F70", Slot = "7")]
		public override void WriteCValue(uint cval, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xBA5FC0", Offset = "0xBA5FC0", VA = "0xBA5FC0", Slot = "8")]
		public override int ReadValue(byte[] buffer, int bitposition)
		{
			return default(int);
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xBA6060", Offset = "0xBA6060", VA = "0xBA6060", Slot = "9")]
		public override uint ReadCValue(byte[] buffer, int bitposition)
		{
			return default(uint);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xBA60C0", Offset = "0xBA60C0", VA = "0xBA60C0", Slot = "4")]
		public override uint Encode(int value)
		{
			return default(uint);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xBA60FC", Offset = "0xBA60FC", VA = "0xBA60FC", Slot = "5")]
		public override int Decode(uint cvalue)
		{
			return default(int);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xBA6128", Offset = "0xBA6128", VA = "0xBA6128")]
		public static void Recalculate(int min, int max, LiteIntCrusher crusher)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xBA5DD4", Offset = "0xBA5DD4", VA = "0xBA5DD4")]
		public static void Recalculate(int min, int max, int smallest, int biggest, int bits)
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public enum NormalizedFloatCompression
	{
		[Token(Token = "0x40014F1")]
		Bits2 = 2,
		[Token(Token = "0x40014F2")]
		Bits3 = 3,
		[Token(Token = "0x40014F3")]
		Bits4 = 4,
		[Token(Token = "0x40014F4")]
		Bits5 = 5,
		[Token(Token = "0x40014F5")]
		Bits6 = 6,
		[Token(Token = "0x40014F6")]
		Bits7 = 7,
		[Token(Token = "0x40014F7")]
		Bits8 = 8,
		[Token(Token = "0x40014F8")]
		Bits9 = 9,
		[Token(Token = "0x40014F9")]
		Bits10 = 10,
		[Token(Token = "0x40014FA")]
		Bits12 = 12,
		[Token(Token = "0x40014FB")]
		Bits14 = 14,
		[Token(Token = "0x40014FC")]
		Half16 = 16,
		[Token(Token = "0x40014FD")]
		Full32 = 32
	}
	[Token(Token = "0x20002FE")]
	public static class NormCompress
	{
		[Token(Token = "0x20002FF")]
		public struct NormCompressCodec
		{
			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int bits;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly float encoder;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly float decoder;

			[Token(Token = "0x6001331")]
			[Address(RVA = "0x801850", Offset = "0x801850", VA = "0x801850")]
			public NormCompressCodec(int bits, float encoder, float decoder)
			{
			}
		}

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NormCompressCodec[] codecForBit;

		[Token(Token = "0x40014FF")]
		private const float NORM_COMP_ENCODE15 = 32767f;

		[Token(Token = "0x4001500")]
		private const float NORM_COMP_DECODE15 = 3.051851E-05f;

		[Token(Token = "0x4001501")]
		private const float NORM_COMP_ENCODE14 = 16383f;

		[Token(Token = "0x4001502")]
		private const float NORM_COMP_DECODE14 = 6.103888E-05f;

		[Token(Token = "0x4001503")]
		private const float NORM_COMP_ENCODE13 = 8191f;

		[Token(Token = "0x4001504")]
		private const float NORM_COMP_DECODE13 = 0.00012208521f;

		[Token(Token = "0x4001505")]
		private const float NORM_COMP_ENCODE12 = 4095f;

		[Token(Token = "0x4001506")]
		private const float NORM_COMP_DECODE12 = 0.00024420026f;

		[Token(Token = "0x4001507")]
		private const float NORM_COMP_ENCODE11 = 2047f;

		[Token(Token = "0x4001508")]
		private const float NORM_COMP_DECODE11 = 0.0004885198f;

		[Token(Token = "0x4001509")]
		private const float NORM_COMP_ENCODE10 = 1023f;

		[Token(Token = "0x400150A")]
		private const float NORM_COMP_DECODE10 = 0.0009775171f;

		[Token(Token = "0x400150B")]
		private const float NORM_COMP_ENCODE9 = 511f;

		[Token(Token = "0x400150C")]
		private const float NORM_COMP_DECODE9 = 0.0019569471f;

		[Token(Token = "0x400150D")]
		private const float NORM_COMP_ENCODE8 = 255f;

		[Token(Token = "0x400150E")]
		private const float NORM_COMP_DECODE8 = 0.003921569f;

		[Token(Token = "0x400150F")]
		private const float NORM_COMP_ENCODE7 = 127f;

		[Token(Token = "0x4001510")]
		private const float NORM_COMP_DECODE7 = 0.003921569f;

		[Token(Token = "0x4001511")]
		private const float NORM_COMP_ENCODE6 = 63f;

		[Token(Token = "0x4001512")]
		private const float NORM_COMP_DECODE6 = 1f / 63f;

		[Token(Token = "0x4001513")]
		private const float NORM_COMP_ENCODE5 = 31f;

		[Token(Token = "0x4001514")]
		private const float NORM_COMP_DECODE5 = 1f / 31f;

		[Token(Token = "0x4001515")]
		private const float NORM_COMP_ENCODE4 = 15f;

		[Token(Token = "0x4001516")]
		private const float NORM_COMP_DECODE4 = 1f / 15f;

		[Token(Token = "0x4001517")]
		private const float NORM_COMP_ENCODE3 = 7f;

		[Token(Token = "0x4001518")]
		private const float NORM_COMP_DECODE3 = 1f / 7f;

		[Token(Token = "0x4001519")]
		private const float NORM_COMP_ENCODE2 = 3f;

		[Token(Token = "0x400151A")]
		private const float NORM_COMP_DECODE2 = 1f / 3f;

		[Token(Token = "0x400151B")]
		private const float NORM_COMP_ENCODE1 = 1f;

		[Token(Token = "0x400151C")]
		private const float NORM_COMP_DECODE1 = 1f;

		[Token(Token = "0x400151D")]
		private const float NORM_COMP_ENCODE0 = 0f;

		[Token(Token = "0x400151E")]
		private const float NORM_COMP_DECODE0 = 0f;

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x12E72E4", Offset = "0x12E72E4", VA = "0x12E72E4")]
		static NormCompress()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x12E7418", Offset = "0x12E7418", VA = "0x12E7418")]
		public static uint CompressNorm(this float value, int bits)
		{
			return default(uint);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x12E759C", Offset = "0x12E759C", VA = "0x12E759C")]
		public static uint WriteNorm(this byte[] buffer, float value, int bitposition, int bits)
		{
			return default(uint);
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x12E774C", Offset = "0x12E774C", VA = "0x12E774C")]
		public static float ReadNorm(this byte[] buffer, int bitposition, int bits)
		{
			return default(float);
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x12E7408", Offset = "0x12E7408", VA = "0x12E7408")]
		public static uint GetMaxValueForBits(int bitcount)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000300")]
	public enum DefaultKeyRate
	{
		[Token(Token = "0x4001523")]
		Never = 0,
		[Token(Token = "0x4001524")]
		Every = 1,
		[Token(Token = "0x4001525")]
		Every2nd = 2,
		[Token(Token = "0x4001526")]
		Every3rd = 3,
		[Token(Token = "0x4001527")]
		Every4th = 4,
		[Token(Token = "0x4001528")]
		Every5th = 5,
		[Token(Token = "0x4001529")]
		Every10th = 10
	}
	[Token(Token = "0x2000301")]
	public interface IPackObj
	{
	}
	[Token(Token = "0x2000302")]
	public enum DefaultPackInclusion
	{
		[Token(Token = "0x400152B")]
		Explicit,
		[Token(Token = "0x400152C")]
		AllPublic
	}
	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x62E744", Offset = "0x62E744")]
	public class PackObjectAttribute : Attribute
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DefaultKeyRate defaultKeyRate;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public DefaultPackInclusion defaultInclusion;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SyncAs syncAs;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string postSnapCallback;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string postApplyCallback;

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x970E4C", Offset = "0x970E4C", VA = "0x970E4C")]
		public PackObjectAttribute(DefaultKeyRate defaultKeyRate = DefaultKeyRate.Every)
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class SyncHalfFloatAttribute : SyncVarBaseAttribute, IPackSingle, IPackDouble
	{
		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly IndicatorBit indicatorBit;

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xC761CC", Offset = "0xC761CC", VA = "0xC761CC")]
		public SyncHalfFloatAttribute(IndicatorBit indicatorBit = IndicatorBit.None, KeyRate keyRate = KeyRate.UseDefault)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xC76208", Offset = "0xC76208", VA = "0xC76208", Slot = "9")]
		public override int GetMaxBits(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xC7621C", Offset = "0xC7621C", VA = "0xC7621C", Slot = "10")]
		public SerializationFlags Pack(float value, float prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xC76388", Offset = "0xC76388", VA = "0xC76388", Slot = "11")]
		public SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xC7645C", Offset = "0xC7645C", VA = "0xC7645C", Slot = "12")]
		public SerializationFlags Pack(double value, double prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xC7648C", Offset = "0xC7648C", VA = "0xC7648C", Slot = "13")]
		public SerializationFlags Unpack(double value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
	[Token(Token = "0x2000305")]
	public class SyncRangedIntAttribute : SyncVarBaseAttribute, IPackByte, IPackSByte, IPackUInt16, IPackInt16, IPackUInt32, IPackInt32, IPackUInt64, IPackInt64, IPackSingle, IPackDouble
	{
		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int min;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int max;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly int smallest;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int biggest;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly IndicatorBits indicatorBits;

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x10DB890", Offset = "0x10DB890", VA = "0x10DB890")]
		public SyncRangedIntAttribute(int min, int max, IndicatorBits indicatorBits = IndicatorBits.None, KeyRate keyRate = KeyRate.UseDefault)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x10DB928", Offset = "0x10DB928", VA = "0x10DB928", Slot = "9")]
		public override int GetMaxBits(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x10DB95C", Offset = "0x10DB95C", VA = "0x10DB95C")]
		private SerializationFlags Write(int value, int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x10DBAD4", Offset = "0x10DBAD4", VA = "0x10DBAD4")]
		private int Read(byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(int);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x10DBBA0", Offset = "0x10DBBA0", VA = "0x10DBBA0", Slot = "10")]
		public SerializationFlags Pack(byte value, byte prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x10DBC78", Offset = "0x10DBC78", VA = "0x10DBC78", Slot = "11")]
		public SerializationFlags Unpack(byte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x10DBCAC", Offset = "0x10DBCAC", VA = "0x10DBCAC", Slot = "12")]
		public SerializationFlags Pack(sbyte value, sbyte prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x10DBD84", Offset = "0x10DBD84", VA = "0x10DBD84", Slot = "13")]
		public SerializationFlags Unpack(sbyte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x10DBDB8", Offset = "0x10DBDB8", VA = "0x10DBDB8", Slot = "14")]
		public SerializationFlags Pack(ushort value, ushort prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x10DBE90", Offset = "0x10DBE90", VA = "0x10DBE90", Slot = "15")]
		public SerializationFlags Unpack(ushort value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x10DBEC4", Offset = "0x10DBEC4", VA = "0x10DBEC4", Slot = "16")]
		public SerializationFlags Pack(short value, short prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x10DBF9C", Offset = "0x10DBF9C", VA = "0x10DBF9C", Slot = "17")]
		public SerializationFlags Unpack(short value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x10DBFD0", Offset = "0x10DBFD0", VA = "0x10DBFD0", Slot = "18")]
		public SerializationFlags Pack(uint value, uint prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x10DC0A8", Offset = "0x10DC0A8", VA = "0x10DC0A8", Slot = "19")]
		public SerializationFlags Unpack(uint value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x10DC0DC", Offset = "0x10DC0DC", VA = "0x10DC0DC", Slot = "20")]
		public SerializationFlags Pack(int value, int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x10DC1B4", Offset = "0x10DC1B4", VA = "0x10DC1B4", Slot = "21")]
		public SerializationFlags Unpack(int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x10DC1E8", Offset = "0x10DC1E8", VA = "0x10DC1E8", Slot = "22")]
		public SerializationFlags Pack(ulong value, ulong prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x10DC2C0", Offset = "0x10DC2C0", VA = "0x10DC2C0", Slot = "23")]
		public SerializationFlags Unpack(ulong value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x10DC2F4", Offset = "0x10DC2F4", VA = "0x10DC2F4", Slot = "24")]
		public SerializationFlags Pack(long value, long prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x10DC3CC", Offset = "0x10DC3CC", VA = "0x10DC3CC", Slot = "25")]
		public SerializationFlags Unpack(long value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x10DC400", Offset = "0x10DC400", VA = "0x10DC400", Slot = "26")]
		public SerializationFlags Pack(float value, float prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x10DC664", Offset = "0x10DC664", VA = "0x10DC664", Slot = "27")]
		public SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x10DC698", Offset = "0x10DC698", VA = "0x10DC698", Slot = "28")]
		public SerializationFlags Pack(double value, double prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x10DC8A8", Offset = "0x10DC8A8", VA = "0x10DC8A8", Slot = "29")]
		public SerializationFlags Unpack(double value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
	[Token(Token = "0x2000306")]
	public class SyncListAttribute : SyncVarBaseAttribute, IPackList<int>
	{
		[Token(Token = "0x6001351")]
		[Address(RVA = "0xC764C0", Offset = "0xC764C0", VA = "0xC764C0", Slot = "10")]
		public SerializationFlags Pack(List<int> value, List<int> prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xC7665C", Offset = "0xC7665C", VA = "0xC7665C", Slot = "11")]
		public SerializationFlags Unpack(List<int> value, BitArray isCompleteMask, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xC767CC", Offset = "0xC767CC", VA = "0xC767CC")]
		public SerializationFlags Pack(List<uint> value, List<uint> prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xC76968", Offset = "0xC76968", VA = "0xC76968")]
		public SerializationFlags Unpack(List<uint> value, BitArray isCompleteMask, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001355")]
		public static void Copy<T>(List<T> src, List<T> trg, BitArray mask) where T : struct
		{
		}

		[Token(Token = "0x6001356")]
		public static void Capture<T>(List<T> src, List<T> trg) where T : struct
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xC76AD8", Offset = "0xC76AD8", VA = "0xC76AD8")]
		public SyncListAttribute()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class SyncVarAttribute : SyncVarBaseAttribute, IPackByte, IPackSByte, IPackUInt16, IPackInt16, IPackUInt32, IPackInt32, IPackUInt64, IPackInt64, IPackSingle, IPackDouble, IPackString, IPackStringBuilder, IPackVector2, IPackVector3, IPackVector2Int, IPackVector3Int, IPackBoolean, IPackChar
	{
		[Token(Token = "0x4001538")]
		public const int MAX_STR_LEN = 63;

		[Token(Token = "0x4001539")]
		public const int STR_LEN_BITS = 6;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool WholeNumbers;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StringBuilder sb;

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x10DC8DC", Offset = "0x10DC8DC", VA = "0x10DC8DC")]
		public SyncVarAttribute(KeyRate keyRate = KeyRate.UseDefault)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x10DC918", Offset = "0x10DC918", VA = "0x10DC918", Slot = "9")]
		public override int GetMaxBits(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x600135A")]
		public bool Compare<T>(List<T> a, List<T> b) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x10DD120", Offset = "0x10DD120", VA = "0x10DD120", Slot = "42")]
		public SerializationFlags Pack(bool value, bool prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x10DD1F0", Offset = "0x10DD1F0", VA = "0x10DD1F0", Slot = "43")]
		public SerializationFlags Unpack(bool value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x10DD230", Offset = "0x10DD230", VA = "0x10DD230", Slot = "10")]
		public SerializationFlags Pack(byte value, byte prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x10DD2F0", Offset = "0x10DD2F0", VA = "0x10DD2F0", Slot = "11")]
		public SerializationFlags Unpack(byte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x10DD330", Offset = "0x10DD330", VA = "0x10DD330", Slot = "12")]
		public SerializationFlags Pack(sbyte value, sbyte prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x10DD3F0", Offset = "0x10DD3F0", VA = "0x10DD3F0", Slot = "13")]
		public SerializationFlags Unpack(sbyte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x10DD430", Offset = "0x10DD430", VA = "0x10DD430", Slot = "14")]
		public SerializationFlags Pack(ushort value, ushort prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x10DD4F0", Offset = "0x10DD4F0", VA = "0x10DD4F0", Slot = "15")]
		public SerializationFlags Unpack(ushort value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x10DD530", Offset = "0x10DD530", VA = "0x10DD530", Slot = "16")]
		public SerializationFlags Pack(short value, short prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x10DD670", Offset = "0x10DD670", VA = "0x10DD670", Slot = "17")]
		public SerializationFlags Unpack(short value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x10DD6B0", Offset = "0x10DD6B0", VA = "0x10DD6B0", Slot = "44")]
		public SerializationFlags Pack(char value, char prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x10DD770", Offset = "0x10DD770", VA = "0x10DD770", Slot = "45")]
		public SerializationFlags Unpack(char value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x10DD7B0", Offset = "0x10DD7B0", VA = "0x10DD7B0", Slot = "18")]
		public SerializationFlags Pack(uint value, uint prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x10DD870", Offset = "0x10DD870", VA = "0x10DD870", Slot = "19")]
		public SerializationFlags Unpack(uint value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x10DD8B0", Offset = "0x10DD8B0", VA = "0x10DD8B0", Slot = "20")]
		public SerializationFlags Pack(int value, int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x10DD970", Offset = "0x10DD970", VA = "0x10DD970", Slot = "21")]
		public SerializationFlags Unpack(int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x10DD9B0", Offset = "0x10DD9B0", VA = "0x10DD9B0", Slot = "22")]
		public SerializationFlags Pack(ulong value, ulong prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x10DDA70", Offset = "0x10DDA70", VA = "0x10DDA70", Slot = "23")]
		public SerializationFlags Unpack(ulong value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x10DDAB0", Offset = "0x10DDAB0", VA = "0x10DDAB0", Slot = "24")]
		public SerializationFlags Pack(long value, long prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x10DDB70", Offset = "0x10DDB70", VA = "0x10DDB70", Slot = "25")]
		public SerializationFlags Unpack(long value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x10DDBB0", Offset = "0x10DDBB0", VA = "0x10DDBB0", Slot = "26")]
		public SerializationFlags Pack(float value, float prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x10DDE08", Offset = "0x10DDE08", VA = "0x10DDE08", Slot = "27")]
		public SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x10DDE64", Offset = "0x10DDE64", VA = "0x10DDE64", Slot = "28")]
		public SerializationFlags Pack(double value, double prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x10DE0A4", Offset = "0x10DE0A4", VA = "0x10DE0A4", Slot = "29")]
		public SerializationFlags Unpack(double value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x10DE100", Offset = "0x10DE100", VA = "0x10DE100", Slot = "30")]
		public SerializationFlags Pack(string value, string prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x10DE23C", Offset = "0x10DE23C", VA = "0x10DE23C", Slot = "31")]
		public SerializationFlags Unpack(string value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x10DE3A8", Offset = "0x10DE3A8", VA = "0x10DE3A8", Slot = "32")]
		public SerializationFlags Pack(StringBuilder value, StringBuilder prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x10DE4EC", Offset = "0x10DE4EC", VA = "0x10DE4EC", Slot = "33")]
		public SerializationFlags Unpack(StringBuilder value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x10DE5E8", Offset = "0x10DE5E8", VA = "0x10DE5E8", Slot = "34")]
		public SerializationFlags Pack(Vector2 value, Vector2 prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x10DE76C", Offset = "0x10DE76C", VA = "0x10DE76C", Slot = "35")]
		public SerializationFlags Unpack(Vector2 value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x10DE810", Offset = "0x10DE810", VA = "0x10DE810", Slot = "36")]
		public SerializationFlags Pack(Vector3 value, Vector3 prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x10DEA24", Offset = "0x10DEA24", VA = "0x10DEA24", Slot = "37")]
		public SerializationFlags Unpack(Vector3 value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x10DEB14", Offset = "0x10DEB14", VA = "0x10DEB14", Slot = "38")]
		public SerializationFlags Pack(Vector2Int value, Vector2Int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x10DEBF0", Offset = "0x10DEBF0", VA = "0x10DEBF0", Slot = "39")]
		public SerializationFlags Unpack(Vector2Int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x10DEC58", Offset = "0x10DEC58", VA = "0x10DEC58", Slot = "40")]
		public SerializationFlags Pack(Vector3Int value, Vector3Int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x10DED7C", Offset = "0x10DED7C", VA = "0x10DED7C", Slot = "41")]
		public SerializationFlags Unpack(Vector3Int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
	[Token(Token = "0x2000308")]
	public enum KeyRate
	{
		[Token(Token = "0x400153D")]
		UseDefault = -1,
		[Token(Token = "0x400153E")]
		Never = 0,
		[Token(Token = "0x400153F")]
		Every = 1,
		[Token(Token = "0x4001540")]
		Every2nd = 2,
		[Token(Token = "0x4001541")]
		Every3rd = 3,
		[Token(Token = "0x4001542")]
		Every4th = 4,
		[Token(Token = "0x4001543")]
		Every5th = 5,
		[Token(Token = "0x4001544")]
		Every10th = 10
	}
	[Token(Token = "0x2000309")]
	public enum SyncAs
	{
		[Token(Token = "0x4001546")]
		Auto,
		[Token(Token = "0x4001547")]
		State,
		[Token(Token = "0x4001548")]
		Trigger
	}
	[Token(Token = "0x200030A")]
	public enum SetValueTiming
	{
		[Token(Token = "0x400154A")]
		Never,
		[Token(Token = "0x400154B")]
		AfterCallback,
		[Token(Token = "0x400154C")]
		BeforeCallback
	}
	[Token(Token = "0x200030B")]
	public enum IndicatorBit
	{
		[Token(Token = "0x400154E")]
		None,
		[Token(Token = "0x400154F")]
		IsZero
	}
	[Token(Token = "0x200030C")]
	public enum IndicatorBits
	{
		[Token(Token = "0x4001551")]
		None,
		[Token(Token = "0x4001552")]
		IsZero,
		[Token(Token = "0x4001553")]
		IsZeroMidMinMax
	}
	[Token(Token = "0x200030D")]
	public class PackObjectSettings : SettingsScriptableObject<PackObjectSettings>
	{
		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x637AA0", Offset = "0x637AA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x637AA0", Offset = "0x637AA0")]
		public bool autoGenerate;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x637B00", Offset = "0x637B00")]
		public bool deleteBadCode;

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x97119C", Offset = "0x97119C", VA = "0x97119C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x640C38", Offset = "0x640C38")]
		public static void Bootstrap()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x97120C", Offset = "0x97120C", VA = "0x97120C")]
		public PackObjectSettings()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public interface IOnElementCrusherChange
	{
		[Token(Token = "0x6001382")]
		void OnCrusherChange(ElementCrusher ec);
	}
	[Serializable]
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x62E758", Offset = "0x62E758")]
	public class ElementCrusher : Crusher<ElementCrusher>, IEquatable<ElementCrusher>, ICrusherCopy<ElementCrusher>
	{
		[Token(Token = "0x2000310")]
		public enum UniformAxes
		{
			[Token(Token = "0x400157E")]
			NonUniform = 0,
			[Token(Token = "0x400157F")]
			XY = 3,
			[Token(Token = "0x4001580")]
			XZ = 5,
			[Token(Token = "0x4001581")]
			YZ = 6,
			[Token(Token = "0x4001582")]
			XYZ = 7
		}

		[Token(Token = "0x2000311")]
		public enum StaticTRSType
		{
			[Token(Token = "0x4001584")]
			Position,
			[Token(Token = "0x4001585")]
			Euler,
			[Token(Token = "0x4001586")]
			Quaternion,
			[Token(Token = "0x4001587")]
			Scale,
			[Token(Token = "0x4001588")]
			Generic
		}

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<int, ElementCrusher> staticElementCrushers;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly CompressedElement reusableCE;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ElementCrusher defaultUncompressedElementCrusher;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static ElementCrusher defaultUncompressedPosCrusher;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static ElementCrusher defaultUncompressedSclCrusher;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static ElementCrusher defaultHalfFloatElementCrusher;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static ElementCrusher defaultHalfFloatPosCrusher;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static ElementCrusher defaultHalfFloatSclCrusher;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hideFieldName;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private TRSType _trsType;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Transform defaultTransform;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public UniformAxes uniformAxes;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FloatCrusher _xcrusher;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FloatCrusher _ycrusher;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FloatCrusher _zcrusher;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FloatCrusher _ucrusher;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private QuatCrusher _qcrusher;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public bool local;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		private bool useWorldBounds;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[HideInInspector]
		[WorldBoundsSelectAttribute]
		private int boundsGroupId;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public bool enableTRSTypeSelector;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		public bool enableLocalSelector;

		[NonSerialized]
		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool cached;

		[NonSerialized]
		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		private bool cache_xEnabled;

		[NonSerialized]
		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool cache_yEnabled;

		[NonSerialized]
		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool cache_zEnabled;

		[NonSerialized]
		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private bool cache_uEnabled;

		[NonSerialized]
		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		private bool cache_qEnabled;

		[NonSerialized]
		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool cache_isUniformScale;

		[NonSerialized]
		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly int[] cache_xBits;

		[NonSerialized]
		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly int[] cache_yBits;

		[NonSerialized]
		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly int[] cache_zBits;

		[NonSerialized]
		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly int[] cache_uBits;

		[NonSerialized]
		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly int[] cache_TotalBits;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ReadOnlyCollection<int> Cached_TotalBits;

		[NonSerialized]
		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int cache_qBits;

		[NonSerialized]
		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool cache_mustCorrectRotationX;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Bounds bounds;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static ulong[] reusableArray64;

		[Token(Token = "0x1700020C")]
		public TRSType TRSType
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x9BCB90", Offset = "0x9BCB90", VA = "0x9BCB90")]
			get
			{
				return default(TRSType);
			}
			[Token(Token = "0x6001387")]
			[Address(RVA = "0x9BCB98", Offset = "0x9BCB98", VA = "0x9BCB98")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x642D74", Offset = "0x642D74")]
		public FloatCrusher xcrusher
		{
			[Token(Token = "0x6001388")]
			[Address(RVA = "0x9BCBD4", Offset = "0x9BCBD4", VA = "0x9BCBD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001389")]
			[Address(RVA = "0x9BCBDC", Offset = "0x9BCBDC", VA = "0x9BCBDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x642DAC", Offset = "0x642DAC")]
		public FloatCrusher ycrusher
		{
			[Token(Token = "0x600138A")]
			[Address(RVA = "0x9BCBE0", Offset = "0x9BCBE0", VA = "0x9BCBE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600138B")]
			[Address(RVA = "0x9BCBE8", Offset = "0x9BCBE8", VA = "0x9BCBE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x642DE4", Offset = "0x642DE4")]
		public FloatCrusher zcrusher
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x9BCBEC", Offset = "0x9BCBEC", VA = "0x9BCBEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600138D")]
			[Address(RVA = "0x9BCBF4", Offset = "0x9BCBF4", VA = "0x9BCBF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x642E1C", Offset = "0x642E1C")]
		public FloatCrusher ucrusher
		{
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x9BCBF8", Offset = "0x9BCBF8", VA = "0x9BCBF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x9BCC00", Offset = "0x9BCC00", VA = "0x9BCC00")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x642E54", Offset = "0x642E54")]
		public QuatCrusher qcrusher
		{
			[Token(Token = "0x6001390")]
			[Address(RVA = "0x9BCC04", Offset = "0x9BCC04", VA = "0x9BCC04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001391")]
			[Address(RVA = "0x9BCC0C", Offset = "0x9BCC0C", VA = "0x9BCC0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public FloatCrusher XCrusher
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0x9BCC10", Offset = "0x9BCC10", VA = "0x9BCC10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x9BBFF4", Offset = "0x9BBFF4", VA = "0x9BBFF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public FloatCrusher YCrusher
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0x9BD05C", Offset = "0x9BD05C", VA = "0x9BD05C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x9BC188", Offset = "0x9BC188", VA = "0x9BC188")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public FloatCrusher ZCrusher
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0x9BD064", Offset = "0x9BD064", VA = "0x9BD064")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x9BC31C", Offset = "0x9BC31C", VA = "0x9BC31C")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public FloatCrusher UCrusher
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x9BD06C", Offset = "0x9BD06C", VA = "0x9BD06C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x9BC9FC", Offset = "0x9BC9FC", VA = "0x9BC9FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public QuatCrusher QCrusher
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0x9BD074", Offset = "0x9BD074", VA = "0x9BD074")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x9BC7F0", Offset = "0x9BC7F0", VA = "0x9BC7F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		[SerializeField]
		public bool UseWorldBounds
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0x9BD084", Offset = "0x9BD084", VA = "0x9BD084")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600139F")]
			[Address(RVA = "0x9BD08C", Offset = "0x9BD08C", VA = "0x9BD08C")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public int BoundsGroupId
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x9BD3EC", Offset = "0x9BD3EC", VA = "0x9BD3EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x9BD3F4", Offset = "0x9BD3F4", VA = "0x9BD3F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public Bounds Bounds
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x9BDD00", Offset = "0x9BDD00", VA = "0x9BDD00")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x9BDD90", Offset = "0x9BDD90", VA = "0x9BDD90")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public bool Enabled
		{
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x9BDF1C", Offset = "0x9BDF1C", VA = "0x9BDF1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x9BDFBC", Offset = "0x9BDFBC", VA = "0x9BDFBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public FloatCrusher Item
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x9BE06C", Offset = "0x9BE06C", VA = "0x9BE06C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x9BBD50", Offset = "0x9BBD50", VA = "0x9BBD50")]
		public static ElementCrusher GetStaticPositionCrusher(Bounds bounds, int resolution)
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x9BC718", Offset = "0x9BC718", VA = "0x9BC718")]
		public static ElementCrusher GetStaticQuatCrusher(int minBits)
		{
			return null;
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x9BC4B0", Offset = "0x9BC4B0", VA = "0x9BC4B0")]
		public static ElementCrusher CheckAgainstStatics(ElementCrusher ec, bool CheckAgainstFloatCrushersAsWell = true)
		{
			return null;
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x9BD07C", Offset = "0x9BD07C", VA = "0x9BD07C")]
		public void OnCrusherChange(QuatCrusher crusher)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x9BD080", Offset = "0x9BD080", VA = "0x9BD080")]
		public void OnCrusherChange(FloatCrusher crusher)
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x9BD404", Offset = "0x9BD404", VA = "0x9BD404")]
		private void OnWorldBoundsReady()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x9BD428", Offset = "0x9BD428", VA = "0x9BD428")]
		public void ApplyWorldCrusherSettings()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x9BD098", Offset = "0x9BD098", VA = "0x9BD098")]
		public void ApplyWorldCrusherSettings(bool newUseBounds, int newBndsGrpId)
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x9BDBDC", Offset = "0x9BDBDC", VA = "0x9BDBDC")]
		private WorldBoundsGroup GetUsedWorldBounds()
		{
			return null;
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x9BDE68", Offset = "0x9BDE68", VA = "0x9BDE68", Slot = "7")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x9BDE6C", Offset = "0x9BDE6C", VA = "0x9BDE6C", Slot = "6")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x9BCC18", Offset = "0x9BCC18", VA = "0x9BCC18")]
		public void CacheValues()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x9BDE70", Offset = "0x9BDE70", VA = "0x9BDE70")]
		private void NullUnusedCrushers()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x9BE168", Offset = "0x9BE168", VA = "0x9BE168")]
		public ElementCrusher()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x9BBEE4", Offset = "0x9BBEE4", VA = "0x9BBEE4")]
		internal ElementCrusher(StaticTRSType staticTrsType)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x9BE270", Offset = "0x9BE270", VA = "0x9BE270")]
		public ElementCrusher(bool enableTRSTypeSelector = true)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x9BE398", Offset = "0x9BE398", VA = "0x9BE398")]
		public ElementCrusher(TRSType trsType, bool enableTRSTypeSelector = true)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x9BD8C8", Offset = "0x9BD8C8", VA = "0x9BD8C8")]
		public void Defaults(TRSType trs)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x9BE4C0", Offset = "0x9BE4C0", VA = "0x9BE4C0")]
		public void Write(CompressedElement nonalloc, Transform trans, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x9BE8E4", Offset = "0x9BE8E4", VA = "0x9BE8E4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640C4C", Offset = "0x640C4C")]
		public CompressedElement Write(Transform trans, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x9BED04", Offset = "0x9BED04", VA = "0x9BED04")]
		public void Write(CompressedElement ce, byte[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x9BEE40", Offset = "0x9BEE40", VA = "0x9BEE40")]
		public void Write(CompressedElement ce, uint[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x9BEF7C", Offset = "0x9BEF7C", VA = "0x9BEF7C")]
		public void Write(CompressedElement ce, ulong[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x9BF0B8", Offset = "0x9BF0B8", VA = "0x9BF0B8")]
		public void Write(CompressedElement nonalloc, Vector3 v3, byte[] bytes, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x9BF0E0", Offset = "0x9BF0E0", VA = "0x9BF0E0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640C5C", Offset = "0x640C5C")]
		public CompressedElement Write(Vector3 v3, byte[] bytes, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x9BE5EC", Offset = "0x9BE5EC", VA = "0x9BE5EC")]
		public void Write(CompressedElement nonalloc, Vector3 v3, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x9BE9F8", Offset = "0x9BE9F8", VA = "0x9BE9F8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640C6C", Offset = "0x640C6C")]
		public CompressedElement Write(Vector3 v3, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x9BE844", Offset = "0x9BE844", VA = "0x9BE844")]
		public void Write(CompressedElement nonalloc, Quaternion quat, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x9BEC2C", Offset = "0x9BEC2C", VA = "0x9BEC2C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640C7C", Offset = "0x640C7C")]
		public CompressedElement Write(Quaternion quat, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x9BF108", Offset = "0x9BF108", VA = "0x9BF108")]
		public void Write(CompressedElement nonalloc, Transform trans, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x9BF234", Offset = "0x9BF234", VA = "0x9BF234")]
		public void Write(CompressedElement nonalloc, Vector3 v3, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x9BF48C", Offset = "0x9BF48C", VA = "0x9BF48C")]
		public void Write(CompressedElement nonalloc, Quaternion quat, ulong[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x9BF52C", Offset = "0x9BF52C", VA = "0x9BF52C")]
		public void Read(CompressedElement nonalloc, byte[] bytes, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x9BF7E8", Offset = "0x9BF7E8", VA = "0x9BF7E8")]
		public CompressedElement Read(byte[] buffer, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x9BF558", Offset = "0x9BF558", VA = "0x9BF558")]
		public void Read(CompressedElement nonalloc, byte[] bytes, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x9BF89C", Offset = "0x9BF89C", VA = "0x9BF89C")]
		public CompressedElement Read(byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x9BF940", Offset = "0x9BF940", VA = "0x9BF940")]
		public void Read(CompressedElement nonalloc, ulong[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x9BFBD0", Offset = "0x9BFBD0", VA = "0x9BFBD0")]
		public void Read(CompressedElement nonalloc, uint[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x9BFE60", Offset = "0x9BFE60", VA = "0x9BFE60")]
		public Element ReadAndDecompress(byte[] bytes, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x9C007C", Offset = "0x9C007C", VA = "0x9C007C")]
		public void Write(CompressedElement nonalloc, Transform trans, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x9C03A8", Offset = "0x9C03A8", VA = "0x9C03A8")]
		public void Write(Transform trans, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x9C063C", Offset = "0x9C063C", VA = "0x9C063C")]
		public void Write(CompressedElement nonalloc, Vector3 v3, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x9C0664", Offset = "0x9C0664", VA = "0x9C0664")]
		public void Write(Vector3 v3, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x9C01A8", Offset = "0x9C01A8", VA = "0x9C01A8")]
		public void Write(CompressedElement nonalloc, Vector3 v3, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x9C04BC", Offset = "0x9C04BC", VA = "0x9C04BC")]
		public void Write(Vector3 v3, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x9C068C", Offset = "0x9C068C", VA = "0x9C068C")]
		public void Write(CompressedElement nonalloc, Quaternion quat, ulong buffer)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x9C06B0", Offset = "0x9C06B0", VA = "0x9C06B0")]
		public void Write(Quaternion quat, ulong buffer)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x9C02F8", Offset = "0x9C02F8", VA = "0x9C02F8")]
		public void Write(CompressedElement nonalloc, Quaternion quat, ulong buffer, int bitposition)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x9C0598", Offset = "0x9C0598", VA = "0x9C0598")]
		public void Write(Quaternion quat, ulong buffer, int bitposition)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x9C06D4", Offset = "0x9C06D4", VA = "0x9C06D4")]
		public CompressedElement Write(CompressedElement ce, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x9C06FC", Offset = "0x9C06FC", VA = "0x9C06FC")]
		public CompressedElement Write(CompressedElement ce, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x9C0860", Offset = "0x9C0860", VA = "0x9C0860")]
		public Element Read(ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x9C09C0", Offset = "0x9C09C0", VA = "0x9C09C0")]
		public Element Read(ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x9C0B1C", Offset = "0x9C0B1C", VA = "0x9C0B1C")]
		public void Read(CompressedElement nonalloc, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x9C0B44", Offset = "0x9C0B44", VA = "0x9C0B44")]
		public void Read(CompressedElement nonalloc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x9C0DB8", Offset = "0x9C0DB8", VA = "0x9C0DB8")]
		public void Read(CompressedElement nonalloc, ulong frag0, ulong frag1 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x9C0EBC", Offset = "0x9C0EBC", VA = "0x9C0EBC")]
		public CompressedElement Read(ulong frag0, ulong frag1 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x9C0F60", Offset = "0x9C0F60", VA = "0x9C0F60")]
		public void Compress(CompressedElement nonalloc, Transform trans)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x9C13A0", Offset = "0x9C13A0", VA = "0x9C13A0")]
		public CompressedElement Compress(Transform trans)
		{
			return null;
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x9C142C", Offset = "0x9C142C", VA = "0x9C142C")]
		public void CompressAndWrite(Transform trans, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x9C1860", Offset = "0x9C1860", VA = "0x9C1860")]
		public void Compress(CompressedElement nonalloc, Element e)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x9C1884", Offset = "0x9C1884", VA = "0x9C1884")]
		public CompressedElement Compress(Element e)
		{
			return null;
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x9C196C", Offset = "0x9C196C", VA = "0x9C196C")]
		public void CompressAndWrite(Element e, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x9C199C", Offset = "0x9C199C", VA = "0x9C199C")]
		public void Compress(CompressedElement nonalloc, Rigidbody rb, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x9C1070", Offset = "0x9C1070", VA = "0x9C1070")]
		public void Compress(CompressedElement nonalloc, Vector3 v, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x9C1DE8", Offset = "0x9C1DE8", VA = "0x9C1DE8")]
		public CompressedElement Compress(Vector3 v)
		{
			return null;
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x9C1550", Offset = "0x9C1550", VA = "0x9C1550")]
		public void CompressAndWrite(Vector3 v, byte[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x9C12FC", Offset = "0x9C12FC", VA = "0x9C12FC")]
		public void Compress(CompressedElement nonalloc, Quaternion quat)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x9C1E98", Offset = "0x9C1E98", VA = "0x9C1E98")]
		public CompressedElement Compress(Quaternion quat)
		{
			return null;
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x9C17AC", Offset = "0x9C17AC", VA = "0x9C17AC")]
		public void CompressAndWrite(Quaternion quat, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x9BFF3C", Offset = "0x9BFF3C", VA = "0x9BFF3C")]
		public Element Decompress(CompressedElement compressed)
		{
			return default(Element);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x9C1F4C", Offset = "0x9C1F4C", VA = "0x9C1F4C")]
		public Element Decompress(ulong cval, IncludedAxes ia = IncludedAxes.XYZ)
		{
			return default(Element);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x9C20A4", Offset = "0x9C20A4", VA = "0x9C20A4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640C8C", Offset = "0x640C8C")]
		public void Apply(Rigidbody rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x9C20F8", Offset = "0x9C20F8", VA = "0x9C20F8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640CC4", Offset = "0x640CC4")]
		public void Apply(Rigidbody rb, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x9C2480", Offset = "0x9C2480", VA = "0x9C2480")]
		public void Move(Rigidbody rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x9C24D4", Offset = "0x9C24D4", VA = "0x9C24D4")]
		public void Move(Rigidbody rb, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x9C2898", Offset = "0x9C2898", VA = "0x9C2898")]
		public void Set(Rigidbody rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x9C2C88", Offset = "0x9C2C88", VA = "0x9C2C88")]
		public void Set(Rigidbody2D rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x9C28EC", Offset = "0x9C28EC", VA = "0x9C28EC")]
		public void Set(Rigidbody rb, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x9C2CDC", Offset = "0x9C2CDC", VA = "0x9C2CDC")]
		public void Set(Rigidbody2D rb2d, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x9C3048", Offset = "0x9C3048", VA = "0x9C3048")]
		public void Apply(Transform trans, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x9C309C", Offset = "0x9C309C", VA = "0x9C309C")]
		public void Apply(Transform trans, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x9C3640", Offset = "0x9C3640", VA = "0x9C3640")]
		public Vector3 Clamp(Vector3 v3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x9C3808", Offset = "0x9C3808", VA = "0x9C3808")]
		public BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x9C39B8", Offset = "0x9C39B8", VA = "0x9C39B8")]
		private bool TestMatchingUpper(uint a, uint b, int lowerbits)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x9C38DC", Offset = "0x9C38DC", VA = "0x9C38DC")]
		public bool TestMatchingUpper(CompressedElement a, CompressedElement b, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x9C39D0", Offset = "0x9C39D0", VA = "0x9C39D0")]
		public int TallyBits(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x9C3B68", Offset = "0x9C3B68", VA = "0x9C3B68", Slot = "9")]
		public void CopyFrom(ElementCrusher src)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x9C3CAC", Offset = "0x9C3CAC", VA = "0x9C3CAC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x9C3D74", Offset = "0x9C3D74", VA = "0x9C3D74", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x9C3E00", Offset = "0x9C3E00", VA = "0x9C3E00", Slot = "8")]
		public bool Equals(ElementCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x9C4084", Offset = "0x9C4084", VA = "0x9C4084", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x9C4230", Offset = "0x9C4230", VA = "0x9C4230")]
		public static bool operator ==(ElementCrusher crusher1, ElementCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x9C4008", Offset = "0x9C4008", VA = "0x9C4008")]
		public static bool operator !=(ElementCrusher crusher1, ElementCrusher crusher2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000312")]
	public static class FloatCrusherExtensions
	{
		[Token(Token = "0x6001401")]
		[Address(RVA = "0x8E9D64", Offset = "0x8E9D64", VA = "0x8E9D64")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x8E9DF8", Offset = "0x8E9DF8", VA = "0x8E9DF8")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, uint buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x8E9E8C", Offset = "0x8E9E8C", VA = "0x8E9E8C")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ushort buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x8E9F20", Offset = "0x8E9F20", VA = "0x8E9F20")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, byte buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x8E9FB4", Offset = "0x8E9FB4", VA = "0x8E9FB4")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x8EA024", Offset = "0x8EA024", VA = "0x8EA024")]
		public static float ReadAndDecompress(this FloatCrusher fc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(float);
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x8EA090", Offset = "0x8EA090", VA = "0x8EA090")]
		public static CompressedFloat Read(this FloatCrusher fc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x8EA114", Offset = "0x8EA114", VA = "0x8EA114")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640D6C", Offset = "0x640D6C")]
		public static CompressedFloat Read(this FloatCrusher fc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x8EA1B4", Offset = "0x8EA1B4", VA = "0x8EA1B4")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x8EA224", Offset = "0x8EA224", VA = "0x8EA224")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x8EA294", Offset = "0x8EA294", VA = "0x8EA294")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x8EA304", Offset = "0x8EA304", VA = "0x8EA304")]
		public static CompressedFloat Write(this FloatCrusher fc, uint c, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x8EA390", Offset = "0x8EA390", VA = "0x8EA390")]
		public static CompressedFloat Write(this FloatCrusher fc, uint c, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x8EA41C", Offset = "0x8EA41C", VA = "0x8EA41C")]
		public static CompressedFloat Write(this FloatCrusher fc, uint c, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x8EA4A8", Offset = "0x8EA4A8", VA = "0x8EA4A8")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x8EA558", Offset = "0x8EA558", VA = "0x8EA558")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x8EA60C", Offset = "0x8EA60C", VA = "0x8EA60C")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x8EA6C0", Offset = "0x8EA6C0", VA = "0x8EA6C0")]
		public static CompressedFloat Read(this FloatCrusher fc, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x8EA744", Offset = "0x8EA744", VA = "0x8EA744")]
		public static CompressedFloat Read(this FloatCrusher fc, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x8EA7C8", Offset = "0x8EA7C8", VA = "0x8EA7C8")]
		public static CompressedFloat Read(this FloatCrusher fc, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x8EA84C", Offset = "0x8EA84C", VA = "0x8EA84C")]
		public static float ReadAndDecompress(this FloatCrusher fc, byte[] buffer, int bitposition)
		{
			return default(float);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x8EA8B0", Offset = "0x8EA8B0", VA = "0x8EA8B0")]
		public static float ReadAndDecompress(this FloatCrusher fc, uint[] buffer, int bitposition)
		{
			return default(float);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x8EA914", Offset = "0x8EA914", VA = "0x8EA914")]
		public static float ReadAndDecompress(this FloatCrusher fc, ulong[] buffer, int bitposition)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000313")]
	public enum CompressLevel
	{
		[Token(Token = "0x400158A")]
		SetBits = -1,
		[Token(Token = "0x400158B")]
		Disabled = 0,
		[Token(Token = "0x400158C")]
		uint16Low = 16,
		[Token(Token = "0x400158D")]
		uint32Med = 32,
		[Token(Token = "0x400158E")]
		uint64Hi = 64
	}
	[Serializable]
	[Token(Token = "0x2000314")]
	public class QuatCrusher : Crusher<QuatCrusher>, IEquatable<QuatCrusher>, ICrusherCopy<QuatCrusher>
	{
		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool QC_ISPRO;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x637C40", Offset = "0x637C40")]
		private int bits;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public CompressLevel _compressLevel;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Transform transform;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public bool local;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[HideInInspector]
		public bool isStandalone;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		public bool showEnableToggle;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[SerializeField]
		private bool enabled;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private QuatCompress.Cache cache;

		[NonSerialized]
		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool initialized;

		[Token(Token = "0x1700021C")]
		public int Bits
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0xC676E0", Offset = "0xC676E0", VA = "0xC676E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001419")]
			[Address(RVA = "0xC677D4", Offset = "0xC677D4", VA = "0xC677D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public CompressLevel CompressLevel
		{
			[Token(Token = "0x600141A")]
			[Address(RVA = "0xC679FC", Offset = "0xC679FC", VA = "0xC679FC")]
			get
			{
				return default(CompressLevel);
			}
			[Token(Token = "0x600141B")]
			[Address(RVA = "0xC678E0", Offset = "0xC678E0", VA = "0xC678E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		[SerializeField]
		public bool Enabled
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0xC67A04", Offset = "0xC67A04", VA = "0xC67A04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600141D")]
			[Address(RVA = "0xC67A0C", Offset = "0xC67A0C", VA = "0xC67A0C")]
			set
			{
			}
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xC67A84", Offset = "0xC67A84", VA = "0xC67A84")]
		public QuatCrusher()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xC67AF0", Offset = "0xC67AF0", VA = "0xC67AF0")]
		public QuatCrusher(int bits, bool showEnableToggle = false, bool isStandalone = true)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xC67C00", Offset = "0xC67C00", VA = "0xC67C00")]
		public QuatCrusher(bool showEnableToggle = false, bool isStandalone = true)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xC67CCC", Offset = "0xC67CCC", VA = "0xC67CCC")]
		public QuatCrusher(CompressLevel compressLevel, bool showEnableToggle = false, bool isStandalone = true)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xC67D54", Offset = "0xC67D54", VA = "0xC67D54")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xC67E0C", Offset = "0xC67E0C", VA = "0xC67E0C", Slot = "7")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xC67E10", Offset = "0xC67E10", VA = "0xC67E10", Slot = "6")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xC677A4", Offset = "0xC677A4", VA = "0xC677A4")]
		public static int RoundBitsToBestPreset(int bits)
		{
			return default(int);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xC67E70", Offset = "0xC67E70", VA = "0xC67E70")]
		public ulong Compress()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xC67FCC", Offset = "0xC67FCC", VA = "0xC67FCC")]
		public ulong Compress(Quaternion quat)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xC6809C", Offset = "0xC6809C", VA = "0xC6809C")]
		public Quaternion Decompress(ulong compressed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xC6814C", Offset = "0xC6814C", VA = "0xC6814C")]
		public ulong Write(Quaternion quat, byte[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xC6819C", Offset = "0xC6819C", VA = "0xC6819C")]
		public ulong Write(Quaternion quat, uint[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xC681EC", Offset = "0xC681EC", VA = "0xC681EC")]
		public ulong Write(Quaternion quat, ulong[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xC6823C", Offset = "0xC6823C", VA = "0xC6823C")]
		public ulong Write(ulong c, byte[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xC68274", Offset = "0xC68274", VA = "0xC68274")]
		public ulong Write(ulong c, uint[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xC682AC", Offset = "0xC682AC", VA = "0xC682AC")]
		public ulong Write(ulong c, ulong[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xC682E4", Offset = "0xC682E4", VA = "0xC682E4")]
		public Quaternion Read(byte[] buffer, int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xC68320", Offset = "0xC68320", VA = "0xC68320")]
		public Quaternion Read(uint[] buffer, int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xC6835C", Offset = "0xC6835C", VA = "0xC6835C")]
		public Quaternion Read(ulong[] buffer, int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xC68398", Offset = "0xC68398", VA = "0xC68398")]
		public ulong Write(Quaternion quat, ulong buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xC683E4", Offset = "0xC683E4", VA = "0xC683E4")]
		public Quaternion Read(ulong buffer, int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xC68420", Offset = "0xC68420", VA = "0xC68420", Slot = "9")]
		public void CopyFrom(QuatCrusher source)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xC68450", Offset = "0xC68450", VA = "0xC68450", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xC684DC", Offset = "0xC684DC", VA = "0xC684DC", Slot = "8")]
		public bool Equals(QuatCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xC6861C", Offset = "0xC6861C", VA = "0xC6861C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xC6868C", Offset = "0xC6868C", VA = "0xC6868C")]
		public static bool operator ==(QuatCrusher crusher1, QuatCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xC685A0", Offset = "0xC685A0", VA = "0xC685A0")]
		public static bool operator !=(QuatCrusher crusher1, QuatCrusher crusher2)
		{
			return default(bool);
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x62E7A0", Offset = "0x62E7A0")]
	public class CompressedElement : IEquatable<CompressedElement>
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CompressedElement reusable;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedFloat cx;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompressedFloat cy;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CompressedFloat cz;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedFloat cUniform;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedQuat cQuat;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ElementCrusher crusher;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ulong[] reusableArray64;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly uint[] reusableArray32;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly byte[] reusableArray8;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x637CE4", Offset = "0x637CE4")]
		public static readonly CompressedElement Empty;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static CompressedElement uppers;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static CompressedElement lowers;

		[Token(Token = "0x1700021F")]
		public uint Item
		{
			[Token(Token = "0x6001457")]
			[Address(RVA = "0xAEC9C4", Offset = "0xAEC9C4", VA = "0xAEC9C4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xAEB480", Offset = "0xAEB480", VA = "0xAEB480")]
		public void Clear()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xAEB534", Offset = "0xAEB534", VA = "0xAEB534")]
		public ulong[] AsArray64(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xAEB6A8", Offset = "0xAEB6A8", VA = "0xAEB6A8")]
		public void AsArray64(ulong[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xAEB7B4", Offset = "0xAEB7B4", VA = "0xAEB7B4")]
		public uint[] AsArray32(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xAEB928", Offset = "0xAEB928", VA = "0xAEB928")]
		public void AsArray32(uint[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xAEBA34", Offset = "0xAEBA34", VA = "0xAEBA34")]
		public byte[] AsArray8(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xAEBBA8", Offset = "0xAEBBA8", VA = "0xAEBBA8")]
		public void AsArray8(byte[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xAEBCB4", Offset = "0xAEBCB4", VA = "0xAEBCB4")]
		public static explicit operator ulong(CompressedElement ce)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xAEBCF8", Offset = "0xAEBCF8", VA = "0xAEBCF8")]
		public static explicit operator uint(CompressedElement ce)
		{
			return default(uint);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xAEBD3C", Offset = "0xAEBD3C", VA = "0xAEBD3C")]
		public static explicit operator ushort(CompressedElement ce)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xAEBD80", Offset = "0xAEBD80", VA = "0xAEBD80")]
		public static explicit operator byte(CompressedElement ce)
		{
			return default(byte);
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xAEBDC4", Offset = "0xAEBDC4", VA = "0xAEBDC4")]
		public static explicit operator ulong[](CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xAEBE54", Offset = "0xAEBE54", VA = "0xAEBE54")]
		public static explicit operator uint[](CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xAEBEE4", Offset = "0xAEBEE4", VA = "0xAEBEE4")]
		public static explicit operator byte[](CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xAEBF74", Offset = "0xAEBF74", VA = "0xAEBF74")]
		public static explicit operator Element(CompressedElement ce)
		{
			return default(Element);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xAEC008", Offset = "0xAEC008", VA = "0xAEC008")]
		public static explicit operator Vector3(CompressedElement ce)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xAEC0D8", Offset = "0xAEC0D8", VA = "0xAEC0D8")]
		public static explicit operator Quaternion(CompressedElement ce)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xAEC2A4", Offset = "0xAEC2A4", VA = "0xAEC2A4")]
		public CompressedElement()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xAEC2AC", Offset = "0xAEC2AC", VA = "0xAEC2AC")]
		public CompressedElement(ElementCrusher crusher, CompressedFloat cx, CompressedFloat cy, CompressedFloat cz)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xAEC34C", Offset = "0xAEC34C", VA = "0xAEC34C")]
		public CompressedElement(ElementCrusher crusher, uint cx, uint cy, uint cz)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xAEC4A0", Offset = "0xAEC4A0", VA = "0xAEC4A0")]
		public CompressedElement(ElementCrusher crusher, uint cUniform)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xAEC58C", Offset = "0xAEC58C", VA = "0xAEC58C")]
		public CompressedElement(ElementCrusher crusher, ulong cQuat)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xAEC6A4", Offset = "0xAEC6A4", VA = "0xAEC6A4")]
		public void Set(ElementCrusher crusher, CompressedFloat cx, CompressedFloat cy, CompressedFloat cz)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xAEC730", Offset = "0xAEC730", VA = "0xAEC730")]
		public void Set(ElementCrusher crusher, uint cx, uint cy, uint cz)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xAEC808", Offset = "0xAEC808", VA = "0xAEC808")]
		public void Set(ElementCrusher crusher, uint cUniform)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xAEC878", Offset = "0xAEC878", VA = "0xAEC878")]
		public void Set(ElementCrusher crusher, ulong cQuat)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xAEC8E8", Offset = "0xAEC8E8", VA = "0xAEC8E8")]
		public void CopyTo(CompressedElement copyTarget)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xAEC958", Offset = "0xAEC958", VA = "0xAEC958")]
		public void CopyFrom(CompressedElement copySource)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xAEC9EC", Offset = "0xAEC9EC", VA = "0xAEC9EC")]
		public uint GetUInt(int axis)
		{
			return default(uint);
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xAEBFB8", Offset = "0xAEBFB8", VA = "0xAEBFB8")]
		public Element Decompress()
		{
			return default(Element);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xAECA14", Offset = "0xAECA14", VA = "0xAECA14")]
		public void Serialize(byte[] buffer, int bitposition, IncludedAxes ia, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xAECA4C", Offset = "0xAECA4C", VA = "0xAECA4C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640EA8", Offset = "0x640EA8")]
		public static bool Compare(CompressedElement a, CompressedElement b)
		{
			return default(bool);
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xAECB00", Offset = "0xAECB00", VA = "0xAECB00")]
		public static int HighestDifferentBit(uint a, uint b)
		{
			return default(int);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xAECB30", Offset = "0xAECB30", VA = "0xAECB30")]
		public static void Extrapolate(ElementCrusher crusher, CompressedElement target, CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xAECBA8", Offset = "0xAECBA8", VA = "0xAECBA8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640EE0", Offset = "0x640EE0")]
		public static CompressedElement Extrapolate(ElementCrusher crusher, CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
			return null;
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xAECC88", Offset = "0xAECC88", VA = "0xAECC88")]
		public static void Extrapolate(CompressedElement target, CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xAECCF8", Offset = "0xAECCF8", VA = "0xAECCF8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640EF0", Offset = "0x640EF0")]
		public static CompressedElement Extrapolate(CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
			return null;
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xAECDD4", Offset = "0xAECDD4", VA = "0xAECDD4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640F00", Offset = "0x640F00")]
		public static void Extrapolate(ElementCrusher crusher, CompressedElement target, CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xAECF00", Offset = "0xAECF00", VA = "0xAECF00")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640F10", Offset = "0x640F10")]
		public static CompressedElement Extrapolate(ElementCrusher crusher, CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xAED068", Offset = "0xAED068", VA = "0xAED068")]
		public static void Extrapolate(CompressedElement target, CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xAED194", Offset = "0xAED194", VA = "0xAED194")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640F20", Offset = "0x640F20")]
		public static CompressedElement Extrapolate(CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xAED2FC", Offset = "0xAED2FC", VA = "0xAED2FC")]
		public static BitCullingLevel GetGuessableBitCullLevel(CompressedElement a, CompressedElement b, BitCullingLevel maxCullLvl)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xAED6E8", Offset = "0xAED6E8", VA = "0xAED6E8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640F30", Offset = "0x640F30")]
		public static BitCullingLevel GetGuessableBitCullLevel(CompressedElement oldComp, CompressedElement newComp, ElementCrusher ec, BitCullingLevel maxCullLvl)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xAED934", Offset = "0xAED934", VA = "0xAED934")]
		public static BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xAEDC74", Offset = "0xAEDC74", VA = "0xAEDC74")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640F40", Offset = "0x640F40")]
		public static BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, ElementCrusher ec, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xAEDF60", Offset = "0xAEDF60", VA = "0xAEDF60")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640F50", Offset = "0x640F50")]
		public static BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, FloatCrusher[] ec, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xAEE220", Offset = "0xAEE220", VA = "0xAEE220")]
		private static bool TestMatchingUpper(uint a, uint b, int lowerbits)
		{
			return default(bool);
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xAEDB04", Offset = "0xAEDB04", VA = "0xAEDB04")]
		public static bool TestMatchingUpper(CompressedElement a, CompressedElement b, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xAEDDCC", Offset = "0xAEDDCC", VA = "0xAEDDCC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640F60", Offset = "0x640F60")]
		public static bool TestMatchingUpper(CompressedElement a, CompressedElement b, ElementCrusher ec, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xAEE084", Offset = "0xAEE084", VA = "0xAEE084")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640F70", Offset = "0x640F70")]
		public static bool TestMatchingUpper(CompressedElement a, CompressedElement b, FloatCrusher[] ec, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xAEE238", Offset = "0xAEE238", VA = "0xAEE238", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xAEE900", Offset = "0xAEE900", VA = "0xAEE900")]
		public static bool operator ==(CompressedElement a, CompressedElement b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xAEE95C", Offset = "0xAEE95C", VA = "0xAEE95C")]
		public static bool operator !=(CompressedElement a, CompressedElement b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xAEE9B8", Offset = "0xAEE9B8", VA = "0xAEE9B8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xAECAB0", Offset = "0xAECAB0", VA = "0xAECAB0", Slot = "4")]
		public bool Equals(CompressedElement other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xAEEA80", Offset = "0xAEEA80", VA = "0xAEEA80", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000316")]
	public static class CompressedElementExt
	{
		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static uint[] reusableInts;

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xAEEDC0", Offset = "0xAEEDC0", VA = "0xAEEDC0")]
		public static StringBuilder AppendSB(this StringBuilder strb, CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xAEF0D4", Offset = "0xAEF0D4", VA = "0xAEF0D4")]
		public static void GetChangeAmount(uint[] results, CompressedElement a, CompressedElement b)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xAEF1D0", Offset = "0xAEF1D0", VA = "0xAEF1D0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640F90", Offset = "0x640F90")]
		public static uint[] GetChangeAmount(CompressedElement a, CompressedElement b)
		{
			return null;
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xAEF338", Offset = "0xAEF338", VA = "0xAEF338")]
		public static void GuessUpperBits(this CompressedElement newcpos, ElementCrusher ec, CompressedElement oldcpos, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xAEF414", Offset = "0xAEF414", VA = "0xAEF414")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640FB0", Offset = "0x640FB0")]
		public static CompressedElement GuessUpperBits(this CompressedElement newcpos, CompressedElement oldcpos, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xAEF530", Offset = "0xAEF530", VA = "0xAEF530")]
		public static void OverwriteUpperBits(this CompressedElement low, CompressedElement uppers, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xAEF610", Offset = "0xAEF610", VA = "0xAEF610")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x640FF8", Offset = "0x640FF8")]
		public static CompressedElement OverwriteUpperBits(this CompressedElement low, CompressedElement up, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xAED548", Offset = "0xAED548", VA = "0xAED548")]
		public static void ZeroLowerBits(this CompressedElement fullpos, CompressedElement target, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xAEF750", Offset = "0xAEF750", VA = "0xAEF750")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641040", Offset = "0x641040")]
		public static CompressedElement ZeroLowerBits(this CompressedElement fullpos, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xAED618", Offset = "0xAED618", VA = "0xAED618")]
		public static void ZeroUpperBits(this CompressedElement fullpos, CompressedElement target, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xAEF87C", Offset = "0xAEF87C", VA = "0xAEF87C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641088", Offset = "0x641088")]
		public static CompressedElement ZeroUpperBits(this CompressedElement fullpos, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}
	}
	[Token(Token = "0x2000317")]
	public class CompressedMatrix : IEquatable<CompressedMatrix>
	{
		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedElement cPos;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CompressedElement cRot;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompressedElement cScl;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TransformCrusher crusher;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CompressedMatrix reusable;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static readonly ulong[] reusableArray64;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly uint[] reusableArray32;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly byte[] reusableArray8;

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xAEFA24", Offset = "0xAEFA24", VA = "0xAEFA24")]
		public CompressedMatrix()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xAEFAE4", Offset = "0xAEFAE4", VA = "0xAEFAE4")]
		public CompressedMatrix(TransformCrusher crusher)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xAEFBB8", Offset = "0xAEFBB8", VA = "0xAEFBB8")]
		public CompressedMatrix(TransformCrusher crusher, CompressedElement cPos, CompressedElement cRot, CompressedElement cScl)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xAEFCEC", Offset = "0xAEFCEC", VA = "0xAEFCEC")]
		public CompressedMatrix(TransformCrusher crusher, CompressedElement cPos, CompressedElement cRot, CompressedElement cScl, int pBits, int rBits, int sBits)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xAEFE20", Offset = "0xAEFE20", VA = "0xAEFE20")]
		public void CopyTo(CompressedMatrix copyTarget)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xAEFE74", Offset = "0xAEFE74", VA = "0xAEFE74")]
		public void CopyFrom(CompressedMatrix copySource)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xAEFEC8", Offset = "0xAEFEC8", VA = "0xAEFEC8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xAEFF1C", Offset = "0xAEFF1C", VA = "0xAEFF1C")]
		public ulong[] AsArray64(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xAEFFEC", Offset = "0xAEFFEC", VA = "0xAEFFEC")]
		public void AsArray64(ulong[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xAF004C", Offset = "0xAF004C", VA = "0xAF004C")]
		public uint[] AsArray32(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xAF011C", Offset = "0xAF011C", VA = "0xAF011C")]
		public void AsArray32(uint[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xAF017C", Offset = "0xAF017C", VA = "0xAF017C")]
		public byte[] AsArray8(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xAF024C", Offset = "0xAF024C", VA = "0xAF024C")]
		public void AsArray8(byte[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xAF02AC", Offset = "0xAF02AC", VA = "0xAF02AC")]
		public static explicit operator ulong(CompressedMatrix cm)
		{
			return default(ulong);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xAF02F8", Offset = "0xAF02F8", VA = "0xAF02F8")]
		public static explicit operator uint(CompressedMatrix cm)
		{
			return default(uint);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xAF0344", Offset = "0xAF0344", VA = "0xAF0344")]
		public static explicit operator ushort(CompressedMatrix cm)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xAF0390", Offset = "0xAF0390", VA = "0xAF0390")]
		public static explicit operator byte(CompressedMatrix cm)
		{
			return default(byte);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xAF03DC", Offset = "0xAF03DC", VA = "0xAF03DC")]
		public static explicit operator ulong[](CompressedMatrix cm)
		{
			return null;
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xAF03F4", Offset = "0xAF03F4", VA = "0xAF03F4")]
		public static explicit operator uint[](CompressedMatrix cm)
		{
			return null;
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xAF040C", Offset = "0xAF040C", VA = "0xAF040C")]
		public static explicit operator byte[](CompressedMatrix cm)
		{
			return null;
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xAF0424", Offset = "0xAF0424", VA = "0xAF0424")]
		public void Decompress(Matrix nonalloc)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xAF04D8", Offset = "0xAF04D8", VA = "0xAF04D8")]
		public Matrix Decompress()
		{
			return null;
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xAF0570", Offset = "0xAF0570", VA = "0xAF0570")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6410C0", Offset = "0x6410C0")]
		public void Apply()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xAF0610", Offset = "0xAF0610", VA = "0xAF0610")]
		public void Apply(Transform t)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xAF06B8", Offset = "0xAF06B8", VA = "0xAF06B8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6410F8", Offset = "0x6410F8")]
		public void Apply(Rigidbody rb)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xAF0760", Offset = "0xAF0760", VA = "0xAF0760")]
		public void Set(Rigidbody rb)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xAF0808", Offset = "0xAF0808", VA = "0xAF0808")]
		public void Move(Rigidbody rb)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xAF08B0", Offset = "0xAF08B0", VA = "0xAF08B0")]
		public static bool operator ==(CompressedMatrix a, CompressedMatrix b)
		{
			return default(bool);
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xAF09CC", Offset = "0xAF09CC", VA = "0xAF09CC")]
		public static bool operator !=(CompressedMatrix a, CompressedMatrix b)
		{
			return default(bool);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xAF09F4", Offset = "0xAF09F4", VA = "0xAF09F4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xAF08BC", Offset = "0xAF08BC", VA = "0xAF08BC", Slot = "4")]
		public bool Equals(CompressedMatrix other)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xAF0A80", Offset = "0xAF0A80", VA = "0xAF0A80", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000318")]
	public struct CompressedQuat
	{
		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly QuatCrusher crusher;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong cvalue;

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xAEC678", Offset = "0xAEC678", VA = "0xAEC678")]
		public CompressedQuat(QuatCrusher crusher, ulong cvalue)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xAF0C7C", Offset = "0xAF0C7C", VA = "0xAF0C7C")]
		public CompressedQuat(QuatCrusher crusher, uint cvalue)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xAF0CAC", Offset = "0xAF0CAC", VA = "0xAF0CAC")]
		public CompressedQuat(QuatCrusher crusher, ushort cvalue)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xAF0CDC", Offset = "0xAF0CDC", VA = "0xAF0CDC")]
		public CompressedQuat(QuatCrusher crusher, byte cvalue)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xAF0D0C", Offset = "0xAF0D0C", VA = "0xAF0D0C")]
		public static implicit operator ulong(CompressedQuat cv)
		{
			return default(ulong);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xAF0D14", Offset = "0xAF0D14", VA = "0xAF0D14")]
		public static explicit operator uint(CompressedQuat cv)
		{
			return default(uint);
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xAF0D1C", Offset = "0xAF0D1C", VA = "0xAF0D1C")]
		public static explicit operator ushort(CompressedQuat cv)
		{
			return default(ushort);
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xAF0D24", Offset = "0xAF0D24", VA = "0xAF0D24")]
		public static explicit operator byte(CompressedQuat cv)
		{
			return default(byte);
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xAF0D2C", Offset = "0xAF0D2C", VA = "0xAF0D2C")]
		public Quaternion Decompress()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xAF0D54", Offset = "0xAF0D54", VA = "0xAF0D54", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x2000319")]
	public struct Element : IEquatable<Element>
	{
		[Token(Token = "0x200031A")]
		public enum VectorType
		{
			[Token(Token = "0x40015B5")]
			Vector3 = 1,
			[Token(Token = "0x40015B6")]
			Quaternion
		}

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VectorType vectorType;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 v;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Quaternion quat;

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x9BB648", Offset = "0x9BB648", VA = "0x9BB648")]
		public Element(Vector3 v)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x9BB660", Offset = "0x9BB660", VA = "0x9BB660")]
		public Element(Quaternion quat)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x9BB674", Offset = "0x9BB674", VA = "0x9BB674")]
		public static explicit operator Quaternion(Element e)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x9BB6A8", Offset = "0x9BB6A8", VA = "0x9BB6A8")]
		public static explicit operator Vector3(Element e)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x9BB6DC", Offset = "0x9BB6DC", VA = "0x9BB6DC")]
		public static Element Slerp(Element a, Element b, float t)
		{
			return default(Element);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x9BB84C", Offset = "0x9BB84C", VA = "0x9BB84C")]
		public static Element SlerpUnclamped(Element a, Element b, float t)
		{
			return default(Element);
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x9BB990", Offset = "0x9BB990", VA = "0x9BB990")]
		public static bool operator ==(Element a, Element b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x9BBA14", Offset = "0x9BBA14", VA = "0x9BBA14")]
		public static bool operator !=(Element a, Element b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x9BBA8C", Offset = "0x9BBA8C", VA = "0x9BBA8C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x9BBB28", Offset = "0x9BBB28", VA = "0x9BBB28", Slot = "4")]
		public bool Equals(Element other)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x9BBBAC", Offset = "0x9BBBAC", VA = "0x9BBBAC")]
		public static bool Equals(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x9BBBD4", Offset = "0x9BBBD4", VA = "0x9BBBD4")]
		public static bool Equals(Quaternion a, Quaternion b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x9BB820", Offset = "0x9BB820", VA = "0x9BB820")]
		public static implicit operator Element(Quaternion q)
		{
			return default(Element);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x9BB834", Offset = "0x9BB834", VA = "0x9BB834")]
		public static implicit operator Element(Vector3 v)
		{
			return default(Element);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x9BBC04", Offset = "0x9BBC04", VA = "0x9BBC04", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x9BBCD0", Offset = "0x9BBCD0", VA = "0x9BBCD0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200031B")]
	public enum IncludedAxes
	{
		[Token(Token = "0x40015B8")]
		None = 0,
		[Token(Token = "0x40015B9")]
		X = 1,
		[Token(Token = "0x40015BA")]
		Y = 2,
		[Token(Token = "0x40015BB")]
		XY = 3,
		[Token(Token = "0x40015BC")]
		Z = 4,
		[Token(Token = "0x40015BD")]
		XZ = 5,
		[Token(Token = "0x40015BE")]
		YZ = 6,
		[Token(Token = "0x40015BF")]
		XYZ = 7,
		[Token(Token = "0x40015C0")]
		Uniform = 15
	}
	[Token(Token = "0x200031C")]
	public static class IncludeAxisExtensions
	{
		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x8F3C88", Offset = "0x8F3C88", VA = "0x8F3C88")]
		public static float SqrMagnitude(this Vector3 v, IncludedAxes ia)
		{
			return default(float);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x8F3CBC", Offset = "0x8F3CBC", VA = "0x8F3CBC")]
		public static float Magnitude(this Vector3 v, IncludedAxes ia)
		{
			return default(float);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x8F3CF4", Offset = "0x8F3CF4", VA = "0x8F3CF4")]
		public static Vector3 Lerp(this GameObject go, Vector3 start, Vector3 end, IncludedAxes ia, float t, bool localPosition = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x8F3E94", Offset = "0x8F3E94", VA = "0x8F3E94")]
		public static void SetPosition(this GameObject go, Vector3 pos, IncludedAxes ia, bool localPosition = false)
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class XYZSwitchMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x9C8CD8", Offset = "0x9C8CD8", VA = "0x9C8CD8")]
		public XYZSwitchMaskAttribute()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class Matrix
	{
		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TransformCrusher crusher;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Element rotation;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 scale;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Matrix reusable;

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xBAA238", Offset = "0xBAA238", VA = "0xBAA238")]
		public Matrix()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xBAA240", Offset = "0xBAA240", VA = "0xBAA240")]
		public Matrix(TransformCrusher crusher)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xBAA274", Offset = "0xBAA274", VA = "0xBAA274")]
		public Matrix(TransformCrusher crusher, Vector3 position, Element rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xBAA308", Offset = "0xBAA308", VA = "0xBAA308")]
		public Matrix(TransformCrusher crusher, Transform transform)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xBAA644", Offset = "0xBAA644", VA = "0xBAA644")]
		public void Set(TransformCrusher crusher, Vector3 position, Element rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xBAA6C0", Offset = "0xBAA6C0", VA = "0xBAA6C0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641170", Offset = "0x641170")]
		public void Set(TransformCrusher crusher, Transform transform)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xBAA6C4", Offset = "0xBAA6C4", VA = "0xBAA6C4")]
		public void Capture(TransformCrusher crusher, Transform transform)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xBAA84C", Offset = "0xBAA84C", VA = "0xBAA84C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6411A8", Offset = "0x6411A8")]
		public void Set(Transform transform)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xBAA850", Offset = "0xBAA850", VA = "0xBAA850")]
		public void Capture(Transform transform)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xBAA9D4", Offset = "0xBAA9D4", VA = "0xBAA9D4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6411E0", Offset = "0x6411E0")]
		public void Set(TransformCrusher crusher, Rigidbody rb)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xBAA9D8", Offset = "0xBAA9D8", VA = "0xBAA9D8")]
		public void Capture(TransformCrusher crusher, Rigidbody rb)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xBAAB84", Offset = "0xBAAB84", VA = "0xBAAB84")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641218", Offset = "0x641218")]
		public void Set(Rigidbody rb)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xBAAB88", Offset = "0xBAAB88", VA = "0xBAAB88")]
		public void Capture(Rigidbody rb)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xBAAD30", Offset = "0xBAAD30", VA = "0xBAAD30")]
		public void Clear()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xBAAD3C", Offset = "0xBAAD3C", VA = "0xBAAD3C")]
		public void Compress(CompressedMatrix nonalloc)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xBAAD60", Offset = "0xBAAD60", VA = "0xBAAD60")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641250", Offset = "0x641250")]
		public void Apply()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xBAAD84", Offset = "0xBAAD84", VA = "0xBAAD84")]
		public void Apply(Transform t)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xBAAE74", Offset = "0xBAAE74", VA = "0xBAAE74")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641288", Offset = "0x641288")]
		public void Apply(Rigidbody rb)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xBAAF64", Offset = "0xBAAF64", VA = "0xBAAF64")]
		public static Matrix Lerp(Matrix target, Matrix start, Matrix end, float t)
		{
			return null;
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xBAB2CC", Offset = "0xBAB2CC", VA = "0xBAB2CC")]
		public static Matrix LerpUnclamped(Matrix target, Matrix start, Matrix end, float t)
		{
			return null;
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xBAB608", Offset = "0xBAB608", VA = "0xBAB608")]
		public static Matrix CatmullRomLerpUnclamped(Matrix target, Matrix pre, Matrix start, Matrix end, Matrix post, float t)
		{
			return null;
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xBAB978", Offset = "0xBAB978", VA = "0xBAB978")]
		public static Matrix CatmullRomLerpUnclamped(Matrix target, Matrix pre, Matrix start, Matrix end, float t)
		{
			return null;
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xBABCC0", Offset = "0xBABCC0", VA = "0xBABCC0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200031F")]
	public static class MatrixExtensions
	{
		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xBAC0A8", Offset = "0xBAC0A8", VA = "0xBAC0A8")]
		public static void CopyFrom(this Matrix target, Matrix src)
		{
		}
	}
	[Token(Token = "0x2000320")]
	public interface IHasTransformCrusher
	{
		[Token(Token = "0x17000220")]
		TransformCrusher TC
		{
			[Token(Token = "0x60014DA")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x2000321")]
	public class TransformCrusher : Crusher<TransformCrusher>, ICrusherCopy<TransformCrusher>
	{
		[Token(Token = "0x40015C6")]
		public const int VersionMajor = 3;

		[Token(Token = "0x40015C7")]
		public const int VersionMinor = 5;

		[Token(Token = "0x40015C8")]
		public const int VersionRevision = 3;

		[Token(Token = "0x40015C9")]
		public const int Build = 3503;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<int, TransformCrusher> staticTransformCrushers;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x637D1C", Offset = "0x637D1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x637D1C", Offset = "0x637D1C")]
		public Transform defaultTransform;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected ElementCrusher posCrusher;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected ElementCrusher rotCrusher;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected ElementCrusher sclCrusher;

		[NonSerialized]
		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected readonly int[] cached_pBits;

		[NonSerialized]
		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly int[] cached_rBits;

		[NonSerialized]
		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected readonly int[] cached_sBits;

		[NonSerialized]
		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected readonly int[] _cached_total;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ReadOnlyCollection<int> cached_total;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool cached;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ulong[] reusableArray64;

		[Token(Token = "0x40015D6")]
		private const string transformMissingError = "The 'defaultTransform' is null and has not be set in the inspector. For non-editor usages of TransformCrusher you need to pass the target transform to this method.";

		[Token(Token = "0x17000221")]
		public ElementCrusher PosCrusher
		{
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0x10E9608", Offset = "0x10E9608", VA = "0x10E9608")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0x10E9610", Offset = "0x10E9610", VA = "0x10E9610")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public ElementCrusher RotCrusher
		{
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0x10E9824", Offset = "0x10E9824", VA = "0x10E9824")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0x10E982C", Offset = "0x10E982C", VA = "0x10E982C")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public ElementCrusher SclCrusher
		{
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x10E9A40", Offset = "0x10E9A40", VA = "0x10E9A40")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0x10E9A48", Offset = "0x10E9A48", VA = "0x10E9A48")]
			set
			{
			}
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x10E9408", Offset = "0x10E9408", VA = "0x10E9408")]
		public static TransformCrusher CheckAgainstStatics(TransformCrusher tc, bool CheckElementCrusherAsWell = true)
		{
			return null;
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x10E9C5C", Offset = "0x10E9C5C", VA = "0x10E9C5C")]
		public void OnCrusherChange(ElementCrusher crusher)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x10E9C68", Offset = "0x10E9C68", VA = "0x10E9C68")]
		public TransformCrusher()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x10E9D54", Offset = "0x10E9D54", VA = "0x10E9D54")]
		public TransformCrusher(bool isStatic = false)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x10E9E4C", Offset = "0x10E9E4C", VA = "0x10E9E4C", Slot = "8")]
		protected virtual void ConstructDefault(bool isStatic = false)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x10EA06C", Offset = "0x10EA06C", VA = "0x10EA06C", Slot = "7")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x10EA070", Offset = "0x10EA070", VA = "0x10EA070", Slot = "6")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x10EA07C", Offset = "0x10EA07C", VA = "0x10EA07C", Slot = "9")]
		public virtual void CacheValues()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x10EA31C", Offset = "0x10EA31C", VA = "0x10EA31C")]
		public void Write(CompressedMatrix cm, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x10EA478", Offset = "0x10EA478", VA = "0x10EA478")]
		public void Write(CompressedMatrix cm, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x10EA5D4", Offset = "0x10EA5D4", VA = "0x10EA5D4")]
		public void Write(CompressedMatrix cm, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x10EA730", Offset = "0x10EA730", VA = "0x10EA730")]
		public void Write(CompressedMatrix nonalloc, Transform transform, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x10EA8A4", Offset = "0x10EA8A4", VA = "0x10EA8A4")]
		public void Write(Transform transform, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x10EA948", Offset = "0x10EA948", VA = "0x10EA948")]
		public Matrix ReadAndDecompress(ulong[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x10EAA14", Offset = "0x10EAA14", VA = "0x10EAA14")]
		public Matrix ReadAndDecompress(uint[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x10EAAE0", Offset = "0x10EAAE0", VA = "0x10EAAE0")]
		public Matrix ReadAndDecompress(byte[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x10EABAC", Offset = "0x10EABAC", VA = "0x10EABAC")]
		public void ReadAndDecompress(Matrix nonalloc, ulong[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x10EB05C", Offset = "0x10EB05C", VA = "0x10EB05C")]
		public void ReadAndDecompress(Matrix nonalloc, uint[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x10EB278", Offset = "0x10EB278", VA = "0x10EB278")]
		public void ReadAndDecompress(Matrix nonalloc, byte[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x10EA970", Offset = "0x10EA970", VA = "0x10EA970")]
		public Matrix ReadAndDecompress(ulong[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x10EAA3C", Offset = "0x10EAA3C", VA = "0x10EAA3C")]
		public Matrix ReadAndDecompress(uint[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x10EAB08", Offset = "0x10EAB08", VA = "0x10EAB08")]
		public Matrix ReadAndDecompress(byte[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x10EB330", Offset = "0x10EB330", VA = "0x10EB330")]
		public void Read(CompressedMatrix nonalloc, byte[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x10EB494", Offset = "0x10EB494", VA = "0x10EB494")]
		public CompressedMatrix Read(ulong[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x10EB538", Offset = "0x10EB538", VA = "0x10EB538")]
		public CompressedMatrix Read(uint[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x10EB5DC", Offset = "0x10EB5DC", VA = "0x10EB5DC")]
		public CompressedMatrix Read(byte[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x10EB680", Offset = "0x10EB680", VA = "0x10EB680")]
		public CompressedMatrix Read(ulong[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x10EB724", Offset = "0x10EB724", VA = "0x10EB724")]
		public CompressedMatrix Read(uint[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x10EB7C8", Offset = "0x10EB7C8", VA = "0x10EB7C8")]
		public CompressedMatrix Read(byte[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x10EAC64", Offset = "0x10EAC64", VA = "0x10EAC64")]
		public void Read(CompressedMatrix nonalloc, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x10EB114", Offset = "0x10EB114", VA = "0x10EB114")]
		public void Read(CompressedMatrix nonalloc, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x10EB86C", Offset = "0x10EB86C", VA = "0x10EB86C")]
		public void Write(CompressedMatrix nonalloc, Transform transform, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x10EB9E0", Offset = "0x10EB9E0", VA = "0x10EB9E0")]
		public void Write(Transform transform, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x10EBB24", Offset = "0x10EBB24", VA = "0x10EBB24")]
		public void Write(CompressedMatrix cm, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x10EBC5C", Offset = "0x10EBC5C", VA = "0x10EBC5C")]
		public void Write(CompressedMatrix nonalloc, Transform transform, ulong bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x10EBEF4", Offset = "0x10EBEF4", VA = "0x10EBEF4")]
		public void ReadAndDecompress(Matrix nonalloc, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x10EBFD4", Offset = "0x10EBFD4", VA = "0x10EBFD4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6412D0", Offset = "0x6412D0")]
		public Matrix ReadAndDecompress(ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x10EBF1C", Offset = "0x10EBF1C", VA = "0x10EBF1C")]
		public void ReadAndDecompress(Matrix nonalloc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x10EBFFC", Offset = "0x10EBFFC", VA = "0x10EBFFC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641308", Offset = "0x641308")]
		public Matrix ReadAndDecompress(ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x10EC4D0", Offset = "0x10EC4D0", VA = "0x10EC4D0")]
		public void ReadAndApply(Transform target, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x10EC684", Offset = "0x10EC684", VA = "0x10EC684")]
		public void Read(CompressedMatrix nonalloc, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x10EC800", Offset = "0x10EC800", VA = "0x10EC800")]
		public void ReadAndDecompress(Matrix nonalloc, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x10EC8E0", Offset = "0x10EC8E0", VA = "0x10EC8E0")]
		public CompressedMatrix Read(ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, uint frag4 = 0u, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x10EC9B4", Offset = "0x10EC9B4", VA = "0x10EC9B4")]
		public void Read(CompressedMatrix nonalloc, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x10EC0A4", Offset = "0x10EC0A4", VA = "0x10EC0A4")]
		public void Read(CompressedMatrix nonalloc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x10EC9DC", Offset = "0x10EC9DC", VA = "0x10EC9DC")]
		public CompressedMatrix Read(ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x10ECA80", Offset = "0x10ECA80", VA = "0x10ECA80")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641340", Offset = "0x641340")]
		public void Compress(CompressedMatrix nonalloc)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x10ECA88", Offset = "0x10ECA88", VA = "0x10ECA88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641378", Offset = "0x641378")]
		public CompressedMatrix Compress()
		{
			return null;
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x10ECB1C", Offset = "0x10ECB1C", VA = "0x10ECB1C")]
		public void Compress(CompressedMatrix nonalloc, Matrix matrix)
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x10EBDB0", Offset = "0x10EBDB0", VA = "0x10EBDB0")]
		public void Compress(CompressedMatrix nonalloc, Transform transform)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x10ECA90", Offset = "0x10ECA90", VA = "0x10ECA90")]
		public CompressedMatrix Compress(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x10ECCA0", Offset = "0x10ECCA0", VA = "0x10ECCA0")]
		public CompressedMatrix Compress(Rigidbody rb)
		{
			return null;
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x10ECD2C", Offset = "0x10ECD2C", VA = "0x10ECD2C")]
		public void Compress(CompressedMatrix nonalloc, Rigidbody rb)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x10ECDD8", Offset = "0x10ECDD8", VA = "0x10ECDD8")]
		public CompressedMatrix Compress(Rigidbody2D rb2d)
		{
			return null;
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x10ECE64", Offset = "0x10ECE64", VA = "0x10ECE64")]
		public void Compress(CompressedMatrix nonalloc, Rigidbody2D rb2d)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x10ECF50", Offset = "0x10ECF50", VA = "0x10ECF50")]
		public void CompressAndWrite(Matrix matrix, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x10ED094", Offset = "0x10ED094", VA = "0x10ED094")]
		public void CompressAndWrite(Transform transform, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x10ED1A0", Offset = "0x10ED1A0", VA = "0x10ED1A0")]
		public void CompressAndWrite(Rigidbody rb, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x10ED3D8", Offset = "0x10ED3D8", VA = "0x10ED3D8")]
		public void Decompress(Matrix nonalloc, ulong[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x10ED494", Offset = "0x10ED494", VA = "0x10ED494")]
		public void Decompress(Matrix nonalloc, uint[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x10ED550", Offset = "0x10ED550", VA = "0x10ED550")]
		public void Decompress(Matrix nonalloc, ulong compressed, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x10ED60C", Offset = "0x10ED60C", VA = "0x10ED60C")]
		public Matrix Decompress(ulong[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x10ED6FC", Offset = "0x10ED6FC", VA = "0x10ED6FC")]
		public Matrix Decompress(uint[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x10ED7EC", Offset = "0x10ED7EC", VA = "0x10ED7EC")]
		public Matrix Decompress(byte[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x10ED8DC", Offset = "0x10ED8DC", VA = "0x10ED8DC")]
		public Matrix Decompress(ulong compressed, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x10EADC8", Offset = "0x10EADC8", VA = "0x10EADC8")]
		public void Decompress(Matrix nonalloc, CompressedMatrix compMatrix)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x10EC1FC", Offset = "0x10EC1FC", VA = "0x10EC1FC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6413B0", Offset = "0x6413B0")]
		public Matrix Decompress(CompressedMatrix compMatrix)
		{
			return null;
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x10ED9CC", Offset = "0x10ED9CC", VA = "0x10ED9CC")]
		public void Set(Rigidbody rb, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x10EDADC", Offset = "0x10EDADC", VA = "0x10EDADC")]
		public void Set(Rigidbody rb, Matrix matrix)
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x10EDC78", Offset = "0x10EDC78", VA = "0x10EDC78")]
		public void Set(Rigidbody rb, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x10EDD54", Offset = "0x10EDD54", VA = "0x10EDD54")]
		public void Set(Rigidbody rb, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x10EDE0C", Offset = "0x10EDE0C", VA = "0x10EDE0C")]
		public void Set(Rigidbody rb, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x10EDEC4", Offset = "0x10EDEC4", VA = "0x10EDEC4")]
		public void Set(Rigidbody2D rb2d, Matrix matrix)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x10EE060", Offset = "0x10EE060", VA = "0x10EE060")]
		public void Set(Rigidbody2D rb2d, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x10EE170", Offset = "0x10EE170", VA = "0x10EE170")]
		public void Move(Rigidbody rb, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x10EE294", Offset = "0x10EE294", VA = "0x10EE294")]
		public void Move(Rigidbody rb, Matrix matrix)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x10EE430", Offset = "0x10EE430", VA = "0x10EE430")]
		public void Move(Rigidbody rb, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x10EE50C", Offset = "0x10EE50C", VA = "0x10EE50C")]
		public void Move(Rigidbody rb, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x10EE5C4", Offset = "0x10EE5C4", VA = "0x10EE5C4")]
		public void Move(Rigidbody rb, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x10EE67C", Offset = "0x10EE67C", VA = "0x10EE67C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6413E8", Offset = "0x6413E8")]
		public void Apply(Rigidbody rb, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x10EE78C", Offset = "0x10EE78C", VA = "0x10EE78C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641420", Offset = "0x641420")]
		public void Apply(Rigidbody rb, Matrix matrix)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x10EE928", Offset = "0x10EE928", VA = "0x10EE928")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641458", Offset = "0x641458")]
		public void Apply(ulong cvalue)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x10EE938", Offset = "0x10EE938", VA = "0x10EE938")]
		public void Apply(Transform t, ulong cvalue)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x10EEB64", Offset = "0x10EEB64", VA = "0x10EEB64")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641490", Offset = "0x641490")]
		public void Apply(ulong u0, ulong u1, ulong u2, ulong u3, uint u4)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x10EEB88", Offset = "0x10EEB88", VA = "0x10EEB88")]
		public void Apply(Transform t, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x10EEC64", Offset = "0x10EEC64", VA = "0x10EEC64")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6414C8", Offset = "0x6414C8")]
		public void Apply(CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x10EC588", Offset = "0x10EC588", VA = "0x10EC588")]
		public void Apply(Transform t, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x10EEC74", Offset = "0x10EEC74", VA = "0x10EEC74")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x641500", Offset = "0x641500")]
		public void Apply(Matrix matrix)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x10EE9DC", Offset = "0x10EE9DC", VA = "0x10EE9DC")]
		public void Apply(Transform transform, Matrix matrix)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x10EEC84", Offset = "0x10EEC84", VA = "0x10EEC84")]
		public void Capture(Rigidbody rb, CompressedMatrix cm, Matrix m)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x10EECC8", Offset = "0x10EECC8", VA = "0x10EECC8")]
		public void Capture(Rigidbody2D rb2d, CompressedMatrix cm, Matrix m)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x10EED0C", Offset = "0x10EED0C", VA = "0x10EED0C")]
		public void Capture(Transform tr, CompressedMatrix cm, Matrix m)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x10EEE40", Offset = "0x10EEE40", VA = "0x10EEE40")]
		public int TallyBits(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x10EEF90", Offset = "0x10EEF90", VA = "0x10EEF90", Slot = "10")]
		public void CopyFrom(TransformCrusher source)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x10EF000", Offset = "0x10EF000", VA = "0x10EF000", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x10EF08C", Offset = "0x10EF08C", VA = "0x10EF08C")]
		public bool Equals(TransformCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x10EF320", Offset = "0x10EF320", VA = "0x10EF320", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x10EF478", Offset = "0x10EF478", VA = "0x10EF478")]
		public static bool operator ==(TransformCrusher crusher1, TransformCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x10EF2A4", Offset = "0x10EF2A4", VA = "0x10EF2A4")]
		public static bool operator !=(TransformCrusher crusher1, TransformCrusher crusher2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000322")]
	public enum FactorBoundsOn
	{
		[Token(Token = "0x40015D8")]
		EnableDisable,
		[Token(Token = "0x40015D9")]
		AwakeDestroy
	}
	[Token(Token = "0x2000323")]
	[ExecuteInEditMode]
	public class WorldBounds : MonoBehaviour
	{
		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Bounds manualBounds;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x637DF4", Offset = "0x637DF4")]
		[WorldBoundsSelectAttribute]
		[HideInInspector]
		[SerializeField]
		public int worldBoundsGrp;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		[SerializeField]
		private bool includeChildren;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x637E98", Offset = "0x637E98")]
		[SerializeField]
		private BoundsTools.BoundsType factorIn;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public Bounds myBounds;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int myBoundsCount;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action OnWorldBoundsChange;

		[Token(Token = "0x17000224")]
		public Bounds ManualBounds
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0x9C7864", Offset = "0x9C7864", VA = "0x9C7864")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x9C7878", Offset = "0x9C7878", VA = "0x9C7878")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public BoundsTools.BoundsType FactorIn
		{
			[Token(Token = "0x6001547")]
			[Address(RVA = "0x9C7BD4", Offset = "0x9C7BD4", VA = "0x9C7BD4")]
			get
			{
				return default(BoundsTools.BoundsType);
			}
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x9C7BDC", Offset = "0x9C7BDC", VA = "0x9C7BDC")]
			set
			{
			}
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x9C7BE4", Offset = "0x9C7BE4", VA = "0x9C7BE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x9C788C", Offset = "0x9C788C", VA = "0x9C788C")]
		public void CollectMyBounds()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x9C8088", Offset = "0x9C8088", VA = "0x9C8088")]
		private void Start()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x9C808C", Offset = "0x9C808C", VA = "0x9C808C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x9C8284", Offset = "0x9C8284", VA = "0x9C8284")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x9C828C", Offset = "0x9C828C", VA = "0x9C828C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x9C8094", Offset = "0x9C8094", VA = "0x9C8094")]
		public void FactorInBounds(bool b)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x9C83EC", Offset = "0x9C83EC", VA = "0x9C83EC")]
		public WorldBounds()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000324")]
	public class WorldBoundsGroup
	{
		[Token(Token = "0x40015E1")]
		public const string defaultName = "Default";

		[Token(Token = "0x40015E2")]
		public const string newAddName = "Unnamed";

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[NonSerialized]
		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action OnWorldBoundChanged;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElementCrusher crusher;

		[NonSerialized]
		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly List<WorldBounds> activeWorldBounds;

		[NonSerialized]
		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Bounds _combinedWorldBounds;

		[Token(Token = "0x17000226")]
		public int ActiveBoundsObjCount
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x9C8464", Offset = "0x9C8464", VA = "0x9C8464")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x9C84B0", Offset = "0x9C84B0", VA = "0x9C84B0")]
		public static ElementCrusher GetUncompressedCrusher()
		{
			return null;
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x9C8638", Offset = "0x9C8638", VA = "0x9C8638")]
		public void ResetActiveBounds()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x9C7E2C", Offset = "0x9C7E2C", VA = "0x9C7E2C")]
		public void RecalculateWorldCombinedBounds()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x9C7BE8", Offset = "0x9C7BE8", VA = "0x9C7BE8")]
		public WorldBoundsGroup()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class WorldBoundsSelectAttributeAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001556")]
		[Address(RVA = "0x9C868C", Offset = "0x9C868C", VA = "0x9C868C")]
		public WorldBoundsSelectAttributeAttribute()
		{
		}
	}
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62E818", Offset = "0x62E818")]
	public class WorldBoundsSettings : SettingsScriptableObject<WorldBoundsSettings>
	{
		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<WorldBoundsGroup> worldBoundsGroups;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ElementCrusher defaultWorldBoundsCrusher;

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x9C8694", Offset = "0x9C8694", VA = "0x9C8694")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x641538", Offset = "0x641538")]
		private static void Bootstrap()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x9C87D4", Offset = "0x9C87D4", VA = "0x9C87D4", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x9C88A0", Offset = "0x9C88A0", VA = "0x9C88A0", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x9C7CB4", Offset = "0x9C7CB4", VA = "0x9C7CB4")]
		public static void RemoveWorldBoundsFromAll(WorldBounds wb)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x9C8A90", Offset = "0x9C8A90", VA = "0x9C8A90")]
		public static int TallyBits(int index, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x9C8C04", Offset = "0x9C8C04", VA = "0x9C8C04")]
		public WorldBoundsSettings()
		{
		}
	}
}
namespace Photon.Compression.Internal
{
	[Token(Token = "0x2000327")]
	public class SyncRangedAttribute : SyncVarBaseAttribute, IPackSingle
	{
		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LiteFloatCrusher crusher;

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xC76AE0", Offset = "0xC76AE0", VA = "0xC76AE0")]
		public SyncRangedAttribute(LiteFloatCompressType compression, float min, float max, bool accurateCenter)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xC76B98", Offset = "0xC76B98", VA = "0xC76B98", Slot = "10")]
		public SerializationFlags Pack(float value, float preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xC76C64", Offset = "0xC76C64", VA = "0xC76C64", Slot = "11")]
		public SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
	[Serializable]
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x62E828", Offset = "0x62E828")]
	public abstract class SyncVarBaseAttribute : Attribute
	{
		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SyncAs syncAs;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public KeyRate keyRate;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applyCallback;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string snapshotCallback;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SetValueTiming setValueTiming;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool interpolate;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int bitCount;

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x10DEE88", Offset = "0x10DEE88", VA = "0x10DEE88", Slot = "7")]
		public virtual void Initialize(Type primitiveType)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x10DEEBC", Offset = "0x10DEEBC", VA = "0x10DEEBC", Slot = "8")]
		public virtual int GetDefaultBitCount(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x10DCAB8", Offset = "0x10DCAB8", VA = "0x10DCAB8", Slot = "9")]
		public virtual int GetMaxBits(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x10DF398", Offset = "0x10DF398", VA = "0x10DF398")]
		public bool IsKeyframe(int frameId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x10DC618", Offset = "0x10DC618", VA = "0x10DC618")]
		public bool IsForced(int frameId, SerializationFlags writeFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001565")]
		public bool IsForcedClass<T>(int frameId, T value, T prevValue, SerializationFlags writeFlags) where T : class
		{
			return default(bool);
		}

		[Token(Token = "0x6001566")]
		public bool IsForced<T>(int frameId, T value, T prevValue, SerializationFlags writeFlags) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x10DB910", Offset = "0x10DB910", VA = "0x10DB910")]
		protected SyncVarBaseAttribute()
		{
		}
	}
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x62E83C", Offset = "0x62E83C")]
	public class PackSupportedTypesAttribute : Attribute
	{
		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type supportedType;

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x971518", Offset = "0x971518", VA = "0x971518")]
		public PackSupportedTypesAttribute(Type supportedType)
		{
		}
	}
	[Token(Token = "0x200032A")]
	public delegate SerializationFlags PackDelegate<T>(T value, T prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	[Token(Token = "0x200032B")]
	public delegate SerializationFlags UnpackDelegate<T>(T value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	[Token(Token = "0x200032C")]
	public delegate SerializationFlags PackListDelegate<T>(List<T> value, List<T> prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags) where T : struct;
	[Token(Token = "0x200032D")]
	public delegate SerializationFlags UnpackListDelegate<T>(List<T> value, BitArray mask, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags) where T : struct;
	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62E850", Offset = "0x62E850")]
	public interface IPackList<T> where T : struct
	{
		[Token(Token = "0x6001579")]
		SerializationFlags Pack(List<T> value, List<T> prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600157A")]
		SerializationFlags Unpack(List<T> value, BitArray mask, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62E8B8", Offset = "0x62E8B8")]
	public interface IPackBoolean
	{
		[Token(Token = "0x600157B")]
		SerializationFlags Pack(bool value, bool prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600157C")]
		SerializationFlags Unpack(bool value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62E920", Offset = "0x62E920")]
	public interface IPackChar
	{
		[Token(Token = "0x600157D")]
		SerializationFlags Pack(char value, char prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600157E")]
		SerializationFlags Unpack(char value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62E988", Offset = "0x62E988")]
	public interface IPackByte
	{
		[Token(Token = "0x600157F")]
		SerializationFlags Pack(byte value, byte prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001580")]
		SerializationFlags Unpack(byte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62E9F0", Offset = "0x62E9F0")]
	public interface IPackSByte
	{
		[Token(Token = "0x6001581")]
		SerializationFlags Pack(sbyte value, sbyte prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001582")]
		SerializationFlags Unpack(sbyte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62EA58", Offset = "0x62EA58")]
	public interface IPackUInt16
	{
		[Token(Token = "0x6001583")]
		SerializationFlags Pack(ushort value, ushort preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001584")]
		SerializationFlags Unpack(ushort value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62EAC0", Offset = "0x62EAC0")]
	public interface IPackInt16
	{
		[Token(Token = "0x6001585")]
		SerializationFlags Pack(short value, short preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001586")]
		SerializationFlags Unpack(short value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62EB28", Offset = "0x62EB28")]
	public interface IPackUInt32
	{
		[Token(Token = "0x6001587")]
		SerializationFlags Pack(uint value, uint preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001588")]
		SerializationFlags Unpack(uint value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62EB90", Offset = "0x62EB90")]
	public interface IPackInt32
	{
		[Token(Token = "0x6001589")]
		SerializationFlags Pack(int value, int preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600158A")]
		SerializationFlags Unpack(int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62EBF8", Offset = "0x62EBF8")]
	public interface IPackUInt64
	{
		[Token(Token = "0x600158B")]
		SerializationFlags Pack(ulong value, ulong preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600158C")]
		SerializationFlags Unpack(ulong value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62EC60", Offset = "0x62EC60")]
	public interface IPackInt64
	{
		[Token(Token = "0x600158D")]
		SerializationFlags Pack(long value, long preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600158E")]
		SerializationFlags Unpack(long value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000339")]
	public delegate SerializationFlags PackSingleDelegate(float value, float preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62ECC8", Offset = "0x62ECC8")]
	public interface IPackSingle
	{
		[Token(Token = "0x6001593")]
		SerializationFlags Pack(float value, float preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001594")]
		SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62ED30", Offset = "0x62ED30")]
	public interface IPackDouble
	{
		[Token(Token = "0x6001595")]
		SerializationFlags Pack(double value, double preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001596")]
		SerializationFlags Unpack(double value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62ED98", Offset = "0x62ED98")]
	public interface IPackString
	{
		[Token(Token = "0x6001597")]
		SerializationFlags Pack(string value, string preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001598")]
		SerializationFlags Unpack(string value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62EE00", Offset = "0x62EE00")]
	public interface IPackStringBuilder
	{
		[Token(Token = "0x6001599")]
		SerializationFlags Pack(StringBuilder value, StringBuilder preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600159A")]
		SerializationFlags Unpack(StringBuilder value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62EE68", Offset = "0x62EE68")]
	public interface IPackVector2
	{
		[Token(Token = "0x600159B")]
		SerializationFlags Pack(Vector2 value, Vector2 preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600159C")]
		SerializationFlags Unpack(Vector2 value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62EED0", Offset = "0x62EED0")]
	public interface IPackVector3
	{
		[Token(Token = "0x600159D")]
		SerializationFlags Pack(Vector3 value, Vector3 preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600159E")]
		SerializationFlags Unpack(Vector3 value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62EF38", Offset = "0x62EF38")]
	public interface IPackVector2Int
	{
		[Token(Token = "0x600159F")]
		SerializationFlags Pack(Vector2Int value, Vector2Int preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60015A0")]
		SerializationFlags Unpack(Vector2Int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x62EFA0", Offset = "0x62EFA0")]
	public interface IPackVector3Int
	{
		[Token(Token = "0x60015A1")]
		SerializationFlags Pack(Vector3Int value, Vector3Int preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60015A2")]
		SerializationFlags Unpack(Vector3Int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000342")]
	public abstract class PackFrame
	{
		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FastBitMask128 mask;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FastBitMask128 isCompleteMask;

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x970E44", Offset = "0x970E44", VA = "0x970E44")]
		protected PackFrame()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public static class PackObjectDatabase
	{
		[Token(Token = "0x2000344")]
		public delegate SerializationFlags PackStructDelegate(IntPtr obj, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags forceKeyframe);

		[Token(Token = "0x2000345")]
		public delegate SerializationFlags PackObjDelegate(object obj, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags forceKeyframe);

		[Token(Token = "0x2000346")]
		public delegate SerializationFlags PackFrameDelegate(PackFrame obj, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags forceKeyframe);

		[Token(Token = "0x2000347")]
		public delegate SerializationFlags UnpackFrameDelegate(PackFrame obj, FastBitMask128 hasContentMask, FastBitMask128 isCompleteMask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags forceKeyframe);

		[Token(Token = "0x2000348")]
		public delegate void PackCopyFrameToObjectDelegate(PackFrame src, object trg, FastBitMask128 mask, int maskOffset);

		[Token(Token = "0x2000349")]
		public delegate void PackCopyFrameToStructDelegate(PackFrame src, IntPtr trg, FastBitMask128 mask, int maskOffset);

		[Token(Token = "0x200034A")]
		public delegate void PackSnapshotObjectDelegate(PackFrame snap, PackFrame targ, object trg, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x200034B")]
		public delegate void PackSnapshotStructDelegate(PackFrame snap, PackFrame targ, IntPtr trg, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x200034C")]
		public delegate void PackInterpFrameToFrameDelegate(PackFrame start, PackFrame end, PackFrame trg, float ntime, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x200034D")]
		public delegate void PackInterpFrameToObjectDelegate(PackFrame start, PackFrame end, object trg, float ntime, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x200034E")]
		public delegate void PackInterpFrameToStructDelegate(PackFrame start, PackFrame end, IntPtr trg, float ntime, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x200034F")]
		public class PackObjectInfo
		{
			[Token(Token = "0x40015F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Type packFrameType;

			[Token(Token = "0x40015F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int maxBits;

			[Token(Token = "0x40015F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public readonly int maxBytes;

			[Token(Token = "0x40015F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly FastBitMask128 defaultReadyMask;

			[Token(Token = "0x40015FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public readonly PackObjDelegate PackObjToBuffer;

			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public readonly PackStructDelegate PackStructToBuffer;

			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public readonly PackFrameDelegate PackFrameToBuffer;

			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public readonly UnpackFrameDelegate UnpackFrameFromBuffer;

			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Func<PackFrame> FactoryFrame;

			[Token(Token = "0x40015FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Func<object, int, PackFrame[]> FactoryFramesObj;

			[Token(Token = "0x4001600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Func<IntPtr, int, PackFrame[]> FactoryFramesStruct;

			[Token(Token = "0x4001601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public PackCopyFrameToObjectDelegate CopyFrameToObj;

			[Token(Token = "0x4001602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public PackCopyFrameToStructDelegate CopyFrameToStruct;

			[Token(Token = "0x4001603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public PackSnapshotObjectDelegate SnapObject;

			[Token(Token = "0x4001604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public PackSnapshotStructDelegate SnapStruct;

			[Token(Token = "0x4001605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public PackInterpFrameToFrameDelegate InterpFrameToFrame;

			[Token(Token = "0x4001606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public PackInterpFrameToObjectDelegate InterpFrameToObj;

			[Token(Token = "0x4001607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public PackInterpFrameToStructDelegate InterpFrameToStruct;

			[Token(Token = "0x4001608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Action<object, PackFrame> CaptureObj;

			[Token(Token = "0x4001609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Action<IntPtr, PackFrame> CaptureStruct;

			[Token(Token = "0x400160A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Action<PackFrame, PackFrame> CopyFrameToFrame;

			[Token(Token = "0x400160B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public readonly int fieldCount;

			[Token(Token = "0x60015D2")]
			[Address(RVA = "0x8070AC", Offset = "0x8070AC", VA = "0x8070AC")]
			public PackObjectInfo(FastBitMask128 defaultReadyMask, PackObjDelegate packObjToBuffer, PackFrameDelegate packFrameToBuffer, UnpackFrameDelegate unpackFrameFromBuffer, int maxBits, Func<PackFrame> factoryFrame, Func<object, int, PackFrame[]> factoryFramesObj, PackCopyFrameToObjectDelegate copyFrameToObj, Action<object, PackFrame> captureObj, Action<PackFrame, PackFrame> copyFrameToFrame, PackSnapshotObjectDelegate snapObject, PackInterpFrameToFrameDelegate interpFrameToFrame, PackInterpFrameToObjectDelegate interpFrameToObj, int fieldCount)
			{
			}

			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x807214", Offset = "0x807214", VA = "0x807214")]
			public PackObjectInfo(FastBitMask128 defaultReadyMask, PackStructDelegate packStructToBuffer, PackFrameDelegate packFrameToBuffer, UnpackFrameDelegate unpackFrameFromBuffer, int maxBits, Func<PackFrame> factoryFrame, Func<IntPtr, int, PackFrame[]> factoryFramesStruct, PackCopyFrameToStructDelegate copyFrameToStruct, Action<IntPtr, PackFrame> captureStruct, Action<PackFrame, PackFrame> copyFrameToFrame, PackSnapshotStructDelegate snapStruct, PackInterpFrameToFrameDelegate interpFrameToFrame, PackInterpFrameToStructDelegate interpFrameToStruct, int fieldCount)
			{
			}
		}

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<Type, PackObjectInfo> packObjInfoLookup;

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x970E80", Offset = "0x970E80", VA = "0x970E80")]
		public static PackObjectInfo GetPackObjectInfo(Type type)
		{
			return null;
		}
	}
}
namespace Photon.Utilities
{
	[Token(Token = "0x2000350")]
	public static class BitUtilities
	{
		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xCC7D20", Offset = "0xCC7D20", VA = "0xCC7D20")]
		public static int GetBitsForMaxValue(this int maxvalue)
		{
			return default(int);
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xCC7D40", Offset = "0xCC7D40", VA = "0xCC7D40")]
		public static int GetBitsForMaxValue(this uint maxvalue)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000351")]
	public class CatmulRom
	{
		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xB256AC", Offset = "0xB256AC", VA = "0xB256AC")]
		public static float CatmullRomLerp(float pre, float start, float end, float post, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xB25758", Offset = "0xB25758", VA = "0xB25758")]
		public static float CatmullRomLerp(float pre, float start, float end, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xB2580C", Offset = "0xB2580C", VA = "0xB2580C")]
		public static Vector3 CatmullRomLerp(Vector2 pre, Vector2 start, Vector2 end, Vector2 post, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xB258C4", Offset = "0xB258C4", VA = "0xB258C4")]
		public static Vector3 CatmullRomLerp(Vector2 pre, Vector2 start, Vector2 end, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xB2597C", Offset = "0xB2597C", VA = "0xB2597C")]
		public static Vector3 CatmullRomLerp(Vector3 pre, Vector3 start, Vector3 end, Vector3 post, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xB25ACC", Offset = "0xB25ACC", VA = "0xB25ACC")]
		public static Vector3 CatmullRomLerp(Vector3 pre, Vector3 start, Vector3 end, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xB25C1C", Offset = "0xB25C1C", VA = "0xB25C1C")]
		public CatmulRom()
		{
		}
	}
	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x62F018", Offset = "0x62F018")]
	public class DisableFieldAttribute : PropertyAttribute
	{
		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x9B80AC", Offset = "0x9B80AC", VA = "0x9B80AC")]
		public DisableFieldAttribute()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class MinMaxRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float max;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float min;

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xBAE568", Offset = "0xBAE568", VA = "0xBAE568")]
		public MinMaxRangeAttribute(float min, float max)
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class BitsPerRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int max;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int min;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string label;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool showLabel;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string tooltip;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool show;

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xCC7D60", Offset = "0xCC7D60", VA = "0xCC7D60")]
		public BitsPerRangeAttribute(int min, int max, bool show, bool zeroBase = false, string label = "Max:", bool showLabel = true, string tooltip = "")
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xC6BCCC", Offset = "0xC6BCCC", VA = "0xC6BCCC")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000356")]
	public class SingleUnityLayer
	{
		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		private int m_LayerIndex;

		[Token(Token = "0x17000227")]
		public int LayerIndex
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0xC6F304", Offset = "0xC6F304", VA = "0xC6F304")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000228")]
		public int Mask
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0xC6F320", Offset = "0xC6F320", VA = "0xC6F320")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xC6F30C", Offset = "0xC6F30C", VA = "0xC6F30C")]
		public void Set(int _layerIndex)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xC6F330", Offset = "0xC6F330", VA = "0xC6F330")]
		public static implicit operator int(SingleUnityLayer m)
		{
			return default(int);
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xC6F34C", Offset = "0xC6F34C", VA = "0xC6F34C")]
		public SingleUnityLayer()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class VersaMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool definesZero;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type castTo;

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x9C5DC4", Offset = "0x9C5DC4", VA = "0x9C5DC4")]
		public VersaMaskAttribute(bool definesZero = false, [Optional] Type castTo)
		{
		}
	}
	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x62F02C", Offset = "0x62F02C")]
	public struct FastBitMask128
	{
		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ulong seg1;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong seg2;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int bitcount;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int seg1bitcount;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int seg2bitcount;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ulong alltrue1;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong alltrue2;

		[Token(Token = "0x17000229")]
		public ulong Seg1
		{
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0x8E779C", Offset = "0x8E779C", VA = "0x8E779C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700022A")]
		public ulong Seg2
		{
			[Token(Token = "0x60015E8")]
			[Address(RVA = "0x8E77A4", Offset = "0x8E77A4", VA = "0x8E77A4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700022B")]
		public ulong AllTrue1
		{
			[Token(Token = "0x60015E9")]
			[Address(RVA = "0x8E77AC", Offset = "0x8E77AC", VA = "0x8E77AC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700022C")]
		public ulong AllTrue2
		{
			[Token(Token = "0x60015EA")]
			[Address(RVA = "0x8E77B4", Offset = "0x8E77B4", VA = "0x8E77B4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700022D")]
		public int BitCount
		{
			[Token(Token = "0x60015EB")]
			[Address(RVA = "0x8E77BC", Offset = "0x8E77BC", VA = "0x8E77BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0x8E77C4", Offset = "0x8E77C4", VA = "0x8E77C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public bool Item
		{
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0x8E78E4", Offset = "0x8E78E4", VA = "0x8E78E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015F0")]
			[Address(RVA = "0x8E7904", Offset = "0x8E7904", VA = "0x8E7904")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public bool AllAreFalse
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0x8E7A48", Offset = "0x8E7A48", VA = "0x8E7A48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000230")]
		public bool AllAreTrue
		{
			[Token(Token = "0x60015F8")]
			[Address(RVA = "0x8E7A70", Offset = "0x8E7A70", VA = "0x8E7A70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x8E783C", Offset = "0x8E783C", VA = "0x8E783C")]
		public FastBitMask128(int bitcount)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x8E78A8", Offset = "0x8E78A8", VA = "0x8E78A8")]
		public FastBitMask128(FastBitMask128 copyFrom)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x8E796C", Offset = "0x8E796C", VA = "0x8E796C")]
		public bool Get(int bit)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x8E798C", Offset = "0x8E798C", VA = "0x8E798C")]
		public void Set(int bit, bool value)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x8E79F4", Offset = "0x8E79F4", VA = "0x8E79F4")]
		public void SetTrue(int bit)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x8E7A14", Offset = "0x8E7A14", VA = "0x8E7A14")]
		public void SetFalse(int bit)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x8E7A34", Offset = "0x8E7A34", VA = "0x8E7A34")]
		public void SetAllTrue()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x8E7A40", Offset = "0x8E7A40", VA = "0x8E7A40")]
		public void SetAllFalse()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x8E7AAC", Offset = "0x8E7AAC", VA = "0x8E7AAC")]
		public void OR(FastBitMask128 other)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x8E7ACC", Offset = "0x8E7ACC", VA = "0x8E7ACC")]
		public void OR(FastBitMask128 other, int otherOffset)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x8E7B6C", Offset = "0x8E7B6C", VA = "0x8E7B6C")]
		public void AND(FastBitMask128 other)
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x8E7B8C", Offset = "0x8E7B8C", VA = "0x8E7B8C")]
		public void XOR(FastBitMask128 other)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x8E7BAC", Offset = "0x8E7BAC", VA = "0x8E7BAC")]
		public static FastBitMask128 operator |(FastBitMask128 a, FastBitMask128 b)
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x8E7BD8", Offset = "0x8E7BD8", VA = "0x8E7BD8")]
		public static FastBitMask128 operator &(FastBitMask128 a, FastBitMask128 b)
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x8E7C04", Offset = "0x8E7C04", VA = "0x8E7C04")]
		public static FastBitMask128 operator ^(FastBitMask128 a, FastBitMask128 b)
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x8E7C34", Offset = "0x8E7C34", VA = "0x8E7C34")]
		public static FastBitMask128 operator !(FastBitMask128 a)
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x8E7C5C", Offset = "0x8E7C5C", VA = "0x8E7C5C")]
		public FastBitMask128 NOT()
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x8E7C84", Offset = "0x8E7C84", VA = "0x8E7C84")]
		public int CountTrue()
		{
			return default(int);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x8E7CF4", Offset = "0x8E7CF4", VA = "0x8E7CF4")]
		public int CountFalse()
		{
			return default(int);
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x8E7D70", Offset = "0x8E7D70", VA = "0x8E7D70")]
		public void ClearBitsBefore(int start, int count)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x8E7E30", Offset = "0x8E7E30", VA = "0x8E7E30")]
		public int CountValidRange(int start, int lookahead)
		{
			return default(int);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x8E7E88", Offset = "0x8E7E88", VA = "0x8E7E88")]
		public void Copy(FastBitMask128 other)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x8E7EC4", Offset = "0x8E7EC4", VA = "0x8E7EC4")]
		public bool Compare(FastBitMask128 other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000359")]
	public static class FastBitMaskExt
	{
	}
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x62F064", Offset = "0x62F064")]
	public struct FastBitMask64
	{
		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong bitmask;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int bitcount;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong alltrue;

		[Token(Token = "0x17000231")]
		public int BitCount
		{
			[Token(Token = "0x6001608")]
			[Address(RVA = "0x8E7F00", Offset = "0x8E7F00", VA = "0x8E7F00")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001609")]
			[Address(RVA = "0x8E7F08", Offset = "0x8E7F08", VA = "0x8E7F08")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public bool Item
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0x8E7F74", Offset = "0x8E7F74", VA = "0x8E7F74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600160D")]
			[Address(RVA = "0x8E7F8C", Offset = "0x8E7F8C", VA = "0x8E7F8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public bool AllAreFalse
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0x8E8030", Offset = "0x8E8030", VA = "0x8E8030")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000234")]
		public bool AllAreTrue
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0x8E8050", Offset = "0x8E8050", VA = "0x8E8050")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x8E7F34", Offset = "0x8E7F34", VA = "0x8E7F34")]
		public FastBitMask64(int bitcount)
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x8E7F58", Offset = "0x8E7F58", VA = "0x8E7F58")]
		private FastBitMask64(FastBitMask64 copyFrom)
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x8E7FB0", Offset = "0x8E7FB0", VA = "0x8E7FB0")]
		public bool Get(int bit)
		{
			return default(bool);
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x8E7FC8", Offset = "0x8E7FC8", VA = "0x8E7FC8")]
		public void Set(int bit, bool value)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x8E7FEC", Offset = "0x8E7FEC", VA = "0x8E7FEC")]
		public void SetTrue(int bit)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x8E8004", Offset = "0x8E8004", VA = "0x8E8004")]
		public void SetFalse(int bit)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x8E801C", Offset = "0x8E801C", VA = "0x8E801C")]
		public void SetAllTrue()
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x8E8028", Offset = "0x8E8028", VA = "0x8E8028")]
		public void SetAllFalse()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x8E8074", Offset = "0x8E8074", VA = "0x8E8074")]
		public void OR(FastBitMask64 other)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x8E8088", Offset = "0x8E8088", VA = "0x8E8088")]
		public void AND(FastBitMask64 other)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x8E809C", Offset = "0x8E809C", VA = "0x8E809C")]
		public void XOR(FastBitMask64 other)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x8E80B0", Offset = "0x8E80B0", VA = "0x8E80B0")]
		public int CountTrue()
		{
			return default(int);
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x8E80EC", Offset = "0x8E80EC", VA = "0x8E80EC")]
		public int CountFalse()
		{
			return default(int);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x8E8144", Offset = "0x8E8144", VA = "0x8E8144")]
		public void ClearBitsBefore(int start, int count)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x8E81A4", Offset = "0x8E81A4", VA = "0x8E81A4")]
		public int CountValidRange(int start, int lookahead)
		{
			return default(int);
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x8E81EC", Offset = "0x8E81EC", VA = "0x8E81EC")]
		public void Copy(FastBitMask64 other)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x8E8208", Offset = "0x8E8208", VA = "0x8E8208")]
		public bool Compare(FastBitMask64 other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200035B")]
	public static class FastBitMask64Ext
	{
	}
	[Token(Token = "0x200035C")]
	public abstract class SettingsScriptableObjectBase : ScriptableObject
	{
		[Token(Token = "0x600161F")]
		public abstract void Initialize();

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xC6CD60", Offset = "0xC6CD60", VA = "0xC6CD60")]
		protected SettingsScriptableObjectBase()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public abstract class SettingsScriptableObject<T> : SettingsScriptableObjectBase where T : SettingsScriptableObjectBase
	{
		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string AssetName;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action OnSingletonReady;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static T single;

		[Token(Token = "0x17000235")]
		public static T Single
		{
			[Token(Token = "0x6001621")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001622")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001623")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001624")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001625")]
		protected SettingsScriptableObject()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public static class BoundsTools
	{
		[Token(Token = "0x200035F")]
		public enum BoundsType
		{
			[Token(Token = "0x400162C")]
			Both,
			[Token(Token = "0x400162D")]
			MeshRenderer,
			[Token(Token = "0x400162E")]
			Collider,
			[Token(Token = "0x400162F")]
			Manual
		}

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<MeshFilter> meshFilters;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<Renderer> meshRenderers;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<Collider> colliders;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<Collider> validColliders;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly List<SpriteRenderer> spriteRenderers;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly List<Collider2D> colliders2D;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly List<Collider2D> validColliders2D;

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xCCA00C", Offset = "0xCCA00C", VA = "0xCCA00C")]
		public static Bounds CollectMyBounds(this GameObject go, BoundsType factorIn, [Out] int numOfBoundsFound, bool includeChildren = true, bool includeInactive = false)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xCCAFF0", Offset = "0xCCAFF0", VA = "0xCCAFF0")]
		public static Bounds CollectMyBounds(GameObject go, BoundsType factorIn, bool includeChildren = true)
		{
			return default(Bounds);
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x2000360")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xAF0F9C", Offset = "0xAF0F9C", VA = "0xAF0F9C")]
		public void Start()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xAF1144", Offset = "0xAF1144", VA = "0xAF1144")]
		public void Update()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xAF129C", Offset = "0xAF129C", VA = "0xAF129C", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xAF12A0", Offset = "0xAF12A0", VA = "0xAF12A0", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xAF1338", Offset = "0xAF1338", VA = "0xAF1338", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xAF1440", Offset = "0xAF1440", VA = "0xAF1440", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xAF1444", Offset = "0xAF1444", VA = "0xAF1444", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xAF1448", Offset = "0xAF1448", VA = "0xAF1448", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xAF1548", Offset = "0xAF1548", VA = "0xAF1548", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xAF154C", Offset = "0xAF154C", VA = "0xAF154C", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xAF1550", Offset = "0xAF1550", VA = "0xAF1550", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xAF1554", Offset = "0xAF1554", VA = "0xAF1554", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xAF1558", Offset = "0xAF1558", VA = "0xAF1558", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xAF155C", Offset = "0xAF155C", VA = "0xAF155C", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xAF1560", Offset = "0xAF1560", VA = "0xAF1560", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xAF1564", Offset = "0xAF1564", VA = "0xAF1564", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xAF15D8", Offset = "0xAF15D8", VA = "0xAF15D8", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xAF15DC", Offset = "0xAF15DC", VA = "0xAF15DC", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xAF16A0", Offset = "0xAF16A0", VA = "0xAF16A0", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xAF16A4", Offset = "0xAF16A4", VA = "0xAF16A4")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xAF17DC", Offset = "0xAF17DC", VA = "0xAF17DC")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.Demo
{
	[Token(Token = "0x2000361")]
	public static class AppSettingsExtensions
	{
		[Token(Token = "0x600163F")]
		[Address(RVA = "0xEDF218", Offset = "0xEDF218", VA = "0xEDF218")]
		public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
		{
			return null;
		}
	}
	[Token(Token = "0x2000362")]
	public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Channel;

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xB25C24", Offset = "0xB25C24", VA = "0xB25C24")]
		public void SetChannel(string channel)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xB25CAC", Offset = "0xB25CAC", VA = "0xB25CAC", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xB25D3C", Offset = "0xB25D3C", VA = "0xB25D3C")]
		public ChannelSelector()
		{
		}
	}
	[Token(Token = "0x2000363")]
	[ExecuteInEditMode]
	public class ChatAppIdCheckerUI : MonoBehaviour
	{
		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Description;

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xAE6A68", Offset = "0xAE6A68", VA = "0xAE6A68")]
		public void Update()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xAE6BD8", Offset = "0xAE6BD8", VA = "0xAE6BD8")]
		public ChatAppIdCheckerUI()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class ChatGui : MonoBehaviour, IChatClientListener
	{
		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] ChannelsToJoinOnConnect;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] FriendsList;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int HistoryLengthToFetch;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x637F6C", Offset = "0x637F6C")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string selectedChannelName;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChatClient chatClient;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected internal ChatAppSettings chatAppSettings;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject missingAppIdErrorPanel;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject ConnectingLabel;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RectTransform ChatPanel;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject UserIdFormPanel;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InputField InputFieldChat;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text CurrentChannelText;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Toggle ChannelToggleToInstantiate;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject FriendListUiItemtoInstantiate;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Dictionary<string, Toggle> channelToggles;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Dictionary<string, FriendItem> friendListItemLUT;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool ShowState;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject Title;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Text StateText;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Text UserIdText;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string HelpText;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int TestLength;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private byte[] testBytes;

		[Token(Token = "0x17000236")]
		public string UserName
		{
			[Token(Token = "0x6001645")]
			[Address(RVA = "0xAE6BE0", Offset = "0xAE6BE0", VA = "0xAE6BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64158C", Offset = "0x64158C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001646")]
			[Address(RVA = "0xAE6BE8", Offset = "0xAE6BE8", VA = "0xAE6BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x64159C", Offset = "0x64159C")]
			set
			{
			}
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xAE6BF0", Offset = "0xAE6BF0", VA = "0xAE6BF0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xAE6EDC", Offset = "0xAE6EDC", VA = "0xAE6EDC")]
		public void Connect()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xAE7084", Offset = "0xAE7084", VA = "0xAE7084")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xAE709C", Offset = "0xAE709C", VA = "0xAE709C")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xAE70B4", Offset = "0xAE70B4", VA = "0xAE70B4")]
		public void Update()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xAE71A4", Offset = "0xAE71A4", VA = "0xAE71A4")]
		public void OnEnterSend()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xAE7C20", Offset = "0xAE7C20", VA = "0xAE7C20")]
		public void OnClickSend()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xAE723C", Offset = "0xAE723C", VA = "0xAE723C")]
		private void SendChatMessage(string inputLine)
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xAE7CE8", Offset = "0xAE7CE8", VA = "0xAE7CE8")]
		public void PostHelpToCurrentChannel()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xAE8024", Offset = "0xAE8024", VA = "0xAE8024", Slot = "4")]
		public void DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xAE8100", Offset = "0xAE8100", VA = "0xAE8100", Slot = "6")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xAE845C", Offset = "0xAE845C", VA = "0xAE845C", Slot = "5")]
		public void OnDisconnected()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xAE8480", Offset = "0xAE8480", VA = "0xAE8480", Slot = "7")]
		public void OnChatStateChange(ChatState state)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xAE8528", Offset = "0xAE8528", VA = "0xAE8528", Slot = "10")]
		public void OnSubscribed(string[] channels, bool[] results)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xAE88AC", Offset = "0xAE88AC", VA = "0xAE88AC")]
		public void OnSubscribed(string channel, string[] users, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xAE86D8", Offset = "0xAE86D8", VA = "0xAE86D8")]
		private void InstantiateChannelButton(string channelName)
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xAE8308", Offset = "0xAE8308", VA = "0xAE8308")]
		private void InstantiateFriendButton(string friendId)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xAE8A88", Offset = "0xAE8A88", VA = "0xAE8A88", Slot = "11")]
		public void OnUnsubscribed(string[] channels)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xAE8EF0", Offset = "0xAE8EF0", VA = "0xAE8EF0", Slot = "8")]
		public void OnGetMessages(string channelName, string[] senders, object[] messages)
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xAE8F40", Offset = "0xAE8F40", VA = "0xAE8F40", Slot = "9")]
		public void OnPrivateMessage(string sender, object message, string channelName)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xAE9060", Offset = "0xAE9060", VA = "0xAE9060", Slot = "12")]
		public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xAE9240", Offset = "0xAE9240", VA = "0xAE9240", Slot = "13")]
		public void OnUserSubscribed(string channel, string user)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xAE936C", Offset = "0xAE936C", VA = "0xAE936C", Slot = "14")]
		public void OnUserUnsubscribed(string channel, string user)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xAE9498", Offset = "0xAE9498", VA = "0xAE9498")]
		public void OnChannelPropertiesChanged(string channel, string userId, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xAE9640", Offset = "0xAE9640", VA = "0xAE9640")]
		public void OnUserPropertiesChanged(string channel, string targetUserId, string senderUserId, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xAE9820", Offset = "0xAE9820", VA = "0xAE9820")]
		public void OnErrorInfo(string channel, string error, object data)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xAE998C", Offset = "0xAE998C", VA = "0xAE998C")]
		public void AddMessageToSelectedChannel(string msg)
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xAE7DA0", Offset = "0xAE7DA0", VA = "0xAE7DA0")]
		public void ShowChannel(string channelName)
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xAE9A84", Offset = "0xAE9A84", VA = "0xAE9A84")]
		public void OpenDashboard()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xAE9ACC", Offset = "0xAE9ACC", VA = "0xAE9ACC")]
		public ChatGui()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class FriendItem : MonoBehaviour
	{
		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text NameLabel;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text StatusLabel;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text Health;

		[Token(Token = "0x17000237")]
		[HideInInspector]
		public string FriendId
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x8EAE48", Offset = "0x8EAE48", VA = "0x8EAE48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001666")]
			[Address(RVA = "0x8EAE20", Offset = "0x8EAE20", VA = "0x8EAE20")]
			set
			{
			}
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x8EAE70", Offset = "0x8EAE70", VA = "0x8EAE70")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x8EAED8", Offset = "0x8EAED8", VA = "0x8EAED8")]
		public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x8EB068", Offset = "0x8EB068", VA = "0x8EB068")]
		public FriendItem()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x600166B")]
		[Address(RVA = "0x8F3C5C", Offset = "0x8F3C5C", VA = "0x8F3C5C", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x8F3C80", Offset = "0x8F3C80", VA = "0x8F3C80")]
		public IgnoreUiRaycastWhenInactive()
		{
		}
	}
	[Token(Token = "0x2000367")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62F0CC", Offset = "0x62F0CC")]
	public class NamePickGui : MonoBehaviour
	{
		[Token(Token = "0x4001651")]
		private const string UserNamePlayerPref = "NamePickUserName";

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChatGui chatNewComponent;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField idInput;

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x12E4C74", Offset = "0x12E4C74", VA = "0x12E4C74")]
		public void Start()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x12E4D58", Offset = "0x12E4D58", VA = "0x12E4D58")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x12E4DA4", Offset = "0x12E4DA4", VA = "0x12E4DA4")]
		public void StartChat()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x12E4E98", Offset = "0x12E4E98", VA = "0x12E4E98")]
		public NamePickGui()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x2000368")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x6001671")]
		[Address(RVA = "0x8E4D08", Offset = "0x8E4D08", VA = "0x8E4D08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x8E4E1C", Offset = "0x8E4E1C", VA = "0x8E4E1C")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x6001673")]
		[Address(RVA = "0x96DF20", Offset = "0x96DF20", VA = "0x96DF20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x96DFA0", Offset = "0x96DFA0", VA = "0x96DFA0")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62F134", Offset = "0x62F134")]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x10E5024", Offset = "0x10E5024", VA = "0x10E5024")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x10E5088", Offset = "0x10E5088", VA = "0x10E5088")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x10E50BC", Offset = "0x10E50BC", VA = "0x10E50BC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x10E50F0", Offset = "0x10E50F0", VA = "0x10E50F0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x10E51B8", Offset = "0x10E51B8", VA = "0x10E51B8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x10E5280", Offset = "0x10E5280", VA = "0x10E5280")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62F19C", Offset = "0x62F19C")]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x10E52C4", Offset = "0x10E52C4", VA = "0x10E52C4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x10E5438", Offset = "0x10E5438", VA = "0x10E5438")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x10E53D0", Offset = "0x10E53D0", VA = "0x10E53D0")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x10E54FC", Offset = "0x10E54FC", VA = "0x10E54FC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x10E5574", Offset = "0x10E5574", VA = "0x10E5574", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x10E55E8", Offset = "0x10E55E8", VA = "0x10E55E8")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200036C")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000238")]
		public bool Highlight
		{
			[Token(Token = "0x6001681")]
			[Address(RVA = "0xAE9DA0", Offset = "0xAE9DA0", VA = "0xAE9DA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001682")]
			[Address(RVA = "0xAE9DA8", Offset = "0xAE9DA8", VA = "0xAE9DA8")]
			set
			{
			}
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xAE9DB4", Offset = "0xAE9DB4", VA = "0xAE9DB4")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xAE9F74", Offset = "0xAE9F74", VA = "0xAE9F74", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xAE9F9C", Offset = "0xAE9F9C", VA = "0xAE9F9C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xAE9FC4", Offset = "0xAE9FC4", VA = "0xAE9FC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xAE9E74", Offset = "0xAE9E74", VA = "0xAE9E74")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xAEA2A0", Offset = "0xAEA2A0", VA = "0xAEA2A0")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000239")]
		public bool InRange
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0x9B80B4", Offset = "0x9B80B4", VA = "0x9B80B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600168B")]
			[Address(RVA = "0x9B80BC", Offset = "0x9B80BC", VA = "0x9B80BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public bool Targeted
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0x9B8244", Offset = "0x9B8244", VA = "0x9B8244")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600168D")]
			[Address(RVA = "0x9B824C", Offset = "0x9B824C", VA = "0x9B824C")]
			set
			{
			}
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x9B8258", Offset = "0x9B8258", VA = "0x9B8258", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x9B80C8", Offset = "0x9B80C8", VA = "0x9B80C8")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x9B83C4", Offset = "0x9B83C4", VA = "0x9B83C4")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62F204", Offset = "0x62F204")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700023B")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001691")]
			[Address(RVA = "0x9B83CC", Offset = "0x9B83CC", VA = "0x9B83CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001692")]
			[Address(RVA = "0x9B83D4", Offset = "0x9B83D4", VA = "0x9B83D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x9B83F0", Offset = "0x9B83F0", VA = "0x9B83F0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x9B8630", Offset = "0x9B8630", VA = "0x9B8630", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x9B8F54", Offset = "0x9B8F54", VA = "0x9B8F54", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x9B93E8", Offset = "0x9B93E8", VA = "0x9B93E8", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x9B96AC", Offset = "0x9B96AC", VA = "0x9B96AC")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x9B88A4", Offset = "0x9B88A4", VA = "0x9B88A4")]
		protected bool FindTarget([Out] DistanceGrabbable dgOut, [Out] Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x9B97B0", Offset = "0x9B97B0", VA = "0x9B97B0")]
		protected bool FindTargetWithSpherecast([Out] DistanceGrabbable dgOut, [Out] Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x9B9BF4", Offset = "0x9B9BF4", VA = "0x9B9BF4", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x9B9C0C", Offset = "0x9B9C0C", VA = "0x9B9C0C", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x9B9C14", Offset = "0x9B9C14", VA = "0x9B9C14")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000370")]
		public enum CrosshairState
		{
			[Token(Token = "0x400167D")]
			Disabled,
			[Token(Token = "0x400167E")]
			Enabled,
			[Token(Token = "0x400167F")]
			Targeted
		}

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x8EC194", Offset = "0x8EC194", VA = "0x8EC194")]
		private void Start()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x8EC208", Offset = "0x8EC208", VA = "0x8EC208")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x8EC2A4", Offset = "0x8EC2A4", VA = "0x8EC2A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x8EC2EC", Offset = "0x8EC2EC", VA = "0x8EC2EC")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x8EC01C", Offset = "0x8EC01C", VA = "0x8EC01C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x8EC0D4", Offset = "0x8EC0D4", VA = "0x8EC0D4")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x8EC18C", Offset = "0x8EC18C", VA = "0x8EC18C")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x972E90", Offset = "0x972E90", VA = "0x972E90")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x972F84", Offset = "0x972F84", VA = "0x972F84")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x972F90", Offset = "0x972F90", VA = "0x972F90")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x972F9C", Offset = "0x972F9C", VA = "0x972F9C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xCC8424", Offset = "0xCC8424", VA = "0xCC8424")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xCC8478", Offset = "0xCC8478", VA = "0xCC8478")]
		private void Update()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xCC87D4", Offset = "0xCC87D4", VA = "0xCC87D4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xCC88D8", Offset = "0xCC88D8", VA = "0xCC88D8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xCC847C", Offset = "0xCC847C", VA = "0xCC847C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xCC89DC", Offset = "0xCC89DC", VA = "0xCC89DC")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000375")]
		public enum ContactTest
		{
			[Token(Token = "0x4001695")]
			PerpenTest,
			[Token(Token = "0x4001696")]
			BackwardsPress
		}

		[Token(Token = "0x4001687")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001688")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700023C")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0xCCB2DC", Offset = "0xCCB2DC", VA = "0xCCB2DC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023D")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xCCB2E4", Offset = "0xCCB2E4", VA = "0xCCB2E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xCCB2F0", Offset = "0xCCB2F0", VA = "0xCCB2F0", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xCCB404", Offset = "0xCCB404", VA = "0xCCB404")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xCCB560", Offset = "0xCCB560", VA = "0xCCB560", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xCCBAF0", Offset = "0xCCBAF0", VA = "0xCCBAF0")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xCCBA08", Offset = "0xCCBA08", VA = "0xCCBA08")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xCCBBA0", Offset = "0xCCBBA0", VA = "0xCCBBA0")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xCCBC24", Offset = "0xCCBC24", VA = "0xCCBC24")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xCCBCB0", Offset = "0xCCBCB0", VA = "0xCCBCB0")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6380AC", Offset = "0x6380AC")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6380BC", Offset = "0x6380BC")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700023E")]
		public Collider Collider
		{
			[Token(Token = "0x60016B8")]
			[Address(RVA = "0xCCBF04", Offset = "0xCCBF04", VA = "0xCCBF04", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6415AC", Offset = "0x6415AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0xCCBF0C", Offset = "0xCCBF0C", VA = "0xCCBF0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6415BC", Offset = "0x6415BC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60016BA")]
			[Address(RVA = "0xCCBF14", Offset = "0xCCBF14", VA = "0xCCBF14", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6415CC", Offset = "0x6415CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0xCCBF1C", Offset = "0xCCBF1C", VA = "0xCCBF1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6415DC", Offset = "0x6415DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0xCCBF24", Offset = "0xCCBF24", VA = "0xCCBF24", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xCCBF78", Offset = "0xCCBF78", VA = "0xCCBF78")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xCCC018", Offset = "0xCCC018", VA = "0xCCC018")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000241")]
		Collider Collider
		{
			[Token(Token = "0x60016BF")]
			get;
		}

		[Token(Token = "0x17000242")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60016C0")]
			get;
		}

		[Token(Token = "0x17000243")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60016C1")]
			get;
		}
	}
	[Token(Token = "0x2000378")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xAE9CE8", Offset = "0xAE9CE8", VA = "0xAE9CE8")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000379")]
	public enum InteractionType
	{
		[Token(Token = "0x400169F")]
		Enter,
		[Token(Token = "0x40016A0")]
		Stay,
		[Token(Token = "0x40016A1")]
		Exit
	}
	[Token(Token = "0x200037A")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200037B")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40016B3")]
			Mesh,
			[Token(Token = "0x40016B4")]
			Skeleton,
			[Token(Token = "0x40016B5")]
			Both
		}

		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F26C", Offset = "0x62F26C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700024F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016E4")]
				[Address(RVA = "0x7DBF5C", Offset = "0x7DBF5C", VA = "0x7DBF5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000250")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016E6")]
				[Address(RVA = "0x7DBFA4", Offset = "0x7DBFA4", VA = "0x7DBFA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x7DBCD0", Offset = "0x7DBCD0", VA = "0x7DBCD0")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x7DBCFC", Offset = "0x7DBCFC", VA = "0x7DBCFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x7DBD00", Offset = "0x7DBD00", VA = "0x7DBD00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x7DBF64", Offset = "0x7DBF64", VA = "0x7DBF64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016A2")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6380EC", Offset = "0x6380EC")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000244")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x8E94C8", Offset = "0x8E94C8", VA = "0x8E94C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x8ED5E4", Offset = "0x8ED5E4", VA = "0x8ED5E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x8ED650", Offset = "0x8ED650", VA = "0x8ED650")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x8ED688", Offset = "0x8ED688", VA = "0x8ED688")]
			private set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x8ED6F4", Offset = "0x8ED6F4", VA = "0x8ED6F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x8ED72C", Offset = "0x8ED72C", VA = "0x8ED72C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x8ED798", Offset = "0x8ED798", VA = "0x8ED798")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x8ED7D0", Offset = "0x8ED7D0", VA = "0x8ED7D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x8ED83C", Offset = "0x8ED83C", VA = "0x8ED83C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0x8ED874", Offset = "0x8ED874", VA = "0x8ED874")]
			private set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x8E9494", Offset = "0x8E9494", VA = "0x8E9494")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x8ED8E0", Offset = "0x8ED8E0", VA = "0x8ED8E0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x8ED948", Offset = "0x8ED948", VA = "0x8ED948")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x8ED97C", Offset = "0x8ED97C", VA = "0x8ED97C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x8ED9E4", Offset = "0x8ED9E4", VA = "0x8ED9E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x8EDA18", Offset = "0x8EDA18", VA = "0x8EDA18")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x8EDA80", Offset = "0x8EDA80", VA = "0x8EDA80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x8EDAB4", Offset = "0x8EDAB4", VA = "0x8EDAB4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x8EDB1C", Offset = "0x8EDB1C", VA = "0x8EDB1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x8EDB50", Offset = "0x8EDB50", VA = "0x8EDB50")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x8EDBB8", Offset = "0x8EDBB8", VA = "0x8EDBB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6415EC", Offset = "0x6415EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x8EDC04", Offset = "0x8EDC04", VA = "0x8EDC04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6415FC", Offset = "0x6415FC")]
			private set
			{
			}
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x8EDC60", Offset = "0x8EDC60", VA = "0x8EDC60")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x8EE03C", Offset = "0x8EE03C", VA = "0x8EE03C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x8EDFBC", Offset = "0x8EDFBC", VA = "0x8EDFBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64160C", Offset = "0x64160C")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x8EE0C4", Offset = "0x8EE0C4", VA = "0x8EE0C4")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x8EE1A8", Offset = "0x8EE1A8", VA = "0x8EE1A8")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x8EE388", Offset = "0x8EE388", VA = "0x8EE388")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x8E9308", Offset = "0x8E9308", VA = "0x8E9308")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x8EE5AC", Offset = "0x8EE5AC", VA = "0x8EE5AC")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200037E")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x7FFD5C", Offset = "0x7FFD5C", VA = "0x7FFD5C")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000251")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x8F4238", Offset = "0x8F4238", VA = "0x8F4238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x8F4240", Offset = "0x8F4240", VA = "0x8F4240")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x8F4248", Offset = "0x8F4248", VA = "0x8F4248")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x8F4250", Offset = "0x8F4250", VA = "0x8F4250", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x8F4258", Offset = "0x8F4258", VA = "0x8F4258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6416C4", Offset = "0x6416C4")]
			add
			{
			}
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x8F42F8", Offset = "0x8F42F8", VA = "0x8F42F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6416D4", Offset = "0x6416D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x8F4408", Offset = "0x8F4408", VA = "0x8F4408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6416E4", Offset = "0x6416E4")]
			add
			{
			}
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x8F44A8", Offset = "0x8F44A8", VA = "0x8F44A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6416F4", Offset = "0x6416F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x8F45B8", Offset = "0x8F45B8", VA = "0x8F45B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641704", Offset = "0x641704")]
			add
			{
			}
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x8F4658", Offset = "0x8F4658", VA = "0x8F4658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641714", Offset = "0x641714")]
			remove
			{
			}
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x8F4398", Offset = "0x8F4398", VA = "0x8F4398", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x8F4548", Offset = "0x8F4548", VA = "0x8F4548", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x8F46F8", Offset = "0x8F46F8", VA = "0x8F46F8", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60016F4")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x8F4768", Offset = "0x8F4768", VA = "0x8F4768", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x8F489C", Offset = "0x8F489C", VA = "0x8F489C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x8F49D0", Offset = "0x8F49D0", VA = "0x8F49D0")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40016C1")]
		None,
		[Token(Token = "0x40016C2")]
		Proximity,
		[Token(Token = "0x40016C3")]
		Contact,
		[Token(Token = "0x40016C4")]
		Action
	}
	[Token(Token = "0x2000380")]
	public enum InteractableState
	{
		[Token(Token = "0x40016C6")]
		Default,
		[Token(Token = "0x40016C7")]
		ProximityState,
		[Token(Token = "0x40016C8")]
		ContactState,
		[Token(Token = "0x40016C9")]
		ActionState
	}
	[Token(Token = "0x2000381")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x8F4AD8", Offset = "0x8F4AD8", VA = "0x8F4AD8")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000255")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0x8F49D8", Offset = "0x8F49D8", VA = "0x8F49D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x8F47D0", Offset = "0x8F47D0", VA = "0x8F47D0")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x8F4904", Offset = "0x8F4904", VA = "0x8F4904")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x8F4A3C", Offset = "0x8F4A3C", VA = "0x8F4A3C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F27C", Offset = "0x62F27C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40016D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40016D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40016D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40016D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40016D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40016DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000256")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001707")]
				[Address(RVA = "0x8002C4", Offset = "0x8002C4", VA = "0x8002C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000257")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001709")]
				[Address(RVA = "0x80030C", Offset = "0x80030C", VA = "0x80030C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001703")]
			[Address(RVA = "0x7FFDB0", Offset = "0x7FFDB0", VA = "0x7FFDB0")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001704")]
			[Address(RVA = "0x7FFDDC", Offset = "0x7FFDDC", VA = "0x7FFDDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001705")]
			[Address(RVA = "0x7FFE54", Offset = "0x7FFE54", VA = "0x7FFE54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001706")]
			[Address(RVA = "0x7FFDF8", Offset = "0x7FFDF8", VA = "0x7FFDF8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001708")]
			[Address(RVA = "0x8002CC", Offset = "0x8002CC", VA = "0x8002CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x8F56D4", Offset = "0x8F56D4", VA = "0x8F56D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x8F5750", Offset = "0x8F5750", VA = "0x8F5750")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x641724", Offset = "0x641724")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x8F57F8", Offset = "0x8F57F8", VA = "0x8F57F8")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x8F58E0", Offset = "0x8F58E0", VA = "0x8F58E0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000258")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0x8E8DC8", Offset = "0x8E8DC8", VA = "0x8E8DC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x8E8F48", Offset = "0x8E8F48", VA = "0x8E8F48")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x8F58E8", Offset = "0x8F58E8", VA = "0x8F58E8")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x8F5990", Offset = "0x8F5990", VA = "0x8F5990")]
		private void Update()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x8F5C3C", Offset = "0x8F5C3C", VA = "0x8F5C3C")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x8F5C84", Offset = "0x8F5C84", VA = "0x8F5C84")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x8F5F2C", Offset = "0x8F5F2C", VA = "0x8F5F2C")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x8F6070", Offset = "0x8F6070", VA = "0x8F6070")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F28C", Offset = "0x62F28C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700025D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001723")]
				[Address(RVA = "0x7DBA1C", Offset = "0x7DBA1C", VA = "0x7DBA1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001725")]
				[Address(RVA = "0x7DBA64", Offset = "0x7DBA64", VA = "0x7DBA64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001720")]
			[Address(RVA = "0x7DB5E8", Offset = "0x7DB5E8", VA = "0x7DB5E8")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001721")]
			[Address(RVA = "0x7DB614", Offset = "0x7DB614", VA = "0x7DB614", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001722")]
			[Address(RVA = "0x7DB618", Offset = "0x7DB618", VA = "0x7DB618", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001724")]
			[Address(RVA = "0x7DBA24", Offset = "0x7DBA24", VA = "0x7DBA24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016E2")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000259")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0x8E8C94", Offset = "0x8E8C94", VA = "0x8E8C94", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700025A")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001713")]
			[Address(RVA = "0x8E8C9C", Offset = "0x8E8C9C", VA = "0x8E8C9C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700025B")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0x8E8CA4", Offset = "0x8E8CA4", VA = "0x8E8CA4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025C")]
		public override bool EnableState
		{
			[Token(Token = "0x6001715")]
			[Address(RVA = "0x8E8CAC", Offset = "0x8E8CAC", VA = "0x8E8CAC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001716")]
			[Address(RVA = "0x8E8CD8", Offset = "0x8E8CD8", VA = "0x8E8CD8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x8E8D14", Offset = "0x8E8D14", VA = "0x8E8D14", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x8E8FF0", Offset = "0x8E8FF0", VA = "0x8E8FF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6417DC", Offset = "0x6417DC")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x8E9070", Offset = "0x8E9070", VA = "0x8E9070")]
		private void Update()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x8E9500", Offset = "0x8E9500", VA = "0x8E9500")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x8E968C", Offset = "0x8E968C", VA = "0x8E968C")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x8E9780", Offset = "0x8E9780", VA = "0x8E9780", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x8E9ADC", Offset = "0x8E9ADC", VA = "0x8E9ADC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x8E9AE0", Offset = "0x8E9AE0", VA = "0x8E9AE0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x8E9AE4", Offset = "0x8E9AE4", VA = "0x8E9AE4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63817C", Offset = "0x63817C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63818C", Offset = "0x63818C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63819C", Offset = "0x63819C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700025F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001726")]
			[Address(RVA = "0x8E9C98", Offset = "0x8E9C98", VA = "0x8E9C98", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641894", Offset = "0x641894")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001727")]
			[Address(RVA = "0x8E9CA0", Offset = "0x8E9CA0", VA = "0x8E9CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6418A4", Offset = "0x6418A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public bool EnableState
		{
			[Token(Token = "0x6001728")]
			[Address(RVA = "0x8E9CA8", Offset = "0x8E9CA8", VA = "0x8E9CA8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001729")]
			[Address(RVA = "0x8E9CC8", Offset = "0x8E9CC8", VA = "0x8E9CC8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600172A")]
			[Address(RVA = "0x8E9CEC", Offset = "0x8E9CEC", VA = "0x8E9CEC", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6418B4", Offset = "0x6418B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600172B")]
			[Address(RVA = "0x8E9CF4", Offset = "0x8E9CF4", VA = "0x8E9CF4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6418C4", Offset = "0x6418C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public float SphereRadius
		{
			[Token(Token = "0x600172C")]
			[Address(RVA = "0x8E9D00", Offset = "0x8E9D00", VA = "0x8E9D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6418D4", Offset = "0x6418D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600172D")]
			[Address(RVA = "0x8E9D08", Offset = "0x8E9D08", VA = "0x8E9D08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6418E4", Offset = "0x6418E4")]
			private set
			{
			}
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x8E9D10", Offset = "0x8E9D10", VA = "0x8E9D10")]
		private void Awake()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x8E9D58", Offset = "0x8E9D58", VA = "0x8E9D58", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x8E9D5C", Offset = "0x8E9D5C", VA = "0x8E9D5C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000389")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40016F5")]
		None = 0,
		[Token(Token = "0x40016F6")]
		Ray = 1,
		[Token(Token = "0x40016F7")]
		Poke = 4,
		[Token(Token = "0x40016F8")]
		All = -1
	}
	[Token(Token = "0x200038A")]
	public enum ToolInputState
	{
		[Token(Token = "0x40016FA")]
		Inactive,
		[Token(Token = "0x40016FB")]
		PrimaryInputDown,
		[Token(Token = "0x40016FC")]
		PrimaryInputDownStay,
		[Token(Token = "0x40016FD")]
		PrimaryInputUp
	}
	[Token(Token = "0x200038B")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x8E9A84", Offset = "0x8E9A84", VA = "0x8E9A84")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200038C")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6381AC", Offset = "0x6381AC")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6381BC", Offset = "0x6381BC")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6381CC", Offset = "0x6381CC")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000263")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001732")]
			[Address(RVA = "0x8F4B9C", Offset = "0x8F4B9C", VA = "0x8F4B9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001733")]
			[Address(RVA = "0x8F4BA4", Offset = "0x8F4BA4", VA = "0x8F4BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6418F4", Offset = "0x6418F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001734")]
			[Address(RVA = "0x8F4BAC", Offset = "0x8F4BAC", VA = "0x8F4BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641904", Offset = "0x641904")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001735")]
			get;
		}

		[Token(Token = "0x17000266")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001736")]
			get;
		}

		[Token(Token = "0x17000267")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001737")]
			get;
		}

		[Token(Token = "0x17000268")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001738")]
			[Address(RVA = "0x8F4BB8", Offset = "0x8F4BB8", VA = "0x8F4BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641914", Offset = "0x641914")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001739")]
			[Address(RVA = "0x8F4BC4", Offset = "0x8F4BC4", VA = "0x8F4BC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641924", Offset = "0x641924")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600173A")]
			[Address(RVA = "0x8F4BD0", Offset = "0x8F4BD0", VA = "0x8F4BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641934", Offset = "0x641934")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600173B")]
			[Address(RVA = "0x8F4BDC", Offset = "0x8F4BDC", VA = "0x8F4BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641944", Offset = "0x641944")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001740")]
			get;
			[Token(Token = "0x6001741")]
			set;
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x8F4BE8", Offset = "0x8F4BE8", VA = "0x8F4BE8")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600173D")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600173E")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600173F")]
		public abstract void DeFocus();

		[Token(Token = "0x6001742")]
		public abstract void Initialize();

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x8F4BF0", Offset = "0x8F4BF0", VA = "0x8F4BF0")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x8F4C44", Offset = "0x8F4C44", VA = "0x8F4C44")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x8F4C98", Offset = "0x8F4C98", VA = "0x8F4C98", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x8F4F40", Offset = "0x8F4F40", VA = "0x8F4F40", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x8E9AF8", Offset = "0x8E9AF8", VA = "0x8E9AF8")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700026B")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001748")]
			get;
		}

		[Token(Token = "0x1700026C")]
		bool EnableState
		{
			[Token(Token = "0x600174A")]
			get;
			[Token(Token = "0x600174B")]
			set;
		}

		[Token(Token = "0x1700026D")]
		bool ToolActivateState
		{
			[Token(Token = "0x600174C")]
			get;
			[Token(Token = "0x600174D")]
			set;
		}

		[Token(Token = "0x6001749")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200038E")]
	public class PinchStateModule
	{
		[Token(Token = "0x200038F")]
		private enum PinchState
		{
			[Token(Token = "0x400170E")]
			None,
			[Token(Token = "0x400170F")]
			PinchDown,
			[Token(Token = "0x4001710")]
			PinchStay,
			[Token(Token = "0x4001711")]
			PinchUp
		}

		[Token(Token = "0x400170A")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700026E")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600174E")]
			[Address(RVA = "0x975268", Offset = "0x975268", VA = "0x975268")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026F")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600174F")]
			[Address(RVA = "0x9752F0", Offset = "0x9752F0", VA = "0x9752F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000270")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0x975378", Offset = "0x975378", VA = "0x975378")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x975400", Offset = "0x975400", VA = "0x975400")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x975434", Offset = "0x975434", VA = "0x975434")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001712")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001713")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001714")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001715")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001716")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6381EC", Offset = "0x6381EC")]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000271")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001753")]
			[Address(RVA = "0xC69FD4", Offset = "0xC69FD4", VA = "0xC69FD4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000272")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001754")]
			[Address(RVA = "0xC69FDC", Offset = "0xC69FDC", VA = "0xC69FDC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000273")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001755")]
			[Address(RVA = "0xC6A050", Offset = "0xC6A050", VA = "0xC6A050", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000274")]
		public override bool EnableState
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0xC6A058", Offset = "0xC6A058", VA = "0xC6A058", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001757")]
			[Address(RVA = "0xC6A0A0", Offset = "0xC6A0A0", VA = "0xC6A0A0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xC6A118", Offset = "0xC6A118", VA = "0xC6A118", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xC6A180", Offset = "0xC6A180", VA = "0xC6A180")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xC6A230", Offset = "0xC6A230", VA = "0xC6A230")]
		private void Update()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xC6A4F8", Offset = "0xC6A4F8", VA = "0xC6A4F8")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xC6A580", Offset = "0xC6A580", VA = "0xC6A580", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xC6A940", Offset = "0xC6A940", VA = "0xC6A940")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xC6AA50", Offset = "0xC6AA50", VA = "0xC6AA50")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xC6AB74", Offset = "0xC6AB74", VA = "0xC6AB74")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xC6AE6C", Offset = "0xC6AE6C", VA = "0xC6AE6C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xC6B1F4", Offset = "0xC6B1F4", VA = "0xC6B1F4", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xC6B2DC", Offset = "0xC6B2DC", VA = "0xC6B2DC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xC6B318", Offset = "0xC6B318", VA = "0xC6B318")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001722")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001723")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638260", Offset = "0x638260")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000275")]
		public bool EnableState
		{
			[Token(Token = "0x6001764")]
			[Address(RVA = "0xC6A080", Offset = "0xC6A080", VA = "0xC6A080", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001765")]
			[Address(RVA = "0xC6A0C0", Offset = "0xC6A0C0", VA = "0xC6A0C0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001766")]
			[Address(RVA = "0xC6B420", Offset = "0xC6B420", VA = "0xC6B420", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001767")]
			[Address(RVA = "0xC6A4B8", Offset = "0xC6A4B8", VA = "0xC6A4B8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0xC6B680", Offset = "0xC6B680", VA = "0xC6B680", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641954", Offset = "0x641954")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176A")]
			[Address(RVA = "0xC6B688", Offset = "0xC6B688", VA = "0xC6B688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641964", Offset = "0x641964")]
			set
			{
			}
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xC6B428", Offset = "0xC6B428", VA = "0xC6B428")]
		private void Awake()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xC6B230", Offset = "0xC6B230", VA = "0xC6B230", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xC6B690", Offset = "0xC6B690", VA = "0xC6B690")]
		private void Update()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xC6B904", Offset = "0xC6B904", VA = "0xC6B904")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xC6B9F4", Offset = "0xC6B9F4", VA = "0xC6B9F4")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000278")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600176F")]
			[Address(RVA = "0x9B9C34", Offset = "0x9B9C34", VA = "0x9B9C34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001770")]
			[Address(RVA = "0x9B9C3C", Offset = "0x9B9C3C", VA = "0x9B9C3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001771")]
			[Address(RVA = "0x9B9CC4", Offset = "0x9B9CC4", VA = "0x9B9CC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001772")]
			[Address(RVA = "0x9B9CCC", Offset = "0x9B9CCC", VA = "0x9B9CCC")]
			set
			{
			}
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x9B9D38", Offset = "0x9B9D38", VA = "0x9B9D38")]
		private void Start()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x9B9FE4", Offset = "0x9B9FE4", VA = "0x9B9FE4")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x9B9FF4", Offset = "0x9B9FF4", VA = "0x9B9FF4")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x9BA004", Offset = "0x9BA004", VA = "0x9BA004")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xAF1854", Offset = "0xAF1854", VA = "0xAF1854")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xAF1858", Offset = "0xAF1858", VA = "0xAF1858")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xAF1890", Offset = "0xAF1890", VA = "0xAF1890")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xAF18C8", Offset = "0xAF18C8", VA = "0xAF18C8")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xAF1900", Offset = "0xAF1900", VA = "0xAF1900")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xAF1938", Offset = "0xAF1938", VA = "0xAF1938")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xAF1970", Offset = "0xAF1970", VA = "0xAF1970")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xAF19A8", Offset = "0xAF19A8", VA = "0xAF19A8")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xAF1A1C", Offset = "0xAF1A1C", VA = "0xAF1A1C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xAF1A8C", Offset = "0xAF1A8C", VA = "0xAF1A8C")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xAF1B48", Offset = "0xAF1B48", VA = "0xAF1B48")]
		private void Start()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xAF1B4C", Offset = "0xAF1B4C", VA = "0xAF1B4C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xAF1A50", Offset = "0xAF1A50", VA = "0xAF1A50")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xAF1B8C", Offset = "0xAF1B8C", VA = "0xAF1B8C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F2AC", Offset = "0x62F2AC")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400173D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400173E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400173F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700027A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600178D")]
				[Address(RVA = "0x808320", Offset = "0x808320", VA = "0x808320", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600178F")]
				[Address(RVA = "0x808368", Offset = "0x808368", VA = "0x808368", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600178A")]
			[Address(RVA = "0x808130", Offset = "0x808130", VA = "0x808130")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600178B")]
			[Address(RVA = "0x80815C", Offset = "0x80815C", VA = "0x80815C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600178C")]
			[Address(RVA = "0x808160", Offset = "0x808160", VA = "0x808160", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600178E")]
			[Address(RVA = "0x808328", Offset = "0x808328", VA = "0x808328", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001733")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001734")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x97154C", Offset = "0x97154C", VA = "0x97154C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x971600", Offset = "0x971600", VA = "0x971600")]
		private void Update()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x971858", Offset = "0x971858", VA = "0x971858")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x9717D8", Offset = "0x9717D8", VA = "0x9717D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x641974", Offset = "0x641974")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x9718A4", Offset = "0x9718A4", VA = "0x9718A4")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000398")]
		public enum SelectionState
		{
			[Token(Token = "0x400174A")]
			Off,
			[Token(Token = "0x400174B")]
			Selected,
			[Token(Token = "0x400174C")]
			Highlighted
		}

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700027C")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0xC6C7CC", Offset = "0xC6C7CC", VA = "0xC6C7CC")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001791")]
			[Address(RVA = "0xC6C7D4", Offset = "0xC6C7D4", VA = "0xC6C7D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xC6C958", Offset = "0xC6C958", VA = "0xC6C958")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xC6CB54", Offset = "0xC6CB54", VA = "0xC6CB54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xC6C85C", Offset = "0xC6C85C", VA = "0xC6C85C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xC6CC40", Offset = "0xC6CC40", VA = "0xC6CC40")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200039A")]
		public enum SegmentType
		{
			[Token(Token = "0x400175B")]
			Straight,
			[Token(Token = "0x400175C")]
			LeftTurn,
			[Token(Token = "0x400175D")]
			RightTurn,
			[Token(Token = "0x400175E")]
			Switch
		}

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001753")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001754")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638340", Offset = "0x638340")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700027D")]
		public float StartDistance
		{
			[Token(Token = "0x6001797")]
			[Address(RVA = "0x10E6304", Offset = "0x10E6304", VA = "0x10E6304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641A2C", Offset = "0x641A2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001798")]
			[Address(RVA = "0x10E630C", Offset = "0x10E630C", VA = "0x10E630C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641A3C", Offset = "0x641A3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public float GridSize
		{
			[Token(Token = "0x6001799")]
			[Address(RVA = "0x10E6314", Offset = "0x10E6314", VA = "0x10E6314")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600179A")]
			[Address(RVA = "0x10E631C", Offset = "0x10E631C", VA = "0x10E631C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public int SubDivCount
		{
			[Token(Token = "0x600179B")]
			[Address(RVA = "0x10E6324", Offset = "0x10E6324", VA = "0x10E6324")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600179C")]
			[Address(RVA = "0x10E632C", Offset = "0x10E632C", VA = "0x10E632C")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public SegmentType Type
		{
			[Token(Token = "0x600179D")]
			[Address(RVA = "0x10E6334", Offset = "0x10E6334", VA = "0x10E6334")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000281")]
		public Pose EndPose
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0x10E633C", Offset = "0x10E633C", VA = "0x10E633C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000282")]
		public float Radius
		{
			[Token(Token = "0x600179F")]
			[Address(RVA = "0x10E6650", Offset = "0x10E6650", VA = "0x10E6650")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000283")]
		public float SegmentLength
		{
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0x10E63A4", Offset = "0x10E63A4", VA = "0x10E63A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x10E6660", Offset = "0x10E6660", VA = "0x10E6660")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x10E6678", Offset = "0x10E6678", VA = "0x10E6678")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x10E63E4", Offset = "0x10E63E4", VA = "0x10E63E4")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x10E667C", Offset = "0x10E667C", VA = "0x10E667C")]
		private void Update()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x10E6680", Offset = "0x10E6680", VA = "0x10E6680")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x10E66F0", Offset = "0x10E66F0", VA = "0x10E66F0")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x10E6FB0", Offset = "0x10E6FB0", VA = "0x10E6FB0")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x10E7258", Offset = "0x10E7258", VA = "0x10E7258")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200039C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F2BC", Offset = "0x62F2BC")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001772")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000284")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017B7")]
				[Address(RVA = "0xA7BCE4", Offset = "0xA7BCE4", VA = "0xA7BCE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000285")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017B9")]
				[Address(RVA = "0xA7BD2C", Offset = "0xA7BD2C", VA = "0xA7BD2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017B4")]
			[Address(RVA = "0xA7BB40", Offset = "0xA7BB40", VA = "0xA7BB40")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60017B5")]
			[Address(RVA = "0xA7BB6C", Offset = "0xA7BB6C", VA = "0xA7BB6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xA7BB70", Offset = "0xA7BB70", VA = "0xA7BB70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017B8")]
			[Address(RVA = "0xA7BCEC", Offset = "0xA7BCEC", VA = "0xA7BCEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400175F")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001760")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x10E7328", Offset = "0x10E7328", VA = "0x10E7328")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x10E73EC", Offset = "0x10E73EC", VA = "0x10E73EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x10E749C", Offset = "0x10E749C", VA = "0x10E749C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x10E7614", Offset = "0x10E7614", VA = "0x10E7614")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x10E77DC", Offset = "0x10E77DC", VA = "0x10E77DC")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x10E78C4", Offset = "0x10E78C4", VA = "0x10E78C4")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x10E7AD8", Offset = "0x10E7AD8", VA = "0x10E7AD8")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x10E79D8", Offset = "0x10E79D8", VA = "0x10E79D8")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x10E79EC", Offset = "0x10E79EC", VA = "0x10E79EC")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x10E7B30", Offset = "0x10E7B30", VA = "0x10E7B30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x641A4C", Offset = "0x641A4C")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x10E7BB0", Offset = "0x10E7BB0", VA = "0x10E7BB0")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000286")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x10E7C60", Offset = "0x10E7C60", VA = "0x10E7C60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x10E7C70", Offset = "0x10E7C70", VA = "0x10E7C70", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x10E7C78", Offset = "0x10E7C78", VA = "0x10E7C78", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x10E7FB8", Offset = "0x10E7FB8", VA = "0x10E7FB8")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001778")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001779")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638440", Offset = "0x638440")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000287")]
		public float Distance
		{
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x10E80D0", Offset = "0x10E80D0", VA = "0x10E80D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641B04", Offset = "0x641B04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x10E80D8", Offset = "0x10E80D8", VA = "0x10E80D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641B14", Offset = "0x641B14")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public float Scale
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x10E80E0", Offset = "0x10E80E0", VA = "0x10E80E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x10E80E8", Offset = "0x10E80E8", VA = "0x10E80E8")]
			set
			{
			}
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x10E7C74", Offset = "0x10E7C74", VA = "0x10E7C74", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x10E80F0", Offset = "0x10E80F0", VA = "0x10E80F0")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x10E7CC0", Offset = "0x10E7CC0", VA = "0x10E7CC0")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x10E7EE4", Offset = "0x10E7EE4", VA = "0x10E7EE4")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60017C6")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x10E802C", Offset = "0x10E802C", VA = "0x10E802C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20003A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F2CC", Offset = "0x62F2CC")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400178C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400178D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400178E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x400178F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000289")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017D5")]
				[Address(RVA = "0xA7BFC8", Offset = "0xA7BFC8", VA = "0xA7BFC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017D7")]
				[Address(RVA = "0xA7C010", Offset = "0xA7C010", VA = "0xA7C010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017D2")]
			[Address(RVA = "0xA7BD34", Offset = "0xA7BD34", VA = "0xA7BD34")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60017D3")]
			[Address(RVA = "0xA7BD60", Offset = "0xA7BD60", VA = "0xA7BD60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017D4")]
			[Address(RVA = "0xA7BD64", Offset = "0xA7BD64", VA = "0xA7BD64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017D6")]
			[Address(RVA = "0xA7BFD0", Offset = "0xA7BFD0", VA = "0xA7BFD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x10E827C", Offset = "0x10E827C", VA = "0x10E827C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x10E82DC", Offset = "0x10E82DC", VA = "0x10E82DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x10E83E4", Offset = "0x10E83E4", VA = "0x10E83E4")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x10E853C", Offset = "0x10E853C", VA = "0x10E853C")]
		private void Update()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x10E8444", Offset = "0x10E8444", VA = "0x10E8444")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x10E861C", Offset = "0x10E861C", VA = "0x10E861C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x641B24", Offset = "0x641B24")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x10E86AC", Offset = "0x10E86AC", VA = "0x10E86AC")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x10E8758", Offset = "0x10E8758", VA = "0x10E8758")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x10E87B8", Offset = "0x10E87B8", VA = "0x10E87B8")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20003A2")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40017B6")]
			Start,
			[Token(Token = "0x40017B7")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40017B8")]
			Stop
		}

		[Token(Token = "0x20003A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F2DC", Offset = "0x62F2DC")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40017BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40017BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40017BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40017BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40017C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40017C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700028B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017EA")]
				[Address(RVA = "0xA7C284", Offset = "0xA7C284", VA = "0xA7C284", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017EC")]
				[Address(RVA = "0xA7C2CC", Offset = "0xA7C2CC", VA = "0xA7C2CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017E7")]
			[Address(RVA = "0xA7C018", Offset = "0xA7C018", VA = "0xA7C018")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60017E8")]
			[Address(RVA = "0xA7C044", Offset = "0xA7C044", VA = "0xA7C044", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017E9")]
			[Address(RVA = "0xA7C048", Offset = "0xA7C048", VA = "0xA7C048", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017EB")]
			[Address(RVA = "0xA7C28C", Offset = "0xA7C28C", VA = "0xA7C28C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001798")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001799")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x400179A")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400179B")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6384A0", Offset = "0x6384A0")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x10E881C", Offset = "0x10E881C", VA = "0x10E881C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x10E8988", Offset = "0x10E8988", VA = "0x10E8988")]
		private void Update()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x10E8994", Offset = "0x10E8994", VA = "0x10E8994", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x10E8AE4", Offset = "0x10E8AE4", VA = "0x10E8AE4")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x10E88FC", Offset = "0x10E88FC", VA = "0x10E88FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x641BDC", Offset = "0x641BDC")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x10E8B44", Offset = "0x10E8B44", VA = "0x10E8B44")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x10E8A80", Offset = "0x10E8A80", VA = "0x10E8A80")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x10E8D48", Offset = "0x10E8D48", VA = "0x10E8D48")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x10E8E6C", Offset = "0x10E8E6C", VA = "0x10E8E6C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x10E8DB4", Offset = "0x10E8DB4", VA = "0x10E8DB4")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x10E8ED8", Offset = "0x10E8ED8", VA = "0x10E8ED8")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x10E8EF8", Offset = "0x10E8EF8", VA = "0x10E8EF8")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x10E8F84", Offset = "0x10E8F84", VA = "0x10E8F84")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x10E9048", Offset = "0x10E9048", VA = "0x10E9048")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x10E9058", Offset = "0x10E9058", VA = "0x10E9058")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700028D")]
		public float TrackLength
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x10E90C8", Offset = "0x10E90C8", VA = "0x10E90C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x10E90D0", Offset = "0x10E90D0", VA = "0x10E90D0")]
			private set
			{
			}
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x10E90D8", Offset = "0x10E90D8", VA = "0x10E90D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x10E815C", Offset = "0x10E815C", VA = "0x10E815C")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x10E90DC", Offset = "0x10E90DC", VA = "0x10E90DC")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x10E92F0", Offset = "0x10E92F0", VA = "0x10E92F0")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x10E93EC", Offset = "0x10E93EC", VA = "0x10E93EC")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class Pose
	{
		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x978028", Offset = "0x978028", VA = "0x978028")]
		public Pose()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x97806C", Offset = "0x97806C", VA = "0x97806C")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20003A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F2EC", Offset = "0x62F2EC")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40017D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40017DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40017DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700028F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001802")]
				[Address(RVA = "0xA7C6E4", Offset = "0xA7C6E4", VA = "0xA7C6E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000290")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001804")]
				[Address(RVA = "0xA7C72C", Offset = "0xA7C72C", VA = "0xA7C72C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xA7C514", Offset = "0xA7C514", VA = "0xA7C514")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001800")]
			[Address(RVA = "0xA7C540", Offset = "0xA7C540", VA = "0xA7C540", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001801")]
			[Address(RVA = "0xA7C544", Offset = "0xA7C544", VA = "0xA7C544", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001803")]
			[Address(RVA = "0xA7C6EC", Offset = "0xA7C6EC", VA = "0xA7C6EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F2FC", Offset = "0x62F2FC")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40017DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40017E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40017E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000291")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001808")]
				[Address(RVA = "0xA7C83C", Offset = "0xA7C83C", VA = "0xA7C83C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000292")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600180A")]
				[Address(RVA = "0xA7C884", Offset = "0xA7C884", VA = "0xA7C884", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001805")]
			[Address(RVA = "0xA7C734", Offset = "0xA7C734", VA = "0xA7C734")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001806")]
			[Address(RVA = "0xA7C760", Offset = "0xA7C760", VA = "0xA7C760", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001807")]
			[Address(RVA = "0xA7C764", Offset = "0xA7C764", VA = "0xA7C764", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001809")]
			[Address(RVA = "0xA7C844", Offset = "0xA7C844", VA = "0xA7C844", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017CB")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638688", Offset = "0x638688")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700028E")]
		public bool IsMoving
		{
			[Token(Token = "0x60017F6")]
			[Address(RVA = "0x9C70EC", Offset = "0x9C70EC", VA = "0x9C70EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641C94", Offset = "0x641C94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x9C70F4", Offset = "0x9C70F4", VA = "0x9C70F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641CA4", Offset = "0x641CA4")]
			private set
			{
			}
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x9C7100", Offset = "0x9C7100", VA = "0x9C7100")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x9C713C", Offset = "0x9C713C", VA = "0x9C713C")]
		private void Update()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x9C7220", Offset = "0x9C7220", VA = "0x9C7220")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x9C7294", Offset = "0x9C7294", VA = "0x9C7294")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x641CB4", Offset = "0x641CB4")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x9C7324", Offset = "0x9C7324", VA = "0x9C7324")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x641D1C", Offset = "0x641D1C")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x9C73E4", Offset = "0x9C73E4", VA = "0x9C73E4")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x9C7450", Offset = "0x9C7450", VA = "0x9C7450")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x9C7458", Offset = "0x9C7458", VA = "0x9C7458")]
		private void Awake()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x9C74D8", Offset = "0x9C74D8", VA = "0x9C74D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x9C75BC", Offset = "0x9C75BC", VA = "0x9C75BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x9C76F4", Offset = "0x9C76F4", VA = "0x9C76F4")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x9C7774", Offset = "0x9C7774", VA = "0x9C7774")]
		private void Update()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x9C7854", Offset = "0x9C7854", VA = "0x9C7854")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40017E8")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40017E9")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40017EA")]
		EUDT_None,
		[Token(Token = "0x40017EB")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20003AB")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20003AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F30C", Offset = "0x62F30C")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000293")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001824")]
				[Address(RVA = "0x804818", Offset = "0x804818", VA = "0x804818", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000294")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001826")]
				[Address(RVA = "0x804860", Offset = "0x804860", VA = "0x804860", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001821")]
			[Address(RVA = "0x8045E8", Offset = "0x8045E8", VA = "0x8045E8")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001822")]
			[Address(RVA = "0x804614", Offset = "0x804614", VA = "0x804614", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001823")]
			[Address(RVA = "0x804618", Offset = "0x804618", VA = "0x804618", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001825")]
			[Address(RVA = "0x804820", Offset = "0x804820", VA = "0x804820", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40017ED")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40017EE")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40017EF")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6386C8", Offset = "0x6386C8")]
		public GameObject mainCamera;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x638700", Offset = "0x638700")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x12F7754", Offset = "0x12F7754", VA = "0x12F7754")]
		private void Start()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x12F7F8C", Offset = "0x12F7F8C", VA = "0x12F7F8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x12F80E0", Offset = "0x12F80E0", VA = "0x12F80E0")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x12F8220", Offset = "0x12F8220", VA = "0x12F8220")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x12F8360", Offset = "0x12F8360", VA = "0x12F8360")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x12F80B4", Offset = "0x12F80B4", VA = "0x12F80B4")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x12F8440", Offset = "0x12F8440", VA = "0x12F8440")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x641E24", Offset = "0x641E24")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x12F84C0", Offset = "0x12F84C0", VA = "0x12F84C0")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x12F7BAC", Offset = "0x12F7BAC", VA = "0x12F7BAC")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x12F861C", Offset = "0x12F861C", VA = "0x12F861C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x12F84F4", Offset = "0x12F84F4", VA = "0x12F84F4")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x12F892C", Offset = "0x12F892C", VA = "0x12F892C")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x12F8A1C", Offset = "0x12F8A1C", VA = "0x12F8A1C")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x12F8AB4", Offset = "0x12F8AB4", VA = "0x12F8AB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641E8C", Offset = "0x641E8C")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x12F8B14", Offset = "0x12F8B14", VA = "0x12F8B14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641E9C", Offset = "0x641E9C")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x12F8B74", Offset = "0x12F8B74", VA = "0x12F8B74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x641EAC", Offset = "0x641EAC")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20003AD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62F31C", Offset = "0x62F31C")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F384", Offset = "0x62F384")]
		private sealed class <>c
		{
			[Token(Token = "0x4001823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001834")]
			[Address(RVA = "0x7DBAD0", Offset = "0x7DBAD0", VA = "0x7DBAD0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001835")]
			[Address(RVA = "0x7DBAD8", Offset = "0x7DBAD8", VA = "0x7DBAD8")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001807")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001808")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001809")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x400180A")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x400180B")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x400180C")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400180D")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400180E")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400180F")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001810")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001811")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x8EC2F4", Offset = "0x8EC2F4", VA = "0x8EC2F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x8EC358", Offset = "0x8EC358", VA = "0x8EC358")]
		private void Start()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x8EC7FC", Offset = "0x8EC7FC", VA = "0x8EC7FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x8EC8F0", Offset = "0x8EC8F0", VA = "0x8EC8F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x8ECA5C", Offset = "0x8ECA5C", VA = "0x8ECA5C")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x8ECD6C", Offset = "0x8ECD6C", VA = "0x8ECD6C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x8ECE64", Offset = "0x8ECE64", VA = "0x8ECE64")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x8ECFC4", Offset = "0x8ECFC4", VA = "0x8ECFC4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x8ECAFC", Offset = "0x8ECAFC", VA = "0x8ECAFC")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x8ECB50", Offset = "0x8ECB50", VA = "0x8ECB50")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x8EC6A0", Offset = "0x8EC6A0", VA = "0x8EC6A0")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x8ED100", Offset = "0x8ED100", VA = "0x8ED100")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001826")]
		Default,
		[Token(Token = "0x4001827")]
		Generic,
		[Token(Token = "0x4001828")]
		PingPongBall,
		[Token(Token = "0x4001829")]
		Controller
	}
	[Token(Token = "0x20003B0")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000295")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001836")]
			[Address(RVA = "0x8ED118", Offset = "0x8ED118", VA = "0x8ED118")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000296")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0x8ED120", Offset = "0x8ED120", VA = "0x8ED120")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000297")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0x8ED128", Offset = "0x8ED128", VA = "0x8ED128")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x8ED130", Offset = "0x8ED130", VA = "0x8ED130")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x10E5B98", Offset = "0x10E5B98", VA = "0x10E5B98")]
		private void Update()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x10E5E88", Offset = "0x10E5E88", VA = "0x10E5E88")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x10E5EE4", Offset = "0x10E5EE4", VA = "0x10E5EE4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x10E5F28", Offset = "0x10E5F28", VA = "0x10E5F28")]
		public TouchController()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20003B2")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x6387B8", Offset = "0x6387B8")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x10E4F70", Offset = "0x10E4F70", VA = "0x10E4F70")]
		private void Start()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x10E4F74", Offset = "0x10E4F74", VA = "0x10E4F74")]
		private void Update()
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x10E501C", Offset = "0x10E501C", VA = "0x10E501C")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638804", Offset = "0x638804")]
		public bool autoRetrigger;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x63883C", Offset = "0x63883C")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638860", Offset = "0x638860")]
		public Transform[] playPositions;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xED7088", Offset = "0xED7088", VA = "0xED7088")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xED7264", Offset = "0xED7264", VA = "0xED7264")]
		private void Update()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xED7440", Offset = "0xED7440", VA = "0xED7440")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xED72C4", Offset = "0xED72C4", VA = "0xED72C4")]
		public void Play()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xED7508", Offset = "0xED7508", VA = "0xED7508")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xED7680", Offset = "0xED7680", VA = "0xED7680")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public enum PreloadSounds
	{
		[Token(Token = "0x400183D")]
		Default,
		[Token(Token = "0x400183E")]
		Preload,
		[Token(Token = "0x400183F")]
		ManualPreload
	}
	[Token(Token = "0x20003B5")]
	public enum Fade
	{
		[Token(Token = "0x4001841")]
		In,
		[Token(Token = "0x4001842")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20003B6")]
	public class SoundGroup
	{
		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x638898", Offset = "0x638898")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xC73DF0", Offset = "0xC73DF0", VA = "0xC73DF0")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xC73EB4", Offset = "0xC73EB4", VA = "0xC73EB4")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xC7209C", Offset = "0xC7209C", VA = "0xC7209C")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xC72410", Offset = "0xC72410", VA = "0xC72410")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xC73370", Offset = "0xC73370", VA = "0xC73370")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003B7")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20003B8")]
		public enum Fade
		{
			[Token(Token = "0x400186A")]
			In,
			[Token(Token = "0x400186B")]
			Out
		}

		[Token(Token = "0x20003B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F394", Offset = "0x62F394")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x400186C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001881")]
			[Address(RVA = "0x7D52F4", Offset = "0x7D52F4", VA = "0x7D52F4")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6001882")]
			[Address(RVA = "0x7D52FC", Offset = "0x7D52FC", VA = "0x7D52FC")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F3A4", Offset = "0x62F3A4")]
		private sealed class <>c
		{
			[Token(Token = "0x400186D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400186E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6001884")]
			[Address(RVA = "0x7D5258", Offset = "0x7D5258", VA = "0x7D5258")]
			public <>c()
			{
			}

			[Token(Token = "0x6001885")]
			[Address(RVA = "0x7D5260", Offset = "0x7D5260", VA = "0x7D5260")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6388C4", Offset = "0x6388C4")]
		public bool makePersistent;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6388FC", Offset = "0x6388FC")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638934", Offset = "0x638934")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63896C", Offset = "0x63896C")]
		public AudioMixer audioMixer;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6389A4", Offset = "0x6389A4")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6389DC", Offset = "0x6389DC")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638A14", Offset = "0x638A14")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638A4C", Offset = "0x638A4C")]
		public bool verboseLogging;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638A84", Offset = "0x638A84")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638ABC", Offset = "0x638ABC")]
		public float volumeSoundFX;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638AF4", Offset = "0x638AF4")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000298")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0xEDF778", Offset = "0xEDF778", VA = "0xEDF778")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000299")]
		public static AudioManager Instance
		{
			[Token(Token = "0x600184D")]
			[Address(RVA = "0xEDF860", Offset = "0xEDF860", VA = "0xEDF860")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		public static float NearFallOff
		{
			[Token(Token = "0x600184E")]
			[Address(RVA = "0xEDF8C4", Offset = "0xEDF8C4", VA = "0xEDF8C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700029B")]
		public static float FarFallOff
		{
			[Token(Token = "0x600184F")]
			[Address(RVA = "0xEDF934", Offset = "0xEDF934", VA = "0xEDF934")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700029C")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001850")]
			[Address(RVA = "0xEDF9A4", Offset = "0xEDF9A4", VA = "0xEDF9A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029D")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001851")]
			[Address(RVA = "0xEDFA14", Offset = "0xEDFA14", VA = "0xEDFA14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029E")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001852")]
			[Address(RVA = "0xEDFA84", Offset = "0xEDFA84", VA = "0xEDFA84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0xEE1A3C", Offset = "0xEE1A3C", VA = "0xEE1A3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xEDFAF4", Offset = "0xEDFAF4", VA = "0xEDFAF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xEDFD3C", Offset = "0xEDFD3C", VA = "0xEDFD3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xEDFAF8", Offset = "0xEDFAF8", VA = "0xEDFAF8")]
		private void Init()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xEE0A48", Offset = "0xEE0A48", VA = "0xEE0A48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xEDFE9C", Offset = "0xEDFE9C", VA = "0xEDFE9C")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xEE1138", Offset = "0xEE1138", VA = "0xEE1138")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xEE12C4", Offset = "0xEE12C4", VA = "0xEE12C4")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xEE1498", Offset = "0xEE1498", VA = "0xEE1498")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xEE15A0", Offset = "0xEE15A0", VA = "0xEE15A0")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xEE162C", Offset = "0xEE162C", VA = "0xEE162C")]
		public static string[] GetSoundFXNames(string currentValue, [Out] int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xEE1AA0", Offset = "0xEE1AA0", VA = "0xEE1AA0")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xEE1B14", Offset = "0xEE1B14", VA = "0xEE1B14")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xEE03D8", Offset = "0xEE03D8", VA = "0xEE03D8")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xEE0A4C", Offset = "0xEE0A4C", VA = "0xEE0A4C")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xEE1C5C", Offset = "0xEE1C5C", VA = "0xEE1C5C")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xEE1D9C", Offset = "0xEE1D9C", VA = "0xEE1D9C")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xEE1EE0", Offset = "0xEE1EE0", VA = "0xEE1EE0")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xEE1B88", Offset = "0xEE1B88", VA = "0xEE1B88")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xEE2028", Offset = "0xEE2028", VA = "0xEE2028")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xEE20E8", Offset = "0xEE20E8", VA = "0xEE20E8")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xEE2204", Offset = "0xEE2204", VA = "0xEE2204")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xED7450", Offset = "0xED7450", VA = "0xED7450")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xED75C8", Offset = "0xED75C8", VA = "0xED75C8")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xEE22C4", Offset = "0xEE22C4", VA = "0xEE22C4")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xEE238C", Offset = "0xEE238C", VA = "0xEE238C")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xEE2420", Offset = "0xEE2420", VA = "0xEE2420")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xEE24E4", Offset = "0xEE24E4", VA = "0xEE24E4")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xEE258C", Offset = "0xEE258C", VA = "0xEE258C")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xEE264C", Offset = "0xEE264C", VA = "0xEE264C")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xEE31C8", Offset = "0xEE31C8", VA = "0xEE31C8")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xEE38B8", Offset = "0xEE38B8", VA = "0xEE38B8")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xEE3A7C", Offset = "0xEE3A7C", VA = "0xEE3A7C")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xEE468C", Offset = "0xEE468C", VA = "0xEE468C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xEE2838", Offset = "0xEE2838", VA = "0xEE2838")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xEE47A8", Offset = "0xEE47A8", VA = "0xEE47A8")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xEE488C", Offset = "0xEE488C", VA = "0xEE488C")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xEE4984", Offset = "0xEE4984", VA = "0xEE4984")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xEE4BB4", Offset = "0xEE4BB4", VA = "0xEE4BB4")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xEE4D08", Offset = "0xEE4D08", VA = "0xEE4D08")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xEE4E2C", Offset = "0xEE4E2C", VA = "0xEE4E2C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xEE4F58", Offset = "0xEE4F58", VA = "0xEE4F58")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xEE5038", Offset = "0xEE5038", VA = "0xEE5038")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xEE5188", Offset = "0xEE5188", VA = "0xEE5188")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xEE55A0", Offset = "0xEE55A0", VA = "0xEE55A0")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001870")]
		None = -1,
		[Token(Token = "0x4001871")]
		Reserved,
		[Token(Token = "0x4001872")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20003BC")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xBAF720", Offset = "0xBAF720", VA = "0xBAF720")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xBAE50C", Offset = "0xBAE50C", VA = "0xBAE50C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20003BF")]
		public enum FadeState
		{
			[Token(Token = "0x4001889")]
			Null,
			[Token(Token = "0x400188A")]
			FadingIn,
			[Token(Token = "0x400188B")]
			FadingOut,
			[Token(Token = "0x400188C")]
			Ducking
		}

		[Token(Token = "0x20003C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F3B4", Offset = "0x62F3B4")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400188D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400188E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400188F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4001892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170002A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018B4")]
				[Address(RVA = "0xA7AA18", Offset = "0xA7AA18", VA = "0xA7AA18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018B6")]
				[Address(RVA = "0xA7AA60", Offset = "0xA7AA60", VA = "0xA7AA60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018B1")]
			[Address(RVA = "0xA7A8F8", Offset = "0xA7A8F8", VA = "0xA7A8F8")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60018B2")]
			[Address(RVA = "0xA7A924", Offset = "0xA7A924", VA = "0xA7A924", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B3")]
			[Address(RVA = "0xA7A928", Offset = "0xA7A928", VA = "0xA7A928", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018B5")]
			[Address(RVA = "0xA7AA20", Offset = "0xA7AA20", VA = "0xA7AA20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F3C4", Offset = "0x62F3C4")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x400189A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400189B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170002AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018BA")]
				[Address(RVA = "0xA7AEB8", Offset = "0xA7AEB8", VA = "0xA7AEB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018BC")]
				[Address(RVA = "0xA7AF00", Offset = "0xA7AF00", VA = "0xA7AF00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018B7")]
			[Address(RVA = "0xA7AD4C", Offset = "0xA7AD4C", VA = "0xA7AD4C")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60018B8")]
			[Address(RVA = "0xA7AD78", Offset = "0xA7AD78", VA = "0xA7AD78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B9")]
			[Address(RVA = "0xA7AD7C", Offset = "0xA7AD7C", VA = "0xA7AD7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018BB")]
			[Address(RVA = "0xA7AEC0", Offset = "0xA7AEC0", VA = "0xA7AEC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F3D4", Offset = "0x62F3D4")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400189C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400189D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400189E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x400189F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x40018A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x40018A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40018A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x40018A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x40018A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x40018A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x40018A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40018A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170002AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018C0")]
				[Address(RVA = "0xA7ACFC", Offset = "0xA7ACFC", VA = "0xA7ACFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C2")]
				[Address(RVA = "0xA7AD44", Offset = "0xA7AD44", VA = "0xA7AD44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018BD")]
			[Address(RVA = "0xA7AA68", Offset = "0xA7AA68", VA = "0xA7AA68")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60018BE")]
			[Address(RVA = "0xA7AA94", Offset = "0xA7AA94", VA = "0xA7AA94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018BF")]
			[Address(RVA = "0xA7AA98", Offset = "0xA7AA98", VA = "0xA7AA98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C1")]
			[Address(RVA = "0xA7AD04", Offset = "0xA7AD04", VA = "0xA7AD04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170002A0")]
		public float volume
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0xC71BC8", Offset = "0xC71BC8", VA = "0xC71BC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001889")]
			[Address(RVA = "0xC71BE8", Offset = "0xC71BE8", VA = "0xC71BE8")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public float pitch
		{
			[Token(Token = "0x600188A")]
			[Address(RVA = "0xC71C08", Offset = "0xC71C08", VA = "0xC71C08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600188B")]
			[Address(RVA = "0xC71C28", Offset = "0xC71C28", VA = "0xC71C28")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public AudioClip clip
		{
			[Token(Token = "0x600188C")]
			[Address(RVA = "0xC71C48", Offset = "0xC71C48", VA = "0xC71C48")]
			get
			{
				return null;
			}
			[Token(Token = "0x600188D")]
			[Address(RVA = "0xC71C68", Offset = "0xC71C68", VA = "0xC71C68")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public float time
		{
			[Token(Token = "0x600188E")]
			[Address(RVA = "0xC71C88", Offset = "0xC71C88", VA = "0xC71C88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600188F")]
			[Address(RVA = "0xC71CA8", Offset = "0xC71CA8", VA = "0xC71CA8")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public float length
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0xC71CC8", Offset = "0xC71CC8", VA = "0xC71CC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A5")]
		public bool loop
		{
			[Token(Token = "0x6001891")]
			[Address(RVA = "0xC71D7C", Offset = "0xC71D7C", VA = "0xC71D7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001892")]
			[Address(RVA = "0xC71D9C", Offset = "0xC71D9C", VA = "0xC71D9C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public bool mute
		{
			[Token(Token = "0x6001893")]
			[Address(RVA = "0xC71DC0", Offset = "0xC71DC0", VA = "0xC71DC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001894")]
			[Address(RVA = "0xC71DE0", Offset = "0xC71DE0", VA = "0xC71DE0")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001895")]
			[Address(RVA = "0xC71E04", Offset = "0xC71E04", VA = "0xC71E04")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001896")]
			[Address(RVA = "0xC71E24", Offset = "0xC71E24", VA = "0xC71E24")]
			set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public bool isPlaying
		{
			[Token(Token = "0x6001897")]
			[Address(RVA = "0xC71E44", Offset = "0xC71E44", VA = "0xC71E44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xC71E64", Offset = "0xC71E64", VA = "0xC71E64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xC72054", Offset = "0xC72054", VA = "0xC72054")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xC720D8", Offset = "0xC720D8", VA = "0xC720D8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xC720E0", Offset = "0xC720E0", VA = "0xC720E0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xC72114", Offset = "0xC72114", VA = "0xC72114")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xC7211C", Offset = "0xC7211C", VA = "0xC7211C")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xC72124", Offset = "0xC72124", VA = "0xC72124")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xC721C8", Offset = "0xC721C8", VA = "0xC721C8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xC72234", Offset = "0xC72234", VA = "0xC72234")]
		public void Play()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xC72294", Offset = "0xC72294", VA = "0xC72294")]
		public void Pause()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xC722CC", Offset = "0xC722CC", VA = "0xC722CC")]
		public void Stop()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xC7244C", Offset = "0xC7244C", VA = "0xC7244C")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xC724A4", Offset = "0xC724A4", VA = "0xC724A4")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xC725D0", Offset = "0xC725D0", VA = "0xC725D0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xC7269C", Offset = "0xC7269C", VA = "0xC7269C")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xC726E4", Offset = "0xC726E4", VA = "0xC726E4")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xC72710", Offset = "0xC72710", VA = "0xC72710")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x641F0C", Offset = "0x641F0C")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xC727B8", Offset = "0xC727B8", VA = "0xC727B8")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xC728C0", Offset = "0xC728C0", VA = "0xC728C0")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xC729EC", Offset = "0xC729EC", VA = "0xC729EC")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xC72A64", Offset = "0xC72A64", VA = "0xC72A64")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xC72AFC", Offset = "0xC72AFC", VA = "0xC72AFC")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xC7282C", Offset = "0xC7282C", VA = "0xC7282C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x641F74", Offset = "0x641F74")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xC7293C", Offset = "0xC7293C", VA = "0xC7293C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x641FDC", Offset = "0x641FDC")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xC72B98", Offset = "0xC72B98", VA = "0xC72B98")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40018A9")]
		Random,
		[Token(Token = "0x40018AA")]
		Sequential
	}
	[Token(Token = "0x20003C4")]
	public enum FreqHint
	{
		[Token(Token = "0x40018AC")]
		None,
		[Token(Token = "0x40018AD")]
		Wide,
		[Token(Token = "0x40018AE")]
		Narrow
	}
	[Token(Token = "0x20003C5")]
	public enum SoundPriority
	{
		[Token(Token = "0x40018B0")]
		VeryLow = -2,
		[Token(Token = "0x40018B1")]
		Low,
		[Token(Token = "0x40018B2")]
		Default,
		[Token(Token = "0x40018B3")]
		High,
		[Token(Token = "0x40018B4")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20003C6")]
	public class OSPProps
	{
		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638BDC", Offset = "0x638BDC")]
		public bool enableSpatialization;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638C14", Offset = "0x638C14")]
		public bool useFastOverride;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638C4C", Offset = "0x638C4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x638C4C", Offset = "0x638C4C")]
		public float gain;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638CA0", Offset = "0x638CA0")]
		public bool enableInvSquare;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638CD8", Offset = "0x638CD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x638CD8", Offset = "0x638CD8")]
		public float volumetric;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638D30", Offset = "0x638D30")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x638D30", Offset = "0x638D30")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x12F5F3C", Offset = "0x12F5F3C", VA = "0x12F5F3C")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C7")]
	public class SoundFX
	{
		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638D90", Offset = "0x638D90")]
		public string name;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638DC8", Offset = "0x638DC8")]
		public SoundFXNext playback;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x638E00", Offset = "0x638E00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638E00", Offset = "0x638E00")]
		public float volume;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638E54", Offset = "0x638E54")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x638E54", Offset = "0x638E54")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638EB0", Offset = "0x638EB0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x638EB0", Offset = "0x638EB0")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638F10", Offset = "0x638F10")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638F48", Offset = "0x638F48")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638F80", Offset = "0x638F80")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x638FB8", Offset = "0x638FB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x638FB8", Offset = "0x638FB8")]
		public float spread;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x639010", Offset = "0x639010")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x639010", Offset = "0x639010")]
		public float pctChanceToPlay;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x639064", Offset = "0x639064")]
		public SoundPriority priority;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63909C", Offset = "0x63909C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x63909C", Offset = "0x63909C")]
		public Vector2 delay;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6390F8", Offset = "0x6390F8")]
		public bool looping;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x639130", Offset = "0x639130")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170002AF")]
		public int Length
		{
			[Token(Token = "0x60018C5")]
			[Address(RVA = "0xC730E8", Offset = "0xC730E8", VA = "0xC730E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B0")]
		public bool IsValid
		{
			[Token(Token = "0x60018C6")]
			[Address(RVA = "0xC73108", Offset = "0xC73108", VA = "0xC73108")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B1")]
		public SoundGroup Group
		{
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0xC731A8", Offset = "0xC731A8", VA = "0xC731A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0xC731B0", Offset = "0xC731B0", VA = "0xC731B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x60018C9")]
			[Address(RVA = "0xC731B8", Offset = "0xC731B8", VA = "0xC731B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B3")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0xC731C4", Offset = "0xC731C4", VA = "0xC731C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xC72BB0", Offset = "0xC72BB0", VA = "0xC72BB0")]
		public SoundFX()
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xC731DC", Offset = "0xC731DC", VA = "0xC731DC")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xC732AC", Offset = "0xC732AC", VA = "0xC732AC")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xC73348", Offset = "0xC73348", VA = "0xC73348")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xC73390", Offset = "0xC73390", VA = "0xC73390")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xC73488", Offset = "0xC73488", VA = "0xC73488")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xC73494", Offset = "0xC73494", VA = "0xC73494")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xC73570", Offset = "0xC73570", VA = "0xC73570")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xC73684", Offset = "0xC73684", VA = "0xC73684")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xC73710", Offset = "0xC73710", VA = "0xC73710")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xC737A4", Offset = "0xC737A4", VA = "0xC737A4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xC73830", Offset = "0xC73830", VA = "0xC73830")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xC738BC", Offset = "0xC738BC", VA = "0xC738BC")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C8")]
	public class SoundFXRef
	{
		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170002B4")]
		public SoundFX soundFX
		{
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xC73934", Offset = "0xC73934", VA = "0xC73934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		public string name
		{
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0xC73A58", Offset = "0xC73A58", VA = "0xC73A58")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0xC73A60", Offset = "0xC73A60", VA = "0xC73A60")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public int Length
		{
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xC73A88", Offset = "0xC73A88", VA = "0xC73A88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B7")]
		public bool IsValid
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0xC73ACC", Offset = "0xC73ACC", VA = "0xC73ACC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xC73964", Offset = "0xC73964", VA = "0xC73964")]
		private void Init()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xC73B04", Offset = "0xC73B04", VA = "0xC73B04")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xC73B3C", Offset = "0xC73B3C", VA = "0xC73B3C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xC73B7C", Offset = "0xC73B7C", VA = "0xC73B7C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xC73BC4", Offset = "0xC73BC4", VA = "0xC73BC4")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xC73C44", Offset = "0xC73C44", VA = "0xC73C44")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xC73C84", Offset = "0xC73C84", VA = "0xC73C84")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xC73CD4", Offset = "0xC73CD4", VA = "0xC73CD4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xC73D0C", Offset = "0xC73D0C", VA = "0xC73D0C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xC73D4C", Offset = "0xC73D4C", VA = "0xC73D4C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xC73D84", Offset = "0xC73D84", VA = "0xC73D84")]
		public SoundFXRef()
		{
		}
	}
}
namespace MagicLightProbes
{
	[Token(Token = "0x20003C9")]
	public class MLPDataSaver
	{
		[Token(Token = "0x60018E7")]
		public static void SaveData<T>(T data, string fullFilePath, string consoleString = "")
		{
		}

		[Token(Token = "0x60018E8")]
		public static T LoadData<T>(T dataRecipient, string fullFilePath, string consoleStringSuccess = "", string consoleStringFail = "")
		{
			return (T)null;
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xBA8A0C", Offset = "0xBA8A0C", VA = "0xBA8A0C")]
		public MLPDataSaver()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public static class TransformExtensions
	{
		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x10EF5BC", Offset = "0x10EF5BC", VA = "0x10EF5BC")]
		public static bool MLP_IsVisibleFrom(this Transform transform, Camera camera)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62F3F4", Offset = "0x62F3F4")]
	[ExecuteInEditMode]
	public class MagicLightProbes : MonoBehaviour
	{
		[Token(Token = "0x20003CC")]
		public struct VolumeParameters
		{
			[Token(Token = "0x400197C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int volumeIndex;

			[Token(Token = "0x400197D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 position;

			[Token(Token = "0x400197E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 demensions;

			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x800E2C", Offset = "0x800E2C", VA = "0x800E2C")]
			public VolumeParameters(int _volumeIndex, Vector3 _position, Vector3 _demensions)
			{
			}
		}

		[Token(Token = "0x20003CD")]
		public enum FillingMode
		{
			[Token(Token = "0x4001980")]
			VerticalDublicating,
			[Token(Token = "0x4001981")]
			FullFilling,
			[Token(Token = "0x4001982")]
			SeparateFilling
		}

		[Token(Token = "0x20003CE")]
		public enum Workflow
		{
			[Token(Token = "0x4001984")]
			Simple,
			[Token(Token = "0x4001985")]
			Advanced
		}

		[Token(Token = "0x20003CF")]
		public enum BoundsDisplayMode
		{
			[Token(Token = "0x4001987")]
			Always,
			[Token(Token = "0x4001988")]
			OnSelection
		}

		[Token(Token = "0x20003D0")]
		public enum DebugPasses
		{
			[Token(Token = "0x400198A")]
			MaximumHeight,
			[Token(Token = "0x400198B")]
			GeometryCollision,
			[Token(Token = "0x400198C")]
			GeometryIntersections,
			[Token(Token = "0x400198D")]
			NearGeometry,
			[Token(Token = "0x400198E")]
			OutOfRange,
			[Token(Token = "0x400198F")]
			OutOfRangeBorders,
			[Token(Token = "0x4001990")]
			ShadingBorders,
			[Token(Token = "0x4001991")]
			ContrastAreas,
			[Token(Token = "0x4001992")]
			NearLights,
			[Token(Token = "0x4001993")]
			LightIntensity,
			[Token(Token = "0x4001994")]
			UnlitProbes,
			[Token(Token = "0x4001995")]
			EqualProbes,
			[Token(Token = "0x4001996")]
			GeometryEdges,
			[Token(Token = "0x4001997")]
			EqualColor
		}

		[Token(Token = "0x20003D1")]
		public enum DrawModes
		{
			[Token(Token = "0x4001999")]
			Accepted,
			[Token(Token = "0x400199A")]
			Culled,
			[Token(Token = "0x400199B")]
			Both
		}

		[Token(Token = "0x20003D2")]
		public enum CalculationTarget
		{
			[Token(Token = "0x400199D")]
			GeometryEdges,
			[Token(Token = "0x400199E")]
			GeneralCalculation
		}

		[Serializable]
		[Token(Token = "0x20003D3")]
		private struct TempPointData
		{
			[Token(Token = "0x400199F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float xPos;

			[Token(Token = "0x40019A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float yPos;

			[Token(Token = "0x40019A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float zPos;

			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x800E20", Offset = "0x800E20", VA = "0x800E20")]
			public TempPointData(Vector3 _position)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003D4")]
		public class WorkPathFoundEvent : UnityEvent<string>
		{
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x800E40", Offset = "0x800E40", VA = "0x800E40")]
			public WorkPathFoundEvent()
			{
			}
		}

		[Token(Token = "0x40018D1")]
		private const string COMPUTE_SHADERS_FOLDER = "/Passes/Compute Shaders/";

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator colorThresholdRecalculationRoutine;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator lightProbesVolumeCalculatingRoutine;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator lightProbesVolumeCalculatingSubRoutine;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IEnumerator executingPassesRoutine;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IEnumerator volumeDivideingRoutine;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> groundAndFloorObjects;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> storedGroundAndFloorKeywords;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject probesVolume;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useDynamicDensity;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float volumeSpacing;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float volumeSpacingMin;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float volumeSpacingMax;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float cornersDetectionThreshold;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float cornersDetectionThresholdMin;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float cornersDetectionThresholdMax;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lastCornersDetectionThreshold;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float lastCornersDetectionThresholdMin;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float lastCornersDetectionThresholdMax;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int lastMaxProbesInVolume;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int maxProbesInVolume;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int defaultMaxProbesCount;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float lastVolumeSpacing;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float lastVolumeSpacingMin;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float lastVolumeSpacingMax;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool volumeSpacingChanged;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool tooManySubVolumes;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public FillingMode fillingMode;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Workflow workflow;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float maxHeightAboveGeometry;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float lastMaxHeightAboveGeometry;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float maxHeightAboveTerrain;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool considerDistanceToLights;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float lightIntensityTreshold;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float colorTreshold;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float collisionDetectionRadius;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool saveProbesNearbyGeometry;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float cornerProbesSpacing;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float nearbyGeometryDetectionRadius;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float nearbyGeometryDetectionRadiusMin;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float nearbyGeometryDetectionRadiusMax;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float distanceFromNearbyGeometry;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool fillEquivalentVolume;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float equivalentVolumeFillingRate;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool fillUnlitVolume;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool fillFreeVolume;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float unlitVolumeFillingRate;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float freeVolumeFillingRate;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool cullAcceptedVolume;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float acceptedVolumeFillingRate;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float nearbyGeometryVolumeFillingRate;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float verticalDublicatingHeight;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float verticalDublicatingStep;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public LayerMask raycastFilter;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public List<MLPLight> excludedLights;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public LayerMask layerMask;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public int firstCollisionLayer;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool useMultithreading;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject previousSelection;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool unloaded;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool sceneChanging;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		public bool waitForPrevious;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public MagicLightProbes previousVolume;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool optimizeForMixedLighting;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public bool lastOptimizeForMixedLightingValue;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		public bool lastUseDynamicDensityValue;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		public bool preventLeakageThroughWalls;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public bool useVolumeBottom;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		public bool placeProbesOnGeometryEdges;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float lastColorThreshold;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float lastLightIntensityThreshold;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float lastEquivalentVolumeFillingRate;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float lastUnlitVolumeFillingRate;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float lastFreeVolumeFillingRate;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float lastCornerProbesSpacing;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float lastDistanceFromGeometry;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool debugMode;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float debugObjectScale;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public BoundsDisplayMode boundsDisplayMode;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public DebugPasses debugPass;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public DrawModes drawMode;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool debugShowLightIntensity;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		public bool showPreviewGrid;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
		public bool nextStep;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
		public bool cullByColor;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public bool forceSaveProbesOnShadingBorders;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public string dataPath;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string workPath;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bool workPathFound;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public List<Vector3> localFinishedPositions;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public ComputeShader calculateVolumeFilling;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public ComputeShader calculateProbeSpacing;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public ComputeShader calculateDistanceFromGeometry;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public MLPVolume currentVolume;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public MLPQuickEditing quickEditingComponent;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public bool recalculationRequired;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private List<Collider> lightColliders;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private List<Collider> objectColliders;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private List<MLPPointData> finalDebugAcceptedPoints;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private List<MLPPointData> finalDebugCulledPoints;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private List<GameObject> tempObjects;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private List<GameObject> temporarilyDisabledDynamicObjects;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private List<GameObject> staticObjectsWithoutCollider;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private GameObject combinedVolumeObject;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private VolumeParameters currentEditingVolume;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 currentSelectedObjectLastPosition;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private GameObject lastSelectedObject;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public bool cancelCombination;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public List<IEnumerator> passesToExecute;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public List<GameObject> staticObjects;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public List<MLPLight> lights;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public List<MLPPointData> tmpSharedPointsArray;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public List<MLPPointData> tmpOutOfRangePoints;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public List<MLPPointData> tmpOutOfMaxHeightPoints;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public List<MLPPointData> tmpGeometryCollisionPoints;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public List<MLPPointData> tmpContrastOnOutOfRangePoints;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public List<MLPPointData> tmpContrastShadingBordersPoints;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public List<MLPPointData> tmpUnlitPoints;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public List<MLPPointData> tmpFreePoints;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public List<MLPPointData> tmpNearbyGeometryPoints;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public List<MLPPointData> tmpPointsNearGeometryIntersections;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public List<MLPPointData> tmpNearbyLightsPoints;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public List<MLPPointData> tmpEqualPoints;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public List<MLPPointData> debugCulledPoints;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public List<MLPPointData> debugAcceptedPoints;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public List<GameObject> subVolumesDivided;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public List<Vector3> points;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public List<VolumeParameters> innerVolumes;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public List<VolumeParameters> subVolumesParameters;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public List<MagicLightProbes> innerVolumesObjects;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public List<LayerMask> layerMasks;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public List<Vector3> transformedPoints;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public string assetEditorPath;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public MagicLightProbes parentVolume;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool operationalDataLost;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public bool localOperationalDataLost;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x311")]
		public bool recombinationNeeded;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x312")]
		public bool isInBackground;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x313")]
		public bool realtimeEditing;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public bool calculated;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x315")]
		public bool calculatingError;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public int xPointsCount;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public int yPointsCount;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public int zPointsCount;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public float prevVolumeScaleX;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public float prevVolumeScaleY;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public float prevVolumeScaleZ;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public int totalProbes;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		public int totalProbesInSubVolume;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public int totalProbesInVolume;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		public bool calculatingVolume;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33D")]
		public bool calculatingVolumeSubPass;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public string currentPass;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public int currentPassProgressCounter;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public int currentPassProgressFrameSkipper;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public float totalProgress;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public float currentPassProgress;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public int selectedTab;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public bool showOptionsInManagerWindow;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35D")]
		public bool restored;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public int currentVolumePart;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		public float eta;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public bool changed;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x369")]
		public bool redivideParts;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36A")]
		public bool combinedVolumeError;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36B")]
		private bool passesExecuting;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private int totalProgressCounter;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private int totalProgressFrameSkipper;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private float startTime;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private float endTime;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		private bool scenePreparing;

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xBA9414", Offset = "0xBA9414", VA = "0xBA9414")]
		public void CheckForNearContrast(MLPPointData pointForCheck)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xBA96F8", Offset = "0xBA96F8", VA = "0xBA96F8")]
		public bool UpdateProgress(int count, int period = 100)
		{
			return default(bool);
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xBA9740", Offset = "0xBA9740", VA = "0xBA9740")]
		private bool UpdateTotalProgress(int count, int period = 100)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xBA9788", Offset = "0xBA9788", VA = "0xBA9788")]
		public MagicLightProbes()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62F440", Offset = "0x62F440")]
	[ExecuteInEditMode]
	public class MLPCombinedVolume : MonoBehaviour
	{
		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xBA8A04", Offset = "0xBA8A04", VA = "0xBA8A04")]
		public MLPCombinedVolume()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62F48C", Offset = "0x62F48C")]
	[ExecuteInEditMode]
	public class MLPLight : MonoBehaviour
	{
		[Token(Token = "0x20003D7")]
		public enum CalculationMode
		{
			[Token(Token = "0x40019C7")]
			AccurateShadows,
			[Token(Token = "0x40019C8")]
			LightIntensity
		}

		[Token(Token = "0x20003D8")]
		public enum MLPLightType
		{
			[Token(Token = "0x40019CA")]
			Spot,
			[Token(Token = "0x40019CB")]
			Directional,
			[Token(Token = "0x40019CC")]
			Point,
			[Token(Token = "0x40019CD")]
			Area,
			[Token(Token = "0x40019CE")]
			Mesh
		}

		[Token(Token = "0x20003D9")]
		public enum MLPLightTypeMA
		{
			[Token(Token = "0x40019D0")]
			Area = 3,
			[Token(Token = "0x40019D1")]
			Mesh
		}

		[Token(Token = "0x20003DA")]
		public enum TracePointSettingMode
		{
			[Token(Token = "0x40019D3")]
			Auto,
			[Token(Token = "0x40019D4")]
			Custom
		}

		[Token(Token = "0x20003DB")]
		public enum ShadowmaskMode
		{
			[Token(Token = "0x40019D6")]
			Shadowmask,
			[Token(Token = "0x40019D7")]
			DistanceShadowmask
		}

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MLPLightType lightType;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MLPLightType lastLightType;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MLPLightTypeMA lightTypeMA;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CalculationMode calculationMode;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TracePointSettingMode tracePointSettingType;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LightmapBakeType lightMode;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShadowmaskMode shadowmaskMode;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light targetLight;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject parentGameObject;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 position;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 forward;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool saveNearbyProbes;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float saveRadius;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float range;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool useSourceParameters;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool reverseDirection;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float angle;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool customTracePoints;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool accurateTrace;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int accuracy;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int lastAccuracy;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool isDirectional;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float tracePointSize;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float lastTracePointSize;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public MeshFilter lastMesh;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<GameObject> tracePoints;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<MLPTracePoint> tracePointsData;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public MLPTracePoint mainTracePoint;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public MagicLightProbes parentVolume;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool showOptionsInManagerWindow;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float intensity;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool resetEditor;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool showLightOnScene;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool saveOnOutOfRange;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		public bool isHDRP;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector2 hdrpAreaSize;

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xBA8A1C", Offset = "0xBA8A1C", VA = "0xBA8A1C")]
		public MLPLight()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class MLPPointData
	{
		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lightIntensity;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxIntencity;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int col;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int row;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int depth;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<float> distancesToLights;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector3> collisionPoints;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<MLPPointData> nearbyPoints;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MLPPointData> nearbyPointsOptimaziable;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool removed;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool outOfRange;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool inSaveRange;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool savedNearGeometry;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool contrastOnOutOfRangeArea;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool inRangeOfLight;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool contrastOnShadingArea;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public bool equalIntensity;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool equalColor;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool borderPoint;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool outOfMaxHeight;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float angleToLight;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 contactPoint;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool inCorner;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool lockForCull;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public bool onGeometryEdge;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public bool lightLeakLocked;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 collisionNormal;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<MLPLight> inRangeForLights;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<MLPLight> inShadowForLights;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject temporaryObject;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject collisionObject;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color averagedColor;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool xEndPoint;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool yEndPoint;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool zEndPoint;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		public bool xStartPoint;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool yStartPoint;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		public bool zStartPoint;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int equivalent;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float avaragedColorValue;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool isUnlit;

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xBA8B08", Offset = "0xBA8B08", VA = "0xBA8B08")]
		public void SetPosition(Vector3 position)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xBA8B14", Offset = "0xBA8B14", VA = "0xBA8B14")]
		public void SetOutOfRange(bool visibility)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xBA8B20", Offset = "0xBA8B20", VA = "0xBA8B20")]
		public void SetLightIntensity(float intensity)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xBA8B28", Offset = "0xBA8B28", VA = "0xBA8B28")]
		public void SetInSaveRange(bool value)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xBA8B34", Offset = "0xBA8B34", VA = "0xBA8B34")]
		public void SetInContrastArea(bool value)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xBA8B40", Offset = "0xBA8B40", VA = "0xBA8B40")]
		public MLPPointData()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	[ExecuteInEditMode]
	public class MLPPortal : MonoBehaviour
	{
		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float yStep;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float zStep;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int yCounter;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int zCounter;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool calculate;

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xBA8D10", Offset = "0xBA8D10", VA = "0xBA8D10")]
		private void Start()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xBA8D14", Offset = "0xBA8D14", VA = "0xBA8D14")]
		private void Update()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xBA8D54", Offset = "0xBA8D54", VA = "0xBA8D54")]
		private void DrawRayX(Vector3 dir)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xBA8F30", Offset = "0xBA8F30", VA = "0xBA8F30")]
		private void DrawRayZ(Vector3 dir)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xBA90F8", Offset = "0xBA90F8", VA = "0xBA90F8")]
		public MLPPortal()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62F4F8", Offset = "0x62F4F8")]
	public class MLPQuickEditing : MonoBehaviour
	{
		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MagicLightProbes parent;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float gizmoScale;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float drawDistance;

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xBA9100", Offset = "0xBA9100", VA = "0xBA9100")]
		public MLPQuickEditing()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DF")]
	public class MLPTracePoint
	{
		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 forward;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject pointGameObject;

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xBA9110", Offset = "0xBA9110", VA = "0xBA9110")]
		public MLPTracePoint()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	[ExecuteInEditMode]
	public class MLPVolume : MonoBehaviour
	{
		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MagicLightProbes parentRootComponent;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public MeshRenderer selfRenderer;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool showGizmoSelected;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isPartVolume;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool isSubdividedPart;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool isCalculated;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool isInProcess;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool skipped;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int id;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color colorOnSelection;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MLPPointData> localAcceptedPoints;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<MLPPointData> localNearbyGeometryPoints;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<MLPPointData> localContrastPoints;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<MLPPointData> localCornerPoints;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Vector3> localNearbyGeometryPointsPositions;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Vector3> resultNearbyGeometryPointsPositions;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Vector3> localCornerPointsPositions;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Vector3> resultLocalCornerPointsPositions;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Vector3> localEquivalentPointsPositions;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Vector3> resultLocalEquivalentPointsPositions;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<Vector3> resultLocalFreePointsPositions;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Vector3> localUnlitPointsPositions;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<Vector3> localFreePointsPositions;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<Vector3> resultLocalUnlitPointsPositions;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<Vector3> localDirections;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<Vector3> localAvaragedDirections;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<MLPPointData> localColorThresholdEditingPoints;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int objectsInside;

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xBA9118", Offset = "0xBA9118", VA = "0xBA9118")]
		public MLPVolume()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class CheckForLightLeakAreas
	{
		[Token(Token = "0x20003E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F540", Offset = "0x62F540")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170002B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001908")]
				[Address(RVA = "0x7D8500", Offset = "0x7D8500", VA = "0x7D8500", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600190A")]
				[Address(RVA = "0x7D8548", Offset = "0x7D8548", VA = "0x7D8548", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001905")]
			[Address(RVA = "0x7D7E6C", Offset = "0x7D7E6C", VA = "0x7D7E6C")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001906")]
			[Address(RVA = "0x7D7E98", Offset = "0x7D7E98", VA = "0x7D7E98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001907")]
			[Address(RVA = "0x7D7E9C", Offset = "0x7D7E9C", VA = "0x7D7E9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001909")]
			[Address(RVA = "0x7D8508", Offset = "0x7D8508", VA = "0x7D8508", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xAE9C60", Offset = "0xAE9C60", VA = "0xAE9C60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x642144", Offset = "0x642144")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xAE9CE0", Offset = "0xAE9CE0", VA = "0xAE9CE0")]
		public CheckForLightLeakAreas()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class DublicateVertical
	{
		[Token(Token = "0x20003E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F550", Offset = "0x62F550")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <steps>5__2;

			[Token(Token = "0x4001A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<MLPPointData> <candidates>5__3;

			[Token(Token = "0x4001A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<MLPPointData> <savedNearGeometry>5__4;

			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__5;

			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<MLPPointData>.Enumerator <>7__wrap5;

			[Token(Token = "0x170002BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001911")]
				[Address(RVA = "0x7DA134", Offset = "0x7DA134", VA = "0x7DA134", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001913")]
				[Address(RVA = "0x7DA17C", Offset = "0x7DA17C", VA = "0x7DA17C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600190D")]
			[Address(RVA = "0x7D97B0", Offset = "0x7D97B0", VA = "0x7D97B0")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600190E")]
			[Address(RVA = "0x7D97DC", Offset = "0x7D97DC", VA = "0x7D97DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600190F")]
			[Address(RVA = "0x7D9854", Offset = "0x7D9854", VA = "0x7D9854", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001910")]
			[Address(RVA = "0x7D97F8", Offset = "0x7D97F8", VA = "0x7D97F8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001912")]
			[Address(RVA = "0x7DA13C", Offset = "0x7DA13C", VA = "0x7DA13C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x9BAB40", Offset = "0x9BAB40", VA = "0x9BAB40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6421FC", Offset = "0x6421FC")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x9BABC0", Offset = "0x9BABC0", VA = "0x9BABC0")]
		public DublicateVertical()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public static class RandomGen
	{
		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random _global;

		[Token(Token = "0x4001A38")]
		[ThreadStatic]
		private static System.Random _local;

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xC69D48", Offset = "0xC69D48", VA = "0xC69D48")]
		public static int Next(int min, int max)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003E6")]
	public class EquivalentProbesOptimization
	{
		[Token(Token = "0x20003E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F560", Offset = "0x62F560")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MLPVolume currentVolume;

			[Token(Token = "0x4001A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool realtimeEditing;

			[Token(Token = "0x4001A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3[] <exit>5__2;

			[Token(Token = "0x4001A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<MLPPointData> <tempList>5__3;

			[Token(Token = "0x4001A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__4;

			[Token(Token = "0x170002BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600191B")]
				[Address(RVA = "0x7DAAD0", Offset = "0x7DAAD0", VA = "0x7DAAD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600191D")]
				[Address(RVA = "0x7DAB18", Offset = "0x7DAB18", VA = "0x7DAB18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001918")]
			[Address(RVA = "0x7DA3D8", Offset = "0x7DA3D8", VA = "0x7DA3D8")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001919")]
			[Address(RVA = "0x7DA404", Offset = "0x7DA404", VA = "0x7DA404", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600191A")]
			[Address(RVA = "0x7DA408", Offset = "0x7DA408", VA = "0x7DA408", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600191C")]
			[Address(RVA = "0x7DAAD8", Offset = "0x7DAAD8", VA = "0x7DAAD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x8E4C58", Offset = "0x8E4C58", VA = "0x8E4C58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6422B4", Offset = "0x6422B4")]
		public IEnumerator ExecutePass(MagicLightProbes parent, [Optional] MLPVolume currentVolume, bool realtimeEditing = false)
		{
			return null;
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x8E4D00", Offset = "0x8E4D00", VA = "0x8E4D00")]
		public EquivalentProbesOptimization()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class PartialVolumeFilling
	{
		[Token(Token = "0x20003E9")]
		public enum TargetPoint
		{
			[Token(Token = "0x4001A42")]
			Unlit,
			[Token(Token = "0x4001A43")]
			Equivalent,
			[Token(Token = "0x4001A44")]
			Free
		}

		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F570", Offset = "0x62F570")]
		private sealed class <ExecutePass>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetPoint targetPoint;

			[Token(Token = "0x4001A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MLPVolume currentVolume;

			[Token(Token = "0x4001A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool realtimeEditing;

			[Token(Token = "0x4001A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<MLPPointData> <tempList>5__2;

			[Token(Token = "0x4001A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Vector3> <realTimeEditingList>5__3;

			[Token(Token = "0x4001A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vector3> <targetPoints>5__4;

			[Token(Token = "0x4001A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <fillingRate>5__5;

			[Token(Token = "0x4001A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3[] <exit>5__6;

			[Token(Token = "0x4001A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <i>5__7;

			[Token(Token = "0x170002BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001923")]
				[Address(RVA = "0x80A214", Offset = "0x80A214", VA = "0x80A214", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001925")]
				[Address(RVA = "0x80A25C", Offset = "0x80A25C", VA = "0x80A25C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001920")]
			[Address(RVA = "0x809504", Offset = "0x809504", VA = "0x809504")]
			[DebuggerHidden]
			public <ExecutePass>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001921")]
			[Address(RVA = "0x809530", Offset = "0x809530", VA = "0x809530", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001922")]
			[Address(RVA = "0x809534", Offset = "0x809534", VA = "0x809534", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001924")]
			[Address(RVA = "0x80A21C", Offset = "0x80A21C", VA = "0x80A21C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x972274", Offset = "0x972274", VA = "0x972274")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x64236C", Offset = "0x64236C")]
		public IEnumerator ExecutePass(MagicLightProbes parent, TargetPoint targetPoint, [Optional] MLPVolume currentVolume, bool realtimeEditing = false)
		{
			return null;
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x972324", Offset = "0x972324", VA = "0x972324")]
		public PartialVolumeFilling()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class RemoveUnusedPoints
	{
		[Token(Token = "0x20003EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F580", Offset = "0x62F580")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<MLPPointData> <pointsToRemove>5__2;

			[Token(Token = "0x4001A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x170002C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600192B")]
				[Address(RVA = "0xA7A124", Offset = "0xA7A124", VA = "0xA7A124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600192D")]
				[Address(RVA = "0xA7A16C", Offset = "0xA7A16C", VA = "0xA7A16C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001928")]
			[Address(RVA = "0xA79BE0", Offset = "0xA79BE0", VA = "0xA79BE0")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001929")]
			[Address(RVA = "0xA79C0C", Offset = "0xA79C0C", VA = "0xA79C0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600192A")]
			[Address(RVA = "0xA79C10", Offset = "0xA79C10", VA = "0xA79C10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600192C")]
			[Address(RVA = "0xA7A12C", Offset = "0xA7A12C", VA = "0xA7A12C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xC6BCDC", Offset = "0xC6BCDC", VA = "0xC6BCDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x642424", Offset = "0x642424")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xC6BD5C", Offset = "0xC6BD5C", VA = "0xC6BD5C")]
		public RemoveUnusedPoints()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class SetDistanceFromGeometry
	{
		[Token(Token = "0x20003EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F590", Offset = "0x62F590")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MLPVolume currentVolume;

			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[] <exit>5__2;

			[Token(Token = "0x4001A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x170002C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001933")]
				[Address(RVA = "0xA7A6A8", Offset = "0xA7A6A8", VA = "0xA7A6A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001935")]
				[Address(RVA = "0xA7A6F0", Offset = "0xA7A6F0", VA = "0xA7A6F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001930")]
			[Address(RVA = "0xA7A174", Offset = "0xA7A174", VA = "0xA7A174")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001931")]
			[Address(RVA = "0xA7A1A0", Offset = "0xA7A1A0", VA = "0xA7A1A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001932")]
			[Address(RVA = "0xA7A1A4", Offset = "0xA7A1A4", VA = "0xA7A1A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001934")]
			[Address(RVA = "0xA7A6B0", Offset = "0xA7A6B0", VA = "0xA7A6B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xC6CCBC", Offset = "0xC6CCBC", VA = "0xC6CCBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6424DC", Offset = "0x6424DC")]
		public IEnumerator ExecutePass(MagicLightProbes parent, MLPVolume currentVolume)
		{
			return null;
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xC6CD50", Offset = "0xC6CD50", VA = "0xC6CD50")]
		public SetDistanceFromGeometry()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x20003EF")]
	public static class Calibration
	{
		[Serializable]
		[Token(Token = "0x20003F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F5A0", Offset = "0x62F5A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x600193F")]
			[Address(RVA = "0x7D7C78", Offset = "0x7D7C78", VA = "0x7D7C78")]
			public <>c()
			{
			}

			[Token(Token = "0x6001940")]
			[Address(RVA = "0x7D7C80", Offset = "0x7D7C80", VA = "0x7D7C80")]
			internal void <.cctor>b__20_0(object o, FileSystemEventArgs e)
			{
			}
		}

		[Token(Token = "0x4001A5C")]
		private const string ConfigFileName = "externalcamera.cfg";

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float X;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float Y;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float Z;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float Yaw;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float Pitch;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float Roll;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float FieldOfVision;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float NearClip;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float FarClip;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static float HMDOffset;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static float NearOffset;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly FileSystemWatcher ConfigWatcher;

		[Token(Token = "0x170002C4")]
		public static Vector3 PositionOffset
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0xB233EC", Offset = "0xB233EC", VA = "0xB233EC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002C5")]
		public static Quaternion RotationOffset
		{
			[Token(Token = "0x6001939")]
			[Address(RVA = "0xB23454", Offset = "0xB23454", VA = "0xB23454")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x14000013")]
		public static event EventHandler Changed
		{
			[Token(Token = "0x6001936")]
			[Address(RVA = "0xB23204", Offset = "0xB23204", VA = "0xB23204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642594", Offset = "0x642594")]
			add
			{
			}
			[Token(Token = "0x6001937")]
			[Address(RVA = "0xB232F8", Offset = "0xB232F8", VA = "0xB232F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6425A4", Offset = "0x6425A4")]
			remove
			{
			}
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xB234C0", Offset = "0xB234C0", VA = "0xB234C0")]
		static Calibration()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xB23F78", Offset = "0xB23F78", VA = "0xB23F78")]
		private static void Reset()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xB2373C", Offset = "0xB2373C", VA = "0xB2373C")]
		public static void Read()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xB2403C", Offset = "0xB2403C", VA = "0xB2403C")]
		private static bool TryParseInvariantFloat(string number, [Out] float result)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F1")]
	public static class Extensions
	{
		[Token(Token = "0x6001941")]
		[Address(RVA = "0x8E6204", Offset = "0x8E6204", VA = "0x8E6204")]
		private static float _copysign(float sizeval, float signval)
		{
			return default(float);
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x8E6240", Offset = "0x8E6240", VA = "0x8E6240")]
		public static Quaternion GetRotation(this Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x8E63B0", Offset = "0x8E63B0", VA = "0x8E63B0")]
		public static Vector3 GetPosition(this Matrix4x4 matrix)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62F5C0", Offset = "0x62F5C0")]
	public class ExternalCamera : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F5F8", Offset = "0x62F5F8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TrackedDevicePose_t, int, global::<>f__AnonymousType0<TrackedDevicePose_t, uint>> <>9__17_0;

			[Token(Token = "0x4001A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<global::<>f__AnonymousType0<TrackedDevicePose_t, uint>, bool> <>9__17_1;

			[Token(Token = "0x4001A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<global::<>f__AnonymousType0<TrackedDevicePose_t, uint>, <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>> <>9__17_2;

			[Token(Token = "0x4001A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, bool> <>9__17_3;

			[Token(Token = "0x4001A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>> <>9__17_4;

			[Token(Token = "0x4001A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>, int> <>9__17_5;

			[Token(Token = "0x6001953")]
			[Address(RVA = "0x7DAF28", Offset = "0x7DAF28", VA = "0x7DAF28")]
			public <>c()
			{
			}

			[Token(Token = "0x6001954")]
			[Address(RVA = "0x7DAF30", Offset = "0x7DAF30", VA = "0x7DAF30")]
			internal global::<>f__AnonymousType0<TrackedDevicePose_t, uint> <IdentifyExternalCameraDevice>b__17_0(TrackedDevicePose_t pose, int index)
			{
				return null;
			}

			[Token(Token = "0x6001955")]
			[Address(RVA = "0x7DAFEC", Offset = "0x7DAFEC", VA = "0x7DAFEC")]
			internal bool <IdentifyExternalCameraDevice>b__17_1(global::<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6001956")]
			[Address(RVA = "0x7DB03C", Offset = "0x7DB03C", VA = "0x7DB03C")]
			internal <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> <IdentifyExternalCameraDevice>b__17_2(global::<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return null;
			}

			[Token(Token = "0x6001957")]
			[Address(RVA = "0x7DB160", Offset = "0x7DB160", VA = "0x7DB160")]
			internal bool <IdentifyExternalCameraDevice>b__17_3(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6001958")]
			[Address(RVA = "0x7DB1B4", Offset = "0x7DB1B4", VA = "0x7DB1B4")]
			internal <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> <IdentifyExternalCameraDevice>b__17_4(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return null;
			}

			[Token(Token = "0x6001959")]
			[Address(RVA = "0x7DB330", Offset = "0x7DB330", VA = "0x7DB330")]
			internal int <IdentifyExternalCameraDevice>b__17_5(<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> candidate)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6391B8", Offset = "0x6391B8")]
		private uint <OpenVRTrackedDeviceId>k__BackingField;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TrackedDevicePose_t _trackedDevicePose;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TrackedDevicePose_t[] _devices;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TrackedDevicePose_t[] _gameDevices;

		[Token(Token = "0x170002C6")]
		public bool IsValid
		{
			[Token(Token = "0x6001944")]
			[Address(RVA = "0x8E63BC", Offset = "0x8E63BC", VA = "0x8E63BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C7")]
		public uint OpenVRTrackedDeviceId
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0x8E63CC", Offset = "0x8E63CC", VA = "0x8E63CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6425D4", Offset = "0x6425D4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001946")]
			[Address(RVA = "0x8E63D4", Offset = "0x8E63D4", VA = "0x8E63D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6425E4", Offset = "0x6425E4")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x8E63DC", Offset = "0x8E63DC", VA = "0x8E63DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x8E6470", Offset = "0x8E6470", VA = "0x8E6470")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x8E64C8", Offset = "0x8E64C8", VA = "0x8E64C8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x8E6544", Offset = "0x8E6544", VA = "0x8E6544")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x8E64CC", Offset = "0x8E64CC", VA = "0x8E64CC")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x8E6548", Offset = "0x8E6548", VA = "0x8E6548")]
		private void UpdateOpenVRPose()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x8E6608", Offset = "0x8E6608", VA = "0x8E6608")]
		private void UpdateTransform(HmdMatrix34_t deviceToAbsolute)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x8E644C", Offset = "0x8E644C", VA = "0x8E644C")]
		private void UpdateOpenVRDevice()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x8E67F8", Offset = "0x8E67F8", VA = "0x8E67F8")]
		private uint IdentifyExternalCameraDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x8E6EE4", Offset = "0x8E6EE4", VA = "0x8E6EE4")]
		private static string GetStringTrackedDeviceProperty(uint device, ETrackedDeviceProperty property)
		{
			return null;
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x8E70A4", Offset = "0x8E70A4", VA = "0x8E70A4")]
		public ExternalCamera()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x62F608", Offset = "0x62F608")]
	public class HelpAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string text;

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x8F2018", Offset = "0x8F2018", VA = "0x8F2018")]
		public HelpAttribute(string text)
		{
		}
	}
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62F640", Offset = "0x62F640")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6391C8", Offset = "0x6391C8")]
		public Transform TrackedSpaceOrigin;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x639200", Offset = "0x639200")]
		public Camera HMDCamera;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x639210", Offset = "0x639210")]
		public bool DisableStandardAssets;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x639220", Offset = "0x639220")]
		public LayerMask SpectatorLayerMask;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool WasActive;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SharedTextureProtocol _sharedTextureProtocol;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ExternalCamera _externalCamera;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MixedRealityRender _mixedRealityRender;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _wasSteamVRExternalCameraActive;

		[Token(Token = "0x170002C8")]
		public Transform Origin
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x8F7D6C", Offset = "0x8F7D6C", VA = "0x8F7D6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x8F7E14", Offset = "0x8F7E14", VA = "0x8F7E14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x8F8160", Offset = "0x8F8160", VA = "0x8F8160")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x8F82F0", Offset = "0x8F82F0", VA = "0x8F82F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x8F834C", Offset = "0x8F834C", VA = "0x8F834C")]
		private void OnCompositorActivated()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x8F8170", Offset = "0x8F8170", VA = "0x8F8170")]
		private void OnCompositorDeactivated()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x8F84F0", Offset = "0x8F84F0", VA = "0x8F84F0")]
		private void CreateSharedTextureProtocol()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x8F89C0", Offset = "0x8F89C0", VA = "0x8F89C0")]
		private void DestroySharedTextureProtocol()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x8F855C", Offset = "0x8F855C", VA = "0x8F855C")]
		private void CreateExternalCamera()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x8F8B58", Offset = "0x8F8B58", VA = "0x8F8B58")]
		private void DestroyExternalCamera()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x8F8634", Offset = "0x8F8634", VA = "0x8F8634")]
		private void CreateMixedRealityRender()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x8F8A80", Offset = "0x8F8A80", VA = "0x8F8A80")]
		private void DestroyMixedRealityRender()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x8F8C30", Offset = "0x8F8C30", VA = "0x8F8C30")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62F678", Offset = "0x62F678")]
	public class MixedRealityRender : MonoBehaviour
	{
		[Token(Token = "0x20003F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F6B0", Offset = "0x62F6B0")]
		private sealed class <RenderLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MixedRealityRender <>4__this;

			[Token(Token = "0x170002C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001977")]
				[Address(RVA = "0x801048", Offset = "0x801048", VA = "0x801048", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001979")]
				[Address(RVA = "0x801090", Offset = "0x801090", VA = "0x801090", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001974")]
			[Address(RVA = "0x800EF4", Offset = "0x800EF4", VA = "0x800EF4")]
			[DebuggerHidden]
			public <RenderLoop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001975")]
			[Address(RVA = "0x800F20", Offset = "0x800F20", VA = "0x800F20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001976")]
			[Address(RVA = "0x800F24", Offset = "0x800F24", VA = "0x800F24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001978")]
			[Address(RVA = "0x801050", Offset = "0x801050", VA = "0x801050", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isSetup;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LIV _liv;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera _mrCamera;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _hmd;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _clipQuad;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _clipMaterial;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blitMaterial;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture _compositeTexture;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture _foregroundTexture;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture _backgroundTexture;

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xBAE5A0", Offset = "0xBAE5A0", VA = "0xBAE5A0")]
		public void Setup(LIV liv)
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xBAE788", Offset = "0xBAE788", VA = "0xBAE788")]
		private void CreateClipQuad()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xBAE970", Offset = "0xBAE970", VA = "0xBAE970")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xBAEAF8", Offset = "0xBAEAF8", VA = "0xBAEAF8")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xBAEE28", Offset = "0xBAEE28", VA = "0xBAEE28")]
		public float GetDistanceToHMD()
		{
			return default(float);
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xBAF050", Offset = "0xBAF050", VA = "0xBAF050")]
		private void OrientClipQuad()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xBAF21C", Offset = "0xBAF21C", VA = "0xBAF21C")]
		private void RenderNear()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xBAF51C", Offset = "0xBAF51C", VA = "0xBAF51C")]
		private void RenderFar()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xBAF574", Offset = "0xBAF574", VA = "0xBAF574")]
		private void Composite()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xBAF66C", Offset = "0xBAF66C", VA = "0xBAF66C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xBAF698", Offset = "0xBAF698", VA = "0xBAF698")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6425F4", Offset = "0x6425F4")]
		private IEnumerator RenderLoop()
		{
			return null;
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xBAF718", Offset = "0xBAF718", VA = "0xBAF718")]
		public MixedRealityRender()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62F6C0", Offset = "0x62F6C0")]
	public class SharedTextureProtocol : MonoBehaviour
	{
		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F6F8", Offset = "0x62F6F8")]
		private sealed class <CallPluginAtEndOfFrames>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SharedTextureProtocol <>4__this;

			[Token(Token = "0x170002CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600198A")]
				[Address(RVA = "0xA7A7F8", Offset = "0xA7A7F8", VA = "0xA7A7F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600198C")]
				[Address(RVA = "0xA7A840", Offset = "0xA7A840", VA = "0xA7A840", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001987")]
			[Address(RVA = "0xA7A6F8", Offset = "0xA7A6F8", VA = "0xA7A6F8")]
			[DebuggerHidden]
			public <CallPluginAtEndOfFrames>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001988")]
			[Address(RVA = "0xA7A724", Offset = "0xA7A724", VA = "0xA7A724", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001989")]
			[Address(RVA = "0xA7A728", Offset = "0xA7A728", VA = "0xA7A728", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600198B")]
			[Address(RVA = "0xA7A800", Offset = "0xA7A800", VA = "0xA7A800", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public static bool IsActive
		{
			[Token(Token = "0x600197F")]
			[Address(RVA = "0xC6CFC0", Offset = "0xC6CFC0", VA = "0xC6CFC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CC")]
		public static int TextureWidth
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0xC6CFC4", Offset = "0xC6CFC4", VA = "0xC6CFC4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002CD")]
		public static int TextureHeight
		{
			[Token(Token = "0x6001981")]
			[Address(RVA = "0xC6CFC8", Offset = "0xC6CFC8", VA = "0xC6CFC8")]
			get
			{
				return default(int);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600197A")]
		[Address(RVA = "0xC6CD68", Offset = "0xC6CD68", VA = "0xC6CD68")]
		private static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x600197B")]
		[Address(RVA = "0xC6CDDC", Offset = "0xC6CDDC", VA = "0xC6CDDC")]
		private static extern bool GetIsCaptureActive();

		[PreserveSig]
		[Token(Token = "0x600197C")]
		[Address(RVA = "0xC6CE58", Offset = "0xC6CE58", VA = "0xC6CE58")]
		private static extern int GetTextureWidth();

		[PreserveSig]
		[Token(Token = "0x600197D")]
		[Address(RVA = "0xC6CECC", Offset = "0xC6CECC", VA = "0xC6CECC")]
		private static extern int GetTextureHeight();

		[PreserveSig]
		[Token(Token = "0x600197E")]
		[Address(RVA = "0xC6CF40", Offset = "0xC6CF40", VA = "0xC6CF40")]
		private static extern void SetTexture(IntPtr texture);

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xC6CFCC", Offset = "0xC6CFCC", VA = "0xC6CFCC")]
		public static void SetOutputTexture(Texture texture)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xC6D010", Offset = "0xC6D010", VA = "0xC6D010")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xC6D03C", Offset = "0xC6D03C", VA = "0xC6D03C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6426AC", Offset = "0x6426AC")]
		private IEnumerator CallPluginAtEndOfFrames()
		{
			return null;
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xC6D0BC", Offset = "0xC6D0BC", VA = "0xC6D0BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xC6D0F8", Offset = "0xC6D0F8", VA = "0xC6D0F8")]
		public SharedTextureProtocol()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	internal static class SteamVRCompatibility
	{
		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsAvailable;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Type SteamVRCamera;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Type SteamVRExternalCamera;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Type SteamVRFade;

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xC742AC", Offset = "0xC742AC", VA = "0xC742AC")]
		static SteamVRCompatibility()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xC74300", Offset = "0xC74300", VA = "0xC74300")]
		private static bool FindSteamVRAsset()
		{
			return default(bool);
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x20003FB")]
	public struct IVRSystem
	{
		[Token(Token = "0x20003FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F708", Offset = "0x62F708")]
		internal delegate void _GetRecommendedRenderTargetSize(uint pnWidth, uint pnHeight);

		[Token(Token = "0x20003FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F71C", Offset = "0x62F71C")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x20003FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F730", Offset = "0x62F730")]
		internal delegate void _GetProjectionRaw(EVREye eEye, float pfLeft, float pfRight, float pfTop, float pfBottom);

		[Token(Token = "0x20003FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F744", Offset = "0x62F744")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x2000400")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F758", Offset = "0x62F758")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F76C", Offset = "0x62F76C")]
		internal delegate bool _GetTimeSinceLastVsync(float pfSecondsSinceLastVsync, ulong pulFrameCounter);

		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F780", Offset = "0x62F780")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F794", Offset = "0x62F794")]
		internal delegate void _GetDXGIOutputInfo(int pnAdapterIndex);

		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F7A8", Offset = "0x62F7A8")]
		internal delegate void _GetOutputDevice(ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F7BC", Offset = "0x62F7BC")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F7D0", Offset = "0x62F7D0")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F7E4", Offset = "0x62F7E4")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F7F8", Offset = "0x62F7F8")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F80C", Offset = "0x62F80C")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x200040A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F820", Offset = "0x62F820")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F834", Offset = "0x62F834")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F848", Offset = "0x62F848")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F85C", Offset = "0x62F85C")]
		internal delegate void _ApplyTransform(TrackedDevicePose_t pOutputPose, TrackedDevicePose_t pTrackedDevicePose, HmdMatrix34_t pTransform);

		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F870", Offset = "0x62F870")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F884", Offset = "0x62F884")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F898", Offset = "0x62F898")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F8AC", Offset = "0x62F8AC")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F8C0", Offset = "0x62F8C0")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError);

		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F8D4", Offset = "0x62F8D4")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError);

		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F8E8", Offset = "0x62F8E8")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError);

		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F8FC", Offset = "0x62F8FC")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError);

		[Token(Token = "0x2000416")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F910", Offset = "0x62F910")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError);

		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F924", Offset = "0x62F924")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ETrackedPropertyError pError);

		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F938", Offset = "0x62F938")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ETrackedPropertyError pError);

		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F94C", Offset = "0x62F94C")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F960", Offset = "0x62F960")]
		internal delegate bool _PollNextEvent(VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F974", Offset = "0x62F974")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, VREvent_t pEvent, uint uncbVREvent, TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F988", Offset = "0x62F988")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F99C", Offset = "0x62F99C")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F9B0", Offset = "0x62F9B0")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F9C4", Offset = "0x62F9C4")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, VRControllerState_t pControllerState, uint unControllerStateSize, TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F9D8", Offset = "0x62F9D8")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62F9EC", Offset = "0x62F9EC")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FA00", Offset = "0x62FA00")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FA14", Offset = "0x62FA14")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FA28", Offset = "0x62FA28")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FA3C", Offset = "0x62FA3C")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FA50", Offset = "0x62FA50")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FA64", Offset = "0x62FA64")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FA78", Offset = "0x62FA78")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FA8C", Offset = "0x62FA8C")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FAA0", Offset = "0x62FAA0")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x200042B")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FAB4", Offset = "0x62FAB4")]
		internal delegate void _GetWindowBounds(int pnX, int pnY, uint pnWidth, uint pnHeight);

		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FAC8", Offset = "0x62FAC8")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, uint pnX, uint pnY, uint pnWidth, uint pnHeight);

		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FADC", Offset = "0x62FADC")]
		internal delegate void _GetDXGIOutputInfo(int pnAdapterIndex, int pnAdapterOutputIndex);

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x200042F")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FAF0", Offset = "0x62FAF0")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FB04", Offset = "0x62FB04")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, bool pHasCamera);

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FB18", Offset = "0x62FB18")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, uint pnWidth, uint pnHeight, uint pnFrameBufferSize);

		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FB2C", Offset = "0x62FB2C")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, HmdVector2_t pFocalLength, HmdVector2_t pCenter);

		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FB40", Offset = "0x62FB40")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, HmdMatrix44_t pProjection);

		[Token(Token = "0x2000435")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FB54", Offset = "0x62FB54")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ulong pHandle);

		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FB68", Offset = "0x62FB68")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x2000437")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FB7C", Offset = "0x62FB7C")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FB90", Offset = "0x62FB90")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, VRTextureBounds_t pTextureBounds, uint pnWidth, uint pnHeight);

		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FBA4", Offset = "0x62FBA4")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, IntPtr ppD3D11ShaderResourceView, CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200043A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FBB8", Offset = "0x62FBB8")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, uint pglTextureId, CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FBCC", Offset = "0x62FBCC")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x200043C")]
	public struct IVRApplications
	{
		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FBE0", Offset = "0x62FBE0")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FBF4", Offset = "0x62FBF4")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FC08", Offset = "0x62FC08")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FC1C", Offset = "0x62FC1C")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FC30", Offset = "0x62FC30")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FC44", Offset = "0x62FC44")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FC58", Offset = "0x62FC58")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FC6C", Offset = "0x62FC6C")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FC80", Offset = "0x62FC80")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FC94", Offset = "0x62FC94")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FCA8", Offset = "0x62FCA8")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x2000448")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FCBC", Offset = "0x62FCBC")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FCD0", Offset = "0x62FCD0")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FCE4", Offset = "0x62FCE4")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FCF8", Offset = "0x62FCF8")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, EVRApplicationError peError);

		[Token(Token = "0x200044C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FD0C", Offset = "0x62FD0C")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, EVRApplicationError peError);

		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FD20", Offset = "0x62FD20")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, EVRApplicationError peError);

		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FD34", Offset = "0x62FD34")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FD48", Offset = "0x62FD48")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FD5C", Offset = "0x62FD5C")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FD70", Offset = "0x62FD70")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FD84", Offset = "0x62FD84")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FD98", Offset = "0x62FD98")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FDAC", Offset = "0x62FDAC")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FDC0", Offset = "0x62FDC0")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000456")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FDD4", Offset = "0x62FDD4")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FDE8", Offset = "0x62FDE8")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FDFC", Offset = "0x62FDFC")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FE10", Offset = "0x62FE10")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FE24", Offset = "0x62FE24")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x200045B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FE38", Offset = "0x62FE38")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x200045C")]
	public struct IVRChaperone
	{
		[Token(Token = "0x200045D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FE4C", Offset = "0x62FE4C")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FE60", Offset = "0x62FE60")]
		internal delegate bool _GetPlayAreaSize(float pSizeX, float pSizeZ);

		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FE74", Offset = "0x62FE74")]
		internal delegate bool _GetPlayAreaRect(HmdQuad_t rect);

		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FE88", Offset = "0x62FE88")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FE9C", Offset = "0x62FE9C")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FEB0", Offset = "0x62FEB0")]
		internal delegate void _GetBoundsColor(HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, HmdColor_t pOutputCameraColor);

		[Token(Token = "0x2000463")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FEC4", Offset = "0x62FEC4")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x2000464")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FED8", Offset = "0x62FED8")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x2000465")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x2000466")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FEEC", Offset = "0x62FEEC")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000467")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FF00", Offset = "0x62FF00")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FF14", Offset = "0x62FF14")]
		internal delegate bool _GetWorkingPlayAreaSize(float pSizeX, float pSizeZ);

		[Token(Token = "0x2000469")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FF28", Offset = "0x62FF28")]
		internal delegate bool _GetWorkingPlayAreaRect(HmdQuad_t rect);

		[Token(Token = "0x200046A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FF3C", Offset = "0x62FF3C")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint punQuadsCount);

		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FF50", Offset = "0x62FF50")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint punQuadsCount);

		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FF64", Offset = "0x62FF64")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FF78", Offset = "0x62FF78")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x200046E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FF8C", Offset = "0x62FF8C")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x200046F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FFA0", Offset = "0x62FFA0")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FFB4", Offset = "0x62FFB4")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FFC8", Offset = "0x62FFC8")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FFDC", Offset = "0x62FFDC")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000473")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62FFF0", Offset = "0x62FFF0")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000474")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630004", Offset = "0x630004")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x2000475")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630018", Offset = "0x630018")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint punTagCount);

		[Token(Token = "0x2000476")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63002C", Offset = "0x63002C")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000477")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630040", Offset = "0x630040")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint punQuadsCount);

		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630054", Offset = "0x630054")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, uint pnBufferLength);

		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630068", Offset = "0x630068")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x200047A")]
	public struct IVRCompositor
	{
		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63007C", Offset = "0x63007C")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630090", Offset = "0x630090")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x200047D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6300A4", Offset = "0x6300A4")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6300B8", Offset = "0x6300B8")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6300CC", Offset = "0x6300CC")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, TrackedDevicePose_t pOutputPose, TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6300E0", Offset = "0x6300E0")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, Texture_t pTexture, VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6300F4", Offset = "0x6300F4")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630108", Offset = "0x630108")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x2000483")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63011C", Offset = "0x63011C")]
		internal delegate bool _GetFrameTiming(Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x2000484")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630130", Offset = "0x630130")]
		internal delegate uint _GetFrameTimings(Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x2000485")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630144", Offset = "0x630144")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x2000486")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630158", Offset = "0x630158")]
		internal delegate void _GetCumulativeStats(Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x2000487")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63016C", Offset = "0x63016C")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x2000488")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630180", Offset = "0x630180")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x2000489")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630194", Offset = "0x630194")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x200048A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6301A8", Offset = "0x6301A8")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x200048B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6301BC", Offset = "0x6301BC")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x200048C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6301D0", Offset = "0x6301D0")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x200048D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6301E4", Offset = "0x6301E4")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x200048E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6301F8", Offset = "0x6301F8")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x200048F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63020C", Offset = "0x63020C")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630220", Offset = "0x630220")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630234", Offset = "0x630234")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630248", Offset = "0x630248")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x2000493")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63025C", Offset = "0x63025C")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x2000494")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630270", Offset = "0x630270")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x2000495")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630284", Offset = "0x630284")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x2000496")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630298", Offset = "0x630298")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x2000497")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6302AC", Offset = "0x6302AC")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x2000498")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6302C0", Offset = "0x6302C0")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x2000499")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6302D4", Offset = "0x6302D4")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x200049A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6302E8", Offset = "0x6302E8")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x200049B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6302FC", Offset = "0x6302FC")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x200049C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630310", Offset = "0x630310")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x200049D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630324", Offset = "0x630324")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x200049E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630338", Offset = "0x630338")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x200049F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63034C", Offset = "0x63034C")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x20004A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630360", Offset = "0x630360")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20004A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630374", Offset = "0x630374")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20004A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630388", Offset = "0x630388")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20004A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63039C", Offset = "0x63039C")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20004A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6303B0", Offset = "0x6303B0")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x20004A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6303C4", Offset = "0x6303C4")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x20004A6")]
	public struct IVROverlay
	{
		[Token(Token = "0x20004A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6303D8", Offset = "0x6303D8")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ulong pOverlayHandle);

		[Token(Token = "0x20004A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6303EC", Offset = "0x6303EC")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ulong pOverlayHandle);

		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630400", Offset = "0x630400")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630414", Offset = "0x630414")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630428", Offset = "0x630428")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x20004AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63043C", Offset = "0x63043C")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, EVROverlayError pError);

		[Token(Token = "0x20004AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630450", Offset = "0x630450")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, EVROverlayError pError);

		[Token(Token = "0x20004AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630464", Offset = "0x630464")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x20004AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630478", Offset = "0x630478")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, uint punWidth, uint punHeight);

		[Token(Token = "0x20004B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63048C", Offset = "0x63048C")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x20004B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6304A0", Offset = "0x6304A0")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x20004B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6304B4", Offset = "0x6304B4")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x20004B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6304C8", Offset = "0x6304C8")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x20004B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6304DC", Offset = "0x6304DC")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool pbEnabled);

		[Token(Token = "0x20004B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6304F0", Offset = "0x6304F0")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x20004B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630504", Offset = "0x630504")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, float pfRed, float pfGreen, float pfBlue);

		[Token(Token = "0x20004B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630518", Offset = "0x630518")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x20004B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63052C", Offset = "0x63052C")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, float pfAlpha);

		[Token(Token = "0x20004B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630540", Offset = "0x630540")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x20004BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630554", Offset = "0x630554")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, float pfTexelAspect);

		[Token(Token = "0x20004BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630568", Offset = "0x630568")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x20004BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63057C", Offset = "0x63057C")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, uint punSortOrder);

		[Token(Token = "0x20004BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630590", Offset = "0x630590")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x20004BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6305A4", Offset = "0x6305A4")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, float pfWidthInMeters);

		[Token(Token = "0x20004BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6305B8", Offset = "0x6305B8")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x20004C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6305CC", Offset = "0x6305CC")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float pfMinDistanceInMeters, float pfMaxDistanceInMeters);

		[Token(Token = "0x20004C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6305E0", Offset = "0x6305E0")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x20004C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6305F4", Offset = "0x6305F4")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace peTextureColorSpace);

		[Token(Token = "0x20004C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630608", Offset = "0x630608")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20004C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63061C", Offset = "0x63061C")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20004C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630630", Offset = "0x630630")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, HmdColor_t pColor, EVROverlayError pError);

		[Token(Token = "0x20004C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630644", Offset = "0x630644")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, HmdColor_t pColor);

		[Token(Token = "0x20004C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630658", Offset = "0x630658")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, VROverlayTransformType peTransformType);

		[Token(Token = "0x20004C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63066C", Offset = "0x63066C")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20004C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630680", Offset = "0x630680")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin peTrackingOrigin, HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20004CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630694", Offset = "0x630694")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20004CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6306A8", Offset = "0x6306A8")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint punTrackedDevice, HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20004CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6306BC", Offset = "0x6306BC")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x20004CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6306D0", Offset = "0x6306D0")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x20004CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6306E4", Offset = "0x6306E4")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20004CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6306F8", Offset = "0x6306F8")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20004D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63070C", Offset = "0x63070C")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630720", Offset = "0x630720")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630734", Offset = "0x630734")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x20004D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630748", Offset = "0x630748")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, HmdMatrix34_t pmatTransform);

		[Token(Token = "0x20004D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63075C", Offset = "0x63075C")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20004D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630770", Offset = "0x630770")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod peInputMethod);

		[Token(Token = "0x20004D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630784", Offset = "0x630784")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x20004D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630798", Offset = "0x630798")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20004D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6307AC", Offset = "0x6307AC")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20004D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6307C0", Offset = "0x6307C0")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, VROverlayIntersectionParams_t pParams, VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x20004DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6307D4", Offset = "0x6307D4")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6307E8", Offset = "0x6307E8")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6307FC", Offset = "0x6307FC")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x20004DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630810", Offset = "0x630810")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630824", Offset = "0x630824")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630838", Offset = "0x630838")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63084C", Offset = "0x63084C")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, HmdVector2_t pvCenter, float pfRadius);

		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630860", Offset = "0x630860")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, Texture_t pTexture);

		[Token(Token = "0x20004E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630874", Offset = "0x630874")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630888", Offset = "0x630888")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63089C", Offset = "0x63089C")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x20004E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6308B0", Offset = "0x6308B0")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, uint pWidth, uint pHeight, uint pNativeFormat, ETextureType pAPIType, EColorSpace pColorSpace, VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6308C4", Offset = "0x6308C4")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x20004E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6308D8", Offset = "0x6308D8")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, uint pWidth, uint pHeight);

		[Token(Token = "0x20004E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6308EC", Offset = "0x6308EC")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ulong pMainHandle, ulong pThumbnailHandle);

		[Token(Token = "0x20004E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630900", Offset = "0x630900")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x20004EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630914", Offset = "0x630914")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630928", Offset = "0x630928")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x20004EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63093C", Offset = "0x63093C")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint punProcessId);

		[Token(Token = "0x20004ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630950", Offset = "0x630950")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x20004EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630964", Offset = "0x630964")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x20004EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630978", Offset = "0x630978")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20004F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x63098C", Offset = "0x63098C")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6309A0", Offset = "0x6309A0")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x20004F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6309B4", Offset = "0x6309B4")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6309C8", Offset = "0x6309C8")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6309DC", Offset = "0x6309DC")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6309F0", Offset = "0x6309F0")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630A04", Offset = "0x630A04")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, uint pFlags);

		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630A18", Offset = "0x630A18")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x20004F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630A2C", Offset = "0x630A2C")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x20004F9")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630A40", Offset = "0x630A40")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, IntPtr ppRenderModel);

		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630A54", Offset = "0x630A54")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x20004FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630A68", Offset = "0x630A68")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, IntPtr ppTexture);

		[Token(Token = "0x20004FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630A7C", Offset = "0x630A7C")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630A90", Offset = "0x630A90")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, IntPtr ppD3D11Texture2D);

		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630AA4", Offset = "0x630AA4")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630AB8", Offset = "0x630AB8")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630ACC", Offset = "0x630ACC")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x2000502")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630AE0", Offset = "0x630AE0")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x2000503")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630AF4", Offset = "0x630AF4")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630B08", Offset = "0x630B08")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630B1C", Offset = "0x630B1C")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630B30", Offset = "0x630B30")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630B44", Offset = "0x630B44")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, VRControllerState_t pControllerState, RenderModel_ControllerMode_State_t pState, RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630B58", Offset = "0x630B58")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630B6C", Offset = "0x630B6C")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, EVRRenderModelError peError);

		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630B80", Offset = "0x630B80")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, EVRRenderModelError peError);

		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630B94", Offset = "0x630B94")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x200050C")]
	public struct IVRNotifications
	{
		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630BA8", Offset = "0x630BA8")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, NotificationBitmap_t pImage, uint pNotificationId);

		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630BBC", Offset = "0x630BBC")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x200050F")]
	public struct IVRSettings
	{
		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630BD0", Offset = "0x630BD0")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630BE4", Offset = "0x630BE4")]
		internal delegate bool _Sync(bool bForce, EVRSettingsError peError);

		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630BF8", Offset = "0x630BF8")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, EVRSettingsError peError);

		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630C0C", Offset = "0x630C0C")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, EVRSettingsError peError);

		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630C20", Offset = "0x630C20")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, EVRSettingsError peError);

		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630C34", Offset = "0x630C34")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, EVRSettingsError peError);

		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630C48", Offset = "0x630C48")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, EVRSettingsError peError);

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630C5C", Offset = "0x630C5C")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, EVRSettingsError peError);

		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630C70", Offset = "0x630C70")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, EVRSettingsError peError);

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630C84", Offset = "0x630C84")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, EVRSettingsError peError);

		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630C98", Offset = "0x630C98")]
		internal delegate void _RemoveSection(string pchSection, EVRSettingsError peError);

		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630CAC", Offset = "0x630CAC")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, EVRSettingsError peError);

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x200051C")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630CC0", Offset = "0x630CC0")]
		internal delegate EVRScreenshotError _RequestScreenshot(uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630CD4", Offset = "0x630CD4")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x200051F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630CE8", Offset = "0x630CE8")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, EVRScreenshotError pError);

		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630CFC", Offset = "0x630CFC")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, EVRScreenshotError pError);

		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630D10", Offset = "0x630D10")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630D24", Offset = "0x630D24")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630D38", Offset = "0x630D38")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x2000524")]
	public struct IVRResources
	{
		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630D4C", Offset = "0x630D4C")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630D60", Offset = "0x630D60")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x2000527")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630D74", Offset = "0x630D74")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630D88", Offset = "0x630D88")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630D9C", Offset = "0x630D9C")]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDriverHandle GetDriverHandle;
	}
	[Token(Token = "0x200052B")]
	public class CVRSystem
	{
		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630DB0", Offset = "0x630DB0")]
		internal delegate bool _PollNextEventPacked(VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x200052D")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630DC4", Offset = "0x630DC4")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x200052F")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x2000530")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630DD8", Offset = "0x630DD8")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, VRControllerState_t_Packed pControllerState, uint unControllerStateSize, TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x2000531")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xB21FCC", Offset = "0xB21FCC", VA = "0xB21FCC")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xB22108", Offset = "0xB22108", VA = "0xB22108")]
		public void GetRecommendedRenderTargetSize(uint pnWidth, uint pnHeight)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xB22130", Offset = "0xB22130", VA = "0xB22130")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xB2217C", Offset = "0xB2217C", VA = "0xB2217C")]
		public void GetProjectionRaw(EVREye eEye, float pfLeft, float pfRight, float pfTop, float pfBottom)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xB221AC", Offset = "0xB221AC", VA = "0xB221AC")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xB221CC", Offset = "0xB221CC", VA = "0xB221CC")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xB22218", Offset = "0xB22218", VA = "0xB22218")]
		public bool GetTimeSinceLastVsync(float pfSecondsSinceLastVsync, ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xB22240", Offset = "0xB22240", VA = "0xB22240")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xB22260", Offset = "0xB22260", VA = "0xB22260")]
		public void GetDXGIOutputInfo(int pnAdapterIndex)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xB22284", Offset = "0xB22284", VA = "0xB22284")]
		public void GetOutputDevice(ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xB222A8", Offset = "0xB222A8", VA = "0xB222A8")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xB222C8", Offset = "0xB222C8", VA = "0xB222C8")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xB222EC", Offset = "0xB222EC", VA = "0xB222EC")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xB22314", Offset = "0xB22314", VA = "0xB22314")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xB22334", Offset = "0xB22334", VA = "0xB22334")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xB22380", Offset = "0xB22380", VA = "0xB22380")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xB223CC", Offset = "0xB223CC", VA = "0xB223CC")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xB223F8", Offset = "0xB223F8", VA = "0xB223F8")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xB22418", Offset = "0xB22418", VA = "0xB22418")]
		public void ApplyTransform(TrackedDevicePose_t pOutputPose, TrackedDevicePose_t pTrackedDevicePose, HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xB22438", Offset = "0xB22438", VA = "0xB22438")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xB22458", Offset = "0xB22458", VA = "0xB22458")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xB22478", Offset = "0xB22478", VA = "0xB22478")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xB22498", Offset = "0xB22498", VA = "0xB22498")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xB224B8", Offset = "0xB224B8", VA = "0xB224B8")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xB224D8", Offset = "0xB224D8", VA = "0xB224D8")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xB224F8", Offset = "0xB224F8", VA = "0xB224F8")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xB22518", Offset = "0xB22518", VA = "0xB22518")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xB22538", Offset = "0xB22538", VA = "0xB22538")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xB22584", Offset = "0xB22584", VA = "0xB22584")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xB225A4", Offset = "0xB225A4", VA = "0xB225A4")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xB225C4", Offset = "0xB225C4", VA = "0xB225C4")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xB22654", Offset = "0xB22654", VA = "0xB22654")]
		public bool PollNextEvent(VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xB227F8", Offset = "0xB227F8", VA = "0xB227F8")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, VREvent_t pEvent, uint uncbVREvent, TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xB22818", Offset = "0xB22818", VA = "0xB22818")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xB228A8", Offset = "0xB228A8", VA = "0xB228A8")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xB228C8", Offset = "0xB228C8", VA = "0xB228C8")]
		public bool GetControllerState(uint unControllerDeviceIndex, VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xB22A90", Offset = "0xB22A90", VA = "0xB22A90")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, VRControllerState_t pControllerState, uint unControllerStateSize, TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xB22C78", Offset = "0xB22C78", VA = "0xB22C78")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xB22C98", Offset = "0xB22C98", VA = "0xB22C98")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xB22D28", Offset = "0xB22D28", VA = "0xB22D28")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xB22DB8", Offset = "0xB22DB8", VA = "0xB22DB8")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xB22DD8", Offset = "0xB22DD8", VA = "0xB22DD8")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xB22DF8", Offset = "0xB22DF8", VA = "0xB22DF8")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xB22E18", Offset = "0xB22E18", VA = "0xB22E18")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xB22E38", Offset = "0xB22E38", VA = "0xB22E38")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xB22E58", Offset = "0xB22E58", VA = "0xB22E58")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xB22E78", Offset = "0xB22E78", VA = "0xB22E78")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xB22E98", Offset = "0xB22E98", VA = "0xB22E98")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xB202BC", Offset = "0xB202BC", VA = "0xB202BC")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xB203F4", Offset = "0xB203F4", VA = "0xB203F4")]
		public void GetWindowBounds(int pnX, int pnY, uint pnWidth, uint pnHeight)
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xB20424", Offset = "0xB20424", VA = "0xB20424")]
		public void GetEyeOutputViewport(EVREye eEye, uint pnX, uint pnY, uint pnWidth, uint pnHeight)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xB20454", Offset = "0xB20454", VA = "0xB20454")]
		public void GetDXGIOutputInfo(int pnAdapterIndex, int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xB22EB8", Offset = "0xB22EB8", VA = "0xB22EB8")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xB22FF4", Offset = "0xB22FF4", VA = "0xB22FF4")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xB23084", Offset = "0xB23084", VA = "0xB23084")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xB230A8", Offset = "0xB230A8", VA = "0xB230A8")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, uint pnWidth, uint pnHeight, uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xB230D4", Offset = "0xB230D4", VA = "0xB230D4")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, HmdVector2_t pFocalLength, HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xB230F4", Offset = "0xB230F4", VA = "0xB230F4")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xB23114", Offset = "0xB23114", VA = "0xB23114")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xB23138", Offset = "0xB23138", VA = "0xB23138")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xB23158", Offset = "0xB23158", VA = "0xB23158")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xB23178", Offset = "0xB23178", VA = "0xB23178")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, VRTextureBounds_t pTextureBounds, uint pnWidth, uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xB231A0", Offset = "0xB231A0", VA = "0xB231A0")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, IntPtr ppD3D11ShaderResourceView, CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xB231C0", Offset = "0xB231C0", VA = "0xB231C0")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, uint pglTextureId, CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xB231E4", Offset = "0xB231E4", VA = "0xB231E4")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x2000534")]
	public class CVRApplications
	{
		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xB1EBEC", Offset = "0xB1EBEC", VA = "0xB1EBEC")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xB1ED28", Offset = "0xB1ED28", VA = "0xB1ED28")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xB1ED4C", Offset = "0xB1ED4C", VA = "0xB1ED4C")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xB1ED6C", Offset = "0xB1ED6C", VA = "0xB1ED6C")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xB1ED8C", Offset = "0xB1ED8C", VA = "0xB1ED8C")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xB1EDAC", Offset = "0xB1EDAC", VA = "0xB1EDAC")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xB1EDCC", Offset = "0xB1EDCC", VA = "0xB1EDCC")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xB1EDEC", Offset = "0xB1EDEC", VA = "0xB1EDEC")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xB1EE0C", Offset = "0xB1EE0C", VA = "0xB1EE0C")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xB1EE34", Offset = "0xB1EE34", VA = "0xB1EE34")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xB1EE54", Offset = "0xB1EE54", VA = "0xB1EE54")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xB1EE74", Offset = "0xB1EE74", VA = "0xB1EE74")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xB1EE94", Offset = "0xB1EE94", VA = "0xB1EE94")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xB1EEB4", Offset = "0xB1EEB4", VA = "0xB1EEB4")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xB1EED4", Offset = "0xB1EED4", VA = "0xB1EED4")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xB1EF64", Offset = "0xB1EF64", VA = "0xB1EF64")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xB1EF84", Offset = "0xB1EF84", VA = "0xB1EF84")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xB1EFA4", Offset = "0xB1EFA4", VA = "0xB1EFA4")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xB1EFC4", Offset = "0xB1EFC4", VA = "0xB1EFC4")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xB1EFE8", Offset = "0xB1EFE8", VA = "0xB1EFE8")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xB1F008", Offset = "0xB1F008", VA = "0xB1F008")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xB1F028", Offset = "0xB1F028", VA = "0xB1F028")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xB1F048", Offset = "0xB1F048", VA = "0xB1F048")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xB1F068", Offset = "0xB1F068", VA = "0xB1F068")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xB1F088", Offset = "0xB1F088", VA = "0xB1F088")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xB1F0A8", Offset = "0xB1F0A8", VA = "0xB1F0A8")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xB1F0C8", Offset = "0xB1F0C8", VA = "0xB1F0C8")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xB1F0E8", Offset = "0xB1F0E8", VA = "0xB1F0E8")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xB1F108", Offset = "0xB1F108", VA = "0xB1F108")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xB1F198", Offset = "0xB1F198", VA = "0xB1F198")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xB1F1B8", Offset = "0xB1F1B8", VA = "0xB1F1B8")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xB1F1D8", Offset = "0xB1F1D8", VA = "0xB1F1D8")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000535")]
	public class CVRChaperone
	{
		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xB1F1F8", Offset = "0xB1F1F8", VA = "0xB1F1F8")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xB1F334", Offset = "0xB1F334", VA = "0xB1F334")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xB1F354", Offset = "0xB1F354", VA = "0xB1F354")]
		public bool GetPlayAreaSize(float pSizeX, float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xB1F37C", Offset = "0xB1F37C", VA = "0xB1F37C")]
		public bool GetPlayAreaRect(HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xB1F39C", Offset = "0xB1F39C", VA = "0xB1F39C")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xB1F3BC", Offset = "0xB1F3BC", VA = "0xB1F3BC")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xB1F3DC", Offset = "0xB1F3DC", VA = "0xB1F3DC")]
		public void GetBoundsColor(HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xB1F3FC", Offset = "0xB1F3FC", VA = "0xB1F3FC")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xB1F41C", Offset = "0xB1F41C", VA = "0xB1F41C")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xB1F440", Offset = "0xB1F440", VA = "0xB1F440")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xB1F57C", Offset = "0xB1F57C", VA = "0xB1F57C")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xB1F59C", Offset = "0xB1F59C", VA = "0xB1F59C")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xB1F5BC", Offset = "0xB1F5BC", VA = "0xB1F5BC")]
		public bool GetWorkingPlayAreaSize(float pSizeX, float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xB1F5E4", Offset = "0xB1F5E4", VA = "0xB1F5E4")]
		public bool GetWorkingPlayAreaRect(HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xB1F604", Offset = "0xB1F604", VA = "0xB1F604")]
		public bool GetWorkingCollisionBoundsInfo([Out] HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xB1F6AC", Offset = "0xB1F6AC", VA = "0xB1F6AC")]
		public bool GetLiveCollisionBoundsInfo([Out] HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xB1F754", Offset = "0xB1F754", VA = "0xB1F754")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xB1F774", Offset = "0xB1F774", VA = "0xB1F774")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xB1F794", Offset = "0xB1F794", VA = "0xB1F794")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xB1F7B4", Offset = "0xB1F7B4", VA = "0xB1F7B4")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xB1F7DC", Offset = "0xB1F7DC", VA = "0xB1F7DC")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xB1F7FC", Offset = "0xB1F7FC", VA = "0xB1F7FC")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xB1F81C", Offset = "0xB1F81C", VA = "0xB1F81C")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xB1F83C", Offset = "0xB1F83C", VA = "0xB1F83C")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xB1F85C", Offset = "0xB1F85C", VA = "0xB1F85C")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xB1F884", Offset = "0xB1F884", VA = "0xB1F884")]
		public bool GetLiveCollisionBoundsTagsInfo([Out] byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xB1F92C", Offset = "0xB1F92C", VA = "0xB1F92C")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xB1F954", Offset = "0xB1F954", VA = "0xB1F954")]
		public bool GetLivePhysicalBoundsInfo([Out] HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xB1F9FC", Offset = "0xB1F9FC", VA = "0xB1F9FC")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xB1FA20", Offset = "0xB1FA20", VA = "0xB1FA20")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000537")]
	public class CVRCompositor
	{
		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xB1FA40", Offset = "0xB1FA40", VA = "0xB1FA40")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xB1FB7C", Offset = "0xB1FB7C", VA = "0xB1FB7C")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xB1FB9C", Offset = "0xB1FB9C", VA = "0xB1FB9C")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xB1FBBC", Offset = "0xB1FBBC", VA = "0xB1FBBC")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xB1FBF0", Offset = "0xB1FBF0", VA = "0xB1FBF0")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xB1FC24", Offset = "0xB1FC24", VA = "0xB1FC24")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, TrackedDevicePose_t pOutputPose, TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xB1FC44", Offset = "0xB1FC44", VA = "0xB1FC44")]
		public EVRCompositorError Submit(EVREye eEye, Texture_t pTexture, VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xB1FC64", Offset = "0xB1FC64", VA = "0xB1FC64")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xB1FC84", Offset = "0xB1FC84", VA = "0xB1FC84")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xB1FCA4", Offset = "0xB1FCA4", VA = "0xB1FCA4")]
		public bool GetFrameTiming(Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xB1FCC4", Offset = "0xB1FCC4", VA = "0xB1FCC4")]
		public uint GetFrameTimings(Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xB1FCE4", Offset = "0xB1FCE4", VA = "0xB1FCE4")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xB1FD04", Offset = "0xB1FD04", VA = "0xB1FD04")]
		public void GetCumulativeStats(Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xB1FD24", Offset = "0xB1FD24", VA = "0xB1FD24")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xB1FD48", Offset = "0xB1FD48", VA = "0xB1FD48")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xB1FD6C", Offset = "0xB1FD6C", VA = "0xB1FD6C")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xB1FD90", Offset = "0xB1FD90", VA = "0xB1FD90")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xB1FDB0", Offset = "0xB1FDB0", VA = "0xB1FDB0")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xB1FDD8", Offset = "0xB1FDD8", VA = "0xB1FDD8")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xB1FDF8", Offset = "0xB1FDF8", VA = "0xB1FDF8")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xB1FE18", Offset = "0xB1FE18", VA = "0xB1FE18")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xB1FE38", Offset = "0xB1FE38", VA = "0xB1FE38")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xB1FE58", Offset = "0xB1FE58", VA = "0xB1FE58")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xB1FE78", Offset = "0xB1FE78", VA = "0xB1FE78")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xB1FE98", Offset = "0xB1FE98", VA = "0xB1FE98")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xB1FEB8", Offset = "0xB1FEB8", VA = "0xB1FEB8")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xB1FED8", Offset = "0xB1FED8", VA = "0xB1FED8")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xB1FEF8", Offset = "0xB1FEF8", VA = "0xB1FEF8")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xB1FF18", Offset = "0xB1FF18", VA = "0xB1FF18")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xB1FF38", Offset = "0xB1FF38", VA = "0xB1FF38")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xB1FF58", Offset = "0xB1FF58", VA = "0xB1FF58")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xB1FF78", Offset = "0xB1FF78", VA = "0xB1FF78")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xB1FF9C", Offset = "0xB1FF9C", VA = "0xB1FF9C")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xB1FFBC", Offset = "0xB1FFBC", VA = "0xB1FFBC")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xB1FFE0", Offset = "0xB1FFE0", VA = "0xB1FFE0")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xB20000", Offset = "0xB20000", VA = "0xB20000")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xB20020", Offset = "0xB20020", VA = "0xB20020")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xB20044", Offset = "0xB20044", VA = "0xB20044")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xB20064", Offset = "0xB20064", VA = "0xB20064")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xB20084", Offset = "0xB20084", VA = "0xB20084")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xB200A4", Offset = "0xB200A4", VA = "0xB200A4")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xB200C4", Offset = "0xB200C4", VA = "0xB200C4")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xB200E4", Offset = "0xB200E4", VA = "0xB200E4")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xB20104", Offset = "0xB20104", VA = "0xB20104")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x2000538")]
	public class CVROverlay
	{
		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630DEC", Offset = "0x630DEC")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x200053A")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x4001BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x4001BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xB205F0", Offset = "0xB205F0", VA = "0xB205F0")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xB2072C", Offset = "0xB2072C", VA = "0xB2072C")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xB20750", Offset = "0xB20750", VA = "0xB20750")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xB20774", Offset = "0xB20774", VA = "0xB20774")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xB20794", Offset = "0xB20794", VA = "0xB20794")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xB207B4", Offset = "0xB207B4", VA = "0xB207B4")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xB207D4", Offset = "0xB207D4", VA = "0xB207D4")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xB207F4", Offset = "0xB207F4", VA = "0xB207F4")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xB20814", Offset = "0xB20814", VA = "0xB20814")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xB20834", Offset = "0xB20834", VA = "0xB20834")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, uint punWidth, uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xB2085C", Offset = "0xB2085C", VA = "0xB2085C")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xB208EC", Offset = "0xB208EC", VA = "0xB208EC")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xB2090C", Offset = "0xB2090C", VA = "0xB2090C")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xB2092C", Offset = "0xB2092C", VA = "0xB2092C")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xB20950", Offset = "0xB20950", VA = "0xB20950")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xB20974", Offset = "0xB20974", VA = "0xB20974")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xB20994", Offset = "0xB20994", VA = "0xB20994")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, float pfRed, float pfGreen, float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xB209C0", Offset = "0xB209C0", VA = "0xB209C0")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xB209E0", Offset = "0xB209E0", VA = "0xB209E0")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xB20A04", Offset = "0xB20A04", VA = "0xB20A04")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xB20A24", Offset = "0xB20A24", VA = "0xB20A24")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xB20A48", Offset = "0xB20A48", VA = "0xB20A48")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xB20A68", Offset = "0xB20A68", VA = "0xB20A68")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xB20A8C", Offset = "0xB20A8C", VA = "0xB20A8C")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xB20AAC", Offset = "0xB20AAC", VA = "0xB20AAC")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xB20AD0", Offset = "0xB20AD0", VA = "0xB20AD0")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xB20AF0", Offset = "0xB20AF0", VA = "0xB20AF0")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float pfMinDistanceInMeters, float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xB20B18", Offset = "0xB20B18", VA = "0xB20B18")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xB20B38", Offset = "0xB20B38", VA = "0xB20B38")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xB20B58", Offset = "0xB20B58", VA = "0xB20B58")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xB20B78", Offset = "0xB20B78", VA = "0xB20B78")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xB20B98", Offset = "0xB20B98", VA = "0xB20B98")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, HmdColor_t pColor, EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xB20BB8", Offset = "0xB20BB8", VA = "0xB20BB8")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xB20BD8", Offset = "0xB20BD8", VA = "0xB20BD8")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xB20BF8", Offset = "0xB20BF8", VA = "0xB20BF8")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xB20C18", Offset = "0xB20C18", VA = "0xB20C18")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin peTrackingOrigin, HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xB20C38", Offset = "0xB20C38", VA = "0xB20C38")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xB20C58", Offset = "0xB20C58", VA = "0xB20C58")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint punTrackedDevice, HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xB20C7C", Offset = "0xB20C7C", VA = "0xB20C7C")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xB20C9C", Offset = "0xB20C9C", VA = "0xB20C9C")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xB20CC0", Offset = "0xB20CC0", VA = "0xB20CC0")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xB20CE4", Offset = "0xB20CE4", VA = "0xB20CE4")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xB20D04", Offset = "0xB20D04", VA = "0xB20D04")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xB20D24", Offset = "0xB20D24", VA = "0xB20D24")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xB20D44", Offset = "0xB20D44", VA = "0xB20D44")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xB20D64", Offset = "0xB20D64", VA = "0xB20D64")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xB20D84", Offset = "0xB20D84", VA = "0xB20D84")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xB20F34", Offset = "0xB20F34", VA = "0xB20F34")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xB20F54", Offset = "0xB20F54", VA = "0xB20F54")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xB20F74", Offset = "0xB20F74", VA = "0xB20F74")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xB20F94", Offset = "0xB20F94", VA = "0xB20F94")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xB20FB4", Offset = "0xB20FB4", VA = "0xB20FB4")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, VROverlayIntersectionParams_t pParams, VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xB20FD4", Offset = "0xB20FD4", VA = "0xB20FD4")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xB20FF4", Offset = "0xB20FF4", VA = "0xB20FF4")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xB21014", Offset = "0xB21014", VA = "0xB21014")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xB21034", Offset = "0xB21034", VA = "0xB21034")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xB21054", Offset = "0xB21054", VA = "0xB21054")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xB21074", Offset = "0xB21074", VA = "0xB21074")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xB21094", Offset = "0xB21094", VA = "0xB21094")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, HmdVector2_t pvCenter, float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xB210B8", Offset = "0xB210B8", VA = "0xB210B8")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xB210D8", Offset = "0xB210D8", VA = "0xB210D8")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xB210F8", Offset = "0xB210F8", VA = "0xB210F8")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xB21118", Offset = "0xB21118", VA = "0xB21118")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xB21138", Offset = "0xB21138", VA = "0xB21138")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, uint pWidth, uint pHeight, uint pNativeFormat, ETextureType pAPIType, EColorSpace pColorSpace, VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xB2116C", Offset = "0xB2116C", VA = "0xB2116C")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xB2118C", Offset = "0xB2118C", VA = "0xB2118C")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, uint pWidth, uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xB211B4", Offset = "0xB211B4", VA = "0xB211B4")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ulong pMainHandle, ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xB211DC", Offset = "0xB211DC", VA = "0xB211DC")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xB211FC", Offset = "0xB211FC", VA = "0xB211FC")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xB2121C", Offset = "0xB2121C", VA = "0xB2121C")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xB2123C", Offset = "0xB2123C", VA = "0xB2123C")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xB21260", Offset = "0xB21260", VA = "0xB21260")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xB21280", Offset = "0xB21280", VA = "0xB21280")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xB212A0", Offset = "0xB212A0", VA = "0xB212A0")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xB212C4", Offset = "0xB212C4", VA = "0xB212C4")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xB212EC", Offset = "0xB212EC", VA = "0xB212EC")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xB2130C", Offset = "0xB2130C", VA = "0xB2130C")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xB2132C", Offset = "0xB2132C", VA = "0xB2132C")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xB2134C", Offset = "0xB2134C", VA = "0xB2134C")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xB2136C", Offset = "0xB2136C", VA = "0xB2136C")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xB2138C", Offset = "0xB2138C", VA = "0xB2138C")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xB213B0", Offset = "0xB213B0", VA = "0xB213B0")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xB213D0", Offset = "0xB213D0", VA = "0xB213D0")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class CVRRenderModels
	{
		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x630E00", Offset = "0x630E00")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, VRControllerState_t_Packed pControllerState, RenderModel_ControllerMode_State_t pState, RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x200053D")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x4001BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x4001BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xB213F0", Offset = "0xB213F0", VA = "0xB213F0")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xB2152C", Offset = "0xB2152C", VA = "0xB2152C")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xB2154C", Offset = "0xB2154C", VA = "0xB2154C")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xB2156C", Offset = "0xB2156C", VA = "0xB2156C")]
		public EVRRenderModelError LoadTexture_Async(int textureId, IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xB2158C", Offset = "0xB2158C", VA = "0xB2158C")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xB215AC", Offset = "0xB215AC", VA = "0xB215AC")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xB215CC", Offset = "0xB215CC", VA = "0xB215CC")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xB215EC", Offset = "0xB215EC", VA = "0xB215EC")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xB2160C", Offset = "0xB2160C", VA = "0xB2160C")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xB2162C", Offset = "0xB2162C", VA = "0xB2162C")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xB2164C", Offset = "0xB2164C", VA = "0xB2164C")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xB2166C", Offset = "0xB2166C", VA = "0xB2166C")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xB2168C", Offset = "0xB2168C", VA = "0xB2168C")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xB216AC", Offset = "0xB216AC", VA = "0xB216AC")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xB216CC", Offset = "0xB216CC", VA = "0xB216CC")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, VRControllerState_t pControllerState, RenderModel_ControllerMode_State_t pState, RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xB21804", Offset = "0xB21804", VA = "0xB21804")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xB21824", Offset = "0xB21824", VA = "0xB21824")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xB21844", Offset = "0xB21844", VA = "0xB21844")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xB21864", Offset = "0xB21864", VA = "0xB21864")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x200053E")]
	public class CVRNotifications
	{
		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xB2047C", Offset = "0xB2047C", VA = "0xB2047C")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xB205AC", Offset = "0xB205AC", VA = "0xB205AC")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, NotificationBitmap_t pImage, uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xB205D0", Offset = "0xB205D0", VA = "0xB205D0")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x200053F")]
	public class CVRSettings
	{
		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xB21C98", Offset = "0xB21C98", VA = "0xB21C98")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xB21DD4", Offset = "0xB21DD4", VA = "0xB21DD4")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xB21E64", Offset = "0xB21E64", VA = "0xB21E64")]
		public bool Sync(bool bForce, EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xB21E88", Offset = "0xB21E88", VA = "0xB21E88")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xB21EAC", Offset = "0xB21EAC", VA = "0xB21EAC")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xB21ECC", Offset = "0xB21ECC", VA = "0xB21ECC")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xB21EEC", Offset = "0xB21EEC", VA = "0xB21EEC")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xB21F0C", Offset = "0xB21F0C", VA = "0xB21F0C")]
		public bool GetBool(string pchSection, string pchSettingsKey, EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xB21F2C", Offset = "0xB21F2C", VA = "0xB21F2C")]
		public int GetInt32(string pchSection, string pchSettingsKey, EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xB21F4C", Offset = "0xB21F4C", VA = "0xB21F4C")]
		public float GetFloat(string pchSection, string pchSettingsKey, EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xB21F6C", Offset = "0xB21F6C", VA = "0xB21F6C")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xB21F8C", Offset = "0xB21F8C", VA = "0xB21F8C")]
		public void RemoveSection(string pchSection, EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xB21FAC", Offset = "0xB21FAC", VA = "0xB21FAC")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x2000540")]
	public class CVRScreenshots
	{
		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xB21A64", Offset = "0xB21A64", VA = "0xB21A64")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xB21BA8", Offset = "0xB21BA8", VA = "0xB21BA8")]
		public EVRScreenshotError RequestScreenshot(uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xB21BCC", Offset = "0xB21BCC", VA = "0xB21BCC")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xB21BF4", Offset = "0xB21BF4", VA = "0xB21BF4")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xB21C14", Offset = "0xB21C14", VA = "0xB21C14")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xB21C34", Offset = "0xB21C34", VA = "0xB21C34")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xB21C54", Offset = "0xB21C54", VA = "0xB21C54")]
		public EVRScreenshotError TakeStereoScreenshot(uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xB21C78", Offset = "0xB21C78", VA = "0xB21C78")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x2000541")]
	public class CVRResources
	{
		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xB218F4", Offset = "0xB218F4", VA = "0xB218F4")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xB21A24", Offset = "0xB21A24", VA = "0xB21A24")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xB21A44", Offset = "0xB21A44", VA = "0xB21A44")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000542")]
	public class CVRDriverManager
	{
		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xB20124", Offset = "0xB20124", VA = "0xB20124")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xB2025C", Offset = "0xB2025C", VA = "0xB2025C")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xB2027C", Offset = "0xB2027C", VA = "0xB2027C")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xB2029C", Offset = "0xB2029C", VA = "0xB2029C")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x2000543")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x96DFAC", Offset = "0x96DFAC", VA = "0x96DFAC")]
		internal static extern uint InitInternal(EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x96E040", Offset = "0x96E040", VA = "0x96E040")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x96E0B4", Offset = "0x96E0B4", VA = "0x96E0B4")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x96E134", Offset = "0x96E134", VA = "0x96E134")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x96E22C", Offset = "0x96E22C", VA = "0x96E22C")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x96E2B0", Offset = "0x96E2B0", VA = "0x96E2B0")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x96E35C", Offset = "0x96E35C", VA = "0x96E35C")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x96E3FC", Offset = "0x96E3FC", VA = "0x96E3FC")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x96EC60", Offset = "0x96EC60", VA = "0x96EC60")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x2000544")]
	public enum EVREye
	{
		[Token(Token = "0x4001BCF")]
		Eye_Left,
		[Token(Token = "0x4001BD0")]
		Eye_Right
	}
	[Token(Token = "0x2000545")]
	public enum ETextureType
	{
		[Token(Token = "0x4001BD2")]
		DirectX,
		[Token(Token = "0x4001BD3")]
		OpenGL,
		[Token(Token = "0x4001BD4")]
		Vulkan,
		[Token(Token = "0x4001BD5")]
		IOSurface,
		[Token(Token = "0x4001BD6")]
		DirectX12,
		[Token(Token = "0x4001BD7")]
		DXGISharedHandle
	}
	[Token(Token = "0x2000546")]
	public enum EColorSpace
	{
		[Token(Token = "0x4001BD9")]
		Auto,
		[Token(Token = "0x4001BDA")]
		Gamma,
		[Token(Token = "0x4001BDB")]
		Linear
	}
	[Token(Token = "0x2000547")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4001BDD")]
		Uninitialized = 1,
		[Token(Token = "0x4001BDE")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x4001BDF")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x4001BE0")]
		Running_OK = 200,
		[Token(Token = "0x4001BE1")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x2000548")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x4001BE3")]
		Invalid,
		[Token(Token = "0x4001BE4")]
		HMD,
		[Token(Token = "0x4001BE5")]
		Controller,
		[Token(Token = "0x4001BE6")]
		GenericTracker,
		[Token(Token = "0x4001BE7")]
		TrackingReference,
		[Token(Token = "0x4001BE8")]
		DisplayRedirect
	}
	[Token(Token = "0x2000549")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4001BEA")]
		Invalid,
		[Token(Token = "0x4001BEB")]
		LeftHand,
		[Token(Token = "0x4001BEC")]
		RightHand,
		[Token(Token = "0x4001BED")]
		OptOut
	}
	[Token(Token = "0x200054A")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x4001BEF")]
		TrackingUniverseSeated,
		[Token(Token = "0x4001BF0")]
		TrackingUniverseStanding,
		[Token(Token = "0x4001BF1")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x200054B")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x4001BF3")]
		Prop_Invalid = 0,
		[Token(Token = "0x4001BF4")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x4001BF5")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x4001BF6")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x4001BF7")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4001BF8")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4001BF9")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4001BFA")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4001BFB")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x4001BFC")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4001BFD")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4001BFE")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x4001BFF")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x4001C00")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x4001C01")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x4001C02")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x4001C03")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x4001C04")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x4001C05")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4001C06")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x4001C07")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4001C08")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4001C09")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4001C0A")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x4001C0B")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x4001C0C")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x4001C0D")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x4001C0E")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x4001C0F")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x4001C10")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x4001C11")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x4001C12")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x4001C13")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x4001C14")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x4001C15")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4001C16")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x4001C17")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x4001C18")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4001C19")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4001C1A")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x4001C1B")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4001C1C")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4001C1D")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4001C1E")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4001C1F")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x4001C20")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x4001C21")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x4001C22")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x4001C23")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x4001C24")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x4001C25")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x4001C26")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x4001C27")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4001C28")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4001C29")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4001C2A")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4001C2B")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4001C2C")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4001C2D")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4001C2E")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4001C2F")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x4001C30")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x4001C31")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x4001C32")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x4001C33")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x4001C34")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x4001C35")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x4001C36")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x4001C37")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4001C38")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4001C39")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4001C3A")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4001C3B")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4001C3C")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4001C3D")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4001C3E")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4001C3F")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x4001C40")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x4001C41")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x4001C42")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x4001C43")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x4001C44")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x4001C45")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x4001C46")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x4001C47")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x4001C48")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x4001C49")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x4001C4A")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x4001C4B")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x4001C4C")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x4001C4D")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x4001C4E")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x4001C4F")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x4001C50")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x4001C51")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x4001C52")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x4001C53")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x4001C54")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x4001C55")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x4001C56")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x4001C57")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x4001C58")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x4001C59")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x4001C5A")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x4001C5B")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x4001C5C")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x4001C5D")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x4001C5E")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x4001C5F")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x4001C60")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x4001C61")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x4001C62")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x4001C63")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x4001C64")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x4001C65")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x4001C66")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x4001C67")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x4001C68")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x4001C69")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4001C6A")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4001C6B")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x4001C6C")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x4001C6D")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4001C6E")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4001C6F")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x4001C70")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x4001C71")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x4001C72")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x4001C73")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x4001C74")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x4001C75")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x4001C76")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x4001C77")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x4001C78")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x4001C79")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x4001C7A")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x4001C7B")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x4001C7C")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001C7D")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4001C7E")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x200054C")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x4001C80")]
		TrackedProp_Success,
		[Token(Token = "0x4001C81")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x4001C82")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x4001C83")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x4001C84")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x4001C85")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x4001C86")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x4001C87")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x4001C88")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x4001C89")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4001C8A")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4001C8B")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x4001C8C")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x200054D")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4001C8E")]
		Submit_Default = 0,
		[Token(Token = "0x4001C8F")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x4001C90")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x4001C91")]
		Submit_Reserved = 4,
		[Token(Token = "0x4001C92")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x4001C93")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x200054E")]
	public enum EVRState
	{
		[Token(Token = "0x4001C95")]
		Undefined = -1,
		[Token(Token = "0x4001C96")]
		Off,
		[Token(Token = "0x4001C97")]
		Searching,
		[Token(Token = "0x4001C98")]
		Searching_Alert,
		[Token(Token = "0x4001C99")]
		Ready,
		[Token(Token = "0x4001C9A")]
		Ready_Alert,
		[Token(Token = "0x4001C9B")]
		NotReady,
		[Token(Token = "0x4001C9C")]
		Standby,
		[Token(Token = "0x4001C9D")]
		Ready_Alert_Low
	}
	[Token(Token = "0x200054F")]
	public enum EVREventType
	{
		[Token(Token = "0x4001C9F")]
		VREvent_None = 0,
		[Token(Token = "0x4001CA0")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x4001CA1")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x4001CA2")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x4001CA3")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x4001CA4")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x4001CA5")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x4001CA6")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x4001CA7")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x4001CA8")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x4001CA9")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x4001CAA")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x4001CAB")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x4001CAC")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x4001CAD")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x4001CAE")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x4001CAF")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x4001CB0")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x4001CB1")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x4001CB2")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x4001CB3")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x4001CB4")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x4001CB5")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x4001CB6")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x4001CB7")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x4001CB8")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x4001CB9")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x4001CBA")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x4001CBB")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x4001CBC")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x4001CBD")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x4001CBE")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x4001CBF")]
		VREvent_Scroll = 305,
		[Token(Token = "0x4001CC0")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x4001CC1")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x4001CC2")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x4001CC3")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x4001CC4")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x4001CC5")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x4001CC6")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x4001CC7")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x4001CC8")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x4001CC9")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x4001CCA")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x4001CCB")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x4001CCC")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x4001CCD")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x4001CCE")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x4001CCF")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x4001CD0")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x4001CD1")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x4001CD2")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x4001CD3")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x4001CD4")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x4001CD5")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x4001CD6")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x4001CD7")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x4001CD8")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x4001CD9")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x4001CDA")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x4001CDB")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x4001CDC")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x4001CDD")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x4001CDE")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x4001CDF")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x4001CE0")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x4001CE1")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x4001CE2")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x4001CE3")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x4001CE4")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x4001CE5")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x4001CE6")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x4001CE7")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x4001CE8")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x4001CE9")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x4001CEA")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x4001CEB")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x4001CEC")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x4001CED")]
		VREvent_Quit = 700,
		[Token(Token = "0x4001CEE")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x4001CEF")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x4001CF0")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x4001CF1")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x4001CF2")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x4001CF3")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x4001CF4")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x4001CF5")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x4001CF6")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x4001CF7")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x4001CF8")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x4001CF9")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x4001CFA")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x4001CFB")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x4001CFC")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4001CFD")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4001CFE")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x4001CFF")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x4001D00")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x4001D01")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x4001D02")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x4001D03")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x4001D04")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x4001D05")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x4001D06")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x4001D07")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x4001D08")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x4001D09")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x4001D0A")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x4001D0B")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x4001D0C")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4001D0D")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4001D0E")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x4001D0F")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x4001D10")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x4001D11")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x4001D12")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x4001D13")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x4001D14")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x4001D15")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x4001D16")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x4001D17")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x4001D18")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x4001D19")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x4001D1A")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x4001D1B")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x4001D1C")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x4001D1D")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x4001D1E")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x4001D1F")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x4001D20")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x4001D21")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x4001D22")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x4001D23")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x4001D24")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x4001D25")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x4001D26")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x4001D27")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001D28")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x2000550")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x4001D2A")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x4001D2B")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x4001D2C")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x4001D2D")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x4001D2E")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x2000551")]
	public enum EVRButtonId
	{
		[Token(Token = "0x4001D30")]
		k_EButton_System = 0,
		[Token(Token = "0x4001D31")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x4001D32")]
		k_EButton_Grip = 2,
		[Token(Token = "0x4001D33")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x4001D34")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x4001D35")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4001D36")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x4001D37")]
		k_EButton_A = 7,
		[Token(Token = "0x4001D38")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x4001D39")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x4001D3A")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x4001D3B")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x4001D3C")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x4001D3D")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x4001D3E")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x4001D3F")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x4001D40")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x4001D41")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x2000552")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x4001D43")]
		Left = 1,
		[Token(Token = "0x4001D44")]
		Right = 2,
		[Token(Token = "0x4001D45")]
		Middle = 4
	}
	[Token(Token = "0x2000553")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x4001D47")]
		k_EDualAnalog_Left,
		[Token(Token = "0x4001D48")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x2000554")]
	public enum EVRInputError
	{
		[Token(Token = "0x4001D4A")]
		None,
		[Token(Token = "0x4001D4B")]
		NameNotFound,
		[Token(Token = "0x4001D4C")]
		WrongType,
		[Token(Token = "0x4001D4D")]
		InvalidHandle,
		[Token(Token = "0x4001D4E")]
		InvalidParam,
		[Token(Token = "0x4001D4F")]
		NoSteam,
		[Token(Token = "0x4001D50")]
		MaxCapacityReached,
		[Token(Token = "0x4001D51")]
		IPCError,
		[Token(Token = "0x4001D52")]
		NoActiveActionSet,
		[Token(Token = "0x4001D53")]
		InvalidDevice
	}
	[Token(Token = "0x2000555")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x4001D55")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4001D56")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x4001D57")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4001D58")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x2000556")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x4001D5A")]
		k_eControllerAxis_None,
		[Token(Token = "0x4001D5B")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x4001D5C")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x4001D5D")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x2000557")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x4001D5F")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x4001D60")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x2000558")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x4001D62")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x4001D63")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x4001D64")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x4001D65")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4001D66")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4001D67")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x2000559")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4001D69")]
		None = 0,
		[Token(Token = "0x4001D6A")]
		UnknownOverlay = 10,
		[Token(Token = "0x4001D6B")]
		InvalidHandle = 11,
		[Token(Token = "0x4001D6C")]
		PermissionDenied = 12,
		[Token(Token = "0x4001D6D")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x4001D6E")]
		WrongVisibilityType = 14,
		[Token(Token = "0x4001D6F")]
		KeyTooLong = 15,
		[Token(Token = "0x4001D70")]
		NameTooLong = 16,
		[Token(Token = "0x4001D71")]
		KeyInUse = 17,
		[Token(Token = "0x4001D72")]
		WrongTransformType = 18,
		[Token(Token = "0x4001D73")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x4001D74")]
		InvalidParameter = 20,
		[Token(Token = "0x4001D75")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4001D76")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4001D77")]
		RequestFailed = 23,
		[Token(Token = "0x4001D78")]
		InvalidTexture = 24,
		[Token(Token = "0x4001D79")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4001D7A")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4001D7B")]
		NoNeighbor = 27,
		[Token(Token = "0x4001D7C")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4001D7D")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x4001D7E")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x4001D7F")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x4001D80")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x200055A")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x4001D82")]
		VRApplication_Other,
		[Token(Token = "0x4001D83")]
		VRApplication_Scene,
		[Token(Token = "0x4001D84")]
		VRApplication_Overlay,
		[Token(Token = "0x4001D85")]
		VRApplication_Background,
		[Token(Token = "0x4001D86")]
		VRApplication_Utility,
		[Token(Token = "0x4001D87")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4001D88")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4001D89")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x4001D8A")]
		VRApplication_Max
	}
	[Token(Token = "0x200055B")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x4001D8C")]
		None,
		[Token(Token = "0x4001D8D")]
		Success,
		[Token(Token = "0x4001D8E")]
		Fail
	}
	[Token(Token = "0x200055C")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x4001D90")]
		OK = 0,
		[Token(Token = "0x4001D91")]
		InvalidNotificationId = 100,
		[Token(Token = "0x4001D92")]
		NotificationQueueFull = 101,
		[Token(Token = "0x4001D93")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x4001D94")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x200055D")]
	public enum EVRInitError
	{
		[Token(Token = "0x4001D96")]
		None = 0,
		[Token(Token = "0x4001D97")]
		Unknown = 1,
		[Token(Token = "0x4001D98")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4001D99")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4001D9A")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4001D9B")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4001D9C")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4001D9D")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4001D9E")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x4001D9F")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x4001DA0")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x4001DA1")]
		Init_NotInitialized = 109,
		[Token(Token = "0x4001DA2")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x4001DA3")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x4001DA4")]
		Init_NoLogPath = 112,
		[Token(Token = "0x4001DA5")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x4001DA6")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4001DA7")]
		Init_Retry = 115,
		[Token(Token = "0x4001DA8")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4001DA9")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4001DAA")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4001DAB")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4001DAC")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4001DAD")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4001DAE")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4001DAF")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4001DB0")]
		Init_Internal = 124,
		[Token(Token = "0x4001DB1")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x4001DB2")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x4001DB3")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x4001DB4")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x4001DB5")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x4001DB6")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x4001DB7")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x4001DB8")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x4001DB9")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x4001DBA")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x4001DBB")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x4001DBC")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x4001DBD")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x4001DBE")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x4001DBF")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x4001DC0")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x4001DC1")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x4001DC2")]
		Driver_Failed = 200,
		[Token(Token = "0x4001DC3")]
		Driver_Unknown = 201,
		[Token(Token = "0x4001DC4")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x4001DC5")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x4001DC6")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x4001DC7")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x4001DC8")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x4001DC9")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x4001DCA")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x4001DCB")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x4001DCC")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x4001DCD")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x4001DCE")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x4001DCF")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x4001DD0")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x4001DD1")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x4001DD2")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x4001DD3")]
		IPC_Failed = 305,
		[Token(Token = "0x4001DD4")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x4001DD5")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x4001DD6")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x4001DD7")]
		Compositor_Failed = 400,
		[Token(Token = "0x4001DD8")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x4001DD9")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x4001DDA")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x4001DDB")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x4001DDC")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x4001DDD")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x4001DDE")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x4001DDF")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x4001DE0")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x4001DE1")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x4001DE2")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x4001DE3")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x4001DE4")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4001DE5")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4001DE6")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4001DE7")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4001DE8")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x4001DE9")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4001DEA")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4001DEB")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x4001DEC")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x200055E")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4001DEE")]
		None,
		[Token(Token = "0x4001DEF")]
		Mono,
		[Token(Token = "0x4001DF0")]
		Stereo,
		[Token(Token = "0x4001DF1")]
		Cubemap,
		[Token(Token = "0x4001DF2")]
		MonoPanorama,
		[Token(Token = "0x4001DF3")]
		StereoPanorama
	}
	[Token(Token = "0x200055F")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4001DF5")]
		Preview,
		[Token(Token = "0x4001DF6")]
		VR
	}
	[Token(Token = "0x2000560")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x4001DF8")]
		None = 0,
		[Token(Token = "0x4001DF9")]
		OperationFailed = 100,
		[Token(Token = "0x4001DFA")]
		InvalidHandle = 101,
		[Token(Token = "0x4001DFB")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x4001DFC")]
		OutOfHandles = 103,
		[Token(Token = "0x4001DFD")]
		IPCFailure = 104,
		[Token(Token = "0x4001DFE")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4001DFF")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4001E00")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x4001E01")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4001E02")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4001E03")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x4001E04")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4001E05")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4001E06")]
		NoFrameAvailable = 113,
		[Token(Token = "0x4001E07")]
		InvalidArgument = 114,
		[Token(Token = "0x4001E08")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x2000561")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x4001E0A")]
		Distorted,
		[Token(Token = "0x4001E0B")]
		Undistorted,
		[Token(Token = "0x4001E0C")]
		MaximumUndistorted,
		[Token(Token = "0x4001E0D")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x2000562")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x4001E0F")]
		None = 0,
		[Token(Token = "0x4001E10")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x4001E11")]
		NoManifest = 101,
		[Token(Token = "0x4001E12")]
		NoApplication = 102,
		[Token(Token = "0x4001E13")]
		InvalidIndex = 103,
		[Token(Token = "0x4001E14")]
		UnknownApplication = 104,
		[Token(Token = "0x4001E15")]
		IPCFailed = 105,
		[Token(Token = "0x4001E16")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4001E17")]
		InvalidManifest = 107,
		[Token(Token = "0x4001E18")]
		InvalidApplication = 108,
		[Token(Token = "0x4001E19")]
		LaunchFailed = 109,
		[Token(Token = "0x4001E1A")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x4001E1B")]
		LaunchInProgress = 111,
		[Token(Token = "0x4001E1C")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x4001E1D")]
		TransitionAborted = 113,
		[Token(Token = "0x4001E1E")]
		IsTemplate = 114,
		[Token(Token = "0x4001E1F")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x4001E20")]
		BufferTooSmall = 200,
		[Token(Token = "0x4001E21")]
		PropertyNotSet = 201,
		[Token(Token = "0x4001E22")]
		UnknownProperty = 202,
		[Token(Token = "0x4001E23")]
		InvalidParameter = 203
	}
	[Token(Token = "0x2000563")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4001E25")]
		Name_String = 0,
		[Token(Token = "0x4001E26")]
		LaunchType_String = 11,
		[Token(Token = "0x4001E27")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x4001E28")]
		BinaryPath_String = 13,
		[Token(Token = "0x4001E29")]
		Arguments_String = 14,
		[Token(Token = "0x4001E2A")]
		URL_String = 15,
		[Token(Token = "0x4001E2B")]
		Description_String = 50,
		[Token(Token = "0x4001E2C")]
		NewsURL_String = 51,
		[Token(Token = "0x4001E2D")]
		ImagePath_String = 52,
		[Token(Token = "0x4001E2E")]
		Source_String = 53,
		[Token(Token = "0x4001E2F")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x4001E30")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x4001E31")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4001E32")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4001E33")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4001E34")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4001E35")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x2000564")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4001E37")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x4001E38")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x4001E39")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x4001E3A")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x2000565")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x4001E3C")]
		OK = 1,
		[Token(Token = "0x4001E3D")]
		Warning = 100,
		[Token(Token = "0x4001E3E")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x4001E3F")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x4001E40")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x4001E41")]
		Error = 200,
		[Token(Token = "0x4001E42")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4001E43")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4001E44")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4001E45")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x2000566")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4001E47")]
		Live = 1,
		[Token(Token = "0x4001E48")]
		Temp
	}
	[Token(Token = "0x2000567")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x4001E4A")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x2000568")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x4001E4C")]
		None = 0,
		[Token(Token = "0x4001E4D")]
		RequestFailed = 1,
		[Token(Token = "0x4001E4E")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001E4F")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x4001E50")]
		InvalidTexture = 102,
		[Token(Token = "0x4001E51")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x4001E52")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x4001E53")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x4001E54")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4001E55")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4001E56")]
		AlreadySubmitted = 108,
		[Token(Token = "0x4001E57")]
		InvalidBounds = 109
	}
	[Token(Token = "0x2000569")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x4001E59")]
		Implicit,
		[Token(Token = "0x4001E5A")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x4001E5B")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x200056A")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x4001E5D")]
		None,
		[Token(Token = "0x4001E5E")]
		Mouse,
		[Token(Token = "0x4001E5F")]
		DualAnalog
	}
	[Token(Token = "0x200056B")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x4001E61")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x4001E62")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x4001E63")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x4001E64")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x200056C")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x4001E66")]
		None,
		[Token(Token = "0x4001E67")]
		Curved,
		[Token(Token = "0x4001E68")]
		RGSS4X,
		[Token(Token = "0x4001E69")]
		NoDashboardTab,
		[Token(Token = "0x4001E6A")]
		AcceptsGamepadEvents,
		[Token(Token = "0x4001E6B")]
		ShowGamepadFocus,
		[Token(Token = "0x4001E6C")]
		SendVRScrollEvents,
		[Token(Token = "0x4001E6D")]
		SendVRTouchpadEvents,
		[Token(Token = "0x4001E6E")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x4001E6F")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x4001E70")]
		SideBySide_Parallel,
		[Token(Token = "0x4001E71")]
		SideBySide_Crossed,
		[Token(Token = "0x4001E72")]
		Panorama,
		[Token(Token = "0x4001E73")]
		StereoPanorama,
		[Token(Token = "0x4001E74")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x4001E75")]
		VisibleInDashboard
	}
	[Token(Token = "0x200056D")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4001E77")]
		ButtonPress_0,
		[Token(Token = "0x4001E78")]
		ButtonPress_1,
		[Token(Token = "0x4001E79")]
		ButtonPress_2,
		[Token(Token = "0x4001E7A")]
		ButtonPress_3,
		[Token(Token = "0x4001E7B")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4001E7C")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4001E7D")]
		ApplicationQuit
	}
	[Token(Token = "0x200056E")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4001E7F")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x4001E80")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x4001E81")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x200056F")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x4001E83")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x4001E84")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x2000570")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x4001E86")]
		Up,
		[Token(Token = "0x4001E87")]
		Down,
		[Token(Token = "0x4001E88")]
		Left,
		[Token(Token = "0x4001E89")]
		Right,
		[Token(Token = "0x4001E8A")]
		Count
	}
	[Token(Token = "0x2000571")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4001E8C")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4001E8D")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x2000572")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4001E8F")]
		None = 0,
		[Token(Token = "0x4001E90")]
		Loading = 100,
		[Token(Token = "0x4001E91")]
		NotSupported = 200,
		[Token(Token = "0x4001E92")]
		InvalidArg = 300,
		[Token(Token = "0x4001E93")]
		InvalidModel = 301,
		[Token(Token = "0x4001E94")]
		NoShapes = 302,
		[Token(Token = "0x4001E95")]
		MultipleShapes = 303,
		[Token(Token = "0x4001E96")]
		TooManyVertices = 304,
		[Token(Token = "0x4001E97")]
		MultipleTextures = 305,
		[Token(Token = "0x4001E98")]
		BufferTooSmall = 306,
		[Token(Token = "0x4001E99")]
		NotEnoughNormals = 307,
		[Token(Token = "0x4001E9A")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x4001E9B")]
		InvalidTexture = 400
	}
	[Token(Token = "0x2000573")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x4001E9D")]
		IsStatic = 1,
		[Token(Token = "0x4001E9E")]
		IsVisible = 2,
		[Token(Token = "0x4001E9F")]
		IsTouched = 4,
		[Token(Token = "0x4001EA0")]
		IsPressed = 8,
		[Token(Token = "0x4001EA1")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x2000574")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x4001EA3")]
		Transient,
		[Token(Token = "0x4001EA4")]
		Persistent,
		[Token(Token = "0x4001EA5")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x2000575")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4001EA7")]
		None = 0,
		[Token(Token = "0x4001EA8")]
		Application = 100,
		[Token(Token = "0x4001EA9")]
		Contact_Disabled = 200,
		[Token(Token = "0x4001EAA")]
		Contact_Enabled = 201,
		[Token(Token = "0x4001EAB")]
		Contact_Active = 202
	}
	[Token(Token = "0x2000576")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4001EAD")]
		None,
		[Token(Token = "0x4001EAE")]
		IPCFailed,
		[Token(Token = "0x4001EAF")]
		WriteFailed,
		[Token(Token = "0x4001EB0")]
		ReadFailed,
		[Token(Token = "0x4001EB1")]
		JsonParseFailed,
		[Token(Token = "0x4001EB2")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x2000577")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4001EB4")]
		None = 0,
		[Token(Token = "0x4001EB5")]
		RequestFailed = 1,
		[Token(Token = "0x4001EB6")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001EB7")]
		NotFound = 101,
		[Token(Token = "0x4001EB8")]
		BufferTooSmall = 102,
		[Token(Token = "0x4001EB9")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x2000578")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x2000579")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x200057A")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x200057B")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x200057C")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x200057D")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x200057E")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x200057F")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x2000580")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x2000581")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x2000582")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x2000583")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x2000584")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x2000585")]
	public struct Texture_t
	{
		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x2000586")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x2000587")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x2000588")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x2000589")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x200058A")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x200058B")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x200058C")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x200058D")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x200058E")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x200058F")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x2000590")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x2000591")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x2000592")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x2000593")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x2000594")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x2000595")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x2000596")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x2000597")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x2000598")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x2000599")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong reserved2;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong reserved3;
	}
	[Token(Token = "0x200059A")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x200059B")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x200059C")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x200059D")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x200059E")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x200059F")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x20005A0")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x20005A1")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x20005A2")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x20005A3")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x20005A4")]
	public struct VREvent_t
	{
		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x20005A5")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x9C5718", Offset = "0x9C5718", VA = "0x9C5718")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x9C5754", Offset = "0x9C5754", VA = "0x9C5754")]
		public void Unpack(VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x20005A7")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x20005A8")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x20005A9")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x9C5690", Offset = "0x9C5690", VA = "0x9C5690")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x9C56D4", Offset = "0x9C56D4", VA = "0x9C56D4")]
		public void Unpack(VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x20005AA")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x20005AB")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x20005AC")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x20005AD")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x20005AE")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x20005AF")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x20005B0")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x20005B1")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x20005B2")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x20005B3")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x20005B4")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x20005B5")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x20005B6")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x20005B7")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x20005B8")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xC6BD64", Offset = "0xC6BD64", VA = "0xC6BD64")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xC6BD78", Offset = "0xC6BD78", VA = "0xC6BD78")]
		public void Unpack(RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x20005BA")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xC6BD94", Offset = "0xC6BD94", VA = "0xC6BD94")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xC6BDC0", Offset = "0xC6BDC0", VA = "0xC6BDC0")]
		public void Unpack(RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x20005BB")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x20005BC")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x20005BD")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x20005BE")]
	public class OpenVR
	{
		[Token(Token = "0x20005BF")]
		private class COpenVRContext
		{
			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x40020C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x40020C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x40020C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x40020C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x40020C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x6001F86")]
			[Address(RVA = "0x804B1C", Offset = "0x804B1C", VA = "0x804B1C")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x6001F87")]
			[Address(RVA = "0x804B44", Offset = "0x804B44", VA = "0x804B44")]
			public void Clear()
			{
			}

			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x804C08", Offset = "0x804C08", VA = "0x804C08")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x804D30", Offset = "0x804D30", VA = "0x804D30")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x804E0C", Offset = "0x804E0C", VA = "0x804E0C")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x804EE8", Offset = "0x804EE8", VA = "0x804EE8")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x804FC4", Offset = "0x804FC4", VA = "0x804FC4")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x8050A0", Offset = "0x8050A0", VA = "0x8050A0")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x80517C", Offset = "0x80517C", VA = "0x80517C")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0x805258", Offset = "0x805258", VA = "0x805258")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x805334", Offset = "0x805334", VA = "0x805334")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x805410", Offset = "0x805410", VA = "0x805410")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x8054EC", Offset = "0x8054EC", VA = "0x8054EC")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x6001F93")]
			[Address(RVA = "0x8055C8", Offset = "0x8055C8", VA = "0x8055C8")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x4001FFF")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4002000")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4002001")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4002002")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4002003")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4002004")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x4002005")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x4002006")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x4002007")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x4002008")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x4002009")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x400200A")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x400200B")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x400200C")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x400200D")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x400200E")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x400200F")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x4002010")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x4002011")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4002012")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x4002013")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x4002014")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x4002015")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x4002016")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x4002017")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x4002018")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4002019")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x400201A")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x400201B")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x400201C")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x400201D")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x400201E")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x400201F")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x4002020")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x4002021")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x4002022")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x4002023")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4002024")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4002025")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4002026")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4002027")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4002028")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4002029")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x400202A")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x400202B")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x400202C")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x400202D")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x400202E")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x400202F")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x4002030")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x4002031")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x4002032")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4002033")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4002034")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4002035")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4002036")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4002037")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4002038")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4002039")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x400203A")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x400203B")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x400203C")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x400203D")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x400203E")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x400203F")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x4002040")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x4002041")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4002042")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4002043")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4002044")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4002045")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4002046")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4002047")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4002048")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4002049")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x400204A")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x400204B")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x400204C")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x400204D")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x400204E")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x400204F")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x4002050")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x4002051")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x4002052")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x4002053")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x4002054")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x4002055")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x4002056")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4002057")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4002058")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4002059")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x400205A")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x400205B")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x400205C")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x400205D")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x400205E")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x400205F")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x4002060")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x4002061")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x4002062")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x4002063")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x4002064")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x4002065")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x4002066")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4002067")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4002068")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4002069")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x400206A")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x400206B")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x400206C")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x400206D")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x400206E")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x400206F")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x4002070")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x4002071")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x4002072")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x4002073")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x4002074")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x4002075")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x4002076")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4002077")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4002078")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4002079")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x400207A")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x400207B")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x400207C")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x400207D")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x400207E")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x400207F")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x4002080")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x4002081")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x4002082")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x4002083")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x4002084")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x4002085")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x4002086")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4002087")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4002088")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4002089")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x400208A")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x400208B")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x400208C")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x400208D")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x400208E")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x400208F")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x4002090")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x4002091")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x4002092")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x4002093")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x4002094")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x4002095")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x4002096")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4002097")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4002098")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4002099")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x400209A")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x400209B")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x400209C")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x400209D")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x400209E")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x400209F")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x40020A0")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x40020A1")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x40020A2")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x40020A3")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x40020A4")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x40020A5")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x40020A6")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x40020A7")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x40020A8")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x40020A9")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x40020AA")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x40020AB")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x40020AC")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x40020AD")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x40020AE")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x40020AF")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x40020B0")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x40020B1")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x40020B2")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x40020B3")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x40020B4")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x40020B5")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x40020B6")]
		public const string k_pch_Dashboard_EnableWebUI = "webUI";

		[Token(Token = "0x40020B7")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x40020B8")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x40020B9")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x40020BA")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x40020BB")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x40020BC")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x40020BD")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639230", Offset = "0x639230")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x40020BF")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x170002D0")]
		private static uint VRToken
		{
			[Token(Token = "0x6001F74")]
			[Address(RVA = "0x96E470", Offset = "0x96E470", VA = "0x96E470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642764", Offset = "0x642764")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x96E4D4", Offset = "0x96E4D4", VA = "0x96E4D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642774", Offset = "0x642774")]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x96E544", Offset = "0x96E544", VA = "0x96E544")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		public static CVRSystem System
		{
			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x96E624", Offset = "0x96E624", VA = "0x96E624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x96E68C", Offset = "0x96E68C", VA = "0x96E68C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x96E6F4", Offset = "0x96E6F4", VA = "0x96E6F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D5")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0x96E75C", Offset = "0x96E75C", VA = "0x96E75C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D6")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x96E7C4", Offset = "0x96E7C4", VA = "0x96E7C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x96E82C", Offset = "0x96E82C", VA = "0x96E82C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x96E894", Offset = "0x96E894", VA = "0x96E894")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D9")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x96E8FC", Offset = "0x96E8FC", VA = "0x96E8FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DA")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x96E964", Offset = "0x96E964", VA = "0x96E964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x96E9CC", Offset = "0x96E9CC", VA = "0x96E9CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DC")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x96EA34", Offset = "0x96EA34", VA = "0x96EA34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x96DFA8", Offset = "0x96DFA8", VA = "0x96DFA8")]
		public static uint InitInternal(EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x96E03C", Offset = "0x96E03C", VA = "0x96E03C")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x96E0B0", Offset = "0x96E0B0", VA = "0x96E0B0")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x96E130", Offset = "0x96E130", VA = "0x96E130")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x96E1B0", Offset = "0x96E1B0", VA = "0x96E1B0")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x96E2AC", Offset = "0x96E2AC", VA = "0x96E2AC")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x96E358", Offset = "0x96E358", VA = "0x96E358")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x96E3F8", Offset = "0x96E3F8", VA = "0x96E3F8")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x96EA9C", Offset = "0x96EA9C", VA = "0x96EA9C")]
		public static CVRSystem Init(EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x96EBFC", Offset = "0x96EBFC", VA = "0x96EBFC")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x96EC54", Offset = "0x96EC54", VA = "0x96EC54")]
		public OpenVR()
		{
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x20005C0")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xED7748", Offset = "0xED7748", VA = "0xED7748")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xED821C", Offset = "0xED821C", VA = "0xED821C")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xED865C", Offset = "0xED865C", VA = "0xED865C")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xED8780", Offset = "0xED8780", VA = "0xED8780")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xED88D4", Offset = "0xED88D4", VA = "0xED88D4", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xED8A1C", Offset = "0xED8A1C", VA = "0xED8A1C", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xED8BC0", Offset = "0xED8BC0", VA = "0xED8BC0", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xED8CCC", Offset = "0xED8CCC", VA = "0xED8CCC", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xED8E2C", Offset = "0xED8E2C", VA = "0xED8E2C", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xED8EE0", Offset = "0xED8EE0", VA = "0xED8EE0", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xED902C", Offset = "0xED902C", VA = "0xED902C", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xED9178", Offset = "0xED9178", VA = "0xED9178", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xED971C", Offset = "0xED971C", VA = "0xED971C", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xED9DA8", Offset = "0xED9DA8", VA = "0xED9DA8", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0xED9E3C", Offset = "0xED9E3C", VA = "0xED9E3C", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xEDA148", Offset = "0xEDA148", VA = "0xEDA148", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xEDA160", Offset = "0xEDA160", VA = "0xEDA160", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xEDA28C", Offset = "0xEDA28C", VA = "0xEDA28C", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xEDA514", Offset = "0xEDA514", VA = "0xEDA514", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xEDA794", Offset = "0xEDA794", VA = "0xEDA794", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xED9E60", Offset = "0xED9E60", VA = "0xED9E60")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xEDA8F4", Offset = "0xEDA8F4", VA = "0xEDA8F4", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xED80CC", Offset = "0xED80CC", VA = "0xED80CC")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xEDAD48", Offset = "0xEDAD48", VA = "0xEDAD48")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xEDAEA8", Offset = "0xEDAEA8", VA = "0xEDAEA8")]
		public void PingAll()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xEDAF58", Offset = "0xEDAF58", VA = "0xEDAF58")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xEDB060", Offset = "0xEDB060", VA = "0xEDB060")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xEDB114", Offset = "0xEDB114", VA = "0xEDB114")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xEDB284", Offset = "0xEDB284", VA = "0xEDB284")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xED8830", Offset = "0xED8830", VA = "0xED8830")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xED86D8", Offset = "0xED86D8", VA = "0xED86D8")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20005C1")]
	public class HapticDevice
	{
		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x8EFC28", Offset = "0x8EFC28", VA = "0x8EFC28")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x20005C3")]
		private class Wrapper<T>
		{
			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x6001FBE")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005C4")]
		private class Device
		{
			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0x7D51E4", Offset = "0x7D51E4", VA = "0x7D51E4")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005C5")]
		public class StreamHost
		{
			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x7D51EC", Offset = "0x7D51EC", VA = "0x7D51EC")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xEDB874", Offset = "0xEDB874", VA = "0xEDB874")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xEDB898", Offset = "0xEDB898", VA = "0xEDB898")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0xEDB9F8", Offset = "0xEDB9F8", VA = "0xEDB9F8")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xEDBA20", Offset = "0xEDBA20", VA = "0xEDBA20")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB9")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0xEDBA30", Offset = "0xEDBA30", VA = "0xEDBA30")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0xEDAC38", Offset = "0xEDAC38", VA = "0xEDAC38")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0xEDB338", Offset = "0xEDB338", VA = "0xEDB338")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0xEDB544", Offset = "0xEDB544", VA = "0xEDB544")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005C6")]
	public class AndroidWidget_ControlButton : MonoBehaviour
	{
		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x639250", Offset = "0x639250")]
		private Sprite defaultImage;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0xEDBB28", Offset = "0xEDBB28", VA = "0xEDBB28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0xEDBBF8", Offset = "0xEDBBF8", VA = "0xEDBBF8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0xEDC1DC", Offset = "0xEDC1DC", VA = "0xEDC1DC")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0xEDC24C", Offset = "0xEDC24C", VA = "0xEDC24C")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xEDC2F4", Offset = "0xEDC2F4", VA = "0xEDC2F4")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	public class AndroidWidget_ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xEDC2FC", Offset = "0xEDC2FC", VA = "0xEDC2FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xEDC49C", Offset = "0xEDC49C", VA = "0xEDC49C")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xEDC57C", Offset = "0xEDC57C", VA = "0xEDC57C")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0xEDC62C", Offset = "0xEDC62C", VA = "0xEDC62C")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x20005C8")]
	public class AndroidWidget_PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63930C", Offset = "0x63930C")]
		[SerializeField]
		private Image deviceImage;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x639388", Offset = "0x639388")]
		private Sprite leftSide;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0xEDC634", Offset = "0xEDC634", VA = "0xEDC634")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xEDC720", Offset = "0xEDC720", VA = "0xEDC720")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0xEDC8D8", Offset = "0xEDC8D8", VA = "0xEDC8D8")]
		private void OnPing()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0xEDC95C", Offset = "0xEDC95C", VA = "0xEDC95C")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0xEDCA3C", Offset = "0xEDCA3C", VA = "0xEDCA3C")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public class AndroidWidget_SettingUIAnimation : MonoBehaviour
	{
		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0xEDCA44", Offset = "0xEDCA44", VA = "0xEDCA44")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0xEDCAC0", Offset = "0xEDCAC0", VA = "0xEDCAC0")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0xEDCAE4", Offset = "0xEDCAE4", VA = "0xEDCAE4")]
		public void Show()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0xEDCB08", Offset = "0xEDCB08", VA = "0xEDCB08")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0xEDCC2C", Offset = "0xEDCC2C", VA = "0xEDCC2C")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x20005CA")]
	public class AndroidWidget_UI : MonoBehaviour
	{
		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x639414", Offset = "0x639414")]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0xEDCC34", Offset = "0xEDCC34", VA = "0xEDCC34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0xEDD08C", Offset = "0xEDD08C", VA = "0xEDD08C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0xEDCE2C", Offset = "0xEDCE2C", VA = "0xEDCE2C")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xEDD304", Offset = "0xEDD304", VA = "0xEDD304")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0xEDD3A4", Offset = "0xEDD3A4", VA = "0xEDD3A4")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0xEDD3C8", Offset = "0xEDD3C8", VA = "0xEDD3C8")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0xEDD3EC", Offset = "0xEDD3EC", VA = "0xEDD3EC")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0xEDD40C", Offset = "0xEDD40C", VA = "0xEDD40C")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xEDD1E4", Offset = "0xEDD1E4", VA = "0xEDD1E4")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xEDD5E8", Offset = "0xEDD5E8", VA = "0xEDD5E8")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005CB")]
	public class PositonIconSetting
	{
		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x9780DC", Offset = "0x9780DC", VA = "0x9780DC")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005CC")]
	public class IconSetting
	{
		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x639460", Offset = "0x639460")]
		public PositonIconSetting Vest;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x8F3C54", Offset = "0x8F3C54", VA = "0x8F3C54")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	public class Android_DeviceController : MonoBehaviour
	{
		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x639498", Offset = "0x639498")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x639514", Offset = "0x639514")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6395A0", Offset = "0x6395A0")]
		[SerializeField]
		private GameObject DisconnectMenu;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xEDD5F8", Offset = "0xEDD5F8", VA = "0xEDD5F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0xEDD7F4", Offset = "0xEDD7F4", VA = "0xEDD7F4")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xEDD9C4", Offset = "0xEDD9C4", VA = "0xEDD9C4")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xEDDA58", Offset = "0xEDDA58", VA = "0xEDDA58")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0xEDDAD4", Offset = "0xEDDAD4", VA = "0xEDDAD4")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xEDD8B8", Offset = "0xEDD8B8", VA = "0xEDD8B8")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xEDDF5C", Offset = "0xEDDF5C", VA = "0xEDDF5C")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xEDDF88", Offset = "0xEDDF88", VA = "0xEDDF88")]
		private void Ping()
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xEDE000", Offset = "0xEDE000", VA = "0xEDE000")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xEDE0EC", Offset = "0xEDE0EC", VA = "0xEDE0EC")]
		private void ToRight()
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xEDE1D8", Offset = "0xEDE1D8", VA = "0xEDE1D8")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xEDDDEC", Offset = "0xEDDDEC", VA = "0xEDDDEC")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xEDDD84", Offset = "0xEDDD84", VA = "0xEDDD84")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xEDDDB8", Offset = "0xEDDDB8", VA = "0xEDDDB8")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xEDE224", Offset = "0xEDE224", VA = "0xEDE224")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x20005CE")]
	public class Android_UIController : MonoBehaviour
	{
		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63965C", Offset = "0x63965C")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xEDE318", Offset = "0xEDE318", VA = "0xEDE318")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xEDE7E4", Offset = "0xEDE7E4", VA = "0xEDE7E4")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xEDEE48", Offset = "0xEDEE48", VA = "0xEDEE48")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xEDEEE8", Offset = "0xEDEEE8", VA = "0xEDEEE8")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xEDEF88", Offset = "0xEDEF88", VA = "0xEDEF88")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xEDEFD0", Offset = "0xEDEFD0", VA = "0xEDEFD0")]
		private void NextPage()
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xEDF008", Offset = "0xEDF008", VA = "0xEDF008")]
		private void BackPage()
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xEDF040", Offset = "0xEDF040", VA = "0xEDF040")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	public class BhapticsAndroidManager : MonoBehaviour
	{
		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BhapticsAndroidManager Instance;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0xCB3984", Offset = "0xCB3984", VA = "0xCB3984")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xCB3AB4", Offset = "0xCB3AB4", VA = "0xCB3AB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xCB3B60", Offset = "0xCB3B60", VA = "0xCB3B60")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xCB3750", Offset = "0xCB3750", VA = "0xCB3750")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xCB3680", Offset = "0xCB3680", VA = "0xCB3680")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xCB4468", Offset = "0xCB4468", VA = "0xCB4468")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xCB4630", Offset = "0xCB4630", VA = "0xCB4630")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xCB32A8", Offset = "0xCB32A8", VA = "0xCB32A8")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xCB2F10", Offset = "0xCB2F10", VA = "0xCB2F10")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xCB30E0", Offset = "0xCB30E0", VA = "0xCB30E0")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0xCB2BD4", Offset = "0xCB2BD4", VA = "0xCB2BD4")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xCB46EC", Offset = "0xCB46EC", VA = "0xCB46EC")]
		public static void RemoveRefreshAction()
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xCB4770", Offset = "0xCB4770", VA = "0xCB4770")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xCB4830", Offset = "0xCB4830", VA = "0xCB4830")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xCB48EC", Offset = "0xCB48EC", VA = "0xCB48EC")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xCB49DC", Offset = "0xCB49DC", VA = "0xCB49DC")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xCB4A98", Offset = "0xCB4A98", VA = "0xCB4A98")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xCB4B78", Offset = "0xCB4B78", VA = "0xCB4B78")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xCB4C3C", Offset = "0xCB4C3C", VA = "0xCB4C3C")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D0")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xC6CD58", Offset = "0xC6CD58", VA = "0xC6CD58")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x20005D1")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6396E8", Offset = "0x6396E8")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xCBBAA0", Offset = "0xCBBAA0", VA = "0xCBBAA0")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xCBBC08", Offset = "0xCBBC08", VA = "0xCBBC08")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x20005D2")]
	public class HapticApi
	{
		[Token(Token = "0x20005D3")]
		public struct point
		{
			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x20005D4")]
		public struct status
		{
			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x600200F")]
		[Address(RVA = "0x8EE718", Offset = "0x8EE718", VA = "0x8EE718")]
		public static extern bool TryGetExePath(byte[] buf, int size);

		[PreserveSig]
		[Token(Token = "0x6002010")]
		[Address(RVA = "0x8EE7B8", Offset = "0x8EE7B8", VA = "0x8EE7B8")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x6002011")]
		[Address(RVA = "0x8EE870", Offset = "0x8EE870", VA = "0x8EE870")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x6002012")]
		[Address(RVA = "0x8EE8E0", Offset = "0x8EE8E0", VA = "0x8EE8E0")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x6002013")]
		[Address(RVA = "0x8EE994", Offset = "0x8EE994", VA = "0x8EE994")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6002014")]
		[Address(RVA = "0x8EEA4C", Offset = "0x8EEA4C", VA = "0x8EEA4C")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6002015")]
		[Address(RVA = "0x8EEB04", Offset = "0x8EEB04", VA = "0x8EEB04")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6002016")]
		[Address(RVA = "0x8EEB94", Offset = "0x8EEB94", VA = "0x8EEB94")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x6002017")]
		[Address(RVA = "0x8EEC34", Offset = "0x8EEC34", VA = "0x8EEC34")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x6002018")]
		[Address(RVA = "0x8EED1C", Offset = "0x8EED1C", VA = "0x8EED1C")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6002019")]
		[Address(RVA = "0x8EEDE4", Offset = "0x8EEDE4", VA = "0x8EEDE4")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x600201A")]
		[Address(RVA = "0x8EEEAC", Offset = "0x8EEEAC", VA = "0x8EEEAC")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x600201B")]
		[Address(RVA = "0x8EEF48", Offset = "0x8EEF48", VA = "0x8EEF48")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x600201C")]
		[Address(RVA = "0x8EEFC4", Offset = "0x8EEFC4", VA = "0x8EEFC4")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x600201D")]
		[Address(RVA = "0x8EF060", Offset = "0x8EF060", VA = "0x8EF060")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x600201E")]
		[Address(RVA = "0x8EF0D0", Offset = "0x8EF0D0", VA = "0x8EF0D0")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x600201F")]
		[Address(RVA = "0x8EF160", Offset = "0x8EF160", VA = "0x8EF160")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x6002020")]
		[Address(RVA = "0x8EF1CC", Offset = "0x8EF1CC", VA = "0x8EF1CC")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x6002021")]
		[Address(RVA = "0x8EF23C", Offset = "0x8EF23C", VA = "0x8EF23C")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x6002022")]
		[Address(RVA = "0x8EF2A8", Offset = "0x8EF2A8", VA = "0x8EF2A8")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x6002023")]
		[Address(RVA = "0x8EF330", Offset = "0x8EF330", VA = "0x8EF330")]
		public static extern bool TryGetResponseForPosition(PositionType pos, [Out] status status);

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x8EF408", Offset = "0x8EF408", VA = "0x8EF408")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x20005D5")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xEDF358", Offset = "0xEDF358", VA = "0xEDF358", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xEDF748", Offset = "0xEDF748", VA = "0xEDF748", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xEDF770", Offset = "0xEDF770", VA = "0xEDF770")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x20005D6")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x6002028")]
		[Address(RVA = "0xCB6C24", Offset = "0xCB6C24", VA = "0xCB6C24")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xCB6C64", Offset = "0xCB6C64", VA = "0xCB6C64", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xCB6C70", Offset = "0xCB6C70", VA = "0xCB6C70", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xCB6D30", Offset = "0xCB6D30", VA = "0xCB6D30", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xCB6D3C", Offset = "0xCB6D3C", VA = "0xCB6D3C", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xCB6D48", Offset = "0xCB6D48", VA = "0xCB6D48", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xCB6D50", Offset = "0xCB6D50", VA = "0xCB6D50", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xCB6D60", Offset = "0xCB6D60", VA = "0xCB6D60", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xCB6D70", Offset = "0xCB6D70", VA = "0xCB6D70", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xCB6E84", Offset = "0xCB6E84", VA = "0xCB6E84", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xCB7054", Offset = "0xCB7054", VA = "0xCB7054", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xCB7084", Offset = "0xCB7084", VA = "0xCB7084", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xCB70B4", Offset = "0xCB70B4", VA = "0xCB70B4", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xCB70C0", Offset = "0xCB70C0", VA = "0xCB70C0", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xCB70D0", Offset = "0xCB70D0", VA = "0xCB70D0", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xCB70DC", Offset = "0xCB70DC", VA = "0xCB70DC", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xCB70E4", Offset = "0xCB70E4", VA = "0xCB70E4", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xCB70EC", Offset = "0xCB70EC", VA = "0xCB70EC", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x20005D7")]
	public class BhapticsProject
	{
		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639720", Offset = "0x639720")]
		private Track[] <Tracks>k__BackingField;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639730", Offset = "0x639730")]
		private Layout <Layout>k__BackingField;

		[Token(Token = "0x170002DD")]
		public Track[] Tracks
		{
			[Token(Token = "0x600203A")]
			[Address(RVA = "0xCB8E48", Offset = "0xCB8E48", VA = "0xCB8E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642784", Offset = "0x642784")]
			get
			{
				return null;
			}
			[Token(Token = "0x600203B")]
			[Address(RVA = "0xCB8E50", Offset = "0xCB8E50", VA = "0xCB8E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642794", Offset = "0x642794")]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public Layout Layout
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0xCB8E58", Offset = "0xCB8E58", VA = "0xCB8E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6427A4", Offset = "0x6427A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600203D")]
			[Address(RVA = "0xCB8E60", Offset = "0xCB8E60", VA = "0xCB8E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6427B4", Offset = "0x6427B4")]
			set
			{
			}
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xCB8E68", Offset = "0xCB8E68", VA = "0xCB8E68")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xCB9098", Offset = "0xCB9098", VA = "0xCB9098")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xCB9090", Offset = "0xCB9090", VA = "0xCB9090")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x8E8490", Offset = "0x8E8490", VA = "0x8E8490")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x8F07DC", Offset = "0x8F07DC", VA = "0x8F07DC")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x20005D9")]
	public class Track
	{
		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639740", Offset = "0x639740")]
		private HapticEffect[] <Effects>k__BackingField;

		[Token(Token = "0x170002DF")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x6002043")]
			[Address(RVA = "0x10E5F30", Offset = "0x10E5F30", VA = "0x10E5F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6427C4", Offset = "0x6427C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002044")]
			[Address(RVA = "0x10E5F38", Offset = "0x10E5F38", VA = "0x10E5F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6427D4", Offset = "0x6427D4")]
			set
			{
			}
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x10E5F40", Offset = "0x10E5F40", VA = "0x10E5F40", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x10E5FD0", Offset = "0x10E5FD0", VA = "0x10E5FD0")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x10E61DC", Offset = "0x10E61DC", VA = "0x10E61DC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x10E61D4", Offset = "0x10E61D4", VA = "0x10E61D4")]
		public Track()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	public class HapticEffect
	{
		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639750", Offset = "0x639750")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639760", Offset = "0x639760")]
		private int <OffsetTime>k__BackingField;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639770", Offset = "0x639770")]
		private Dictionary<string, HapticEffectMode> <Modes>k__BackingField;

		[Token(Token = "0x170002E0")]
		public int StartTime
		{
			[Token(Token = "0x6002049")]
			[Address(RVA = "0x8EFC30", Offset = "0x8EFC30", VA = "0x8EFC30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6427E4", Offset = "0x6427E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600204A")]
			[Address(RVA = "0x8EFC38", Offset = "0x8EFC38", VA = "0x8EFC38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6427F4", Offset = "0x6427F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public int OffsetTime
		{
			[Token(Token = "0x600204B")]
			[Address(RVA = "0x8EFC40", Offset = "0x8EFC40", VA = "0x8EFC40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642804", Offset = "0x642804")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600204C")]
			[Address(RVA = "0x8EFC48", Offset = "0x8EFC48", VA = "0x8EFC48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642814", Offset = "0x642814")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x600204D")]
			[Address(RVA = "0x8EFC50", Offset = "0x8EFC50", VA = "0x8EFC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642824", Offset = "0x642824")]
			get
			{
				return null;
			}
			[Token(Token = "0x600204E")]
			[Address(RVA = "0x8EFC58", Offset = "0x8EFC58", VA = "0x8EFC58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642834", Offset = "0x642834")]
			set
			{
			}
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x8EFC60", Offset = "0x8EFC60", VA = "0x8EFC60", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x8EFF50", Offset = "0x8EFF50", VA = "0x8EFF50")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x8F0394", Offset = "0x8F0394", VA = "0x8F0394")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x8F0200", Offset = "0x8F0200", VA = "0x8F0200")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x20005DB")]
	public class Layout
	{
		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639780", Offset = "0x639780")]
		private string <Type>k__BackingField;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639790", Offset = "0x639790")]
		private Dictionary<string, LayoutObject[]> <Layouts>k__BackingField;

		[Token(Token = "0x170002E3")]
		public string Type
		{
			[Token(Token = "0x6002053")]
			[Address(RVA = "0xBA46F4", Offset = "0xBA46F4", VA = "0xBA46F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642844", Offset = "0x642844")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002054")]
			[Address(RVA = "0xBA46FC", Offset = "0xBA46FC", VA = "0xBA46FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642854", Offset = "0x642854")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x6002055")]
			[Address(RVA = "0xBA4704", Offset = "0xBA4704", VA = "0xBA4704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642864", Offset = "0x642864")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002056")]
			[Address(RVA = "0xBA470C", Offset = "0xBA470C", VA = "0xBA470C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642874", Offset = "0x642874")]
			set
			{
			}
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xBA4714", Offset = "0xBA4714", VA = "0xBA4714")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xBA4C10", Offset = "0xBA4C10", VA = "0xBA4C10")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xBA4AC4", Offset = "0xBA4AC4", VA = "0xBA4AC4")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x20005DC")]
	public class LayoutObject
	{
		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6397A0", Offset = "0x6397A0")]
		private int <Index>k__BackingField;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6397B0", Offset = "0x6397B0")]
		private float <X>k__BackingField;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6397C0", Offset = "0x6397C0")]
		private float <Y>k__BackingField;

		[Token(Token = "0x170002E5")]
		public int Index
		{
			[Token(Token = "0x600205A")]
			[Address(RVA = "0xBA5048", Offset = "0xBA5048", VA = "0xBA5048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642884", Offset = "0x642884")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600205B")]
			[Address(RVA = "0xBA5050", Offset = "0xBA5050", VA = "0xBA5050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642894", Offset = "0x642894")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public float X
		{
			[Token(Token = "0x600205C")]
			[Address(RVA = "0xBA5058", Offset = "0xBA5058", VA = "0xBA5058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6428A4", Offset = "0x6428A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600205D")]
			[Address(RVA = "0xBA5060", Offset = "0xBA5060", VA = "0xBA5060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6428B4", Offset = "0x6428B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public float Y
		{
			[Token(Token = "0x600205E")]
			[Address(RVA = "0xBA5068", Offset = "0xBA5068", VA = "0xBA5068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6428C4", Offset = "0x6428C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600205F")]
			[Address(RVA = "0xBA5070", Offset = "0xBA5070", VA = "0xBA5070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6428D4", Offset = "0x6428D4")]
			set
			{
			}
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xBA4ACC", Offset = "0xBA4ACC", VA = "0xBA4ACC")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xBA4F04", Offset = "0xBA4F04", VA = "0xBA4F04")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xBA5078", Offset = "0xBA5078", VA = "0xBA5078")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public class HapticEffectMode
	{
		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6397D0", Offset = "0x6397D0")]
		private FeedbackMode <Mode>k__BackingField;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6397E0", Offset = "0x6397E0")]
		private DotMode <DotMode>k__BackingField;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6397F0", Offset = "0x6397F0")]
		private PathMode <PathMode>k__BackingField;

		[Token(Token = "0x170002E8")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x6002063")]
			[Address(RVA = "0x8F07A4", Offset = "0x8F07A4", VA = "0x8F07A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6428E4", Offset = "0x6428E4")]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x6002064")]
			[Address(RVA = "0x8F07AC", Offset = "0x8F07AC", VA = "0x8F07AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6428F4", Offset = "0x6428F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public DotMode DotMode
		{
			[Token(Token = "0x6002065")]
			[Address(RVA = "0x8F07B4", Offset = "0x8F07B4", VA = "0x8F07B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642904", Offset = "0x642904")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002066")]
			[Address(RVA = "0x8F07BC", Offset = "0x8F07BC", VA = "0x8F07BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642914", Offset = "0x642914")]
			set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public PathMode PathMode
		{
			[Token(Token = "0x6002067")]
			[Address(RVA = "0x8F07C4", Offset = "0x8F07C4", VA = "0x8F07C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642924", Offset = "0x642924")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002068")]
			[Address(RVA = "0x8F07CC", Offset = "0x8F07CC", VA = "0x8F07CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642934", Offset = "0x642934")]
			set
			{
			}
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x8F0208", Offset = "0x8F0208", VA = "0x8F0208")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x8F0604", Offset = "0x8F0604", VA = "0x8F0604")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x8F07D4", Offset = "0x8F07D4", VA = "0x8F07D4")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x20005DE")]
	public class DotMode
	{
		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639800", Offset = "0x639800")]
		private bool <DotConnected>k__BackingField;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639810", Offset = "0x639810")]
		private DotModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x170002EB")]
		public bool DotConnected
		{
			[Token(Token = "0x600206C")]
			[Address(RVA = "0x9BA00C", Offset = "0x9BA00C", VA = "0x9BA00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642944", Offset = "0x642944")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600206D")]
			[Address(RVA = "0x9BA014", Offset = "0x9BA014", VA = "0x9BA014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642954", Offset = "0x642954")]
			set
			{
			}
		}

		[Token(Token = "0x170002EC")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x600206E")]
			[Address(RVA = "0x9BA020", Offset = "0x9BA020", VA = "0x9BA020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642964", Offset = "0x642964")]
			get
			{
				return null;
			}
			[Token(Token = "0x600206F")]
			[Address(RVA = "0x9BA028", Offset = "0x9BA028", VA = "0x9BA028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642974", Offset = "0x642974")]
			set
			{
			}
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x9BA030", Offset = "0x9BA030", VA = "0x9BA030")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x9BA52C", Offset = "0x9BA52C", VA = "0x9BA52C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x9BA26C", Offset = "0x9BA26C", VA = "0x9BA26C")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639820", Offset = "0x639820")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639830", Offset = "0x639830")]
		private int <EndTime>k__BackingField;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639840", Offset = "0x639840")]
		private DotModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x170002ED")]
		public int StartTime
		{
			[Token(Token = "0x6002073")]
			[Address(RVA = "0x9BAB08", Offset = "0x9BAB08", VA = "0x9BAB08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642984", Offset = "0x642984")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002074")]
			[Address(RVA = "0x9BAB10", Offset = "0x9BAB10", VA = "0x9BAB10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642994", Offset = "0x642994")]
			set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		public int EndTime
		{
			[Token(Token = "0x6002075")]
			[Address(RVA = "0x9BAB18", Offset = "0x9BAB18", VA = "0x9BAB18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6429A4", Offset = "0x6429A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002076")]
			[Address(RVA = "0x9BAB20", Offset = "0x9BAB20", VA = "0x9BAB20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6429B4", Offset = "0x6429B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x6002077")]
			[Address(RVA = "0x9BAB28", Offset = "0x9BAB28", VA = "0x9BAB28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6429C4", Offset = "0x6429C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002078")]
			[Address(RVA = "0x9BAB30", Offset = "0x9BAB30", VA = "0x9BAB30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6429D4", Offset = "0x6429D4")]
			set
			{
			}
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x9BA274", Offset = "0x9BA274", VA = "0x9BA274")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x9BA6BC", Offset = "0x9BA6BC", VA = "0x9BA6BC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x9BAB38", Offset = "0x9BAB38", VA = "0x9BAB38")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20005E0")]
	public class DotModeObject
	{
		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639850", Offset = "0x639850")]
		private int <Index>k__BackingField;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639860", Offset = "0x639860")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x170002F0")]
		public int Index
		{
			[Token(Token = "0x600207C")]
			[Address(RVA = "0x9BA910", Offset = "0x9BA910", VA = "0x9BA910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6429E4", Offset = "0x6429E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600207D")]
			[Address(RVA = "0x9BA918", Offset = "0x9BA918", VA = "0x9BA918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6429F4", Offset = "0x6429F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public float Intensity
		{
			[Token(Token = "0x600207E")]
			[Address(RVA = "0x9BA920", Offset = "0x9BA920", VA = "0x9BA920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642A04", Offset = "0x642A04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600207F")]
			[Address(RVA = "0x9BA928", Offset = "0x9BA928", VA = "0x9BA928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642A14", Offset = "0x642A14")]
			set
			{
			}
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x9BA930", Offset = "0x9BA930", VA = "0x9BA930")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x9BA9FC", Offset = "0x9BA9FC", VA = "0x9BA9FC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x9BA9F4", Offset = "0x9BA9F4", VA = "0x9BA9F4")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x20005E1")]
	public class PathMode
	{
		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639870", Offset = "0x639870")]
		private PathModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x170002F2")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0x97232C", Offset = "0x97232C", VA = "0x97232C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642A24", Offset = "0x642A24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002084")]
			[Address(RVA = "0x972334", Offset = "0x972334", VA = "0x972334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642A34", Offset = "0x642A34")]
			set
			{
			}
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x97233C", Offset = "0x97233C", VA = "0x97233C")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x9727FC", Offset = "0x9727FC", VA = "0x9727FC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x972524", Offset = "0x972524", VA = "0x972524")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x20005E2")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639880", Offset = "0x639880")]
		private PathModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x170002F3")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x6002088")]
			[Address(RVA = "0x972E70", Offset = "0x972E70", VA = "0x972E70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642A44", Offset = "0x642A44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002089")]
			[Address(RVA = "0x972E78", Offset = "0x972E78", VA = "0x972E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642A54", Offset = "0x642A54")]
			set
			{
			}
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0x97252C", Offset = "0x97252C", VA = "0x97252C")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x972920", Offset = "0x972920", VA = "0x972920")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x972E80", Offset = "0x972E80", VA = "0x972E80")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20005E3")]
	public class PathModeObject
	{
		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x639890", Offset = "0x639890")]
		private float <X>k__BackingField;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6398A0", Offset = "0x6398A0")]
		private float <Y>k__BackingField;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6398B0", Offset = "0x6398B0")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6398C0", Offset = "0x6398C0")]
		private int <Time>k__BackingField;

		[Token(Token = "0x170002F4")]
		public float X
		{
			[Token(Token = "0x600208D")]
			[Address(RVA = "0x972B84", Offset = "0x972B84", VA = "0x972B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642A64", Offset = "0x642A64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600208E")]
			[Address(RVA = "0x972B8C", Offset = "0x972B8C", VA = "0x972B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642A74", Offset = "0x642A74")]
			set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public float Y
		{
			[Token(Token = "0x600208F")]
			[Address(RVA = "0x972B94", Offset = "0x972B94", VA = "0x972B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642A84", Offset = "0x642A84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002090")]
			[Address(RVA = "0x972B9C", Offset = "0x972B9C", VA = "0x972B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642A94", Offset = "0x642A94")]
			set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		public float Intensity
		{
			[Token(Token = "0x6002091")]
			[Address(RVA = "0x972BA4", Offset = "0x972BA4", VA = "0x972BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642AA4", Offset = "0x642AA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002092")]
			[Address(RVA = "0x972BAC", Offset = "0x972BAC", VA = "0x972BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642AB4", Offset = "0x642AB4")]
			set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		public int Time
		{
			[Token(Token = "0x6002093")]
			[Address(RVA = "0x972BB4", Offset = "0x972BB4", VA = "0x972BB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642AC4", Offset = "0x642AC4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002094")]
			[Address(RVA = "0x972BBC", Offset = "0x972BBC", VA = "0x972BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x642AD4", Offset = "0x642AD4")]
			set
			{
			}
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x972BC4", Offset = "0x972BC4", VA = "0x972BC4")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x972CE4", Offset = "0x972CE4", VA = "0x972CE4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x972CDC", Offset = "0x972CDC", VA = "0x972CDC")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x20005E4")]
	internal class ParseUtil
	{
		[Token(Token = "0x6002098")]
		[Address(RVA = "0x971FAC", Offset = "0x971FAC", VA = "0x971FAC")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x97210C", Offset = "0x97210C", VA = "0x97210C")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x97226C", Offset = "0x97226C", VA = "0x97226C")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x20005E5")]
	public class BhapticsUtils
	{
		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x4002176")]
		public const string TypeHead = "Head";

		[Token(Token = "0x4002177")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x4002178")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x4002179")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x400217A")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x400217B")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x400217C")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x400217D")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x600209B")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xCBAAB0", Offset = "0xCBAAB0", VA = "0xCBAAB0")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xCBAAF4", Offset = "0xCBAAF4", VA = "0xCBAAF4")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xCBAAFC", Offset = "0xCBAAFC", VA = "0xCBAAFC")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xCBAB04", Offset = "0xCBAB04", VA = "0xCBAB04")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xCBAB24", Offset = "0xCBAB24", VA = "0xCBAB24")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xCBAB28", Offset = "0xCBAB28", VA = "0xCBAB28")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xCBAC48", Offset = "0xCBAC48", VA = "0xCBAC48")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xCB6550", Offset = "0xCB6550", VA = "0xCB6550")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xCB2EB4", Offset = "0xCB2EB4", VA = "0xCB2EB4")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xCBACA0", Offset = "0xCBACA0", VA = "0xCBACA0")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x8E839C", Offset = "0x8E839C", VA = "0x8E839C")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6398D0", Offset = "0x6398D0")]
		public float Intensity;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6398EC", Offset = "0x6398EC")]
		public float Duration;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x170002F8")]
		public int ClipDurationTime
		{
			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x8E8458", Offset = "0x8E8458", VA = "0x8E8458")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x8E860C", Offset = "0x8E860C", VA = "0x8E860C", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x8E8674", Offset = "0x8E8674", VA = "0x8E8674", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x8E868C", Offset = "0x8E868C", VA = "0x8E868C", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x8E86A4", Offset = "0x8E86A4", VA = "0x8E86A4", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x8E86B8", Offset = "0x8E86B8", VA = "0x8E86B8", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x8E86C8", Offset = "0x8E86C8", VA = "0x8E86C8", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x8E87F8", Offset = "0x8E87F8", VA = "0x8E87F8", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x8E8918", Offset = "0x8E8918", VA = "0x8E8918", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x8E8BA4", Offset = "0x8E8BA4", VA = "0x8E8BA4", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x8E8570", Offset = "0x8E8570", VA = "0x8E8570")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x8E8BB4", Offset = "0x8E8BB4", VA = "0x8E8BB4")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x20005E8")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x8ED5DC", Offset = "0x8ED5DC", VA = "0x8ED5DC")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x20005E9")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x4002184")]
		None,
		[Token(Token = "0x4002185")]
		Tactal,
		[Token(Token = "0x4002186")]
		TactSuit,
		[Token(Token = "0x4002187")]
		Tactosy_arms,
		[Token(Token = "0x4002188")]
		Tactosy_hands,
		[Token(Token = "0x4002189")]
		Tactosy_feet
	}
	[Serializable]
	[Token(Token = "0x20005EA")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x400218B")]
		VestFront,
		[Token(Token = "0x400218C")]
		VestBack,
		[Token(Token = "0x400218D")]
		Head,
		[Token(Token = "0x400218E")]
		RightForearm,
		[Token(Token = "0x400218F")]
		LeftForearm,
		[Token(Token = "0x4002190")]
		LeftHand,
		[Token(Token = "0x4002191")]
		RightHand,
		[Token(Token = "0x4002192")]
		LeftFoot,
		[Token(Token = "0x4002193")]
		RightFoot
	}
	[Token(Token = "0x20005EB")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x8EF410", Offset = "0x8EF410", VA = "0x8EF410", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x8EF47C", Offset = "0x8EF47C", VA = "0x8EF47C", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x8EF498", Offset = "0x8EF498", VA = "0x8EF498", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x8EF4B0", Offset = "0x8EF4B0", VA = "0x8EF4B0", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x8EF4C4", Offset = "0x8EF4C4", VA = "0x8EF4C4", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x8EF4D4", Offset = "0x8EF4D4", VA = "0x8EF4D4", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x8EF604", Offset = "0x8EF604", VA = "0x8EF604", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x8EF720", Offset = "0x8EF720", VA = "0x8EF720", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x8EF82C", Offset = "0x8EF82C", VA = "0x8EF82C", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x8EF830", Offset = "0x8EF830", VA = "0x8EF830", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x8EF910", Offset = "0x8EF910", VA = "0x8EF910", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x8EFA1C", Offset = "0x8EFA1C", VA = "0x8EFA1C", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x8EFB14", Offset = "0x8EFB14", VA = "0x8EFB14", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x8E8BB0", Offset = "0x8E8BB0", VA = "0x8E8BB0", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x8EFC20", Offset = "0x8EFC20", VA = "0x8EFC20")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x8E8BC8", Offset = "0x8E8BC8", VA = "0x8E8BC8")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x20005EC")]
	public class HapticReceiver : MonoBehaviour
	{
		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x8F07E4", Offset = "0x8F07E4", VA = "0x8F07E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x8F0968", Offset = "0x8F0968", VA = "0x8F0968")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x8F0B24", Offset = "0x8F0B24", VA = "0x8F0B24")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x8F0A34", Offset = "0x8F0A34", VA = "0x8F0A34")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x8F0D2C", Offset = "0x8F0D2C", VA = "0x8F0D2C")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x20005ED")]
	public class HapticSender : MonoBehaviour
	{
		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x8F0D3C", Offset = "0x8F0D3C", VA = "0x8F0D3C")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x8F0C14", Offset = "0x8F0C14", VA = "0x8F0C14")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x8F0FD0", Offset = "0x8F0FD0", VA = "0x8F0FD0")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x8F10E0", Offset = "0x8F10E0", VA = "0x8F10E0")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x8F1214", Offset = "0x8F1214", VA = "0x8F1214")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x8F1340", Offset = "0x8F1340", VA = "0x8F1340")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x8F0D48", Offset = "0x8F0D48", VA = "0x8F0D48")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x8F1348", Offset = "0x8F1348", VA = "0x8F1348")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x20005EE")]
	public enum PositionTag
	{
		[Token(Token = "0x400219F")]
		Body,
		[Token(Token = "0x40021A0")]
		Head,
		[Token(Token = "0x40021A1")]
		LeftArm,
		[Token(Token = "0x40021A2")]
		RightArm,
		[Token(Token = "0x40021A3")]
		Default
	}
	[Token(Token = "0x20005EF")]
	public class HapticSource : MonoBehaviour
	{
		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x630E14", Offset = "0x630E14")]
		private sealed class <PlayCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x170002F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020DF")]
				[Address(RVA = "0x7DC0C4", Offset = "0x7DC0C4", VA = "0x7DC0C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020E1")]
				[Address(RVA = "0x7DC10C", Offset = "0x7DC10C", VA = "0x7DC10C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020DC")]
			[Address(RVA = "0x7DBFAC", Offset = "0x7DBFAC", VA = "0x7DBFAC")]
			[DebuggerHidden]
			public <PlayCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60020DD")]
			[Address(RVA = "0x7DBFD8", Offset = "0x7DBFD8", VA = "0x7DBFD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020DE")]
			[Address(RVA = "0x7DBFDC", Offset = "0x7DBFDC", VA = "0x7DBFDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020E0")]
			[Address(RVA = "0x7DC0CC", Offset = "0x7DC0CC", VA = "0x7DC0CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x630E24", Offset = "0x630E24")]
		private sealed class <PlayLoopCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x40021B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x170002FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020E5")]
				[Address(RVA = "0x7DC32C", Offset = "0x7DC32C", VA = "0x7DC32C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020E7")]
				[Address(RVA = "0x7DC374", Offset = "0x7DC374", VA = "0x7DC374", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020E2")]
			[Address(RVA = "0x7DC114", Offset = "0x7DC114", VA = "0x7DC114")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60020E3")]
			[Address(RVA = "0x7DC140", Offset = "0x7DC140", VA = "0x7DC140", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020E4")]
			[Address(RVA = "0x7DC144", Offset = "0x7DC144", VA = "0x7DC144", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020E6")]
			[Address(RVA = "0x7DC334", Offset = "0x7DC334", VA = "0x7DC334", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loopCoroutine;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x8F1358", Offset = "0x8F1358", VA = "0x8F1358")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x8F1994", Offset = "0x8F1994", VA = "0x8F1994")]
		public void Play()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x8F1694", Offset = "0x8F1694", VA = "0x8F1694")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x8F1A18", Offset = "0x8F1A18", VA = "0x8F1A18")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x8F1C40", Offset = "0x8F1C40", VA = "0x8F1C40")]
		public void Stop()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x8F1D38", Offset = "0x8F1D38", VA = "0x8F1D38")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x8F1BB0", Offset = "0x8F1BB0", VA = "0x8F1BB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x642AE4", Offset = "0x642AE4")]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x8F1820", Offset = "0x8F1820", VA = "0x8F1820")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x8F1998", Offset = "0x8F1998", VA = "0x8F1998")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x642B4C", Offset = "0x642B4C")]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x8F1DE0", Offset = "0x8F1DE0", VA = "0x8F1DE0")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x20005F2")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x8F1DE8", Offset = "0x8F1DE8", VA = "0x8F1DE8")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x20005F3")]
	public interface IHaptic
	{
		[Token(Token = "0x60020E9")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x60020EA")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x60020EB")]
		bool IsPlaying(string key);

		[Token(Token = "0x60020EC")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x60020ED")]
		bool IsPlaying();

		[Token(Token = "0x60020EE")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x60020EF")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x60020F0")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x60020F1")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x60020F2")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x60020F3")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x60020F4")]
		void SubmitRegistered(string key);

		[Token(Token = "0x60020F5")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x60020F6")]
		void TurnOff(string key);

		[Token(Token = "0x60020F7")]
		void TurnOff();

		[Token(Token = "0x60020F8")]
		void Dispose();

		[Token(Token = "0x60020F9")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x20005F4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x630E34", Offset = "0x630E34")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Point[] DefaultPoints;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x639958", Offset = "0x639958")]
		public int TimeMillis;

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xC6E3EC", Offset = "0xC6E3EC", VA = "0xC6E3EC", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xC6E8FC", Offset = "0xC6E8FC", VA = "0xC6E8FC", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xC6E68C", Offset = "0xC6E68C", VA = "0xC6E68C")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xC6E7BC", Offset = "0xC6E7BC", VA = "0xC6E7BC")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xC6E9B0", Offset = "0xC6E9B0", VA = "0xC6E9B0")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F5")]
	public class Point
	{
		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x639974", Offset = "0x639974")]
		public float X;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x63998C", Offset = "0x63998C")]
		public float Y;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6399A4", Offset = "0x6399A4")]
		public int Intensity;

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x977FE8", Offset = "0x977FE8", VA = "0x977FE8")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F6")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x40021BD")]
		DotMode = 1,
		[Token(Token = "0x40021BE")]
		PathMode
	}
	[Token(Token = "0x20005F7")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6399C0", Offset = "0x6399C0")]
		[SerializeField]
		protected float TactFileAngleX;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x639A04", Offset = "0x639A04")]
		[SerializeField]
		protected float TactFileOffsetY;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x9C5E0C", Offset = "0x9C5E0C", VA = "0x9C5E0C", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x9C5E70", Offset = "0x9C5E70", VA = "0x9C5E70", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x9C5E84", Offset = "0x9C5E84", VA = "0x9C5E84", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x9C5E98", Offset = "0x9C5E98", VA = "0x9C5E98", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x9C5EA8", Offset = "0x9C5EA8", VA = "0x9C5EA8", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x9C5EB8", Offset = "0x9C5EB8", VA = "0x9C5EB8", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x9C6168", Offset = "0x9C6168", VA = "0x9C6168", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x9C6190", Offset = "0x9C6190", VA = "0x9C6190")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x20005F8")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x9C6250", Offset = "0x9C6250", VA = "0x9C6250")]
		private void Start()
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x9C65EC", Offset = "0x9C65EC", VA = "0x9C65EC")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x9C66C0", Offset = "0x9C66C0", VA = "0x9C66C0")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x9C6888", Offset = "0x9C6888", VA = "0x9C6888")]
		public VisualFeedback()
		{
		}
	}
}
namespace AmazingAssets.VertexAmbientOcclusionGenerator.Example
{
	[Token(Token = "0x20005F9")]
	public class Runtime : MonoBehaviour
	{
		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rayLength;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x639A44", Offset = "0x639A44")]
		public float details;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask layerMask;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material material;

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xC6C46C", Offset = "0xC6C46C", VA = "0xC6C46C")]
		private void SetupUniversalCameraData(Camera camera)
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xC6C4F8", Offset = "0xC6C4F8", VA = "0xC6C4F8")]
		private void Start()
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xC6C78C", Offset = "0xC6C78C", VA = "0xC6C78C")]
		public Runtime()
		{
		}
	}
}
